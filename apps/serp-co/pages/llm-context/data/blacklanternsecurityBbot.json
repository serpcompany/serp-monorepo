[
  {
    "owner": "blacklanternsecurity",
    "repo": "bbot",
    "content": "TITLE: Defining Module Configuration Options in Python\nDESCRIPTION: Example from the nmap module showing how to define default configuration options and their descriptions in a BBOT module, and how to access these options in the setup method.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/module_howto.md#2025-04-23_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass nmap(BaseModule):\n    # ...\n    options = {\n        \"top_ports\": 100,\n        \"ports\": \"\",\n        \"timing\": \"T4\",\n        \"skip_host_discovery\": True,\n    }\n    options_desc = {\n        \"top_ports\": \"Top ports to scan (default 100) (to override, specify 'ports')\",\n        \"ports\": \"Ports to scan\",\n        \"timing\": \"-T<0-5>: Set timing template (higher is faster)\",\n        \"skip_host_discovery\": \"skip host discovery (-Pn)\",\n    }\n\n    async def setup(self):\n        self.ports = self.config.get(\"ports\", \"\")\n        self.timing = self.config.get(\"timing\", \"T4\")\n        self.top_ports = self.config.get(\"top_ports\", 100)\n        self.skip_host_discovery = self.config.get(\"skip_host_discovery\", True)\n        return True\n```\n\n----------------------------------------\n\nTITLE: BBOT Command-Line Help Documentation\nDESCRIPTION: Comprehensive help output for BBOT command-line interface. It details all available options including targeting, module selection, preset configuration, output formats, and provides usage examples.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/advanced.md#2025-04-23_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nusage: bbot [-h] [-t TARGET [TARGET ...]] [-w WHITELIST [WHITELIST ...]]\n               [-b BLACKLIST [BLACKLIST ...]] [--strict-scope]\n               [-p [PRESET ...]] [-c [CONFIG ...]] [-lp]\n               [-m MODULE [MODULE ...]] [-l] [-lmo] [-em MODULE [MODULE ...]]\n               [-f FLAG [FLAG ...]] [-lf] [-rf FLAG [FLAG ...]]\n               [-ef FLAG [FLAG ...]] [--allow-deadly] [-n SCAN_NAME] [-v] [-d]\n               [-s] [--force] [-y] [--fast-mode] [--dry-run]\n               [--current-preset] [--current-preset-full] [-mh MODULE]\n               [-o DIR] [-om MODULE [MODULE ...]] [-lo] [--json] [--brief]\n               [--event-types EVENT_TYPES [EVENT_TYPES ...]] [--exclude-cdn]\n               [--no-deps | --force-deps | --retry-deps |\n               --ignore-failed-deps | --install-all-deps] [--version]\n               [--proxy HTTP_PROXY] [-H CUSTOM_HEADERS [CUSTOM_HEADERS ...]]\n               [--custom-yara-rules CUSTOM_YARA_RULES]\n               [--user-agent USER_AGENT]\n\nBighuge BLS OSINT Tool\n\noptions:\n  -h, --help            show this help message and exit\n\nTarget:\n  -t, --targets TARGET [TARGET ...]\n                        Targets to seed the scan\n  -w, --whitelist WHITELIST [WHITELIST ...]\n                        What's considered in-scope (by default it's the same as --targets)\n  -b, --blacklist BLACKLIST [BLACKLIST ...]\n                        Don't touch these things\n  --strict-scope        Don't consider subdomains of target/whitelist to be in-scope\n\nPresets:\n  -p, --preset [PRESET ...]\n                        Enable BBOT preset(s)\n  -c, --config [CONFIG ...]\n                        Custom config options in key=value format: e.g. 'modules.shodan.api_key=1234'\n  -lp, --list-presets   List available presets.\n\nModules:\n  -m, --modules MODULE [MODULE ...]\n                        Modules to enable. Choices: affiliates,ajaxpro,anubisdb,apkpure,asn,azure_realm,azure_tenant,baddns,baddns_direct,baddns_zone,badsecrets,bevigil,binaryedge,bucket_amazon,bucket_azure,bucket_digitalocean,bucket_file_enum,bucket_firebase,bucket_google,bufferoverrun,builtwith,bypass403,c99,censys,certspotter,chaos,code_repository,credshed,crt,crt_db,dastardly,dehashed,digitorus,dnsbimi,dnsbrute,dnsbrute_mutations,dnscaa,dnscommonsrv,dnsdumpster,dnstlsrpt,docker_pull,dockerhub,dotnetnuke,emailformat,extractous,ffuf,ffuf_shortnames,filedownload,fingerprintx,fullhunt,generic_ssrf,git,git_clone,gitdumper,github_codesearch,github_org,github_workflows,gitlab,google_playstore,gowitness,hackertarget,host_header,httpx,hunt,hunterio,iis_shortnames,ip2location,ipneighbor,ipstack,jadx,leakix,myssl,newsletters,ntlm,nuclei,oauth,otx,paramminer_cookies,paramminer_getparams,paramminer_headers,passivetotal,pgp,portfilter,portscan,postman,postman_download,rapiddns,robots,securitytrails,securitytxt,shodan_dns,shodan_idb,sitedossier,skymem,smuggler,social,sslcert,subdomaincenter,subdomainradar,telerik,trickest,trufflehog,url_manipulation,urlscan,vhost,viewdns,virustotal,wafw00f,wappalyzer,wayback,wpscan,zoomeye\n  -l, --list-modules    List available modules.\n  -lmo, --list-module-options\n                        Show all module config options\n  -em, --exclude-modules MODULE [MODULE ...]\n                        Exclude these modules.\n  -f, --flags FLAG [FLAG ...]\n                        Enable modules by flag. Choices: active,affiliates,aggressive,baddns,cloud-enum,code-enum,deadly,email-enum,iis-shortnames,passive,portscan,report,safe,service-enum,slow,social-enum,subdomain-enum,subdomain-hijack,web-basic,web-paramminer,web-screenshots,web-thorough\n  -lf, --list-flags     List available flags.\n  -rf, --require-flags FLAG [FLAG ...]\n                        Only enable modules with these flags (e.g. -rf passive)\n  -ef, --exclude-flags FLAG [FLAG ...]\n                        Disable modules with these flags. (e.g. -ef aggressive)\n  --allow-deadly        Enable the use of highly aggressive modules\n\nScan:\n  -n, --name SCAN_NAME  Name of scan (default: random)\n  -v, --verbose         Be more verbose\n  -d, --debug           Enable debugging\n  -s, --silent          Be quiet\n  --force               Run scan even in the case of condition violations or failed module setups\n  -y, --yes             Skip scan confirmation prompt\n  --fast-mode           Scan only the provided targets as fast as possible, with no extra discovery\n  --dry-run             Abort before executing scan\n  --current-preset      Show the current preset in YAML format\n  --current-preset-full\n                        Show the current preset in its full form, including defaults\n  -mh, --module-help MODULE\n                        Show help for a specific module\n\nOutput:\n  -o, --output-dir DIR  Directory to output scan results\n  -om, --output-modules MODULE [MODULE ...]\n                        Output module(s). Choices: asset_inventory,csv,discord,emails,http,json,mysql,neo4j,nmap_xml,postgres,python,slack,splunk,sqlite,stdout,subdomains,teams,txt,web_parameters,web_report,websocket\n  -lo, --list-output-modules\n                        List available output modules\n  --json, -j            Output scan data in JSON format\n  --brief, -br          Output only the data itself\n  --event-types EVENT_TYPES [EVENT_TYPES ...]\n                        Choose which event types to display\n  --exclude-cdn, -ec    Filter out unwanted open ports on CDNs/WAFs (80,443 only)\n\nModule dependencies:\n  Control how modules install their dependencies\n\n  --no-deps             Don't install module dependencies\n  --force-deps          Force install all module dependencies\n  --retry-deps          Try again to install failed module dependencies\n  --ignore-failed-deps  Run modules even if they have failed dependencies\n  --install-all-deps    Install dependencies for all modules\n\nMisc:\n  --version             show BBOT version and exit\n  --proxy HTTP_PROXY    Use this proxy for all HTTP requests\n  -H, --custom-headers CUSTOM_HEADERS [CUSTOM_HEADERS ...]\n                        List of custom headers as key value pairs (header=value).\n  --custom-yara-rules, -cy CUSTOM_YARA_RULES\n                        Add custom yara rules to excavate\n  --user-agent, -ua USER_AGENT\n                        Set the user-agent for all HTTP requests\n\nEXAMPLES\n\n    Subdomains:\n        bbot -t evilcorp.com -p subdomain-enum\n\n    Subdomains (passive only):\n        bbot -t evilcorp.com -p subdomain-enum -rf passive\n\n    Subdomains + port scan + web screenshots:\n        bbot -t evilcorp.com -p subdomain-enum -m portscan gowitness -n my_scan -o .\n\n    Subdomains + basic web scan:\n        bbot -t evilcorp.com -p subdomain-enum web-basic\n\n    Web spider:\n        bbot -t www.evilcorp.com -p spider -c web.spider_distance=2 web.spider_depth=2\n\n    Everything everywhere all at once:\n        bbot -t evilcorp.com -p kitchen-sink\n\n    List modules:\n        bbot -l\n\n    List output modules:\n        bbot -lo\n\n    List presets:\n        bbot -lp\n\n    List flags:\n        bbot -lf\n\n    Show help for a specific module:\n        bbot -mh <module_name>\n\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic WHOIS Module in Python\nDESCRIPTION: A complete example of a simple BBOT module that performs WHOIS lookups. It demonstrates the module structure, including watched and produced events, configuration options, setup method, and event handling logic.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/module_howto.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom bbot.modules.base import BaseModule\n\nclass whois(BaseModule):\n    watched_events = [\"DNS_NAME\"] # watch for DNS_NAME events\n    produced_events = [\"WHOIS\"] # we produce WHOIS events\n    flags = [\"passive\", \"safe\"]\n    meta = {\"description\": \"Query WhoisXMLAPI for WHOIS data\"}\n    options = {\"api_key\": \"\"} # module config options\n    options_desc = {\"api_key\": \"WhoisXMLAPI Key\"}\n    per_domain_only = True # only run once per domain\n\n    base_url = \"https://www.whoisxmlapi.com/whoisserver/WhoisService\"\n\n    # one-time setup - runs at the beginning of the scan\n    async def setup(self):\n        self.api_key = self.config.get(\"api_key\")\n        if not self.api_key:\n            # soft-fail if no API key is set\n            return None, \"Must set API key\"\n\n    async def handle_event(self, event):\n        self.hugesuccess(f\"Got {event} (event.data: {event.data})\")\n        _, domain = self.helpers.split_domain(event.data)\n        url = f\"{self.base_url}?apiKey={self.api_key}&domainName={domain}&outputFormat=JSON\"\n        self.hugeinfo(f\"Visiting {url}\")\n        response = await self.helpers.request(url)\n        if response is not None:\n            await self.emit_event(response.json(), \"WHOIS\", parent=event)\n```\n\n----------------------------------------\n\nTITLE: Installing BBOT via pipx\nDESCRIPTION: Commands for installing both stable and development versions of BBOT using pipx package manager\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# stable version\npipx install bbot\n\n# bleeding edge (dev branch)\npipx install --pip-args '\\--pre' bbot\n```\n\n----------------------------------------\n\nTITLE: Using BBOT Helper Functions in Python Module\nDESCRIPTION: Demonstrates how to use various BBOT helper functions within a module class, including making web requests, performing DNS resolution, executing shell commands, and splitting domain names.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/helpers/index.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass MyModule(BaseModule):\n\n    ...\n\n    async def handle_event(self, event):\n        # Web Request\n        response = await self.helpers.request(\"https://www.evilcorp.com\")\n\n        # DNS query\n        for ip in await self.helpers.resolve(\"www.evilcorp.com\"):\n            self.hugesuccess(str(ip))\n\n        # Execute shell command\n        completed_process = await self.run_process(\"ls\", \"-l\")\n        self.hugesuccess(completed_process.stdout)\n\n        # Split a DNS name into subdomain / domain\n        self.helpers.split_domain(\"www.internal.evilcorp.co.uk\")\n        # (\"www.internal\", \"evilcorp.co.uk\")\n```\n\n----------------------------------------\n\nTITLE: BBOT Default Configuration Settings\nDESCRIPTION: The complete default configuration for BBOT, including settings for basic options, scope, DNS, web interactions, engine parameters, and advanced options.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/configuration.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n### BASIC OPTIONS ###\n\n# BBOT working directory\nhome: ~/.bbot\n# How many scan results to keep before cleaning up the older ones\nkeep_scans: 20\n# Interval for displaying status messages\nstatus_frequency: 15\n# Include the raw data of files (i.e. PDFs, web screenshots) as base64 in the event\nfile_blobs: false\n# Include the raw data of directories (i.e. git repos) as tar.gz base64 in the event\nfolder_blobs: false\n\n### SCOPE ###\n\nscope:\n  # strict scope means only exact DNS names are considered in-scope\n  # subdomains are not included unless they are explicitly provided in the target list\n  strict: false\n  # Filter by scope distance which events are displayed in the output\n  # 0 == show only in-scope events (affiliates are always shown)\n  # 1 == show all events up to distance-1 (1 hop from target)\n  report_distance: 0\n  # How far out from the main scope to search\n  # Do not change this setting unless you know what you're doing\n  search_distance: 0\n\n### DNS ###\n\ndns:\n  # Completely disable DNS resolution (careful if you have IP whitelists/blacklists, consider using minimal=true instead)\n  disable: false\n  # Speed up scan by not creating any new DNS events, and only resolving A and AAAA records\n  minimal: false\n  # How many instances of the dns module to run concurrently\n  threads: 25\n  # How many concurrent DNS resolvers to use when brute-forcing\n  # (under the hood this is passed through directly to massdns -s)\n  brute_threads: 1000\n  # nameservers to use for DNS brute-forcing\n  # default is updated weekly and contains ~10K high-quality public servers\n  brute_nameservers: https://raw.githubusercontent.com/blacklanternsecurity/public-dns-servers/master/nameservers.txt\n  # How far away from the main target to explore via DNS resolution (independent of scope.search_distance)\n  # This is safe to change\n  search_distance: 1\n  # Limit how many DNS records can be followed in a row (stop malicious/runaway DNS records)\n  runaway_limit: 5\n  # DNS query timeout\n  timeout: 5\n  # How many times to retry DNS queries\n  retries: 1\n  # Completely disable BBOT's DNS wildcard detection\n  wildcard_disable: False\n  # Disable BBOT's DNS wildcard detection for select domains\n  wildcard_ignore: []\n  # How many sanity checks to make when verifying wildcard DNS\n  # Increase this value if BBOT's wildcard detection isn't working\n  wildcard_tests: 10\n  # Skip DNS requests for a certain domain and rdtype after encountering this many timeouts or SERVFAILs\n  # This helps prevent faulty DNS servers from hanging up the scan\n  abort_threshold: 50\n  # Don't show PTR records containing IP addresses\n  filter_ptrs: true\n  # Enable/disable debug messages for DNS queries\n  debug: false\n  # For performance reasons, always skip these DNS queries\n  # Microsoft's DNS infrastructure is misconfigured so that certain queries to mail.protection.outlook.com always time out\n  omit_queries:\n    - SRV:mail.protection.outlook.com\n    - CNAME:mail.protection.outlook.com\n    - TXT:mail.protection.outlook.com\n\n### WEB ###\n\nweb:\n  # HTTP proxy\n  http_proxy:\n  # Web user-agent\n  user_agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.2151.97\n  # Set the maximum number of HTTP links that can be followed in a row (0 == no spidering allowed)\n  spider_distance: 0\n  # Set the maximum directory depth for the web spider\n  spider_depth: 1\n  # Set the maximum number of links that can be followed per page\n  spider_links_per_page: 25\n  # HTTP timeout (for Python requests; API calls, etc.)\n  http_timeout: 10\n  # HTTP timeout (for httpx)\n  httpx_timeout: 5\n  # Custom HTTP headers (e.g. cookies, etc.)\n  # in the format { \"Header-Key\": \"header_value\" }\n  # These are attached to all in-scope HTTP requests\n  # Note that some modules (e.g. github) may end up sending these to out-of-scope resources\n  http_headers: {}\n  # HTTP retries (for Python requests; API calls, etc.)\n  http_retries: 1\n  # HTTP retries (for httpx)\n  httpx_retries: 1\n  # Enable/disable debug messages for web requests/responses\n  debug: false\n  # Maximum number of HTTP redirects to follow\n  http_max_redirects: 5\n  # Whether to verify SSL certificates\n  ssl_verify: false\n\n### ENGINE ###\n\nengine:\n  debug: false\n\n# Tool dependencies\ndeps:\n  ffuf:\n    version: \"2.1.0\"\n  # How to handle installation of module dependencies\n  # Choices are:\n  #  - abort_on_failure (default) - if a module dependency fails to install, abort the scan\n  #  - retry_failed - try again to install failed dependencies\n  #  - ignore_failed - run the scan regardless of what happens with dependency installation\n  #  - disable - completely disable BBOT's dependency system (you are responsible for installing tools, pip packages, etc.)\n  behavior: abort_on_failure\n\n### ADVANCED OPTIONS ###\n\n# Load BBOT modules from these custom paths\nmodule_dirs: []\n\n# Infer certain events from others, e.g. IPs from IP ranges, DNS_NAMEs from URLs, etc.\nspeculate: True\n# Passively search event data for URLs, hostnames, emails, etc.\nexcavate: True\n# Summarize activity at the end of a scan\naggregate: True\n# DNS resolution, wildcard detection, etc.\ndnsresolve: True\n# Cloud provider tagging\ncloudcheck: True\n\n# Strip querystring from URLs by default\nurl_querystring_remove: True\n# When query string is retained, by default collapse parameter values down to a single value per parameter\nurl_querystring_collapse: True\n\n# Completely ignore URLs with these extensions\nurl_extension_blacklist:\n  # images\n  - png\n  - jpg\n  - bmp\n  - ico\n  - jpeg\n  - gif\n  - svg\n  - webp\n  # web/fonts\n  - css\n  - woff\n  - woff2\n  - ttf\n  - eot\n  - sass\n  - scss\n  # audio\n  - mp3\n  - m4a\n  - wav\n  - flac\n  # video\n  - mp4\n  - mkv\n  - avi\n  - wmv\n  - mov\n  - flv\n  - webm\n# Distribute URLs with these extensions only to httpx (these are omitted from output)\nurl_extension_httpx_only:\n  - js\n\n# These url extensions are almost always static, so we exclude them from modules that fuzz things\nurl_extension_static:\n  - pdf\n  - doc\n  - docx\n  - xls\n  - xlsx\n  - ppt\n  - pptx\n  - txt\n  - csv\n  - xml\n  - yaml\n  - ini\n  - log\n  - conf\n  - cfg\n  - env\n  - md\n  - rtf\n  - tiff\n  - bmp\n  - jpg\n  - jpeg\n  - png\n  - gif\n  - svg\n  - ico\n  - mp3\n  - wav\n  - flac\n  - mp4\n  - mov\n  - avi\n  - mkv\n  - webm\n  - zip\n  - tar\n  - gz\n  - bz2\n  - 7z\n  - rar\n  \n# Don't output these types of events (they are still distributed to modules)\nomit_event_types:\n  - HTTP_RESPONSE\n  - RAW_TEXT\n  - URL_UNVERIFIED\n  - DNS_NAME_UNRESOLVED\n  - FILESYSTEM\n  - WEB_PARAMETER\n  - RAW_DNS_RECORD\n  # - IP_ADDRESS\n\n# Custom interactsh server settings\ninteractsh_server: null\ninteractsh_token: null\ninteractsh_disable: false\n```\n\n----------------------------------------\n\nTITLE: Using BBOT as a Synchronous Python Library\nDESCRIPTION: Example of how to use BBOT as a synchronous Python library for subdomain enumeration. This snippet creates a Scanner object with a target domain and preset, then iterates through the scan results.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/advanced.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom bbot.scanner import Scanner\n\nif __name__ == \"__main__\":\n    scan = Scanner(\"evilcorp.com\", presets=[\"subdomain-enum\"])\n    for event in scan.start():\n        print(event)\n```\n\n----------------------------------------\n\nTITLE: Running BBOT with Docker\nDESCRIPTION: Commands for running BBOT using Docker containers, including stable and development versions\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/index.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# bleeding edge (dev)\ndocker run -it blacklanternsecurity/bbot --help\n\n# stable\ndocker run -it blacklanternsecurity/bbot:stable --help\n\n# helper script\ngit clone https://github.com/blacklanternsecurity/bbot && cd bbot\n./bbot-docker.sh --help\n```\n\n----------------------------------------\n\nTITLE: Initializing BaseModule with Scanner in Python\nDESCRIPTION: Constructor method for BaseModule that initializes the module with a scanner instance. It sets up essential attributes like event queues, HTTP clients, and module configuration.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/basemodule.md#2025-04-23_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(self, scanner=None):\n        from bbot.scanner import Scanner as BBOTScanner\n\n        self.blacklist = set()\n        self.output_masks = set()\n        self.modules_run = set()\n        self.completed = threading.Event()\n        self._seen_hashes = set()\n        self.watching_targets = {}\n        self._abort = False\n        self.start_time = None\n        self.stop_time = None\n        self.start_event = None\n        self.new_event_time = None\n        self._cached_events = {}\n        self._in_q = eventlet.queue.Queue()\n        self._event_semaphore = eventlet.semaphore.Semaphore(500)\n        self.name = getattr(self, \"name\", get_module_name(self.__module__))\n        self.batch_size = 100\n        self.batch_wait = 0.0\n        self.allow_events_during_abort = False\n        self._scanner_registered = False\n        self._event_stats = {}\n        self._processed_stats = defaultdict(int)\n        self._batch = []\n        self._lock = eventlet.semaphore.Semaphore(1)\n        self._masked_events = {}\n        self._http_timeout = 30\n        self._task_pool = TaskPool(threshold=9999)\n        self.errors = {}\n        self._error_count = defaultdict(int)\n        self.scanner = None\n        if scanner:\n            if isinstance(scanner, BBOTScanner):\n                self.scanner = scanner\n            else:\n                self.scanner = scanner.scanner\n        self.human_name = get_human_name(self)\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of BBOT Module Flags\nDESCRIPTION: A detailed table listing all available flags in the BBOT tool, showing the number of modules that implement each flag, descriptions of what each flag represents, and a comprehensive list of all modules associated with each flag.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/index.md#2025-04-23_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- BBOT MODULE FLAGS -->\n| Flag             | # Modules   | Description                                                    | Modules|\n|------------------|-------------|----------------------------------------------------------------||\n| safe             | 94          | Non-intrusive, safe to run                                     | affiliates, aggregate, ajaxpro, anubisdb, apkpure, asn, azure_realm, azure_tenant, baddns, baddns_direct, baddns_zone, badsecrets, bevigil, binaryedge, bucket_amazon, bucket_azure, bucket_digitalocean, bucket_file_enum, bucket_firebase, bucket_google, bufferoverrun, builtwith, c99, censys, certspotter, chaos, code_repository, credshed, crt, crt_db, dehashed, digitorus, dnsbimi, dnscaa, dnscommonsrv, dnsdumpster, dnstlsrpt, docker_pull, dockerhub, emailformat, extractous, filedownload, fingerprintx, fullhunt, git, git_clone, gitdumper, github_codesearch, github_org, github_workflows, gitlab, google_playstore, gowitness, hackertarget, httpx, hunt, hunterio, iis_shortnames, ip2location, ipstack, jadx, leakix, myssl, newsletters, ntlm, oauth, otx, passivetotal, pgp, portfilter, portscan, postman, postman_download, rapiddns, robots, securitytrails, securitytxt, shodan_dns, shodan_idb, sitedossier, skymem, social, sslcert, subdomaincenter, subdomainradar, trickest, trufflehog, unarchive, urlscan, viewdns, virustotal, wappalyzer, wayback, zoomeye |\n| passive          | 70          | Never connects to target systems                               | affiliates, aggregate, anubisdb, apkpure, asn, azure_realm, azure_tenant, bevigil, binaryedge, bucket_file_enum, bufferoverrun, builtwith, c99, censys, certspotter, chaos, code_repository, credshed, crt, crt_db, dehashed, digitorus, dnsbimi, dnscaa, dnsdumpster, dnstlsrpt, docker_pull, dockerhub, emailformat, excavate, extractous, fullhunt, git_clone, gitdumper, github_codesearch, github_org, github_workflows, google_playstore, hackertarget, hunterio, ip2location, ipneighbor, ipstack, jadx, leakix, myssl, otx, passivetotal, pgp, portfilter, postman, postman_download, rapiddns, securitytrails, shodan_dns, shodan_idb, sitedossier, skymem, social, speculate, subdomaincenter, subdomainradar, trickest, trufflehog, unarchive, urlscan, viewdns, virustotal, wayback, zoomeye                                                                                                                                                                                                                                                                                        |\n| subdomain-enum   | 53          | Enumerates subdomains                                          | anubisdb, asn, azure_realm, azure_tenant, baddns_direct, baddns_zone, bevigil, binaryedge, bufferoverrun, builtwith, c99, censys, certspotter, chaos, crt, crt_db, digitorus, dnsbimi, dnsbrute, dnsbrute_mutations, dnscaa, dnscommonsrv, dnsdumpster, dnstlsrpt, fullhunt, github_codesearch, github_org, hackertarget, httpx, hunterio, ipneighbor, leakix, myssl, oauth, otx, passivetotal, postman, postman_download, rapiddns, securitytrails, securitytxt, shodan_dns, shodan_idb, sitedossier, sslcert, subdomaincenter, subdomainradar, subdomains, trickest, urlscan, virustotal, wayback, zoomeye                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| active           | 46          | Makes active connections to target systems                     | ajaxpro, baddns, baddns_direct, baddns_zone, badsecrets, bucket_amazon, bucket_azure, bucket_digitalocean, bucket_firebase, bucket_google, bypass403, dastardly, dnsbrute, dnsbrute_mutations, dnscommonsrv, dotnetnuke, ffuf, ffuf_shortnames, filedownload, fingerprintx, generic_ssrf, git, gitlab, gowitness, host_header, httpx, hunt, iis_shortnames, newsletters, ntlm, nuclei, oauth, paramminer_cookies, paramminer_getparams, paramminer_headers, portscan, robots, securitytxt, smuggler, sslcert, telerik, url_manipulation, vhost, wafw00f, wappalyzer, wpscan|\n| aggressive       | 20          | Generates a large amount of network traffic                    | bypass403, dastardly, dnsbrute, dnsbrute_mutations, dotnetnuke, ffuf, ffuf_shortnames, generic_ssrf, host_header, ipneighbor, nuclei, paramminer_cookies, paramminer_getparams, paramminer_headers, smuggler, telerik, url_manipulation, vhost, wafw00f, wpscan                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| web-basic        | 17          | Basic, non-intrusive web scan functionality                    | azure_realm, baddns, badsecrets, bucket_amazon, bucket_azure, bucket_firebase, bucket_google, filedownload, git, httpx, iis_shortnames, ntlm, oauth, robots, securitytxt, sslcert, wappalyzer|\n```\n\n----------------------------------------\n\nTITLE: Implementing Scanner Class in Python for BBOT\nDESCRIPTION: Defines the Scanner class which is the core component of BBOT. It handles module management, event processing, scan configuration, and orchestrates the scanning process across multiple target modules.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/scanner.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Scanner:\n    \"\"\"The scanner manages modules, processes events, and manages the scan. Data about those events is stored in a database.\"\"\"\n\n    def __init__(self, config=None):\n        \"\"\"\n        Initialize a new Scanner instance.\n\n        Args:\n            config (Config, optional): Use this config object. Otherwise, a default config will be used.\n        \"\"\"\n\n        self.log = logging.getLogger(\"bbot.scanner\")\n        self.log.info(\"Instantiating scanner\")\n\n        self.start_time = time.time()\n        # events seen\n        self._seen_cache = set()\n        # modules initialized\n        self._mod_init = set()\n        self._results_lock = threading.RLock()\n        # all modules\n        self.modules = {}\n        # maps modules to their flags, e.g. {\"shodan\": set([\"web\", \"passive\", \"api\"])}\n        self.module_flags = {}\n        # maps module flags to their corresponding modules, e.g. {\"web\": set([\"shodan\", \"httpx\"]), \"dns\": set([\"dnsresolve\", \"dnscommonsrv\"])}\n        self.flag_modules = {}\n        # event_type --> module --> flag --> list([module_instance])\n        self.event_module_map = {}\n        # maps \"hostname\" --> set(\"shodan\", \"censys\", ...)\n        self._module_for_event_type = {}\n\n        # list of (event_type, module) tracked for \"tracked events\"\n        self._tracked_events = {}\n        # word --> module instance\n        self.word_module_map = defaultdict(dict)\n        self._mod_track_done = set()\n\n        # a database to store results in\n        self.db = None\n\n        self.scan_id = None\n        self.parent_scan_id = None\n        # keep track of module config\n        self.config = config if config else Config()\n\n        self._setup_modules()\n        self._make_event_map()\n```\n\n----------------------------------------\n\nTITLE: Installing BBOT with newer Python version\nDESCRIPTION: Commands to install BBOT with a compatible Python version (3.9+) when facing installation errors due to outdated Python. The steps include installing Python 3.9, configuring pipx, and installing BBOT.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/troubleshooting.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# install a newer version of python\nsudo apt install python3.9 python3.9-venv\n# install pipx\npython3.9 -m pip install --user pipx\n# add pipx to your path\npython3.9 -m pipx ensurepath\n# reboot\nreboot\n# install bbot\npython3.9 -m pipx install bbot\n# run bbot\nbbot --help\n```\n\n----------------------------------------\n\nTITLE: Implementing Module Lifecycle Methods in Python\nDESCRIPTION: Implementation of module lifecycle methods including initialization, pre/post-processing hooks, and finalization methods for the BaseModule class.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/basemodule.md#2025-04-23_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef setup(self):\n        \"\"\"Set up the module.\n\n        This is called before modules run, so modules can set themselves up.\n        Returns boolean indicating success/failure.\n        \"\"\"\n        return True\n\n    def filter_event(self, event):\n        \"\"\"Filter incoming events. Return True to continue processing, False to skip.\"\"\"\n        return True\n\n    def process_event(self, event):\n        \"\"\"Process the event.\n\n        This is a generator. Here, modules conduct their processing of an event,\n        and can use yield to return produced events.\n        \"\"\"\n        raise NotImplementedError()\n\n    def post_process_event(self, event):\n        \"\"\"Process an event after it has been processed by process_event().\n\n        Useful for doing things only after a successful process_event()\n        \"\"\"\n        pass\n\n    def cleanup(self):\n        \"\"\"Clean up the module before the scan finishes.\"\"\"\n        pass\n\n    def pre_scan(self):\n        \"\"\"Run before the first events start getting processed.\n\n        Modules can do expensive work upfront, potentially yielding events like\n        process_event().\n        \"\"\"\n        return\n        yield  # noqa: W0101\n\n    def post_scan(self):\n        \"\"\"Run after all other events are finished processing, for cleanup work.\n\n        Modules have the opportunity to yield events like process_event() here as well.\n        For example, to summarize findings of the scan itself.\n        \"\"\"\n        return\n        yield  # noqa: W0101\n```\n\n----------------------------------------\n\nTITLE: BBOT Example Scanning Commands\nDESCRIPTION: Collection of common BBOT scanning commands for various security testing scenarios\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/index.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Perform a full subdomain enumeration on evilcorp.com\nbbot -t evilcorp.com -p subdomain-enum\n\n# Perform a passive-only subdomain enumeration on evilcorp.com\nbbot -t evilcorp.com -p subdomain-enum -rf passive\n\n# Port-scan every subdomain, screenshot every webpage, output to current directory\nbbot -t evilcorp.com -p subdomain-enum -m portscan gowitness -n my_scan -o .\n\n# A basic web scan includes wappalyzer, robots.txt, and other non-intrusive web modules\nbbot -t evilcorp.com -p subdomain-enum web-basic\n\n# Crawl www.evilcorp.com up to a max depth of 2, automatically extracting emails, secrets, etc.\nbbot -t www.evilcorp.com -p spider -c web.spider_distance=2 web.spider_depth=2\n\n# Subdomains, emails, cloud buckets, port scan, basic web, web screenshots, nuclei\nbbot -t evilcorp.com -p kitchen-sink\n```\n\n----------------------------------------\n\nTITLE: Implementing Event Processing Methods in Python\nDESCRIPTION: Core event processing methods for BaseModule that handle event filtering, processing, and dispatching according to module configuration.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/basemodule.md#2025-04-23_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef accept_event(self, event):\n        module_event_type = f\"{self.name}:{event.type}\"\n        # if we're watching this target\n        if event.source in self.watching_targets:\n            # and it's an event type we want to watch\n            watch_types = self.watching_targets[event.source]\n            # if we're watching all event types, or this specific one\n            if \"*\" in watch_types or event.type in watch_types:\n                return True\n\n        # otherwise, make sure we haven't blacklisted this event\n        if event.hash in self.blacklist:\n            return False\n\n        # check if we've masked this event\n        for m in self.output_masks:\n            if fnmatch(module_event_type, m):\n                return False\n            if fnmatch(event.type, m):\n                return False\n\n        # only care about events with which we're compatible\n        if not self.watched_events:\n            return False\n        if \"*\" in self.watched_events:\n            return True\n\n        # Check if the module is interested in the event type\n        event_matches = False\n        for e in self.watched_events:\n            if fnmatch(event.type, e):\n                event_matches = True\n\n        return event_matches\n```\n\n----------------------------------------\n\nTITLE: Synchronous BBOT Scanning in Python\nDESCRIPTION: Example of running a synchronous BBOT scan using the Scanner class for subdomain enumeration.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/index.md#2025-04-23_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom bbot.scanner import Scanner\n\nif __name__ == \"__main__\":\n    scan = Scanner(\"evilcorp.com\", presets=[\"subdomain-enum\"])\n    for event in scan.start():\n        print(event)\n```\n\n----------------------------------------\n\nTITLE: Using BBOT as an Asynchronous Python Library\nDESCRIPTION: Example of how to use BBOT as an asynchronous Python library. This snippet creates a Scanner object and asynchronously iterates through the scan results, printing them as JSON.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/advanced.md#2025-04-23_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom bbot.scanner import Scanner\n\nasync def main():\n    scan = Scanner(\"evilcorp.com\", presets=[\"subdomain-enum\"])\n    async for event in scan.async_start():\n        print(event.json())\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())\n```\n\n----------------------------------------\n\nTITLE: Custom BBOT Preset for Subdomain Enumeration and Web Scanning\nDESCRIPTION: A comprehensive YAML preset that combines subdomain enumeration, basic web scanning, and Nuclei scanning. It includes target specification, preset inclusion, module configuration, and API key settings.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Do a subdomain enumeration + basic web scan + nuclei\n\ntarget:\n  - evilcorp.com\n\ninclude:\n  - subdomain-enum\n  - web-basic\n\nmodules:\n  - nuclei\n\nconfig:\n  web:\n    http_proxy: http://127.0.0.1:8080\n  modules:\n    securitytrails:\n      api_key: 21a270d5f59c9b05813a72bb41707266\n    virustotal:\n      api_key:\n        - 4f41243847da693a4f356c0486114bc6\n        - 5bc6ed268ab6488270e496d3183a1a27\n```\n\n----------------------------------------\n\nTITLE: JSON Representation of a BBOT Event\nDESCRIPTION: Provides a detailed JSON structure of a BBOT event, including all its attributes such as type, id, uuid, scope description, data, resolved hosts, tags, and discovery path.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/events.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"DNS_NAME\",\n  \"id\": \"DNS_NAME:33bc005c2bdfea4d73e07db733bd11861cf6520e\",\n  \"uuid\": \"DNS_NAME:6c96d512-090a-47f0-82e4-6860e46aac13\",\n  \"scope_description\": \"in-scope\",\n  \"data\": \"link.evilcorp.com\",\n  \"host\": \"link.evilcorp.com\",\n  \"resolved_hosts\": [\n    \"184.31.52.65\",\n    \"2600:1402:b800:d82::700\",\n    \"2600:1402:b800:d87::700\",\n    \"link.evilcorp.com.edgekey.net\"\n  ],\n  \"dns_children\": {\n    \"A\": [\n      \"184.31.52.65\"\n    ],\n    \"AAAA\": [\n      \"2600:1402:b800:d82::700\",\n      \"2600:1402:b800:d87::700\"\n    ],\n    \"CNAME\": [\n      \"link.evilcorp.com.edgekey.net\"\n    ]\n  },\n  \"web_spider_distance\": 0,\n  \"scope_distance\": 0,\n  \"scan\": \"SCAN:b6ef48bc036bc8d001595ae5061846a7e6beadb6\",\n  \"timestamp\": \"2024-10-18T15:40:13.716880+00:00\",\n  \"parent\": \"DNS_NAME:94c92b7eaed431b37ae2a757fec4e678cc3bd213\",\n  \"parent_uuid\": \"DNS_NAME:c737dffa-d4f0-4b6e-a72d-cc8c05bd892e\",\n  \"tags\": [\n    \"subdomain\",\n    \"a-record\",\n    \"cdn-akamai\",\n    \"in-scope\",\n    \"cname-record\",\n    \"aaaa-record\"\n  ],\n  \"module\": \"speculate\",\n  \"module_sequence\": \"speculate->speculate\",\n  \"discovery_context\": \"speculated parent DNS_NAME: link.evilcorp.com\",\n  \"discovery_path\": [\n    \"Scan insidious_frederick seeded with DNS_NAME: evilcorp.com\",\n    \"TXT record for evilcorp.com contains IP_ADDRESS: 149.72.247.52\",\n    \"PTR record for 149.72.247.52 contains DNS_NAME: o1.ptr2410.link.evilcorp.com\",\n    \"speculated parent DNS_NAME: ptr2410.link.evilcorp.com\",\n    \"speculated parent DNS_NAME: link.evilcorp.com\"\n  ],\n  \"parent_chain\": [\n    \"DNS_NAME:34c657a3-0bfa-457e-9e6e-0f22f04b8da5\",\n    \"IP_ADDRESS:efc0fb3b-1b42-44da-916e-83db2360e10e\",\n    \"DNS_NAME:c737dffa-d4f0-4b6e-a72d-cc8c05bd892e\",\n    \"DNS_NAME_UNRESOLVED:722a3473-30c6-40f1-90aa-908d47105d5a\",\n    \"DNS_NAME:6c96d512-090a-47f0-82e4-6860e46aac13\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring BBOT Scan Output Location\nDESCRIPTION: Example showing how to specify a custom scan name and output directory for BBOT scans. Uses the -n flag for naming and -o flag for output location.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/index.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# save everything to the folder \"my_scan\" in the current directory\nbbot -t evilcorp.com -f subdomain-enum -m gowitness -n my_scan -o .\n```\n\n----------------------------------------\n\nTITLE: Installing and Setting Up BBOT Development Environment with Poetry\nDESCRIPTION: These commands demonstrate how to clone a forked BBOT repository, install Poetry, set up dependencies, and enter the virtual environment. The process creates a fully functioning Python environment for developing BBOT.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/dev_environment.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# clone your forked repo and cd into it\ngit clone git@github.com/<username>/bbot.git\ncd bbot\n\n# install poetry\ncurl -sSL https://install.python-poetry.org | python3 -\n\n# install pip dependencies\npoetry install\n# install pre-commit hooks, etc.\npoetry run pre-commit install\n\n# enter virtual environment\npoetry shell\n\nbbot --help\n```\n\n----------------------------------------\n\nTITLE: BBOT Python Library Integration - Synchronous\nDESCRIPTION: Example of using BBOT as a Python library in synchronous mode to perform subdomain enumeration\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/README.md#2025-04-23_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom bbot.scanner import Scanner\n\nif __name__ == \"__main__\":\n    scan = Scanner(\"evilcorp.com\", presets=[\"subdomain-enum\"])\n    for event in scan.start():\n        print(event)\n```\n\n----------------------------------------\n\nTITLE: Event Types Table in Markdown\nDESCRIPTION: A markdown table documenting BBOT event types, showing the number of consuming and producing modules, along with detailed lists of module names that consume or produce each event type.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/events.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Event Type          | # Consuming Modules   | # Producing Modules   | Consuming Modules| Producing Modules                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n|---------------------|-----------------------|-----------------------||------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| *                   | 18                    | 0                     | affiliates, cloudcheck, csv, discord, dnsresolve, http, json, mysql, neo4j, postgres, python, slack, splunk, sqlite, stdout, teams, txt, websocket                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| ASN                 | 0                     | 1                     || asn                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n| AZURE_TENANT        | 1                     | 0                     | speculate|                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| CODE_REPOSITORY     | 7                     | 7                     | docker_pull, git_clone, gitdumper, github_workflows, google_playstore, postman_download, trufflehog| code_repository, dockerhub, git, github_codesearch, github_org, gitlab, postman                                                                                                                                                                                                                                                                                                                                                                                                   |\n| DNS_NAME            | 61                    | 44                    | anubisdb, asset_inventory, azure_realm, azure_tenant, baddns, baddns_zone, bevigil, binaryedge, bucket_amazon, bucket_azure, bucket_digitalocean, bucket_firebase, bucket_google, bufferoverrun, builtwith, c99, censys, certspotter, chaos, credshed, crt, crt_db, dehashed, digitorus, dnsbimi, dnsbrute, dnsbrute_mutations, dnscaa, dnscommonsrv, dnsdumpster, dnstlsrpt, emailformat, fullhunt, github_codesearch, hackertarget, hunterio, leakix, myssl, nmap_xml, oauth, otx, passivetotal, pgp, portscan, rapiddns, securitytrails, securitytxt, shodan_dns, shodan_idb, sitedossier, skymem, speculate, subdomaincenter, subdomainradar, subdomains, trickest, urlscan, viewdns, virustotal, wayback, zoomeye | anubisdb, azure_tenant, bevigil, binaryedge, bufferoverrun, builtwith, c99, censys, certspotter, chaos, crt, crt_db, digitorus, dnsbrute, dnsbrute_mutations, dnscaa, dnscommonsrv, dnsdumpster, dnsresolve, fullhunt, hackertarget, hunterio, leakix, myssl, ntlm, oauth, otx, passivetotal, rapiddns, securitytrails, shodan_dns, shodan_idb, sitedossier, speculate, sslcert, subdomaincenter, subdomainradar, trickest, urlscan, vhost, viewdns, virustotal, wayback, zoomeye |\n| DNS_NAME_UNRESOLVED | 3                     | 0                     | baddns, speculate, subdomains|                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n```\n\n----------------------------------------\n\nTITLE: Listing Available BBOT Presets\nDESCRIPTION: Command to list all available presets in BBOT. This helps users see what predefined presets are available for use.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbbot -lp\n```\n\n----------------------------------------\n\nTITLE: Implementing Error Handling in BaseModule\nDESCRIPTION: Error handling methods for BaseModule including error tracking, logging, and exception management during event processing and module operations.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/basemodule.md#2025-04-23_snippet_7\n\nLANGUAGE: python\nCODE:\n```\ndef error(self, *args, **kwargs):\n        \"\"\"Log an error message\"\"\"\n        return self.log(\"error\", args, kwargs)\n\n    def register_error(self, e):\n        \"\"\"Register an error and keep track of the count\"\"\"\n        try:\n            error_message = make_exception_message(e)\n            self._error_count[error_message] += 1\n            self.errors[error_message] = e\n        except Exception as e:\n            self.warning(f\"Error registering error: {e}\")\n\n    def _safe_process_event(self, event):\n        \"\"\"Error-catching wrapper around _event_process_hub\"\"\"\n        try:\n            with self._lock:\n                self.new_event_time = time.time()\n                if self.start_event is None:\n                    self.start_event = event\n            result = self._event_process_hub(event)\n            with self._lock:\n                self.new_event_time = time.time()\n            return result\n        except Exception as e:\n            self.register_error(e)\n            self.error(f\"Error processing event {event}: {make_exception_message(e)}\")\n            tb = traceback.format_exc()\n            self.debug(tb)\n        finally:\n            self._event_semaphore.release()\n```\n\n----------------------------------------\n\nTITLE: BBOT Module Configuration Table\nDESCRIPTION: Table defining configuration parameters for BBOT modules including bucket scanning settings, DNS brute force options, and web fuzzing parameters. Each row specifies a parameter name, type, description and default value.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/configuration.md#2025-04-23_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| modules.bucket_digitalocean.permutations       | bool     | Whether to try permutations                                                                                                                                                                                                                                                                                                    | False                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| modules.bucket_firebase.permutations           | bool     | Whether to try permutations                                                                                                                                                                                                                                                                                                    | False                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| modules.bucket_google.permutations             | bool     | Whether to try permutations                                                                                                                                                                                                                                                                                                    | False                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| modules.dnsbrute.max_depth                     | int      | How many subdomains deep to brute force, i.e. 5.4.3.2.1.evilcorp.com                                                                                                                                                                                                                                                           | 5                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| modules.dnsbrute.wordlist                      | str      | Subdomain wordlist URL                                                                                                                                                                                                                                                                                                         | https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/DNS/subdomains-top1million-5000.txt                                                                                                                                                                                                                                                                                                                                          |\n| modules.dnsbrute_mutations.max_mutations       | int      | Maximum number of target-specific mutations to try per subdomain                                                                                                                                                                                                                                                               | 100                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| modules.dnscommonsrv.max_depth                 | int      | The maximum subdomain depth to brute-force SRV records                                                                                                                                                                                                                                                                         | 2                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| modules.ffuf.extensions                        | str      | Optionally include a list of extensions to extend the keyword with (comma separated)                                                                                                                                                                                                                                           |                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| modules.ffuf.ignore_case                       | bool     | Only put lowercase words into the wordlist                                                                                                                                                                                                                                                                                     | False                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| modules.ffuf.lines                             | int      | take only the first N lines from the wordlist when finding directories                                                                                                                                                                                                                                                         | 5000                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| modules.ffuf.max_depth                         | int      | the maximum directory depth to attempt to solve                                                                                                                                                                                                                                                                                | 0                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| modules.ffuf.rate                              | int      | Rate of requests per second (default: 0)                                                                                                                                                                                                                                                                                       | 0                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n```\n\n----------------------------------------\n\nTITLE: Defining BaseTarget Class for BBOT Scanner in Python\nDESCRIPTION: The BaseTarget class serves as the foundation for target-related functionality in the BBOT scanner. It likely contains common methods and properties used by other target classes.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/target.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass BaseTarget:\n```\n\n----------------------------------------\n\nTITLE: Advanced BBOT Scanner Configuration\nDESCRIPTION: Comprehensive example showing advanced scanner configuration including presets, whitelists, blacklists, modules, and custom options.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/index.md#2025-04-23_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n# create a scan against multiple targets\nscan = Scanner(\n    # targets\n    \"evilcorp.com\",\n    \"4.3.2.1\",\n    # enable these presets\n    presets=[\"subdomain-enum\"],\n    # whitelist these hosts\n    whitelist=[\"evilcorp.com\", \"evilcorp.org\"],\n    # blacklist these hosts\n    blacklist=[\"prod.evilcorp.com\"],\n    # also enable these individual modules\n    modules=[\"nuclei\", \"ipstack\"],\n    # exclude modules with these flags\n    exclude_flags=[\"slow\"],\n    # custom config options\n    config={\n        \"modules\": {\n            \"nuclei\": {\n                \"tags\": \"apache,nginx\"\n            }\n        }\n    }\n)\n```\n\n----------------------------------------\n\nTITLE: Defining BaseEvent Class for BBOT in Python\nDESCRIPTION: The BaseEvent class is the foundation for BBOT events. It includes methods for initialization, JSON conversion, string representation, and various event manipulations.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/event.md#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nbbot.core.event.base.BaseEvent\n```\n\n----------------------------------------\n\nTITLE: Loading BBOT Targets from Multiple Sources\nDESCRIPTION: Demonstrates how to combine targets from a file and command-line arguments when launching a BBOT scan. Includes various target formats like IP addresses, CIDR ranges, and domains.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/index.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cat targets.txt\n4.3.2.1\n10.0.0.2:80\n1.2.3.0/24\nevilcorp.com\nevilcorp.co.uk\nhttps://www.evilcorp.co.uk\n\n# load targets from a file and from the command-line\n$ bbot -t targets.txt fsociety.com 5.6.7.0/24 -m nmap\n```\n\n----------------------------------------\n\nTITLE: Implementing ScanSeeds Class for BBOT Scanner in Python\nDESCRIPTION: The ScanSeeds class is responsible for managing the initial set of targets or starting points for a scan in the BBOT scanner.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/target.md#2025-04-23_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass ScanSeeds:\n```\n\n----------------------------------------\n\nTITLE: Combining BBOT Web Spider with Subdomain Enumeration\nDESCRIPTION: Command to run both subdomain enumeration and web spider against a target domain. The spider will crawl each discovered subdomain to find additional information.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# spider every subdomain of evilcorp.com\nbbot -t evilcorp.com -f subdomain-enum -c spider.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Nuclei-Technology Preset in YAML for BBOT\nDESCRIPTION: A targeted BBOT preset for running Nuclei scans based on detected technologies. It configures Nuclei to use technology mode, which selects templates matching the technologies identified during reconnaissance.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Run nuclei scans against all discovered targets, running templates which match discovered technologies\n\nmodules:\n  - httpx\n  - nuclei\n  - portfilter\n\nconfig:\n  modules:\n    nuclei:\n      mode: technology\n      directory_only: True # Do not run nuclei on individual non-directory URLs. This is less unsafe to disable with technology mode.\n\nconditions:\n  - |\n    {% if config.web.spider_distance != 0 %}\n      {{ warn(\"Running nuclei with spider enabled is generally not recommended. Consider removing 'spider' preset.\") }}\n    {% endif %}\n\n# Example for also running a dirbust\n\n#include:\n#  - dirbust-light\n```\n\n----------------------------------------\n\nTITLE: Defining fast Preset in YAML for BBOT\nDESCRIPTION: This YAML configuration establishes the fast preset for BBOT. It optimizes for speed by limiting the scan to provided targets, excluding extra discovery, and configuring minimal DNS resolution and essential speculation.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Scan only the provided targets as fast as possible - no extra discovery\n\nexclude_modules:\n  - excavate\n\nconfig:\n  # only scan the exact targets specified\n  scope:\n    strict: true\n  # speed up dns resolution by doing A/AAAA only - not MX/NS/SRV/etc\n  dns:\n    minimal: true\n  # essential speculation only\n  modules:\n    speculate:\n      essential_only: true\n```\n\n----------------------------------------\n\nTITLE: Configuring BBOT Internal Modules\nDESCRIPTION: Configuration options for enabling/disabling BBOT's internal modules including speculation, excavation, aggregation, DNS resolution, and cloud checking functionalities. These settings control core scanning behaviors.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/internal_modules.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Infer certain events from others, e.g. IPs from IP ranges, DNS_NAMEs from URLs, etc.\nspeculate: True\n# Passively search event data for URLs, hostnames, emails, etc.\nexcavate: True\n# Summarize activity at the end of a scan\naggregate: True\n# DNS resolution\ndnsresolve: True\n# Cloud provider tagging\ncloudcheck: True\n```\n\n----------------------------------------\n\nTITLE: Budget-Constrained Multiple Target Scanning\nDESCRIPTION: Command to scan multiple targets with resource constraints using budget mode. Includes subdomain enumeration, web scanning, and port scanning with optimized resource usage.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/nuclei.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbbot -f subdomain-enum web-basic -m portscan nuclei --allow-deadly -c modules.nuclei.mode=budget -t app1.evilcorp.com app2.evilcorp.com app3.evilcorp.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Nuclei Preset in YAML for BBOT\nDESCRIPTION: A BBOT preset for running Nuclei security scans against discovered targets. It includes configuration to run Nuclei only on directory URLs and warns when used with spidering enabled. Additional examples for rate limiting are included.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Run nuclei scans against all discovered targets\n\nmodules:\n  - httpx\n  - nuclei\n  - portfilter\n\nconfig:\n  modules:\n    nuclei:\n      directory_only: True # Do not run nuclei on individual non-directory URLs\n\n\nconditions:\n  - |\n    {% if config.web.spider_distance != 0 %}\n      {{ warn(\"Running nuclei with spider enabled is generally not recommended. Consider removing 'spider' preset.\") }}\n    {% endif %}\n\n\n\n# Additional Examples:\n\n# Slowing Down Scan\n\n#config:\n#  modules:\n#    nuclei:\n#      ratelimit: 10\n#      concurrency: 5\n\n\n\n\n```\n\n----------------------------------------\n\nTITLE: Spider Module Configuration in BBOT\nDESCRIPTION: YAML configuration for the spider preset, including blacklist patterns and web crawling parameters.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/index.md#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Recursive web spider\n\nmodules:\n  - httpx\n\nblacklist:\n  # Prevent spider from invalidating sessions by logging out\n  - \"RE:/.*(sign|log)[_-]?out\"\n\nconfig:\n  web:\n    # how many links to follow in a row\n    spider_distance: 2\n    # don't follow links whose directory depth is higher than 4\n    spider_depth: 4\n    # maximum number of links to follow per page\n    spider_links_per_page: 25\n```\n\n----------------------------------------\n\nTITLE: Sample Subdomain Enumeration Preset in YAML\nDESCRIPTION: Example of a YAML preset file for subdomain enumeration in BBOT. It defines flags and output modules for the enumeration process.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Enumerate subdomains via APIs, brute-force\n\nflags:\n  - subdomain-enum\n\noutput_modules:\n  - subdomains\n```\n\n----------------------------------------\n\nTITLE: Configuring Shodan API Key via Command Line\nDESCRIPTION: Example showing how to set the Shodan DNS API key using BBOT's command-line configuration format using dot notation for nested properties.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/configuration.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbbot -c modules.shodan_dns.api_key=deadbeef\n```\n\n----------------------------------------\n\nTITLE: Defining BBOTCore Class in Python\nDESCRIPTION: Declaration of the BBOTCore class which serves as the main controller for the BBOT framework. This class handles scan initialization, module management, and event handling across the entire application.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/core.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass BBOTCore:\n```\n\n----------------------------------------\n\nTITLE: Web Spider Configuration\nDESCRIPTION: YAML configuration for web spider preset with crawling settings and blacklist rules\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/README.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Recursive web spider\n\nmodules:\n  - httpx\n\nblacklist:\n  # Prevent spider from invalidating sessions by logging out\n  - \"RE:/.*(sign|log)[_-]?out\"\n\nconfig:\n  web:\n    # how many links to follow in a row\n    spider_distance: 2\n    # don't follow links whose directory depth is higher than 4\n    spider_depth: 4\n    # maximum number of links to follow per page\n    spider_links_per_page: 25\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple BBOT Scan Targets\nDESCRIPTION: Examples showing how to configure multiple scan targets in BBOT using different initialization methods.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/index.md#2025-04-23_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n# create a scan against multiple targets\nscan = Scanner(\n    \"evilcorp.com\",\n    \"evilcorp.org\",\n    \"evilcorp.ce\",\n    \"4.3.2.1\",\n    \"1.2.3.4/24\",\n    presets=[\"subdomain-enum\"]\n)\n\n# this is the same as:\ntargets = [\"evilcorp.com\", \"evilcorp.org\", \"evilcorp.ce\", \"4.3.2.1\", \"1.2.3.4/24\"]\nscan = Scanner(*targets, presets=[\"subdomain-enum\"])\n```\n\n----------------------------------------\n\nTITLE: Boosting DNS Brute-force Speed in BBOT\nDESCRIPTION: Command to increase the speed of DNS brute-force operations by setting a higher number of massdns resolver threads. This is useful for fast internet connections or cloud VMs.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# massdns with 5000 resolvers, about 5MB/s\nbbot -t evilcorp.com -f subdomain-enum -c dns.brute_threads=5000\n```\n\n----------------------------------------\n\nTITLE: Implementing BaseModule Properties in Python\nDESCRIPTION: Defines property methods for BaseModule that provide access to module configuration, debugging status, and other important module attributes.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/basemodule.md#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@property\n    def debug(self):\n        return self.config.get(f\"{self.name}:debug\", False)\n\n    @property\n    def id(self):\n        return f\"{self.name}/{id(self)}\"\n\n    @property\n    def type(self):\n        return f\"{get_module_name(self.__class__.__module__)}_module\"\n\n    @property\n    def config(self):\n        if hasattr(self, \"scanner\") and self.scanner is not None:\n            return self.scanner.config\n        return {}\n\n    @property\n    def helpers(self):\n        if hasattr(self, \"scanner\") and self.scanner is not None:\n            return self.scanner.helpers\n        return None\n\n    @property\n    def http(self):\n        \"\"\"Returns the module's HTTP client\"\"\"\n        if not self.scanner:\n            raise ValueError(\"Module is not linked to a scanner\")\n        return self.scanner.helpers.session(self.name, timeout=self._http_timeout)\n```\n\n----------------------------------------\n\nTITLE: Running BBOT with a Preset\nDESCRIPTION: Demonstrates how to execute BBOT using a preset file. This command runs BBOT with the settings defined in 'my_preset.yml'.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbbot -p ./my_preset.yml\n```\n\n----------------------------------------\n\nTITLE: Running BBOT Web Spider Against a Target\nDESCRIPTION: Command to run the BBOT web spider against a specific domain using a configuration file. This enables the spider to discover subdomains, email addresses, and javascript secrets in webpages.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# run the web spider against www.evilcorp.com\nbbot -t www.evilcorp.com -m httpx -c spider.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Kitchen-Sink Preset in YAML for BBOT\nDESCRIPTION: A comprehensive BBOT preset that enables multiple security scanning modules including subdomain enumeration, cloud enumeration, code enumeration, email enumeration, web spidering, and various web-based scanning techniques.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Everything everywhere all at once\n\ninclude:\n  - subdomain-enum\n  - cloud-enum\n  - code-enum\n  - email-enum\n  - spider\n  - web-basic\n  - paramminer\n  - dirbust-light\n  - web-screenshots\n  - baddns-intense\n\nconfig:\n  modules:\n    baddns:\n      enable_references: True\n```\n\n----------------------------------------\n\nTITLE: Defining Preset Class for BBOT Scanner in Python\nDESCRIPTION: Implementation of the Preset class for BBOT scanner that handles loading, validation, and management of scan configuration presets from YAML files or dictionaries. The class provides methods to validate presets against a schema and merge preset configurations.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/presets.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Preset:\n    \"\"\"BBOT scanners can be initialized with a \"preset\", which is a file that contains scan settings.\n    \"\"\"\n\n    def __init__(self, preset=None, presets_dir=None):\n        self.name = None\n        self.description = \"\"  # will be shown in --help\n        self.modules = []\n        self.helpers = {}  # {\"port_scanner\": \"masscan\"}\n        self.tags = []  # [\"active\"]\n        self.flags = {}  # {\"dns_resolution\": false}\n        self.config = {}  # {\"masscan\": {\"rate\": 1000}}\n        self.omit_from_summary = False\n        if preset is not None:\n            self.apply_preset(preset, presets_dir=presets_dir)\n\n    def apply_preset(self, preset, presets_dir=None):\n        \"\"\"Apply settings from a preset to the current preset object\n\n        preset: path to yaml preset file, yaml string, preset name, or dict\n\n        presets_dir defaults to presets directory in bbot home\n        \"\"\"\n        import yaml\n\n        if isinstance(preset, (str, bytes)):\n            preset = preset.strip()\n            # is it a preset name?\n            if isinstance(preset, str) and len(preset.split()) == 1 and \"/\" not in preset and \"\\\\\" not in preset:\n                if not presets_dir:\n                    from bbot.core.configurator.configurator import home_dir\n\n                    presets_dir = home_dir / \"presets\"\n                preset_files = sorted(presets_dir.glob(f\"**/{preset}.yml\")) + sorted(\n                    presets_dir.glob(f\"**/{preset}.yaml\")\n                )\n                if not preset_files:\n                    preset_files = sorted(presets_dir.glob(f\"**/*{preset}*.yml\")) + sorted(\n                        presets_dir.glob(f\"**/*{preset}*.yaml\")\n                    )\n                if not preset_files:\n                    raise ValueError(f'Preset \"{preset}\" not found in {presets_dir}')\n                preset_file = preset_files[0]\n                if len(preset_files) > 1:\n                    ambiguous = \"\\n\".join([str(p) for p in preset_files])\n                    log.warning(f\"Ambiguous preset name: {preset}. Using {preset_file}\\nOptions:\\n{ambiguous}\")\n                try:\n                    with open(preset_file, \"r\") as f:\n                        preset = yaml.safe_load(f) or {}\n                except Exception as e:\n                    raise ValueError(f\"Error loading preset from {preset_file}: {e}\")\n                self.name = preset_file.stem\n            # is it yaml?\n            else:\n                try:\n                    parsed = yaml.safe_load(preset) or {}\n                    if parsed and isinstance(parsed, dict):\n                        preset = parsed\n                        if \"name\" in preset:\n                            self.name = preset[\"name\"]\n                except Exception:\n                    pass\n\n        # is it a dict?\n        if isinstance(preset, dict):\n            preset = self.validate(preset)\n            for k, v in preset.items():\n                if k == \"name\":\n                    self.name = v\n                elif k == \"description\":\n                    self.description = v\n                elif k == \"omit_from_summary\":\n                    self.omit_from_summary = v\n                elif k == \"modules\":\n                    self.modules = list(v)\n                elif k == \"helpers\":\n                    self.helpers.update(v)\n                elif k == \"flags\":\n                    self.flags.update(v)\n                elif k == \"tags\":\n                    self.tags = list(v)\n                elif k == \"config\":\n                    from bbot.core.configurator.util import merge_configs\n\n                    self.config = merge_configs(self.config, v)\n        else:\n            raise ValueError(f\"Unable to load preset: {preset}\")\n        return self\n\n    def validate(self, preset):\n        \"\"\"Validate preset against schema\"\"\"\n        from schema import Schema, Optional, Or, Use, SchemaError\n\n        schema = Schema(\n            {\n                Optional(\"name\"): str,\n                Optional(\"description\"): str,\n                Optional(\"omit_from_summary\"): bool,\n                Optional(\"modules\"): [str],\n                Optional(\"helpers\"): {str: str},\n                Optional(\"tags\"): [str],\n                Optional(\"flags\"): {str: Or(bool, str, list, dict)},\n                Optional(\"config\"): {\n                    str: {\n                        str: Use(lambda v: v),\n                    }\n                },\n            }\n        )\n        try:\n            preset = schema.validate(preset)\n        except SchemaError as e:\n            raise ValueError(f\"Schema validation failed: {e}\")\n        return preset\n\n    def as_dict(self):\n        return {\n            \"name\": self.name,\n            \"description\": self.description,\n            \"modules\": self.modules,\n            \"helpers\": self.helpers,\n            \"tags\": self.tags,\n            \"flags\": self.flags,\n            \"config\": self.config,\n            \"omit_from_summary\": self.omit_from_summary,\n        }\n\n    def merge_with(self, other_preset, overwrite=True):\n        \"\"\"Merge two presets together\n\n        Attributes in other_preset will overwrite self's attributes if overwrite=True (default)\n        \"\"\"\n        from bbot.core.configurator.util import merge_configs\n\n        merged_dict = self.as_dict()\n        other_dict = other_preset.as_dict()\n\n        # simple attributes\n        if other_dict[\"name\"] is not None:\n            merged_dict[\"name\"] = other_dict[\"name\"]\n        if other_dict[\"description\"]:\n            merged_dict[\"description\"] = other_dict[\"description\"]\n\n        # modules\n        original_modules = set(merged_dict[\"modules\"])\n        other_modules = set(other_dict[\"modules\"])\n        if not overwrite:\n            merged_dict[\"modules\"] = sorted(list(original_modules.union(other_modules)))\n        else:\n            if other_modules:\n                merged_dict[\"modules\"] = sorted(list(other_modules))\n\n        # tags\n        original_tags = set(merged_dict[\"tags\"])\n        other_tags = set(other_dict[\"tags\"])\n        if not overwrite:\n            merged_dict[\"tags\"] = sorted(list(original_tags.union(other_tags)))\n        else:\n            if other_tags:\n                merged_dict[\"tags\"] = sorted(list(other_tags))\n\n        # helpers (simple dict merge)\n        if not overwrite:\n            for k, v in other_dict[\"helpers\"].items():\n                if k not in merged_dict[\"helpers\"]:\n                    merged_dict[\"helpers\"][k] = v\n        else:\n            merged_dict[\"helpers\"].update(other_dict[\"helpers\"])\n\n        # flags (simple dict merge)\n        if not overwrite:\n            for k, v in other_dict[\"flags\"].items():\n                if k not in merged_dict[\"flags\"]:\n                    merged_dict[\"flags\"][k] = v\n        else:\n            merged_dict[\"flags\"].update(other_dict[\"flags\"])\n\n        # config (deep dict merge)\n        merged_dict[\"config\"] = merge_configs(merged_dict[\"config\"], other_dict[\"config\"], overwrite=overwrite)\n\n        merged_preset = self.__class__()\n        for k, v in merged_dict.items():\n            setattr(merged_preset, k, v)\n        return merged_preset\n```\n\n----------------------------------------\n\nTITLE: Specifying Module Dependencies with Ansible\nDESCRIPTION: Example showing how to define dependencies for a BBOT module using Ansible tasks, including OS packages, Git repositories, build commands, and file operations.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/module_howto.md#2025-04-23_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass MyModule(BaseModule):\n    ...\n    deps_apt = [\"chromium-browser\"]\n    deps_ansible = [\n        {\n            \"name\": \"install dev tools\",\n            \"package\": {\"name\": [\"gcc\", \"git\", \"make\"], \"state\": \"present\"},\n            \"become\": True,\n            \"ignore_errors\": True,\n        },\n        {\n            \"name\": \"Download massdns source code\",\n            \"git\": {\n                \"repo\": \"https://github.com/blechschmidt/massdns.git\",\n                \"dest\": \"#{BBOT_TEMP}/massdns\",\n                \"single_branch\": True,\n                \"version\": \"master\",\n            },\n        },\n        {\n            \"name\": \"Build massdns\",\n            \"command\": {\"chdir\": \"#{BBOT_TEMP}/massdns\", \"cmd\": \"make\", \"creates\": \"#{BBOT_TEMP}/massdns/bin/massdns\"},\n        },\n        {\n            \"name\": \"Install massdns\",\n            \"copy\": {\"src\": \"#{BBOT_TEMP}/massdns/bin/massdns\", \"dest\": \"#{BBOT_TOOLS}/\", \"mode\": \"u+x,g+x,o+x\"},\n        },\n    ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Subdomain Enumeration in YAML\nDESCRIPTION: YAML configuration for subdomain enumeration using various APIs and brute-force methods with DNS threading configuration.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Enumerate subdomains via APIs, brute-force\n\nflags:\n  # enable every module with the subdomain-enum flag\n  - subdomain-enum\n\noutput_modules:\n  # output unique subdomains to TXT file\n  - subdomains\n\nconfig:\n  dns:\n    threads: 25\n    brute_threads: 1000\n  # put your API keys here\n  # modules:\n  #   github:\n  #     api_key: \"\"\n  #   chaos:\n  #     api_key: \"\"\n  #   securitytrails:\n  #     api_key: \"\"\n```\n\n----------------------------------------\n\nTITLE: BBOT Web-Thorough Preset Configuration\nDESCRIPTION: Configuration table entry defining the web-thorough preset with 29 security testing modules including ajax testing, cloud storage bucket scanning, various bypass techniques, and vulnerability scanners.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_24\n\nLANGUAGE: markdown\nCODE:\n```\n| web-thorough      |            | Aggressive web scan                                                                                                                      | 29          | ajaxpro, azure_realm, baddns, badsecrets, bucket_amazon, bucket_azure, bucket_digitalocean, bucket_firebase, bucket_google, bypass403, dastardly, dotnetnuke, ffuf_shortnames, filedownload, generic_ssrf, git, host_header, httpx, hunt, iis_shortnames, ntlm, oauth, robots, securitytxt, smuggler, sslcert, telerik, url_manipulation, wappalyzer|\n```\n\n----------------------------------------\n\nTITLE: Defining dirbust-heavy Preset in YAML for BBOT\nDESCRIPTION: This YAML configuration establishes the dirbust-heavy preset for BBOT. It sets up aggressive recursive web directory brute-forcing with specific module configurations and extensions.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Recursive web directory brute-force (aggressive)\n\ninclude:\n  - spider\n\nflags:\n  - iis-shortnames\n\nmodules:\n  - ffuf\n  - wayback\n\nconfig:\n  modules:\n    iis_shortnames:\n      # we exploit the shortnames vulnerability to produce URL_HINTs which are consumed by ffuf_shortnames\n      detect_only: False\n    ffuf:\n      depth: 3\n      lines: 5000\n      extensions:\n        - php\n        - asp\n        - aspx\n        - ashx\n        - asmx\n        - jsp\n        - jspx\n        - cfm\n        - zip\n        - conf\n        - config\n        - xml\n        - json\n        - yml\n        - yaml\n    # emit URLs from wayback\n    wayback:\n      urls: True\n```\n\n----------------------------------------\n\nTITLE: Enabling Multiple BBOT Scan Modules\nDESCRIPTION: Shows how to enable specific BBOT modules for scanning using the -m flag. Enables nmap, sslcert, and httpx modules for comprehensive scanning.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/index.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Enable modules: nmap, sslcert, and httpx\nbbot -t www.evilcorp.com -m nmap sslcert httpx\n```\n\n----------------------------------------\n\nTITLE: Restricting BBOT Scan to Specific IP Range\nDESCRIPTION: Example command demonstrating how to seed a scan with a domain while restricting scope to a specific IP range using whitelist functionality.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/index.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbbot -t evilcorp.com --whitelist 1.2.3.0/24 -f subdomain-enum -m nmap nuclei --allow-deadly\n```\n\n----------------------------------------\n\nTITLE: Configuring Thorough Web Scan in YAML\nDESCRIPTION: YAML configuration for aggressive web scanning that includes basic web scan preset and additional thorough testing flags.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Aggressive web scan\n\ninclude:\n  # include the web-basic preset\n  - web-basic\n\nflags:\n  - web-thorough\n```\n\n----------------------------------------\n\nTITLE: BBOT Module Test Example\nDESCRIPTION: Example implementation of a BBOT module test including setup and validation logic.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/tests.md#2025-04-23_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom .base import ModuleTestBase\n\n\nclass TestMyModule(ModuleTestBase):\n    targets = [\"blacklanternsecurity.com\"]\n    config_overrides = {\"modules\": {\"mymodule\": {\"api_key\": \"deadbeef\"}}}\n\n    async def setup_after_prep(self, module_test):\n        # mock HTTP response\n        module_test.httpx_mock.add_response(\n            url=\"https://api.com/sudomains?apikey=deadbeef&domain=blacklanternsecurity.com\",\n            json={\n                \"subdomains\": [\n                    \"www.blacklanternsecurity.com\",\n                    \"dev.blacklanternsecurity.com\"\n                ],\n            },\n        )\n        # mock DNS\n        await module_test.mock_dns(\n            {\n                \"blacklanternsecurity.com\": {\"A\": [\"1.2.3.4\"]},\n                \"www.blacklanternsecurity.com\": {\"A\": [\"1.2.3.4\"]},\n                \"dev.blacklanternsecurity.com\": {\"A\": [\"1.2.3.4\"]},\n            }\n        )\n\n    def check(self, module_test, events):\n        # here is where we check to make sure it worked\n        dns_names = [e.data for e in events if e.type == \"DNS_NAME\"]\n        # temporary log messages for debugging\n        for e in dns_names:\n            self.log.critical(e)\n        assert \"www.blacklanternsecurity.com\" in dns_names, \"failed to find subdomain #1\"\n        assert \"dev.blacklanternsecurity.com\" in dns_names, \"failed to find subdomain #2\"\n```\n\n----------------------------------------\n\nTITLE: Running BBOT with Multiple Presets and Options\nDESCRIPTION: Examples of running BBOT with various combinations of presets and additional options, demonstrating the flexibility in configuring scans.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbbot -t evilcorp.com -p subdomain-enum\n\nbbot -t evilcorp.com -p subdomain-enum spider\n\nbbot -t evilcorp.com -p subdomain-enum -rf passive\n\nbbot -t www.evilcorp.com -p spider -c web.spider_distance=10\n```\n\n----------------------------------------\n\nTITLE: Killing Multiple BBOT Modules During Scan\nDESCRIPTION: Command to kill and disable multiple modules during a BBOT scan by specifying them in a space-separated list. This helps when modules get stuck or slow down the scan.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkill httpx sslcert\n```\n\n----------------------------------------\n\nTITLE: Using BBOT with CDN Filtering Preset\nDESCRIPTION: Command to run BBOT with a preset configuration file for CDN filtering. The preset applies predefined CDN filtering rules to the scan.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nbbot -t evilcorp.com -p skip_cdns.yml\n```\n\n----------------------------------------\n\nTITLE: BBOT Preset with Conditional Module Exclusion\nDESCRIPTION: YAML preset demonstrating advanced use of conditions to dynamically exclude a module (ffuf) based on other configuration settings.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Enable ffuf but only when the web spider isn't also enabled\n\nmodules:\n  - ffuf\n\nconditions:\n  - |\n    {% if config.web.spider_distance > 0 and config.web.spider_depth > 0 %}\n      {{ warn(\"Disabling ffuf because the web spider is enabled\") }}\n      {{ preset.exclude_module(\"ffuf\") }}\n    {% endif %}\n```\n\n----------------------------------------\n\nTITLE: Executing Shell Commands in BBOT Modules with Process Management\nDESCRIPTION: Demonstrates two methods for executing shell commands in BBOT modules: run_process() for simple subprocess execution and run_process_live() for real-time line iteration. These wrappers ensure processes can be tracked and terminated if needed.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/helpers/command.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n# simple subprocess\nls_result = await self.run_process(\"ls\", \"-l\")\nfor line ls_result.stdout.splitlines():\n    # ...\n\n# iterate through each line in real time\nasync for line in self.run_process_live([\"grep\", \"-R\"]):\n    # ...\n```\n\n----------------------------------------\n\nTITLE: Using BBOT with HTTP Proxy for Burp Suite Integration\nDESCRIPTION: Command to run BBOT with a custom HTTP proxy to capture traffic in Burp Suite. This enables populating Burp site maps with all discovered subdomains and their resources.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n# enumerate subdomains, take web screenshots, proxy through Burp\nbbot -t evilcorp.com -f subdomain-enum -m gowitness -c web.http_proxy=http://127.0.0.1:8080\n```\n\n----------------------------------------\n\nTITLE: BBOT Module Configuration Parameters\nDESCRIPTION: Comprehensive list of configuration parameters for BBOT modules including DNS TLS reporting, Docker operations, file extraction settings, API keys for various services, and Git repository handling options. Each parameter is defined with its type, description, and default value where applicable.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/configuration.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nmodules.dnstlsrpt.emit_vulnerabilities: true\nmodules.docker_pull.all_tags: false\nmodules.docker_pull.output_folder: \"\"\nmodules.extractous.extensions: \n  - bak\n  - bash\n  - bashrc\n  - conf\n  - cfg\n  - crt\n  - csv\n  - db\n  - sqlite\n  - doc\n  - docx\n  - ica\n  - indd\n  - ini\n  - json\n  - key\n  - pub\n  - log\n  - markdown\n  - md\n  - odg\n  - odp\n  - ods\n  - odt\n  - pdf\n  - pem\n  - pps\n  - ppsx\n  - ppt\n  - pptx\n  - ps1\n  - rdp\n  - rsa\n  - sh\n  - sql\n  - swp\n  - sxw\n  - txt\n  - vbs\n  - wpd\n  - xls\n  - xlsx\n  - xml\n  - yml\n  - yaml\nmodules.fullhunt.api_key: \"\"\nmodules.git_clone.api_key: \"\"\nmodules.git_clone.output_folder: \"\"\nmodules.gitdumper.fuzz_tags: false\nmodules.gitdumper.max_semanic_version: 10\nmodules.gitdumper.output_folder: \"\"\nmodules.github_codesearch.api_key: \"\"\nmodules.github_codesearch.limit: 100\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Module Directories in YAML Configuration\nDESCRIPTION: Configuration example for adding custom module directories to BBOT, allowing modules to be loaded from locations outside the default installation path.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/module_howto.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# load BBOT modules from these additional paths\nmodule_dirs:\n  - /home/user/my_modules\n```\n\n----------------------------------------\n\nTITLE: Filtering BBOT Modules by Safety Level\nDESCRIPTION: Examples of using BBOT flags to filter modules based on safety and activity level. Shows how to enable safe modules while excluding active scanning modules.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/index.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Enable safe modules but exclude active ones\nbbot -t evilcorp.com -f safe -ef active\n\n# Enable safe modules but only if they're also passive\nbbot -t evilcorp.com -f safe -rf passive\n```\n\n----------------------------------------\n\nTITLE: Enabling SIEM-Friendly JSON Output in BBOT\nDESCRIPTION: Command to configure BBOT to produce SIEM-friendly JSON output that can be ingested into systems like Elastic or Splunk. This ensures consistent data structure in the output.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nbbot -t evilcorp.com -c modules.json.siem_friendly=true\n```\n\n----------------------------------------\n\nTITLE: Configuration Parameters Table\nDESCRIPTION: Detailed table of configuration parameters for BBOT modules including timeouts, API keys, and operational settings. Each parameter is defined with its type, purpose, and default value.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/configuration.md#2025-04-23_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n| modules.wpscan.connection_timeout              | int      | The connection timeout in seconds (default 2)                                                                                                                                                                                                                                                                                  | 2                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| modules.wpscan.disable_tls_checks              | bool     | Disables the SSL/TLS certificate verification (Default True)                                                                                                                                                                                                                                                                   | True                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| modules.wpscan.enumerate                       | str      | Enumeration Process see wpscan help documentation (default: vp,vt,cb,dbe)                                                                                                                                                                                                                                                      | vp,vt,cb,dbe                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| modules.wpscan.force                           | bool     | Do not check if the target is running WordPress or returns a 403                                                                                                                                                                                                                                                               | False                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| modules.wpscan.request_timeout                 | int      | The request timeout in seconds (default 5)                                                                                                                                                                                                                                                                                     | 5                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| modules.wpscan.threads                         | int      | How many wpscan threads to spawn (default is 5)                                                                                                                                                                                                                                                                                | 5                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| modules.anubisdb.limit                         | int      | Limit the number of subdomains returned per query (increasing this may slow the scan due to garbage results from this API)                                                                                                                                                                                                     | 1000                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| modules.apkpure.output_folder                  | str      | Folder to download apk's to                                                                                                                                                                                                                                                                                                    |                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| modules.bevigil.api_key                        | str      | BeVigil OSINT API Key                                                                                                                                                                                                                                                                                                          |                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| modules.bevigil.urls                           | bool     | Emit URLs in addition to DNS_NAMEs                                                                                                                                                                                                                                                                                             | False                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| modules.binaryedge.api_key                     | str      | BinaryEdge API key                                                                                                                                                                                                                                                                                                             |                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| modules.binaryedge.max_records                 | int      | Limit results to help prevent exceeding API quota                                                                                                                                                                                                                                                                              | 1000                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n```\n\n----------------------------------------\n\nTITLE: Implementing Discord Bot for BBOT Scanning in Python\nDESCRIPTION: This script creates a Discord bot that can run BBOT scans. It uses the discord.py library to interact with Discord's API and the BBOT library for scanning functionality. The bot responds to commands to start scans, check scan status, and retrieve results.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/discord_bot.md#2025-04-23_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\nimport asyncio\nimport discord\nfrom discord.ext import commands\nfrom bbot.scanner import Scanner\n\nintents = discord.Intents.default()\nintents.message_content = True\n\nbot = commands.Bot(command_prefix='!', intents=intents)\n\nactive_scans = {}\n\n@bot.event\nasync def on_ready():\n    print(f'We have logged in as {bot.user}')\n\n@bot.command()\nasync def scan(ctx, target):\n    if ctx.author.id in active_scans:\n        await ctx.send(f'You already have an active scan. Use !status to check its progress.')\n        return\n\n    scanner = Scanner(\n        target,\n        output_modules=['json'],\n        allow_deadly=True,\n        output_dir=f'discord_bot_scans/{ctx.author.id}',\n    )\n    active_scans[ctx.author.id] = scanner\n    await ctx.send(f'Starting scan of {target}...')\n    await scanner.async_start()\n    await ctx.send(f'Scan of {target} complete! Use !results to view the results.')\n    del active_scans[ctx.author.id]\n\n@bot.command()\nasync def status(ctx):\n    if ctx.author.id not in active_scans:\n        await ctx.send('You have no active scans.')\n        return\n\n    scanner = active_scans[ctx.author.id]\n    await ctx.send(f'Scan is {scanner.percent_complete}% complete.')\n\n@bot.command()\nasync def results(ctx):\n    results_file = f'discord_bot_scans/{ctx.author.id}/results.json'\n    try:\n        with open(results_file, 'r') as f:\n            await ctx.send(file=discord.File(results_file))\n    except FileNotFoundError:\n        await ctx.send('No results found. Have you run a scan yet?')\n\nbot.run('YOUR_BOT_TOKEN_HERE')\n\n```\n\n----------------------------------------\n\nTITLE: DNS Wildcard Configuration in BBOT\nDESCRIPTION: YAML configuration examples for handling DNS wildcard detection and edge cases.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/index.md#2025-04-23_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\ndns:\n  wildcard_ignore:\n    - evilcorp.com\n    - evilcorp.co.uk\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# default == 10\ndns:\n  wildcard_tests: 20\n```\n\n----------------------------------------\n\nTITLE: MySQL Output Configuration in YAML\nDESCRIPTION: YAML configuration for the MySQL output module in BBOT, showing how to set up database connection details.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  modules:\n    mysql:\n      host: mysql.fsociety.local\n      database: custom_bbot_db\n      port: 3306\n      username: root\n      password: bbotislife\n```\n\n----------------------------------------\n\nTITLE: Security Module Flags Table in Markdown\nDESCRIPTION: A markdown table documenting various security scanning modules including web parameter mining, IIS shortname scanning, port scanning, reporting, social media enumeration, service enumeration, subdomain hijacking detection, and web screenshot capabilities. Each module is listed with its priority level and associated flags.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/index.md#2025-04-23_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| web-paramminer   | 3           | Discovers HTTP parameters through brute-force                  | paramminer_cookies, paramminer_getparams, paramminer_headers|\n| iis-shortnames   | 2           | Scans for IIS Shortname vulnerability                          | ffuf_shortnames, iis_shortnames|\n| portscan         | 2           | Discovers open ports                                           | portscan, shodan_idb|\n| report           | 2           | Generates a report at the end of the scan                      | affiliates, asn|\n| social-enum      | 2           | Enumerates social media                                        | httpx, social|\n| service-enum     | 1           | Identifies protocols running on open ports                     | fingerprintx|\n| subdomain-hijack | 1           | Detects hijackable subdomains                                  | baddns|\n| web-screenshots  | 1           | Takes screenshots of web pages                                 | gowitness|\n```\n\n----------------------------------------\n\nTITLE: Initializing Interact.sh Integration in Python for BBOT\nDESCRIPTION: This code snippet defines the Interactsh class, which handles the integration with the Interact.sh service. It includes methods for starting the client, generating correlation IDs, and retrieving interaction logs.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/helpers/interactsh.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Interactsh:\\n    def __init__(self, scan):\\n        self.scan = scan\\n        self.log = self.scan.log\\n        self.client = None\\n        self.correlation_id = str(uuid.uuid4())\\n        self.start_time = None\\n        self.token = None\\n        self.server = None\\n        self.correlation_id_url = None\\n\\n    def start(self):\\n        if self.client:\\n            return True\\n        try:\\n            self.client = interactsh.Client(\\n                self.scan.config.get(\\\"interactsh_server\\\", \\\"\\\"),\\n                self.scan.config.get(\\\"interactsh_token\\\", \\\"\\\"),\\n                self.scan.config.get(\\\"interactsh_no_http_fallback\\\", False),\\n            )\\n            self.token = self.client.token\\n            self.server = self.client.server\\n            self.correlation_id_url = f\\\"{self.correlation_id}.{self.server}\\\"\\n            self.start_time = time.time()\\n            return True\\n        except Exception as e:\\n            self.log.warning(f\\\"Failed to start interactsh client: {e}\\\")\\n        return False\\n\\n    def stop(self):\\n        if self.client:\\n            try:\\n                self.client.close()\\n            except Exception as e:\\n                self.log.debug(f\\\"Error closing interactsh client: {e}\\\")\\n        self.client = None\\n\\n    def gen_domain(self, correlation_id=None):\\n        if correlation_id is None:\\n            correlation_id = self.correlation_id\\n        return f\\\"{correlation_id}.{self.server}\\\"\\n\\n    def get_interactions(self, correlation_id=None, poll_count=1):\\n        if not self.client:\\n            return []\\n        interactions = []\\n        correlation_ids = [correlation_id] if correlation_id else [self.correlation_id]\\n        try:\\n            for _ in range(poll_count):\\n                logs = self.client.poll()\\n                for interaction in logs:\\n                    for cid in correlation_ids:\\n                        if cid in interaction[\\\"full-id\\\"]:\\n                            interactions.append(interaction)\\n                            break\\n        except Exception as e:\\n            self.log.debug(f\\\"Error polling interactsh: {e}\\\")\\n        return interactions\n```\n\n----------------------------------------\n\nTITLE: Running BBOT with Multiple Presets in Specific Order\nDESCRIPTION: Examples of running BBOT with multiple presets, demonstrating how the order of presets affects the final configuration.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbbot -t evilcorp.com -p ./my_spider.yml spider\n\nbbot -t evilcorp.com -p spider ./my_spider.yml\n```\n\n----------------------------------------\n\nTITLE: Splunk Output Configuration in YAML\nDESCRIPTION: YAML configuration for the Splunk output module in BBOT, showing how to set up HEC (HTTP Event Collector) output.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  modules:\n    splunk:\n      # The full URL with the URI `/services/collector/event`\n      url: https://localhost:8088/services/collector/event\n      # Generated from splunk webui\n      hectoken: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      # Defaults to `main` if not set\n      index: my-specific-index\n      # Defaults to `bbot` if not set\n      source: /my/source.json\n```\n\n----------------------------------------\n\nTITLE: BBOT Web Spider Configuration YAML\nDESCRIPTION: YAML configuration for enabling and controlling the BBOT web spider. Sets the depth, distance, and links per page parameters to customize spider behavior.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  web:\n    spider_depth: 2\n    spider_distance: 2\n    spider_links_per_page: 25\n```\n\n----------------------------------------\n\nTITLE: Asynchronous BBOT Scanning in Python\nDESCRIPTION: Implementation of asynchronous BBOT scanning using async/await syntax and asyncio.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/index.md#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom bbot.scanner import Scanner\n\nasync def main():\n    scan = Scanner(\"evilcorp.com\", presets=[\"subdomain-enum\"])\n    async for event in scan.async_start():\n        print(event.json())\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())\n```\n\n----------------------------------------\n\nTITLE: Discord Output Configuration in YAML\nDESCRIPTION: Example YAML configuration for setting up Discord webhook output in BBOT, including webhook URL and event type filtering.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  modules:\n    discord:\n      webhook_url: https://discord.com/api/webhooks/1234/deadbeef\n      event_types:\n        - VULNERABILITY\n        - FINDING\n        - STORAGE_BUCKET\n```\n\n----------------------------------------\n\nTITLE: Running Neo4j Container with Docker for BBOT\nDESCRIPTION: Command to start a Neo4j database in the background using Docker with volume mapping and authentication setup for BBOT integration.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 7687:7687 -p 7474:7474 -v \"$(pwd)/neo4j/:/data/\" -e NEO4J_AUTH=neo4j/bbotislife neo4j\n```\n\n----------------------------------------\n\nTITLE: Running a BBOT Module with Command Line Arguments\nDESCRIPTION: Command to run a BBOT scan targeting evilcorp.com and enabling the whois module using the command line interface.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/module_howto.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# run a scan enabling the module in bbot/modules/mymodule.py\nbbot -t evilcorp.com -m whois\n```\n\n----------------------------------------\n\nTITLE: Configuring Technology Detection in YAML\nDESCRIPTION: YAML configuration for detecting web technologies using Wappalyzer, Nuclei, and FingerprintX with specific tech tags.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Detect technologies via Wappalyzer, Nuclei, and FingerprintX\n\nmodules:\n  - nuclei\n  - wappalyzer\n  - fingerprintx\n\nconfig:\n  modules:\n    nuclei:\n      tags: tech\n```\n\n----------------------------------------\n\nTITLE: Implementing Module Setup Methods in Python\nDESCRIPTION: Examples of different setup() method implementations for BBOT modules, showing success, soft-failure, and hard-failure scenarios with appropriate return values and error messaging.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/module_howto.md#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nasync def setup(self):\n    if not self.config.get(\"api_key\"):\n        # soft-fail\n        return None, \"No API key specified\"\n\nasync def setup(self):\n    try:\n        wordlist = self.helpers.wordlist(\"https://raw.githubusercontent.com/user/wordlist.txt\")\n    except WordlistError as e:\n        # hard-fail\n        return False, f\"Error downloading wordlist: {e}\"\n\nasync def setup(self):\n    self.timeout = self.config.get(\"timeout\", 5)\n    # success\n    return True\n```\n\n----------------------------------------\n\nTITLE: Configuring Nuclei-Budget Preset in YAML for BBOT\nDESCRIPTION: A resource-efficient BBOT preset for running Nuclei scans with budget limitations. It configures Nuclei to use budget mode with a limit of 10 requests, targeting low-hanging vulnerabilities while minimizing resource usage.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Run nuclei scans against all discovered targets, using budget mode to look for low hanging fruit with greatly reduced number of requests\n\nmodules:\n  - httpx\n  - nuclei\n  - portfilter\n\nconfig:\n  modules:\n    nuclei:\n      mode: budget\n      budget: 10\n      directory_only: true # Do not run nuclei on individual non-directory URLs\n\nconditions:\n  - |\n    {% if config.web.spider_distance != 0 %}\n      {{ warn(\"Running nuclei with spider enabled is generally not recommended. Consider removing 'spider' preset.\") }}\n    {% endif %}\n```\n\n----------------------------------------\n\nTITLE: Using Web Parameters Output Module with BBOT\nDESCRIPTION: Example command for using BBOT's parameter mining modules with a custom wordlist, useful for further parameter bruteforcing after extracting web parameters.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nbbot -t evilcorp.com -m paramminer_getparams -c modules.paramminer_getparams.wordlist=/path/to/your/new/wordlist.txt\n```\n\n----------------------------------------\n\nTITLE: BBOT Preset with Custom Condition\nDESCRIPTION: YAML preset showcasing the use of custom conditions in BBOT, in this case to abort the scan if Nuclei templates are not specified.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Abort if nuclei templates aren't specified\n\nmodules:\n  - nuclei\n\nconditions:\n  - |\n    {% if not config.modules.nuclei.templates %}\n      {{ abort(\"Don't forget to set your templates!\") }}\n    {% endif %}\n```\n\n----------------------------------------\n\nTITLE: Running BBOT with Neo4j Output Module\nDESCRIPTION: Command to execute BBOT with subdomain enumeration against a target domain and sending output to Neo4j.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nbbot -f subdomain-enum -t evilcorp.com -om neo4j\n```\n\n----------------------------------------\n\nTITLE: Configuring Nuclei-Intense Preset in YAML for BBOT\nDESCRIPTION: An aggressive BBOT preset for comprehensive Nuclei scanning with additional discovery modules. It configures Nuclei to scan all URLs (not just directories) and includes robots.txt parsing, URL scanning, and wayback machine integration.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Run nuclei scans against all discovered targets, allowing for spidering, against ALL URLs, and with additional discovery modules.\n\nmodules:\n  - httpx\n  - nuclei\n  - robots\n  - urlscan\n  - portfilter\n  - wayback\n\nconfig:\n  modules:\n    nuclei:\n      directory_only: False # Will run nuclei on ALL discovered URLs - Be careful!\n    wayback:\n      urls: true\n\nconditions:\n  - |\n    {% if config.web.spider_distance == 0 and config.modules.nuclei.directory_only == False %}\n      {{ warn(\"The 'nuclei-intense' preset turns the 'directory_only' limitation off on the nuclei module. To make the best use of this, you may want to enable spidering with 'spider' or 'spider-intense' preset.\") }}\n    {% endif %}\n\n\n# Example for also running a dirbust\n\n#include:\n#  - dirbust-light\n```\n\n----------------------------------------\n\nTITLE: Defining BaseModule Class for BBOT in Python\nDESCRIPTION: Implementation of the BaseModule class that serves as the foundation for all BBOT modules. It manages module configuration, event handling, and provides core functionality and lifecycle methods that all modules inherit.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/basemodule.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass BaseModule(abc.ABC):\n    \"\"\"Base class for modules.\n\n    The base module class provides core functionality for all BBOT modules,\n    everything from logging, to event handling, to accessing an HTTP client.\n    \"\"\"\n\n    watched_events = set()\n    produced_events = set()\n    flags = set()\n    meta = {}\n    options = {}\n    conflicts = set()\n    scope_distance_modifier = 0\n    recursive_scope_distance_modifier = 0\n```\n\n----------------------------------------\n\nTITLE: Defining ScanBlacklist Class for BBOT Scanner in Python\nDESCRIPTION: The ScanBlacklist class manages the list of excluded targets or patterns for the BBOT scanner, preventing certain items from being scanned.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/target.md#2025-04-23_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass ScanBlacklist:\n```\n\n----------------------------------------\n\nTITLE: BBOT Preset with Environment Variable\nDESCRIPTION: YAML preset demonstrating the use of environment variables in BBOT configurations, specifically for Nuclei tags.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Do a nuclei scan\n\ntarget:\n  - evilcorp.com\n\nmodules:\n  - nuclei\n\nconfig:\n  modules:\n    nuclei:\n      tags: ${env:NUCLEI_TAGS}\n```\n\n----------------------------------------\n\nTITLE: Configuring Intense Spider Settings in YAML\nDESCRIPTION: YAML configuration for aggressive web spider settings with increased distance, depth and links per page limits.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Recursive web spider with more aggressive settings\n\ninclude:\n  - spider\n  \nconfig:\n  web:\n    # how many links to follow in a row\n    spider_distance: 4\n    # don't follow links whose directory depth is higher than 6\n    spider_depth: 6\n    # maximum number of links to follow per page\n    spider_links_per_page: 50\n```\n\n----------------------------------------\n\nTITLE: Configuring Module Parameters in BBOT\nDESCRIPTION: Configuration table showing module parameters, their data types, descriptions and default values. Includes settings for ZoomEye pagination, asset inventory management, Discord webhook integration, and HTTP authentication.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/configuration.md#2025-04-23_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| modules.zoomeye.max_pages                      | int      | How many pages of results to fetch                                                                                                                                                                                                                                                                                             | 20                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| modules.asset_inventory.output_file            | str      | Set a custom output file                                                                                                                                                                                                                                                                                                       |                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| modules.asset_inventory.recheck                | bool     | When use_previous=True, don't retain past details like open ports or findings. Instead, allow them to be rediscovered by the new scan                                                                                                                                                                                          | False                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| modules.asset_inventory.summary_netmask        | int      | Subnet mask to use when summarizing IP addresses at end of scan                                                                                                                                                                                                                                                                | 16                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| modules.asset_inventory.use_previous           | bool     |` Emit previous asset inventory as new events (use in conjunction with -n <old_scan_name>)                                                                                                                                                                                                                                       `| False                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| modules.csv.output_file                        | str      | Output to CSV file                                                                                                                                                                                                                                                                                                             |                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| modules.discord.event_types                    | list     | Types of events to send                                                                                                                                                                                                                                                                                                        | ['VULNERABILITY', 'FINDING']                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| modules.discord.min_severity                   | str      | Only allow VULNERABILITY events of this severity or higher                                                                                                                                                                                                                                                                     | LOW                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| modules.discord.retries                        | int      | Number of times to retry sending the message before skipping the event                                                                                                                                                                                                                                                         | 10                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| modules.discord.webhook_url                    | str      | Discord webhook URL                                                                                                                                                                                                                                                                                                            |                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| modules.emails.output_file                     | str      | Output to file                                                                                                                                                                                                                                                                                                                 |                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| modules.http.bearer                            | str      | Authorization Bearer token                                                                                                                                                                                                                                                                                                     |                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n```\n\n----------------------------------------\n\nTITLE: BBOT CDN Filtering Preset Configuration\nDESCRIPTION: YAML configuration preset for filtering CDN and cloud provider ports during BBOT scans. Defines which provider tags to filter and which ports to allow through the filter.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nmodules:\n  - portfilter\n\nconfig:\n  modules:\n    portfilter:\n      cdn_tags: cdn-,cloud-\n      allowed_cdn_ports: 80,443,8443\n```\n\n----------------------------------------\n\nTITLE: Postgres Output Configuration in YAML\nDESCRIPTION: YAML configuration for the Postgres output module in BBOT, demonstrating how to set up database connection details.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  modules:\n    postgres:\n      host: psq.fsociety.local\n      database: custom_bbot_db\n      port: 5432\n      username: postgres\n      password: bbotislife\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Spider Settings in YAML\nDESCRIPTION: YAML configuration for recursive web spider with settings for link following behavior and blacklist patterns to prevent session invalidation.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Recursive web spider\n\nmodules:\n  - httpx\n\nblacklist:\n  # Prevent spider from invalidating sessions by logging out\n  - \"RE:/.*(sign|log)[_-]?out\"\n\nconfig:\n  web:\n    # how many links to follow in a row\n    spider_distance: 2\n    # don't follow links whose directory depth is higher than 4\n    spider_depth: 4\n    # maximum number of links to follow per page\n    spider_links_per_page: 25\n```\n\n----------------------------------------\n\nTITLE: Security Scanning Module Configuration Table\nDESCRIPTION: Detailed listing of BBOT security scanning modules including dirbust-light, dotnet-audit, email-enum, fast, iis-shortnames, and kitchen-sink modules. Each entry specifies the module name, category, description, dependency count, and required dependencies.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_23\n\nLANGUAGE: text\nCODE:\n```\n| dirbust-light     |            | Basic web directory brute-force (surface-level directories only)                                                                         | 4           | ffuf, ffuf_shortnames, httpx, iis_shortnames|\n| dotnet-audit      | web        | Comprehensive scan for all IIS/.NET specific modules and module settings                                                                 | 8           | ajaxpro, badsecrets, dotnetnuke, ffuf, ffuf_shortnames, httpx, iis_shortnames, telerik|\n| dotnet-audit      |            | Comprehensive scan for all IIS/.NET specific modules and module settings                                                                 | 8           | ajaxpro, badsecrets, dotnetnuke, ffuf, ffuf_shortnames, httpx, iis_shortnames, telerik|\n| email-enum        |            | Enumerate email addresses from APIs, web crawling, etc.                                                                                  | 8           | dehashed, dnscaa, dnstlsrpt, emailformat, hunterio, pgp, skymem, sslcert|\n| fast              |            | Scan only the provided targets as fast as possible - no extra discovery                                                                  | 0           ||\n| iis-shortnames    | web        | Recursively enumerate IIS shortnames                                                                                                     | 3           | ffuf_shortnames, httpx, iis_shortnames|\n| iis-shortnames    |            | Recursively enumerate IIS shortnames                                                                                                     | 3           | ffuf_shortnames, httpx, iis_shortnames|\n| kitchen-sink      |            | Everything everywhere all at once                                                                                                        | 88          | anubisdb, apkpure, asn, azure_realm, azure_tenant, baddns, baddns_direct, baddns_zone, badsecrets, bevigil, binaryedge, bucket_amazon, bucket_azure, bucket_digitalocean, bucket_file_enum, bucket_firebase, bucket_google, bufferoverrun, builtwith, c99, censys, certspotter, chaos, code_repository, crt, crt_db, dehashed, digitorus, dnsbimi, dnsbrute, dnsbrute_mutations, dnscaa, dnscommonsrv, dnsdumpster, dnstlsrpt, docker_pull, dockerhub, emailformat, ffuf, ffuf_shortnames, filedownload, fullhunt, git, git_clone, gitdumper, github_codesearch, github_org, github_workflows, gitlab, google_playstore, gowitness, hackertarget, httpx, hunterio, iis_shortnames, ipneighbor, jadx, leakix, myssl, ntlm, oauth, otx, paramminer_cookies, paramminer_getparams, paramminer_headers, passivetotal, pgp, postman, postman_download, rapiddns, robots, securitytrails, securitytxt, shodan_dns, shodan_idb, sitedossier, skymem, social, sslcert, subdomaincenter, subdomainradar, trickest, trufflehog, urlscan, virustotal, wappalyzer, wayback, zoomeye |\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Web Scan in YAML\nDESCRIPTION: YAML configuration for quick web scanning that includes IIS shortnames testing.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Quick web scan\n\ninclude:\n  - iis-shortnames\n\nflags:\n  - web-basic\n```\n\n----------------------------------------\n\nTITLE: Validating BBOT Preset Configuration\nDESCRIPTION: Command to verify the final configuration that will be used by BBOT after applying all presets and options.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nbbot -p ./mypreset.yml --current-preset\n```\n\n----------------------------------------\n\nTITLE: Using Regex Pattern for Blacklisting in BBOT\nDESCRIPTION: Examples of using regex patterns to blacklist specific events in BBOT scans.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/index.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nbbot -t evilcorp.com --blacklist \"RE:signout\"\n```\n\nLANGUAGE: bash\nCODE:\n```\nbbot -t evilcorp.com --blacklist 'RE:signout\\.aspx$'\n```\n\n----------------------------------------\n\nTITLE: Basic DNS Resolution in BBOT\nDESCRIPTION: Example showing how to perform DNS resolution using BBOT's helper functions. The helper can be accessed directly through the self.helpers interface.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/helpers/dns.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nself.helpers.resolve(\"evilcorp.com\")\n```\n\n----------------------------------------\n\nTITLE: Defining make_event Function in Python for BBOT\nDESCRIPTION: The make_event function is used to create BBOT events. It likely takes parameters to define the event properties and returns a new event object.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/event.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nbbot.core.event.base.make_event\n```\n\n----------------------------------------\n\nTITLE: HTTP Output Module Configuration in YAML\nDESCRIPTION: YAML configuration for the HTTP output module in BBOT, showing how to set up custom HTTP endpoints with authentication.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  modules:\n    http:\n      url: https://localhost:8000\n      method: PUT\n      # Authorization: Bearer\n      bearer: <bearer_token>\n      # OR\n      username: bob\n      password: P@ssw0rd\n```\n\n----------------------------------------\n\nTITLE: Setting Module Configuration via Command Line\nDESCRIPTION: Example of configuring a BBOT module by passing options through the command line interface using the -c flag.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/module_howto.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbbot -m nmap -c modules.nmap.top_ports=250\n```\n\n----------------------------------------\n\nTITLE: Configuring BBOT to Display HTTP Response Events\nDESCRIPTION: YAML configuration to modify which event types are omitted from BBOT output. This example enables HTTP_RESPONSE events which contain full raw HTTP responses.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nomit_event_types:\n  - URL_UNVERIFIED\n  # - HTTP_RESPONSE\n```\n\n----------------------------------------\n\nTITLE: Configuring BBOT HTTP Proxy via YAML Config File\nDESCRIPTION: Example showing how to configure BBOT to use an HTTP proxy by adding the configuration to the YAML config file.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/configuration.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nhttp_proxy: http://127.0.0.1:8080\n```\n\n----------------------------------------\n\nTITLE: Executing BBOT with a Custom Preset\nDESCRIPTION: Command to run BBOT using a custom preset file. This allows users to apply their customized scanning configurations.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbbot -p ./my_subdomains.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Module Options via YAML Configuration File\nDESCRIPTION: Example of setting module configuration options in the BBOT YAML configuration file, which allows for persistent module settings.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/module_howto.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmodules:\n  nmap:\n    top_ports: 250\n```\n\n----------------------------------------\n\nTITLE: Generating Markdown Table of BBOT Default Presets\nDESCRIPTION: This markdown snippet creates a table that lists various presets for the BBOT tool. It includes columns for the preset name, category, description, number of modules, and a detailed list of included modules for each preset.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- BBOT PRESETS -->\n| Preset            | Category   | Description                                                                                                                              | # Modules   | Modules                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n|-------------------|------------|------------------------------------------------------------------------------------------------------------------------------------------|-------------||\n| baddns-intense    |            | Run all baddns modules and submodules.                                                                                                   | 4           | baddns, baddns_direct, baddns_zone, httpx|\n| cloud-enum        |            | Enumerate cloud resources such as storage buckets, etc.                                                                                  | 60          | anubisdb, asn, azure_realm, azure_tenant, baddns, baddns_direct, baddns_zone, bevigil, binaryedge, bucket_amazon, bucket_azure, bucket_digitalocean, bucket_file_enum, bucket_firebase, bucket_google, bufferoverrun, builtwith, c99, censys, certspotter, chaos, crt, crt_db, digitorus, dnsbimi, dnsbrute, dnsbrute_mutations, dnscaa, dnscommonsrv, dnsdumpster, dnstlsrpt, fullhunt, github_codesearch, github_org, hackertarget, httpx, hunterio, ipneighbor, leakix, myssl, oauth, otx, passivetotal, postman, postman_download, rapiddns, securitytrails, securitytxt, shodan_dns, shodan_idb, sitedossier, social, sslcert, subdomaincenter, subdomainradar, trickest, urlscan, virustotal, wayback, zoomeye                                                                                                                                                                                                                                                                                                                                                    |\n| code-enum         |            | Enumerate Git repositories, Docker images, etc.                                                                                          | 18          | apkpure, code_repository, docker_pull, dockerhub, git, git_clone, gitdumper, github_codesearch, github_org, github_workflows, gitlab, google_playstore, httpx, jadx, postman, postman_download, social, trufflehog|\n| dirbust-heavy     | web        | Recursive web directory brute-force (aggressive)                                                                                         | 5           | ffuf, ffuf_shortnames, httpx, iis_shortnames, wayback|\n| dirbust-heavy     |            | Recursive web directory brute-force (aggressive)                                                                                         | 5           | ffuf, ffuf_shortnames, httpx, iis_shortnames, wayback                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| dirbust-light     | web        | Basic web directory brute-force (surface-level directories only)                                                                         | 4           | ffuf, ffuf_shortnames, httpx, iis_shortnames|\n```\n\n----------------------------------------\n\nTITLE: BBOT API Key Configuration\nDESCRIPTION: Examples of configuring API keys in BBOT using different methods including presets and global config\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/index.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: My custom subdomain enum preset\n\ninclude:\n  - subdomain-enum\n  - cloud-enum\n\nconfig:\n  modules:\n    shodan_dns:\n      api_key: deadbeef\n    virustotal:\n      api_key: cafebabe\n```\n\nLANGUAGE: yaml\nCODE:\n```\nmodules:\n  shodan_dns:\n    api_key: deadbeef\n  virustotal:\n    api_key: cafebabe\n```\n\n----------------------------------------\n\nTITLE: Blacklisting Subdomains in BBOT\nDESCRIPTION: Command showing how to exclude specific subdomains and their children from a BBOT scan using blacklist functionality.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/index.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nbbot -t evilcorp.com --blacklist internal.evilcorp.com -f subdomain-enum -m nmap nuclei --allow-deadly\n```\n\n----------------------------------------\n\nTITLE: Overriding BBOT Module Thread Count Configuration\nDESCRIPTION: Command to override a BBOT module's thread count, increasing the baddns module to use 20 threads instead of the default. This helps speed up modules that may be running slowly.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# increase baddns threads to 20\nbbot -t evilcorp.com -m baddns -c modules.baddns.module_threads=20\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Parameter Mining in YAML\nDESCRIPTION: YAML configuration for discovering web parameters through brute-force methods. Sets spider distance to 1 and depth to 4 while utilizing httpx module.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Discover new web parameters via brute-force\n\nflags:\n  - web-paramminer\n\nmodules:\n  - httpx\n\nconfig:\n  web:\n    spider_distance: 1\n    spider_depth: 4\n```\n\n----------------------------------------\n\nTITLE: Running BBOT with Custom Nuclei Templates via Command Line\nDESCRIPTION: Example command showing how to run BBOT with specific Nuclei templates for takeover scanning\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/nuclei.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbbot -m nuclei -c modules.nuclei.templates=http/takeovers/airee-takeover.yaml,http/takeovers/cargo-takeover.yaml\n```\n\n----------------------------------------\n\nTITLE: Neo4j Docker Setup Command\nDESCRIPTION: Docker command to set up and run Neo4j for visualizing BBOT data.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker run \\\n    --name neo4j \\\n    -p7474:7474 -p7687:7687 \\\n    -d \\\n    -v $HOME/neo4j/data:/data \\\n    -v $HOME/neo4j/logs:/logs \\\n    -v $HOME/neo4j/import:/var/lib/neo4j/import \\\n    -v $HOME/neo4j/plugins:/plugins \\\n    --env NEO4J_AUTH=neo4j/bbotislife \\\n    neo4j:latest\n```\n\n----------------------------------------\n\nTITLE: Enabling Minimal DNS Resolution in BBOT\nDESCRIPTION: Command to use minimal DNS resolution in BBOT, only resolving A and AAAA records. This is useful when using IP whitelists or blacklists while still improving performance.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n# only resolve A and AAAA records\nbbot -m httpx gowitness wappalyzer -t urls.txt -c dns.minimal=true\n```\n\n----------------------------------------\n\nTITLE: Setting up dotnet-audit Preset in YAML for BBOT\nDESCRIPTION: This YAML configuration establishes the dotnet-audit preset for BBOT. It configures a comprehensive scan for IIS/.NET specific modules and settings, including various related modules and their configurations.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Comprehensive scan for all IIS/.NET specific modules and module settings\n\n\ninclude:\n  - iis-shortnames\n\nmodules:\n  - httpx\n  - badsecrets\n  - ffuf_shortnames\n  - ffuf\n  - telerik\n  - ajaxpro\n  - dotnetnuke\n\nconfig:\n  modules:\n    ffuf:\n      extensions: asp,aspx,ashx,asmx,ascx\n      extensions_ignore_case: True\n    ffuf_shortnames:\n      find_subwords: True\n    telerik:\n      exploit_RAU_crypto: True\n      include_subdirs: True # Run against every directory, not the default first received URL per-host\n```\n\n----------------------------------------\n\nTITLE: Configuring BBOT HTTP Proxy via Command Line\nDESCRIPTION: Example showing how to configure BBOT to send traffic through an HTTP proxy using command-line configuration.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/configuration.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# send BBOT traffic through an HTTP proxy\nbbot -t evilcorp.com -c http_proxy=http://127.0.0.1:8080\n```\n\n----------------------------------------\n\nTITLE: Running Specific BBOT Tests\nDESCRIPTION: Commands demonstrating how to run specific tests and filter test execution using pytest.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/tests.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# run only the sslcert test\npoetry run pytest -k test_module_sslcert\n```\n\n----------------------------------------\n\nTITLE: Showing All URL_UNVERIFIED Events in BBOT\nDESCRIPTION: Command to reveal all URL_UNVERIFIED events in BBOT output by modifying the output configuration. This displays links that haven't yet been visited by the httpx module.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n# visit www.evilcorp.com and extract all the links\nbbot -t www.evilcorp.com -m httpx -c omit_event_types=[] scope.report_distance=2\n```\n\n----------------------------------------\n\nTITLE: Configuring email-enum Preset in YAML for BBOT\nDESCRIPTION: This YAML configuration sets up the email-enum preset for BBOT. It enables email address enumeration from various sources and configures output modules specifically for emails.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Enumerate email addresses from APIs, web crawling, etc.\n\nflags:\n  - email-enum\n\noutput_modules:\n  - emails\n```\n\n----------------------------------------\n\nTITLE: Docker Custom Preset Configuration\nDESCRIPTION: Example of running BBOT with Docker using a custom preset configuration file\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/index.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# use the preset `my_preset.yml` from the current directory\ndocker run --rm -it \\\n  -v \"$HOME/.bbot/scans:/root/.bbot/scans\" \\\n  -v \"$PWD/my_preset.yml:/my_preset.yml\" \\\n  blacklanternsecurity/bbot -p /my_preset.yml\n```\n\n----------------------------------------\n\nTITLE: BBOT Preset for Custom Module Directories\nDESCRIPTION: YAML preset that specifies additional directories for loading custom BBOT modules.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nmodule_dirs:\n  - /home/user/custom_modules\n```\n\n----------------------------------------\n\nTITLE: Custom BBOT Spider Preset\nDESCRIPTION: A simple YAML preset that sets a custom spider distance for web crawling in BBOT.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  web:\n    spider_distance: 1\n```\n\n----------------------------------------\n\nTITLE: Configuring iis-shortnames Preset in YAML for BBOT\nDESCRIPTION: This YAML configuration defines the iis-shortnames preset for BBOT. It sets up recursive enumeration of IIS shortnames by exploiting the vulnerability rather than just detecting it.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Recursively enumerate IIS shortnames\n\nflags:\n  - iis-shortnames\n\nconfig:\n  modules:\n    iis_shortnames:\n      # exploit the vulnerability\n      detect_only: false\n```\n\n----------------------------------------\n\nTITLE: Running BBOT with Environment Variable\nDESCRIPTION: Command to execute BBOT using a preset with an environment variable, allowing runtime configuration of Nuclei tags.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets.md#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nNUCLEI_TAGS=apache,nginx bbot -p ./my_nuclei.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Out-of-scope Event Display in BBOT\nDESCRIPTION: Command to display out-of-scope events up to one hop away from the main scope using the scope.report_distance configuration parameter.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/index.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nbbot -t evilcorp.com -f subdomain-enum -c scope.report_distance=1\n```\n\n----------------------------------------\n\nTITLE: Configuring dirbust-light Preset in YAML for BBOT\nDESCRIPTION: This YAML configuration defines the dirbust-light preset for BBOT. It sets up basic web directory brute-forcing, limited to surface-level directories with a smaller wordlist.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Basic web directory brute-force (surface-level directories only)\n\ninclude:\n  - iis-shortnames\n\nmodules:\n  - ffuf\n\nconfig:\n  modules:\n    ffuf:\n      # wordlist size = 1000\n      lines: 1000\n```\n\n----------------------------------------\n\nTITLE: Setting up cloud-enum Preset in YAML for BBOT\nDESCRIPTION: This YAML configuration defines the cloud-enum preset for BBOT. It includes subdomain enumeration and sets the cloud-enum flag for enumerating cloud resources like storage buckets.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Enumerate cloud resources such as storage buckets, etc.\n\ninclude:\n  - subdomain-enum\n\nflags:\n  - cloud-enum\n```\n\n----------------------------------------\n\nTITLE: Excluding CDNs from BBOT Port Scan with Custom Tags\nDESCRIPTION: Command to exclude CDNs and cloud providers from port scanning results by using the --exclude-cdns flag with custom tag filtering. This helps reduce noise from CDN infrastructure.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbbot -t evilcorp.com --exclude-cdns -c modules.portfilter.cdn_tags=cdn,cloud\n```\n\n----------------------------------------\n\nTITLE: Running BBOT with Custom Yara Rules\nDESCRIPTION: Command line example showing how to use the --custom-yara-rules option to specify a file containing Yara rules when running BBOT.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/custom_yara_rules.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nbbot -m httpx --custom-yara-rules=test.yara -t http://example.com/\n```\n\n----------------------------------------\n\nTITLE: Yara Rule with Description Meta Attribute\nDESCRIPTION: Yara rule that includes a description meta attribute which will be included in the BBOT finding output.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/custom_yara_rules.md#2025-04-23_snippet_4\n\nLANGUAGE: yara\nCODE:\n```\nrule AAAABBBB {\n\n    meta:\n        description = \"contains our test string\"\n    strings:\n        $str1 = \"AAAABBBB\"\n    condition:\n        $str1\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring baddns-intense Preset in YAML for BBOT\nDESCRIPTION: This YAML configuration sets up the baddns-intense preset for BBOT. It enables all baddns modules and submodules for comprehensive DNS analysis.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Run all baddns modules and submodules.\n\nmodules:\n  - baddns\n  - baddns_zone\n  - baddns_direct\n\nconfig:\n  modules:\n    baddns:\n      enabled_submodules: [CNAME,references,MX,NS,TXT]\n```\n\n----------------------------------------\n\nTITLE: Installing BBOT with pipx\nDESCRIPTION: Instructions for installing BBOT using pipx package manager, including both stable and development versions\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/index.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# stable version\npipx install bbot\n\n# bleeding edge (dev branch)\npipx install --pip-args '\\--pre' bbot\n\n# execute bbot command\nbbot --help\n```\n\n----------------------------------------\n\nTITLE: Grep DNS Names from TXT Output in Bash\nDESCRIPTION: Example of how to extract DNS names from BBOT's tab-delimited TXT output using grep and cut.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# grep out only the DNS_NAMEs\ncat ~/.bbot/scans/extreme_johnny/output.txt | grep '[DNS_NAME]' | cut -f2\nevilcorp.com\nwww.evilcorp.com\nmail.evilcorp.com\n```\n\n----------------------------------------\n\nTITLE: Simple String Search Yara Rule\nDESCRIPTION: Basic Yara rule that searches for a single string in HTTP response data.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/custom_yara_rules.md#2025-04-23_snippet_1\n\nLANGUAGE: yara\nCODE:\n```\nrule find_string {\n    strings:\n        $str1 = \"AAAABBBB\"\n\n    condition:\n        $str1\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring code-enum Preset in YAML for BBOT\nDESCRIPTION: This YAML configuration sets up the code-enum preset for BBOT. It enables the code-enum flag for enumerating Git repositories, Docker images, and other code-related resources.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Enumerate Git repositories, Docker images, etc.\n\nflags:\n  - code-enum\n```\n\n----------------------------------------\n\nTITLE: Multiple Target Scanning with BBOT and Nuclei\nDESCRIPTION: Command to scan multiple targets simultaneously using BBOT with Nuclei integration. Uses web-basic profile and portscan module across multiple domains.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/nuclei.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbbot -f web-basic -m portscan nuclei --allow-deadly -t app1.evilcorp.com app2.evilcorp.com app3.evilcorp.com\n```\n\n----------------------------------------\n\nTITLE: Filter JSON Output with jq in Bash\nDESCRIPTION: Demonstrates how to use jq to filter BBOT's JSON output, extracting specific fields like DNS names.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# pull out only the .data attribute of every DNS_NAME\n$ jq -r 'select(.type==\"DNS_NAME\") | .data' ~/.bbot/scans/extreme_johnny/output.json\nevilcorp.com\nwww.evilcorp.com\nmail.evilcorp.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Nuclei Templates via YAML Configuration\nDESCRIPTION: YAML configuration example for specifying custom Nuclei templates in BBOT\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/nuclei.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmodules:\n  nuclei:\n    templates: http/takeovers/airee-takeover.yaml,http/takeovers/cargo-takeover.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Screenshots in YAML\nDESCRIPTION: YAML configuration for taking webpage screenshots with customizable resolution and output settings using gowitness.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/presets_list.md#2025-04-23_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Take screenshots of webpages\n\nflags:\n  - web-screenshots\n\nconfig:\n  modules:\n    gowitness:\n      resolution_x: 1440\n      resolution_y: 900\n      # folder to output web screenshots (default is inside ~/.bbot/scans/scan_name)\n      output_path: \"\"\n      # whether to take screenshots of social media pages\n      social: True\n```\n\n----------------------------------------\n\nTITLE: Basic Web and Port Scanning with BBOT and Nuclei\nDESCRIPTION: Command to perform basic web scanning and port scanning on a single target using BBOT with Nuclei integration. Uses web-basic profile and portscan module.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/nuclei.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbbot -f web-basic -m portscan nuclei --allow-deadly -t app.evilcorp.com\n```\n\n----------------------------------------\n\nTITLE: Elasticsearch Output Configuration in Bash\nDESCRIPTION: Command-line configuration for sending BBOT output directly to Elasticsearch using the HTTP output module.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# send scan results directly to elasticsearch\nbbot -t evilcorp.com -om http -c \\\n  modules.http.url=http://localhost:8000/<your_index>/_doc \\\n  modules.http.siem_friendly=true \\\n  modules.http.username=elastic \\\n  modules.http.password=changeme\n```\n\n----------------------------------------\n\nTITLE: Counting Event Types in Neo4j Database\nDESCRIPTION: Cypher query to count the number of nodes by label (BBOT event type) in the Neo4j database.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_13\n\nLANGUAGE: cypher\nCODE:\n```\n// Get the count of labels/BBOT events in the Neo4j Database\nMATCH (n)\nRETURN labels(n), count(n)\n```\n\n----------------------------------------\n\nTITLE: Customizing Allowed CDN Ports in BBOT\nDESCRIPTION: Command to specify which ports are allowed when scanning CDN infrastructure. This allows basic web ports while filtering out other CDN-related ports.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nbbot -t evilcorp.com --exclude-cdns -c modules.portfilter.allowed_cdn_ports=80,443,8443\n```\n\n----------------------------------------\n\nTITLE: Subdomain Enumeration and Scanning with BBOT\nDESCRIPTION: Command to perform subdomain enumeration along with web and port scanning on multiple targets. Combines subdomain-enum and web-basic profiles with portscan module.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/nuclei.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbbot -f subdomain-enum web-basic -m portscan nuclei --allow-deadly -t app1.evilcorp.com app2.evilcorp.com app3.evilcorp.com\n```\n\n----------------------------------------\n\nTITLE: PGP Search URLs Configuration\nDESCRIPTION: Default configuration for PGP key server search URLs used by the PGP module. Contains URLs for multiple key servers including Ubuntu, Earth.li, PGPKeys.eu, and MIT.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/configuration.md#2025-04-23_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n['https://keyserver.ubuntu.com/pks/lookup?fingerprint=on&op=vindex&search=<query>', 'http://the.earth.li:11371/pks/lookup?fingerprint=on&op=vindex&search=<query>', 'https://pgpkeys.eu/pks/lookup?search=<query>&op=index', 'https://pgp.mit.edu/pks/lookup?search=<query>&op=index']\n```\n\n----------------------------------------\n\nTITLE: Clearing the Neo4j Database\nDESCRIPTION: Cypher query to remove all nodes and relationships from the Neo4j database, effectively resetting it.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_16\n\nLANGUAGE: cypher\nCODE:\n```\n// Clear the database\nMATCH (n) DETACH DELETE n\n```\n\n----------------------------------------\n\nTITLE: Disabling DNS Resolution in BBOT Scans\nDESCRIPTION: Command to completely disable DNS resolution in BBOT for faster scans with pre-discovered targets. This skips all DNS lookups during the scan process.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n# completely disable DNS resolution\nbbot -m httpx gowitness wappalyzer -t urls.txt -c dns.disable=true\n```\n\n----------------------------------------\n\nTITLE: Multiple String Search Yara Rule\nDESCRIPTION: Yara rule that searches for multiple strings and matches if any of them are found using the 'any of them' condition.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/custom_yara_rules.md#2025-04-23_snippet_2\n\nLANGUAGE: yara\nCODE:\n```\nrule find_string {\n    strings:\n        $str1 = \"AAAABBBB\"\n        $str2 = \"CCCCDDDD\"\n\n    condition:\n        any of them\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Event Emission Methods in Python\nDESCRIPTION: Methods for creating and emitting events from the BaseModule, including event verification, source tracking, and scope checking.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/basemodule.md#2025-04-23_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef _validate_emitted_event(self, event):\n        \"\"\"Make sure an event meets our standards\"\"\"\n        # check if the module shouldn't produce any events\n        if not self.produced_events:\n            self.warning(f\"Module emitted {event.type} but produced_events is empty\")\n            return False\n\n        # handle wildcard\n        if \"*\" in self.produced_events:\n            return True\n\n        # otherwise make sure the event's type is among those that the module claims to emit\n        event_matches = False\n        for e in self.produced_events:\n            if fnmatch(event.type, e):\n                event_matches = True\n        if not event_matches:\n            types_string = \"', '\".join(sorted(self.produced_events))\n            self.warning(\n                f\"Module is not supposed to emit {event.type}, only '{types_string}'\"\n            )\n            return False\n\n        return True\n\n    def emit_event(self, *args, **kwargs):\n        \"\"\"Create and emit an event in one swoop\"\"\"\n        try:\n            if len(args) == 1 and isinstance(args[0], Event):\n                # we got a raw event\n                event = args[0]\n            else:\n                # passed in args and kwargs to create an event\n                event = self.make_event(*args, **kwargs)\n        except Exception as e:\n            self.warning(f\"Error creating event: {make_exception_message(e)}\")\n            return False\n\n        if not self._validate_emitted_event(event):\n            return False\n\n        self._processed_stats[event.type] += 1\n        is_in_scope = self.scanner.is_in_scope(event)\n        if self.scanner and not is_in_scope:\n            if not event.in_scope:\n                if self.debug:\n                    self.debug_event(\n                        event, f\"Filtered (not in scope, distance {event.scope_distance})\"\n                    )\n                return False\n\n        if self.scanner and self.scanner.use_ingestor:\n            self.scanner.emit_event(event)\n\n        # look for watchers\n        if event.source in self.watching_targets:\n            # check if the watcher wants this event type\n            for event_type in (event.type, \"*\"):\n                masking_info = self._masked_events.get((event.source, event_type))\n                if masking_info:\n                    mask_id, parent_module = masking_info\n                    self.debug_event(\n                        event,\n                        f\"Masked by {parent_module} (ID: {mask_id}, watching {event.source})\",\n                    )\n                    return True\n\n        if self.debug:\n            self.debug_event(event, f\"Created\")\n\n        return True\n\n    def make_event(self, data=None, event_type=None, source=None, module=None, tags=None, **kwargs):\n        \"\"\"Helper to create events. Accepts an Event or kwargs to construct one.\"\"\"\n\n        module = module or self.name\n\n        # Apply inherited tags\n        if source and source in self._cached_events:\n            # Apply tags from the source event\n            source_event = self._cached_events[source]\n            if not tags:\n                tags = source_event.tags.copy()\n            else:\n                for t in source_event.tags:\n                    if t not in tags:\n                        tags.append(t)\n\n        return Event(\n            data=data,\n            event_type=event_type,\n            source=source,\n            module=module,\n            tags=tags,\n            **kwargs,\n        )\n```\n\n----------------------------------------\n\nTITLE: Example of SIEM-Friendly BBOT JSON Output\nDESCRIPTION: JSON example showing the structured format of BBOT's SIEM-friendly output. The data attribute is always a dictionary with the event type as a key.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"DNS_NAME\",\n  \"data\": {\n    \"DNS_NAME\": \"blacklanternsecurity.com\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: BBOT Module Configuration Table\nDESCRIPTION: A markdown table documenting BBOT modules including web reporting, websocket output, cloud checking, DNS resolution, data aggregation, data extraction, event speculation, and file unarchiving capabilities. Each module is listed with its type, status, description, tags, and metadata.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/list_of_modules.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| web_report           | output   | No              | Create a markdown report with web assets                                                                                                              |                                                                  | FINDING, TECHNOLOGY, URL, VHOST, VULNERABILITY                                                                                          |                                                             | @liquidsec       | 2023-02-08     |\n| websocket            | output   | No              | Output to websockets                                                                                                                  |                                                                  | *                                                                                                                                       |                                                             | @TheTechromancer | 2022-04-15     |\n| cloudcheck           | internal | No              | Tag events by cloud provider, identify cloud resources like storage buckets                                                           |                                                                  | *                                                                                                                                       |                                                             | @TheTechromancer | 2024-07-07     |\n| dnsresolve           | internal | No              | Perform DNS resolution                                                                                                                |                                                                  | *                                                                                                                                       | DNS_NAME, IP_ADDRESS, RAW_DNS_RECORD                        | @TheTechromancer | 2022-04-08     |\n| aggregate            | internal | No              | Summarize statistics at the end of a scan                                                                                             | passive, safe                                                    |                                                                                                                                         |                                                             | @TheTechromancer | 2022-07-25     |\n| excavate             | internal | No              | Passively extract juicy tidbits from scan data                                                                                        | passive                                                          | HTTP_RESPONSE, RAW_TEXT                                                                                                                 | URL_UNVERIFIED, WEB_PARAMETER                               | @liquidsec       | 2022-06-27     |\n| speculate            | internal | No              | Derive certain event types from others by common sense                                                                                | passive                                                          | AZURE_TENANT, DNS_NAME, DNS_NAME_UNRESOLVED, HTTP_RESPONSE, IP_ADDRESS, IP_RANGE, SOCIAL, STORAGE_BUCKET, URL, URL_UNVERIFIED, USERNAME | DNS_NAME, FINDING, IP_ADDRESS, OPEN_TCP_PORT, ORG_STUB      | @liquidsec       | 2022-05-03     |\n| unarchive            | internal | No              | Extract different types of files into folders on the filesystem                                                                       | passive, safe                                                    | FILESYSTEM                                                                                                                              | FILESYSTEM                                                  | @domwhewell-sage | 2024-12-08     |\n```\n\n----------------------------------------\n\nTITLE: Running BBOT with Specific Yara Rule Example\nDESCRIPTION: Command showing how to scan a website with a specific Yara rule (substack.yara) to detect Substack links.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/custom_yara_rules.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nbbot -m httpx --custom-yara-rules=substack.yara -t http://www.blacklanternsecurity.com/\n```\n\n----------------------------------------\n\nTITLE: Yara Rule with emit_match Meta Attribute\nDESCRIPTION: Yara rule that includes the emit_match attribute, which when set to true includes the matched content in the BBOT finding.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/custom_yara_rules.md#2025-04-23_snippet_6\n\nLANGUAGE: yara\nCODE:\n```\nrule SubstackLink\n{\n    meta:\n        description = \"contains a Substack link\"\n        emit_match = true\n    strings:\n        $substack_link = /https?:\\/\\/[a-zA-Z0-9.-]+\\.substack\\.com/\n    condition:\n        $substack_link\n}\n```\n\n----------------------------------------\n\nTITLE: Subdomain Enumeration Configuration\nDESCRIPTION: YAML configuration for subdomain enumeration preset, including DNS settings and API configuration options\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: Enumerate subdomains via APIs, brute-force\n\nflags:\n  # enable every module with the subdomain-enum flag\n  - subdomain-enum\n\noutput_modules:\n  # output unique subdomains to TXT file\n  - subdomains\n\nconfig:\n  dns:\n    threads: 25\n    brute_threads: 1000\n  # put your API keys here\n  # modules:\n  #   github:\n  #     api_key: \"\"\n  #   chaos:\n  #     api_key: \"\"\n  #   securitytrails:\n  #     api_key: \"\"\n```\n\n----------------------------------------\n\nTITLE: JSON Output Example for BBOT Events\nDESCRIPTION: Sample JSON output for a BBOT event, showing the structure and included fields like type, id, data, and tags.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"IP_ADDRESS\",\n  \"id\": \"IP_ADDRESS:13cd09c2adf0860a582240229cd7ad1dccdb5eb1\",\n  \"data\": \"1.2.3.4\",\n  \"scope_distance\": 1,\n  \"scan\": \"SCAN:64c0e076516ae7aa6502fd99489693d0d5ec26cc\",\n  \"timestamp\": 1688518967.740472,\n  \"resolved_hosts\": [\"1.2.3.4\"],\n  \"parent\": \"DNS_NAME:2da045542abbf86723f22383d04eb453e573723c\",\n  \"tags\": [\"distance-1\", \"ipv4\", \"internal\"],\n  \"module\": \"A\",\n  \"module_sequence\": \"A\"\n}\n```\n\n----------------------------------------\n\nTITLE: BBOT Command-line API Key Configuration\nDESCRIPTION: Example of specifying API keys directly via command-line arguments\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/index.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# specify API key with -c\nbbot -t evilcorp.com -f subdomain-enum -c modules.shodan_dns.api_key=deadbeef modules.virustotal.api_key=cafebabe\n```\n\n----------------------------------------\n\nTITLE: Displaying BBOT Event Output in Terminal\nDESCRIPTION: Shows the format of a BBOT event as displayed in the terminal output. It includes the event type, data, source module, and tags.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/events.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n[DNS_NAME]      www.evilcorp.com    sslcert         (distance-0, in-scope, resolved, subdomain, a-record)\n ^^^^^^^^       ^^^^^^^^^^^^^^^^    ^^^^^^^          ^^^^^^^^^^\nevent type      event data          source module    tags\n```\n\n----------------------------------------\n\nTITLE: BBOT Python Library Integration - Asynchronous\nDESCRIPTION: Example of using BBOT as a Python library in asynchronous mode with async/await syntax\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/README.md#2025-04-23_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom bbot.scanner import Scanner\n\nasync def main():\n    scan = Scanner(\"evilcorp.com\", presets=[\"subdomain-enum\"])\n    async for event in scan.async_start():\n        print(event.json())\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())\n```\n\n----------------------------------------\n\nTITLE: Implementing Event Handling in BaseModule\nDESCRIPTION: Implementation of event handling methods in BaseModule including processing, masking, and batching of events for efficient processing.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/basemodule.md#2025-04-23_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef _process_event(self, event):\n        \"\"\"Process a single event\"\"\"\n        if self._abort and not self.allow_events_during_abort:\n            return\n\n        if not self.accept_event(event):\n            if self.debug:\n                self.debug_event(event, f\"Skipped\")\n            return\n\n        self._event_stats[event.type] = self._event_stats.get(event.type, 0) + 1\n\n        self._batch.append(event)\n        current_batch_size = len(self._batch)\n\n        processed_all = False\n        if current_batch_size >= self.batch_size:\n            processed_all = self._process_events_in_batch()\n\n        if processed_all:\n            self._batch = []\n            if self.batch_wait > 0:\n                eventlet.sleep(self.batch_wait)\n\n    def _process_events_in_batch(self):\n        \"\"\"Process the events accumulated in self._batch\"\"\"\n        try:\n            if not self._batch:\n                return True\n\n            if self._task_pool.waiting() >= len(self._batch):\n                self.warning(\n                    f\"Too many tasks waiting ({self._task_pool.waiting()}), skipping batch\"\n                )\n                return False\n\n            events = self._batch[:]\n            for event in events:\n                # Release the semaphore when we're done processing this event\n                self._event_semaphore.acquire()\n                self._task_pool.spawn(self._safe_process_event, event)\n\n            return True\n        except Exception as e:\n            self.warning(\n                f\"Error processing batch of {len(self._batch)} events: {make_exception_message(e)}\"\n            )\n            return False\n```\n\n----------------------------------------\n\nTITLE: Displaying Out-of-scope Events in BBOT\nDESCRIPTION: Command to increase the scope reporting distance in BBOT to see events that are normally hidden. This shows more of BBOT's internal events like DNS resolution results.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n# display events up to scope distance 2 (default == 0)\nbbot -f subdomain-enum -t evilcorp.com -c scope.report_distance=2\n```\n\n----------------------------------------\n\nTITLE: Yara Rule with Tags Meta Attribute\nDESCRIPTION: Yara rule that includes both description and tags meta attributes, where tags will be attached to resulting BBOT events.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/custom_yara_rules.md#2025-04-23_snippet_5\n\nLANGUAGE: yara\nCODE:\n```\nrule AAAABBBB {\n\n    meta:\n        description = \"contains our test string\"\n        tags = \"tag1,tag2,tag3\"\n    strings:\n        $str1 = \"AAAABBBB\"\n    condition:\n        $str1\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Shodan API Key in BBOT YAML Config\nDESCRIPTION: Example showing how to set up the Shodan DNS API key in the BBOT configuration file using nested YAML structure.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/configuration.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmodules:\n  shodan_dns:\n    api_key: deadbeef\n```\n\n----------------------------------------\n\nTITLE: Running BBOT Tests and Code Formatting\nDESCRIPTION: These commands show how to format code using ruff and run the BBOT test suite. This is an important step to ensure changes pass all tests before submitting a pull request to the main repository.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/dev_environment.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# auto-format code indentation, etc.\nruff format\n\n# run tests\n./bbot/test/run_tests.sh\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Output in BBOT Tests\nDESCRIPTION: Command to run pytest with debug logging enabled.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/tests.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npoetry run pytest --log-cli-level=DEBUG\n```\n\n----------------------------------------\n\nTITLE: Regex-based Yara Rule\nDESCRIPTION: Yara rule that uses a regular expression pattern to match varying sequences of characters.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/custom_yara_rules.md#2025-04-23_snippet_3\n\nLANGUAGE: yara\nCODE:\n```\nrule find_AAAABBBB_regex {\n    strings:\n        $regex = /A{1,4}B{1,4}/\n\n    condition:\n        $regex\n}\n```\n\n----------------------------------------\n\nTITLE: Invoking BBOT Web Helper for HTTP Requests in Python\nDESCRIPTION: Example showing how to use the self.helpers object to make a simple HTTP request to a website. The web helper methods can be accessed directly from the self.helpers instance.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/helpers/web.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nself.helpers.request(\"https://www.evilcorp.com\")\n```\n\n----------------------------------------\n\nTITLE: Implementing BBOTTarget Class for BBOT Scanner in Python\nDESCRIPTION: The BBOTTarget class is likely the main target class for the BBOT scanner, combining functionality from other target-related classes to represent a complete scan target.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/target.md#2025-04-23_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass BBOTTarget:\n```\n\n----------------------------------------\n\nTITLE: Displaying BBOT Modules Table in Markdown\nDESCRIPTION: A markdown table displaying the comprehensive list of BBOT security modules with details about each module's type, API key requirements, description, flags, events consumed and produced, author information, and creation date.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/modules/list_of_modules.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- BBOT MODULES -->\n| Module               | Type     | Needs API Key   | Description                                                                                                                                           | Flags                                                            | Consumed Events                                                                                                                         | Produced Events                                             | Author           | Created Date   |\n|----------------------|----------|-----------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------|------------------|----------------|\n| ajaxpro              | scan     | No              | Check for potentially vulnerable Ajaxpro instances                                                                                                    | active, safe, web-thorough                                       | HTTP_RESPONSE, URL                                                                                                                      | FINDING, VULNERABILITY                                      | @liquidsec       | 2024-01-18     |\n| baddns               | scan     | No              | Check hosts for domain/subdomain takeovers                                                                                                            | active, baddns, cloud-enum, safe, subdomain-hijack, web-basic    | DNS_NAME, DNS_NAME_UNRESOLVED                                                                                                           | FINDING, VULNERABILITY                                      | @liquidsec       | 2024-01-18     |\n| baddns_direct        | scan     | No              | Check for unusual subdomain / service takeover edge cases that require direct detection                                                               | active, baddns, cloud-enum, safe, subdomain-enum                 | STORAGE_BUCKET, URL                                                                                                                     | FINDING, VULNERABILITY                                      | @liquidsec       | 2024-01-29     |\n| baddns_zone          | scan     | No              | Check hosts for DNS zone transfers and NSEC walks                                                                                                     | active, baddns, cloud-enum, safe, subdomain-enum                 | DNS_NAME                                                                                                                                | FINDING, VULNERABILITY                                      | @liquidsec       | 2024-01-29     |\n| badsecrets           | scan     | No              | Library for detecting known or weak secrets across many web frameworks                                                                                | active, safe, web-basic                                          | HTTP_RESPONSE                                                                                                                           | FINDING, TECHNOLOGY, VULNERABILITY                          | @liquidsec       | 2022-11-19     |\n| bucket_amazon        | scan     | No              | Check for S3 buckets related to target                                                                                                                | active, cloud-enum, safe, web-basic                              | DNS_NAME, STORAGE_BUCKET                                                                                                                | FINDING, STORAGE_BUCKET                                     | @TheTechromancer | 2022-11-04     |\n| bucket_azure         | scan     | No              | Check for Azure storage blobs related to target                                                                                                       | active, cloud-enum, safe, web-basic                              | DNS_NAME, STORAGE_BUCKET                                                                                                                | FINDING, STORAGE_BUCKET                                     | @TheTechromancer | 2022-11-04     |\n| bucket_digitalocean  | scan     | No              | Check for DigitalOcean spaces related to target                                                                                                       | active, cloud-enum, safe, slow, web-thorough                     | DNS_NAME, STORAGE_BUCKET                                                                                                                | FINDING, STORAGE_BUCKET                                     | @TheTechromancer | 2022-11-08     |\n| bucket_firebase      | scan     | No              | Check for open Firebase databases related to target                                                                                                   | active, cloud-enum, safe, web-basic                              | DNS_NAME, STORAGE_BUCKET                                                                                                                | FINDING, STORAGE_BUCKET                                     | @TheTechromancer | 2023-03-20     |\n| bucket_google        | scan     | No              | Check for Google object storage related to target                                                                                                     | active, cloud-enum, safe, web-basic                              | DNS_NAME, STORAGE_BUCKET                                                                                                                | FINDING, STORAGE_BUCKET                                     | @TheTechromancer | 2022-11-04     |\n| bypass403            | scan     | No              | Check 403 pages for common bypasses                                                                                                                   | active, aggressive, web-thorough                                 | URL                                                                                                                                     | FINDING                                                     | @liquidsec       | 2022-07-05     |\n| dastardly            | scan     | No              | Lightweight web application security scanner                                                                                                          | active, aggressive, deadly, slow, web-thorough                   | HTTP_RESPONSE                                                                                                                           | FINDING, VULNERABILITY                                      | @domwhewell-sage | 2023-12-11     |\n| dnsbrute             | scan     | No              | Brute-force subdomains with massdns + static wordlist                                                                                                 | active, aggressive, subdomain-enum                               | DNS_NAME                                                                                                                                | DNS_NAME                                                    | @TheTechromancer | 2024-04-24     |\n| dnsbrute_mutations   | scan     | No              | Brute-force subdomains with massdns + target-specific mutations                                                                                       | active, aggressive, slow, subdomain-enum                         | DNS_NAME                                                                                                                                | DNS_NAME                                                    | @TheTechromancer | 2024-04-25     |\n| dnscommonsrv         | scan     | No              | Check for common SRV records                                                                                                                          | active, safe, subdomain-enum                                     | DNS_NAME                                                                                                                                | DNS_NAME                                                    | @TheTechromancer | 2022-05-15     |\n| dotnetnuke           | scan     | No              | Scan for critical DotNetNuke (DNN) vulnerabilities                                                                                                    | active, aggressive, web-thorough                                 | HTTP_RESPONSE                                                                                                                           | TECHNOLOGY, VULNERABILITY                                   | @liquidsec       | 2023-11-21     |\n| ffuf                 | scan     | No              | A fast web fuzzer written in Go                                                                                                                       | active, aggressive, deadly                                       | URL                                                                                                                                     | URL_UNVERIFIED                                              | @liquidsec       | 2022-04-10     |\n```\n\n----------------------------------------\n\nTITLE: Filtering In-Scope DNS Nodes with Cypher\nDESCRIPTION: Cypher query to retrieve all DNS name nodes tagged as \"in-scope\" from the Neo4j database, returning their data and tags properties.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_12\n\nLANGUAGE: cypher\nCODE:\n```\n// Get all \"in-scope\" DNS Nodes and return just data and tags properties\nMATCH (n:DNS_NAME)\nWHERE \"in-scope\" IN n.tags\nRETURN n.data, n.tags\n```\n\n----------------------------------------\n\nTITLE: Accessing Word Cloud Helpers in Python\nDESCRIPTION: Demonstrates how to access the Word Cloud helper functions within the BBOT framework. These helpers are available through the 'self.helpers' object, allowing easy integration into BBOT modules or scripts.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/helpers/wordcloud.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nself.helpers.word_cloud\n```\n\n----------------------------------------\n\nTITLE: Creating ScanWhitelist Class for BBOT Scanner in Python\nDESCRIPTION: The ScanWhitelist class handles the list of allowed targets or patterns for the BBOT scanner, ensuring that only specified items are included in the scan.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/target.md#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass ScanWhitelist:\n```\n\n----------------------------------------\n\nTITLE: Querying Open Ports by Domain Relationship\nDESCRIPTION: Cypher query to visualize the relationship between DNS name nodes and their associated open TCP ports.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_14\n\nLANGUAGE: cypher\nCODE:\n```\n// Get a graph of open ports associated with each domain\nMATCH z = ((n:DNS_NAME) --> (p:OPEN_TCP_PORT))\nRETURN z\n```\n\n----------------------------------------\n\nTITLE: Running BBOT Tests with Poetry\nDESCRIPTION: Commands for running linting, formatting, and tests using poetry with ruff and pytest.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/tests.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# lint with ruff\npoetry run ruff check\n\n# format code with ruff\npoetry run ruff format\n\n# run all tests with pytest (takes roughly 30 minutes)\npoetry run pytest\n```\n\n----------------------------------------\n\nTITLE: Regenerating BBOT Configuration Files\nDESCRIPTION: Commands to backup existing BBOT configuration files and generate new ones. This is useful as a troubleshooting step to ensure new defaults are properly restored when experiencing configuration issues.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/troubleshooting.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# make a backup of the old configs\nmv ~/.config/bbot ~/.config/bbot.bak\n\n# generate new configs\nbbot\n```\n\n----------------------------------------\n\nTITLE: Retrieving Domains and IPs with Open TCP Ports\nDESCRIPTION: Cypher query to fetch all in-scope domains and IP addresses that have open TCP ports, grouping the ports by host.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/output.md#2025-04-23_snippet_15\n\nLANGUAGE: cypher\nCODE:\n```\n// Get all domains and IP addresses with open TCP ports\nMATCH (n) --> (p:OPEN_TCP_PORT)\nWHERE \"in-scope\" in n.tags and (n:DNS_NAME or n:IP_ADDRESS)\nWITH *, TAIL(SPLIT(p.data, ':')) AS port\nRETURN n.data, collect(distinct port)\n```\n\n----------------------------------------\n\nTITLE: Installing BBOT with Poetry\nDESCRIPTION: Commands for installing BBOT using Poetry package manager, including both stable and development versions.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/index.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# stable\npoetry add bbot\n\n# bleeding-edge (dev branch)\npoetry add bbot --allow-prereleases\n```\n\n----------------------------------------\n\nTITLE: BBOT Test Debugging Example\nDESCRIPTION: Example showing how to add debug logging statements in BBOT tests using different log levels.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/tests.md#2025-04-23_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n    def check(self, module_test, events):\n        for e in events:\n            # bright red\n            self.log.critical(e.type)\n            # bright green\n            self.log.hugesuccess(e.data)\n            # bright orange\n            self.log.hugewarning(e.tags)\n            # bright blue\n            self.log.hugeinfo(e.parent)\n```\n\n----------------------------------------\n\nTITLE: Implementing Logging Methods in BaseModule\nDESCRIPTION: Logging methods for BaseModule that provide structured logging capabilities with different severity levels and context information.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/basemodule.md#2025-04-23_snippet_8\n\nLANGUAGE: python\nCODE:\n```\ndef warning(self, *args, **kwargs):\n        \"\"\"Log a warning message\"\"\"\n        return self.log(\"warning\", args, kwargs)\n\n    def info(self, *args, **kwargs):\n        \"\"\"Log an informational message\"\"\"\n        return self.log(\"info\", args, kwargs)\n\n    def verbose(self, *args, **kwargs):\n        \"\"\"Log a verbose message\"\"\"\n        return self.log(\"verbose\", args, kwargs)\n\n    def debug(self, *args, **kwargs):\n        \"\"\"Log a debug message\"\"\"\n        return self.log(\"debug\", args, kwargs)\n\n    def debug_event(self, event, msg):\n        \"\"\"Debug log an event with a custom message\"\"\"\n        self.debug(\n            f\"{msg}: {event.type} ({event.data})\",\n            prefix=\"event\",\n            event_hash=str(event.hash),\n        )\n\n    def log(self, level, args=None, kwargs=None):\n        \"\"\"Log a message using the scanner's logger\"\"\"\n        try:\n            if not args:\n                args = tuple()\n            if not kwargs:\n                kwargs = {}\n            if self.scanner and hasattr(self.scanner, \"log_\"):\n                return self.scanner.log_(level, *args, module=self.name, **kwargs)\n            else:\n                return getattr(logging, level)(*args)\n        except Exception as e:\n            try:\n                error_message = f\"Error logging message: {make_exception_message(e)}\"\n                if not self._abort:\n                    logging.error(error_message)\n            except:\n                pass\n```\n\n----------------------------------------\n\nTITLE: Referencing BBOT Engine Base Class\nDESCRIPTION: This line imports or references the EngineBase class from the bbot.core.engine module. EngineBase likely serves as the foundation for both client and server components of the BBOT engine.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/engine.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n::: bbot.core.engine.EngineBase\n```\n\n----------------------------------------\n\nTITLE: Filtering BBOT Tests\nDESCRIPTION: Example of filtering tests using pytest's -k option to exclude specific tests.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/tests.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# run all the module tests except for sslcert\npoetry run pytest -k \"test_module_ and not test_module_sslcert\"\n```\n\n----------------------------------------\n\nTITLE: Converting JSON to BBOT Event in Python\nDESCRIPTION: The event_from_json function converts a JSON representation of an event back into a BBOT event object. It takes JSON data as input and returns a reconstructed event.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/event.md#2025-04-23_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nbbot.core.event.base.event_from_json\n```\n\n----------------------------------------\n\nTITLE: Referencing BBOT Engine Client Class\nDESCRIPTION: This line imports or references the EngineClient class from the bbot.core.engine module. EngineClient is likely responsible for handling client-side operations in BBOT's distributed architecture.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/engine.md#2025-04-23_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n::: bbot.core.engine.EngineClient\n```\n\n----------------------------------------\n\nTITLE: Defining Module Thread Parallelization in BBOT\nDESCRIPTION: Python class definition showing how BBOT modules can be configured with default parallelization settings. This example shows the baddns module configured to run 8 threads by default.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/scanning/tips_and_tricks.md#2025-04-23_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass baddns(BaseModule):\n    module_threads = 8\n```\n\n----------------------------------------\n\nTITLE: Documentation Navigation in Markdown\nDESCRIPTION: Structured documentation table of contents using markdown formatting, organizing content into User Manual and Developer Manual sections with nested categories and links.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/README.md#2025-04-23_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- BBOT DOCS TOC -->\n- **User Manual**\n    - **Basics**\n        - [Getting Started](https://www.blacklanternsecurity.com/bbot/Stable/)\n        - [How it Works](https://www.blacklanternsecurity.com/bbot/Stable/how_it_works)\n        - [Comparison to Other Tools](https://www.blacklanternsecurity.com/bbot/Stable/comparison)\n    [... content truncated for brevity ...]\n<!-- END BBOT DOCS TOC -->\n```\n\n----------------------------------------\n\nTITLE: HTTP Headers Constants\nDESCRIPTION: Common HTTP header names and request parameters used in web applications for authentication, routing, and client identification.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/bbot/wordlists/paramminer_headers.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nuseragent\nuser-mail\nuser-name\nversion-none\nviad\nx\nx-access-token\nx-amz-date\nx-amz-server-side-encryption\nx-auth-key\nx-auth-user\nx-confirm-delete\nx-do-not-track\nx-elgg-nonce\n```\n\n----------------------------------------\n\nTITLE: Network Port Number List\nDESCRIPTION: A sorted list of TCP/UDP port numbers commonly used in networking applications and services. Contains both well-known ports (<1024) and registered ports (1024-65535).\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/bbot/wordlists/top_open_ports_nmap.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n65514\\n65488\\n6535\\n65311\\n65048\\n64890\\n64727\\n64726\\n64551\\n64507\\n[...]\\n11\\n10\n```\n\n----------------------------------------\n\nTITLE: Loading BBOT Chord Graph Visualization with Vega\nDESCRIPTION: JavaScript code for loading a Vega chord graph visualization that shows the relationships between BBOT modules and event types. The script waits for the page to load, then embeds a Vega visualization from a JSON file.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/how_it_works.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.addEventListener(\n    'load',\n    function() {\n      vegaEmbed(\n        '#vis',\n        '../data/chord_graph/vega.json',\n        {renderer: 'svg'}\n      );\n    }\n  );\n```\n\n----------------------------------------\n\nTITLE: HTTP Request Methods\nDESCRIPTION: Standard and extended HTTP request method constants used for making API calls and web requests.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/bbot/wordlists/paramminer_headers.txt#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nmeth-acl\nmeth-baseline-control\nmeth-checkin\nmeth-checkout\nmeth-connect\nmeth-copy\nmeth-label\nmeth-lock\nmeth-merge\nmeth-mkactivity\nmeth-mkcol\nmeth-mkworkspace\nmeth-move\nmeth-options\nmeth-propfind\n```\n\n----------------------------------------\n\nTITLE: Listing Validated DNS Server IP Addresses\nDESCRIPTION: This snippet provides a comprehensive list of validated DNS server IP addresses. These servers can be used for DNS resolution and were sourced from public-dns.info on September 1, 2022. The list includes servers from various geographical locations and network providers.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/bbot/wordlists/nameservers.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n198.153.194.50\n172.64.37.44\n69.67.97.18\n184.155.36.194\n45.225.123.238\n103.3.252.5\n212.187.140.53\n103.47.134.195\n204.199.98.173\n8.14.62.67\n103.121.228.5\n8.28.109.125\n45.90.28.13\n45.90.28.10\n64.158.240.81\n172.64.37.9\n4.15.141.202\n155.254.21.250\n172.64.37.76\n190.217.113.18\n195.186.4.110\n128.127.104.108\n50.204.42.225\n82.113.224.113\n195.74.68.2\n190.216.19.27\n190.216.125.220\n8.243.126.14\n217.160.70.42\n45.90.30.21\n162.159.36.125\n206.169.117.104\n209.12.133.148\n45.90.28.15\n103.196.38.38\n185.108.141.114\n172.64.37.131\n190.216.251.19\n146.190.6.13\n110.145.125.13\n162.159.36.132\n172.64.37.127\n173.163.85.121\n216.254.141.2\n77.88.8.3\n172.64.36.47\n211.115.194.5\n68.87.72.134\n172.64.37.168\n164.124.107.9\n190.216.250.222\n1.0.202.161\n103.85.107.99\n193.42.159.2\n74.203.74.105\n192.76.144.66\n68.105.46.149\n190.216.69.13\n172.64.46.9\n195.186.1.109\n12.204.162.62\n109.248.149.133\n172.64.46.22\n8.35.35.35\n4.4.53.164\n202.43.108.1\n172.64.36.104\n110.35.78.66\n162.159.36.46\n190.216.69.9\n209.234.212.26\n64.212.76.178\n194.225.73.141\n162.159.56.128\n194.98.65.165\n1.0.170.31\n162.159.51.23\n73.7.178.166\n204.199.106.78\n162.159.50.61\n4.7.75.194\n172.64.37.38\n172.64.36.235\n8.243.96.154\n12.71.143.33\n45.225.123.207\n172.64.36.79\n195.186.4.111\n173.244.51.54\n194.102.42.3\n172.64.37.75\n162.159.46.51\n66.162.169.190\n45.90.28.26\n8.243.96.156\n172.64.37.21\n8.28.109.70\n1.0.215.118\n172.64.36.182\n8.243.126.27\n113.161.116.150\n184.177.84.201\n64.132.21.189\n172.64.47.174\n172.64.36.44\n5.164.26.4\n116.118.119.167\n172.64.46.229\n209.200.100.151\n172.64.37.98\n73.128.218.47\n172.64.37.190\n8.243.104.162\n190.216.253.172\n193.230.161.3\n162.159.46.18\n103.160.248.44\n172.64.36.80\n200.221.11.101\n9.9.9.11\n162.159.56.43\n8.243.126.28\n109.228.22.126\n122.129.122.99\n222.255.167.61\n172.64.37.1\n64.105.199.74\n146.70.31.43\n162.159.36.181\n67.28.70.130\n67.73.141.62\n203.113.135.28\n88.198.92.222\n24.99.149.148\n172.64.36.164\n172.64.36.78\n101.102.103.104\n198.153.194.40\n149.112.122.20\n172.64.37.112\n174.69.40.212\n172.64.36.151\n63.209.155.118\n8.41.17.84\n45.90.30.19\n216.202.247.10\n1.0.209.99\n45.11.45.11\n162.159.50.152\n50.217.25.225\n1.0.169.175\n172.64.37.149\n66.193.38.100\n8.28.109.82\n162.159.56.84\n162.159.51.117\n172.64.37.182\n203.54.212.126\n156.154.70.16\n172.64.37.184\n172.64.37.234\n162.159.56.253\n204.199.122.5\n172.64.37.45\n216.229.0.25\n172.64.46.217\n45.125.208.8\n203.38.225.3\n172.64.37.20\n200.16.208.187\n8.28.109.252\n80.67.188.188\n172.64.37.83\n103.86.96.100\n172.64.36.45\n12.165.204.94\n1.0.133.90\n77.88.8.2\n200.41.78.209\n1.0.138.176\n190.216.67.53\n172.64.36.200\n1.0.170.113\n45.225.123.249\n201.184.230.34\n209.12.244.162\n75.103.115.94\n172.64.37.69\n190.216.203.224\n91.144.22.198\n1.0.170.39\n172.64.36.16\n174.48.45.128\n193.135.143.23\n159.69.114.157\n204.199.130.91\n4.2.167.65\n45.225.123.214\n71.58.100.49\n116.193.64.22\n172.64.36.96\n50.217.25.200\n204.199.157.70\n24.125.55.22\n109.224.233.174\n172.64.37.185\n198.153.192.40\n172.64.36.215\n172.64.36.166\n204.70.127.127\n67.187.17.182\n4.15.208.86\n45.225.123.239\n156.154.71.1\n195.186.1.111\n70.171.58.112\n172.64.37.253\n200.87.100.10\n41.225.236.101\n8.28.109.109\n4.4.26.135\n8.25.184.252\n172.64.37.245\n146.70.82.3\n172.64.36.152\n45.90.28.28\n159.203.187.29\n172.64.37.107\n172.64.36.30\n172.64.37.130\n8.20.247.7\n45.19.183.181\n172.64.36.223\n45.90.30.27\n162.159.57.6\n84.236.142.130\n103.23.150.89\n4.79.123.69\n172.64.36.203\n172.64.36.226\n98.232.103.71\n98.179.205.194\n149.112.112.10\n172.64.37.207\n195.77.235.10\n66.93.87.2\n172.64.36.155\n117.103.228.101\n97.65.124.6\n212.72.130.20\n92.255.164.166\n50.200.245.136\n1.0.209.242\n8.18.4.19\n172.64.36.9\n65.91.52.25\n50.223.22.178\n165.87.201.244\n172.64.36.251\n8.33.239.234\n172.64.36.187\n12.231.169.28\n8.26.56.11\n172.64.36.121\n172.64.37.218\n193.135.143.21\n98.38.222.66\n8.20.45.6\n96.102.121.126\n172.64.37.77\n190.0.15.18\n46.147.195.82\n8.26.56.17\n172.64.36.2\n185.42.192.114\n45.225.123.178\n4.14.199.129\n99.99.99.193\n66.192.104.68\n210.23.129.34\n172.64.46.192\n23.226.134.242\n172.64.37.106\n162.159.46.166\n172.64.36.176\n162.159.56.66\n172.64.36.28\n113.161.182.253\n98.39.154.157\n162.159.50.85\n8.243.126.2\n172.64.37.251\n194.7.1.4\n77.235.219.211\n216.36.31.135\n8.28.109.110\n172.64.37.225\n209.164.189.56\n162.159.56.228\n119.17.138.116\n172.64.46.111\n8.9.163.237\n162.159.57.183\n103.239.32.81\n193.135.143.35\n204.194.234.200\n158.43.128.72\n201.234.44.129\n24.56.77.138\n172.64.36.146\n4.28.150.154\n204.199.116.45\n8.46.206.93\n172.64.36.83\n188.225.225.25\n8.242.215.91\n172.64.37.163\n211.115.194.2\n112.197.12.40\n172.64.47.91\n69.44.110.204\n37.120.232.43\n172.64.37.179\n190.93.189.30\n12.127.17.72\n12.121.118.9\n172.64.36.159\n77.88.8.88\n172.64.36.27\n162.159.46.23\n4.1.67.166\n172.64.36.22\n76.104.155.196\n50.234.132.241\n195.186.1.107\n213.211.50.2\n210.220.163.82\n216.194.28.33\n162.159.36.6\n204.152.204.100\n216.106.1.254\n172.64.37.2\n168.95.192.1\n172.64.47.200\n162.159.36.227\n75.103.95.14\n190.216.237.18\n8.242.172.200\n8.36.139.1\n118.68.218.173\n8.243.220.194\n205.151.222.251\n172.64.36.53\n8.243.126.118\n14.225.232.19\n122.2.65.202\n172.64.37.144\n190.216.69.0\n4.59.232.194\n45.90.30.29\n172.64.37.28\n164.163.1.90\n172.64.37.51\n8.26.56.16\n8.243.126.18\n162.159.46.177\n172.64.36.212\n172.64.36.64\n8.29.3.37\n142.103.1.1\n95.80.104.128\n8.20.247.3\n190.217.110.10\n209.200.100.150\n172.64.37.70\n91.121.157.83\n72.237.206.37\n8.20.247.16\n8.242.49.142\n50.221.57.204\n94.28.20.249\n204.199.194.28\n208.67.220.2\n50.217.25.205\n162.159.36.104\n8.243.126.135\n64.157.242.118\n172.64.36.239\n172.64.36.229\n172.64.37.154\n172.64.36.14\n172.64.36.249\n172.64.37.192\n210.87.253.60\n8.242.214.61\n208.67.222.220\n8.30.101.114\n195.168.91.238\n193.78.240.12\n195.76.233.2\n172.64.37.204\n156.154.70.11\n190.217.25.34\n162.159.46.120\n172.64.37.169\n202.248.20.133\n162.159.36.139\n81.163.3.1\n4.79.244.118\n172.64.36.15\n162.159.56.16\n172.64.46.29\n217.138.220.243\n14.225.24.83\n172.64.36.29\n210.87.253.35\n172.64.36.218\n208.91.112.220\n221.163.74.11\n1.0.215.158\n125.234.104.230\n216.175.203.51\n172.64.37.177\n107.0.74.232\n95.158.129.2\n181.224.160.11\n83.143.8.249\n162.159.51.205\n172.64.46.159\n172.64.36.169\n172.64.46.28\n172.64.37.139\n144.91.64.224\n50.235.228.46\n8.243.126.105\n172.64.37.71\n8.30.83.132\n109.195.187.172\n172.64.37.196\n172.64.36.177\n165.22.241.78\n1.0.0.2\n172.64.37.99\n208.91.112.52\n172.64.47.216\n8.28.109.115\n8.29.3.132\n172.64.36.186\n172.64.46.34\n173.184.62.167\n8.30.101.125\n109.228.24.15\n8.20.247.17\n199.44.194.2\n172.64.37.43\n8.29.2.132\n5.11.11.5\n172.64.36.248\n4.15.23.203\n195.129.111.49\n64.76.25.120\n209.234.212.184\n8.243.126.112\n12.97.174.103\n216.54.240.147\n70.171.60.6\n1.0.221.165\n207.138.37.4\n85.21.144.55\n190.216.19.16\n8.26.21.127\n151.80.145.143\n204.199.97.162\n172.64.37.49\n190.216.247.150\n23.19.67.116\n64.64.110.3\n216.84.166.166\n8.29.103.224\n172.64.37.3\n67.73.188.138\n172.64.37.114\n8.242.215.226\n203.54.152.226\n172.64.37.92\n162.159.46.1\n172.64.36.253\n82.197.214.133\n193.135.143.13\n167.250.65.246\n94.28.26.138\n8.243.126.71\n190.216.65.166\n172.64.37.133\n162.159.57.19\n45.90.28.189\n172.64.36.69\n1.0.218.23\n172.64.36.85\n212.187.166.54\n62.149.132.2\n37.120.207.131\n98.180.23.77\n195.46.39.39\n8.242.215.202\n172.64.36.179\n162.159.46.28\n198.82.247.34\n172.64.37.121\n114.130.5.6\n162.159.57.78\n8.38.89.46\n149.156.12.250\n202.136.162.12\n172.64.36.99\n45.90.28.17\n45.90.28.23\n162.159.57.1\n8.242.173.2\n213.149.113.211\n172.64.37.59\n172.64.36.94\n45.90.30.10\n162.159.46.90\n12.97.174.104\n4.34.133.226\n45.90.28.22\n189.125.136.8\n108.175.22.60\n172.64.36.26\n96.102.76.175\n24.99.149.127\n209.51.161.14\n172.64.36.135\n172.64.47.195\n36.37.160.242\n209.136.31.102\n37.120.152.235\n109.194.17.191\n162.159.51.239\n172.64.36.174\n162.159.51.224\n172.64.36.76\n50.231.115.22\n216.244.192.3\n221.139.13.130\n172.64.36.67\n204.199.128.123\n208.51.60.81\n193.47.83.251\n172.64.36.12\n1.0.156.34\n45.90.28.193\n201.234.130.31\n172.64.36.72\n172.64.36.213\n172.64.36.18\n1.0.160.109\n203.21.196.20\n8.29.3.133\n139.134.2.190\n172.64.37.6\n45.90.30.17\n172.64.36.114\n192.71.166.92\n9.9.9.9\n172.64.37.187\n50.223.23.54\n199.227.106.122\n45.90.28.21\n73.31.121.3\n212.73.198.88\n67.99.197.123\n4.14.162.237\n190.216.19.21\n1.0.214.3\n172.64.37.25\n172.64.37.102\n172.64.36.175\n8.17.30.61\n172.64.37.46\n45.117.80.200\n172.64.37.157\n63.232.89.67\n220.239.164.49\n49.156.53.166\n189.126.192.4\n190.216.64.230\n4.15.7.161\n72.207.237.152\n172.64.36.170\n8.9.113.35\n216.146.35.35\n189.125.19.198\n212.187.156.31\n208.72.160.67\n89.163.221.181\n172.64.37.195\n190.216.241.71\n8.14.62.70\n72.237.212.20\n67.99.200.1\n172.64.37.242\n176.212.194.184\n85.214.91.66\n14.238.93.131\n209.244.104.184\n8.23.82.186\n4.79.140.163\n172.64.37.215\n194.69.194.3\n4.7.194.66\n45.90.30.28\n67.73.245.181\n209.244.104.187\n194.2.0.50\n63.209.154.102\n24.4.172.85\n222.255.167.73\n98.34.183.199\n172.64.36.74\n172.64.37.53\n209.0.191.6\n172.64.36.202\n162.159.46.202\n75.103.115.95\n172.64.46.72\n8.35.114.228\n172.64.36.52\n190.216.229.111\n8.243.120.54\n204.199.116.210\n113.161.86.104\n190.2.210.115\n64.120.5.251\n94.141.24.92\n8.20.247.4\n172.64.47.204\n172.64.37.123\n172.64.37.37\n24.250.147.79\n172.64.37.68\n172.64.46.103\n181.224.160.10\n172.64.37.136\n103.150.209.246\n8.28.113.202\n103.31.228.150\n8.28.109.247\n172.64.37.78\n176.103.130.130\n8.242.178.122\n162.159.57.251\n1.0.205.75\n172.64.37.105\n204.199.102.115\n162.159.57.139\n172.64.37.226\n24.116.92.101\n8.25.184.107\n8.242.48.97\n45.225.123.233\n1.0.170.69\n23.19.245.84\n50.216.25.75\n190.217.14.65\n45.90.28.169\n81.3.27.54\n172.64.36.6\n27.71.233.116\n66.192.104.191\n45.90.30.14\n8.29.3.211\n172.64.37.103\n51.15.69.236\n8.28.109.13\n205.214.45.10\n195.208.5.1\n162.159.57.36\n165.158.1.2\n216.84.166.42\n51.158.105.245\n172.64.36.158\n5.1.66.255\n50.238.53.122\n91.225.226.39\n209.244.104.189\n172.64.37.143\n172.64.46.198\n162.159.57.204\n201.234.130.26\n162.159.57.85\n64.129.104.46\n172.64.36.241\n172.64.36.66\n172.64.47.104\n58.186.80.18\n172.64.36.54\n45.225.123.101\n212.230.255.1\n8.243.113.190\n172.64.37.221\n1.0.150.32\n172.64.36.61\n8.0.7.0\n206.169.200.135\n4.49.73.138\n193.135.143.33\n172.64.36.144\n1.0.194.216\n172.64.37.148\n181.224.163.11\n210.181.1.24\n8.243.126.133\n168.205.99.11\n78.47.243.3\n172.64.37.62\n80.78.132.79\n162.159.51.17\n199.77.135.211\n172.64.37.115\n1.0.169.119\n190.216.69.8\n182.52.51.181\n172.64.37.167\n67.100.88.27\n180.211.158.90\n27.76.137.77\n103.196.16.2\n```\n\n----------------------------------------\n\nTITLE: URL Schemes List\nDESCRIPTION: An alphabetically sorted list of URL schemes and protocols ranging from standard internet protocols to application-specific schemes. Includes Microsoft Windows specific schemes, cryptocurrency protocols, and various application protocols.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/bbot/wordlists/valid_url_schemes.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\naaa\nawb\naaas\nabout\nacap\nacct\nacd\nacr\nadiumxtra\nadt\nafp\nafs\naim\namss\nandroid\nappdata\napt\nar\nark\nat\nattachment\naw\nbarion\nbb\nbeshare\nbitcoin\nbitcoincash\nblob\nbolo\nbrid\nbrowserext\ncabal\ncalculator\ncallto\ncap\ncast\ncasts\nchrome\nchrome-extension\ncid\ncoap\ncoap+tcp\ncoap+ws\ncoaps\ncoaps+tcp\ncoaps+ws\ncom-eventbrite-attendee\ncontent\ncontent-type\ncrid\ncstr\ncvs\ndab\ndat\ndata\ndav\ndhttp\ndiaspora\ndict\ndid\ndis\ndlna-playcontainer\ndlna-playsingle\ndns\ndntp\ndoi\ndpp\ndrm\ndrop\ndtmi\ndtn\ndvb\ndvx\ndweb\ned2k\neid\nelsi\nembedded\nens\nethereum\nexample\nfacetime\nfax\nfeed\nfeedready\nfido\nfile\nfilesystem\nfinger\nfirst-run-pen-experience\nfish\nfm\nftp\nfuchsia-pkg\ngeo\ngg\ngit\ngitoid\ngizmoproject\ngo\ngopher\ngraph\ngrd\ngtalk\nh323\nham\nhcap\nhcp\nhs20\nhttp\nhttps\nhxxp\nhxxps\nhydrazone\nhyper\niax\nicap\nicon\nim\nimap\ninfo\niotdisco\nipfs\nipn\nipns\nipp\nipps\nirc\nirc6\nircs\niris\niris.beep\niris.lwz\niris.xpc\niris.xpcs\nisostore\nitms\njabber\njar\njms\nkeyparc\nlastfm\nlbry\nldap\nldaps\nleaptofrogans\nlid\nlorawan\nlpa\nlvlt\nmachineProvisioningProgressReporter\nmagnet\nmailserver\nmailto\nmaps\nmarket\nmatrix\nmessage\nmicrosoft.windows.camera\nmicrosoft.windows.camera.multipicker\nmicrosoft.windows.camera.picker\nmid\nmms\nmodem\nmongodb\nmoz\nms-access\nms-appinstaller\nms-browser-extension\nms-calculator\nms-drive-to\nms-enrollment\nms-excel\nms-eyecontrolspeech\nms-gamebarservices\nms-gamingoverlay\nms-getoffice\nms-help\nms-infopath\nms-inputapp\nms-launchremotedesktop\nms-lockscreencomponent-config\nms-media-stream-id\nms-meetnow\nms-mixedrealitycapture\nms-mobileplans\nms-newsandinterests\nms-officeapp\nms-people\nms-project\nms-powerpoint\nms-publisher\nms-recall\nms-remotedesktop\nms-remotedesktop-launch\nms-restoretabcompanion\nms-screenclip\nms-screensketch\nms-search\nms-search-repair\nms-secondary-screen-controller\nms-secondary-screen-setup\nms-settings\nms-settings-airplanemode\nms-settings-bluetooth\nms-settings-camera\nms-settings-cellular\nms-settings-cloudstorage\nms-settings-connectabledevices\nms-settings-displays-topology\nms-settings-emailandaccounts\nms-settings-language\nms-settings-location\nms-settings-lock\nms-settings-nfctransactions\nms-settings-notifications\nms-settings-power\nms-settings-privacy\nms-settings-proximity\nms-settings-screenrotation\nms-settings-wifi\nms-settings-workplace\nms-spd\nms-stickers\nms-sttoverlay\nms-transit-to\nms-useractivityset\nms-virtualtouchpad\nms-visio\nms-walk-to\nms-whiteboard\nms-whiteboard-cmd\nms-word\nmsnim\nmsrp\nmsrps\nmss\nmt\nmtqp\nmumble\nmupdate\nmvn\nmvrp\nmvrps\nnews\nnfs\nni\nnih\nnntp\nnotes\nnum\nocf\noid\nonenote\nonenote-cmd\nopaquelocktoken\nopenid\nopenpgp4fpr\notpauth\np1\npack\npalm\npaparazzi\npayment\npayto\npkcs11\nplatform\npop\npres\nprospero\nproxy\npwid\npsyc\npttp\nqb\nquery\nquic-transport\nredis\nrediss\nreload\nres\nresource\nrmi\nrsync\nrtmfp\nrtmp\nrtsp\nrtsps\nrtspu\nsarif\nsecondlife\nsecret-token\nservice\nsession\nsftp\nsgn\nshc\nshttp\nsieve\nsimpleledger\nsimplex\nsip\nsips\nskype\nsmb\nsmp\nsms\nsmtp\nsnews\nsnmp\nsoap.beep\nsoap.beeps\nsoldat\nspiffe\nspotify\nssb\nssh\nstarknet\nsteam\nstun\nstuns\nsubmit\nsvn\nswh\nswid\nswidpath\ntag\ntaler\nteamspeak\ntel\nteliaeid\ntelnet\ntftp\nthings\nthismessage\ntip\ntn3270\ntool\nturn\nturns\ntv\nudp\nunreal\nupt\nurn\nut2004\nuuid-in-package\nv-event\nvemmi\nventrilo\nves\nvideotex\nvnc\nview-source\nvscode\nvscode-insiders\nvsls\nw3\nwais\nweb3\nwcr\nwebcal\nweb+ap\nwifi\nwpid\nws\nwss\nwtai\nwyciwyg\nxcon\nxcon-userid\nxfire\nxmlrpc.beep\nxmlrpc.beeps\nxmpp\nxftp\nxrcp\nxri\nymsgr\nz39.50\nz39.50r\nz39.50s\n```\n\n----------------------------------------\n\nTITLE: Referencing BBOT Engine Server Class\nDESCRIPTION: This line imports or references the EngineServer class from the bbot.core.engine module. EngineServer probably manages server-side operations and coordinates with EngineClient instances in BBOT's distributed system.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/docs/dev/engine.md#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n::: bbot.core.engine.EngineServer\n```\n\n----------------------------------------\n\nTITLE: IP Address List in Plaintext\nDESCRIPTION: A collection of IPv4 addresses listed one per line. The addresses appear to be a mix of public and private IPs, possibly representing DNS servers, endpoints, or network nodes.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/bbot/wordlists/nameservers.txt#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n14.238.96.162\n172.64.47.85\n123.30.27.24\n73.54.161.169\n162.159.56.21\n184.187.144.144\n172.64.37.120\n172.64.37.74\n75.150.197.154\n8.243.126.127\n8.28.109.44\n203.2.193.67\n172.64.36.50\n200.125.171.220\n64.76.23.53\n1.0.170.91\n172.64.37.213\n1.0.216.157\n164.52.192.24\n69.174.153.224\n49.156.53.165\n103.85.104.42\n204.199.33.244\n8.29.3.228\n185.74.5.5\n172.64.47.242\n162.159.56.242\n1.0.215.109\n8.28.109.117\n176.58.126.9\n162.159.36.110\n50.201.178.59\n172.64.37.93\n1.0.212.74\n204.199.6.86\n70.35.213.226\n172.64.36.87\n8.243.126.123\n8.28.109.106\n95.143.220.5\n202.87.213.253\n162.159.50.46\n66.162.142.38\n88.204.203.34\n223.6.6.6\n213.249.127.70\n8.29.3.220\n149.112.112.112\n162.159.36.247\n1.0.218.46\n202.78.224.130\n72.52.104.74\n196.27.105.130\n172.64.37.34\n162.159.46.197\n24.170.199.20\n172.64.37.82\n205.171.3.65\n190.216.241.5\n202.44.52.1\n76.76.2.2\n172.64.36.145\n63.209.154.100\n8.29.3.70\n162.159.56.33\n31.7.36.36\n98.249.57.2\n211.115.194.1\n4.1.131.250\n45.225.123.213\n85.204.79.2\n162.159.46.167\n172.64.36.244\n162.159.50.248\n172.64.37.79\n180.182.54.2\n66.251.199.51\n162.159.51.69\n172.64.36.89\n172.64.47.102\n172.64.36.38\n193.135.143.27\n172.64.36.60\n4.7.98.154\n8.28.109.99\n4.14.233.222\n64.119.80.100\n14.225.24.84\n66.162.85.79\n8.21.24.71\n162.159.57.81\n45.90.28.27\n172.64.37.159\n1.0.169.118\n172.64.36.214\n172.64.47.178\n201.234.235.90\n110.145.178.74\n103.196.38.39\n172.64.37.250\n129.250.35.250\n172.64.37.118\n172.64.37.141\n24.119.106.138\n190.216.67.52\n190.217.8.247\n185.43.135.1\n209.200.84.27\n45.225.123.172\n76.76.10.5\n94.198.41.235\n77.88.8.1\n50.58.191.11\n165.246.10.2\n172.64.36.84\n172.64.37.230\n181.224.160.14\n76.76.2.1\n198.54.117.10\n172.64.37.151\n195.129.111.50\n172.64.36.131\n172.64.36.75\n195.243.99.35\n41.65.236.53\n8.243.126.131\n162.159.57.86\n172.64.37.237\n162.159.36.216\n37.120.217.75\n190.216.251.5\n8.29.2.36\n1.0.162.56\n162.159.51.155\n147.0.63.59\n68.1.86.231\n24.99.148.61\n1.0.168.129\n64.76.25.123\n193.135.143.5\n172.64.37.248\n98.38.222.51\n45.90.28.29\n1.0.246.54\n204.199.85.179\n212.73.221.104\n1.0.216.26\n201.234.86.130\n156.200.116.73\n96.64.201.177\n172.64.37.240\n1.0.136.237\n1.1.220.28\n98.255.2.112\n45.90.30.126\n203.89.200.6\n8.38.117.156\n45.225.123.236\n45.90.28.11\n66.28.0.45\n204.199.81.94\n12.127.17.71\n162.159.46.147\n193.138.92.130\n8.25.185.131\n203.39.3.133\n118.69.187.252\n108.56.80.135\n```\n\n----------------------------------------\n\nTITLE: Variable and Parameter Names List\nDESCRIPTION: An alphabetized collection of common parameter and variable names used in web development. Includes identifiers for user authentication, file handling, database operations, and system configuration.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/bbot/wordlists/paramminer_parameters.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nreceipt\nquota\nquiet\nqueue\npublisher\nprogress\nprogram\nproblem\npostsperpage\npostId\npollid\nplaylist\npaymentAmount\npassphrase\npagetitle\npageSize\npageno\npageID\npadding\notp\nonserver\nobfuscate\nnewvalue\nnewDir\nmongo\nmoderator\nmodal\nmimetype\nmID\nma\nlst\nloop\nlookup\nloggedin\nlastID\n```\n\n----------------------------------------\n\nTITLE: List of IPv4 Addresses\nDESCRIPTION: A plain text list containing IPv4 addresses in standard dot-decimal notation, one per line.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/bbot/wordlists/nameservers.txt#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n45.225.123.161\n141.95.6.51\n172.64.36.118\n172.64.36.70\n197.210.211.1\n5.164.31.60\n1.0.167.125\n172.64.36.154\n37.120.235.187\n172.64.46.62\n[...truncated for brevity...]\n```\n\n----------------------------------------\n\nTITLE: HTTP Authentication Parameters\nDESCRIPTION: Authentication-related parameters and flags for various auth methods including Basic, Digest, and NTLM.\nSOURCE: https://github.com/blacklanternsecurity/bbot/blob/stable/bbot/wordlists/paramminer_headers.txt#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nauth-any\nauth-basic\nauth-digest\nauth-gssneg\nauth-ntlm\ncode\ncookie-httponly\ncookie-parse-raw\ncookie-secure\n```"
  }
]
[
  {
    "owner": "appwrite",
    "repo": "sdk-for-node",
    "content": "TITLE: Updating Storage Bucket Configuration with Appwrite SDK\nDESCRIPTION: Updates a storage bucket's settings including permissions, security features, and file constraints. Demonstrates use of optional parameters for bucket configuration including file size limits, extensions, and security features.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/storage/update-bucket.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = await storage.updateBucket(\n    '<BUCKET_ID>', // bucketId\n    '<NAME>', // name\n    [\"read(\\\"any\\\")\"], // permissions (optional)\n    false, // fileSecurity (optional)\n    false, // enabled (optional)\n    1, // maximumFileSize (optional)\n    [], // allowedFileExtensions (optional)\n    sdk..None, // compression (optional)\n    false, // encryption (optional)\n    false // antivirus (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Email Message with Appwrite Messaging Service\nDESCRIPTION: Demonstrates how to create an email message using Appwrite's Messaging service with various optional parameters including topics, users, targets, CC, BCC, attachments, and scheduling options\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-email.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createEmail(\n    '<MESSAGE_ID>', // messageId\n    '<SUBJECT>', // subject\n    '<CONTENT>', // content\n    [], // topics (optional)\n    [], // users (optional)\n    [], // targets (optional)\n    [], // cc (optional)\n    [], // bcc (optional)\n    [], // attachments (optional)\n    false, // draft (optional)\n    false, // html (optional)\n    '' // scheduledAt (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client\nDESCRIPTION: Sets up the Appwrite client with required configuration including endpoint URL, project ID, API key, and optional self-signed certificate setting for development environments.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/README.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nlet client = new sdk.Client();\n\nclient\n    .setEndpoint('https://[HOSTNAME_OR_IP]/v1') // Your API Endpoint\n    .setProject('5df5acd0d48c2') // Your project ID\n    .setKey('919c2d18fb5d4...a2ae413da83346ad2') // Your secret API key\n    .setSelfSigned() // Use only on dev mode with a self-signed SSL cert\n;\n```\n\n----------------------------------------\n\nTITLE: Creating Push Notification with Appwrite SDK for Node.js\nDESCRIPTION: This code initializes the Appwrite client, configures the Messaging module, and creates a push notification. It demonstrates setting various optional parameters for the notification, such as title, body, topics, users, and custom data.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-push.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createPush(\n    '<MESSAGE_ID>', // messageId\n    '<TITLE>', // title (optional)\n    '<BODY>', // body (optional)\n    [], // topics (optional)\n    [], // users (optional)\n    [], // targets (optional)\n    {}, // data (optional)\n    '<ACTION>', // action (optional)\n    '[ID1:ID2]', // image (optional)\n    '<ICON>', // icon (optional)\n    '<SOUND>', // sound (optional)\n    '<COLOR>', // color (optional)\n    '<TAG>', // tag (optional)\n    null, // badge (optional)\n    false, // draft (optional)\n    '', // scheduledAt (optional)\n    false, // contentAvailable (optional)\n    false, // critical (optional)\n    sdk.MessagePriority.Normal // priority (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Complete Example of Using Appwrite Node.js SDK\nDESCRIPTION: A full working example that demonstrates how to initialize the SDK client and make an API request to create a user, showing the entire flow from setup to handling the response.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/README.md#2025-04-16_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nlet client = new sdk.Client();\n\nclient\n    .setEndpoint('https://[HOSTNAME_OR_IP]/v1') // Your API Endpoint\n    .setProject('5df5acd0d48c2') // Your project ID\n    .setKey('919c2d18fb5d4...a2ae413da83346ad2') // Your secret API key\n    .setSelfSigned() // Use only on dev mode with a self-signed SSL cert\n;\n\nlet users = new sdk.Users(client);\nlet promise = users.create(sdk.ID.unique(), \"email@example.com\", \"+123456789\", \"password\", \"Walter O'Brien\");\n\npromise.then(function (response) {\n    console.log(response);\n}, function (error) {\n    console.log(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Creating SMTP Provider with Appwrite SDK in Node.js\nDESCRIPTION: This snippet initializes the Appwrite client, configures the Messaging service, and creates an SMTP provider. It sets various parameters such as provider ID, name, host, port, credentials, encryption, and email settings.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-smtp-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createSmtpProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name\n    '<HOST>', // host\n    1, // port (optional)\n    '<USERNAME>', // username (optional)\n    '<PASSWORD>', // password (optional)\n    sdk.SmtpEncryption.None, // encryption (optional)\n    false, // autoTLS (optional)\n    '<MAILER>', // mailer (optional)\n    '<FROM_NAME>', // fromName (optional)\n    'email@example.com', // fromEmail (optional)\n    '<REPLY_TO_NAME>', // replyToName (optional)\n    'email@example.com', // replyToEmail (optional)\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Error Handling with Appwrite Node.js SDK using Try/Catch\nDESCRIPTION: Demonstrates how to handle errors using async/await pattern with try/catch blocks when making API requests with the Appwrite SDK. The example shows catching AppwriteException objects and accessing error messages.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/README.md#2025-04-16_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nlet users = new sdk.Users(client);\n\ntry {\n    let res = await users.create(sdk.ID.unique(), \"email@example.com\", \"+123456789\", \"password\", \"Walter O'Brien\");\n} catch(e) {\n    console.log(e.message);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Collection with Appwrite Node.js SDK\nDESCRIPTION: This code initializes the Appwrite SDK client with project credentials and creates a new collection in a database. It configures the endpoint, project ID, and API key for authentication, then uses the Databases service to create a collection with specified parameters including permissions and security settings.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-collection.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createCollection(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '<NAME>', // name\n    [\"read(\\\"any\\\")\"], // permissions (optional)\n    false, // documentSecurity (optional)\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Creating Function Execution in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, set up authentication, and create a new function execution using the Functions API. It demonstrates setting the API endpoint, project ID, and user session, as well as specifying various parameters for the function execution.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/create-execution.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.createExecution(\n    '<FUNCTION_ID>', // functionId\n    '<BODY>', // body (optional)\n    false, // async (optional)\n    '<PATH>', // path (optional)\n    sdk.ExecutionMethod.GET, // method (optional)\n    {}, // headers (optional)\n    '' // scheduledAt (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating SMS Message with Appwrite Messaging Service\nDESCRIPTION: Creates an SMS message using the Appwrite Messaging service with options for content, topics, users, targets, draft status, and scheduling.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-sms.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createSms(\n    '<MESSAGE_ID>', // messageId\n    '<CONTENT>', // content\n    [], // topics (optional)\n    [], // users (optional)\n    [], // targets (optional)\n    false, // draft (optional)\n    '' // scheduledAt (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating String Attribute\nDESCRIPTION: Sets up an Appwrite client with endpoint, project ID, and API key, then creates a string attribute in a specified database collection. The attribute creation includes configuration options like size, required status, default value, array support, and encryption.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-string-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createStringAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    1, // size\n    false, // required\n    '<DEFAULT>', // default (optional)\n    false, // array (optional)\n    false // encrypt (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Document with Appwrite Node.js SDK\nDESCRIPTION: Demonstrates initializing the Appwrite client with proper configuration and creating a new document in a specified database collection. Shows setting up endpoint, project, and session authentication, followed by document creation with optional permissions.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-document.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createDocument(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '<DOCUMENT_ID>', // documentId\n    {}, // data\n    [\"read(\\\"any\\\")\"] // permissions (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Creating Mailgun Provider in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, set up the messaging service, and create a Mailgun provider. It includes setting the API endpoint, project ID, and API key, as well as configuring various Mailgun-specific options.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-mailgun-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createMailgunProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name\n    '<API_KEY>', // apiKey (optional)\n    '<DOMAIN>', // domain (optional)\n    false, // isEuRegion (optional)\n    '<FROM_NAME>', // fromName (optional)\n    'email@example.com', // fromEmail (optional)\n    '<REPLY_TO_NAME>', // replyToName (optional)\n    'email@example.com', // replyToEmail (optional)\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating User Session with Node.js SDK\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with an endpoint and project ID, then use the Account service to create a new session for a user. It requires the Appwrite SDK for Node.js and valid user credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-session.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createSession(\n    '<USER_ID>', // userId\n    '<SECRET>' // secret\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing Function Variables in Node.js\nDESCRIPTION: This code initializes the Appwrite SDK client with endpoint, project ID, and API key, then uses the Functions service to retrieve all variables for a specific function. It demonstrates proper authentication setup and API request pattern using async/await.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/list-variables.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.listVariables(\n    '<FUNCTION_ID>' // functionId\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Email/Password Session with Appwrite Node.js SDK\nDESCRIPTION: This snippet initializes the Appwrite SDK client for Node.js and creates an email/password authentication session. It sets the API endpoint and project ID, then uses the Account service to authenticate a user with their email and password credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-email-password-session.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createEmailPasswordSession(\n    'email@example.com', // email\n    'password' // password\n);\n```\n\n----------------------------------------\n\nTITLE: Updating File Properties with Appwrite Storage API in Node.js\nDESCRIPTION: This snippet shows how to use the Appwrite Node.js SDK to update a file's properties in storage. It sets up the client with the API endpoint, project ID, and user session, then uses the Storage class to update a file's name and permissions.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/storage/update-file.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst storage = new sdk.Storage(client);\n\nconst result = await storage.updateFile(\n    '<BUCKET_ID>', // bucketId\n    '<FILE_ID>', // fileId\n    '<NAME>', // name (optional)\n    [\"read(\\\"any\\\")\"] // permissions (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating a User with Appwrite Users Service\nDESCRIPTION: Example of making an API request to create a new user with the Appwrite Users service. The request includes generating a unique ID and providing user details like email, phone, password, and name.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/README.md#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nlet users = new sdk.Users(client);\n\nlet promise = users.create(sdk.ID.unique(), \"email@example.com\", \"+123456789\", \"password\", \"Walter O'Brien\");\n\npromise.then(function (response) {\n    console.log(response);\n}, function (error) {\n    console.log(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Creating APNS Provider in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, set up the Messaging service, and create an APNS provider. It includes setting the API endpoint, project ID, and API key, followed by configuring the APNS provider with various optional parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-apns-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createApnsProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name\n    '<AUTH_KEY>', // authKey (optional)\n    '<AUTH_KEY_ID>', // authKeyId (optional)\n    '<TEAM_ID>', // teamId (optional)\n    '<BUNDLE_ID>', // bundleId (optional)\n    false, // sandbox (optional)\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating a Function with Appwrite SDK for Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, set up the Functions service, and create a new function. It includes various optional parameters for customizing the function's behavior and deployment.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/create.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.create(\n    '<FUNCTION_ID>', // functionId\n    '<NAME>', // name\n    sdk..Node145, // runtime\n    [\"any\"], // execute (optional)\n    [], // events (optional)\n    '', // schedule (optional)\n    1, // timeout (optional)\n    false, // enabled (optional)\n    false, // logging (optional)\n    '<ENTRYPOINT>', // entrypoint (optional)\n    '<COMMANDS>', // commands (optional)\n    [], // scopes (optional)\n    '<INSTALLATION_ID>', // installationId (optional)\n    '<PROVIDER_REPOSITORY_ID>', // providerRepositoryId (optional)\n    '<PROVIDER_BRANCH>', // providerBranch (optional)\n    false, // providerSilentMode (optional)\n    '<PROVIDER_ROOT_DIRECTORY>', // providerRootDirectory (optional)\n    '<TEMPLATE_REPOSITORY>', // templateRepository (optional)\n    '<TEMPLATE_OWNER>', // templateOwner (optional)\n    '<TEMPLATE_ROOT_DIRECTORY>', // templateRootDirectory (optional)\n    '<TEMPLATE_VERSION>', // templateVersion (optional)\n    '' // specification (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Messaging Topic in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with endpoint, project ID, and API key. It then creates a Messaging instance and updates a topic with a new name and subscription settings.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-topic.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.updateTopic(\n    '<TOPIC_ID>', // topicId\n    '<NAME>', // name (optional)\n    [\"any\"] // subscribe (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Messaging Subscriber with Appwrite SDK in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, configure authentication, and create a new subscriber for a messaging topic. It requires the Appwrite SDK for Node.js and uses JWT authentication.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-subscriber.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setJWT('<YOUR_JWT>'); // Your secret JSON Web Token\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createSubscriber(\n    '<TOPIC_ID>', // topicId\n    '<SUBSCRIBER_ID>', // subscriberId\n    '<TARGET_ID>' // targetId\n);\n```\n\n----------------------------------------\n\nTITLE: Installing Appwrite Node.js SDK via NPM\nDESCRIPTION: Command to install the Appwrite Node.js SDK package using NPM package manager. The package is named 'node-appwrite' and should be saved as a dependency in your project.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install node-appwrite --save\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating Storage Bucket in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with endpoint, project ID, and API key, then use the Storage API to create a new bucket. It sets various bucket properties including permissions, file security, and size limits.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/storage/create-bucket.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst storage = new sdk.Storage(client);\n\nconst result = await storage.createBucket(\n    '<BUCKET_ID>', // bucketId\n    '<NAME>', // name\n    [\"read(\\\"any\\\")\"], // permissions (optional)\n    false, // fileSecurity (optional)\n    false, // enabled (optional)\n    1, // maximumFileSize (optional)\n    [], // allowedFileExtensions (optional)\n    sdk..None, // compression (optional)\n    false, // encryption (optional)\n    false // antivirus (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Email Token with Appwrite Node.js SDK\nDESCRIPTION: This code snippet demonstrates how to use the Appwrite Node.js SDK to create an email token for user authentication. It initializes the Appwrite client with an endpoint and project ID, then uses the Account service to generate an email token for a specific user and email address.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-email-token.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createEmailToken(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    false // phrase (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing Storage Buckets in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client for Node.js, configure it with necessary credentials, and use the Storage service to list buckets. It demonstrates client initialization, authentication setup, and making an API call to retrieve bucket information.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/storage/list-buckets.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst storage = new sdk.Storage(client);\n\nconst result = await storage.listBuckets(\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Listing Function Deployments with Appwrite SDK\nDESCRIPTION: Demonstrates how to list function deployments using the Appwrite Functions API. Includes optional parameters for queries and search functionality.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/list-deployments.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.listDeployments(\n    '<FUNCTION_ID>', // functionId\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating JWT Token with Appwrite Users Service\nDESCRIPTION: Demonstrates how to create a JWT token for a specific user using the Appwrite Users service. The method accepts a user ID, optional session ID, and duration parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-j-w-t.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst users = new sdk.Users(client);\n\nconst result = await users.createJWT(\n    '<USER_ID>', // userId\n    '<SESSION_ID>', // sessionId (optional)\n    0 // duration (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Deleting Function Execution with Appwrite Node.js SDK\nDESCRIPTION: Initializes the Appwrite client with necessary credentials and uses the Functions service to delete a specific function execution. Requires project ID, API key, function ID, and execution ID as parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/delete-execution.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.deleteExecution(\n    '<FUNCTION_ID>', // functionId\n    '<EXECUTION_ID>' // executionId\n);\n```\n\n----------------------------------------\n\nTITLE: Creating JWT Token with Appwrite SDK in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, configure it with the API endpoint and project ID, and use the Account service to create a JWT token. It requires the 'node-appwrite' package to be installed.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-j-w-t.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createJWT();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Creating File in Node.js\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite SDK client, set up the Storage service, and create a file in a specified bucket. It includes setting the API endpoint, project ID, and user session for authentication. The file is created with optional read permissions.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/storage/create-file.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\nconst fs = require('fs');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst storage = new sdk.Storage(client);\n\nconst result = await storage.createFile(\n    '<BUCKET_ID>', // bucketId\n    '<FILE_ID>', // fileId\n    InputFile.fromPath('/path/to/file', 'filename'), // file\n    [\"read(\\\"any\\\")\"] // permissions (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Updating a Document with Appwrite SDK in Node.js\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite SDK client, set up a Databases instance, and use it to update a document in a specific database and collection. It includes setting the API endpoint, project ID, and user session for authentication.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-document.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.updateDocument(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '<DOCUMENT_ID>', // documentId\n    {}, // data (optional)\n    [\"read(\\\"any\\\")\"] // permissions (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Executing GraphQL Query in Node.js\nDESCRIPTION: This snippet sets up the Appwrite client with the required configuration and performs a GraphQL query. It demonstrates how to initialize the SDK, set the endpoint, project ID, and API key, and then use the GraphQL service to execute a query.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/graphql/query.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst graphql = new sdk.Graphql(client);\n\nconst result = await graphql.query(\n    {} // query\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Datetime Attribute in Appwrite Database using Node.js SDK\nDESCRIPTION: This snippet demonstrates how to use the Appwrite SDK's Databases class to update a datetime attribute in a specific database and collection. It requires the database ID, collection ID, and other parameters for the attribute update.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-datetime-attribute.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.updateDatetimeAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    '', // default\n    '' // newKey (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating MD5 User with Appwrite SDK\nDESCRIPTION: Creates a new user using MD5 authentication method. Requires user ID, email, password, and optional name parameter. Returns the created user object.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-m-d5user.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst users = new sdk.Users(client);\n\nconst result = await users.createMD5User(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    'password', // password\n    '<NAME>' // name (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: Sets up the Appwrite SDK client with necessary configuration including API endpoint, project ID, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-msg91provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Retrieving Message\nDESCRIPTION: Demonstrates setting up the Appwrite SDK client with endpoint, project ID, and API key credentials, then using the Messaging service to retrieve a specific message by its ID. The code shows the complete flow from initialization to message retrieval.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/get-message.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.getMessage(\n    '<MESSAGE_ID>' // messageId\n);\n```\n\n----------------------------------------\n\nTITLE: Updating IP Attribute in Appwrite Database\nDESCRIPTION: Demonstrates updating an IP attribute in a specified database collection. Takes database ID, collection ID, key parameters, and optional settings for the attribute update.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-ip-attribute.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = await databases.updateIpAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    '', // default\n    '' // newKey (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating User Session in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with project credentials and create a new user session. It requires the Appwrite SDK for Node.js and valid project credentials. The code configures the client with an API endpoint, project ID, and API key, then uses the Users service to create a session for a specific user ID.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-session.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.createSession(\n    '<USER_ID>' // userId\n);\n```\n\n----------------------------------------\n\nTITLE: Delete Message using Appwrite Node.js SDK\nDESCRIPTION: Initializes the Appwrite SDK client with endpoint, project ID, and API key credentials, then uses the Messaging service to delete a specific message. Requires Appwrite project setup and valid API credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/delete.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.delete(\n    '<MESSAGE_ID>' // messageId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating Relationship Attribute in Node.js\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client with project settings and create a one-to-one relationship attribute between two collections using the Databases service. It sets the API endpoint, project ID, and API key, then uses the createRelationshipAttribute method to establish the relationship.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-relationship-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createRelationshipAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '<RELATED_COLLECTION_ID>', // relatedCollectionId\n    sdk.RelationshipType.OneToOne, // type\n    false, // twoWay (optional)\n    '', // key (optional)\n    '', // twoWayKey (optional)\n    sdk.RelationMutate.Cascade // onDelete (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing Database Attributes in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with endpoint, project ID, and API key. It then uses the Databases service to list attributes of a specific collection in a database. The code requires the Appwrite SDK for Node.js and valid credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/list-attributes.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.listAttributes(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Mailgun Provider using Appwrite SDK in Node.js\nDESCRIPTION: This snippet demonstrates how to update a Mailgun provider using the Appwrite SDK's messaging service. It allows configuring various options such as name, API key, domain, region, and email settings.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-mailgun-provider.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.updateMailgunProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name (optional)\n    '<API_KEY>', // apiKey (optional)\n    '<DOMAIN>', // domain (optional)\n    false, // isEuRegion (optional)\n    false, // enabled (optional)\n    '<FROM_NAME>', // fromName (optional)\n    'email@example.com', // fromEmail (optional)\n    '<REPLY_TO_NAME>', // replyToName (optional)\n    '<REPLY_TO_EMAIL>' // replyToEmail (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Telesign Provider Settings in Appwrite\nDESCRIPTION: Updates the configuration of a Telesign messaging provider with specified parameters including name, enabled status, customer ID, API key, and sender information.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-telesign-provider.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.updateTelesignProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name (optional)\n    false, // enabled (optional)\n    '<CUSTOMER_ID>', // customerId (optional)\n    '<API_KEY>', // apiKey (optional)\n    '<FROM>' // from (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-twilio-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Creating Database Index with Appwrite SDK\nDESCRIPTION: Creates a new index in an Appwrite database collection using the Databases service. Requires database ID, collection ID, and index configuration parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-index.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createIndex(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    sdk.IndexType.Key, // type\n    [], // attributes\n    [] // orders (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Querying Documents with Node.js SDK\nDESCRIPTION: Sets up an Appwrite client connection with endpoint, project, and session configuration, then uses the Databases service to list documents from a specified collection. The code demonstrates proper SDK initialization and basic database querying.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/list-documents.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.listDocuments(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Querying Databases in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client with endpoint, project ID, and API key, then use the Databases service to list databases with optional query parameters and search functionality.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/list.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.list(\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating String Attribute in Node.js\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite SDK client with endpoint, project ID, and API key credentials, then use the Databases service to update a string attribute in a collection. The updateStringAttribute method allows you to modify properties of an existing string attribute including whether it's required, default value, size, and optionally rename it with a new key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-string-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.updateStringAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    '<DEFAULT>', // default\n    1, // size (optional)\n    '' // newKey (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Email Message\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with project credentials and use the Messaging service to update an existing email message. It includes setting the API endpoint, project ID, and API key, as well as specifying various optional parameters for the email update.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-email.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.updateEmail(\n    '<MESSAGE_ID>', // messageId\n    [], // topics (optional)\n    [], // users (optional)\n    [], // targets (optional)\n    '<SUBJECT>', // subject (optional)\n    '<CONTENT>', // content (optional)\n    false, // draft (optional)\n    false, // html (optional)\n    [], // cc (optional)\n    [], // bcc (optional)\n    '', // scheduledAt (optional)\n    [] // attachments (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Creating Enum Attribute in JavaScript\nDESCRIPTION: Sets up the Appwrite Node.js SDK client with endpoint, project ID, and API key, then creates an enum attribute in a specified database collection. The attribute creation allows configuration of key, elements, required status, default value, and array type.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-enum-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createEnumAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    [], // elements\n    false, // required\n    '<DEFAULT>', // default (optional)\n    false // array (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration. Creates a messaging service instance for subscriber management.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/list-subscribers.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating Magic URL Session in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client with the necessary configurations and then use the Account service to update a Magic URL session. It requires the Appwrite SDK for Node.js to be installed and the project ID to be provided.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-magic-u-r-l-session.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updateMagicURLSession(\n    '<USER_ID>', // userId\n    '<SECRET>' // secret\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client\nDESCRIPTION: Sets up the Appwrite client with endpoint, project ID, and API key configurations required for database operations.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-relationship-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating User Target\nDESCRIPTION: Sets up an Appwrite client with authentication credentials and creates a messaging target for a specific user. The target can be used for email notifications and messaging purposes. Requires valid Appwrite project credentials and user ID.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-target.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.createTarget(\n    '<USER_ID>', // userId\n    '<TARGET_ID>', // targetId\n    sdk.MessagingProviderType.Email, // providerType\n    '<IDENTIFIER>', // identifier\n    '<PROVIDER_ID>', // providerId (optional)\n    '<NAME>' // name (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Appwrite Function with Node.js SDK\nDESCRIPTION: This code demonstrates how to update an existing Appwrite Function using the Node.js SDK. It initializes the Appwrite client with an endpoint, project ID, and API key, then uses the Functions service to update a function with various configuration options including runtime, execution permissions, events, scheduling, and more.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/update.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.update(\n    '<FUNCTION_ID>', // functionId\n    '<NAME>', // name\n    sdk..Node145, // runtime (optional)\n    [\"any\"], // execute (optional)\n    [], // events (optional)\n    '', // schedule (optional)\n    1, // timeout (optional)\n    false, // enabled (optional)\n    false, // logging (optional)\n    '<ENTRYPOINT>', // entrypoint (optional)\n    '<COMMANDS>', // commands (optional)\n    [], // scopes (optional)\n    '<INSTALLATION_ID>', // installationId (optional)\n    '<PROVIDER_REPOSITORY_ID>', // providerRepositoryId (optional)\n    '<PROVIDER_BRANCH>', // providerBranch (optional)\n    false, // providerSilentMode (optional)\n    '<PROVIDER_ROOT_DIRECTORY>', // providerRootDirectory (optional)\n    '' // specification (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Updating FCM Provider Configuration\nDESCRIPTION: Updates an existing FCM provider settings including name, enabled status, and service account JSON. All parameters except providerId are optional.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-fcm-provider.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.updateFcmProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name (optional)\n    false, // enabled (optional)\n    {} // serviceAccountJSON (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Creating Email Verification in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client with the necessary configuration and use the Account service to create a verification request. It sets the API endpoint, project ID, and user session, then calls the createVerification method with a redirect URL.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-verification.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createVerification(\n    'https://example.com' // url\n);\n```\n\n----------------------------------------\n\nTITLE: Creating a Phone Verification Token with Appwrite Node.js SDK\nDESCRIPTION: This code initializes the Appwrite SDK client, configures it with endpoint and project ID, and creates a phone verification token for a user. It requires the Appwrite Node.js SDK as a dependency and needs valid user ID and phone number parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-phone-token.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createPhoneToken(\n    '<USER_ID>', // userId\n    '+12065550100' // phone\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating User Password\nDESCRIPTION: This code demonstrates how to initialize the Appwrite SDK client with the required configuration and then update a user's password. It sets the API endpoint, project ID, and user session for authentication before using the Account API to change the password.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-password.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updatePassword(\n    '', // password\n    'password' // oldPassword (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Boolean Attribute in Appwrite Database\nDESCRIPTION: Demonstrates how to update a boolean attribute in an Appwrite database collection. The operation requires database ID, collection ID, attribute key, and boolean configurations for required and default values.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-boolean-attribute.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.updateBooleanAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    false, // default\n    '' // newKey (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Deleting User Target with Appwrite SDK in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, set up the Users service, and delete a target for a specific user. It requires the Appwrite SDK, project ID, API key, user ID, and target ID.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/delete-target.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.deleteTarget(\n    '<USER_ID>', // userId\n    '<TARGET_ID>' // targetId\n);\n```\n\n----------------------------------------\n\nTITLE: Creating MSG91 Provider for Appwrite Messaging\nDESCRIPTION: Demonstrates the creation of an MSG91 messaging provider using the Appwrite SDK. Includes provider ID, name, template ID, sender ID, and authentication configuration.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-msg91provider.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createMsg91Provider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name\n    '<TEMPLATE_ID>', // templateId (optional)\n    '<SENDER_ID>', // senderId (optional)\n    '<AUTH_KEY>', // authKey (optional)\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Messaging Topic in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with necessary credentials and use the Messaging service to retrieve a specific topic. It requires the Appwrite Node.js SDK and valid Appwrite project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/get-topic.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.getTopic(\n    '<TOPIC_ID>' // topicId\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Function Variable with Appwrite Node.js SDK\nDESCRIPTION: This snippet demonstrates the complete process of initializing the Appwrite SDK client for Node.js and using it to create a new variable for a specific Function. It includes configuring the client with the API endpoint, project ID, and API key, then using the Functions service to create a variable with a key-value pair.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/create-variable.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.createVariable(\n    '<FUNCTION_ID>', // functionId\n    '<KEY>', // key\n    '<VALUE>' // value\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Querying User Memberships in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with necessary credentials and use the Users service to list memberships for a specific user. It requires the Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/list-memberships.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.listMemberships(\n    '<USER_ID>' // userId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Deleting Document\nDESCRIPTION: Sets up the Appwrite client with necessary credentials and executes a document deletion operation. Requires the Appwrite Node.js SDK and valid database, collection, and document IDs. Returns the result of the deletion operation.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/delete-document.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.deleteDocument(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '<DOCUMENT_ID>' // documentId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving File using Node.js SDK\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with project settings and session authentication, then use the Storage API to retrieve a specific file from a bucket. It requires the Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/storage/get-file.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst storage = new sdk.Storage(client);\n\nconst result = await storage.getFile(\n    '<BUCKET_ID>', // bucketId\n    '<FILE_ID>' // fileId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client and Messaging Service\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project ID, and API key configuration, then initializes the messaging service and demonstrates retrieving a list of messages with optional query parameters and search functionality.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/list-messages.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.listMessages(\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Querying Appwrite Build Queue Health Status in Node.js\nDESCRIPTION: Demonstrates how to use the Health service from the Appwrite SDK to check the status of the build queues. The optional threshold parameter can be used to specify a threshold for queue time.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-builds.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst health = new sdk.Health(client);\n\nconst result = await health.getQueueBuilds(\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Creating Textmagic Provider\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project, and API key configuration, then creates a Textmagic messaging provider. The code demonstrates how to establish connection parameters and configure a messaging service provider with optional parameters like sender phone number, username, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-textmagic-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createTextmagicProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name\n    '+12065550100', // from (optional)\n    '<USERNAME>', // username (optional)\n    '<API_KEY>', // apiKey (optional)\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Messaging Provider in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with necessary configurations and use the messaging service to retrieve a specific provider. It requires the Appwrite Node.js SDK and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/get-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.getProvider(\n    '<PROVIDER_ID>' // providerId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating User Email\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project ID, and API key configuration, then uses it to update a user's email address. The code requires the node-appwrite package and valid Appwrite credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/update-email.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.updateEmail(\n    '<USER_ID>', // userId\n    'email@example.com' // email\n);\n```\n\n----------------------------------------\n\nTITLE: Creating MFA Challenge with Appwrite Node.js SDK\nDESCRIPTION: Initializes the Appwrite client with endpoint and project ID configuration, then creates an MFA challenge using email as the authentication factor. The code demonstrates proper SDK instantiation and MFA challenge creation using the Account service.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-mfa-challenge.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createMfaChallenge(\n    sdk.AuthenticationFactor.Email // factor\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Updating User Name in Node.js\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite Node.js SDK client with endpoint and project settings, then use the Account service to update a user's name. It requires the Appwrite SDK for Node.js and valid authentication via a user session.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-name.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updateName(\n    '<NAME>' // name\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating Anonymous Session in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client for Node.js, set the API endpoint and project ID, and create an anonymous session. It uses the 'node-appwrite' package to interact with Appwrite services.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-anonymous-session.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createAnonymousSession();\n```\n\n----------------------------------------\n\nTITLE: Creating a Database with Appwrite Node.js SDK\nDESCRIPTION: Initializes the Appwrite SDK client with endpoint, project ID, and API key credentials, then uses the Databases service to create a new database. The code demonstrates the complete flow from SDK initialization to database creation with proper authentication.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.create(\n    '<DATABASE_ID>', // databaseId\n    '<NAME>', // name\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Creating Bcrypt User in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client with necessary configurations and create a new user using Bcrypt password hashing. It requires the Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-bcrypt-user.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.createBcryptUser(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    'password', // password\n    '<NAME>' // name (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Deleting User - Node.js\nDESCRIPTION: Sets up the Appwrite SDK client with project credentials and demonstrates how to delete a user. Requires the Appwrite Node.js SDK package and valid project credentials including API endpoint, project ID, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/delete.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.delete(\n    '<USER_ID>' // userId\n);\n```\n\n----------------------------------------\n\nTITLE: Updating User Phone Number with Appwrite SDK in Node.js\nDESCRIPTION: This code initializes the Appwrite SDK client with necessary configurations and uses it to update a user's phone number. It requires the Appwrite SDK for Node.js, a valid project ID, and user session for authentication. The updatePhone method takes a phone number and the user's password as parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-phone.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updatePhone(\n    '+12065550100', // phone\n    'password' // password\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Generating QR Code with Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, set up the Avatars service, and generate a QR code. It demonstrates setting the API endpoint, project ID, and user session, as well as specifying parameters for the QR code generation.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/avatars/get-q-r.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst avatars = new sdk.Avatars(client);\n\nconst result = await avatars.getQR(\n    '<TEXT>', // text\n    1, // size (optional)\n    0, // margin (optional)\n    false // download (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Updating SMS Message with Appwrite Messaging Service\nDESCRIPTION: Demonstrates how to update an existing SMS message using the Messaging service. Includes options for topics, users, targets, content, draft status, and scheduling.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-sms.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.updateSms(\n    '<MESSAGE_ID>', // messageId\n    [], // topics (optional)\n    [], // users (optional)\n    [], // targets (optional)\n    '<CONTENT>', // content (optional)\n    false, // draft (optional)\n    '' // scheduledAt (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Generating Flag Avatar with Appwrite SDK\nDESCRIPTION: Creates an Avatars service instance and generates a flag image with optional width, height, and quality parameters. Uses the Afghanistan flag as an example.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/avatars/get-flag.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst avatars = new sdk.Avatars(client);\n\nconst result = await avatars.getFlag(\n    sdk.Flag.Afghanistan, // code\n    0, // width (optional)\n    0, // height (optional)\n    0 // quality (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Listing Message Targets\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project ID, and API key configuration, then uses the messaging service to retrieve a list of message targets. The code demonstrates proper client initialization and basic messaging API usage.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/list-targets.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.listTargets(\n    '<MESSAGE_ID>', // messageId\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Listing User Sessions in Node.js\nDESCRIPTION: This code snippet demonstrates how to initialize the Appwrite SDK for Node.js, configure the client with endpoint, project ID, and session credentials, and then use the Account service to retrieve a list of user sessions. The client setup pattern is essential for making any API calls to Appwrite services.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/list-sessions.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.listSessions();\n```\n\n----------------------------------------\n\nTITLE: Deleting Team Membership with Appwrite Node.js SDK\nDESCRIPTION: Initializes the Appwrite SDK client with necessary configurations and demonstrates how to delete a team membership. Requires Appwrite project credentials and valid team and membership IDs.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/teams/delete-membership.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst teams = new sdk.Teams(client);\n\nconst result = await teams.deleteMembership(\n    '<TEAM_ID>', // teamId\n    '<MEMBERSHIP_ID>' // membershipId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating Team Membership\nDESCRIPTION: Demonstrates how to set up the Appwrite SDK client with proper configuration and update team membership roles. The code initializes the client with endpoint, project ID, and session details, then uses the Teams service to update a member's roles within a team.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/teams/update-membership.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst teams = new sdk.Teams(client);\n\nconst result = await teams.updateMembership(\n    '<TEAM_ID>', // teamId\n    '<MEMBERSHIP_ID>', // membershipId\n    [] // roles\n);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Messaging Provider using Appwrite Node.js SDK\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, set up the messaging service, and delete a messaging provider. It requires the Appwrite Node.js SDK, a valid API endpoint, project ID, API key, and the ID of the provider to be deleted.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/delete-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.deleteProvider(\n    '<PROVIDER_ID>' // providerId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating APNS Provider\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client with endpoint, project ID, and API key. It then creates a messaging service instance and calls the updateApnsProvider method to update an existing APNS provider with various optional parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-apns-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.updateApnsProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name (optional)\n    false, // enabled (optional)\n    '<AUTH_KEY>', // authKey (optional)\n    '<AUTH_KEY_ID>', // authKeyId (optional)\n    '<TEAM_ID>', // teamId (optional)\n    '<BUNDLE_ID>', // bundleId (optional)\n    false // sandbox (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configurations\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-email.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Updating Database using Appwrite Node.js SDK\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client with proper authentication credentials and use it to update an existing database. It configures the endpoint, project ID, and API key, then performs a database update operation specifying the database ID, name, and optional enabled status.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.update(\n    '<DATABASE_ID>', // databaseId\n    '<NAME>', // name\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client\nDESCRIPTION: Sets up the Appwrite client configuration with endpoint, project ID and API key. Creates a database service instance for querying collections.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/list-collections.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.listCollections(\n    '<DATABASE_ID>', // databaseId\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Information with Appwrite SDK in Node.js\nDESCRIPTION: This snippet demonstrates how to use the initialized Appwrite client to retrieve a user's information. It requires a valid user ID as input and returns the user's details.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/get.md#2025-04-16_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst users = new sdk.Users(client);\n\nconst result = await users.get(\n    '<USER_ID>' // userId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Database Attribute in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with necessary credentials and use the Databases service to retrieve an attribute from a specific database collection. It requires the Appwrite SDK for Node.js and valid Appwrite project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/get-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.getAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '' // key\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving File View using Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, set up authentication, and use the Storage service to retrieve a file view. It requires the Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/storage/get-file-view.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst storage = new sdk.Storage(client);\n\nconst result = await storage.getFileView(\n    '<BUCKET_ID>', // bucketId\n    '<FILE_ID>' // fileId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Updating MFA Recovery Codes in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, set up the Users service, and update MFA recovery codes for a specific user. It requires the Appwrite SDK for Node.js and valid credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/update-mfa-recovery-codes.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.updateMfaRecoveryCodes(\n    '<USER_ID>' // userId\n);\n```\n\n----------------------------------------\n\nTITLE: Updating User Phone Number with Appwrite SDK in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, configure it with the necessary credentials, and use the Users API to update a user's phone number. It requires the Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/update-phone.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.updatePhone(\n    '<USER_ID>', // userId\n    '+12065550100' // number\n);\n```\n\n----------------------------------------\n\nTITLE: Creating SendGrid Provider in Appwrite\nDESCRIPTION: Initializes a SendGrid messaging provider with configuration options including provider ID, name, API key, and email settings.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-sendgrid-provider.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createSendgridProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name\n    '<API_KEY>', // apiKey (optional)\n    '<FROM_NAME>', // fromName (optional)\n    'email@example.com', // fromEmail (optional)\n    '<REPLY_TO_NAME>', // replyToName (optional)\n    'email@example.com', // replyToEmail (optional)\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Listing Function Executions with Appwrite Node.js SDK\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client and use the Functions service to retrieve a list of function executions. It sets up the client with endpoint, project ID, and session authentication, then queries executions for a specific function with optional search parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/list-executions.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.listExecutions(\n    '<FUNCTION_ID>', // functionId\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Function Deployment with Appwrite Node.js SDK\nDESCRIPTION: This code initializes the Appwrite client with necessary credentials and creates a function deployment. It configures the client with endpoint, project ID, and API key, then uses the Functions service to create a deployment with a code file, activation setting, and optional parameters like entrypoint and commands.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/create-deployment.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\nconst fs = require('fs');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.createDeployment(\n    '<FUNCTION_ID>', // functionId\n    InputFile.fromPath('/path/to/file', 'filename'), // code\n    false, // activate\n    '<ENTRYPOINT>', // entrypoint (optional)\n    '<COMMANDS>' // commands (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating User Password\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project, and API key configuration, then uses the Users service to update a user's password. Requires Appwrite SDK for Node.js and valid credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/update-password.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.updatePassword(\n    '<USER_ID>', // userId\n    '' // password\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Function in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client for Node.js, configure it with necessary credentials, and use it to fetch a specific function. It requires the Appwrite SDK for Node.js and valid Appwrite credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/get.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.get(\n    '<FUNCTION_ID>' // functionId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Deleting MFA Authenticator in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client, configure the account service, and delete an MFA authenticator. It requires the Appwrite SDK for Node.js and uses async/await for the deletion operation.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/delete-mfa-authenticator.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.deleteMfaAuthenticator(\n    sdk.AuthenticatorType.Totp // type\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Using Avatars API in Node.js\nDESCRIPTION: This snippet demonstrates how to set up the Appwrite Node.js SDK client, configure it with endpoint, project ID, and session authentication, and use the Avatars service to retrieve an image from a URL. The getImage method accepts a URL parameter and optional width and height parameters to resize the image.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/avatars/get-image.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst avatars = new sdk.Avatars(client);\n\nconst result = await avatars.getImage(\n    'https://example.com', // url\n    0, // width (optional)\n    0 // height (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Function Deployment Information with Appwrite SDK in Node.js\nDESCRIPTION: This code initializes the Appwrite SDK client with endpoint, project ID, and API key, then retrieves deployment details for a specific function deployment. It requires the node-appwrite package and valid Appwrite credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/get-deployment.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.getDeployment(\n    '<FUNCTION_ID>', // functionId\n    '<DEPLOYMENT_ID>' // deploymentId\n);\n```\n\n----------------------------------------\n\nTITLE: Fetching Team Preferences with Appwrite Node.js SDK\nDESCRIPTION: Initializes the Appwrite client with project settings and session authentication, then retrieves team preferences using the Teams API. Requires Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/teams/get-prefs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst teams = new sdk.Teams(client);\n\nconst result = await teams.getPrefs(\n    '<TEAM_ID>' // teamId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Deleting Storage Bucket in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with the required configuration and then use it to delete a storage bucket. It requires the Appwrite Node.js SDK and valid credentials including API endpoint, project ID, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/storage/delete-bucket.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst storage = new sdk.Storage(client);\n\nconst result = await storage.deleteBucket(\n    '<BUCKET_ID>' // bucketId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating Messaging Topic in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with necessary credentials and create a new messaging topic. It sets the API endpoint, project ID, and API key, then uses the messaging service to create a topic with a specified ID, name, and optional subscription permissions.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-topic.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createTopic(\n    '<TOPIC_ID>', // topicId\n    '<NAME>', // name\n    [\"any\"] // subscribe (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Vonage Provider\nDESCRIPTION: Sets up an Appwrite SDK client with project credentials and updates Vonage messaging provider settings. The code configures the endpoint, project ID, and API key for authentication, then uses the messaging service to update Vonage provider details.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-vonage-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.updateVonageProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name (optional)\n    false, // enabled (optional)\n    '<API_KEY>', // apiKey (optional)\n    '<API_SECRET>', // apiSecret (optional)\n    '<FROM>' // from (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Subscriber from a Topic with Appwrite SDK in Node.js\nDESCRIPTION: This snippet initializes the Appwrite SDK client, configures it with the necessary credentials, and uses the Messaging service to delete a subscriber from a specific topic. It requires the Appwrite SDK, a valid project ID, JWT, topic ID, and subscriber ID.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/delete-subscriber.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setJWT('<YOUR_JWT>'); // Your secret JSON Web Token\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.deleteSubscriber(\n    '<TOPIC_ID>', // topicId\n    '<SUBSCRIBER_ID>' // subscriberId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Document in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with endpoint and authentication details, and then use it to fetch a specific document from a database collection. It demonstrates client initialization, session authentication, and use of the Databases API.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/get-document.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.getDocument(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '<DOCUMENT_ID>', // documentId\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Listing Functions in Node.js\nDESCRIPTION: This snippet demonstrates how to set up the Appwrite Node.js SDK client with proper credentials and use it to list functions. It configures the client with an endpoint, project ID, and API key, then uses the Functions service to retrieve a list of functions with optional query parameters and search filtering.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/list.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.list(\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Function Variables with Appwrite Node.js SDK\nDESCRIPTION: This code initializes the Appwrite SDK client with proper authentication credentials and updates a variable for a specific function. It sets up the client with the endpoint, project ID, and API key, then uses the Functions service to update a variable by providing the function ID, variable ID, key, and optional value.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/update-variable.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.updateVariable(\n    '<FUNCTION_ID>', // functionId\n    '<VARIABLE_ID>', // variableId\n    '<KEY>', // key\n    '<VALUE>' // value (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Performing SSL Certificate Health Check with Appwrite SDK in Node.js\nDESCRIPTION: This snippet demonstrates how to use the Health module of the Appwrite SDK to check SSL certificates. It creates a Health instance and calls the getCertificate method, which can optionally take a domain parameter.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-certificate.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst health = new sdk.Health(client);\n\nconst result = await health.getCertificate(\n    '' // domain (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Appwrite Client and Deleting Database - Node.js\nDESCRIPTION: Sets up an Appwrite client with endpoint, project ID, and API key credentials, then performs a database deletion operation. Requires the Appwrite Node.js SDK and valid authentication credentials. Returns the result of the deletion operation.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/delete.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.delete(\n    '<DATABASE_ID>' // databaseId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Sendgrid Provider in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with project settings and update a Sendgrid provider for messaging. It sets the API endpoint, project ID, and API key, then uses the Messaging service to update provider details such as name, enabled status, API key, and email settings.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-sendgrid-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.updateSendgridProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name (optional)\n    false, // enabled (optional)\n    '<API_KEY>', // apiKey (optional)\n    '<FROM_NAME>', // fromName (optional)\n    'email@example.com', // fromEmail (optional)\n    '<REPLY_TO_NAME>', // replyToName (optional)\n    '<REPLY_TO_EMAIL>' // replyToEmail (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing Database Indexes in Node.js\nDESCRIPTION: This code snippet demonstrates how to initialize the Appwrite client, set up authentication credentials, and use the Databases service to list indexes in a specific collection. It requires the node-appwrite SDK and valid Appwrite credentials including project ID and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/list-indexes.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.listIndexes(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Listing Users\nDESCRIPTION: Sets up the Appwrite client with endpoint, project ID, and API key configuration, then uses the Users service to fetch a list of users. Includes optional parameters for filtering and searching users.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/list.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.list(\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing Team Memberships in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client, configure authentication, and use the Teams API to list memberships for a specific team. It demonstrates client initialization, session authentication, and making an API call with optional parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/teams/list-memberships.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst teams = new sdk.Teams(client);\n\nconst result = await teams.listMemberships(\n    '<TEAM_ID>', // teamId\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Listing Functions Runtimes in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client with the necessary configuration and use it to list available function runtimes. It requires the 'node-appwrite' package and valid Appwrite credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/list-runtimes.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.listRuntimes();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Querying Languages with Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with necessary configuration and use the Locale API to retrieve a list of available languages. It requires the Appwrite SDK for Node.js and proper authentication details.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/locale/list-languages.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst locale = new sdk.Locale(client);\n\nconst result = await locale.listLanguages();\n```\n\n----------------------------------------\n\nTITLE: Updating Appwrite Collection with Node.js SDK\nDESCRIPTION: Updates an existing collection in an Appwrite database with specified parameters including name, permissions, document security, and enabled status. Uses the Databases service from the SDK.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-collection.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.updateCollection(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '<NAME>', // name\n    [\"read(\\\"any\\\")\"], // permissions (optional)\n    false, // documentSecurity (optional)\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving User Preferences in Node.js\nDESCRIPTION: This example demonstrates how to import the Appwrite SDK for Node.js, initialize and configure a client with endpoint, project ID, and session information, then use the Account service to retrieve user preferences. The code shows the basic authentication flow needed for interacting with Appwrite services.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/get-prefs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.getPrefs();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Listing User MFA Factors\nDESCRIPTION: Initializes the Appwrite Node.js SDK client with endpoint, project ID, and API key credentials, then retrieves a list of MFA factors for a specified user. This example shows the complete flow from client setup to API call execution.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/list-mfa-factors.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.listMfaFactors(\n    '<USER_ID>' // userId\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Email Verification with Appwrite Node.js SDK\nDESCRIPTION: This code snippet initializes the Appwrite SDK client with necessary configuration and uses the Account service to update a user's email verification status. It requires a user ID and secret token to complete the verification process.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-verification.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updateVerification(\n    '<USER_ID>', // userId\n    '<SECRET>' // secret\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Deleting User Sessions in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with the required configurations and use the Account API to delete all active user sessions. It requires the Appwrite Node.js SDK and proper authentication.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/delete-sessions.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.deleteSessions();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing Topics\nDESCRIPTION: Sets up an Appwrite client with authentication credentials and uses the messaging service to list topics. Includes configuration of endpoint, project ID, and API key, followed by a topic listing operation with optional query and search parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/list-topics.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.listTopics(\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Querying Database Index in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with necessary credentials and use it to retrieve a database index. It requires the Appwrite Node.js SDK and valid project credentials. The code configures the client with an API endpoint, project ID, and API key, then uses the Databases service to fetch an index based on the provided database ID, collection ID, and key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/get-index.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.getIndex(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '' // key\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Database URL Attribute\nDESCRIPTION: Sets up an Appwrite client with endpoint, project ID, and API key configuration, then uses the Databases service to update a URL attribute in a specified collection. Shows both client initialization and database operation patterns.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-url-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.updateUrlAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    'https://example.com', // default\n    '' // newKey (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Making User API Call\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project ID and API key credentials, then uses it to retrieve a specific user target. This code demonstrates the basic authentication flow and API usage pattern with the Appwrite Node.js SDK.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/get-target.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.getTarget(\n    '<USER_ID>', // userId\n    '<TARGET_ID>' // targetId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Listing MFA Factors in Node.js\nDESCRIPTION: This snippet shows the complete process of setting up the Appwrite SDK client with proper authentication and using it to list all MFA factors associated with a user account. It requires the Appwrite Node.js SDK and proper configuration of endpoint, project ID, and user session.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/list-mfa-factors.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.listMfaFactors();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating User Email\nDESCRIPTION: Demonstrates how to configure the Appwrite SDK client with project settings and use the Account API to update a user's email address. Requires valid project ID and API endpoint configuration.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-email.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updateEmail(\n    'email@example.com', // email\n    'password' // password\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Fetching Countries\nDESCRIPTION: Shows how to initialize the Appwrite SDK client with endpoint and project configuration, then uses the Locale service to retrieve a list of countries. Requires the node-appwrite package and valid Appwrite project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/locale/list-countries.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst locale = new sdk.Locale(client);\n\nconst result = await locale.listCountries();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating User Token in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with project credentials and create a user token. It uses the Users service to generate a token for a specific user ID, with optional parameters for token length and expiration time.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-token.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.createToken(\n    '<USER_ID>', // userId\n    4, // length (optional)\n    60 // expire (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Topic Logs using Node.js SDK\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with necessary configurations and use the messaging service to retrieve logs for a specific topic. It requires the Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/list-topic-logs.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.listTopicLogs(\n    '<TOPIC_ID>', // topicId\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Function Deployment with Appwrite SDK for Node.js\nDESCRIPTION: This snippet demonstrates how to delete a specific deployment from a function using the Appwrite Node.js SDK. It shows the initialization of the client with endpoint, project ID, and API key, followed by the creation of a Functions service instance and the call to delete a deployment by providing the function ID and deployment ID.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/delete-deployment.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.deleteDeployment(\n    '<FUNCTION_ID>', // functionId\n    '<DEPLOYMENT_ID>' // deploymentId\n);\n```\n\n----------------------------------------\n\nTITLE: Setting Up Appwrite Client and Deleting Collection in Node.js\nDESCRIPTION: This code demonstrates how to initialize the Appwrite SDK client with necessary credentials and endpoint, then use it to delete a collection from a database. The snippet requires the Appwrite Node.js SDK and valid Appwrite project credentials including an API key with appropriate permissions.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/delete-collection.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.deleteCollection(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>' // collectionId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK and Fetching Website Favicon\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client with endpoint, project ID, and session information. It then uses the Avatars API to fetch a favicon from a specified website URL.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/avatars/get-favicon.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst avatars = new sdk.Avatars(client);\n\nconst result = await avatars.getFavicon(\n    'https://example.com' // url\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Fetching Team Membership\nDESCRIPTION: Demonstrates how to configure the Appwrite Node.js SDK client with project settings and retrieve team membership details. Uses the Teams service to fetch specific membership information using team ID and membership ID parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/teams/get-membership.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst teams = new sdk.Teams(client);\n\nconst result = await teams.getMembership(\n    '<TEAM_ID>', // teamId\n    '<MEMBERSHIP_ID>' // membershipId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Listing Message Logs in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, set up the Messaging module, and use it to list message logs for a specific message. It requires the Appwrite SDK for Node.js and valid Appwrite credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/list-message-logs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.listMessageLogs(\n    '<MESSAGE_ID>', // messageId\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Downloading Function Deployment with Appwrite Node.js SDK\nDESCRIPTION: Initializes the Appwrite client with proper authentication and uses the Functions service to download a specific function deployment. Requires your Appwrite endpoint URL, project ID, and API key to authenticate, plus function and deployment IDs to specify which deployment to retrieve.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/get-deployment-download.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.getDeploymentDownload(\n    '<FUNCTION_ID>', // functionId\n    '<DEPLOYMENT_ID>' // deploymentId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client and Getting Function Execution\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite Node.js SDK client with proper endpoint, project ID, and session credentials, then use it to retrieve details of a specific function execution using the Functions service.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/get-execution.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.getExecution(\n    '<FUNCTION_ID>', // functionId\n    '<EXECUTION_ID>' // executionId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Retrieving Database in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client with project credentials and endpoint, then use the Databases service to retrieve a specific database by ID. It requires the node-appwrite package and valid Appwrite credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/get.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.get(\n    '<DATABASE_ID>' // databaseId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: This snippet sets up the Appwrite SDK client with the necessary configuration. It sets the API endpoint, project ID, and API key required for authentication.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/delete-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: This snippet sets up the Appwrite SDK client with the necessary configuration. It requires the Appwrite endpoint, project ID, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/get.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Creating PHPass User with Appwrite SDK\nDESCRIPTION: Creates a new user using PHPass authentication method. Requires user ID, email, password, and optional name parameter. Returns the created user object.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-p-h-pass-user.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst users = new sdk.Users(client);\n\nconst result = await users.createPHPassUser(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    'password', // password\n    '<NAME>' // name (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Integer Attribute using Appwrite Node.js SDK\nDESCRIPTION: This code initializes the Appwrite Node.js SDK client with required credentials and creates an integer attribute in a specified database collection. It configures the client with an endpoint, project ID, and API key, then uses the Databases service to add a new integer attribute with customizable properties.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-integer-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createIntegerAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    null, // min (optional)\n    null, // max (optional)\n    null, // default (optional)\n    false // array (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Fetching Subscriber Logs\nDESCRIPTION: Sets up the Appwrite SDK client with required configuration and demonstrates how to fetch subscriber logs using the Messaging service. Requires project ID and API key for authentication. Returns logs for a specific subscriber with optional query parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/list-subscriber-logs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.listSubscriberLogs(\n    '<SUBSCRIBER_ID>', // subscriberId\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Retrieving Account Information in Node.js\nDESCRIPTION: This snippet demonstrates how to set up the Appwrite SDK client with appropriate configuration settings and use it to fetch the current user's account information. It requires the node-appwrite package and proper authentication credentials to function.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/get.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.get();\n```\n\n----------------------------------------\n\nTITLE: Deleting Messaging Topic with Appwrite Node.js SDK\nDESCRIPTION: Initializes the Appwrite SDK client with required credentials and deletes a specific messaging topic. Requires project ID, API key, and topic ID to be configured. Returns the result of the deletion operation.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/delete-topic.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.deleteTopic(\n    '<TOPIC_ID>' // topicId\n);\n```\n\n----------------------------------------\n\nTITLE: Deleting Attribute from Collection using Appwrite SDK in Node.js\nDESCRIPTION: This snippet demonstrates how to use the Appwrite SDK to delete an attribute from a collection in a database. It requires the database ID, collection ID, and the key of the attribute to be deleted.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/delete-attribute.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.deleteAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '' // key\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing Function Specifications in Node.js\nDESCRIPTION: This code initializes the Appwrite SDK client with the necessary configuration (endpoint, project ID, and API key) and uses the Functions service to retrieve a list of function specifications. The client handles authentication with the Appwrite backend, and the Functions service provides an interface to interact with serverless functions.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/list-specifications.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.listSpecifications();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration for authentication.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/list-deployments.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Fetching Country Phone Codes in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client with necessary configurations and use the Locale API to retrieve a list of country phone codes. It requires the Appwrite Node.js SDK to be installed and a valid Appwrite project setup.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/locale/list-countries-phones.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst locale = new sdk.Locale(client);\n\nconst result = await locale.listCountriesPhones();\n```\n\n----------------------------------------\n\nTITLE: Listing User Sessions with Appwrite SDK in Node.js\nDESCRIPTION: This snippet demonstrates how to use the initialized Appwrite SDK client to list sessions for a specific user. It creates a Users instance and calls the listSessions method with a user ID.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/list-sessions.md#2025-04-16_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst users = new sdk.Users(client);\n\nconst result = await users.listSessions(\n    '<USER_ID>' // userId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving User Preferences in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with project credentials and use the Users service to fetch preferences for a specific user. It requires the Appwrite Node.js SDK and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/get-prefs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.getPrefs(\n    '<USER_ID>' // userId\n);\n```\n\n----------------------------------------\n\nTITLE: Deleting User Session with Appwrite Node.js SDK\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, set up the account service, and delete a specific user session. It requires the Appwrite Node.js SDK and a valid project ID and session ID.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/delete-session.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.deleteSession(\n    '<SESSION_ID>' // sessionId\n);\n```\n\n----------------------------------------\n\nTITLE: Performing Database Health Check with Appwrite SDK for Node.js\nDESCRIPTION: This snippet uses the initialized Appwrite client to create a Health instance and perform a database health check using the getDB() method.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-d-b.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst health = new sdk.Health(client);\n\nconst result = await health.getDB();\n```\n\n----------------------------------------\n\nTITLE: Updating Float Attribute in Appwrite Database using Node.js SDK\nDESCRIPTION: This snippet demonstrates how to connect to Appwrite using the Node.js SDK and update a float attribute in a database collection. It initializes the client with project credentials and endpoint, then uses the Databases service to call the updateFloatAttribute method with necessary parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-float-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.updateFloatAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    null, // min\n    null, // max\n    null, // default\n    '' // newKey (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Making Health Check in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client with necessary configurations and perform a health check for the antivirus service. It requires the 'node-appwrite' package and valid Appwrite credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-antivirus.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getAntivirus();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client with OAuth2 Token Creation\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint and project configuration, then creates an OAuth2 token for Amazon authentication. The code demonstrates client initialization and OAuth2 token generation with optional success/failure redirect URLs and scopes.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-o-auth2token.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createOAuth2Token(\n    sdk.OAuthProvider.Amazon, // provider\n    'https://example.com', // success (optional)\n    'https://example.com', // failure (optional)\n    [] // scopes (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Team Name using Node.js SDK\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with endpoint and project settings, and then use the Teams service to update a team's name. It requires the Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/teams/update-name.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst teams = new sdk.Teams(client);\n\nconst result = await teams.updateName(\n    '<TEAM_ID>', // teamId\n    '<NAME>' // name\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client and Updating MFA Challenge\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint and project configuration, then uses it to update an MFA challenge with a one-time password (OTP). The code demonstrates client initialization, account service setup, and MFA challenge verification.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-mfa-challenge.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updateMfaChallenge(\n    '<CHALLENGE_ID>', // challengeId\n    '<OTP>' // otp\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating User Name in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with necessary credentials and use the Users service to update a user's name. It requires the Appwrite Node.js SDK and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/update-name.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.updateName(\n    '<USER_ID>', // userId\n    '<NAME>' // name\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Deleting Team\nDESCRIPTION: Sets up the Appwrite SDK client with project credentials and endpoint configuration, then performs a team deletion operation. Requires Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/teams/delete.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst teams = new sdk.Teams(client);\n\nconst result = await teams.delete(\n    '<TEAM_ID>' // teamId\n);\n```\n\n----------------------------------------\n\nTITLE: Creating IP Attribute with Appwrite Node.js SDK\nDESCRIPTION: Initializes Appwrite client with project settings and creates an IP attribute in a specified database collection. Requires Appwrite SDK for Node.js and valid project credentials including endpoint, project ID, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-ip-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createIpAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    '', // default (optional)\n    false // array (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Deleting User Sessions in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client with endpoint, project ID, and API key. It then uses the Users service to delete all sessions for a specific user. The user ID is required as a parameter for the deleteSessions method.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/delete-sessions.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.deleteSessions(\n    '<USER_ID>' // userId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Deleting User Identity in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with project credentials and use the Users service to delete a user identity. It requires the Appwrite SDK for Node.js and valid project credentials. The code expects an identity ID as input and returns the result of the deletion operation.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/delete-identity.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.deleteIdentity(\n    '<IDENTITY_ID>' // identityId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Querying Messaging Provider Logs in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client, configure the messaging service, and query provider logs. It requires the Appwrite SDK for Node.js and valid project credentials. The listProviderLogs method is used to retrieve logs for a specific provider.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/list-provider-logs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.listProviderLogs(\n    '<PROVIDER_ID>', // providerId\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Querying Health Service in Node.js\nDESCRIPTION: This code snippet demonstrates how to set up the Appwrite SDK in a Node.js application, configure the client with endpoint, project ID, and API key, and then use the Health service to retrieve queue logs. The Health service is used to check the health of Appwrite services and components.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-logs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getQueueLogs(\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Checking Function Queue Health in Node.js\nDESCRIPTION: This snippet demonstrates the complete process of setting up the Appwrite SDK client with proper authentication and using the Health API to check the status of function queues. It initializes the client with an endpoint, project ID, and API key, then makes a request to retrieve information about function queue health with an optional threshold parameter.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-functions.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getQueueFunctions(\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Checking Storage Health in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client with project details and API key, then use the Health API to check the status of local storage. It requires the 'node-appwrite' package and valid Appwrite project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-storage-local.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getStorageLocal();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: This snippet sets up the Appwrite SDK client with the necessary configuration. It sets the API endpoint, project ID, and API key required for authentication.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-certificate.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Retrieving Collection in Node.js\nDESCRIPTION: This snippet demonstrates how to set up the Appwrite Node.js SDK, configure the client with credentials, and retrieve a collection from a database. It imports the SDK, creates and configures a client instance with endpoint, project ID, and API key, then uses the Databases service to fetch a specific collection.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/get-collection.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.getCollection(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>' // collectionId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client\nDESCRIPTION: Sets up the Appwrite client with endpoint, project ID, and API key configuration. Creates a messaging service instance for managing messaging providers.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/list-providers.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.listProviders(\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating MFA Recovery Codes\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project ID, and session configuration, then uses the Account service to update MFA recovery codes. The code establishes connection parameters and authenticates the user session before performing the MFA-related operation.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-mfa-recovery-codes.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updateMfaRecoveryCodes();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating User Email Verification in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with necessary credentials and use the Users service to update a user's email verification status. It requires the Appwrite Node.js SDK and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/update-email-verification.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.updateEmailVerification(\n    '<USER_ID>', // userId\n    false // emailVerification\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Health Check\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project ID, and API key configuration, then performs a mail queue health check. The health check can optionally accept a threshold parameter to check against queue metrics.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-mails.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getQueueMails(\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Checking Queue Health in Node.js\nDESCRIPTION: Demonstrates how to initialize the Appwrite SDK client with endpoint, project ID, and API key, then use the Health service to check the status of a queue. This requires the node-appwrite package and proper Appwrite credentials to function.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getQueue();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating TextMagic Provider\nDESCRIPTION: This snippet sets up the Appwrite client with necessary credentials and updates a TextMagic provider using the messaging service. It demonstrates how to configure the client and make an API call to update provider settings.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-textmagic-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.updateTextmagicProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name (optional)\n    false, // enabled (optional)\n    '<USERNAME>', // username (optional)\n    '<API_KEY>', // apiKey (optional)\n    '<FROM>' // from (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: Sets up the Appwrite client with endpoint, project ID, and API key configuration. This is required before making any API calls.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/delete-session.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client in Node.js\nDESCRIPTION: Configures the Appwrite SDK client with endpoint, project ID and API key credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-collection.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key for authentication. This initialization is required before making any API calls to Appwrite services.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-builds.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating Team Membership Status in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client with project and session details, and then use the Teams API to update a membership status. It requires the Appwrite Node.js SDK and valid credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/teams/update-membership-status.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst teams = new sdk.Teams(client);\n\nconst result = await teams.updateMembershipStatus(\n    '<TEAM_ID>', // teamId\n    '<MEMBERSHIP_ID>', // membershipId\n    '<USER_ID>', // userId\n    '<SECRET>' // secret\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK and Updating User MFA\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project, and API key configuration, then uses it to disable MFA for a specific user. The code requires the node-appwrite package and valid Appwrite credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/update-mfa.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.updateMfa(\n    '<USER_ID>', // userId\n    false // mfa\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client for Node.js\nDESCRIPTION: Sets up the Appwrite SDK client with the API endpoint, project ID, and user session for authentication.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/teams/create-membership.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating Function Deployment in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client with necessary configurations and then use it to update a function deployment. It requires the Appwrite SDK for Node.js and valid credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/update-deployment.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.updateDeployment(\n    '<FUNCTION_ID>', // functionId\n    '<DEPLOYMENT_ID>' // deploymentId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: This snippet sets up the Appwrite SDK client with the necessary configuration, including the API endpoint, project ID, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-datetime-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating SHA User in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with necessary credentials and create a new user using SHA password hashing. It demonstrates client configuration, user creation with optional parameters, and async/await usage for API calls.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-s-h-a-user.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.createSHAUser(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    'password', // password\n    sdk.PasswordHash.Sha1, // passwordVersion (optional)\n    '<NAME>' // name (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Appwrite Avatars Service Instance\nDESCRIPTION: Initializes the Avatars service using the configured client\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/avatars/get-initials.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst avatars = new sdk.Avatars(client);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Using Health Service in Node.js\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite SDK client with project credentials and endpoint configuration, then use the Health service to retrieve the current server time. It requires the node-appwrite package and valid Appwrite project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-time.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getTime();\n```\n\n----------------------------------------\n\nTITLE: Updating MFA Authenticator with TOTP in Appwrite Node.js SDK\nDESCRIPTION: This code initializes the Appwrite SDK client with endpoint, project ID, and session credentials, then uses the Account service to update a TOTP-based MFA authenticator. It requires an Appwrite project and a valid user session, along with a one-time password (OTP) for verification.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-mfa-authenticator.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updateMfaAuthenticator(\n    sdk.AuthenticatorType.Totp, // type\n    '<OTP>' // otp\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating MFA Settings\nDESCRIPTION: Demonstrates how to set up the Appwrite SDK client with endpoint and project configuration, and update MFA settings for an account. The code initializes the client with necessary credentials and makes an API call to disable MFA.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-m-f-a.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updateMFA(\n    false // mfa\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Updating Function Deployment Build in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client with proper authentication credentials and use the Functions API to update a deployment build. It requires the node-appwrite package, your Appwrite endpoint, project ID, and API key. The function takes a function ID and deployment ID as parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/update-deployment-build.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.updateDeploymentBuild(\n    '<FUNCTION_ID>', // functionId\n    '<DEPLOYMENT_ID>' // deploymentId\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Scrypt User with Appwrite\nDESCRIPTION: Creates a new user account using Scrypt password hashing. Includes user ID, email, password, salt, and optional name parameter. Additional password configuration parameters are available but set to null in this example.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-scrypt-user.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst users = new sdk.Users(client);\n\nconst result = await users.createScryptUser(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    'password', // password\n    '<PASSWORD_SALT>', // passwordSalt\n    null, // passwordCpu\n    null, // passwordMemory\n    null, // passwordParallel\n    null, // passwordLength\n    '<NAME>' // name (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating Float Attribute in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with endpoint, project ID, and API key. It then uses the Databases service to create a new float attribute in a specified database collection. The attribute creation includes options for required status, min/max values, default value, and array type.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-float-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createFloatAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    null, // min (optional)\n    null, // max (optional)\n    null, // default (optional)\n    false // array (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Creating FCM Provider in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client with the required configuration and create an FCM provider using the Messaging service. It sets the API endpoint, project ID, and API key, then uses the messaging object to create a new FCM provider.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-fcm-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createFcmProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name\n    {}, // serviceAccountJSON (optional)\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Creating MFA Recovery Codes\nDESCRIPTION: Demonstrates how to initialize the Appwrite Node.js SDK client with project credentials and generate MFA recovery codes for a specific user. The code sets up the client with endpoint, project ID, and API key, then uses the Users service to create recovery codes.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-mfa-recovery-codes.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.createMfaRecoveryCodes(\n    '<USER_ID>' // userId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Creating Vonage Messaging Provider in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, set up the messaging service, and create a Vonage provider for sending messages. It requires the Appwrite SDK for Node.js and valid credentials for both Appwrite and Vonage.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-vonage-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createVonageProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name\n    '+12065550100', // from (optional)\n    '<API_KEY>', // apiKey (optional)\n    '<API_SECRET>', // apiSecret (optional)\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Creating Argon2 User in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, set up the configuration, and create a new user with Argon2 password hashing. It requires the 'node-appwrite' package and valid Appwrite credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-argon2user.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.createArgon2User(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    'password', // password\n    '<NAME>' // name (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initialize Appwrite SDK and Create Magic URL Token\nDESCRIPTION: Sets up Appwrite SDK client with endpoint and project credentials, then uses the Account service to generate a magic URL authentication token. The code shows how to configure the client and create a token with optional URL and phrase parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-magic-u-r-l-token.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createMagicURLToken(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    'https://example.com', // url (optional)\n    false // phrase (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Making Locale API Request\nDESCRIPTION: Demonstrates how to initialize the Appwrite Node.js SDK client with endpoint, project ID, and session settings, then uses the Locale service to fetch a list of EU countries. The code shows the basic setup required for making API calls to Appwrite services.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/locale/list-countries-e-u.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst locale = new sdk.Locale(client);\n\nconst result = await locale.listCountriesEU();\n```\n\n----------------------------------------\n\nTITLE: Retrieving MFA Recovery Codes\nDESCRIPTION: Makes an API call to get multi-factor authentication recovery codes for a specified user using the configured Appwrite client.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/get-mfa-recovery-codes.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst users = new sdk.Users(client);\n\nconst result = await users.getMfaRecoveryCodes(\n    '<USER_ID>' // userId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using Appwrite Health API in Node.js\nDESCRIPTION: This code initializes the Appwrite Node.js SDK client with endpoint, project ID, and API key, then uses the Health service to check the status of database queues. The example shows how to configure optional parameters for the getQueueDatabases method.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-databases.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getQueueDatabases(\n    '<NAME>', // name (optional)\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initialize Appwrite Client and Delete MFA Authenticator\nDESCRIPTION: Sets up the Appwrite SDK client with project credentials and deletes a TOTP MFA authenticator for a specific user. Requires Appwrite project ID, API key, and user ID to function.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/delete-mfa-authenticator.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.deleteMfaAuthenticator(\n    '<USER_ID>', // userId\n    sdk.AuthenticatorType.Totp // type\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving User Session in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with necessary configurations and use the Account service to retrieve a specific user session. It requires the Appwrite Node.js SDK and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/get-session.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.getSession(\n    '<SESSION_ID>' // sessionId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Getting Locale Info\nDESCRIPTION: Sets up an Appwrite client with endpoint, project ID, and session configuration, then uses the Locale service to fetch locale information. Requires the node-appwrite package and valid Appwrite project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/locale/get.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst locale = new sdk.Locale(client);\n\nconst result = await locale.get();\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Identities with Appwrite SDK\nDESCRIPTION: Initializes the Account API service and uses it to list all identities associated with the authenticated user. The listIdentities method accepts an optional queries parameter for filtering results.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/list-identities.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst account = new sdk.Account(client);\n\nconst result = await account.listIdentities(\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Boolean Attribute with Appwrite SDK for Node.js\nDESCRIPTION: This code initializes the Appwrite client with endpoint, project ID, and API key, then uses the Databases service to create a boolean attribute in a specified collection. The attribute is configured with required status, default value, and array settings.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-boolean-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createBooleanAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    false, // default (optional)\n    false // array (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating User Preferences in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with the necessary configuration and use the Account service to update user preferences. It sets the API endpoint, project ID, and user session, then calls the updatePrefs method.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-prefs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updatePrefs(\n    {} // prefs\n);\n```\n\n----------------------------------------\n\nTITLE: Fetching Queue Usage Dump via Health API\nDESCRIPTION: Creates a Health API instance and calls getQueueUsageDump() to retrieve queue usage information. The threshold parameter is optional and can be used to filter results.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-usage-dump.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst health = new sdk.Health(client);\n\nconst result = await health.getQueueUsageDump(\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating User Preferences in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with necessary credentials and use the Users service to update user preferences. It requires the Appwrite Node.js SDK and valid API credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/update-prefs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.updatePrefs(\n    '<USER_ID>', // userId\n    {} // prefs\n);\n```\n\n----------------------------------------\n\nTITLE: Setting up Appwrite SDK Client and Listing User Targets\nDESCRIPTION: Initializes the Appwrite Node.js SDK client with endpoint, project ID, and API key configuration. Then creates a Users service instance to fetch notification targets for a specific user. Supports optional query parameters for filtering results.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/list-targets.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.listTargets(\n    '<USER_ID>', // userId\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint configuration, project ID, and session authentication. Creates an account instance and updates the account status.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-status.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updateStatus();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client and Creating a Datetime Attribute\nDESCRIPTION: Sets up the Appwrite Node.js SDK client with the required configuration and creates a datetime attribute in a specified database collection. The snippet demonstrates how to authenticate with the Appwrite API, initialize the Databases service, and use the createDatetimeAttribute method.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-datetime-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createDatetimeAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    '', // default (optional)\n    false // array (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving MFA Recovery Codes\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project ID, and session credentials, then uses the Account service to fetch MFA recovery codes. This requires a valid project ID and user session for authentication.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/get-mfa-recovery-codes.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.getMfaRecoveryCodes();\n```\n\n----------------------------------------\n\nTITLE: Deleting a User Identity with Appwrite Node.js SDK\nDESCRIPTION: This code initializes the Appwrite SDK client with necessary configuration and uses the Account service to delete a user identity. It requires the Appwrite Node.js SDK package and a valid identity ID to function properly.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/delete-identity.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.deleteIdentity(\n    '<IDENTITY_ID>' // identityId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Integer Attribute in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with necessary credentials and update an integer attribute in a database collection. It requires the Appwrite SDK for Node.js and valid API credentials. The code sets up the client, creates a Databases instance, and calls the updateIntegerAttribute method with specified parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-integer-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.updateIntegerAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    null, // min\n    null, // max\n    null, // default\n    '' // newKey (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID and API key configuration. This is required before making any API calls.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-usage-dump.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Creating Email Attribute in Appwrite Database\nDESCRIPTION: Creates an email attribute in a specified database collection using the Appwrite Databases API. Configures the attribute with parameters for requirement status, default value, and array support.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-email-attribute.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createEmailAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    'email@example.com', // default (optional)\n    false // array (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Password Recovery Flow with Appwrite\nDESCRIPTION: Initiates a password recovery process by sending a recovery email to the specified address with a custom redirect URL.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-recovery.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst account = new sdk.Account(client);\n\nconst result = await account.createRecovery(\n    'email@example.com', // email\n    'https://example.com' // url\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Enum Attribute in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with project credentials and use the Databases service to update an enum attribute in a specific collection. It requires the Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-enum-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.updateEnumAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    [], // elements\n    false, // required\n    '<DEFAULT>', // default\n    '' // newKey (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Phone Verification with Node.js SDK\nDESCRIPTION: This snippet shows how to set up the Appwrite client with project credentials and update a user's phone verification. It initializes the SDK client, sets the endpoint, project ID, and session, then creates an Account instance to make the updatePhoneVerification API call with the required user ID and secret parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-phone-verification.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updatePhoneVerification(\n    '<USER_ID>', // userId\n    '<SECRET>' // secret\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-m-d5user.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client in Node.js\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID and API key configuration\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-failed-jobs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Retrieving Account Logs with Appwrite Node.js SDK\nDESCRIPTION: This code initializes the Appwrite SDK client, configures it with the appropriate endpoint, project ID, and session credentials, then creates an Account service instance to retrieve account activity logs. The optional queries parameter can be used to filter the returned logs.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/list-logs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.listLogs(\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating User Target in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client with project credentials and use the Users service to update a target for a specific user. It requires the Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/update-target.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.updateTarget(\n    '<USER_ID>', // userId\n    '<TARGET_ID>', // targetId\n    '<IDENTIFIER>', // identifier (optional)\n    '<PROVIDER_ID>', // providerId (optional)\n    '<NAME>' // name (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating a Function Build with Appwrite SDK for Node.js\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite SDK client with proper authentication credentials and use the Functions service to create a build. It requires setting up the client with an endpoint, project ID, and API key before calling the createBuild method with the necessary parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/create-build.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.createBuild(\n    '<FUNCTION_ID>', // functionId\n    '<DEPLOYMENT_ID>', // deploymentId\n    '<BUILD_ID>' // buildId (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client with Node.js SDK\nDESCRIPTION: Sets up the Appwrite client by configuring the endpoint, project ID, and API key required for authentication.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-j-w-t.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client in Node.js\nDESCRIPTION: Sets up the Appwrite client with endpoint, project ID, and API key configuration for Node.js applications.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-p-h-pass-user.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating MFA Authenticator\nDESCRIPTION: Demonstrates how to set up Appwrite SDK client with endpoint and project configuration, then create a TOTP-based MFA authenticator. The code initializes the client with required credentials and creates an account instance for authentication operations.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-mfa-authenticator.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createMfaAuthenticator(\n    sdk.AuthenticatorType.Totp // type\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving User Logs in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, set up authentication credentials, and use the Users service to retrieve logs for a specific user. It requires the Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/list-logs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.listLogs(\n    '<USER_ID>', // userId\n    [] // queries (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Generating MFA Recovery Codes with Appwrite Node.js SDK\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, configure it with the necessary credentials, and use the Account service to create MFA recovery codes. It requires the Appwrite Node.js SDK and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-mfa-recovery-codes.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createMfaRecoveryCodes();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client with Authentication\nDESCRIPTION: Sets up an Appwrite SDK client instance with endpoint, project ID and API key configuration. This is required before making any API calls to Appwrite services.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/get-mfa-recovery-codes.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: This snippet sets up the Appwrite SDK client with the API endpoint and project ID. It's a prerequisite for making any API calls to Appwrite services.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Creating Phone Verification\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and session configurations, then initializes the Account service to create a phone verification request. This code establishes connection to Appwrite services and triggers the phone verification process.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-phone-verification.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.createPhoneVerification();\n```\n\n----------------------------------------\n\nTITLE: Deleting User Session with Appwrite SDK\nDESCRIPTION: Demonstrates how to delete a specific user session using the Users service. Requires user ID and session ID as parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/delete-session.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst users = new sdk.Users(client);\n\nconst result = await users.deleteSession(\n    '<USER_ID>', // userId\n    '<SESSION_ID>' // sessionId\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Phone Session with Appwrite SDK for Node.js\nDESCRIPTION: This code initializes the Appwrite client with endpoint and project settings, then uses the Account service to update a phone session. It requires the Appwrite SDK for Node.js and appropriate user credentials. The function returns a promise with the result of the phone session update operation.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-phone-session.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updatePhoneSession(\n    '<USER_ID>', // userId\n    '<SECRET>' // secret\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID and API key configuration. This is the required initial setup before making any API calls.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-email-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-scrypt-user.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Creating User Account with Appwrite SDK in Node.js\nDESCRIPTION: This snippet demonstrates how to create a new user account using the Appwrite SDK. It requires the client to be initialized first and uses the Account class to make the API call.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst account = new sdk.Account(client);\n\nconst result = await account.create(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    '', // password\n    '<NAME>' // name (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Delete Function Variable using Appwrite Node.js SDK\nDESCRIPTION: Demonstrates initializing the Appwrite SDK client and using the Functions service to delete a function variable. Requires Appwrite project credentials including API endpoint, project ID, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/delete-variable.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.deleteVariable(\n    '<FUNCTION_ID>', // functionId\n    '<VARIABLE_ID>' // variableId\n);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Function with Appwrite Node.js SDK\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client with proper authentication credentials and delete a function using the Functions service. It requires setting up the endpoint, project ID, and API key before making the delete request with a function ID.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/delete.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.delete(\n    '<FUNCTION_ID>' // functionId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: This snippet initializes the Appwrite SDK client with the API endpoint, project ID, and API key. It sets up the necessary configuration for making API calls to Appwrite.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-mailgun-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client for Node.js\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-sms.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Listing Teams in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client, configure it with project settings, and use the Teams API to list teams. It demonstrates client initialization, authentication, and making an API call with optional parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/teams/list.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst teams = new sdk.Teams(client);\n\nconst result = await teams.list(\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Performing PubSub Health Check in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client with the necessary configurations and perform a health check on the PubSub service. It requires the Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-pub-sub.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getPubSub();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Deleting Database Index - Node.js\nDESCRIPTION: Sets up an Appwrite client with necessary credentials and deletes an index from a specified database collection. Requires Appwrite SDK for Node.js, project ID, API key, database ID, collection ID, and index key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/delete-index.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.deleteIndex(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '' // key\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration for authentication and API access.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-scrypt-modified-user.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client for Node.js\nDESCRIPTION: This snippet sets up the Appwrite SDK client with the necessary configuration including the API endpoint, project ID, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/get-variable.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Storage Bucket in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client for Node.js, configure it with necessary credentials, and use the Storage service to retrieve a specific bucket. It requires the Appwrite SDK for Node.js and valid Appwrite project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/storage/get-bucket.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst storage = new sdk.Storage(client);\n\nconst result = await storage.getBucket(\n    '<BUCKET_ID>' // bucketId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client for Node.js\nDESCRIPTION: Configures the Appwrite SDK client with endpoint, project ID, and API key credentials. Sets up basic authentication for API access.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/get-subscriber.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Session\nDESCRIPTION: Sets up the Appwrite client with required configuration and demonstrates how to update a user session. The code initializes the SDK client with endpoint, project ID, and session details, then uses the Account service to update a specific session.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-session.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n\nconst result = await account.updateSession(\n    '<SESSION_ID>' // sessionId\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Account Recovery with Appwrite SDK\nDESCRIPTION: Demonstrates how to update account recovery settings using the Appwrite SDK. Takes user ID, secret token, and new password as parameters to complete the recovery process.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-recovery.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = await account.updateRecovery(\n    '<USER_ID>', // userId\n    '<SECRET>', // secret\n    '' // password\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-fcm-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Performing Storage Health Check in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with project credentials and perform a health check on the storage service. It requires the Appwrite Node.js SDK and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-storage.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getStorage();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating User Labels\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project, and API key configuration, then uses the Users API to update labels for a specific user. The code demonstrates proper authentication setup and API interaction for user management.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/update-labels.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.updateLabels(\n    '<USER_ID>', // userId\n    [] // labels\n);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Subscriber Information using Messaging API\nDESCRIPTION: Demonstrates how to get subscriber details from a specific topic using the messaging module. Requires topic ID and subscriber ID parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/get-subscriber.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.getSubscriber(\n    '<TOPIC_ID>', // topicId\n    '<SUBSCRIBER_ID>' // subscriberId\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-url-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Checking Webhook Queue Health with Appwrite Node.js SDK\nDESCRIPTION: Creates a health service instance and calls the getQueueWebhooks method to check the health of the webhook queue. The optional threshold parameter can be used to specify a custom threshold value for the health check.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-webhooks.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst health = new sdk.Health(client);\n\nconst result = await health.getQueueWebhooks(\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Listing Continents in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, configure it with the necessary credentials, and use the Locale API to retrieve a list of continents. It requires the 'node-appwrite' package and valid Appwrite project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/locale/list-continents.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst locale = new sdk.Locale(client);\n\nconst result = await locale.listContinents();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating Phone Verification\nDESCRIPTION: Sets up the Appwrite SDK client with necessary credentials and makes an API call to update a user's phone verification status. Requires Appwrite project credentials including endpoint, project ID, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/update-phone-verification.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.updatePhoneVerification(\n    '<USER_ID>', // userId\n    false // phoneVerification\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Generating Browser Avatar in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client, set up authentication, and use the Avatars API to generate a browser avatar. It demonstrates setting the API endpoint, project ID, and user session, as well as specifying optional parameters for the avatar generation.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/avatars/get-browser.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst avatars = new sdk.Avatars(client);\n\nconst result = await avatars.getBrowser(\n    sdk.Browser.AvantBrowser, // code\n    0, // width (optional)\n    0, // height (optional)\n    0 // quality (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Fetching Cache Health in Node.js\nDESCRIPTION: This snippet demonstrates how to set up the Appwrite SDK client with necessary configurations and use the Health service to check the cache status. It requires the 'node-appwrite' package and valid Appwrite credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-cache.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getCache();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Performing Health Check in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite SDK client with the necessary configuration and then use the Health module to check the queue usage. It sets the API endpoint, project ID, and API key, then calls the getQueueUsage method.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-usage.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getQueueUsage(\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Generating Credit Card Avatar in Node.js\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, set up authentication, and use the Avatars service to generate a credit card avatar. It demonstrates setting the API endpoint, project ID, and user session, then calls the getCreditCard method with optional parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/avatars/get-credit-card.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst avatars = new sdk.Avatars(client);\n\nconst result = await avatars.getCreditCard(\n    sdk.CreditCard.AmericanExpress, // code\n    0, // width (optional)\n    0, // height (optional)\n    0 // quality (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing User Identities in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with necessary credentials and use the Users service to list identities. It demonstrates client configuration and API interaction.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/list-identities.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.listIdentities(\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client for Node.js\nDESCRIPTION: This snippet sets up the Appwrite SDK client with the required configurations. It sets the API endpoint, project ID, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-d-b.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client in Node.js\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID and API key configurations.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-telesign-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Creating Team Membership with Appwrite SDK for Node.js\nDESCRIPTION: Demonstrates how to create a new team membership using the Appwrite Teams API. It includes optional parameters for email, user ID, phone, URL, and name.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/teams/create-membership.md#2025-04-16_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst teams = new sdk.Teams(client);\n\nconst result = await teams.createMembership(\n    '<TEAM_ID>', // teamId\n    [], // roles\n    'email@example.com', // email (optional)\n    '<USER_ID>', // userId (optional)\n    '+12065550100', // phone (optional)\n    'https://example.com', // url (optional)\n    '<NAME>' // name (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/storage/update-bucket.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst storage = new sdk.Storage(client);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Checking Certificate Health in JavaScript\nDESCRIPTION: This code initializes the Appwrite Node.js SDK client with the required configuration parameters and performs a health check on certificates in the queue. It requires the Appwrite SDK package and valid API credentials to execute successfully.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-certificates.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getQueueCertificates(\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Updating MSG91 Provider with Appwrite Node.js SDK\nDESCRIPTION: This snippet initializes the Appwrite client, sets up the Messaging service, and updates a MSG91 provider. It demonstrates how to configure the client with endpoint, project ID, and API key, and then use the messaging.updateMsg91Provider method to update provider details.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-msg91provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.updateMsg91Provider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name (optional)\n    false, // enabled (optional)\n    '<TEMPLATE_ID>', // templateId (optional)\n    '<SENDER_ID>', // senderId (optional)\n    '<AUTH_KEY>' // authKey (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating User with Modified Scrypt Password\nDESCRIPTION: Creates a new user account using the Scrypt Modified password hashing algorithm. Requires user ID, email, password, and various salt and security parameters for password encryption.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/create-scrypt-modified-user.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst users = new sdk.Users(client);\n\nconst result = await users.createScryptModifiedUser(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    'password', // password\n    '<PASSWORD_SALT>', // passwordSalt\n    '<PASSWORD_SALT_SEPARATOR>', // passwordSaltSeparator\n    '<PASSWORD_SIGNER_KEY>', // passwordSignerKey\n    '<NAME>' // name (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: Sets up the Appwrite SDK client with necessary configuration including API endpoint, project ID, and session token. Creates an instance of the Account service for authentication operations.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/update-recovery.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst account = new sdk.Account(client);\n```\n\n----------------------------------------\n\nTITLE: Configuring Appwrite SDK Client in Node.js\nDESCRIPTION: Initializes the Appwrite SDK client with endpoint configuration, project ID, and API key. Creates a health check instance and performs a basic health check request to verify the connection.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.get();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: This snippet initializes the Appwrite SDK client with the necessary configurations. It sets the API endpoint, project ID, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/list-sessions.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Listing Messaging Topic Subscribers\nDESCRIPTION: Retrieves a list of subscribers for a specified topic ID. Supports optional query parameters for filtering and searching subscribers.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/list-subscribers.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = await messaging.listSubscribers(\n    '<TOPIC_ID>', // topicId\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client Connection in Node.js\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration. Creates a database instance for further operations.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-ip-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK and Querying Locale Codes in Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite SDK client with project credentials and make a request to list locale codes. It requires the 'node-appwrite' package and proper configuration of the API endpoint, project ID, and user session.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/locale/list-codes.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst locale = new sdk.Locale(client);\n\nconst result = await locale.listCodes();\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration. This is the required initialization step before performing any operations with Appwrite services.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-boolean-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Checking Messaging Queue Health with Appwrite Node.js SDK\nDESCRIPTION: Makes an API call to check the health of messaging queues in Appwrite, with an optional threshold parameter that can be used to set a custom threshold for health checks.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-messaging.md#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = await health.getQueueMessaging(\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: Creates and configures an Appwrite SDK client with endpoint, project ID, and API key for authentication. This is the required setup before making any API calls to Appwrite services.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-webhooks.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Querying Currencies with Node.js\nDESCRIPTION: This snippet shows how to set up the Appwrite client with authentication details and use the Locale API to retrieve a list of currencies. It requires the Appwrite SDK for Node.js and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/locale/list-currencies.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst locale = new sdk.Locale(client);\n\nconst result = await locale.listCurrencies();\n```\n\n----------------------------------------\n\nTITLE: Updating Email Attribute in Appwrite Database using Node.js SDK\nDESCRIPTION: This snippet shows how to initialize the Appwrite client with proper credentials and use the Databases service to update an email attribute in a collection. It configures the endpoint, project ID, and API key for authentication, then calls the updateEmailAttribute method with required parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-email-attribute.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.updateEmailAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    'email@example.com', // default\n    '' // newKey (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Database Relationship Attributes\nDESCRIPTION: Demonstrates how to update relationship attributes in an Appwrite database collection, including setting cascade deletion behavior and optional key renaming.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/update-relationship-attribute.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.updateRelationshipAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    sdk.RelationMutate.Cascade, // onDelete (optional)\n    '' // newKey (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: Sets up the Appwrite SDK client with the necessary configuration including endpoint, project ID, and API key.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-messaging.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Creating Twilio Messaging Provider\nDESCRIPTION: Configures a Twilio messaging provider with required credentials and settings. Includes provider ID, name, phone number, Twilio account SID, and auth token parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-twilio-provider.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createTwilioProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name\n    '+12065550100', // from (optional)\n    '<ACCOUNT_SID>', // accountSid (optional)\n    '<AUTH_TOKEN>', // authToken (optional)\n    false // enabled (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client in Node.js\nDESCRIPTION: Configures the Appwrite SDK client with endpoint, project ID, and session authentication settings.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/create-recovery.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Health Check\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project, and API key configuration, then performs a health check on the migrations queue. The code demonstrates client initialization and health monitoring functionality.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-migrations.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getQueueMigrations(\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Checking Failed Jobs with Appwrite Health API\nDESCRIPTION: Initializes the Health API service and queries for failed database jobs with optional threshold parameter\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-failed-jobs.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst health = new sdk.Health(client);\n\nconst result = await health.getFailedJobs(\n    sdk..V1Database, // name\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID and API key configuration. Creates a health service instance for monitoring.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-deletes.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst health = new sdk.Health(client);\n\nconst result = await health.getQueueDeletes(\n    null // threshold (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration. Creates a users instance and updates a user's status.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/users/update-status.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst users = new sdk.Users(client);\n\nconst result = await users.updateStatus(\n    '<USER_ID>', // userId\n    false // status\n);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Function Variable using Appwrite SDK for Node.js\nDESCRIPTION: This snippet demonstrates how to use the Functions API to retrieve a specific variable for a given function. It requires the function ID and variable ID as parameters.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/functions/get-variable.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst functions = new sdk.Functions(client);\n\nconst result = await functions.getVariable(\n    '<FUNCTION_ID>', // functionId\n    '<VARIABLE_ID>' // variableId\n);\n```\n\n----------------------------------------\n\nTITLE: Creating URL Attribute in Appwrite Database Collection\nDESCRIPTION: Creates a URL attribute in a specified database collection using the Appwrite Databases service. Parameters include database ID, collection ID, attribute key, required flag, default URL, and array flag.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-url-attribute.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst databases = new sdk.Databases(client);\n\nconst result = await databases.createUrlAttribute(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '', // key\n    false, // required\n    'https://example.com', // default (optional)\n    false // array (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configuration.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/update-sms.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client in Node.js\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and API key configurations.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/databases/create-index.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and session configuration for authentication.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/avatars/get-flag.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID, and session authentication. This is the required configuration before making any API calls to Appwrite services.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/account/list-identities.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client with Session Authentication\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID and session authentication settings\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/avatars/get-initials.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client with SDK\nDESCRIPTION: Sets up the Appwrite client by configuring endpoint, project ID, and API key credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-telesign-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Generating Avatar from Initials\nDESCRIPTION: Makes an API call to generate an avatar image using initials with optional parameters for name, width, height, and background color\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/avatars/get-initials.md#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = await avatars.getInitials(\n    '<NAME>', // name (optional)\n    0, // width (optional)\n    0, // height (optional)\n    '' // background (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK Client\nDESCRIPTION: Sets up the Appwrite SDK client with endpoint, project ID and API key configuration.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-sendgrid-provider.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n```\n\n----------------------------------------\n\nTITLE: Creating Health Service Instance in Appwrite Node.js SDK\nDESCRIPTION: Initializes a Health service instance using the configured Appwrite client to access health-related endpoints.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/health/get-queue-messaging.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst health = new sdk.Health(client);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite SDK Client and Updating Team Preferences\nDESCRIPTION: Initializes the Appwrite Node.js SDK client with endpoint, project ID, and session configuration, then uses the Teams API to update team preferences. Requires the Appwrite Node.js SDK package and valid credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/teams/update-prefs.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setSession(''); // The user session to authenticate with\n\nconst teams = new sdk.Teams(client);\n\nconst result = await teams.updatePrefs(\n    '<TEAM_ID>', // teamId\n    {} // prefs\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Node.js SDK with GraphQL\nDESCRIPTION: Sets up an Appwrite SDK client with endpoint, project ID, and API key configuration, then creates a GraphQL instance for making mutation queries. Requires the node-appwrite package and valid Appwrite credentials.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/graphql/mutation.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>') // Your project ID\n    .setKey('<YOUR_API_KEY>'); // Your secret API key\n\nconst graphql = new sdk.Graphql(client);\n\nconst result = await graphql.mutation(\n    {} // query\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Telesign Messaging Provider\nDESCRIPTION: Configures a Telesign messaging provider with specified credentials and settings. Includes provider ID, name, phone number, customer ID, and API key configuration.\nSOURCE: https://github.com/appwrite/sdk-for-node/blob/main/docs/examples/messaging/create-telesign-provider.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst messaging = new sdk.Messaging(client);\n\nconst result = await messaging.createTelesignProvider(\n    '<PROVIDER_ID>', // providerId\n    '<NAME>', // name\n    '+12065550100', // from (optional)\n    '<CUSTOMER_ID>', // customerId (optional)\n    '<API_KEY>', // apiKey (optional)\n    false // enabled (optional)\n);\n```"
  }
]
[
  {
    "owner": "phenom-films",
    "repo": "dayu_widgets",
    "content": "TITLE: Importing dayu_widgets in Python\nDESCRIPTION: This code snippet demonstrates how to import the dayu_widgets library into a Python script. This import statement is the prerequisite for using any of the UI components provided by the library.\nSOURCE: https://github.com/phenom-films/dayu_widgets/blob/master/docs/README.md#_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\nimport dayu_widgets\n```\n\n----------------------------------------\n\nTITLE: Import dayu_widgets in Python\nDESCRIPTION: This code snippet imports the dayu_widgets library, making its components available for use in a Python application. This is the first step in utilizing the library's functionality.\nSOURCE: https://github.com/phenom-films/dayu_widgets/blob/master/docs/zh-cn/README.md#_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\nimport dayu_widgets\n```\n\n----------------------------------------\n\nTITLE: Running Black Code Formatter via Poetry\nDESCRIPTION: This command runs the Black code formatter on the dayu_widgets directory to automatically format the Python code according to PEP 8 standards. Managed and executed through Poetry.\nSOURCE: https://github.com/phenom-films/dayu_widgets/blob/master/README.md#_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\npoetry run black dayu_widgets\n```\n\n----------------------------------------\n\nTITLE: Running isort for Import Sorting via Poetry\nDESCRIPTION: This command runs isort on the dayu_widgets directory to automatically sort Python imports alphabetically and by section. Managed and executed through Poetry.\nSOURCE: https://github.com/phenom-films/dayu_widgets/blob/master/README.md#_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\npoetry run isort dayu_widgets\n```\n\n----------------------------------------\n\nTITLE: Committing Changes with Commitizen via Poetry\nDESCRIPTION: This command uses Commitizen (cz) to create conventional commits, guiding the user through the commit message creation process. Managed and executed through Poetry.\nSOURCE: https://github.com/phenom-films/dayu_widgets/blob/master/README.md#_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\npoetry run cz commit\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with pytest via Poetry\nDESCRIPTION: This command executes the unit tests defined in the project using pytest, managed and executed through Poetry.\nSOURCE: https://github.com/phenom-films/dayu_widgets/blob/master/README.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\npoetry run pytest\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with Poetry\nDESCRIPTION: This command uses Poetry to install the dependencies defined in the project's pyproject.toml file.\nSOURCE: https://github.com/phenom-films/dayu_widgets/blob/master/README.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npoetry install\n```\n\n----------------------------------------\n\nTITLE: Installing Poetry\nDESCRIPTION: This command installs the Poetry dependency management tool, which is used for managing project dependencies.\nSOURCE: https://github.com/phenom-films/dayu_widgets/blob/master/README.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npip install poetry\n```"
  }
]
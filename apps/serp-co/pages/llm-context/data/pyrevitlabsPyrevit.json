[
  {
    "owner": "pyrevitlabs",
    "repo": "pyrevit",
    "content": "TITLE: Cloning pyRevit repository using pyRevit CLI\nDESCRIPTION: Example command for cloning the pyRevit repository using the pyRevit CLI, specifying the clone name, source URL, destination directory, and branch.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/dev-guide.md#2025-04-17_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npyrevit clone dev --source https:/gitlab.com/sanzoghenzo/pyrevit.git --dest c:\\pyrevit --branch=develop\n```\n\n----------------------------------------\n\nTITLE: Building pyRevit CLI from source\nDESCRIPTION: Commands to build the pyRevit CLI from source, copy necessary files, and attach the clone to the default Revit installation.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/dev-guide.md#2025-04-17_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\npipenv run pyrevit build labs\ncopy .\\release\\.pyrevitargs .\n.\\bin\\pyrevit.exe attach dev default --installed\n```\n\n----------------------------------------\n\nTITLE: Building pyRevit project in Debug mode\nDESCRIPTION: Command to build the pyRevit project in Debug mode using Pipenv for debugging purposes.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/dev-guide.md#2025-04-17_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\npipenv run pyrevit build products Debug\n```\n\n----------------------------------------\n\nTITLE: Adding pyRevit clone using pyRevit CLI\nDESCRIPTION: Command to add a clone of the git directory using pyRevit CLI for testing changes in Revit.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/dev-guide.md#2025-04-17_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\npyrevit clones add dev <path-to-your-git-directory>\n```\n\n----------------------------------------\n\nTITLE: Attaching pyRevit clone to default Revit installation\nDESCRIPTION: Command to attach the pyRevit clone to the default Revit installation for testing.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/dev-guide.md#2025-04-17_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\npyrevit attach dev default --installed\n```\n\n----------------------------------------\n\nTITLE: Installing Pipenv using pip\nDESCRIPTION: Command to install Pipenv, a tool for managing Python environments and dependencies, using pip.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/dev-guide.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npip install pipenv\n```\n\n----------------------------------------\n\nTITLE: Initializing Pipenv environment\nDESCRIPTION: Command to create a Python environment using Pipenv for running toolchain scripts to build pyRevit components.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/dev-guide.md#2025-04-17_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\npipenv install\n```\n\n----------------------------------------\n\nTITLE: Cloning forked pyRevit repository using Git\nDESCRIPTION: Git command to clone a forked pyRevit repository to the local machine.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/dev-guide.md#2025-04-17_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit clone <your-fork-url>\n```\n\n----------------------------------------\n\nTITLE: Documenting pyRevit CLI Usage in Plain Text\nDESCRIPTION: This code snippet outlines the various commands and options available in the pyRevit command-line interface. It includes usage patterns for different operations such as cloning, attaching, managing extensions, and configuring settings.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/dev/pyRevitLabs/pyRevitCLI/Resources/UsagePatterns.txt#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUsage:\n\tpyrevit (-h | --help)\n\tpyrevit (-V | --version)\n\tpyrevit --usage\n\tpyrevit (wiki | blog | docs | source | youtube | support)\n\tpyrevit env [--json] [(-h | --help)] [--log=<log_file>]\n\tpyrevit update [--help] [--log=<log_file>]\n\tpyrevit clone (-h | --help)\n\tpyrevit clone <clone_name> <deployment_name> [--dest=<dest_path>] [--branch=<branch_name>] [--log=<log_file>]\n\tpyrevit clone <clone_name> --image=<image_url> [--dest=<dest_path>] [--log=<log_file>]\n\tpyrevit clone <clone_name> [--dest=<dest_path>] [--source=<repo_url>] [--branch=<branch_name>] [--log=<log_file>] [(--username=<username> --password=<password> | --token=<auth_token>)]\n\tpyrevit clones [(-h | --help)]\n\tpyrevit clones (info | open) <clone_name>\n\tpyrevit clones add this <clone_name> [--force] [--log=<log_file>]\n\tpyrevit clones add <clone_name> <clone_path> [--force] [--log=<log_file>]\n\tpyrevit clones forget (--all | <clone_name>) [--log=<log_file>]\n\tpyrevit clones rename <clone_name> <clone_new_name> [--log=<log_file>]\n\tpyrevit clones delete [(--all | <clone_name>)] [--clearconfigs] [--log=<log_file>]\n\tpyrevit clones branch <clone_name> [<branch_name>] [--log=<log_file>]\n\tpyrevit clones version <clone_name> [<tag_name>] [--log=<log_file>]\n\tpyrevit clones commit <clone_name> [<commit_hash>] [--log=<log_file>]\n\tpyrevit clones origin <clone_name> --reset [--log=<log_file>]\n\tpyrevit clones origin <clone_name> [<origin_url>] [--log=<log_file>]\n\tpyrevit clones update (--all | <clone_name>) [--log=<log_file>] [(--username=<username> --password=<password> | --token=<auth_token>)]\n\tpyrevit clones deployments <clone_name>\n\tpyrevit clones engines <clone_name>\n\tpyrevit attach (-h | --help)\n\tpyrevit attach <clone_name> (default | <engine_version>) (<revit_year> | --installed | --attached) [--allusers] [--log=<log_file>]\n\tpyrevit attached [<revit_year>] [(-h | --help)]\n\tpyrevit switch (-h | --help)\n\tpyrevit switch <clone_name> [<revit_year>]\n\tpyrevit detach (-h | --help)\n\tpyrevit detach (--all | <revit_year>) [--log=<log_file>]\n\tpyrevit extend (-h | --help)\n\tpyrevit extend <extension_name> [--dest=<dest_path>] [--branch=<branch_name>] [--log=<log_file>]\n\tpyrevit extend (ui | lib) <extension_name> <repo_url> [--dest=<dest_path>] [--branch=<branch_name>] [--log=<log_file>] [(--username=<username> --password=<password> | --token=<auth_token>)]\n\tpyrevit extensions [(-h | --help)]\n\tpyrevit extensions search <search_pattern>\n\tpyrevit extensions (info | help ) <extension_name>\n\tpyrevit extensions open <extension_name>\n\tpyrevit extensions open <clone_name> <extension_name>\n\tpyrevit extensions delete <extension_name> [--log=<log_file>]\n\tpyrevit extensions origin <extension_name> --reset [--log=<log_file>]\n\tpyrevit extensions origin <extension_name> [<origin_url>] [--log=<log_file>]\n\tpyrevit extensions paths [(-h | --help)]\n\tpyrevit extensions paths forget --all [--log=<log_file>]\n\tpyrevit extensions paths (add | forget) <extensions_path> [--log=<log_file>]\n\tpyrevit extensions (enable | disable) <extension_name> [--log=<log_file>]\n\tpyrevit extensions (enable | disable) <clone_name> <extension_name> [--log=<log_file>]\n\tpyrevit extensions sources [(-h | --help)]\n\tpyrevit extensions sources forget --all [--log=<log_file>]\n\tpyrevit extensions sources (add | forget) <source_json_or_url> [--log=<log_file>]\n\tpyrevit extensions update (--all | <extension_name>) [--log=<log_file>] [(--username=<username> --password=<password> | --token=<auth_token>)]\n\tpyrevit releases (-h | --help)\n\tpyrevit releases [--pre] [--notes]\n\tpyrevit releases latest [--pre] [--notes]\n\tpyrevit releases <search_pattern> [--pre] [--notes]\n\tpyrevit releases open latest [--pre]\n\tpyrevit releases open <search_pattern> [--pre]\n\tpyrevit releases download (installer | archive) <search_pattern> [--dest=<dest_path>] [--pre]\n\tpyrevit revits\n\tpyrevit revits (-h | --help)\n\tpyrevit revits [--installed] [--log=<log_file>]\n\tpyrevit revits --supported [--csv=<output_file>]\n\tpyrevit revits killall [<revit_year>] [--log=<log_file>]\n\tpyrevit revits fileinfo <file_or_dir_path> [--csv=<output_file>] [--rvt] [--rte] [--rfa] [--rft]\n\tpyrevit run (-h | --help)\n\tpyrevit run commands\n\tpyrevit run <script_or_command_name> [--revit=<revit_year>] [--purge] [--allowdialogs] [--import=<import_path>]\n\tpyrevit run <script_or_command_name> --models=<model_list_file> --revit=<revit_year> [--purge] [--allowdialogs] [--import=<import_path>]\n\tpyrevit run <script_or_command_name> <model_file> [--revit=<revit_year>] [--purge] [--allowdialogs] [--import=<import_path>]\n\tpyrevit caches (-h | --help)\n\tpyrevit caches [bim360] clear (--all | <revit_year>) [--log=<log_file>]\n\tpyrevit config (-h | --help)\n\tpyrevit config --from=<template_config_path> [--log=<log_file>]\n\tpyrevit configs (-h | --help)\n\tpyrevit configs bincache [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs checkupdates [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs autoupdate [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs rocketmode [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs logs [(none | verbose | debug)] [--log=<log_file>]\n\tpyrevit configs filelogging [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs startuptimeout [<timeout>] [--log=<log_file>]\n\tpyrevit configs loadbeta [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs cpyversion [<cpy_version>] [--log=<log_file>]\n\tpyrevit configs usercanupdate [(yes | no)] [--log=<log_file>]\n\tpyrevit configs usercanextend [(yes | no)] [--log=<log_file>]\n\tpyrevit configs usercanconfig [(yes | no)] [--log=<log_file>]\n\tpyrevit configs colordocs [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs tooltipdebuginfo [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs routes [(-h | --help)]\n\tpyrevit configs routes [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs routes port [<port_number>] [--log=<log_file>]\n\tpyrevit configs routes coreapi [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs telemetry [(-h | --help)]\n\tpyrevit configs telemetry [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs telemetry utc [(yes | no)] [--log=<log_file>]\n\tpyrevit configs telemetry (file | server) [<dest_path>] [--log=<log_file>]\n\tpyrevit configs telemetry hooks [(yes | no)] [--log=<log_file>]\n\tpyrevit configs apptelemetry [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs apptelemetry flags [<flags>] [--log=<log_file>]\n\tpyrevit configs apptelemetry server [<server_path>] [--log=<log_file>]\n\tpyrevit configs outputcss [<css_path>] [--log=<log_file>]\n\tpyrevit configs seed [--lock] [--log=<log_file>]\n\tpyrevit configs <option_path> [(enable | disable)] [--log=<log_file>]\n\tpyrevit configs <option_path> [<option_value>] [--log=<log_file>]\n    pyrevit doctor (-h | --help)\n    pyrevit doctor [--list]\n    pyrevit doctor <doctor_command> [--dryrun]\n```\n\n----------------------------------------\n\nTITLE: Initializing and updating Git submodules\nDESCRIPTION: Git command to initialize and fetch submodules used in the pyRevit repository for dependencies.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/dev-guide.md#2025-04-17_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ngit submodule update --init --recursive\n```\n\n----------------------------------------\n\nTITLE: Repository Folder Structure in Markdown\nDESCRIPTION: Markdown-formatted list detailing the main directories in the pyRevit repository and their purposes. Includes descriptions for binary files, C# code, documentation, extensions, libraries, and other supporting assets.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/repo-organization.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Repository organization\n\nThe pyRevit repository is organized in the following folders:\n\n- `bin` contains the binaries (dll and other support files) for pyRevit; usually a source repository doesn't have these, but it was made like this to be able to switch pyRevit versions using clones. This may change in the future and we could get rid of most content of this folder. Note that in this folder there also are the python envrionments  (for example the CPython dlls and core packages).\n- `dev` is where the c# code resides.\n- `docs` is for the automatic generation of the [documentation website](https://docs.pyrevitlabs.io/)\n- `extensions` holds the various pyRevit extensions; the pyRevitCore.extension is the one that build the `pyRevit` ribbon tab, the others can be enabled via the Extension button inside pyRevit itself. `pyRevitDevTools` is quite handy to run tests and check if pyRevit (and the modifications you'll do) is running fine.\n- `extras` are… extra files that can come in handy (icons and the dark mode generator are there to this date).\n- `licenses` contains all the licenses of the included third party projects.\n- `pyrevitlib` contains pyRevit and other related project's python libraries. It is usually the library that gets imported in the user scripts to ease the Revit API development.\n- `release` contains static assets needed to build the final product (pyrevit and pyrevit cli installers).\n- `site-packages` is the collection of third-party python packaces that are made available by pyRevit to the user. Given that the main python engine is IronPython 2.7.12, packages in that folder needs to be compatible with it.\n- `static` are assets for the website, youtube channels and so on, you can ignore it.\n```\n\n----------------------------------------\n\nTITLE: Installing pyRevit CLI using MSI\nDESCRIPTION: Command to install pyRevit CLI using the signed MSI package with verbose logging\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/release/README.md#2025-04-17_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nmsiexec /i \"dist\\pyRevit_CLI_*_signed.msi\" /l*v \"dist\\log.txt\"\n```\n\n----------------------------------------\n\nTITLE: Building MSI Installer using MSBuild\nDESCRIPTION: Command to build the MSI installer package from the WiX project file\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/release/README.md#2025-04-17_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nmsbuild .\\release\\pyrevit-cli.wixproj\n```\n\n----------------------------------------\n\nTITLE: Adding upstream remote to Git repository\nDESCRIPTION: Git command to add the original pyrevitlabs repository as an upstream remote for syncing the forked repository.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/dev-guide.md#2025-04-17_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ngit remote add upstream https://github.com/pyrevitlabs/pyrevit.git\n```\n\n----------------------------------------\n\nTITLE: Checking out the develop branch in Git\nDESCRIPTION: Git command to switch to the develop branch, where active development takes place in the pyRevit project.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/dev-guide.md#2025-04-17_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout develop\n```\n\n----------------------------------------\n\nTITLE: Changing directory to pyRevit folder\nDESCRIPTION: Shell command to enter the pyRevit directory after cloning the repository.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/docs/dev-guide.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncd pyrevit\n```\n\n----------------------------------------\n\nTITLE: Adding External Libraries as Git Submodules to pyRevit\nDESCRIPTION: These commands add three external libraries (Newtonsoft.Json, NLog, and MahApps.Metro) as git submodules to the pyRevit project. Each command specifies the repository URL, targets the 'pyrevit-main' branch, and sets the appropriate destination path within the dev/modules directory.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/dev/modules/README.md#2025-04-17_snippet_0\n\nLANGUAGE: git\nCODE:\n```\ngit submodule add -b pyrevit-main https://github.com/pyrevitlabs/Newtonsoft.Json.git dev/modules/pyRevitLabs.Newtonsoft.Json\ngit submodule add -b pyrevit-main https://github.com/pyrevitlabs/NLog.git dev/modules/pyRevitLabs.NLog\ngit submodule add -b pyrevit-main https://github.com/pyrevitlabs/MahApps.Metro.git dev/modules/pyRevitLabs.MahApps.Metro\n```\n\n----------------------------------------\n\nTITLE: Generating SHA256 Checksum for PyRevit Installer\nDESCRIPTION: Command to generate a SHA256 checksum for the new PyRevit installer. The checksum is used to verify file integrity in the Chocolatey package.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/release/choco/README.md#2025-04-17_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nchecksum -t sha256 -f ./new/installer\n```\n\n----------------------------------------\n\nTITLE: Setting Chocolatey API Key and Package Name\nDESCRIPTION: Bash commands to export the Chocolatey API key and package name as environment variables. These are used by the deployment script to authenticate and specify which package to publish.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/release/choco/README.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport chocoapikey=\"your-api-key-here\"\nexport chocopkg=\"pyrevit-cli.0.9.0.0.nupkg\"\n```\n\n----------------------------------------\n\nTITLE: Uninstalling pyRevit CLI\nDESCRIPTION: Command to uninstall pyRevit CLI using the product ID code from pyrevit-cli.props\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/release/README.md#2025-04-17_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nmsiexec.exe /x \"{ProductIdCode}\"\n```\n\n----------------------------------------\n\nTITLE: Force Uninstall Registry Path\nDESCRIPTION: Registry path where pyRevit CLI product entry can be manually removed for force uninstallation\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/release/README.md#2025-04-17_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Installer\\Products\\\n```\n\n----------------------------------------\n\nTITLE: Markdown Security Policy Documentation\nDESCRIPTION: Markdown formatted security policy document that provides guidelines for reporting security vulnerabilities in pyRevit, including contact information and required information for vulnerability reports.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/SECURITY.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Security Policy\n\n> Note that the most up to date code is located in the develop branch. Every 6 months to 12 months, the develop branch is merged to the master branch and new releases are integrated.\n\n## Reporting a Vulnerability\n\n**Please do not report security vulnerabilities through public pyRevit GitHub issues, discussions, or pull requests.**\n\nInstead, please send an email to eirannejad+pyrevitsecurity[@]gmail.com .\n\nPlease include as much of the information listed below as you can to help us better understand and resolve the issue:\n\n- The type of issue (e.g., buffer overflow, SQL injection, or cross-site scripting)\n- Full paths of source file(s) related to the manifestation of the issue\n- The location of the affected source code (tag/branch/commit or direct URL)\n- Any special configuration required to reproduce the issue\n- Step-by-step instructions to reproduce the issue\n- Proof-of-concept or exploit code (if possible)\n- Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n```\n\n----------------------------------------\n\nTITLE: Markdown Link to pyRevit Contribution Guidelines\nDESCRIPTION: A markdown formatted link pointing to the Contributing to pyRevit Source documentation on the official pyRevit Wiki.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/CONTRIBUTING.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[See Contributing to pyRevit Source on pyRevit Wiki](https://pyrevitlabs.notion.site/Contributing-to-pyRevit-Source-6d25a5ac62c44bd9a0e9aefb8debefa2?pvs=4)\n```\n\n----------------------------------------\n\nTITLE: WebSocket Protocol Handshake Response Headers in HTTP\nDESCRIPTION: These headers represent a server's response to a WebSocket upgrade request. The server acknowledges the upgrade from HTTP to WebSocket protocol with a 101 status code. The Sec-WebSocket-Accept header contains a hash that confirms the server received the client's request.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/site-packages/websocket/tests/data/header01.txt#2025-04-17_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 101 WebSocket Protocol Handshake\nConnection: Upgrade \nUpgrade: WebSocket\nSec-WebSocket-Accept: Kxep+hNu9n51529fGidYu7a3wO0=\nsome_header: something\n```\n\n----------------------------------------\n\nTITLE: WebSocket Protocol Handshake Response in HTTP/1.1\nDESCRIPTION: HTTP response headers for upgrading a connection to WebSocket protocol. Includes mandatory headers like Connection upgrade, WebSocket protocol specification, and the security acceptance token required for establishing WebSocket connections.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/site-packages/websocket/tests/data/header02.txt#2025-04-17_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 101 WebSocket Protocol Handshake\nConnection: Upgrade\nUpgrade WebSocket\nSec-WebSocket-Accept: Kxep+hNu9n51529fGidYu7a3wO0=\nsome_header: something\n```\n\n----------------------------------------\n\nTITLE: Defining pyRevit Version Number as 0.8\nDESCRIPTION: This is a plain version number specification, indicating that the pyRevit framework is at version 0.8. Version numbers are typically used for tracking changes, ensuring compatibility, and managing dependencies.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/site-packages/importlib_resources/version.txt#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n0.8\n```\n\n----------------------------------------\n\nTITLE: Representing Revit Element Hierarchy in Plain Text\nDESCRIPTION: A structured text representation showing a hierarchy of Revit elements. The structure shows a project file containing an RVT link, which in turn contains a rectangular mullion element. Each level uses + and - markers to indicate beginning and end of elements.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/extensions/pyRevitDevTools.extension/pyRevitDev.tab/Developer Examples.panel/Inspect IExporter.pushbutton/example.txt#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n      + element begin\n      | id=2633 name=Project1.rvt : 1 : location <Not Shared> type=RVT Links\n        + link begin\n        | RNT_RvtLink\n          + element begin\n          | id=1679 name=Rectangular Mullion type=?\n          - element end\n        - link end\n      - element end\n    - view end\n  - finish\n```\n\n----------------------------------------\n\nTITLE: Exporting Revit Model Structure in Plaintext\nDESCRIPTION: This snippet shows the hierarchical structure of a Revit model export. It includes elements like viewports, levels, walls, and custom objects, along with their materials and geometric details.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/extensions/pyRevitDevTools.extension/pyRevitDev.tab/Developer Examples.panel/Inspect IExporter.pushbutton/example.txt#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n+ start\n  + view begin\n  | RNT_Viewport\n  | My Export View\n    + element begin\n    | id=1610 name=Level 1 type=Levels\n    - element end\n    + element begin\n    | id=2486 name={3D} type=Cameras\n    - element end\n    + element begin\n    | id=2506 name=Wall 1 type=Walls\n      + material\n      | RNT_Material\n      - material\n      + face begin\n      | RNT_FaceGroup\n        + polymesh\n        - polymesh\n      - face end\n      + material\n      | RNT_Material\n      - material\n      + face begin\n      | RNT_FaceGroup\n        + polymesh\n        - polymesh\n      - face end\n      + material\n      | RNT_Material\n      - material\n      + face begin\n      | RNT_FaceGroup\n        + polymesh\n        - polymesh\n      - face end\n      + material\n      | RNT_Material\n      - material\n      + face begin\n      | RNT_FaceGroup\n        + polymesh\n        - polymesh\n      - face end\n      + material\n      | RNT_Material\n      - material\n      + face begin\n      | RNT_FaceGroup\n        + polymesh\n        - polymesh\n      - face end\n      + material\n      | RNT_Material\n      - material\n      + face begin\n      | RNT_FaceGroup\n        + polymesh\n        - polymesh\n      - face end\n    - element end\n    + element begin\n    | id=2580 name=Custom 3d View type=Cameras\n    - element end\n    + element begin\n    | id=2633 name=Project1.rvt : 1 : location <Not Shared> type=RVT Links\n      + link begin\n      | RNT_RvtLink\n        + element begin\n        | id=1679 name=Rectangular Mullion type=?\n        - element end\n        + element begin\n        | id=2481 name=Analytical Surface - Sliding Doors type=?\n          + material\n          | RNT_Material\n          - material\n          + face begin\n          | RNT_FaceGroup\n            + polymesh\n            - polymesh\n          - face end\n          + material\n          | RNT_Material\n          - material\n          + face begin\n          | RNT_FaceGroup\n            + polymesh\n            - polymesh\n          - face end\n          + material\n          | RNT_Material\n          - material\n          + face begin\n          | RNT_FaceGroup\n            + polymesh\n            - polymesh\n          - face end\n          + material\n          | RNT_Material\n          - material\n          + face begin\n          | RNT_FaceGroup\n            + polymesh\n            - polymesh\n          - face end\n          + material\n          | RNT_Material\n          - material\n          + face begin\n          | RNT_FaceGroup\n            + polymesh\n            - polymesh\n          - face end\n          + material\n          | RNT_Material\n          - material\n          + face begin\n          | RNT_FaceGroup\n            + polymesh\n            - polymesh\n          - face end\n        - element end\n      - link end\n    - element end\n    + element begin\n    | id=3284 name=24\" type=Casework\n      + instance begin\n      | RNT_Instance\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n        + material\n        | RNT_Material\n        - material\n        + face begin\n        | RNT_FaceGroup\n          + polymesh\n          - polymesh\n        - face end\n      - instance end\n    - element end\n    + element begin\n    | id=1610 name=Level 1 type=Levels\n    - element end\n    + element begin\n    | id=2486 name={3D} type=Cameras\n    - element end\n    + element begin\n    | id=2580 name=Custom 3d View type=Cameras\n    - element end\n```\n\n----------------------------------------\n\nTITLE: Defining pyRevit Logo and Description SVG\nDESCRIPTION: This SVG code defines the pyRevit logo and descriptive text. It includes vector paths for the logo graphics, text elements, and gradient definitions for coloring.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/README.md#2025-04-17_snippet_0\n\nLANGUAGE: SVG\nCODE:\n```\n<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 734 219\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" xmlns:serif=\"http://www.serif.com/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;\">\n    <g transform=\"matrix(1.11373,0,0,1,0,0)\">\n        <rect x=\"0\" y=\"0\" width=\"658.925\" height=\"218.392\" style=\"fill:none;\"/>\n        <clipPath id=\"_clip1\">\n            <rect x=\"0\" y=\"0\" width=\"658.925\" height=\"218.392\"/>\n        </clipPath>\n        <g clip-path=\"url(#_clip1)\">\n            <!-- Logo vector paths and text elements omitted for brevity -->\n        </g>\n    </g>\n    <defs>\n        <!-- Gradient definitions omitted for brevity -->\n    </defs>\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Sample GPL License Notice for Source Files\nDESCRIPTION: A template for the license notice that should be attached to the start of each source file in a GPL-licensed program. It includes placeholders for the program name, year, and author information.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/LICENSE.txt#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n{one line to give the program's name and a brief idea of what it does.}\nCopyright (C) {year}  {name of author}\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n```\n\n----------------------------------------\n\nTITLE: Terminal Interaction Copyright Notice for GPL Programs\nDESCRIPTION: A sample notice that interactive programs should display at startup, informing users of the copyright, warranty disclaimer, and redistribution conditions. Includes placeholders for project name, year, and author information.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/LICENSE.txt#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n{project}  Copyright (C) {year}  {fullname}\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.\n```\n\n----------------------------------------\n\nTITLE: GPL Copyright Notice Template for Source Files\nDESCRIPTION: A template for adding the required GPL copyright notice to source files. It includes placeholders for program name, copyright year, and author name, along with standard GPL permissions and warranty disclaimers.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/licenses/PYPI_ENUM_LICENSE.txt#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n{one line to give the program's name and a brief idea of what it does.}\nCopyright (C) {year}  {name of author}\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n```\n\n----------------------------------------\n\nTITLE: GPL Terminal Program Notice Template\nDESCRIPTION: A template for displaying GPL-related warranty and redistribution information when a program starts in terminal interactive mode. It includes placeholders for project name, year, and author's full name.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/licenses/PYPI_ENUM_LICENSE.txt#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n{project}  Copyright (C) {year}  {fullname}\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.\n```\n\n----------------------------------------\n\nTITLE: OpenSSL License Declaration and Terms\nDESCRIPTION: The official OpenSSL license text that governs the use, modification, and distribution of the OpenSSL toolkit. Includes requirements for copyright notice retention, attribution, and disclaimers of warranties.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/licenses/PYTHON_EMBED_LICENSE_38.txt#2025-04-17_snippet_0\n\nLANGUAGE: c\nCODE:\n```\n/* ====================================================================\n * Copyright (c) 1998-2019 The OpenSSL Project.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. All advertising materials mentioning features or use of this\n *    software must display the following acknowledgment:\n *    \"This product includes software developed by the OpenSSL Project\n *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)\"\n *\n * 4. The names \"OpenSSL Toolkit\" and \"OpenSSL Project\" must not be used to\n *    endorse or promote products derived from this software without\n *    prior written permission. For written permission, please contact\n *    openssl-core@openssl.org.\n *\n * 5. Products derived from this software may not be called \"OpenSSL\"\n *    nor may \"OpenSSL\" appear in their names without prior written\n *    permission of the OpenSSL Project.\n *\n * 6. Redistributions of any form whatsoever must retain the following\n *    acknowledgment:\n *    \"This product includes software developed by the OpenSSL Project\n *    for use in the OpenSSL Toolkit (http://www.openssl.org/)\"\n *\n * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY\n * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n * OF THE POSSIBILITY OF SUCH DAMAGE.\n * ====================================================================\n *\n * This product includes cryptographic software written by Eric Young\n * (eay@cryptsoft.com).  This product includes software written by Tim\n * Hudson (tjh@cryptsoft.com).\n *\n */\n```\n\n----------------------------------------\n\nTITLE: Original SSLeay License Declaration\nDESCRIPTION: The beginning of the SSLeay license text written by Eric Young, which applies to the cryptographic software included in OpenSSL. This snippet shows the copyright notice and opening statements of the license.\nSOURCE: https://github.com/pyrevitlabs/pyRevit/blob/develop/licenses/PYTHON_EMBED_LICENSE_38.txt#2025-04-17_snippet_1\n\nLANGUAGE: c\nCODE:\n```\n/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)\n * All rights reserved.\n *\n * This package is an SSL implementation written\n * by Eric Young (eay@cryptsoft.com).\n * The implementation was written so as to conform with Netscapes SSL.\n *\n * This library is free for commercial and non-commercial use as long as\n * the following conditions are aheared to.  The following conditions\n * apply to all code found in this distribution, be it the RC4, RSA,\n * lhash, DES, etc., code; not just the SSL code.  The SSL documentation\n```"
  }
]
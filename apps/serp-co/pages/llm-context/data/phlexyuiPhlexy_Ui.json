[
  {
    "owner": "phlexyui",
    "repo": "phlexy_ui",
    "content": "TITLE: PhlexyUI Card Component Example\nDESCRIPTION: Complete example showing how to use PhlexyUI Card component with nested elements\nSOURCE: https://github.com/PhlexyUI/phlexy_ui/blob/main/README.md#2025-04-06_snippet_6\n\nLANGUAGE: ruby\nCODE:\n```\nCard :base_100 do |card|\n  figure do\n    img(src:)\n  end\n  card.body do\n    card.title do\n      \"Shoes!\"\n    end\n    p do\n      \"If a dog chews shoes whose shoes does he choose?\"\n    end\n    card.actions class: \"justify-end\" do\n      Button :primary do\n        \"Buy Now\"\n      end\n    end\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Installing PhlexyUI Ruby Gem\nDESCRIPTION: Command to add PhlexyUI gem to a Rails application's Gemfile\nSOURCE: https://github.com/PhlexyUI/phlexy_ui/blob/main/README.md#2025-04-06_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nbundle add phlexy_ui\n```\n\n----------------------------------------\n\nTITLE: Including PhlexyUI in Application Component\nDESCRIPTION: Shows how to include PhlexyUI module in ApplicationComponent for short-form syntax usage\nSOURCE: https://github.com/PhlexyUI/phlexy_ui/blob/main/README.md#2025-04-06_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nclass ApplicationComponent < Phlex::HTML\n  include PhlexyUI\nend\n```\n\n----------------------------------------\n\nTITLE: Using PhlexyUI Button Component - Short Form\nDESCRIPTION: Example of using PhlexyUI Button component with short-form syntax after including the module\nSOURCE: https://github.com/PhlexyUI/phlexy_ui/blob/main/README.md#2025-04-06_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nclass SomeView < ApplicationView\n  def view_template\n    Button :primary do\n      \"Hello, world!\"\n    end\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Using PhlexyUI Button Component - Namespaced\nDESCRIPTION: Example of using PhlexyUI Button component with fully qualified namespace\nSOURCE: https://github.com/PhlexyUI/phlexy_ui/blob/main/README.md#2025-04-06_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nclass SomeView < ApplicationView\n  def view_template\n    PhlexyUI::Button :primary do\n      \"Hello, world!\"\n    end\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring TailwindCSS for PhlexyUI\nDESCRIPTION: JavaScript configuration to include PhlexyUI styles in TailwindCSS build process\nSOURCE: https://github.com/PhlexyUI/phlexy_ui/blob/main/README.md#2025-04-06_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst execSync = require(\"child_process\").execSync;\nconst outputPhlexyUI = execSync(\"bundle show phlexy_ui\", { encoding: \"utf-8\" });\nconst phlexyUIPath = outputPhlexyUI.trim() + \"/**/*.rb\";\nmodule.exports = {\n  content: [\n    // ... other paths\n    phlexyUIPath,\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring TailwindCSS for Ruby Files\nDESCRIPTION: TailwindCSS configuration to detect classes in Ruby view files\nSOURCE: https://github.com/PhlexyUI/phlexy_ui/blob/main/README.md#2025-04-06_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  content: [\n    // ... other paths\n    //\n    // Note the \"rb\" extension at the end\n    \"./app/views/**/*.{erb,haml,html,slim,rb}\",\n  ],\n};\n```"
  }
]
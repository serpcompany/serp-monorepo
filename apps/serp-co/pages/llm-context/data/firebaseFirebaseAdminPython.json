[
  {
    "owner": "firebase",
    "repo": "firebase-admin-python",
    "content": "TITLE: Installing Firebase Admin Python SDK using pip\nDESCRIPTION: This command installs the Firebase Admin Python SDK using pip, the Python package installer. It's the recommended method for adding the SDK to a Python project.\nSOURCE: https://github.com/firebase/firebase-admin-python/blob/master/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install firebase-admin\n```\n\n----------------------------------------\n\nTITLE: Setting Up Firebase Admin Python SDK Development Environment\nDESCRIPTION: Commands to clone the repository and install dependencies for local development. Requires Python 3.8+ and pip to be installed.\nSOURCE: https://github.com/firebase/firebase-admin-python/blob/master/CONTRIBUTING.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/firebase/firebase-admin-python.git\n$ cd firebase-admin-python         # go to the firebase-admin-python directory\n$ pip install -r requirements.txt  # Install additional tools and dependencies\n```\n\n----------------------------------------\n\nTITLE: Specifying Runtime Dependencies for Firebase Admin Python SDK\nDESCRIPTION: Lists the runtime dependencies required for the Firebase Admin Python SDK to function properly, including various Google Cloud libraries and authentication dependencies.\nSOURCE: https://github.com/firebase/firebase-admin-python/blob/master/requirements.txt#2025-04-20_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\ncachecontrol >= 0.12.14\ngoogle-api-core[grpc] >= 1.22.1, < 3.0.0dev; platform.python_implementation != 'PyPy'\ngoogle-api-python-client >= 1.7.8\ngoogle-cloud-firestore >= 2.19.0; platform.python_implementation != 'PyPy'\ngoogle-cloud-storage >= 1.37.1\npyjwt[crypto] >= 2.5.0\n```\n\n----------------------------------------\n\nTITLE: Running Python Unit Tests\nDESCRIPTION: Commands for executing unit tests using pytest, including an option to generate code coverage reports for the firebase_admin and tests modules.\nSOURCE: https://github.com/firebase/firebase-admin-python/blob/master/CONTRIBUTING.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npytest\npytest --cov=firebase_admin --cov=tests\n```\n\n----------------------------------------\n\nTITLE: Running Firebase Integration Tests with Python Pytest\nDESCRIPTION: Command to execute integration tests using pytest with certificate and API key files\nSOURCE: https://github.com/firebase/firebase-admin-python/blob/master/CONTRIBUTING.md#2025-04-20_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npytest integration/ --cert cert.json --apikey apikey.txt\n```\n\n----------------------------------------\n\nTITLE: Generate Test Coverage Report with Pytest\nDESCRIPTION: Command to run tests with coverage reporting and generate detailed HTML coverage report\nSOURCE: https://github.com/firebase/firebase-admin-python/blob/master/CONTRIBUTING.md#2025-04-20_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npytest --cov --cov-report html\n```\n\n----------------------------------------\n\nTITLE: Running Pylint Code Quality Checks\nDESCRIPTION: Commands for running the pylint code quality checker on the firebase_admin module. Used to verify source code format and enforce Python programming best practices.\nSOURCE: https://github.com/firebase/firebase-admin-python/blob/master/CONTRIBUTING.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npylint firebase_admin\n```\n\n----------------------------------------\n\nTITLE: Running Firebase Database Emulator Tests\nDESCRIPTION: Command to run integration tests against the Firebase Realtime Database emulator using Firebase CLI\nSOURCE: https://github.com/firebase/firebase-admin-python/blob/master/CONTRIBUTING.md#2025-04-20_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nfirebase emulators:exec --only database --project fake-project-id 'pytest integration/test_db.py'\n```\n\n----------------------------------------\n\nTITLE: Specifying Development Dependencies for Firebase Admin Python SDK\nDESCRIPTION: Lists the development dependencies required for linting and testing the Firebase Admin Python SDK, including astroid, pylint, pytest and related testing packages.\nSOURCE: https://github.com/firebase/firebase-admin-python/blob/master/requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nastroid == 2.3.3\npylint == 2.3.1\npytest >= 6.2.0\npytest-cov >= 2.4.0\npytest-localserver >= 0.4.1\npytest-asyncio >= 0.16.0\npytest-mock >= 3.6.1\n```\n\n----------------------------------------\n\nTITLE: Running Lint Scripts with Options\nDESCRIPTION: Commands for running the lint.sh script which checks both firebase_admin and tests modules. Can check all files or just modified files.\nSOURCE: https://github.com/firebase/firebase-admin-python/blob/master/CONTRIBUTING.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n./lint.sh      # Lint locally modified source files\n./lint.sh all  # Lint all source files\n```\n\n----------------------------------------\n\nTITLE: Running Pylint with Detailed Reports\nDESCRIPTION: Command to run pylint with verbose reporting enabled using the -r flag for comprehensive analysis output.\nSOURCE: https://github.com/firebase/firebase-admin-python/blob/master/CONTRIBUTING.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npylint -r yes firebase_admin\n```"
  }
]
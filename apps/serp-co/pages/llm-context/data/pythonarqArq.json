[
  {
    "owner": "python-arq",
    "repo": "arq",
    "content": "TITLE: Pip-compiled Requirements for Python ARQ Project\nDESCRIPTION: This requirements file shows the exact versions of all dependencies needed for the Python ARQ project. It distinguishes between direct dependencies specified in pyproject.toml (click, redis, watchfiles) and their transitive dependencies (anyio, hiredis, idna, sniffio).\nSOURCE: https://github.com/python-arq/arq/blob/main/requirements/pyproject.txt#2025-04-21_snippet_0\n\nLANGUAGE: pip\nCODE:\n```\n#\n# This file is autogenerated by pip-compile with Python 3.12\n# by the following command:\n#\n#    pip-compile --all-extras --output-file=requirements/pyproject.txt --strip-extras pyproject.toml\n#\nanyio==4.3.0\n    # via watchfiles\nclick==8.1.7\n    # via arq (pyproject.toml)\nhiredis==2.3.2\n    # via redis\nidna==3.7\n    # via anyio\nredis==4.6.0\n    # via arq (pyproject.toml)\nsniffio==1.3.1\n    # via anyio\nwatchfiles==0.21.0\n    # via arq (pyproject.toml)\n```\n\n----------------------------------------\n\nTITLE: Importing ARQ Job Classes in reStructuredText Documentation\nDESCRIPTION: Directive to include and document the JobStatus and Job classes from the arq.jobs module. This uses Sphinx's automodule feature to automatically generate documentation for these specific members.\nSOURCE: https://github.com/python-arq/arq/blob/main/docs/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: arq.jobs\n   :members: JobStatus, Job\n```\n\n----------------------------------------\n\nTITLE: Running ARQ Worker for Slow Job (Completed)\nDESCRIPTION: Execution log of an ARQ worker for a slow job task that completes successfully. The worker starts, runs the delayed task on its second try, and finishes the job before being shut down.\nSOURCE: https://github.com/python-arq/arq/blob/main/docs/examples/slow_job_output.txt#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n➤  arq slow_job.WorkerSettings\n12:42:50: Starting worker for 1 functions: the_task\n12:42:50: redis_version=4.0.9 mem_usage=904.61K clients_connected=4 db_keys=4\n12:42:50:  21.78s → c3dd4acc171541b9ac10b1d791750cde:the_task() try=2 delayed=21.78s\n12:42:55:   5.00s ← c3dd4acc171541b9ac10b1d791750cde:the_task ●\n^C12:42:57: shutdown on SIGINT ◆ 1 jobs complete ◆ 0 failed ◆ 0 retries ◆ 0 ongoing to cancel\n```\n\n----------------------------------------\n\nTITLE: Importing Python Package Requirements with Reference Syntax\nDESCRIPTION: Uses pip's '-r' reference syntax to include dependencies from multiple requirement files. The file references documentation, linting, testing, and project configuration dependencies.\nSOURCE: https://github.com/python-arq/arq/blob/main/requirements/all.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n-r ./docs.txt\n-r ./linting.txt\n-r ./testing.txt\n-r ./pyproject.txt\n```\n\n----------------------------------------\n\nTITLE: Pip Requirements Definition for Python Linting Tools\nDESCRIPTION: Auto-generated pip requirements file listing exact versions of linting and type checking tools along with their dependencies. Includes mypy for type checking, ruff for code linting, and type stubs for PyOpenSSL, pytz, and redis.\nSOURCE: https://github.com/python-arq/arq/blob/main/requirements/linting.txt#2025-04-21_snippet_0\n\nLANGUAGE: pip\nCODE:\n```\ncffi==1.16.0\n    # via cryptography\ncryptography==42.0.5\n    # via\n    #   types-pyopenssl\n    #   types-redis\nmypy==1.9.0\n    # via -r requirements/linting.in\nmypy-extensions==1.0.0\n    # via mypy\npycparser==2.22\n    # via cffi\nruff==0.3.4\n    # via -r requirements/linting.in\ntypes-pyopenssl==24.0.0.20240311\n    # via types-redis\ntypes-pytz==2024.1.0.20240203\n    # via -r requirements/linting.in\ntypes-redis==4.6.0.20240311\n    # via -r requirements/linting.in\ntyping-extensions==4.10.0\n    # via mypy\n```\n\n----------------------------------------\n\nTITLE: Running ARQ Worker for Slow Job (Interrupted)\nDESCRIPTION: Execution log of an ARQ worker for a slow job task that gets interrupted. The worker starts, attempts to run a delayed task, but is shut down before completion.\nSOURCE: https://github.com/python-arq/arq/blob/main/docs/examples/slow_job_output.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n➤  arq slow_job.WorkerSettings\n12:42:38: Starting worker for 1 functions: the_task\n12:42:38: redis_version=4.0.9 mem_usage=904.50K clients_connected=4 db_keys=3\n12:42:38:  10.23s → c3dd4acc171541b9ac10b1d791750cde:the_task() delayed=10.23s\n^C12:42:40: shutdown on SIGINT ◆ 0 jobs complete ◆ 0 failed ◆ 0 retries ◆ 1 ongoing to cancel\n12:42:40:   1.16s ↻ c3dd4acc171541b9ac10b1d791750cde:the_task cancelled, will be run again\n```\n\n----------------------------------------\n\nTITLE: Creating Link References in reStructuredText Documentation\nDESCRIPTION: Definitions of hyperlink references used throughout the documentation. These create named references to external resources like asyncio, watchfiles, and rq packages that can be referenced elsewhere in the documentation.\nSOURCE: https://github.com/python-arq/arq/blob/main/docs/index.rst#2025-04-21_snippet_4\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _asyncio: https://docs.python.org/3/library/asyncio.html\n.. _watchfiles: https://pypi.org/project/watchfiles/\n.. _rq: http://python-rq.org/\n```\n\n----------------------------------------\n\nTITLE: Pip-compile Command for ARQ Testing Requirements\nDESCRIPTION: The command used to generate the requirements file, showing how pip-compile was used to create a dependencies list for testing ARQ with specific options.\nSOURCE: https://github.com/python-arq/arq/blob/main/requirements/testing.txt#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#    pip-compile --output-file=requirements/testing.txt --strip-extras requirements/testing.in\n```\n\n----------------------------------------\n\nTITLE: Including Project History in reStructuredText Documentation\nDESCRIPTION: Directive to include the project's history from an external file. This imports the content of HISTORY.rst located in the parent directory into the current documentation.\nSOURCE: https://github.com/python-arq/arq/blob/main/docs/index.rst#2025-04-21_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. include:: ../HISTORY.rst\n```\n\n----------------------------------------\n\nTITLE: Generating Python Requirements File for Sphinx Documentation\nDESCRIPTION: This code snippet shows the command used to generate the requirements file using pip-compile. It specifies the input and output files, and includes the --strip-extras option.\nSOURCE: https://github.com/python-arq/arq/blob/main/requirements/docs.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n#    pip-compile --output-file=requirements/docs.txt --strip-extras requirements/docs.in\n```\n\n----------------------------------------\n\nTITLE: Setting PyPI Version Badge in reStructuredText Documentation\nDESCRIPTION: Definition of a substitution reference for a PyPI version badge. This creates an image link that shows the current version of the arq package on PyPI.\nSOURCE: https://github.com/python-arq/arq/blob/main/docs/index.rst#2025-04-21_snippet_2\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. |pypi| image:: https://img.shields.io/pypi/v/arq.svg\n   :target: https://pypi.python.org/pypi/arq\n```\n\n----------------------------------------\n\nTITLE: Setting License Badge in reStructuredText Documentation\nDESCRIPTION: Definition of a substitution reference for a license badge. This creates an image link that shows the license type of the arq package, linked to the project's GitHub repository.\nSOURCE: https://github.com/python-arq/arq/blob/main/docs/index.rst#2025-04-21_snippet_3\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. |license| image:: https://img.shields.io/pypi/l/arq.svg\n   :target: https://github.com/samuelcolvin/arq\n```"
  }
]
[
  {
    "owner": "letsencrypt",
    "repo": "website",
    "content": "TITLE: Defining a Point Structure in ASN.1\nDESCRIPTION: Example of how a simple point structure with coordinates and a label would be defined in ASN.1. This demonstrates ASN.1's language-independent syntax for defining data structures that can be implemented in any programming language.\n\nLANGUAGE: asn1\nCODE:\n```\nPoint ::= SEQUENCE {\n  x INTEGER,\n  y INTEGER,\n  label UTF8String\n}\n```\n\n----------------------------------------\n\nTITLE: Let's Encrypt ACME API Endpoint URL\nDESCRIPTION: The production API endpoint URL for Let's Encrypt's ACME protocol that clients need to use to request certificates.\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://acme-v02.api.letsencrypt.org/directory\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for Let's Encrypt R10\nDESCRIPTION: This certificate is a Let's Encrypt R10 intermediate certificate issued by ISRG Root X1. It contains the certificate data including version, serial number, signature algorithm, issuer, validity period, subject information, public key details, and X.509v3 extensions. The certificate is valid from March 13, 2024 to March 12, 2027.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            4b:a8:52:93:f7:9a:2f:a2:73:06:4b:a8:04:8d:75:d0\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = R10\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:cf:57:e5:e6:c4:54:12:ed:b4:47:fe:c9:27:58:\n                    76:46:50:28:8c:1d:3e:88:df:05:9d:d5:b5:18:29:\n                    bd:dd:b5:5a:bf:fa:f6:ce:a3:be:af:00:21:4b:62:\n                    5a:5a:3c:01:2f:c5:58:03:f6:89:ff:8e:11:43:eb:\n                    c1:b5:e0:14:07:96:8f:6f:1f:d7:e7:ba:81:39:09:\n                    75:65:b7:c2:af:18:5b:37:26:28:e7:a3:f4:07:2b:\n                    6d:1a:ff:ab:58:bc:95:ae:40:ff:e9:cb:57:c4:b5:\n                    5b:7f:78:0d:18:61:bc:17:e7:54:c6:bb:49:91:cd:\n                    6e:18:d1:80:85:ee:a6:65:36:bc:74:ea:bc:50:4c:\n                    ea:fc:21:f3:38:16:93:94:ba:b0:d3:6b:38:06:cd:\n                    16:12:7a:ca:52:75:c8:ad:76:b2:c2:9c:5d:98:45:\n                    5c:6f:61:7b:c6:2d:ee:3c:13:52:86:01:d9:57:e6:\n                    38:1c:df:8d:b5:1f:92:91:9a:e7:4a:1c:cc:45:a8:\n                    72:55:f0:b0:e6:a3:07:ec:fd:a7:1b:66:9e:3f:48:\n                    8b:71:84:71:58:c9:3a:fa:ef:5e:f2:5b:44:2b:3c:\n                    74:e7:8f:b2:47:c1:07:6a:cd:9a:b7:0d:96:f7:12:\n                    81:26:51:54:0a:ec:61:f6:f7:f5:e2:f2:8a:c8:95:\n                    0d:8d\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                BB:BC:C3:47:A5:E4:BC:A9:C6:C3:A4:72:0C:10:8D:A2:35:E1:C8:E8\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n    Signature Algorithm: sha256WithRSAEncryption\n         92:b1:e7:41:37:eb:79:9d:81:e6:cd:e2:25:e1:3a:20:e9:90:\n         44:95:a3:81:5c:cf:c3:5d:fd:bd:a0:70:d5:b1:96:28:22:0b:\n         d2:f2:28:cf:0c:e7:d4:e6:43:8c:24:22:1d:c1:42:92:d1:09:\n         af:9f:4b:f4:c8:70:4f:20:16:b1:5a:dd:01:f6:1f:f8:1f:61:\n         6b:14:27:b0:72:8d:63:ae:ee:e2:ce:4b:cf:37:dd:bb:a3:d4:\n         cd:e7:ad:50:ad:bd:bf:e3:ec:3e:62:36:70:99:31:a7:e8:8d:\n         dd:ea:62:e2:12:ae:f5:9c:d4:3d:2c:0c:aa:d0:9c:79:be:ea:\n         3d:5c:44:6e:96:31:63:5a:7d:d6:7e:4f:24:a0:4b:05:7f:5e:\n         6f:d2:d4:ea:5f:33:4b:13:d6:57:b6:ca:de:51:b8:5d:a3:09:\n         82:74:fd:c7:78:9e:b3:b9:ac:16:da:4a:2b:96:c3:b6:8b:62:\n         8f:f9:74:19:a2:9e:03:de:e9:6f:9b:b0:0f:d2:a0:5a:f6:85:\n         5c:c2:04:b7:c8:d5:4e:32:c4:bf:04:5d:bc:29:f6:f7:81:8f:\n         0c:5d:3c:53:c9:40:90:8b:fb:b6:08:65:b9:a4:21:d5:09:e5:\n         13:84:84:37:82:ce:10:28:fc:76:c2:06:25:7a:46:52:4d:da:\n         53:72:a4:27:3f:62:70:ac:be:69:48:00:fb:67:0f:db:5b:a1:\n         e8:d7:03:21:2d:d7:c9:f6:99:42:39:83:43:df:77:0a:12:08:\n         f1:25:d6:ba:94:19:54:18:88:a5:c5:8e:e1:1a:99:93:79:6b:\n         ec:1c:f9:31:40:b0:cc:32:00:df:9f:5e:e7:b4:92:ab:90:82:\n         91:8d:0d:e0:1e:95:ba:59:3b:2e:4b:5f:c2:b7:46:35:52:39:\n         06:c0:bd:aa:ac:52:c1:22:a0:44:97:99:f7:0c:a0:21:a7:a1:\n         6c:71:47:16:17:01:68:c0:ca:a6:26:65:04:7c:b3:ae:c9:e7:\n         94:55:c2:6f:9b:3c:1c:a9:f9:2e:c5:20:1a:f0:76:e0:be:ec:\n         18:d6:4f:d8:25:fb:76:11:e8:bf:e6:21:0f:e8:e8:cc:b5:b6:\n         a7:d5:b8:f7:9f:41:cf:61:22:46:6a:83:b6:68:97:2e:7c:ea:\n         4e:95:db:23:eb:2e:c8:2b:28:84:a4:60:e9:49:f4:44:2e:3b:\n         f9:ca:62:57:01:e2:5d:90:16:f9:c9:fc:7a:23:48:8e:a6:d5:\n         81:72:f1:28:fa:5d:ce:fb:ed:4e:73:8f:94:2e:d2:41:94:98:\n         99:db:a7:af:70:5f:f5:be:fb:02:20:bf:66:27:6c:b4:ad:fa:\n         75:12:0b:2b:3e:ce:03:9e\n```\n\n----------------------------------------\n\nTITLE: Retrieving Account ID with Certbot CLI\nDESCRIPTION: Run the certbot show_account subcommand to display your Let's Encrypt account ID. This command is available in Certbot version 1.23.0 and newer.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot show_account\n```\n\n----------------------------------------\n\nTITLE: Staging Environment Rate Limits Table in Markdown\nDESCRIPTION: A markdown table showing the request rate limits for different ACME endpoints in the staging environment, including requests per IP and burst capacity for each endpoint.\n\nLANGUAGE: markdown\nCODE:\n```\n| Endpoint           | Requests per IP (per second) | Burst Capacity |\n|--------------------|------------------------------|----------------|\n| /acme/new-nonce    | 20                           | 10             |\n| /acme/new-account  | 5                            | 15             |\n| /acme/new-order    | 20                           | 40             |\n| /acme/revoke-cert  | 10                           | 100            |\n| /acme/renewal-info | 1000                         | 100            |\n| /acme/*            | 20                           | 20             |\n| /directory         | 40                           | 40             |\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate Structure for Let's Encrypt Staging Certificate\nDESCRIPTION: This code snippet displays the complete X.509 certificate details, including version, serial number, signature algorithm, issuer information, validity period, subject details, public key information, and X.509v3 extensions. This represents a staging certificate that would be used for testing certificate issuance processes rather than production use.\n\nLANGUAGE: plaintext\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            bc:64:b8:97:bd:96:57:73:c9:0b:b0:89:3a:89:54:5c\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Bogus Broccoli X2\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Mysterious Mulberry E8\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:13:af:36:2a:ef:dc:a5:f5:54:c4:4a:6e:b6:8d:\n                    55:e2:17:f8:6e:f6:b5:3f:6c:15:90:2b:51:79:3f:\n                    dc:77:80:df:f9:95:c4:6e:03:a6:c1:f0:84:f4:33:\n                    db:78:32:33:09:6f:d4:4c:96:7e:b3:10:7d:c2:d7:\n                    cb:9d:4d:42:35:06:e9:81:dc:91:96:57:4e:a2:dc:\n                    56:6c:72:8d:d0:65:e1:a2:1b:74:f0:76:8e:d1:49:\n                    0d:1a:81:fe:7c:d8:70\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                C9:41:93:42:48:D1:8C:17:06:91:F2:F2:39:D2:A0:1F:A7:BB:DB:39\n            X509v3 Authority Key Identifier: \n                DE:D1:A3:59:64:0E:C1:9A:36:A3:46:EE:B0:10:76:EF:AE:97:95:66\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x2.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x2.c.lencr.org/\n    Signature Algorithm: ecdsa-with-SHA384\n    Signature Value:\n        30:65:02:31:00:cd:48:c8:27:2c:16:eb:69:6e:76:6c:e8:60:\n        79:87:3a:d6:a1:78:ec:4d:b6:15:be:e9:db:27:78:af:a2:a6:\n        0e:ca:1f:8f:0a:a3:82:7a:63:50:12:32:dd:34:bd:11:a3:02:\n        30:1f:6b:2c:a1:e6:4a:b8:2b:01:ad:3c:54:3d:ab:4a:11:f3:\n        5a:d2:e8:51:4e:e3:14:7b:94:bc:9b:9a:c0:42:4b:86:f3:5e:\n        f7:a9:16:61:5b:15:f0:15:1c:22:1e:ab:cc\n```\n\n----------------------------------------\n\nTITLE: ACME v2 Staging Environment URL\nDESCRIPTION: The URL endpoint for Let's Encrypt's ACME v2 staging environment that should be used for testing certificate issuance before moving to production.\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://acme-staging-v02.api.letsencrypt.org/directory\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for Let's Encrypt Staging Environment\nDESCRIPTION: Detailed structure of an X.509 v3 certificate used in Let's Encrypt's staging environment. The certificate uses ECDSA with SHA-384 for signatures and contains a 384-bit ECC public key. It's configured as a CA certificate with path length constraints and has various extensions defining its usage and trust relationships.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            3a:1e:7f:dd:41:0b:b3:69:1d:6e:f9:63:6d:50:f8:c9\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Bogus Broccoli X2\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Puzzling Parsnip E7\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:7b:b9:75:d0:46:8c:fe:8a:cb:fb:ed:3d:55:e2:\n                    91:7c:98:c5:df:3e:b9:af:af:21:21:41:73:78:49:\n                    d4:8c:ff:ce:67:bc:4f:70:bb:05:0b:1c:53:75:ac:\n                    95:18:15:78:8e:9c:d8:2a:44:9f:6a:41:fb:9c:5b:\n                    d8:f4:55:63:cb:bc:46:8c:ab:b4:a5:7b:43:48:1c:\n                    51:b4:39:6c:c1:d8:25:cd:59:b9:b9:f8:b5:c5:ad:\n                    fa:d0:24:cf:1e:49:a2\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                A4:0F:94:0B:44:63:6A:99:A9:A0:D9:8C:66:43:B1:4F:DC:B0:2C:46\n            X509v3 Authority Key Identifier: \n                DE:D1:A3:59:64:0E:C1:9A:36:A3:46:EE:B0:10:76:EF:AE:97:95:66\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x2.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x2.c.lencr.org/\n    Signature Algorithm: ecdsa-with-SHA384\n    Signature Value:\n        30:64:02:30:68:76:be:d3:bb:4d:ed:39:b8:59:ca:23:a4:c3:\n        8f:b2:6f:4d:6d:68:42:74:13:1e:a8:53:16:47:ad:c3:4f:5f:\n        2d:18:be:54:5b:25:f9:cb:4c:bc:81:ff:18:ae:d4:cb:02:30:\n        35:ee:cd:11:f7:1b:21:80:c1:ae:d3:fb:8e:1f:13:60:93:7d:\n        70:a4:ad:97:5f:1f:43:13:6e:2e:f6:38:11:96:9f:2c:01:50:\n        04:4a:3d:80:f5:c2:87:fd:54:b0:4d:51\n```\n\n----------------------------------------\n\nTITLE: Complex CAA Record Set Example in DNS\nDESCRIPTION: A more sophisticated CAA record set that demonstrates multiple configuration options including validation method restrictions, wildcard certificate issuance, and account-specific permissions.\n\nLANGUAGE: dns\nCODE:\n```\nexample.org         CAA 0 issue \"myca.org;validationmethods=dns-01\"\nexample.org         CAA 0 issuewild \"myca.org\"\nexample.org         CAA 128 issue \"otherca.com;accounturi=https://otherca.com/acct/123456\"\n```\n\n----------------------------------------\n\nTITLE: Checking for ARI Support Before Making API Call in Golang\nDESCRIPTION: Function that checks if the ACME CA supports ARI by verifying the RenewalInfo field is populated in the directory before attempting to retrieve renewal information for a certificate.\n\nLANGUAGE: golang\nCODE:\n```\nfunc (c *CertificateService) GetRenewalInfo(certID string) (*http.Response, error) {\n  if c.core.GetDirectory().RenewalInfo == \"\" {\n    return nil, ErrNoARI\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate Structure for Let's Encrypt Authority X4\nDESCRIPTION: This is a detailed view of the X.509 certificate for Let's Encrypt Authority X4, showing all certificate fields including the RSA public key details, certificate extensions, and certificate chain information. It was issued by DST Root CA X3 and is valid from March 2016 to March 2021.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            0a:01:41:42:00:00:01:53:85:73:a6:cb:11:e3:1f:8b\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: O = Digital Signature Trust Co., CN = DST Root CA X3\n        Validity\n            Not Before: Mar 17 16:41:02 2016 GMT\n            Not After : Mar 17 16:41:02 2021 GMT\n        Subject: C = US, O = Let's Encrypt, CN = Let's Encrypt Authority X4\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:e1:24:74:42:7b:b7:91:31:d9:73:ff:38:aa:d8:\n                    ce:44:5c:b7:39:0a:dc:44:ae:0d:bd:45:b9:97:37:\n                    67:af:bd:50:4f:5f:d3:10:54:6b:f7:41:da:8e:63:\n                    e6:6d:5b:c0:e8:40:a9:8c:41:fc:d1:03:89:ff:62:\n                    61:09:60:d6:07:05:78:9a:90:bd:1a:64:3e:4f:dc:\n                    cf:77:2f:89:6b:cb:67:af:41:4d:c5:8d:00:c0:6b:\n                    fe:8d:84:dc:b5:f2:95:31:a8:e8:f6:90:a0:43:4a:\n                    93:74:5c:b3:3e:43:69:4b:89:22:47:74:51:3e:99:\n                    64:c3:cd:24:01:f9:84:2f:28:77:17:22:a7:dd:c3:\n                    6c:08:4c:66:2f:37:74:c5:6f:93:8e:b0:46:37:16:\n                    61:d1:50:98:c8:b0:0f:4f:58:53:7c:ac:f6:da:2d:\n                    96:61:50:ad:43:dc:0a:a6:4f:9e:b5:52:b9:9c:8e:\n                    ef:4e:df:46:b3:31:dc:20:fc:69:c2:a3:20:75:3e:\n                    ec:38:1b:36:4e:66:66:d2:df:f5:66:a4:93:2f:7b:\n                    a6:0e:94:3e:60:3d:4a:4b:1c:6f:ba:b4:4d:1c:3c:\n                    91:58:6e:2f:4d:c4:da:70:db:ed:01:39:76:c0:49:\n                    e7:e9:35:b5:14:06:90:c1:e5:92:e2:10:fd:6b:b9:\n                    b4:85\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            Authority Information Access: \n                OCSP - URI:http://isrg.trustid.ocsp.identrust.com\n                CA Issuers - URI:http://apps.identrust.com/roots/dstrootcax3.p7c\n\n            X509v3 Authority Key Identifier: \n                keyid:C4:A7:B1:A4:7B:2C:71:FA:DB:E1:4B:90:75:FF:C4:15:60:85:89:10\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n                  CPS: http://cps.root-x1.letsencrypt.org\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://crl.identrust.com/DSTROOTCAX3CRL.crl\n\n            X509v3 Subject Key Identifier: \n                C5:B1:AB:4E:4C:B1:CD:64:30:93:7E:C1:84:99:05:AB:E6:03:E2:25\n    Signature Algorithm: sha256WithRSAEncryption\n         36:56:9e:49:db:2d:7c:0b:6a:14:dd:e3:75:16:49:16:3c:7d:\n         5f:e3:9b:dc:f2:03:95:e9:0f:61:0d:4e:43:55:30:e3:7a:c4:\n         d4:55:23:ee:15:30:83:63:09:29:fb:3d:6f:b3:34:5a:84:20:\n         ec:2d:b4:9c:96:3f:6a:3b:20:ee:95:a1:50:6d:c9:ea:b9:64:\n         0d:37:d5:63:d7:da:79:68:b4:aa:c3:d8:5c:4e:81:a4:10:eb:\n         e4:1a:d6:fd:7b:fc:c9:3f:14:d8:18:84:02:63:60:81:6a:bc:\n         76:61:65:f3:67:e0:86:62:f3:1c:13:3c:5f:c3:59:dd:9c:00:\n         d5:f1:9e:3c:0e:77:00:fe:48:a0:3f:b4:02:ba:56:f0:89:35:\n         b1:2b:90:06:36:7c:a1:02:df:37:e1:bc:3a:86:3b:30:d4:68:\n         a7:22:f2:41:00:8d:cb:86:96:7c:4f:b1:62:7a:15:a1:ae:7e:\n         ca:bf:9a:3e:25:f4:ed:84:2b:63:f7:0a:6b:00:27:ed:00:78:\n         3f:21:79:ff:f2:0a:48:05:6c:ee:60:2e:07:af:30:6c:c7:44:\n         dc:52:9f:38:77:c9:db:85:b8:cf:f6:c8:25:3a:d3:63:c6:39:\n         4a:be:00:52:1b:73:7f:ca:15:0e:b1:d9:61:64:6b:3f:88:e8:\n         21:c3:ae:fd\n```\n\n----------------------------------------\n\nTITLE: X.509 PEM-encoded Certificate for Let's Encrypt Authority X1\nDESCRIPTION: This is a PEM-encoded X.509 certificate for Let's Encrypt Authority X1, issued by ISRG Root X1. The certificate was valid from June 4, 2015 to June 4, 2020 and was used as an intermediate certificate authority in the Let's Encrypt certificate chain.\n\nLANGUAGE: certificate\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIFjTCCA3WgAwIBAgIRAOeTkL6SBwNJGF95dYHlyoMwDQYJKoZIhvcNAQELBQAw\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMTUwNjA0MTIwMDIw\nWhcNMjAwNjA0MTIwMDIwWjBKMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg\nRW5jcnlwdDEjMCEGA1UEAxMaTGV0J3MgRW5jcnlwdCBBdXRob3JpdHkgWDEwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCc0wzwWuUuR7dyXTeDs2hjMOrX\nNSYZJeG9vjXxcJIvt7hLQQWrqZ41CFjssSrEaIcLo+N15Obzp2JxunmBYB/XkZqf\n89B4Z3HIaQ6Vkc/+5pnpYDxIzH7KTXcSJJ1HG1rrueweNwAcnKx7pwXqzkrrvUHl\nNpi5y/1tPJZo3yMqQpAMhnRnyH+lmrhSYRQTP2XpgofL2/oOVvaGifOFP5eGr7Dc\nGu9rDZUWfcQroGWymQQ2dYBrrErzG5BJeC+ilk8qICUpBMZ0wNAxzY8xOJUWuqgz\nuEPxsR/DMH+ieTETPS02+OP88jNquTkxxa/EjQ0dZBYzqvqEKbbUC8DYfcOTAgMB\nAAGjggFnMIIBYzAOBgNVHQ8BAf8EBAMCAYYwEgYDVR0TAQH/BAgwBgEB/wIBADBU\nBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEBATAwMC4GCCsGAQUFBwIB\nFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQub3JnMB0GA1UdDgQWBBSo\nSmpjBH3duubRObemRWXv86jsoTAzBgNVHR8ELDAqMCigJqAkhiJodHRwOi8vY3Js\nLnJvb3QteDEubGV0c2VuY3J5cHQub3JnMHIGCCsGAQUFBwEBBGYwZDAwBggrBgEF\nBQcwAYYkaHR0cDovL29jc3Aucm9vdC14MS5sZXRzZW5jcnlwdC5vcmcvMDAGCCsG\nAQUFBzAChiRodHRwOi8vY2VydC5yb290LXgxLmxldHNlbmNyeXB0Lm9yZy8wHwYD\nVR0jBBgwFoAUebRZ5nu25eQBc4AIiMgaWPbpm24wDQYJKoZIhvcNAQELBQADggIB\nAGvM/XGv8yafGRGMPP6hnggoI9DGWGf4l0mzjBhuCkDVqoG/7rsH1ytzteePxiA3\n7kqSBo0fXu5GmbWOw09GpwPYyAAY0iWOMU6ybrTJHS466Urzoe/4IwLQoQc219EK\nlh+4Ugu1q4KxNY1qMDA/1YX2Qm9M6AcAs1UvZKHSpJQAbsYrbN6obNoUGOeG6ONH\nYr8KRQz5FMfZYcA49fmdDTwKn/pyLOkJFeA/dm/oP99UmKCFoeOa5w9YJr2Vi7ic\nXd59CU8mprWhxFXnma1oU3T8ZNovjib3UHocjlEJfNbDy9zgKTYURcMVweo1dkbH\nNbLc5mIjIk/kJ+RPD+chR+gJjy3Gh9xMNkDrZQKfsIO93hxTsZMmgZQ4c+vujC1M\njSak+Ai87YZeYQPh1fCGMSTno5III37DUCtIn8BJxJixuPeOMKsjLLD5AtMVy0fp\nd19lcUek4bjDY8/Ujb5/wfn2+Kk7z72SxWdekjtHOWBmKxqq8jDuuMw4ymg1g5n7\nR7TZ/Y3y4bTpWUDkBHFo03xNM21wBFDIrCZZeVhvDW4MtT6+Ass2bcpoHwYcGol2\ngaLDa5k2dkG41OGtXa0fY+TjdryY4cOcstJUKjv2MJku4yaTtjjECX1rJvFLnqYe\nwC+FmxjgWPuyRNuLDAWK30mmpcJZ3CmD6dFtAi4h7H37\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: ASN.1 Definition of AlgorithmIdentifier Sequence\nDESCRIPTION: ASN.1 module definition for AlgorithmIdentifier from RFC 5280, which is structured as a SEQUENCE containing an algorithm identifier (OBJECT IDENTIFIER) and optional parameters.\n\nLANGUAGE: asn1\nCODE:\n```\n   AlgorithmIdentifier  ::=  SEQUENCE  {\n        algorithm               OBJECT IDENTIFIER,\n        parameters              ANY DEFINED BY algorithm OPTIONAL  }\n```\n\n----------------------------------------\n\nTITLE: Defining OIDs in ASN.1 with Concatenation\nDESCRIPTION: Example showing how OIDs (Object Identifiers) are defined in ASN.1 specifications using human-readable names and concatenation. This snippet from RFC 8017 defines the pkcs-1 OID and then creates a new OID by appending to it.\n\nLANGUAGE: asn1\nCODE:\n```\n   pkcs-1    OBJECT IDENTIFIER ::= {\n       iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) 1\n   }\n   ...\n\n   sha256WithRSAEncryption      OBJECT IDENTIFIER ::= { pkcs-1 11 }\n```\n\n----------------------------------------\n\nTITLE: Generating a certificate for localhost with mkcert\nDESCRIPTION: This command creates a certificate for localhost, 127.0.0.1, and ::1 (IPv6 localhost) using mkcert. The generated certificate will be trusted by the local system since the mkcert CA was installed.\n\nLANGUAGE: bash\nCODE:\n```\nmkcert localhost 127.0.0.1 ::1\n```\n\n----------------------------------------\n\nTITLE: Revoking a Certificate Using the Private Key\nDESCRIPTION: This command revokes a certificate using its private key. This method is useful when you have access to a compromised private key but weren't the original certificate issuer.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-path /PATH/TO/cert.pem --key-path /PATH/TO/privkey.pem --reason keyCompromise\n```\n\n----------------------------------------\n\nTITLE: Defining SEQUENCE OF in ASN.1\nDESCRIPTION: Example from RFC 5280 showing the definition of a SEQUENCE OF type. RDNSequence is defined as a sequence of RelativeDistinguishedName elements, allowing for 0 or more elements in a specific order.\n\nLANGUAGE: asn1\nCODE:\n```\n   RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n```\n\n----------------------------------------\n\nTITLE: Generating Self-Signed Certificate for localhost using OpenSSL\nDESCRIPTION: This command generates a private key and self-signed certificate for localhost using OpenSSL. It creates a 2048-bit RSA key with SHA-256 hashing, sets the Common Name to 'localhost', and adds the necessary extensions for server authentication and the Subject Alternative Name (SAN) for localhost.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config <( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n```\n\n----------------------------------------\n\nTITLE: Implementing Certificate Renewal Timing Algorithm in Go\nDESCRIPTION: This function implements the ARI-suggested algorithm for determining when to renew a certificate based on a suggested window. It selects a random time within the window and makes decisions based on whether that time is in the past or if the client can wait until that time.\n\nLANGUAGE: go\nCODE:\n```\nfunc (r *RenewalInfoResponse) ShouldRenewAt(now time.Time, willingToSleep time.Duration) *time.Time {\n\n  // Explicitly convert all times to UTC.\n  now = now.UTC()\n  start := r.SuggestedWindow.Start.UTC()\n  end := r.SuggestedWindow.End.UTC()\n\n  // Select a uniform random time within the suggested window.\n  window := end.Sub(start)\n  randomDuration := time.Duration(rand.Int63n(int64(window)))\n  rt := start.Add(randomDuration)\n\n  // If the selected time is in the past, attempt renewal immediately.\n  if rt.Before(now) {\n    return &now\n  }\n\n  // Otherwise, if the client can schedule itself to attempt renewal at exactly the selected time, do so.\n  willingToSleepUntil := now.Add(willingToSleep)\n  if willingToSleepUntil.After(rt) || willingToSleepUntil.Equal(rt) {\n    return &rt\n  }\n\n  // TODO: Otherwise, if the selected time is before the next time that the client would wake up normally, attempt renewal immediately.\n\n  // Otherwise, sleep until the next normal wake time.\n\n  return nil\n\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Self-Signed Certificate with OpenSSL for Localhost\nDESCRIPTION: Command to generate a self-signed certificate valid for localhost using OpenSSL. Creates both a key and certificate file with a validity period of 365 days.\n\nLANGUAGE: shell\nCODE:\n```\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config <( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n```\n\n----------------------------------------\n\nTITLE: Certificate Structure Definition in ASN.1\nDESCRIPTION: Example from RFC 5280 showing the structure of an X.509 Certificate as a SEQUENCE containing three fields: tbsCertificate, signatureAlgorithm, and signature. The signature field is defined as a BIT STRING.\n\nLANGUAGE: asn1\nCODE:\n```\nCertificate  ::=  SEQUENCE  {\n     tbsCertificate       TBSCertificate,\n     signatureAlgorithm   AlgorithmIdentifier,\n     signature            BIT STRING  }\n```\n\n----------------------------------------\n\nTITLE: Monitoring Let's Encrypt API Status with Python\nDESCRIPTION: Python script that demonstrates how to check the ACME directory availability and handle HTTP status codes. This can be used for programmatic monitoring of the Let's Encrypt API status.\n\nLANGUAGE: python\nCODE:\n```\nimport requests\nresp = requests.get('https://acme-v02.api.letsencrypt.org/directory')\nif resp.status_code != 200:\n    raise Exception('Error accessing ACME directory')\n```\n\n----------------------------------------\n\nTITLE: CHOICE Type Definition in ASN.1\nDESCRIPTION: Example from RFC 5280 defining a Time type as a CHOICE between utcTime and generalTime. This means a Time value can contain exactly one of these two possible types.\n\nLANGUAGE: asn1\nCODE:\n```\nTime ::= CHOICE {\n     utcTime        UTCTime,\n     generalTime    GeneralizedTime }\n```\n\n----------------------------------------\n\nTITLE: Using mkcert on macOS via Homebrew\nDESCRIPTION: These commands install mkcert on macOS using Homebrew, set up the local certificate authority, and create certificates for localhost and loopback addresses.\n\nLANGUAGE: shell\nCODE:\n```\nbrew install mkcert\nmkcert -install\nmkcert localhost 127.0.0.1 ::1\n```\n\n----------------------------------------\n\nTITLE: Parsing Certificate Expiry with OpenSSL and Date in Bash\nDESCRIPTION: This command extracts the certificate expiry date from a server, converts it to a Unix timestamp, and calculates how many days until expiry. It provides a numerical value that can be used in monitoring scripts.\n\nLANGUAGE: bash\nCODE:\n```\nEXPIRES=$(echo | openssl s_client -servername NAME -connect NAME:443 2>/dev/null | openssl x509 -noout -enddate | cut -d= -f2)\nEXPIRES_s=$(date -d \"$EXPIRES\" +%s)\nNOW_s=$(date +%s)\necho \"$(( ($EXPIRES_s - $NOW_s) / 60 / 60 / 24 )) days until expiry\"\n```\n\n----------------------------------------\n\nTITLE: Generating Self-Signed Certificate for localhost with OpenSSL\nDESCRIPTION: Command to create a self-signed certificate and private key for localhost using OpenSSL. The command generates a 2048-bit RSA key with SHA-256 hash, adds the localhost Common Name, and includes appropriate extensions for server authentication.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config <( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n```\n\n----------------------------------------\n\nTITLE: Encoding a Simple Integer in DER Format\nDESCRIPTION: DER encoding of a SEQUENCE containing only an INTEGER with value 9. The encoding shows the byte-level representation using hexadecimal notation.\n\nLANGUAGE: der\nCODE:\n```\n30 03 02 01 09\n```\n\n----------------------------------------\n\nTITLE: Setting up CAA records with contact information for Let's Encrypt\nDESCRIPTION: This configuration includes a 'iodef' tag to provide contact information in case of CAA policy violations, allowing certificate authorities to report issues via email.\n\nLANGUAGE: DNS\nCODE:\n```\nexample.com. IN CAA 0 iodef \"mailto:security@example.com\"\n```\n\n----------------------------------------\n\nTITLE: Checking Let's Encrypt API Health with curl\nDESCRIPTION: Simple bash command using curl to check the current status of the Let's Encrypt API through its health check endpoint. This command returns the status in JSON format.\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -I https://acme-v02.api.letsencrypt.org/directory\n```\n\n----------------------------------------\n\nTITLE: String Encoding Examples in DER\nDESCRIPTION: Examples showing how different string types (PrintableString, IA5String, and UTF8String) are encoded in DER format. The examples demonstrate that the encoding differs primarily by tag, with UTF8String able to represent a wider range of characters.\n\nLANGUAGE: der\nCODE:\n```\n13 02 68 69\n```\n\nLANGUAGE: der\nCODE:\n```\n16 02 68 69\n```\n\nLANGUAGE: der\nCODE:\n```\n0c 04 f0 9f 98 8e\n```\n\n----------------------------------------\n\nTITLE: Setting CAA Records with Cloudflare DNS\nDESCRIPTION: Command to configure CAA records in Cloudflare's DNS settings through their API. Sets an issue property allowing Let's Encrypt to issue certificates for a domain.\n\nLANGUAGE: bash\nCODE:\n```\ndig caa example.com\n```\n\n----------------------------------------\n\nTITLE: Creating a Self-Signed Certificate with OpenSSL for Local Development\nDESCRIPTION: Commands to generate a self-signed certificate using OpenSSL with localhost as the Common Name. This creates a key and certificate valid for 90 days that can be used for local development servers.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config <( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n```\n\n----------------------------------------\n\nTITLE: Creating Self-Signed Certificates with OpenSSL for localhost\nDESCRIPTION: This command uses OpenSSL to generate a self-signed certificate for localhost development. The certificate will have a validity period of 10 years.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config <( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n```\n\n----------------------------------------\n\nTITLE: Setting CAA Records for Let's Encrypt in DNS Configuration\nDESCRIPTION: Example of DNS CAA record configuration that allows Let's Encrypt to issue certificates for a domain. The record uses the 'letsencrypt.org' issuer domain.\n\nLANGUAGE: dns\nCODE:\n```\nexample.com. CAA 0 issue \"letsencrypt.org\"\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of BIT STRING\nDESCRIPTION: Example of a DER-encoded BIT STRING containing 18 bits (011011100101110111), showing how the number of unused bits is specified in the first byte of the value and how the data is padded.\n\nLANGUAGE: der\nCODE:\n```\n03 04 06 6e 5d c0\n```\n\n----------------------------------------\n\nTITLE: Simple Let's Encrypt CAA Record Example for DNS\nDESCRIPTION: A basic CAA record example that allows Let's Encrypt to issue certificates for a domain. This configuration permits only Let's Encrypt to issue certificates for example.org and its subdomains.\n\nLANGUAGE: dns\nCODE:\n```\nexample.org         CAA 0 issue \"letsencrypt.org\"\n```\n\n----------------------------------------\n\nTITLE: Checking Domain CAA Records Using dig Command in Shell\nDESCRIPTION: This command demonstrates how to check a domain's CAA records using the 'dig' DNS lookup utility. It queries for CAA record type (257) and specifies that the output should not include comments.\n\nLANGUAGE: shell\nCODE:\n```\n$ dig +nostats +nocomments +nocmd example.com type257\n```\n\n----------------------------------------\n\nTITLE: Date and Time Encoding in BER and DER\nDESCRIPTION: Examples showing how date and time values are encoded in BER and DER formats using UTCTime. The examples demonstrate the differences between BER encoding (which allows timezone offsets) and DER encoding (which requires UTC time with 'Z' notation).\n\nLANGUAGE: der\nCODE:\n```\n17 11 31 39 31 32 31 35 31 39 30 32 31 30 2d 30 38 30 30\n```\n\nLANGUAGE: der\nCODE:\n```\n17 0d 31 39 31 32 31 36 30 33 30 32 31 30 5a\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of OCTET STRING\nDESCRIPTION: DER encoding of an OCTET STRING containing four bytes (03, 02, 06, A0), showing the straightforward encoding of byte sequences.\n\nLANGUAGE: der\nCODE:\n```\n04 04 03 02 06 A0\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of AlgorithmIdentifier with SHA256WithRSA\nDESCRIPTION: Hexadecimal representation of the DER encoding for an AlgorithmIdentifier containing the SHA256WithRSA algorithm OID (1.2.840.113549.1.1.11) with NULL parameters as specified in RFC 8017.\n\nLANGUAGE: der\nCODE:\n```\n30 0d 06 09 2a 86 48 86 f7 0d 01 01 0b 05 00\n```\n\n----------------------------------------\n\nTITLE: DNS-01 Challenge TXT Record Location\nDESCRIPTION: The DNS TXT record location where a challenge token must be placed for DNS-01 validation. This record will contain a value derived from the token and account key.\n\nLANGUAGE: markdown\nCODE:\n```\n_acme-challenge.<YOUR_DOMAIN>\n```\n\n----------------------------------------\n\nTITLE: Configuring CAA DNS Records with issuewild Property\nDESCRIPTION: Example demonstrating how to configure a CAA record with the issuewild property to control which Certificate Authorities can issue wildcard certificates for a domain.\n\nLANGUAGE: plaintext\nCODE:\n```\nexample.com. IN CAA 0 issuewild \"example-ca.com\"\n```\n\n----------------------------------------\n\nTITLE: Installing mkcert for Locally-Trusted Certificates\nDESCRIPTION: Command to install mkcert on macOS using Homebrew, which allows developers to create locally-trusted development certificates without security warnings.\n\nLANGUAGE: bash\nCODE:\n```\nbrew install mkcert\n```\n\n----------------------------------------\n\nTITLE: OBJECT IDENTIFIER Encoding Example in DER\nDESCRIPTION: Example showing the DER encoding of the OID 1.2.840.113549.1.1.11 (representing sha256WithRSAEncryption). OIDs are encoded by combining the first two components and then representing each component in base 128 with bit 8 set in every byte except the last of each component.\n\nLANGUAGE: der\nCODE:\n```\n06 09 2a 86 48 86 f7 0d 01 01 0b\n```\n\n----------------------------------------\n\nTITLE: HTTP-01 Challenge URL Format\nDESCRIPTION: The URL pattern where a validation file must be placed for HTTP-01 challenges. The client puts a file containing the token and account key thumbprint at this location.\n\nLANGUAGE: markdown\nCODE:\n```\nhttp://<YOUR_DOMAIN>/.well-known/acme-challenge/<TOKEN>\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of dNSName in GeneralName\nDESCRIPTION: DER encoding of a GeneralName containing the dNSName 'example.com', using tag number 2 with context-specific tag class and IMPLICIT encoding method.\n\nLANGUAGE: der\nCODE:\n```\n82 0b 65 78 61 6d 70 6c 65 2e 63 6f 6d\n```\n\n----------------------------------------\n\nTITLE: Configuring CAA DNS Records for Multiple Certificate Authorities\nDESCRIPTION: Example showing how to configure CAA records to allow multiple certificate authorities to issue certificates for a domain, including Let's Encrypt and another provider.\n\nLANGUAGE: plaintext\nCODE:\n```\nexample.com. IN CAA 0 issue \"letsencrypt.org\"\nexample.com. IN CAA 0 issue \"example-ca.com\"\n```\n\n----------------------------------------\n\nTITLE: Defining ASN.1 SEQUENCE with Context-Specific Tags\nDESCRIPTION: ASN.1 definition of a Point SEQUENCE with optional fields using context-specific tags. This is a common approach to disambiguate optional fields of the same type.\n\nLANGUAGE: asn1\nCODE:\n```\nPoint ::= SEQUENCE {\n  x [0] INTEGER OPTIONAL,\n  y [1] INTEGER OPTIONAL\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Directory Struct with RenewalInfo Field in Golang\nDESCRIPTION: Modification of the Directory struct to include the 'renewalInfo' field for detecting ARI support in an ACME CA. This allows clients to check if a CA supports ARI by examining the directory object.\n\nLANGUAGE: golang\nCODE:\n```\ntype Directory struct {\n    NewNonceURL    string `json:\"newNonce\"`\n    NewAccountURL  string `json:\"newAccount\"`\n    NewOrderURL    string `json:\"newOrder\"`\n    NewAuthzURL    string `json:\"newAuthz\"`\n    RevokeCertURL  string `json:\"revokeCert\"`\n    KeyChangeURL   string `json:\"keyChange\"`\n    Meta           Meta   `json:\"meta\"`\n    RenewalInfo    string `json:\"renewalInfo\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Point Structure in ASN.1\nDESCRIPTION: Example of how to define a simple point structure with x, y coordinates and a label in ASN.1 notation. This demonstrates how ASN.1 provides a language-independent way to define data structures.\n\nLANGUAGE: asn1\nCODE:\n```\nPoint ::= SEQUENCE {\n  x INTEGER,\n  y INTEGER,\n  label UTF8String\n}\n```\n\n----------------------------------------\n\nTITLE: ASN.1 Definition for Certificate Policy Statement URI\nDESCRIPTION: Example from RFC 5280 showing how a Certificate Policy Statement URI is defined in ASN.1 using the IA5String type. This demonstrates real-world usage of ASN.1 in certificate specifications.\n\nLANGUAGE: asn1\nCODE:\n```\nCPSuri ::= IA5String\n```\n\n----------------------------------------\n\nTITLE: Configuring CAA DNS Records for Let's Encrypt\nDESCRIPTION: Example DNS record configuration to permit Let's Encrypt to issue certificates for a domain. Shows the CAA record format with issue parameter set to letsencrypt.org.\n\nLANGUAGE: plaintext\nCODE:\n```\nexample.com. IN CAA 0 issue \"letsencrypt.org\"\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Structure for Let's Encrypt E7 Intermediate CA\nDESCRIPTION: This shows the structure and contents of an X.509 certificate for Let's Encrypt's E7 intermediate certificate authority. The certificate is issued by ISRG Root X2, valid from March 2024 to March 2027, and includes standard X.509v3 extensions for a certificate authority with path length 0.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            c5:8a:85:a2:c6:23:45:e0:a8:c4:52:53:87:9f:59:3a\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X2\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = E7\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:41:e8:04:93:08:58:7f:be:37:30:0c:c0:a0:41:\n                    ea:fe:56:da:84:93:3e:c9:00:db:ab:67:12:cf:f9:\n                    4f:53:09:e8:a8:2f:ab:29:e5:9f:15:46:f4:5b:62:\n                    4e:0f:d4:83:41:99:b7:9f:40:72:45:1c:2c:5c:4a:\n                    32:a6:c2:db:c6:05:6a:65:ff:da:da:f0:75:b4:40:\n                    3b:14:68:95:b6:a8:e2:6a:71:e2:74:65:51:53:de:\n                    16:d4:1e:27:c1:33:fd\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                AE:48:9E:DC:87:1D:44:A0:6F:DA:A2:E5:60:74:04:78:C2:9C:00:80\n            X509v3 Authority Key Identifier: \n                keyid:7C:42:96:AE:DE:4B:48:3B:FA:92:F8:9E:8C:CF:6D:8B:A9:72:37:95\n\n            Authority Information Access: \n                CA Issuers - URI:http://x2.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x2.c.lencr.org/\n\n    Signature Algorithm: ecdsa-with-SHA384\n         30:66:02:31:00:fd:ee:4d:fb:08:c0:93:de:39:72:96:85:c4:\n         66:9e:30:2d:77:7f:2b:dd:6c:dc:d7:95:18:3d:1c:d7:44:97:\n         18:b9:99:77:48:e1:ac:f6:0b:29:0d:53:4e:e2:17:0a:84:02:\n         31:00:8a:13:c2:0e:4c:38:6f:50:6f:7c:b8:3c:54:d2:cb:b9:\n         a3:29:9f:54:5b:67:5e:bc:d9:c8:51:eb:33:51:0a:c7:b2:89:\n         ee:12:8f:24:c2:76:4b:ec:01:af:a8:99:04:9f\n```\n\n----------------------------------------\n\nTITLE: Basic CAA Record Format in DNS\nDESCRIPTION: The fundamental structure of a CAA record with an explanation of the flags, tag, and value fields. This format is used to define certificate issuance permissions for domains.\n\nLANGUAGE: dns\nCODE:\n```\nCAA <flags> <tag> <value>\n```\n\n----------------------------------------\n\nTITLE: ASN.1 IMPLICIT Tag Example Definition\nDESCRIPTION: A simple ASN.1 definition showing an IMPLICIT tag for a UTF8String. This demonstrates how to define a tag that uses the IMPLICIT encoding method.\n\nLANGUAGE: asn1\nCODE:\n```\n[5] IMPLICIT UTF8String\n```\n\n----------------------------------------\n\nTITLE: Human-Readable CAA Record Format\nDESCRIPTION: This command shows the human-readable format of a CAA record that allows Let's Encrypt to issue certificates for a domain. It demonstrates the standard format with flags (0), tag ('issue'), and authority value ('letsencrypt.org').\n\nLANGUAGE: shell\nCODE:\n```\nexample.com.             86400   IN      CAA     0 issue \"letsencrypt.org\"\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Structure for Let's Encrypt E5\nDESCRIPTION: This snippet shows the detailed structure of an X.509 certificate for Let's Encrypt E5, including version, serial number, signature algorithm, issuer, validity period, subject, public key information, and certificate extensions. The certificate is issued by ISRG Root X2 and valid from March 13, 2024 to March 12, 2027.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            18:6e:75:d4:ee:b0:a0:5d:fd:2d:a8:20:86:5d:1e:31\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X2\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = E5\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:0d:0b:3a:8a:6b:61:8e:b6:ef:dc:5f:58:e7:c6:\n                    42:45:54:ab:63:f6:66:61:48:0a:2e:59:75:b4:81:\n                    02:37:50:b7:3f:16:79:dc:98:ec:a1:28:97:72:20:\n                    1c:2c:cf:d5:7c:52:20:4e:54:78:5b:84:14:6b:c0:\n                    90:ae:85:ec:c0:51:41:3c:5a:87:7f:06:4d:d4:fe:\n                    60:d1:fa:6c:2d:e1:7d:95:10:88:a2:08:54:0f:99:\n                    1a:4c:e6:ea:0a:ac:d8\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                9F:2B:5F:CF:3C:21:4F:9D:04:B7:ED:2B:2C:C4:C6:70:8B:D2:D7:0D\n            X509v3 Authority Key Identifier: \n                keyid:7C:42:96:AE:DE:4B:48:3B:FA:92:F8:9E:8C:CF:6D:8B:A9:72:37:95\n\n            Authority Information Access: \n                CA Issuers - URI:http://x2.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x2.c.lencr.org/\n\n    Signature Algorithm: ecdsa-with-SHA384\n         30:64:02:30:1b:6d:2e:45:41:1c:45:3e:d9:5f:34:18:74:67:\n         13:79:ba:ab:29:b5:b6:10:4e:83:27:4a:8b:45:4e:c7:7b:cf:\n         f4:40:30:1d:61:a5:e6:1c:6d:a4:90:09:92:6e:46:4b:02:30:\n         46:29:18:84:34:7a:bc:fb:de:d8:1b:d8:19:a7:04:f5:cb:7e:\n         e7:6d:84:d9:da:8e:ea:ce:36:30:b9:a2:80:4c:2c:e6:60:12:\n         4b:a9:76:aa:e8:6d:95:47:da:72:09:0c\n```\n\n----------------------------------------\n\nTITLE: Defining TBSCertificate Structure in ASN.1\nDESCRIPTION: ASN.1 definition of a TBSCertificate structure as specified in RFC 5280. This structure defines the format for the encoded certificate data that will be signed, including version, serial number, signature algorithm, issuer, validity period, subject, public key information, and optional extensions.\n\nLANGUAGE: asn1\nCODE:\n```\nTBSCertificate  ::=  SEQUENCE  {\n     version         [0]  Version DEFAULT v1,\n     serialNumber         CertificateSerialNumber,\n     signature            AlgorithmIdentifier,\n     issuer               Name,\n     validity             Validity,\n     subject              Name,\n     subjectPublicKeyInfo SubjectPublicKeyInfo,\n     issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n                          -- If present, version MUST be v2 or v3\n     subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n                          -- If present, version MUST be v2 or v3\n     extensions      [3]  Extensions OPTIONAL\n                          -- If present, version MUST be v3 --  }\n```\n\n----------------------------------------\n\nTITLE: Converting root CA certificate to CRT format\nDESCRIPTION: This command converts a PEM format certificate to DER format and then to CRT format, which is needed for certain systems to recognize the root CA certificate.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl x509 -outform pem -in RootCA.pem -out RootCA.crt\n```\n\n----------------------------------------\n\nTITLE: Defining Optional Fields in ASN.1 SEQUENCE\nDESCRIPTION: Demonstrates how to define a Point structure with optional x and y integer fields, showing how this can lead to ambiguity in the encoded data as optional fields are omitted completely when not present.\n\nLANGUAGE: asn1\nCODE:\n```\nPoint ::= SEQUENCE {\n  x INTEGER OPTIONAL,\n  y INTEGER OPTIONAL\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Details for Let's Encrypt R4\nDESCRIPTION: Shows the detailed structure of the Let's Encrypt R4 intermediate certificate, including version, serial number, issuer, validity period, subject information, public key details, extensions, and signature information.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            8a:79:22:50:ab:e5:2c:52:6c:ee:cf:7f:c9:42:dd:62\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Sep  4 00:00:00 2020 GMT\n            Not After : Sep 15 16:00:00 2025 GMT\n        Subject: C = US, O = Let's Encrypt, CN = R4\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:b3:28:dc:77:29:d3:e7:91:be:f3:b7:0a:00:c7:\n                    fb:f2:55:0b:25:22:63:53:36:af:e9:08:20:df:0d:\n                    af:28:3e:cd:c6:ab:57:b6:9d:a4:25:19:a5:d2:32:\n                    6d:49:a6:08:b9:c7:2f:a1:9b:93:c5:20:40:6b:84:\n                    31:20:a2:8e:30:60:25:60:ef:d9:1a:89:3f:1f:69:\n                    71:b2:da:ea:3f:73:41:c4:90:6f:66:fd:7d:9e:58:\n                    d8:77:cf:cd:59:75:44:c9:a1:0a:7b:9f:3f:1b:0e:\n                    3a:66:6f:b6:75:cf:8b:cb:af:9d:c0:70:c5:ff:d2:\n                    82:0a:af:5d:cd:e2:e8:9c:85:94:a4:e6:00:35:e8:\n                    7e:4e:39:81:c7:21:89:60:77:ea:1d:96:f2:8b:83:\n                    7b:47:c4:6d:32:c0:52:7e:23:1e:45:b5:71:ee:a3:\n                    ef:17:c2:03:a9:93:89:dd:f5:9f:db:ba:f1:da:e0:\n                    7e:97:87:71:81:1e:1a:82:56:e4:3e:7c:18:a2:08:\n                    e5:16:5f:a8:fa:a8:e0:48:51:4d:18:14:a0:0c:a3:\n                    e5:b6:ca:b3:b5:55:12:6b:72:c7:5a:7f:3b:8c:f9:\n                    e7:d9:d1:8e:12:4d:33:33:03:2a:f1:13:e1:42:3c:\n                    c2:2e:59:60:2e:6d:e0:07:47:33:65:df:d2:67:ca:\n                    4d:85\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                36:9D:3E:E0:B1:40:F6:27:2C:7C:BF:8D:9D:31:8A:F6:54:A6:46:26\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: sha256WithRSAEncryption\n         89:6e:ee:42:6a:55:8e:f8:7f:80:cf:49:66:20:6d:78:0d:79:\n         a5:60:74:04:93:6e:ae:9a:3b:82:ca:2a:16:b3:68:9c:3a:56:\n         73:9c:f4:dc:66:f6:df:ab:4d:98:3c:71:93:0a:ed:dc:b6:08:\n         15:0d:42:c9:f9:fc:0e:c4:a7:a4:cc:8a:9e:c8:b3:64:a7:c7:\n         72:17:04:80:af:6d:c3:60:12:15:79:70:e9:c4:78:52:86:fb:\n         f4:30:b2:73:aa:a0:c5:05:31:d8:7b:55:f9:5f:66:3b:a2:88:\n         32:f9:40:c9:c5:5d:8d:db:8f:e0:67:c9:71:1b:85:6b:db:f5:\n         44:7d:43:ab:c3:84:e8:b2:5e:59:fb:5b:b3:39:db:d3:c8:17:\n         31:0f:f1:39:ac:68:13:2d:cc:e6:ba:57:2d:1f:2d:c8:31:39:\n         9d:4c:5a:f4:16:75:34:fc:73:10:a2:ab:96:42:e3:83:84:5a:\n         b3:32:a3:5c:b1:d6:e3:00:d5:01:c0:e1:10:ac:a2:3c:4b:2e:\n         be:6f:ce:24:1c:fe:cf:b4:ef:92:e0:89:3c:47:69:3b:65:e3:\n         25:13:52:66:c4:18:bf:3d:95:3c:eb:46:25:c1:3f:3f:a8:e6:\n         13:a0:21:d5:c8:38:e1:bf:ca:ae:b5:b7:f6:42:75:25:dd:25:\n         7c:ea:d8:76:23:54:10:13:5e:2c:d3:2e:c2:74:01:dc:1e:4c:\n         37:b0:01:1e:60:69:30:08:0e:f8:30:ef:95:16:d9:d8:6d:ff:\n         41:d8:90:4e:87:2c:96:6f:9d:3c:ee:b1:b3:8a:db:b9:31:30:\n         16:e3:55:fd:0f:04:de:5c:48:3e:6b:6e:2d:01:e8:6d:f9:8d:\n         4c:8a:89:c7:53:06:b8:8f:b1:41:fe:da:cd:dc:59:db:fe:bf:\n         74:fb:83:fa:e9:91:13:54:81:1c:8e:c7:94:48:c1:ce:c3:ac:\n         aa:bf:5d:3f:1f:f7:70:ff:ca:f6:10:35:22:9d:c0:41:5f:7a:\n         3d:0c:bd:d2:69:da:ab:6a:09:0a:cb:de:87:b4:c8:8b:72:a3:\n         0c:18:03:e6:d2:0b:62:d5:be:9f:6e:7b:ce:76:bd:26:ac:85:\n         48:29:7e:67:cc:e7:86:64:e4:5a:60:ba:12:0f:80:bc:aa:f1:\n         53:ed:4f:94:9b:a0:cc:a3:7e:9c:54:33:6c:3e:69:05:e7:be:\n         7f:b3:70:b6:0b:11:a2:08:f4:2a:57:13:e0:7c:d4:a1:fb:60:\n         8f:77:65:ef:d3:89:4d:7a:ec:3a:80:6f:3d:0e:53:a1:1e:ea:\n         05:29:19:66:3e:7a:26:fa:0c:2a:87:3d:d9:5c:c7:f3:4d:f9:\n         af:8e:b0:68:93:30:88:08\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for Let's Encrypt R3 CA\nDESCRIPTION: Detailed certificate information for Let's Encrypt's R3 intermediate CA, including issuer details, validity period, RSA public key (2048-bit), and X509v3 extensions. The certificate is signed using SHA-256 with RSA encryption.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            91:2b:08:4a:cf:0c:18:a7:53:f6:d6:2e:25:a7:5f:5a\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Sep  4 00:00:00 2020 GMT\n            Not After : Sep 15 16:00:00 2025 GMT\n        Subject: C = US, O = Let's Encrypt, CN = R3\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:bb:02:15:28:cc:f6:a0:94:d3:0f:12:ec:8d:55:\n                    92:c3:f8:82:f1:99:a6:7a:42:88:a7:5d:26:aa:b5:\n                    2b:b9:c5:4c:b1:af:8e:6b:f9:75:c8:a3:d7:0f:47:\n                    94:14:55:35:57:8c:9e:a8:a2:39:19:f5:82:3c:42:\n                    a9:4e:6e:f5:3b:c3:2e:db:8d:c0:b0:5c:f3:59:38:\n                    e7:ed:cf:69:f0:5a:0b:1b:be:c0:94:24:25:87:fa:\n                    37:71:b3:13:e7:1c:ac:e1:9b:ef:db:e4:3b:45:52:\n                    45:96:a9:c1:53:ce:34:c8:52:ee:b5:ae:ed:8f:de:\n                    60:70:e2:a5:54:ab:b6:6d:0e:97:a5:40:34:6b:2b:\n                    d3:bc:66:eb:66:34:7c:fa:6b:8b:8f:57:29:99:f8:\n                    30:17:5d:ba:72:6f:fb:81:c5:ad:d2:86:58:3d:17:\n                    c7:e7:09:bb:f1:2b:f7:86:dc:c1:da:71:5d:d4:46:\n                    e3:cc:ad:25:c1:88:bc:60:67:75:66:b3:f1:18:f7:\n                    a2:5c:e6:53:ff:3a:88:b6:47:a5:ff:13:18:ea:98:\n                    09:77:3f:9d:53:f9:cf:01:e5:f5:a6:70:17:14:af:\n                    63:a4:ff:99:b3:93:9d:dc:53:a7:06:fe:48:85:1d:\n                    a1:69:ae:25:75:bb:13:cc:52:03:f5:ed:51:a1:8b:\n                    db:15\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                14:2E:B3:17:B7:58:56:CB:AE:50:09:40:E6:1F:AF:9D:8B:14:C2:C6\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: sha256WithRSAEncryption\n         85:ca:4e:47:3e:a3:f7:85:44:85:bc:d5:67:78:b2:98:63:ad:\n         75:4d:1e:96:3d:33:65:72:54:2d:81:a0:ea:c3:ed:f8:20:bf:\n         5f:cc:b7:70:00:b7:6e:3b:f6:5e:94:de:e4:20:9f:a6:ef:8b:\n         b2:03:e7:a2:b5:16:3c:91:ce:b4:ed:39:02:e7:7c:25:8a:47:\n         e6:65:6e:3f:46:f4:d9:f0:ce:94:2b:ee:54:ce:12:bc:8c:27:\n         4b:b8:c1:98:2f:a2:af:cd:71:91:4a:08:b7:c8:b8:23:7b:04:\n         2d:08:f9:08:57:3e:83:d9:04:33:0a:47:21:78:09:82:27:c3:\n         2a:c8:9b:b9:ce:5c:f2:64:c8:c0:be:79:c0:4f:8e:6d:44:0c:\n         5e:92:bb:2e:f7:8b:10:e1:e8:1d:44:29:db:59:20:ed:63:b9:\n         21:f8:12:26:94:93:57:a0:1d:65:04:c1:0a:22:ae:10:0d:43:\n         97:a1:18:1f:7e:e0:e0:86:37:b5:5a:b1:bd:30:bf:87:6e:2b:\n         2a:ff:21:4e:1b:05:c3:f5:18:97:f0:5e:ac:c3:a5:b8:6a:f0:\n         2e:bc:3b:33:b9:ee:4b:de:cc:fc:e4:af:84:0b:86:3f:c0:55:\n         43:36:f6:68:e1:36:17:6a:8e:99:d1:ff:a5:40:a7:34:b7:c0:\n         d0:63:39:35:39:75:6e:f2:ba:76:c8:93:02:e9:a9:4b:6c:17:\n         ce:0c:02:d9:bd:81:fb:9f:b7:68:d4:06:65:b3:82:3d:77:53:\n         f8:8e:79:03:ad:0a:31:07:75:2a:43:d8:55:97:72:c4:29:0e:\n         f7:c4:5d:4e:c8:ae:46:84:30:d7:f2:85:5f:18:a1:79:bb:e7:\n         5e:70:8b:07:e1:86:93:c3:b9:8f:dc:61:71:25:2a:af:df:ed:\n         25:50:52:68:8b:92:dc:e5:d6:b5:e3:da:7d:d0:87:6c:84:21:\n         31:ae:82:f5:fb:b9:ab:c8:89:17:3d:e1:4c:e5:38:0e:f6:bd:\n         2b:bd:96:81:14:eb:d5:db:3d:20:a7:7e:59:d3:e2:f8:58:f9:\n         5b:b8:48:cd:fe:5c:4f:16:29:fe:1e:55:23:af:c8:11:b0:8d:\n         ea:7c:93:90:17:2f:fd:ac:a2:09:47:46:3f:f0:e9:b0:b7:ff:\n         28:4d:68:32:d6:67:5e:1e:69:a3:93:b8:f5:9d:8b:2f:0b:d2:\n         52:43:a6:6f:32:57:65:4d:32:81:df:38:53:85:5d:7e:5d:66:\n         29:ea:b8:dd:e4:95:b5:cd:b5:56:12:42:cd:c4:4e:c6:25:38:\n         44:50:6d:ec:ce:00:55:18:fe:e9:49:64:d4:4e:ca:97:9c:b4:\n         5b:c0:73:a8:ab:b8:47:c2\n```\n\n----------------------------------------\n\nTITLE: Revoking Certificate with Reason Code in Let's Encrypt\nDESCRIPTION: This command shows how to revoke a Let's Encrypt certificate while specifying a reason code for the revocation. Reason codes help indicate why a certificate is being revoked.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-path /etc/letsencrypt/archive/${YOUR_DOMAIN}/cert1.pem \\\n--reason keycompromise\n```\n\n----------------------------------------\n\nTITLE: Encoding a Point with Only x Value in DER Format\nDESCRIPTION: Shows the DER encoding of a Point with only the x coordinate set to 9. The encoding begins with 30 (SEQUENCE marker) followed by length and value bytes.\n\nLANGUAGE: der\nCODE:\n```\n‎30 03 02 01 09\n```\n\n----------------------------------------\n\nTITLE: Revoking Certificate Using Certbot with Certificate Path\nDESCRIPTION: This command shows how to revoke a certificate using Certbot by specifying the path to the certificate file with the --cert-path parameter.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-path /etc/letsencrypt/live/example.com/cert.pem\n```\n\n----------------------------------------\n\nTITLE: Setting up basic CAA records for Let's Encrypt\nDESCRIPTION: This configuration authorizes Let's Encrypt to issue certificates for a domain using the 'issue' tag with Let's Encrypt's domain identifiers.\n\nLANGUAGE: DNS\nCODE:\n```\nexample.com. IN CAA 0 issue \"letsencrypt.org\"\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for ISRG Root X2\nDESCRIPTION: Complete X.509 certificate structure for ISRG Root X2, signed by ISRG Root X1. The certificate uses ECDSA with secp384r1 curve and is valid from 2020 to 2025. It contains extensions for key usage, basic constraints, and other certificate policies.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            07:9e:49:28:86:37:6f:d4:08:48:c2:3f:c6:31:e4:63\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Sep  4 00:00:00 2020 GMT\n            Not After : Sep 15 16:00:00 2025 GMT\n        Subject: C = US, O = Internet Security Research Group, CN = ISRG Root X2\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:cd:9b:d5:9f:80:83:0a:ec:09:4a:f3:16:4a:3e:\n                    5c:cf:77:ac:de:67:05:0d:1d:07:b6:dc:16:fb:5a:\n                    8b:14:db:e2:71:60:c4:ba:45:95:11:89:8e:ea:06:\n                    df:f7:2a:16:1c:a4:b9:c5:c5:32:e0:03:e0:1e:82:\n                    18:38:8b:d7:45:d8:0a:6a:6e:e6:00:77:fb:02:51:\n                    7d:22:d8:0a:6e:9a:5b:77:df:f0:fa:41:ec:39:dc:\n                    75:ca:68:07:0c:1f:ea\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Subject Key Identifier: \n                7C:42:96:AE:DE:4B:48:3B:FA:92:F8:9E:8C:CF:6D:8B:A9:72:37:95\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: sha256WithRSAEncryption\n         1b:7f:25:2b:90:7a:08:76:00:77:18:e1:c3:2e:8a:36:4c:41:\n         7e:bf:17:4b:e3:30:d7:5b:0c:7e:9c:96:98:6f:7b:b0:68:c0:\n         24:44:cc:e2:f2:fc:d1:ea:db:d2:9f:01:f9:17:4d:0c:9d:55:\n         fd:a5:ad:6d:d2:2f:3f:4b:72:c0:2e:ae:73:c7:25:16:57:c2:\n         3e:15:ad:e0:31:d1:0a:84:84:6c:62:78:42:31:22:46:1a:ed:\n         7a:40:bf:97:16:81:44:77:ca:6c:7b:5d:21:5c:07:f2:11:91:\n         21:bf:e1:2f:c2:ef:6e:fd:05:20:e4:b4:f7:79:f3:2d:bb:37:\n         2a:f0:c6:b1:ac:ac:51:f5:1f:b3:5a:1e:66:ce:58:07:18:38:\n         7f:71:a9:3c:83:ba:d7:bc:82:9e:9a:76:0f:9e:b0:29:fd:cb:\n         f3:89:07:48:1b:fe:ab:93:2e:14:21:0d:5f:af:8e:b7:54:ab:\n         5d:0e:d4:5b:4c:71:d0:92:ea:3d:a3:36:9b:7c:1f:e0:3b:55:\n         b9:d8:53:53:cc:83:66:bb:4a:dc:81:06:00:18:8b:f4:b3:d7:\n         48:b1:13:41:b9:c4:b6:9e:cf:2c:77:8e:42:20:0b:80:7e:9f:\n         c5:ab:48:db:bc:6f:04:8d:6c:46:29:02:0d:70:8a:1d:f1:12:\n         73:b6:46:24:42:9e:2a:17:18:e3:ac:c7:98:c2:72:cc:6d:2d:\n         76:6d:dd:2c:2b:26:96:a5:cf:21:08:1b:e5:da:2f:cb:ef:9f:\n         73:93:ae:f8:36:5f:47:8f:97:28:ce:ab:e2:98:26:98:8b:fd:\n         ee:28:32:22:29:ed:4c:95:09:c4:20:fa:07:e1:86:2c:44:f6:\n         81:47:c0:e4:62:32:ed:1d:d8:3c:48:88:96:c3:5e:91:b6:af:\n         7b:59:a4:ee:e3:86:9c:c7:88:58:ca:28:2a:66:55:9b:85:80:\n         b9:1d:d8:40:2b:c9:1c:13:3c:a9:eb:de:99:c2:16:40:f6:f5:\n         a4:ae:2a:25:6c:52:ba:c7:04:4c:b4:32:bb:fc:38:5c:a0:0c:\n         61:7b:57:ec:77:4e:50:cf:af:06:a2:0f:37:8c:e1:0e:d2:d3:\n         2f:1a:bd:9c:71:3e:cc:e1:f8:d1:a8:a3:bd:04:f6:19:c0:f9:\n         86:af:f5:0e:1a:aa:95:6b:ef:ca:47:71:4b:63:1c:4d:96:db:\n         55:23:0a:9d:0f:81:75:a0:e6:40:f5:64:46:03:6e:ce:fa:6a:\n         7d:06:ec:a4:34:06:74:da:53:d8:b9:b8:c6:23:7d:a9:f8:2a:\n         2d:a4:82:a6:2e:2d:11:ca:e6:cd:31:58:79:85:e6:72:1c:a7:\n         9f:d3:4c:d0:66:d0:a7:bb\n```\n\n----------------------------------------\n\nTITLE: ASN.1 Definition of GeneralName CHOICE\nDESCRIPTION: ASN.1 module definition for GeneralName from RFC 5280, demonstrating a CHOICE type with encoding instructions to differentiate between options with the same underlying type.\n\nLANGUAGE: asn1\nCODE:\n```\n   GeneralName ::= CHOICE {\n        otherName                       [0]     OtherName,\n        rfc822Name                      [1]     IA5String,\n        dNSName                         [2]     IA5String,\n        x400Address                     [3]     ORAddress,\n        directoryName                   [4]     Name,\n        ediPartyName                     [5]     EDIPartyName,\n        uniformResourceIdentifier       [6]     IA5String,\n        iPAddress                       [7]     OCTET STRING,\n        registeredID                    [8]     OBJECT IDENTIFIER }\n```\n\n----------------------------------------\n\nTITLE: Creating a New Order with Profile Selection in ACME\nDESCRIPTION: Example HTTP request showing how to include a profile selection when creating a new certificate order using the ACME protocol.\n\nLANGUAGE: bash\nCODE:\n```\nPOST /acme/new-order HTTP/1.1\nHost: example.com\nContent-Type: application/jose+json\n\n{\n    \"protected\": base64url(...),\n    \"payload\": base64url({\n        \"profile\": \"tlsserver\",\n        \"identifiers\": [\n            { \"type\": \"dns\", \"value\": \"www.example.org\" },\n            { \"type\": \"dns\", \"value\": \"example.org\" }\n        ],\n    }),\n    \"signature\": \"H6ZXtGjTZyUnPeKn...wEA4TklBdh3e454g\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using Context-specific Tags for Disambiguation in ASN.1\nDESCRIPTION: Shows a more common approach to distinguishing optional fields by using context-specific tags (represented by numbers in brackets) instead of APPLICATION tags.\n\nLANGUAGE: asn1\nCODE:\n```\nPoint ::= SEQUENCE {\n  x [0] INTEGER OPTIONAL,\n  y [1] INTEGER OPTIONAL\n}\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate Structure for Let's Encrypt Staging CA\nDESCRIPTION: This displays the complete X.509 certificate structure for a Let's Encrypt staging intermediate certificate (False Fennel E6). The certificate is valid from March 13, 2024 to March 12, 2027, uses ECDSA with SHA384 for signatures, and contains various extensions defining its capabilities as a Certificate Authority with a path length constraint of 0.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            86:c7:5f:0f:db:23:8a:90:7d:41:1b:42:b4:0c:0f:55\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Bogus Broccoli X2\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) False Fennel E6\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:ee:62:2c:84:40:1b:7e:76:61:5c:79:82:2d:38:\n                    5a:80:1a:bc:c0:d2:98:f3:86:24:53:29:d8:f3:7b:\n                    c1:a3:c1:46:20:57:41:43:bc:50:57:73:6b:3e:48:\n                    62:74:c5:f2:5b:86:90:70:00:f1:17:fb:24:02:76:\n                    40:b2:f9:e3:c5:1f:a8:0a:76:19:02:d0:57:81:e1:\n                    3e:58:50:3a:14:4e:ff:7e:bf:de:71:b4:e0:96:c0:\n                    20:a7:9f:5e:00:36:43\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                A1:74:1A:06:6D:50:B7:86:2D:4A:2C:C1:7E:B4:8D:88:49:6C:CD:16\n            X509v3 Authority Key Identifier: \n                DE:D1:A3:59:64:0E:C1:9A:36:A3:46:EE:B0:10:76:EF:AE:97:95:66\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x2.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x2.c.lencr.org/\n    Signature Algorithm: ecdsa-with-SHA384\n    Signature Value:\n        30:66:02:31:00:a6:90:87:4e:1b:0e:e4:6c:eb:7e:fb:17:ac:\n        b0:21:a4:02:47:39:04:5a:d5:85:4f:ad:ce:bc:f9:24:37:fb:\n        0d:6f:98:d9:b9:05:51:43:ef:0b:15:3d:13:a5:43:0f:49:02:\n        31:00:ee:d2:02:ed:8e:4f:29:b0:f8:c3:cf:0d:32:7a:b8:32:\n        91:39:0b:08:0b:a2:84:b7:6e:1a:9b:51:08:34:55:45:18:2f:\n        e2:3e:b2:3a:7d:79:65:a7:fd:a4:5f:82:04:90\n```\n\n----------------------------------------\n\nTITLE: Creating an ARI CertID from Certificate Properties in Golang\nDESCRIPTION: Function that constructs an ARI Certificate ID by combining the base64url encoded Authority Key Identifier and Serial Number from an X.509 certificate, following the specification in draft-ietf-acme-ari-03.\n\nLANGUAGE: golang\nCODE:\n```\n// MakeARICertID constructs a certificate identifier as described in\n// draft-ietf-acme-ari-03, section 4.1.\n\nfunc MakeARICertID(leaf *x509.Certificate) (string, error) {\n  if leaf == nil {\n    return \"\", errors.New(\"leaf certificate is nil\")\n  }\n\n  // Marshal the Serial Number into DER.\n  der, err := asn1.Marshal(leaf.SerialNumber)\n  if err != nil {\n    return \"\", err\n  }\n\n  // Check if the DER encoded bytes are sufficient (at least 3 bytes: tag,\n  // length, and value).\n  if len(der) < 3 {\n    return \"\", errors.New(\"invalid DER encoding of serial number\")\n  }\n\n  // Extract only the integer bytes from the DER encoded Serial Number\n  // Skipping the first 2 bytes (tag and length). The result is base64url\n  // encoded without padding.\n  serial := base64.RawURLEncoding.EncodeToString(der[2:])\n\n  // Convert the Authority Key Identifier to base64url encoding without\n  // padding.\n  aki := base64.RawURLEncoding.EncodeToString(leaf.AuthorityKeyId)\n\n  // Construct the final identifier by concatenating AKI and Serial Number.\n  return fmt.Sprintf(\"%s.%s\", aki, serial), nil\n}\n```\n\n----------------------------------------\n\nTITLE: Revoking Certificate Using Certbot\nDESCRIPTION: This command demonstrates how to revoke a certificate using Certbot, with the --cert-name parameter to specify which certificate to revoke.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-name example.com\n```\n\n----------------------------------------\n\nTITLE: Updating Email Address for Let's Encrypt Account with Certbot\nDESCRIPTION: Command to update the email address associated with a Let's Encrypt account using Certbot. This can be used to effectively resubscribe to expiration notifications after unsubscribing, by using an email alias.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot update_account --email yourname+1@example.com\n```\n\n----------------------------------------\n\nTITLE: Updating Email Address for Let's Encrypt Account Using Certbot\nDESCRIPTION: Command to update the email address associated with a Let's Encrypt account using Certbot. This can be used to effectively re-subscribe to expiration emails after previously unsubscribing.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot update_account --email yourname+1@example.com\n```\n\n----------------------------------------\n\nTITLE: Updating Email Address for Let's Encrypt Notifications with Certbot\nDESCRIPTION: Command to update the email address associated with your Let's Encrypt account using Certbot. This can be used to effectively resubscribe to expiration notifications after unsubscribing.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot update_account --email yourname+1@example.com\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate Structure for Let's Encrypt Staging Certificate\nDESCRIPTION: This X.509 certificate represents a staging certificate from Let's Encrypt's certificate authority infrastructure. It contains the complete certificate data including version, serial number, issuer information, validity period, subject details, public key information (using ECDSA with a P-384 curve), and various X.509v3 extensions that define the certificate's capabilities and constraints.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            bb:0b:32:66:26:ba:66:57:3c:bc:65:7e:58:be:4c:f6\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Bogus Broccoli X2\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Pseudo Plum E5\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:e5:8d:b6:dc:57:e9:aa:59:96:b7:83:ec:f4:6c:\n                    33:ae:06:96:4e:b5:b8:b8:f2:22:bd:ae:32:ed:3d:\n                    d4:54:d1:6b:20:56:9e:77:31:6d:e7:5c:55:3a:a9:\n                    56:15:cc:46:1a:61:de:8f:4a:67:9c:d1:38:f7:47:\n                    9c:c4:a7:9f:c5:f9:cb:8e:8d:37:61:dc:09:13:33:\n                    36:26:d6:d9:1f:96:87:0f:04:de:40:3c:76:19:fb:\n                    be:96:c5:96:9d:ab:e5\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                FC:46:D1:01:43:5F:BB:7B:A6:3D:30:68:AE:11:BA:E0:BC:6D:C9:D3\n            X509v3 Authority Key Identifier: \n                DE:D1:A3:59:64:0E:C1:9A:36:A3:46:EE:B0:10:76:EF:AE:97:95:66\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x2.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x2.c.lencr.org/\n    Signature Algorithm: ecdsa-with-SHA384\n    Signature Value:\n        30:66:02:31:00:98:61:b0:6b:92:02:c0:59:ab:a4:f2:74:75:\n        d6:a2:00:b8:f8:5f:c3:86:fa:76:89:5c:a7:1c:86:6a:46:56:\n        24:c2:ff:6f:f0:17:67:29:7c:a3:3d:57:eb:89:15:e9:3a:02:\n        31:00:a1:1b:d0:58:a9:ce:29:9e:ca:b5:f5:fc:a3:31:24:c1:\n        0d:33:c8:a6:12:5b:af:9e:55:fa:db:e2:fd:cf:81:e5:df:74:\n        33:23:44:af:64:98:4e:53:7f:f4:8f:f8:40:84\n```\n\n----------------------------------------\n\nTITLE: Creating certificates for localhost and other domains with mkcert\nDESCRIPTION: This command creates certificates for localhost, 127.0.0.1, and other specified domains using mkcert, which automatically adds them to the trust store.\n\nLANGUAGE: bash\nCODE:\n```\nmkcert localhost 127.0.0.1 ::1 your-custom-domain.test\n```\n\n----------------------------------------\n\nTITLE: Encoding a Point with Only x Value Using Context-specific Tags\nDESCRIPTION: Demonstrates how to encode a Point with only x=9 using context-specific tags, setting bits 8 and 7 to (1,0) and lower bits to 0.\n\nLANGUAGE: der\nCODE:\n```\n‎30 03 80 01 09\n```\n\n----------------------------------------\n\nTITLE: Revogando Certificado Baixado em Bash\nDESCRIPTION: Comando para revogar um certificado após validar controle sobre os domínios e baixar o certificado de um serviço como crt.sh. Especifica o caminho para o certificado baixado e o motivo da revogação.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-path /PATH/TO/downloaded-cert.pem --reason keycompromise\n```\n\n----------------------------------------\n\nTITLE: Specifying Staging Environment in Certbot\nDESCRIPTION: Example of how to use Let's Encrypt's staging environment with Certbot to avoid hitting rate limits during testing. The --staging flag tells Certbot to use the staging server instead of production.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot --staging --nginx -d example.com\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Structure for Let's Encrypt Staging Certificate\nDESCRIPTION: A complete X.509 certificate in text format showing the structure of a Let's Encrypt staging intermediate certificate. Contains version, serial number, signature algorithm, issuer, validity period, subject information, public key details, and X509v3 extensions.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            33:54:96:a6:c6:d1:18:91:2f:7f:3a:c4:28:93:3a:d5\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Not Nectarine R14\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\n                Modulus:\n                    00:94:d4:ec:8a:02:8c:20:ec:cd:4b:a0:c1:d4:21:\n                    ae:47:39:31:fc:e7:2b:c8:92:a8:85:7d:fb:9e:de:\n                    14:89:90:91:5c:20:c7:9a:43:37:3b:e8:26:7c:93:\n                    a5:e7:63:34:9e:1b:00:6a:30:9b:32:e4:e2:bd:b8:\n                    ac:6f:cc:56:0d:3f:9f:1b:af:6f:8b:f4:50:cc:e3:\n                    5e:d2:af:92:40:12:85:5a:d2:83:99:81:48:63:f7:\n                    ef:d8:3e:68:5b:21:69:2f:90:3b:5b:a9:85:d7:f8:\n                    72:d5:12:d2:56:14:e1:9e:5e:ab:87:68:5e:f6:34:\n                    c0:14:4c:97:79:01:6e:ad:7b:38:c6:00:9c:18:2b:\n                    2d:83:9f:51:c8:0b:16:7d:5d:af:88:da:b3:be:5e:\n                    b5:09:93:89:2c:cb:77:23:68:a8:49:82:aa:98:1d:\n                    54:1d:e1:16:de:6b:52:8b:24:12:57:9c:ec:87:78:\n                    37:bf:88:c3:be:92:d9:da:24:e5:e8:a5:7f:85:5e:\n                    fd:fd:57:7e:55:52:c9:61:16:6d:09:a0:52:67:8b:\n                    2e:c1:cd:64:ee:d0:8a:98:b3:57:e2:fb:aa:35:3d:\n                    b8:22:ff:e4:0f:50:8f:d5:cb:92:62:fe:22:d3:9e:\n                    e4:4f:9c:bd:f9:4f:72:61:95:f8:63:a6:67:3f:9c:\n                    6e:31\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                4D:D3:36:62:68:95:05:F9:64:12:0E:FC:DD:E0:2C:1F:81:2B:AC:F6\n            X509v3 Authority Key Identifier: \n                B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n    Signature Algorithm: sha256WithRSAEncryption\n    Signature Value:\n        45:5b:6b:db:79:09:dd:b7:15:50:ba:3f:f2:00:75:43:32:48:\n        8d:42:ac:aa:48:a0:12:4f:45:20:fc:76:f0:f1:cc:0e:9c:2f:\n        19:10:c6:5a:36:10:e0:72:13:86:ac:2e:83:27:31:81:eb:9e:\n        14:9b:67:57:72:fa:e6:f0:28:c1:cf:d7:93:73:06:28:a2:fe:\n        a4:fc:23:e6:77:fa:c5:df:36:f8:66:be:3c:15:76:58:6a:f0:\n        85:89:1f:b3:d8:b9:eb:10:7d:88:7d:47:7b:b7:b6:d6:fe:54:\n        e0:1e:02:4e:b6:fa:dc:b2:ca:99:fa:33:e4:e2:00:ef:fb:56:\n        ba:91:dc:72:09:85:a7:01:19:bb:3a:da:72:bf:73:f4:aa:41:\n        5a:7b:ef:f6:3d:b1:34:7c:68:94:d9:7f:70:7e:97:d8:30:25:\n        b4:c3:67:01:7a:5e:5b:a7:3a:fd:e9:1e:e3:02:00:85:b1:9a:\n        39:bf:1f:d4:99:da:c8:99:79:55:fc:e5:08:45:4e:8d:3a:25:\n        bc:fb:57:b4:ac:48:ca:ed:06:ed:cb:81:91:ab:49:05:4d:52:\n        e5:5e:49:6c:ee:20:7f:d5:bc:3b:0b:9a:26:fd:8c:de:f8:5f:\n        9c:8b:87:f8:93:a8:00:72:66:2e:46:fa:0a:64:40:5e:2a:a3:\n        d0:2e:21:03:5d:18:80:26:70:92:8d:db:e3:38:55:08:53:29:\n        93:fc:90:3d:50:9d:20:0e:b9:c5:37:2f:87:19:92:84:a6:f0:\n        00:e0:c1:41:38:99:c6:43:88:32:da:a6:ed:f1:57:53:e0:09:\n        05:18:ee:d3:9e:d3:91:a1:7b:b6:ba:36:00:31:87:6b:cd:ad:\n        4a:69:df:a8:0a:d6:01:e1:cb:32:4e:ec:43:81:0d:1e:0c:dd:\n        f6:1f:39:36:d9:68:54:48:93:12:60:fe:dd:9d:af:a5:f5:a9:\n        9a:f9:b8:76:8e:85:35:b7:81:c4:c3:3b:62:db:74:c4:06:26:\n        cf:97:62:bd:4c:64:3e:fa:38:43:98:2d:71:29:d6:44:31:f9:\n        9e:b2:1f:9e:23:2c:84:3d:da:9b:62:b4:38:55:2a:de:4d:f9:\n        4c:1e:de:52:43:10:e5:24:3b:95:81:1f:79:00:10:e1:0b:96:\n        39:e5:57:4c:6b:ce:38:fe:b3:1b:42:41:92:e3:7b:55:04:8e:\n        1c:da:26:8d:53:d1:b4:26:ee:97:87:66:3c:bc:4c:e3:e0:ea:\n        b3:f4:9a:e1:b3:7d:69:11:74:00:0b:f3:e4:ad:77:d7:a9:16:\n        4f:01:0f:52:3a:3b:89:ab:46:c2:4e:b5:70:1c:be:91:46:86:\n        14:11:10:bd:66:9d:fd:5f\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for ISRG Root X2\nDESCRIPTION: Detailed X.509 certificate structure showing the ISRG Root X2 root certificate information. The certificate uses ECDSA with SHA384 signatures, a 384-bit ECC key, and is valid from September 4, 2020 to September 17, 2040. It includes critical extensions for certificate signing.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            41:d2:9d:d1:72:ea:ee:a7:80:c1:2c:6c:e9:2f:87:52\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X2\n        Validity\n            Not Before: Sep  4 00:00:00 2020 GMT\n            Not After : Sep 17 16:00:00 2040 GMT\n        Subject: C = US, O = Internet Security Research Group, CN = ISRG Root X2\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:cd:9b:d5:9f:80:83:0a:ec:09:4a:f3:16:4a:3e:\n                    5c:cf:77:ac:de:67:05:0d:1d:07:b6:dc:16:fb:5a:\n                    8b:14:db:e2:71:60:c4:ba:45:95:11:89:8e:ea:06:\n                    df:f7:2a:16:1c:a4:b9:c5:c5:32:e0:03:e0:1e:82:\n                    18:38:8b:d7:45:d8:0a:6a:6e:e6:00:77:fb:02:51:\n                    7d:22:d8:0a:6e:9a:5b:77:df:f0:fa:41:ec:39:dc:\n                    75:ca:68:07:0c:1f:ea\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Subject Key Identifier: \n                7C:42:96:AE:DE:4B:48:3B:FA:92:F8:9E:8C:CF:6D:8B:A9:72:37:95\n    Signature Algorithm: ecdsa-with-SHA384\n         30:65:02:30:7b:79:4e:46:50:84:c2:44:87:46:1b:45:70:ff:\n         58:99:de:f4:fd:a4:d2:55:a6:20:2d:74:d6:34:bc:41:a3:50:\n         5f:01:27:56:b4:be:27:75:06:af:12:2e:75:98:8d:fc:02:31:\n         00:8b:f5:77:6c:d4:c8:65:aa:e0:0b:2c:ee:14:9d:27:37:a4:\n         f9:53:a5:51:e4:29:83:d7:f8:90:31:5b:42:9f:0a:f5:fe:ae:\n         00:68:e7:8c:49:0f:b6:6f:5b:5b:15:f2:e7\n```\n\n----------------------------------------\n\nTITLE: Setting CAA Record with Issuewild Flag\nDESCRIPTION: Example of configuring a DNS CAA record with the 'issuewild' flag to specifically allow wildcard certificates to be issued by Let's Encrypt.\n\nLANGUAGE: dns\nCODE:\n```\nexample.com. CAA 0 issuewild \"letsencrypt.org\"\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of IMPLICIT Tagged UTF8String\nDESCRIPTION: Shows the actual DER encoding bytes for a UTF8String \"hi\" with IMPLICIT tag 5, resulting in a compact representation.\n\nLANGUAGE: der\nCODE:\n```\n‎85 02 68 69\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Analysis for Let's Encrypt R14\nDESCRIPTION: Complete X.509 certificate details for Let's Encrypt R14, including issuer information, validity period, public key data, and extension fields. This intermediate certificate is used in the Let's Encrypt certificate chain.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            be:f3:73:78:a8:70:2a:9e:c0:a4:7a:b9:21:a5:06:ab\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = R14\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:cd:68:54:6c:99:2f:d4:c4:df:14:5e:e2:84:bc:\n                    a5:a7:98:da:8a:d5:d5:9e:0e:b2:11:ea:ee:13:bd:\n                    7f:73:44:cb:ab:f6:d9:e3:7f:0f:2e:23:cd:af:72:\n                    35:aa:9e:ba:1d:aa:8e:00:d6:d0:e8:44:e0:d1:28:\n                    ee:05:b5:a7:83:b5:4b:1c:6e:0c:d6:f4:27:c7:8d:\n                    04:c9:76:f8:32:7a:9e:8b:02:2e:71:bc:9f:12:b6:\n                    ac:19:f4:ec:4b:b1:34:ba:50:bb:b8:9d:c6:f3:43:\n                    9e:00:64:25:ef:a4:6f:ab:fa:8e:60:e4:7c:9f:d5:\n                    68:7d:97:db:48:a8:90:90:78:d4:13:8c:8f:d7:c6:\n                    0a:b9:be:c4:cb:c2:f4:8b:bf:96:89:b6:5d:ec:e6:\n                    0b:b5:c1:83:c5:9c:20:af:9e:ab:e6:24:98:49:51:\n                    65:e9:ce:22:86:8a:76:23:cd:60:d8:19:01:18:f6:\n                    0b:ca:00:d2:92:d5:56:57:3d:7f:72:78:c7:1f:eb:\n                    bb:b9:bb:79:86:19:70:fc:6c:2c:39:a2:5f:22:3a:\n                    c5:87:0d:ca:69:f4:09:ca:f2:71:6a:7a:5f:09:24:\n                    93:4a:1c:d1:f7:08:4b:4d:22:95:94:7d:80:d7:be:\n                    b5:74:76:9c:79:69:01:46:a7:15:dc:79:2e:14:81:\n                    88:95\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                E5:10:95:D8:B6:0C:51:D7:A7:72:35:63:0A:54:68:6E:06:53:F8:FB\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n    Signature Algorithm: sha256WithRSAEncryption\n         20:37:2e:d1:57:1f:c7:90:5c:ba:2f:3c:6c:e9:ed:cd:97:13:\n         4f:e3:98:4a:7b:b6:89:22:79:cb:92:74:77:c8:52:83:0c:60:\n         b8:c8:4e:90:8d:6e:2f:76:0b:3a:7e:aa:b6:8b:9a:9d:1e:2f:\n         2e:90:10:4e:70:9e:f3:1e:e5:ff:5f:80:4d:b8:ca:4f:04:a6:\n         c2:f0:d0:91:2b:f4:bf:2d:a9:65:17:0b:52:a9:8e:c4:f7:c9:\n         d8:5b:59:1e:f4:8b:88:04:94:1b:d7:9e:31:89:73:a1:e7:53:\n         cd:2f:7a:a0:01:1c:43:94:f1:3b:80:57:07:ab:06:a1:f8:ef:\n         d6:4b:65:25:fe:7b:30:1f:9f:d4:1c:62:25:3d:af:c9:15:31:\n         b7:92:a1:28:90:63:7f:4b:e9:02:bf:df:0e:25:98:c6:7d:5e:\n         81:8c:fb:d6:21:26:57:48:6e:90:4d:82:29:28:36:07:0e:a7:\n         7c:9a:43:1b:1f:b0:4e:a2:c6:30:59:fc:6e:8e:49:d8:bb:29:\n         8e:35:6b:f4:1d:cd:e2:22:4b:2e:1d:0d:5f:11:e2:96:05:f4:\n         51:21:a2:0a:54:fd:3f:df:0f:db:44:ee:01:0e:f3:5b:c6:2c:\n         ec:a1:51:29:48:d8:4c:ec:25:e1:f4:94:0b:7d:34:83:79:08:\n         fb:5c:a2:88:fd:65:5d:e0:92:e6:30:85:03:1d:86:20:4c:fe:\n         08:88:d4:25:fe:dc:95:21:c3:ac:ca:c1:7a:f7:12:38:98:e0:\n         49:b0:d7:65:3a:00:26:8c:48:9c:45:c5:a9:2d:d7:38:e6:06:\n         7f:c3:36:0c:74:ac:fe:16:c9:e4:89:ad:ec:2b:42:c6:23:5b:\n         d5:2c:6e:93:bb:18:6a:db:00:3c:bb:d9:ec:62:6e:aa:d4:2d:\n         4d:c7:a7:f3:d6:1d:d5:e7:fa:3d:dd:2b:07:94:e5:92:f9:96:\n         2e:bb:72:4a:9f:d6:2c:6a:42:da:10:bb:28:db:17:8f:9f:95:\n         b7:14:ec:07:47:62:73:47:35:41:cc:cf:94:d6:5d:82:96:3f:\n         a7:c5:93:d3:d2:82:04:bc:0e:66:2d:62:8c:cd:de:7a:51:48:\n         21:d3:0b:9e:91:c5:af:35:02:97:43:f4:06:f4:74:5e:df:3a:\n         f9:67:9a:78:86:c5:fa:82:45:28:7f:44:c1:86:11:a4:f1:74:\n         07:e1:a7:f9:bf:c9:a4:78:c6:d9:bc:55:30:27:f1:de:b9:87:\n         fd:c3:7c:a3:86:67:7e:14:9e:f6:66:27:f6:c7:aa:75:38:ce:\n         42:d6:73:9d:62:0b:58:bd:38:84:16:ce:87:8f:2b:aa:8d:3d:\n         4a:bb:93:ea:0a:50:c4:a3\n```\n\n----------------------------------------\n\nTITLE: Revogando Certificado Let's Encrypt com a Conta Original em Bash\nDESCRIPTION: Comando para revogar um certificado usando a conta que originalmente o emitiu. Especifica o caminho do certificado e o motivo da revogação como comprometimento da chave.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-path /etc/letsencrypt/archive/${YOUR_DOMAIN}/cert1.pem --reason keycompromise\n```\n\n----------------------------------------\n\nTITLE: Creating a domain certificate configuration file\nDESCRIPTION: This code provides the contents for a domains.ext configuration file used in creating SSL certificates. It specifies certificate attributes including DNS names and IP addresses for localhost development.\n\nLANGUAGE: bash\nCODE:\n```\nauthorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\nsubjectAltName = @alt_names\n[alt_names]\nDNS.1 = localhost\nDNS.2 = fake1.local\nDNS.3 = fake2.local\nIP.1 = 192.168.1.13\nIP.2 = 192.168.1.14\n```\n\n----------------------------------------\n\nTITLE: Viewing X.509 Certificate Details for Let's Encrypt Authority X1\nDESCRIPTION: This is a formatted output of an X.509 certificate for Let's Encrypt Authority X1. It shows the certificate's data structure including version, serial number, signature algorithm, issuer, validity period, subject information, public key details, and various X.509v3 extensions.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            98:13:f4:75:13:e5:75:0b:43:e7:43:1e:97:1e:44:bd\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: O = Digital Signature Trust Co., CN = DST Root CA X3\n        Validity\n            Not Before: Oct 19 22:33:36 2015 GMT\n            Not After : Oct 19 22:33:36 2020 GMT\n        Subject: C = US, O = Let's Encrypt, CN = Let's Encrypt Authority X1\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:9c:d3:0c:f0:5a:e5:2e:47:b7:72:5d:37:83:b3:\n                    68:63:30:ea:d7:35:26:19:25:e1:bd:be:35:f1:70:\n                    92:2f:b7:b8:4b:41:05:ab:a9:9e:35:08:58:ec:b1:\n                    2a:c4:68:87:0b:a3:e3:75:e4:e6:f3:a7:62:71:ba:\n                    79:81:60:1f:d7:91:9a:9f:f3:d0:78:67:71:c8:69:\n                    0e:95:91:cf:fe:e6:99:e9:60:3c:48:cc:7e:ca:4d:\n                    77:12:24:9d:47:1b:5a:eb:b9:ec:1e:37:00:1c:9c:\n                    ac:7b:a7:05:ea:ce:4a:eb:bd:41:e5:36:98:b9:cb:\n                    fd:6d:3c:96:68:df:23:2a:42:90:0c:86:74:67:c8:\n                    7f:a5:9a:b8:52:61:14:13:3f:65:e9:82:87:cb:db:\n                    fa:0e:56:f6:86:89:f3:85:3f:97:86:af:b0:dc:1a:\n                    ef:6b:0d:95:16:7d:c4:2b:a0:65:b2:99:04:36:75:\n                    80:6b:ac:4a:f3:1b:90:49:78:2f:a2:96:4f:2a:20:\n                    25:29:04:c6:74:c0:d0:31:cd:8f:31:38:95:16:ba:\n                    a8:33:b8:43:f1:b1:1f:c3:30:7f:a2:79:31:13:3d:\n                    2d:36:f8:e3:fc:f2:33:6a:b9:39:31:c5:af:c4:8d:\n                    0d:1d:64:16:33:aa:fa:84:29:b6:d4:0b:c0:d8:7d:\n                    c3:93\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            Authority Information Access: \n                OCSP - URI:http://isrg.trustid.ocsp.identrust.com\n                CA Issuers - URI:http://apps.identrust.com/roots/dstrootcax3.p7c\n\n            X509v3 Authority Key Identifier: \n                keyid:C4:A7:B1:A4:7B:2C:71:FA:DB:E1:4B:90:75:FF:C4:15:60:85:89:10\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n                  CPS: http://cps.root-x1.letsencrypt.org\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://crl.identrust.com/DSTROOTCAX3CRL.crl\n\n            X509v3 Name Constraints: \n                Excluded:\n                  DNS:.mil\n\n            X509v3 Subject Key Identifier: \n                A8:4A:6A:63:04:7D:DD:BA:E6:D1:39:B7:A6:45:65:EF:F3:A8:EC:A1\n    Signature Algorithm: sha256WithRSAEncryption\n         d1:c8:22:4b:ac:ef:e3:09:89:96:50:b1:8d:78:70:2a:01:1b:\n         58:5d:bf:42:76:d3:f1:72:5a:8e:69:a6:77:e3:2f:bf:12:da:\n         4e:2c:d8:62:d1:27:b8:83:f5:90:ca:12:b9:dd:bd:b3:45:19:\n         cb:16:fb:d9:0a:2b:f4:e7:63:6d:61:a7:80:dd:21:3b:fc:4b:\n         d6:58:43:ba:1a:a2:ab:3b:1f:08:44:31:8f:6c:89:b1:03:e1:\n         a5:f0:d3:dc:6b:25:94:c2:f7:32:b5:b8:87:d6:ea:de:5d:1d:\n         08:ee:39:6b:fe:1c:7a:16:66:7b:a9:cb:1a:6c:11:49:44:68:\n         56:fe:fd:20:88:e0:a0:92:05:d0:2c:63:10:1c:b0:76:08:e7:\n         1c:44:23:82:ee:b4:7a:7a:b3:73:93:d8:5b:8e:f7:45:9f:76:\n         c2:24:ea:ae:fc:38:c4:9d:9f:ce:f9:6c:d8:dd:05:80:2a:c5:\n         4a:76:fc:b1:08:1d:f0:c1:90:ba:10:cf:48:45:26:6c:00:6d:\n         86:a1:a8:a6:8b:9f:bd:cf:00:09:b5:5f:69:23:7f:5c:3c:0d:\n         d9:e4:69:b3:8b:19:e3:95:72:3f:4b:43:eb:3a:ee:f0:72:93:\n         1e:1a:9d:38:d4:46:46:ea:66:c9:54:11:4b:27:da:4e:71:7a:\n         e6:b6:cd:49\n```\n\n----------------------------------------\n\nTITLE: Revoking Certificate Using Certbot with Certificate Private Key in Let's Encrypt\nDESCRIPTION: This command demonstrates how to revoke a Let's Encrypt certificate by providing the certificate's private key, which proves control over the certificate regardless of account ownership.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-path /etc/letsencrypt/archive/${YOUR_DOMAIN}/cert1.pem \\\n--key-path /etc/letsencrypt/archive/${YOUR_DOMAIN}/privkey1.pem\n```\n\n----------------------------------------\n\nTITLE: Analyzing X.509 Certificate Structure for Let's Encrypt Authority X4\nDESCRIPTION: This X.509 certificate represents the Let's Encrypt Authority X4 intermediate certificate issued by ISRG Root X1. It contains the certificate's version, serial number, validity period, public key information, extensions, and cryptographic signature details. This intermediate certificate was used by Let's Encrypt to issue end-entity certificates.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            93:9b:99:9e:a4:8e:16:0d:5b:42:59:b4:3d:20:13:da\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Oct  6 15:44:34 2016 GMT\n            Not After : Oct  6 15:44:34 2021 GMT\n        Subject: C = US, O = Let's Encrypt, CN = Let's Encrypt Authority X4\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:e1:24:74:42:7b:b7:91:31:d9:73:ff:38:aa:d8:\n                    ce:44:5c:b7:39:0a:dc:44:ae:0d:bd:45:b9:97:37:\n                    67:af:bd:50:4f:5f:d3:10:54:6b:f7:41:da:8e:63:\n                    e6:6d:5b:c0:e8:40:a9:8c:41:fc:d1:03:89:ff:62:\n                    61:09:60:d6:07:05:78:9a:90:bd:1a:64:3e:4f:dc:\n                    cf:77:2f:89:6b:cb:67:af:41:4d:c5:8d:00:c0:6b:\n                    fe:8d:84:dc:b5:f2:95:31:a8:e8:f6:90:a0:43:4a:\n                    93:74:5c:b3:3e:43:69:4b:89:22:47:74:51:3e:99:\n                    64:c3:cd:24:01:f9:84:2f:28:77:17:22:a7:dd:c3:\n                    6c:08:4c:66:2f:37:74:c5:6f:93:8e:b0:46:37:16:\n                    61:d1:50:98:c8:b0:0f:4f:58:53:7c:ac:f6:da:2d:\n                    96:61:50:ad:43:dc:0a:a6:4f:9e:b5:52:b9:9c:8e:\n                    ef:4e:df:46:b3:31:dc:20:fc:69:c2:a3:20:75:3e:\n                    ec:38:1b:36:4e:66:66:d2:df:f5:66:a4:93:2f:7b:\n                    a6:0e:94:3e:60:3d:4a:4b:1c:6f:ba:b4:4d:1c:3c:\n                    91:58:6e:2f:4d:c4:da:70:db:ed:01:39:76:c0:49:\n                    e7:e9:35:b5:14:06:90:c1:e5:92:e2:10:fd:6b:b9:\n                    b4:85\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n                  CPS: http://cps.root-x1.letsencrypt.org\n\n            X509v3 Subject Key Identifier: \n                C5:B1:AB:4E:4C:B1:CD:64:30:93:7E:C1:84:99:05:AB:E6:03:E2:25\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://crl.root-x1.letsencrypt.org\n\n            Authority Information Access: \n                OCSP - URI:http://ocsp.root-x1.letsencrypt.org/\n                CA Issuers - URI:http://cert.root-x1.letsencrypt.org/\n\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n    Signature Algorithm: sha256WithRSAEncryption\n         5e:2d:23:5c:86:8d:98:25:77:d9:4f:d3:5f:b3:7e:d5:37:69:\n         25:74:ba:7d:1d:d8:62:94:30:ee:c6:c6:fc:13:2d:60:0a:43:\n         3f:de:4f:eb:b7:27:8f:86:be:90:fe:04:c7:e8:a4:8c:64:25:\n         c0:c2:cc:c0:a1:8e:36:6d:65:9c:09:a4:86:3b:05:ab:55:ac:\n         ee:8e:90:49:9a:44:d2:13:b5:b6:7f:84:2c:0d:91:49:db:93:\n         70:bb:10:6d:ce:18:96:65:a3:d6:f6:c3:30:3c:bf:d5:81:b0:\n         fc:c7:a5:3b:cb:7c:ea:fe:75:2e:7b:2c:b3:d9:06:1a:77:02:\n         b1:da:2d:b7:64:df:79:48:38:d4:4f:b7:db:2c:78:31:24:99:\n         d1:e7:56:61:a6:05:17:f8:f8:9d:16:cb:ae:e6:75:d3:af:cf:\n         9a:c7:1f:cb:b3:63:de:2b:68:e6:b2:7f:6d:20:cf:37:26:aa:\n         6a:2d:e2:13:d7:b4:31:b8:63:8f:4c:a0:53:0c:4f:69:1c:59:\n         c9:37:10:e4:c0:1f:a4:22:19:69:06:27:b7:31:31:f4:8b:dd:\n         2d:27:88:0e:b0:80:52:6d:7c:44:c4:4c:e6:6e:f0:05:43:80:\n         43:60:08:9d:c3:4b:46:f3:fd:d8:55:2a:fb:37:59:19:1a:2a:\n         eb:91:fd:6d:27:9c:2d:95:0d:d6:85:8f:8f:82:44:5f:0b:1a:\n         d9:ff:f0:44:5a:1f:8f:13:92:d1:f9:04:3c:83:55:c1:7d:cd:\n         f2:7b:e5:27:31:73:2d:b7:8c:02:f6:37:ac:37:9f:fb:77:9e:\n         7a:a8:5e:df:48:9b:81:69:ac:3a:fe:98:fd:60:d9:9e:8b:7f:\n         66:00:d2:31:37:91:96:a5:81:9e:a5:34:7b:b8:0a:6b:c9:62:\n         83:93:48:9c:3d:5f:6a:a5:1a:5d:4a:f8:1e:14:df:6e:eb:1b:\n         5b:51:c6:08:cc:ef:aa:4d:ea:52:12:d3:63:cc:10:2a:32:28:\n         98:a0:a4:e4:81:bb:85:7c:f8:b5:5a:50:c7:b3:08:91:fd:41:\n         fe:04:29:e6:53:1d:d7:50:d6:df:7a:ce:f3:5d:da:cf:5e:c1:\n         22:b1:fc:36:e5:5d:b2:ac:04:3c:c8:74:72:7e:aa:2e:be:17:\n         d0:c8:54:ce:7f:20:27:6d:0d:db:a5:38:ef:9d:af:f0:57:07:\n         ea:41:67:7b:95:c6:34:40:36:f2:4a:2a:97:71:91:e3:f2:96:\n         e2:13:48:d6:47:6d:a9:d6:44:dd:3b:80:cb:f0:05:63:8b:d3:\n         ad:22:e1:5a:cb:f5:ea:f5:b0:14:2b:46:35:3d:88:da:59:40:\n         64:e7:2d:50:31:41:51:6e\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of INTEGER (2^63+1)\nDESCRIPTION: This example shows how to encode the value 2^63+1 (a 64-bit positive integer) as an ASN.1 INTEGER using DER encoding. Notice it requires 9 bytes because the leading bit of the value must be zero to indicate a positive number.\n\nLANGUAGE: der\nCODE:\n```\n02 09 00 80 00 00 00 00 00 00 01\n```\n\n----------------------------------------\n\nTITLE: Validating Domain Control Before Revoking (DNS Challenge Method)\nDESCRIPTION: This command validates control of a domain using DNS challenges without completing certificate issuance by including a non-existent domain. This is useful when you want to revoke a certificate issued by someone else.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot certonly --manual --preferred-challenges=dns -d ${YOUR_DOMAIN} -d nonexistent.${YOUR_DOMAIN}\n```\n\n----------------------------------------\n\nTITLE: Перевірка контролю над доменом для відкликання\nDESCRIPTION: Команда для перевірки контролю над доменом перед відкликанням сертифіката. Цей метод використовує ручну перевірку з DNS-викликом і включає неіснуючий домен, щоб уникнути фактичної видачі сертифіката.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot certonly --manual --preferred-challenges=dns -d ${YOUR_DOMAIN} -d nonexistent.${YOUR_DOMAIN}\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of SEQUENCE OF INTEGER\nDESCRIPTION: Hexadecimal representation of a DER-encoded SEQUENCE OF INTEGER containing the values 7, 8, and 9, demonstrating how sequence elements are concatenated.\n\nLANGUAGE: der\nCODE:\n```\n30 09 02 01 07 02 01 08 02 01 09\n```\n\n----------------------------------------\n\nTITLE: Creating a private root CA certificate with OpenSSL\nDESCRIPTION: This command creates a private root Certificate Authority (CA) certificate using OpenSSL. It generates a 2048-bit RSA key and sets appropriate certificate attributes with a validity period of 825 days.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -x509 -nodes -new -sha256 -days 825 -newkey rsa:2048 \\\n  -keyout RootCA.key -out RootCA.pem -subj \"/C=US/CN=Example-Root-CA\"\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of AlgorithmIdentifier SEQUENCE\nDESCRIPTION: This example shows the DER encoding of an AlgorithmIdentifier SEQUENCE containing the sha256WithRSAEncryption algorithm OID and NULL parameters. The SEQUENCE encoding starts with tag 30 followed by length and content.\n\nLANGUAGE: der\nCODE:\n```\n30 0d 06 09 2a 86 48 86 f7 0d 01 01 0b 05 00\n```\n\n----------------------------------------\n\nTITLE: Відкликання сертифіката за допомогою облікового запису, який його видав\nDESCRIPTION: Команда для відкликання сертифіката Let's Encrypt з використанням облікового запису, який початково видав сертифікат. Використовує інструмент Certbot і шлях до сертифіката, який потрібно відкликати.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-path /etc/letsencrypt/archive/${YOUR_DOMAIN}/cert1.pem\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of rfc822Name in GeneralName\nDESCRIPTION: DER encoding of a GeneralName containing the rfc822Name 'a@example.com', using tag number 1 with context-specific tag class and IMPLICIT encoding method.\n\nLANGUAGE: der\nCODE:\n```\n81 0d 61 40 65 78 61 6d 70 6c 65 2e 63 6f 6d\n```\n\n----------------------------------------\n\nTITLE: Revoking Certificate Using Certbot with Account Key in Let's Encrypt\nDESCRIPTION: This command uses Certbot to revoke a Let's Encrypt certificate using the account key that was used to issue the certificate. The certificate file path must be provided.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-path /etc/letsencrypt/archive/${YOUR_DOMAIN}/cert1.pem\n```\n\n----------------------------------------\n\nTITLE: Finding Account ID in Certbot regr.json File\nDESCRIPTION: For Certbot users, the account ID can be found in the \"uri\" field of the regr.json file located in the accounts directory.\n\nLANGUAGE: json\nCODE:\n```\n/etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org/directory/*/regr.json\n```\n\n----------------------------------------\n\nTITLE: Locating Account ID in Certbot's regr.json File\nDESCRIPTION: Instructions for finding the Let's Encrypt Account ID in Certbot by examining the 'uri' field in the regr.json file located in the accounts directory.\n\nLANGUAGE: shell\nCODE:\n```\n/etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org/directory/*/regr.json\n```\n\n----------------------------------------\n\nTITLE: Using ACME Client with Let's Encrypt Staging Environment\nDESCRIPTION: This snippet shows the URL for the Let's Encrypt staging environment API endpoint that should be used with ACME clients for testing.\n\nLANGUAGE: bash\nCODE:\n```\nhttps://acme-staging-v02.api.letsencrypt.org/directory\n```\n\n----------------------------------------\n\nTITLE: INTEGER with Named Values in ASN.1\nDESCRIPTION: Example from RFC 5280 showing how an INTEGER type can be constrained to specific values with symbolic names. This defines the Version field with three possible values (v1, v2, v3) corresponding to integers 0, 1, and 2.\n\nLANGUAGE: asn1\nCODE:\n```\nVersion ::= INTEGER { v1(0), v2(1), v3(2) }\n```\n\n----------------------------------------\n\nTITLE: Examining Let's Encrypt E5 CA Certificate in X.509 Format\nDESCRIPTION: This X.509 certificate is for Let's Encrypt's E5 Certificate Authority, issued by ISRG Root X1. It contains an ECDSA P-384 public key and is configured as an intermediate CA with a path length constraint of 0. The certificate includes extensions for key usage, extended key usage, basic constraints, and distribution points for certificate status checking.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            83:8f:6c:63:ce:b1:39:8c:62:06:62:83:15:c9:fd:de\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = E5\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:0d:0b:3a:8a:6b:61:8e:b6:ef:dc:5f:58:e7:c6:\n                    42:45:54:ab:63:f6:66:61:48:0a:2e:59:75:b4:81:\n                    02:37:50:b7:3f:16:79:dc:98:ec:a1:28:97:72:20:\n                    1c:2c:cf:d5:7c:52:20:4e:54:78:5b:84:14:6b:c0:\n                    90:ae:85:ec:c0:51:41:3c:5a:87:7f:06:4d:d4:fe:\n                    60:d1:fa:6c:2d:e1:7d:95:10:88:a2:08:54:0f:99:\n                    1a:4c:e6:ea:0a:ac:d8\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                9F:2B:5F:CF:3C:21:4F:9D:04:B7:ED:2B:2C:C4:C6:70:8B:D2:D7:0D\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n    Signature Algorithm: sha256WithRSAEncryption\n         1f:72:9d:34:45:42:41:da:a4:d0:b2:b2:b8:d2:26:4c:a7:51:\n         25:8d:42:da:ec:36:48:96:a3:ba:1a:a4:c8:63:d8:f0:2f:b3:\n         ce:cb:9f:67:e9:a0:9e:19:ea:d4:0d:8a:55:03:92:ca:43:84:\n         9d:46:f1:d5:cc:ba:df:ba:c1:02:28:71:f7:ba:fe:6d:cc:1b:\n         64:ce:ac:4c:32:1a:12:b8:91:fc:f2:e4:e8:b2:ac:f4:17:b4:\n         ba:85:71:80:e2:83:72:91:bd:b2:f0:f7:dc:9f:86:f4:b7:1f:\n         bf:52:bd:96:e0:e6:49:38:06:e9:73:45:20:de:6f:7c:8e:60:\n         b3:f9:4c:3f:2a:23:10:c7:48:cc:af:5b:95:c9:76:ff:5b:ca:\n         c4:ef:16:18:27:23:be:c4:35:9c:9f:cf:c2:df:0b:41:90:5f:\n         38:5c:95:5c:ff:2e:6c:0a:7f:6a:ed:dd:73:81:0a:58:6f:4c:\n         3b:9c:dc:c7:5a:93:f7:e3:57:44:67:55:5b:11:af:98:11:51:\n         01:a8:dc:88:c7:d7:30:4d:59:b8:69:a4:df:f1:8e:92:80:0c:\n         ed:99:23:66:69:5e:ca:89:0f:d4:b1:b3:99:f2:5c:51:df:6c:\n         ed:e7:ae:d7:ff:7f:7a:0e:57:95:77:7f:e7:91:ad:62:30:0c:\n         f8:2e:03:1b:98:bb:79:a3:6a:72:6d:85:fb:2c:58:20:fb:7a:\n         71:b6:ed:61:53:49:08:67:c7:5a:a1:c4:43:81:58:4a:d5:32:\n         16:7b:fc:b2:3c:aa:53:cc:a9:81:96:8d:27:d6:95:71:64:88:\n         08:b3:88:13:5f:d0:bf:fe:e8:2a:c9:d9:09:62:7d:db:ac:14:\n         e9:1a:86:d4:e6:0f:18:e8:b5:ce:e0:01:84:bc:3a:d5:cb:8f:\n         54:34:f6:f2:74:12:fd:ee:b3:f7:97:09:5e:ad:1e:2b:50:5c:\n         68:9e:9f:25:9b:26:6e:34:60:0f:9a:77:9a:f1:1f:e6:f7:50:\n         33:b3:02:12:f5:34:b4:76:ec:c7:62:39:98:71:c9:a0:00:47:\n         6f:c2:95:06:05:a9:fe:57:17:19:68:96:69:e3:b2:07:b4:4f:\n         f8:e7:c3:b6:f8:b6:3a:c6:a9:c5:78:95:ee:f3:55:b3:b7:cc:\n         96:b4:63:63:58:e8:29:aa:a6:9b:27:27:06:f0:2a:d7:80:04:\n         6e:dc:8b:b1:57:ce:4b:ae:81:f1:aa:64:78:55:f6:35:8e:17:\n         3c:46:15:e1:94:82:7b:c5:47:3e:b7:6b:11:19:36:c0:82:c6:\n         dd:3f:c4:1a:64:88:90:26:15:50:c4:a7:8e:62:5d:55:00:fd:\n         17:a3:5a:ff:ec:e6:5c:27\n```\n\n----------------------------------------\n\nTITLE: Creating a self-signed certificate with OpenSSL for localhost\nDESCRIPTION: This command generates a self-signed certificate valid for 365 days using OpenSSL. It includes a Subject Alternative Name for localhost and sets appropriate key usage extensions.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config <( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Nginx to use TLS certificates\nDESCRIPTION: Configuration snippet for Nginx web server to set up SSL/TLS using the generated certificates. It sets the server to listen on port 443, defines the certificate and key file paths.\n\nLANGUAGE: conf\nCODE:\n```\nserver {\n    listen 443 ssl;\n    server_name localhost;\n\n    ssl_certificate /path/to/localhost.crt;\n    ssl_certificate_key /path/to/localhost.key;\n\n    # ...\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Account ID in Certbot Registration Files\nDESCRIPTION: Instructions for locating the Certbot account ID by examining the regr.json file within the Certbot configuration directory.\n\nLANGUAGE: bash\nCODE:\n```\n# For Certbot, the account ID is in the \"uri\" field in /etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org/directory/*/regr.json\ngrep -rE \"\\\"uri\\\":\\\"https:\\/\\/acme-v02.api.letsencrypt.org\\/acme\\/acct\\/([0-9]+)\\\"\" /etc/letsencrypt/accounts/\n```\n\n----------------------------------------\n\nTITLE: Encoding ASN.1 Using EXPLICIT Tag Method\nDESCRIPTION: Demonstrates how a UTF8String with the value \"hi\" is encoded using the EXPLICIT tag method with tag number 5, showing the additional wrapper structure compared to IMPLICIT tagging.\n\nLANGUAGE: asn1\nCODE:\n```\n[5] EXPLICIT UTF8String\n```\n\nLANGUAGE: der\nCODE:\n```\nA5 04 0C 02 68 69\n```\n\n----------------------------------------\n\nTITLE: Creating a self-signed certificate with OpenSSL\nDESCRIPTION: This command creates a self-signed certificate valid for localhost using OpenSSL. It generates a private key and certificate in one command, setting the Common Name to localhost with a validity period of 365 days.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config <( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n```\n\n----------------------------------------\n\nTITLE: Analyzing X.509 Certificate Structure for Let's Encrypt E6 Certificate\nDESCRIPTION: Details of an X.509 certificate for Let's Encrypt's E6 intermediate certificate issued by ISRG Root X1. The certificate contains ECDSA P-384 public key, various X.509v3 extensions including key usage constraints, and is valid from March 13, 2024 to March 12, 2027.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            b0:57:3e:91:73:97:27:70:db:b4:87:cb:3a:45:2b:38\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = E6\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:d9:f1:9e:46:87:f8:21:71:60:a8:26:eb:a3:fa:\n                    b9:ea:da:1d:b9:12:a7:d4:26:d9:51:14:b1:61:7c:\n                    75:96:bf:22:0b:39:1f:d5:be:d1:0a:46:aa:2d:3c:\n                    4a:09:84:2e:be:40:95:55:e9:19:40:37:66:75:ed:\n                    32:4e:77:04:49:f8:70:7b:c3:18:e7:ce:f7:71:10:\n                    fe:ac:74:d8:00:d4:ed:6d:1c:73:16:33:10:9c:3a:\n                    b2:ea:6c:62:f4:bd:b8\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                93:27:46:98:03:A9:51:68:8E:98:D6:C4:42:48:DB:23:BF:58:94:D2\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n    Signature Algorithm: sha256WithRSAEncryption\n         7d:8b:7b:4a:20:35:b2:05:86:08:8a:6e:9e:4e:3a:af:80:04:\n         c4:84:5c:33:19:0a:81:48:4d:96:ba:ef:d4:1d:b5:84:e6:97:\n         37:fe:66:88:4f:8b:39:36:eb:72:65:3f:33:dc:af:0b:a3:15:\n         63:bd:f4:18:d1:68:2f:c2:21:27:c8:fc:be:b3:8b:a4:c6:36:\n         d8:e3:fa:6d:a4:b5:93:d6:0c:ae:d0:d3:97:02:47:a0:66:f2:\n         d3:84:e1:4d:47:81:0e:4b:12:f5:18:ae:1e:f8:9c:66:a0:5e:\n         75:07:48:17:ae:69:66:e8:69:78:37:06:05:c2:e2:61:ab:10:\n         af:f1:0e:e6:0c:71:b4:bc:93:9a:0b:07:48:e5:52:05:c1:4e:\n         9f:d9:60:bf:b2:c4:08:fa:bd:8b:b9:9f:1f:79:a9:c6:0a:d1:\n         29:2c:47:a4:ea:19:d0:a5:cc:70:1f:a1:1e:eb:e5:92:51:e7:\n         b6:f7:08:d2:63:0c:43:49:a1:62:3e:aa:b4:c1:52:b6:41:75:\n         46:90:86:dc:83:dd:23:0a:55:09:0a:ae:f0:65:7b:b3:cb:9b:\n         92:74:73:b3:ed:c2:fc:19:b5:f5:11:4e:a2:23:e9:0e:4c:2f:\n         c8:d7:ef:99:0d:78:5e:4c:aa:a8:a2:b9:a1:9f:33:84:3d:f6:\n         90:54:50:93:16:bc:b9:94:ae:87:86:93:22:61:71:92:7b:b7:\n         f7:06:81:c4:84:57:13:88:ca:c6:50:26:41:ce:10:8c:56:68:\n         ab:52:a6:42:a4:20:d0:9f:f5:24:5f:11:94:5b:c9:6a:cd:55:\n         72:32:ef:62:5b:d4:07:6b:7a:9e:93:ba:a1:08:c1:de:5f:8f:\n         35:fd:03:a5:01:fb:89:4c:77:5b:3e:40:8d:00:a2:e8:bd:b9:\n         16:3c:84:d3:aa:ba:05:9f:d0:96:6b:58:76:5f:fc:65:86:a8:\n         e1:24:6a:3c:4b:3f:e9:c0:22:17:e4:1f:e7:38:36:52:46:96:\n         b4:3a:61:97:52:ca:32:e4:cd:2e:8b:6f:b1:7f:7d:1c:fe:bd:\n         57:67:da:37:27:a0:a1:d4:34:2f:24:c0:a6:bf:ef:4f:4d:58:\n         3c:4e:3a:bc:db:03:2e:02:be:e1:c2:fa:4e:bc:c2:fd:ae:16:\n         72:61:79:49:12:7d:df:cc:eb:bf:f7:6e:24:72:d7:40:89:2e:\n         e6:fd:3e:13:03:b2:e7:d1:dd:9b:43:d3:fc:4a:ff:f3:87:43:\n         57:40:92:8d:d4:7f:d9:7b:99:33:79:29:ca:c4:8a:2e:00:f5:\n         70:a8:83:03:e2:11:82:e3:83:0b:17:ce:f5:cc:98:22:0e:3a:\n         bf:d9:85:98:1b:f2:1f:4e\n```\n\n----------------------------------------\n\nTITLE: Finding Account ID in Certbot's accounts Directory\nDESCRIPTION: Alternative method to find the account ID by examining Certbot's accounts directory structure.\n\nLANGUAGE: bash\nCODE:\n```\nsudo ls -la /etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org/directory/\n```\n\n----------------------------------------\n\nTITLE: OpenSSL parancs saját aláírású localhost tanúsítvány generálásához\nDESCRIPTION: Ez a parancs létrehoz egy saját aláírású tanúsítványt és privát kulcsot a localhost számára, amelyet helyi fejlesztési környezetben lehet használni. A tanúsítvány 2048 bites RSA kulcsot használ, SHA-256 aláírással, és tartalmazza a megfelelő Subject Alternative Name (SAN) kiterjesztést.\n\nLANGUAGE: Bash\nCODE:\n```\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config <( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n```\n\n----------------------------------------\n\nTITLE: Encoding OBJECT IDENTIFIER in DER\nDESCRIPTION: Example showing how the OID 1.2.840.113549.1.1.11 (sha256WithRSAEncryption) is encoded in DER using the base-128 encoding rules for OID components.\n\nLANGUAGE: der\nCODE:\n```\n06 09 2a 86 48 86 f7 0d 01 01 0b\n```\n\n----------------------------------------\n\nTITLE: Extracting Account URI with ACME.sh\nDESCRIPTION: Shows how to find the account ID in ACME.sh by printing the account information.\n\nLANGUAGE: bash\nCODE:\n```\ngrep ACCOUNT_URL ~/.acme.sh/account.conf\n```\n\n----------------------------------------\n\nTITLE: Defining a Point Structure in C\nDESCRIPTION: Example of how a simple point structure with coordinates and a label would be defined in the C programming language. This demonstrates how data structures are defined in C for comparison with ASN.1.\n\nLANGUAGE: c\nCODE:\n```\nstruct point {\n  int x, y;\n  char label[10];\n};\n```\n\n----------------------------------------\n\nTITLE: Let's Encrypt E9 Certificate X.509 Structure\nDESCRIPTION: The complete X.509 certificate structure for Let's Encrypt E9 intermediate certificate, showing version, serial number, signature algorithm, issuer, validity period, subject, public key information, and extensions. This certificate uses ECDSA with the secp384r1 curve and is valid for 3 years.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            3f:13:10:e0:90:d6:aa:ba:39:c5:b7:38:8b:de:dc:13\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = E9\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:a0:5c:dc:45:9f:3b:ac:e6:02:a9:58:49:5d:0c:\n                    15:3a:22:02:7c:e9:a6:8d:59:48:97:db:5c:68:e9:\n                    ae:30:64:c9:d1:5b:60:17:a4:72:0a:e5:24:49:ad:\n                    e7:bf:3b:47:83:f5:82:b6:cf:b6:07:77:a1:40:65:\n                    7e:83:33:58:78:a1:a6:35:d6:92:88:ef:95:c7:8c:\n                    99:46:2a:bd:56:d0:73:7f:69:08:3d:d1:89:88:c3:\n                    0a:be:d6:a6:e2:2a:73\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                5D:77:D1:4D:AC:4D:22:78:59:B2:86:59:8E:43:1C:B7:64:59:13:41\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n    Signature Algorithm: sha256WithRSAEncryption\n         57:9c:b4:a5:73:41:9e:9e:cc:7d:97:09:70:1c:eb:a3:ea:06:\n         9f:c1:21:c8:13:1e:00:84:f8:c3:e9:a3:0e:09:fb:8c:3f:98:\n         84:9f:73:1b:d5:06:9d:4d:96:9f:43:4e:f9:49:64:28:d6:7a:\n         63:67:26:87:e4:cd:4d:f1:c7:b0:1a:8d:bf:d9:f8:dc:cf:ed:\n         a3:a0:20:1e:5c:1c:53:01:b2:22:38:86:da:27:08:e0:79:45:\n         d0:00:5b:69:6f:b3:9f:7d:97:63:ed:f9:8d:e5:d0:29:95:6b:\n         9a:bb:7b:2c:63:bb:e1:98:c7:c8:cf:13:16:ec:82:e3:d1:4c:\n         23:f7:d0:06:b6:0e:98:42:6a:39:51:51:49:6c:bb:b8:d6:c4:\n         e9:2d:71:4f:e1:e7:88:e4:bf:9c:6e:c1:f1:80:c9:d7:68:70:\n         7b:1b:55:a5:1e:d9:72:a7:68:83:95:fc:c7:75:1d:bc:18:17:\n         f4:e5:9b:5e:c7:f4:bf:93:01:4f:dd:35:03:e6:e7:54:a5:a1:\n         99:ff:00:0c:f1:5c:f4:3e:71:12:d1:83:7d:3f:09:20:7f:3d:\n         64:c4:13:b7:ec:4d:67:98:6b:45:f2:60:55:cc:1b:c6:02:25:\n         4b:d8:07:e0:0e:7e:9e:68:ab:9e:ad:6a:db:b5:71:01:0a:9d:\n         09:6b:03:dc:25:16:11:46:ed:de:96:9d:5f:aa:4b:e2:84:c2:\n         81:c1:7c:00:e3:18:cc:e0:13:af:6c:60:cf:af:dc:e4:14:df:\n         0d:4f:0b:cb:da:c3:ae:2c:34:65:5f:a6:55:e8:82:c9:de:e1:\n         0c:b8:9d:7b:f1:bf:9f:53:29:ad:02:bb:1b:6d:2b:1b:70:25:\n         bc:c9:bf:79:83:2f:5c:a2:b4:ba:44:b0:8d:0f:c1:94:e7:e6:\n         a6:a4:dc:e0:37:1d:3e:3c:fe:d0:14:fe:3f:7a:a2:c2:eb:c0:\n         89:34:e7:2d:6f:97:83:c1:b1:ac:98:5d:6f:ad:f9:6d:7a:76:\n         14:df:be:65:7b:a1:59:20:b8:cf:f0:ee:bd:84:3d:c1:3e:b3:\n         48:89:ef:15:96:ba:81:4a:20:e0:33:e6:45:fc:4e:2e:c1:c3:\n         71:53:ad:ad:62:62:ac:f7:f5:99:c8:c2:40:47:4f:38:7e:41:\n         30:5c:ec:37:db:6c:7a:38:2c:33:c9:e9:99:56:ad:e4:60:a1:\n         60:d3:2f:e6:13:d3:58:53:c8:a3:06:45:01:07:7b:96:d4:00:\n         b8:6e:d1:82:39:2a:3d:72:71:33:f5:39:51:3b:51:ce:a3:b0:\n         cc:66:4b:ae:cf:92:b4:45:c6:a5:d0:b1:8b:2f:5d:5d:2a:c0:\n         29:c3:04:89:2d:16:e1:ec\n```\n\n----------------------------------------\n\nTITLE: Installing mkcert on macOS with Homebrew\nDESCRIPTION: This command installs the mkcert tool on macOS using Homebrew package manager.\n\nLANGUAGE: bash\nCODE:\n```\nbrew install mkcert\n```\n\n----------------------------------------\n\nTITLE: Newsletter Subscription Form with Auto-Resizing in JavaScript\nDESCRIPTION: Embeds an iframe for Let's Encrypt newsletter subscription with JavaScript that listens for a message event to dynamically resize the iframe based on content height. The script ensures the resize only happens once and validates the origin of the message.\n\nLANGUAGE: html\nCODE:\n```\n<iframe id=\"newsletter-iframe-inline\" src=\"https://outreach.abetterinternet.org/l/1011011/2025-01-14/31v6r\" style=\"width: 100%; border: 0; overflow: hidden;\"></iframe>\n<script>\nlet hasResized = false;\nwindow.addEventListener('message', function(e) {\n    if (hasResized) return; // Only allow one resize\n    if (e.origin !== 'https://outreach.abetterinternet.org') return;\n    if (e.data && typeof e.data === 'object' && e.data.type === 'resize' && e.data.height) {\n        hasResized = true;\n        document.getElementById('newsletter-iframe-inline').style.height = (e.data.height + 20) + 'px';\n    }\n});\n</script>\n```\n\n----------------------------------------\n\nTITLE: ACME Account ID in JSON Format\nDESCRIPTION: Shows the JSON structure of an ACME account registration file containing the account ID.\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 12345\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Certificate Policy Statement URI in ASN.1\nDESCRIPTION: Example from RFC 5280 showing how to define a Certificate Policy Statement URI using ASN.1 notation, where the value is represented as an IA5String (ASCII-compatible string).\n\nLANGUAGE: asn1\nCODE:\n```\nCPSuri ::= IA5String\n```\n\n----------------------------------------\n\nTITLE: Starting a Node.js HTTPS Server with Custom Certificates\nDESCRIPTION: JavaScript code for creating an HTTPS server in Node.js using custom certificate files. The server loads the certificate and key files and sets up a basic HTTP response.\n\nLANGUAGE: javascript\nCODE:\n```\nconst https = require('https');\nconst fs = require('fs');\nconst options = {\n  key: fs.readFileSync('key.pem'),\n  cert: fs.readFileSync('cert.pem')\n};\nhttps.createServer(options, function (req, res) {\n  res.end(\"hello world\\n\");\n}).listen(8000);\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate Structure for Let's Encrypt R12\nDESCRIPTION: This certificate shows the complete X.509 structure of the Let's Encrypt R12 intermediate certificate. It contains the certificate metadata, RSA public key details, X509v3 extensions including key usage constraints, and the digital signature. This certificate is valid from March 13, 2024 to March 12, 2027.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            c2:12:32:4b:70:a9:b4:91:71:dc:40:f7:e2:85:26:3c\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = R12\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:da:98:28:74:ad:be:94:fe:3b:e0:1e:e2:e5:4b:\n                    75:ab:2c:12:7f:ed:a7:03:32:7e:36:97:ec:e8:31:\n                    8f:a5:13:8d:0b:99:2e:1e:cd:01:51:3d:4c:e5:28:\n                    6e:09:55:31:aa:a5:22:5d:72:f4:2d:07:c2:4d:40:\n                    3c:df:01:23:b9:78:37:f5:1a:65:32:34:e6:86:71:\n                    9d:04:ef:84:08:5b:bd:02:1a:99:eb:a6:01:00:9a:\n                    73:90:6d:8f:a2:07:a0:d0:97:d3:da:45:61:81:35:\n                    3d:14:f9:c4:c0:5f:6a:dc:0b:96:1a:b0:9f:e3:2a:\n                    ea:bd:2a:d6:98:c7:9b:71:ab:3b:74:0f:3c:db:b2:\n                    60:be:5a:4b:4e:18:e9:db:2a:73:5c:89:61:65:9e:\n                    fe:ed:3c:a6:cb:4e:6f:e4:9e:f9:00:46:b3:ff:19:\n                    4d:2a:63:b3:8e:66:c6:18:85:70:c7:50:65:6f:3b:\n                    74:e5:48:83:0f:08:58:5d:2d:23:9d:5e:a3:fe:e8:\n                    db:00:a1:d2:f4:e3:19:4d:f2:ee:7a:f6:27:9e:e5:\n                    cd:9c:2d:a2:f2:7f:9c:17:ad:ef:13:37:39:d1:b4:\n                    c8:2c:41:d6:86:c0:e9:ec:21:f8:59:1b:7f:b9:3a:\n                    7c:9f:5c:01:9d:62:04:c2:28:bd:0a:ad:3c:ca:10:\n                    ec:1b\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                00:B5:29:F2:2D:8E:6F:31:E8:9B:4C:AD:78:3E:FA:DC:E9:0C:D1:D2\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n    Signature Algorithm: sha256WithRSAEncryption\n         8f:75:d0:09:cf:6a:76:48:65:32:92:de:b5:44:c8:85:76:f4:\n         15:84:8c:02:bf:76:eb:b3:f1:e2:f9:6e:84:a8:56:91:e1:92:\n         4b:f7:e1:ea:00:78:48:8f:75:92:e3:e4:46:7b:1b:60:2b:20:\n         af:a0:ce:14:e5:45:0d:6a:e0:52:86:a4:f3:da:14:14:a9:a9:\n         5f:f1:6d:46:f9:52:50:17:40:e9:e4:1e:7d:e6:15:58:fe:a9:\n         8b:fc:ef:f5:9e:63:e0:66:e2:c3:77:3b:1f:01:87:26:94:ed:\n         40:10:dc:b7:99:ec:dd:57:d3:5c:71:41:ee:30:20:00:04:dc:\n         95:4b:50:28:87:99:92:fe:aa:80:94:b6:06:08:14:f8:1c:83:\n         7e:74:40:c5:08:5a:0c:4f:5c:d1:84:9d:c4:fd:db:59:de:ee:\n         79:6e:23:4d:95:f2:92:d4:98:29:6a:5c:eb:02:c1:42:f0:f8:\n         f5:4e:64:20:7b:a8:e3:31:c4:c0:68:09:47:8b:d8:b9:78:a0:\n         ca:4e:4a:be:69:24:2a:4b:37:7b:51:03:6b:3a:3f:52:8b:b3:\n         d4:d2:ad:58:4e:93:ee:cb:5f:6f:0d:31:49:48:ba:c4:3f:9f:\n         12:c9:20:3d:11:84:07:85:b4:f8:f2:38:23:ac:71:00:40:e7:\n         7f:8d:46:34:82:6a:4e:cf:e0:0e:63:5f:ba:69:9a:47:09:10:\n         22:fe:4b:48:b7:91:75:54:cb:93:1e:e4:16:eb:53:cf:7b:de:\n         36:4d:bf:f6:b1:eb:e6:4a:e9:33:3c:8d:69:a2:98:be:a8:7f:\n         a3:ab:5f:b6:54:e8:4d:96:a9:ac:f3:b0:5a:cb:1b:7a:36:93:\n         24:9b:ce:58:52:80:9f:35:0a:5e:2d:bf:74:9b:62:26:17:9c:\n         91:31:29:0b:f3:7f:cd:c3:62:8b:68:c7:77:f4:7f:0b:fb:c6:\n         59:f5:03:66:4b:a6:50:9b:d0:ef:a5:fc:02:b4:60:4d:03:4b:\n         61:4f:c5:20:07:8b:48:b0:31:f5:b6:9c:d1:c9:ad:77:18:dc:\n         b2:c7:0f:be:e0:46:08:de:e0:4b:de:b9:b8:b6:c7:16:be:36:\n         69:3f:86:68:4b:74:81:13:89:50:c5:6a:7a:02:ac:c5:48:a5:\n         0e:7d:5d:61:e4:cd:d1:66:a0:75:c7:05:5e:e8:89:b5:63:19:\n         23:bb:50:b4:90:ec:c2:75:37:3e:75:a6:1b:83:25:28:00:21:\n         4e:c0:d3:3a:cb:9c:ea:c0:8f:f7:5f:ae:51:16:46:10:af:02:\n         06:ee:c0:b6:57:d4:0d:ac:8c:d8:d7:a0:f3:87:6e:c3:e2:cb:\n         e9:4e:d4:a1:7c:fd:76:3b\n```\n\n----------------------------------------\n\nTITLE: Email Address Obfuscation for Security Contact\nDESCRIPTION: This script dynamically constructs and displays the security email address by combining parts of the address to prevent simple email harvesting by bots. It creates an anchor element and appends it to a specific element in the DOM.\n\nLANGUAGE: javascript\nCODE:\n```\nvar parts = [\"security\", '@', \"letsencrypt\", \".\", \"org\"];\nvar anchor = document.createElement(\"a\");\nanchor.href = \"mailto:\" + parts.join(\"\");\nanchor.text = parts.join(\"\");\ndocument.getElementById(\"email\").appendChild(anchor)\n```\n\n----------------------------------------\n\nTITLE: Installing mkcert on macOS using Homebrew\nDESCRIPTION: This command demonstrates how to install the mkcert tool on macOS using Homebrew package manager. mkcert is a tool for creating locally-trusted development certificates.\n\nLANGUAGE: bash\nCODE:\n```\nbrew install mkcert\n```\n\n----------------------------------------\n\nTITLE: Creating a certificate for localhost using the root CA\nDESCRIPTION: This command creates a certificate for localhost signed by the previously created root CA. It uses the domains.ext file to include all the specified alternate names and IP addresses.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl x509 -req -sha256 -days 825 -in localhost.csr \\\n  -CA RootCA.pem -CAkey RootCA.key -CAcreateserial \\\n  -extfile domains.ext -out localhost.crt\n```\n\n----------------------------------------\n\nTITLE: Referencing Boulder GitHub Repository with Help Wanted Issues\nDESCRIPTION: A markdown link pointing to Boulder's GitHub repository with issues labeled as 'help wanted', which is where new contributors can find tasks to work on.\n\nLANGUAGE: markdown\nCODE:\n```\n'help wanted'-Issues\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of OCTET STRING\nDESCRIPTION: This example demonstrates the DER encoding of an OCTET STRING containing four bytes (03 02 06 A0). The encoding consists of the OCTET STRING tag (04), length (04), and the raw bytes.\n\nLANGUAGE: der\nCODE:\n```\n04 04 03 02 06 A0\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for Let's Encrypt R13\nDESCRIPTION: Complete X.509 certificate details for Let's Encrypt R13, including certificate version, serial number, issuer information, validity period, public key details, and X.509v3 extensions. The certificate is issued by ISRG Root X1 and contains a 2048-bit RSA key.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            5a:00:f2:12:d8:d4:b4:80:f3:92:41:57:ea:29:83:05\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = R13\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:a5:67:70:8d:d0:56:81:64:15:17:61:cd:b9:06:\n                    d4:ad:19:90:8c:26:50:37:98:16:63:92:54:db:d9:\n                    cc:84:05:93:ec:d3:ec:08:1b:a0:60:51:43:48:7d:\n                    2b:c7:48:96:9e:b4:2d:da:9d:c8:27:3b:57:a1:9f:\n                    ab:f0:d6:0e:d4:0e:30:ca:6f:9b:b1:d1:d6:a4:9d:\n                    32:3e:58:4e:35:6f:45:58:68:71:17:fc:3e:d8:5d:\n                    82:a0:2f:b2:51:6c:b0:1a:5d:b8:59:ce:35:65:c8:\n                    8b:a1:af:10:37:ff:e3:9c:5d:c2:49:17:34:ff:8c:\n                    2b:8b:8d:f0:bc:71:2c:93:0c:1d:05:c4:ba:c7:cd:\n                    aa:c9:5e:7c:d1:c9:01:f7:9c:03:f6:fc:0a:5d:f4:\n                    da:7b:e6:db:76:42:70:eb:f4:4d:22:da:00:77:6f:\n                    d6:c9:5f:17:fd:da:75:2e:a5:57:0c:f6:ea:5c:b6:\n                    e0:73:a5:68:cf:a1:74:e2:75:82:7e:10:9f:c1:f5:\n                    a2:eb:01:e9:38:b1:0a:44:cc:d3:c2:89:f5:49:35:\n                    82:0a:34:b3:1c:e9:88:c2:47:4e:82:0e:0a:36:f0:\n                    47:4f:8a:f1:29:04:75:da:cd:e1:9a:5c:ff:5e:9d:\n                    98:95:ba:9a:43:d0:4a:a2:17:05:01:04:30:d3:32:\n                    b3:8f\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                E7:AB:9F:0F:2C:33:A0:53:D3:5E:4F:78:C8:B2:84:0E:3B:D6:92:33\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n    Signature Algorithm: sha256WithRSAEncryption\n         51:37:58:52:a1:22:9b:35:bb:4d:ba:ce:ca:92:ea:09:f2:fb:\n         54:ec:18:7f:f4:3b:f4:e1:f9:70:72:c2:65:e8:20:7d:08:43:\n         72:89:e5:93:b2:a0:87:c6:f4:be:2f:bf:5e:e5:ae:ec:23:7c:\n         9f:f5:0f:7a:0d:6f:a3:71:be:b5:a5:e2:ae:bc:ad:b6:14:22:\n         9c:01:c6:c1:cf:d4:75:b3:b2:80:96:bd:ce:e0:5c:57:2a:a8:\n         1f:70:97:4d:70:c8:9d:3f:bc:6b:e7:37:68:45:4c:27:64:ad:\n         fa:94:a7:e1:e7:7e:5a:40:e9:f2:28:ec:8a:3b:c4:c8:5c:04:\n         e3:b8:6e:95:6d:0b:b7:38:e0:f5:f3:95:e4:f9:ab:83:fc:f1:\n         59:b4:6e:2f:e9:34:0c:10:c7:10:97:a7:9c:2b:00:7a:7e:dc:\n         df:93:e6:c7:b8:e9:98:9f:c7:b6:04:61:72:7c:f4:ca:34:81:\n         bf:22:30:e8:bd:50:22:ea:64:0a:fd:92:04:e0:d3:ff:10:c3:\n         de:07:d0:43:22:af:ea:ba:15:e0:6d:84:85:f1:32:02:c5:a9:\n         9a:88:f1:8c:25:02:1a:2c:a0:f7:b1:6f:0e:d9:bf:34:ad:8b:\n         49:cf:65:c9:b2:b1:07:bd:c8:db:e3:f6:1b:70:9a:5a:9b:ef:\n         a4:08:87:09:5b:b7:d2:35:bc:18:2c:4a:75:f8:6c:5e:d9:c8:\n         cb:68:a6:b2:44:2a:55:9d:a6:d0:f9:b1:a1:b6:f6:f1:3b:9c:\n         af:bc:41:2b:b0:ad:c2:f3:eb:6f:bf:68:b3:bb:b6:5c:fd:ce:\n         e5:ff:5b:fc:7e:ba:18:dc:91:ae:09:51:5e:5a:d8:8c:8d:68:\n         19:82:ff:7f:82:35:9f:f4:a0:ba:c7:5a:e9:6b:c0:e8:2d:7d:\n         d2:4c:63:53:5e:58:d7:69:87:53:8f:81:c7:24:7d:73:1d:a1:\n         84:64:bd:7c:08:cc:64:a2:6c:b3:6f:2a:c6:fc:fa:03:1b:b8:\n         09:a0:e6:44:d6:69:2b:fa:50:ad:71:75:ef:25:c2:5e:49:84:\n         5a:0b:d2:38:46:72:e9:9f:69:71:b2:c8:54:41:9c:91:5f:e2:\n         55:ea:b4:00:ea:36:a6:48:3d:a7:84:11:23:2d:2d:2b:67:62:\n         44:43:4b:48:5d:8a:ca:c1:70:6d:8e:81:db:a0:45:78:5b:37:\n         bf:5b:18:55:18:45:5b:d9:cb:90:ea:d0:56:9a:2b:09:2d:0a:\n         c9:99:9f:c1:50:fc:f6:a4:93:96:77:2d:2d:c6:67:21:ab:e3:\n         2a:c2:94:bb:59:c0:d6:25:34:c9:83:1d:61:ea:4a:47:b9:56:\n         6e:7c:21:77:1d:de:c2:89\n```\n\n----------------------------------------\n\nTITLE: Generating Self-Signed Certificate for Localhost using OpenSSL\nDESCRIPTION: This command generates a self-signed X.509 certificate and private key for localhost. It creates a 2048-bit RSA key with SHA-256 hashing, sets the Common Name to 'localhost', and adds appropriate subject alternative name and key usage extensions.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config <( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n```\n\n----------------------------------------\n\nTITLE: Displaying Translation Status with Hugo Shortcode\nDESCRIPTION: A Hugo shortcode that renders the translation status of the Let's Encrypt website content. The shortcode likely generates a table or visual representation showing which translations are up-to-date and which need attention.\n\nLANGUAGE: html\nCODE:\n```\n{{< i18n_status >}}\n```\n\n----------------------------------------\n\nTITLE: Using APPLICATION Tags for Disambiguation in ASN.1\nDESCRIPTION: Demonstrates how to use APPLICATION tags to distinguish between optional fields by assigning unique identifiers to each field, resolving the ambiguity issue.\n\nLANGUAGE: asn1\nCODE:\n```\nPoint ::= SEQUENCE {\n  x [APPLICATION 0] INTEGER OPTIONAL,\n  y [APPLICATION 1] INTEGER OPTIONAL\n}\n```\n\n----------------------------------------\n\nTITLE: Using mkcert for Windows Local Development\nDESCRIPTION: This shows the installation of mkcert on Windows using Chocolatey package manager and how to create a locally-trusted certificate for localhost development.\n\nLANGUAGE: shell\nCODE:\n```\nchoco install mkcert\nmkcert -install\nmkcert localhost 127.0.0.1 ::1\n```\n\n----------------------------------------\n\nTITLE: Viewing Let's Encrypt R3 X.509 Certificate in Text Format\nDESCRIPTION: Certificate details for Let's Encrypt R3, including version, serial number, signature algorithm, issuer, validity period, subject information, public key data, and X.509v3 extensions.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            40:01:75:04:83:14:a4:c8:21:8c:84:a9:0c:16:cd:df\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: O = Digital Signature Trust Co., CN = DST Root CA X3\n        Validity\n            Not Before: Oct  7 19:21:40 2020 GMT\n            Not After : Sep 29 19:21:40 2021 GMT\n        Subject: C = US, O = Let's Encrypt, CN = R3\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:bb:02:15:28:cc:f6:a0:94:d3:0f:12:ec:8d:55:\n                    92:c3:f8:82:f1:99:a6:7a:42:88:a7:5d:26:aa:b5:\n                    2b:b9:c5:4c:b1:af:8e:6b:f9:75:c8:a3:d7:0f:47:\n                    94:14:55:35:57:8c:9e:a8:a2:39:19:f5:82:3c:42:\n                    a9:4e:6e:f5:3b:c3:2e:db:8d:c0:b0:5c:f3:59:38:\n                    e7:ed:cf:69:f0:5a:0b:1b:be:c0:94:24:25:87:fa:\n                    37:71:b3:13:e7:1c:ac:e1:9b:ef:db:e4:3b:45:52:\n                    45:96:a9:c1:53:ce:34:c8:52:ee:b5:ae:ed:8f:de:\n                    60:70:e2:a5:54:ab:b6:6d:0e:97:a5:40:34:6b:2b:\n                    d3:bc:66:eb:66:34:7c:fa:6b:8b:8f:57:29:99:f8:\n                    30:17:5d:ba:72:6f:fb:81:c5:ad:d2:86:58:3d:17:\n                    c7:e7:09:bb:f1:2b:f7:86:dc:c1:da:71:5d:d4:46:\n                    e3:cc:ad:25:c1:88:bc:60:67:75:66:b3:f1:18:f7:\n                    a2:5c:e6:53:ff:3a:88:b6:47:a5:ff:13:18:ea:98:\n                    09:77:3f:9d:53:f9:cf:01:e5:f5:a6:70:17:14:af:\n                    63:a4:ff:99:b3:93:9d:dc:53:a7:06:fe:48:85:1d:\n                    a1:69:ae:25:75:bb:13:cc:52:03:f5:ed:51:a1:8b:\n                    db:15\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            Authority Information Access: \n                CA Issuers - URI:http://apps.identrust.com/roots/dstrootcax3.p7c\n\n            X509v3 Authority Key Identifier: \n                keyid:C4:A7:B1:A4:7B:2C:71:FA:DB:E1:4B:90:75:FF:C4:15:60:85:89:10\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n                  CPS: http://cps.root-x1.letsencrypt.org\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://crl.identrust.com/DSTROOTCAX3CRL.crl\n\n            X509v3 Subject Key Identifier: \n                14:2E:B3:17:B7:58:56:CB:AE:50:09:40:E6:1F:AF:9D:8B:14:C2:C6\n            X509v3 Extended Key Usage: \n                TLS Web Server Authentication, TLS Web Client Authentication\n    Signature Algorithm: sha256WithRSAEncryption\n         d9:4c:e0:c9:f5:84:88:37:31:db:bb:13:e2:b3:fc:8b:6b:62:\n         12:6c:58:b7:49:7e:3c:02:b7:a8:1f:28:61:eb:ce:e0:2e:73:\n         ef:49:07:7a:35:84:1f:1d:ad:68:f0:d8:fe:56:81:2f:6d:7f:\n         58:a6:6e:35:36:10:1c:73:c3:e5:bd:6d:5e:01:d7:6e:72:fb:\n         2a:a0:b8:d3:57:64:e5:5b:c2:69:d4:d0:b2:f7:7c:4b:c3:17:\n         8e:88:72:73:dc:fd:fc:6d:bd:e3:c9:0b:8e:61:3a:16:58:7d:\n         74:36:2b:55:80:3d:c7:63:be:84:43:c6:39:a1:0e:6b:57:9e:\n         3f:29:c1:80:f6:b2:bd:47:cb:aa:30:6c:b7:32:e1:59:54:0b:\n         18:09:17:5e:63:6c:fb:96:67:3c:1c:73:0c:93:8b:c6:11:76:\n         24:86:de:40:07:07:e4:7d:2d:66:b5:25:a3:96:58:c8:ea:80:\n         ee:cf:69:3b:96:fc:e6:8d:c0:33:f3:89:f8:29:2d:14:14:2d:\n         7e:f0:61:70:95:5d:f7:0b:e5:c0:fb:24:fa:ec:8e:cb:61:c8:\n         ee:63:71:28:a8:2c:05:3b:77:ef:9b:5e:03:64:f0:51:d1:e4:\n         85:53:5c:b0:02:97:d4:7e:c6:34:d2:ce:10:00:e4:b1:df:3a:\n         c2:ea:17:be\n```\n\n----------------------------------------\n\nTITLE: Rate Limit Error Message Example in Let's Encrypt API\nDESCRIPTION: An example of a rate limit error message returned by Let's Encrypt when too many registration attempts are made from a single IP address. The message includes the limit that was exceeded and a timestamp indicating when the client can retry.\n\nLANGUAGE: bash\nCODE:\n```\ntoo many new registrations (10) from this IP address in the last 3h0m0s,\nretry after 1970-01-01 00:18:15 UTC.\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of OBJECT IDENTIFIER\nDESCRIPTION: This example shows the DER encoding of the OID 1.2.840.113549.1.1.11 (representing sha256WithRSAEncryption). Each number in the OID is encoded using Base 128 with continuation bits.\n\nLANGUAGE: der\nCODE:\n```\n06 09 2a 86 48 86 f7 0d 01 01 0b\n```\n\n----------------------------------------\n\nTITLE: Bash Command to Demonstrate PEM Certificate Prefix\nDESCRIPTION: A Bash command that uses xxd and base64 to demonstrate why PEM-encoded certificates typically start with 'MII', by converting the common starting bytes of DER-encoded certificates to their base64 representation.\n\nLANGUAGE: bash\nCODE:\n```\nxxd -r -p <<<308200 | base64\n```\n\n----------------------------------------\n\nTITLE: Format Example of Affected Certificate Entry\nDESCRIPTION: Shows the format of each entry in the affected certificates list file. Each line contains the certificate serial number, account ID, a hash of the certificate names, the list of domain names on the certificate, and the issuance date.\n\nLANGUAGE: text\nCODE:\n```\nserial 0362...8fdb 131 b8dc...ed3f names: [....] missing CAA checking results for <name> at 2019-12-03 21:08:34.826011675 +0000 UTC\n```\n\n----------------------------------------\n\nTITLE: Encoding OCTET STRING in DER\nDESCRIPTION: Example showing how an OCTET STRING containing the bytes 03, 02, 06, A0 is encoded in DER.\n\nLANGUAGE: der\nCODE:\n```\n04 04 03 02 06 A0\n```\n\n----------------------------------------\n\nTITLE: X.509 Let's Encrypt R4 Certificate in PEM Format\nDESCRIPTION: This certificate in PEM format represents the Let's Encrypt R4 certificate issued by DST Root CA X3. It includes the base64-encoded certificate data between BEGIN CERTIFICATE and END CERTIFICATE markers. The certificate has a validity period from October 7, 2020 to September 29, 2021.\n\nLANGUAGE: pem\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIEZTCCA02gAwIBAgIQQAF1BIMlO+Rkt3exI9CKgjANBgkqhkiG9w0BAQsFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTIwMTAwNzE5MjE0NVoXDTIxMDkyOTE5MjE0NVow\nMjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxCzAJBgNVBAMT\nAlI0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsyjcdynT55G+87cK\nAMf78lULJSJjUzav6Qgg3w2vKD7NxqtXtp2kJRml0jJtSaYIuccvoZuTxSBAa4Qx\nIKKOMGAlYO/ZGok/H2lxstrqP3NBxJBvZv19nljYd8/NWXVEyaEKe58/Gw46Zm+2\ndc+Ly6+dwHDF/9KCCq9dzeLonIWUpOYANeh+TjmBxyGJYHfqHZbyi4N7R8RtMsBS\nfiMeRbVx7qPvF8IDqZOJ3fWf27rx2uB+l4dxgR4aglbkPnwYogjlFl+o+qjgSFFN\nGBSgDKPltsqztVUSa3LHWn87jPnn2dGOEk0zMwMq8RPhQjzCLllgLm3gB0czZd/S\nZ8pNhQIDAQABo4IBaDCCAWQwEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8E\nBAMCAYYwSwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5p\nZGVudHJ1c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTE\np7Gkeyxx+tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEE\nAYLfEwEBATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2Vu\nY3J5cHQub3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0\nLmNvbS9EU1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFDadPuCxQPYnLHy/jZ0x\nivZUpkYmMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjANBgkqhkiG9w0B\nAQsFAAOCAQEAN4CpgPmK2C5pq/RdV9gEdWcvPnPfT9ToucrAMTcn//wyWBWF2wG4\nhvPBQxxuqPECZsi4nLQ45VJpyC1NDd0GqGQIMqNdC4N4TLDtd7Yhy8v5JsfEMUbb\n6xW4sKeeeKy3afOkel60Xg1/7ndSmppiHqdh+TdJML1hptRgdxGiB8LMpHuW/oM8\nakfyt4TkBhA8+Wu8MM6dlJyJ7nHBVnEUFQ4Ni+GzNC/pQSL2+Y9Mq4HHIk2ZFy0W\nB8KsVwdeNrERPL+LjhhLde1Et0aL9nlv4CqwXHML2LPgk38j/WllbQ/8HRd2VpB+\nJW6Z8JNhcnuBwATHMCeJVCFapoZsPfQQ6Q==\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: DER Encoding with Context-Specific Tags (both coordinates)\nDESCRIPTION: DER encoding of a Point SEQUENCE with both x and y coordinates set to 9 using context-specific tags. This demonstrates a complete encoding of all fields in the SEQUENCE.\n\nLANGUAGE: der\nCODE:\n```\n30 06 80 01 09 81 01 09\n```\n\n----------------------------------------\n\nTITLE: Parsing Account ID from acme.sh Certificate Directory\nDESCRIPTION: Alternative method to extract the account ID with acme.sh by examining the certificate directory.\n\nLANGUAGE: bash\nCODE:\n```\ncat ~/.acme.sh/acme.sh.env\n```\n\n----------------------------------------\n\nTITLE: Example Output from New Page Script\nDESCRIPTION: Example showing the output when running the new-page.sh script to create a new page called \"My New Page\" in the docs section, with translation stubs created for all supported languages.\n\nLANGUAGE: sh\nCODE:\n```\n$ ./new-page.sh docs/new-page \"My New Page\"\nCreated page: ./content/vi/docs/new-page.md\nCreated page: ./content/sv/docs/new-page.md\nCreated page: ./content/he/docs/new-page.md\nCreated page: ./content/ja/docs/new-page.md\nCreated page: ./content/base-l10n/docs/new-page.md\nCreated page: ./content/it/docs/new-page.md\nCreated page: ./content/ru/docs/new-page.md\nCreated page: ./content/zh-cn/docs/new-page.md\nCreated page: ./content/uk/docs/new-page.md\nCreated page: ./content/sr/docs/new-page.md\nCreated page: ./content/zh-tw/docs/new-page.md\nCreated page: ./content/pt-br/docs/new-page.md\nCreated page: ./content/de/docs/new-page.md\nCreated page: ./content/ko/docs/new-page.md\nCreated page: ./content/id/docs/new-page.md\nCreated page: ./content/fr/docs/new-page.md\nCreated page: ./content/es/docs/new-page.md\nCreated page: ./content/en/docs/new-page.md\n```\n\n----------------------------------------\n\nTITLE: Registering Account ID with Certbot\nDESCRIPTION: Command to register a new Let's Encrypt account with Certbot, which will display the account ID in the process.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot register --email example@example.com\n```\n\n----------------------------------------\n\nTITLE: Retrieving Directory Resource with Profiles in ACME\nDESCRIPTION: Example HTTP request and response showing how to access the directory resource that advertises available certificate profiles.\n\nLANGUAGE: bash\nCODE:\n```\nGET /directory HTTP/1.1\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n    ...\n    \"meta\": {\n        \"profiles\": {\n            \"classic\": \"The same profile you're accustomed to\",\n            \"tlsserver\": \"https://letsencrypt.org/2025/01/09/acme-profiles/\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Structure for Let's Encrypt Authority X2\nDESCRIPTION: This snippet shows the detailed structure of an X.509 certificate for Let's Encrypt Authority X2 issued by DST Root CA X3. It includes certificate fields such as version, serial number, signature algorithm, validity period, subject details, public key information, and X509v3 extensions.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            c3:83:4c:98:c0:bd:6b:25:2c:a3:79:b6:6f:a5:2b:0e\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: O = Digital Signature Trust Co., CN = DST Root CA X3\n        Validity\n            Not Before: Oct 19 22:35:01 2015 GMT\n            Not After : Oct 19 22:35:01 2020 GMT\n        Subject: C = US, O = Let's Encrypt, CN = Let's Encrypt Authority X2\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:e1:24:74:42:7b:b7:91:31:d9:73:ff:38:aa:d8:\n                    ce:44:5c:b7:39:0a:dc:44:ae:0d:bd:45:b9:97:37:\n                    67:af:bd:50:4f:5f:d3:10:54:6b:f7:41:da:8e:63:\n                    e6:6d:5b:c0:e8:40:a9:8c:41:fc:d1:03:89:ff:62:\n                    61:09:60:d6:07:05:78:9a:90:bd:1a:64:3e:4f:dc:\n                    cf:77:2f:89:6b:cb:67:af:41:4d:c5:8d:00:c0:6b:\n                    fe:8d:84:dc:b5:f2:95:31:a8:e8:f6:90:a0:43:4a:\n                    93:74:5c:b3:3e:43:69:4b:89:22:47:74:51:3e:99:\n                    64:c3:cd:24:01:f9:84:2f:28:77:17:22:a7:dd:c3:\n                    6c:08:4c:66:2f:37:74:c5:6f:93:8e:b0:46:37:16:\n                    61:d1:50:98:c8:b0:0f:4f:58:53:7c:ac:f6:da:2d:\n                    96:61:50:ad:43:dc:0a:a6:4f:9e:b5:52:b9:9c:8e:\n                    ef:4e:df:46:b3:31:dc:20:fc:69:c2:a3:20:75:3e:\n                    ec:38:1b:36:4e:66:66:d2:df:f5:66:a4:93:2f:7b:\n                    a6:0e:94:3e:60:3d:4a:4b:1c:6f:ba:b4:4d:1c:3c:\n                    91:58:6e:2f:4d:c4:da:70:db:ed:01:39:76:c0:49:\n                    e7:e9:35:b5:14:06:90:c1:e5:92:e2:10:fd:6b:b9:\n                    b4:85\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            Authority Information Access: \n                OCSP - URI:http://isrg.trustid.ocsp.identrust.com\n                CA Issuers - URI:http://apps.identrust.com/roots/dstrootcax3.p7c\n\n            X509v3 Authority Key Identifier: \n                keyid:C4:A7:B1:A4:7B:2C:71:FA:DB:E1:4B:90:75:FF:C4:15:60:85:89:10\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n                  CPS: http://cps.root-x1.letsencrypt.org\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://crl.identrust.com/DSTROOTCAX3CRL.crl\n\n            X509v3 Name Constraints: \n                Excluded:\n                  DNS:.mil\n\n            X509v3 Subject Key Identifier: \n                C5:B1:AB:4E:4C:B1:CD:64:30:93:7E:C1:84:99:05:AB:E6:03:E2:25\n    Signature Algorithm: sha256WithRSAEncryption\n         07:12:02:16:84:ee:bb:c7:c7:25:27:86:09:04:a4:c4:79:ea:\n         8d:88:20:7f:a6:97:0e:64:92:78:e1:02:eb:da:04:80:0c:e7:\n         d3:19:90:56:c5:83:90:ab:35:6b:7c:2b:e1:b7:52:8c:49:80:\n         5c:2f:ec:7b:c9:27:1a:b0:80:fa:4d:81:70:bf:b9:3d:e9:ae:\n         4b:f0:b7:ed:a5:bf:32:89:29:ba:9d:1f:e9:68:e3:43:fc:12:\n         e4:b2:c8:93:b3:da:18:eb:47:33:4c:1d:b2:47:60:34:bd:3a:\n         11:79:58:2e:4b:39:04:1a:c9:d8:0b:67:f2:47:c5:78:09:ca:\n         91:19:a9:c9:95:81:0f:b2:60:1b:34:5c:fc:17:8c:4e:ce:13:\n         cb:db:c7:94:44:c2:ee:e0:4e:83:08:a8:0a:16:46:85:96:d8:\n         cc:52:83:6f:11:18:f5:67:1f:31:e4:d9:75:75:9d:91:b2:f5:\n         3f:8d:61:0f:75:bd:65:89:af:5a:73:34:41:59:d1:c9:c0:db:\n         11:b0:4d:e2:7e:cd:9d:d4:44:27:f0:dd:9d:54:f9:80:0b:dd:\n         85:26:ae:f7:68:44:19:40:48:e4:e6:34:99:97:4a:8f:6a:bc:\n         c6:0f:6b:70:c4:a2:60:0f:a0:54:05:66:ab:12:37:a9:2e:a8:\n         31:08:a8:c0\n```\n\n----------------------------------------\n\nTITLE: Running Hugo Server for Local Development\nDESCRIPTION: Command to run a local development server for the Let's Encrypt website with the -F flag to show future-dated content like blog posts.\n\nLANGUAGE: sh\nCODE:\n```\nhugo server -F\n```\n\n----------------------------------------\n\nTITLE: DER Encoding with Context-Specific Tags (y coordinate only)\nDESCRIPTION: DER encoding of a Point SEQUENCE with only a y coordinate value of 9 using context-specific tag [1]. This shows how different fields with the same base type are distinguished.\n\nLANGUAGE: der\nCODE:\n```\n30 03 81 01 09\n```\n\n----------------------------------------\n\nTITLE: Finding Account ID with ZeroSSL ACME Client\nDESCRIPTION: Displaying the account ID for users of ZeroSSL's ACME client implementation.\n\nLANGUAGE: bash\nCODE:\n```\ncat /etc/zerossl/acme.json\n```\n\n----------------------------------------\n\nTITLE: Adding New Language Configuration Files in Let's Encrypt Project\nDESCRIPTION: Instructions for creating language-specific configuration files by copying English templates and adjusting them for a new language. This includes configuration for language settings, menu items, and translations.\n\nLANGUAGE: markdown\nCODE:\n```\n1. In `config\\_default\\`, copy `config\\_default\\languages.en.toml` into `config\\_default\\languages.XX.toml` (where XX is your language code) and update it following indications given in comments (lines starting with `#`)\n2. In `config\\_default\\`, copy `config\\_default\\menu.en.toml` into `config\\_default\\menu.XX.toml` (where XX is your language code), translate `name =` and prefix urls with `/XX/`.\n3. In `i18n\\` copy `en.toml` into `XX.toml` (where XX is your language code) and translate the strings.\n4. Download Plotly translation from https://github.com/plotly/plotly.js/tree/master/dist/plotly-locale-XX.js into `/static/js`\n5. Add your language in `netlify.toml` and `layouts\\shortcodes\\plotly.html` ().\n\n6. Copy `content\\base-l10n\\` into `content\\XX\\` (where XX is your language code)\n```\n\n----------------------------------------\n\nTITLE: Finding Account ID with Windows ACME Simple (WACS)\nDESCRIPTION: Command to find the account ID when using Windows ACME Simple (WACS) client for certificate management.\n\nLANGUAGE: bash\nCODE:\n```\nwacs.exe --generateconfig\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate Structure for Let's Encrypt Authority X2\nDESCRIPTION: This is a detailed representation of an X.509 certificate for Let's Encrypt Authority X2, showing its structure, validity period, cryptographic details, and extension fields. The certificate was issued by ISRG Root X1 and serves as an intermediate CA in the Let's Encrypt PKI hierarchy.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            96:36:4c:a7:38:0b:e4:8b:dc:90:c6:cd:e0:b7:de:68\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Jun  4 12:00:31 2015 GMT\n            Not After : Jun  4 12:00:31 2020 GMT\n        Subject: C = US, O = Let's Encrypt, CN = Let's Encrypt Authority X2\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:e1:24:74:42:7b:b7:91:31:d9:73:ff:38:aa:d8:\n                    ce:44:5c:b7:39:0a:dc:44:ae:0d:bd:45:b9:97:37:\n                    67:af:bd:50:4f:5f:d3:10:54:6b:f7:41:da:8e:63:\n                    e6:6d:5b:c0:e8:40:a9:8c:41:fc:d1:03:89:ff:62:\n                    61:09:60:d6:07:05:78:9a:90:bd:1a:64:3e:4f:dc:\n                    cf:77:2f:89:6b:cb:67:af:41:4d:c5:8d:00:c0:6b:\n                    fe:8d:84:dc:b5:f2:95:31:a8:e8:f6:90:a0:43:4a:\n                    93:74:5c:b3:3e:43:69:4b:89:22:47:74:51:3e:99:\n                    64:c3:cd:24:01:f9:84:2f:28:77:17:22:a7:dd:c3:\n                    6c:08:4c:66:2f:37:74:c5:6f:93:8e:b0:46:37:16:\n                    61:d1:50:98:c8:b0:0f:4f:58:53:7c:ac:f6:da:2d:\n                    96:61:50:ad:43:dc:0a:a6:4f:9e:b5:52:b9:9c:8e:\n                    ef:4e:df:46:b3:31:dc:20:fc:69:c2:a3:20:75:3e:\n                    ec:38:1b:36:4e:66:66:d2:df:f5:66:a4:93:2f:7b:\n                    a6:0e:94:3e:60:3d:4a:4b:1c:6f:ba:b4:4d:1c:3c:\n                    91:58:6e:2f:4d:c4:da:70:db:ed:01:39:76:c0:49:\n                    e7:e9:35:b5:14:06:90:c1:e5:92:e2:10:fd:6b:b9:\n                    b4:85\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n                  CPS: http://cps.root-x1.letsencrypt.org\n\n            X509v3 Subject Key Identifier: \n                C5:B1:AB:4E:4C:B1:CD:64:30:93:7E:C1:84:99:05:AB:E6:03:E2:25\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://crl.root-x1.letsencrypt.org\n\n            Authority Information Access: \n                OCSP - URI:http://ocsp.root-x1.letsencrypt.org/\n                CA Issuers - URI:http://cert.root-x1.letsencrypt.org/\n\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n    Signature Algorithm: sha256WithRSAEncryption\n         0e:1e:a8:c8:d2:10:92:82:17:a5:d1:47:9a:44:ba:d9:12:fd:\n         ee:f1:83:2d:af:09:86:1b:c3:5a:2c:a5:08:86:43:81:4e:e5:\n         3b:5b:bc:ef:b9:2b:8b:fb:59:1d:db:d6:97:8c:43:4d:eb:5f:\n         40:eb:fb:29:66:18:dc:a9:65:a8:4d:c5:3a:83:88:ed:17:da:\n         c1:c1:c0:95:a3:fe:4e:b5:f8:c6:2a:dd:b4:58:c4:ac:08:e9:\n         c7:6e:4c:35:db:61:0c:62:94:64:c3:34:66:54:20:52:8a:22:\n         5a:33:e3:31:80:97:af:2c:8f:ef:29:2e:0e:77:e0:4a:8a:82:\n         5f:3e:ad:64:b1:72:54:e8:4b:52:ab:c9:d2:5e:ce:89:04:75:\n         04:57:7f:1b:bb:f6:2b:1c:58:0d:cf:22:3d:6f:6d:a5:01:07:\n         5e:a5:9d:62:71:03:72:e1:4c:68:54:ae:16:6b:0a:71:6e:39:\n         9f:77:28:ef:24:08:a3:cc:ec:45:68:ed:ce:05:09:82:88:f1:\n         e5:83:b1:fd:05:17:8f:40:e3:13:14:9b:13:c9:00:f2:32:66:\n         4c:10:f0:a9:23:a7:37:13:1c:e9:93:e0:21:17:52:13:6e:f5:\n         e3:08:f6:a0:4a:55:21:43:0c:c8:9f:27:c1:f3:09:a5:4b:c8:\n         cb:d8:d4:a7:fb:89:1f:bc:e3:41:24:5f:51:06:0b:e6:77:f4:\n         46:8a:d6:18:e6:df:5e:0b:62:92:e8:60:6b:d8:60:b2:4e:fc:\n         9e:fa:5c:0c:7c:66:0a:68:7e:a1:f3:d6:00:04:7e:23:0b:30:\n         bc:4b:42:43:a3:28:b5:ea:a1:41:1d:e4:a7:67:cd:a3:b7:68:\n         b1:fd:d6:09:da:b3:2f:1a:0f:80:f9:f5:17:c4:3b:6c:5c:6a:\n         8c:c3:da:b6:d8:b2:80:0c:57:37:19:64:7c:34:4a:67:66:a1:\n         b6:b3:d9:86:b3:30:18:c5:45:ca:86:9e:d8:3a:b3:95:ea:c2:\n         eb:1a:95:e8:b2:b2:78:cc:08:2f:fd:9a:f2:0f:a8:6c:ae:56:\n         70:4f:4c:16:94:0c:50:c4:85:7e:aa:0f:63:17:e1:dc:ce:0c:\n         bf:75:67:4a:20:60:35:9c:14:b3:7e:b8:b9:d9:28:78:de:e0:\n         9a:0d:bb:39:09:d8:55:d6:39:11:1c:b1:6f:77:29:76:fe:dd:\n         3f:02:3a:38:53:0c:ab:ca:e0:7e:ae:7d:da:d9:c7:1b:ac:c7:\n         ad:1a:8c:90:0c:07:35:b4:5d:37:f9:9e:6d:b2:18:40:ed:c9:\n         5a:0c:80:92:e9:d2:b9:22:3e:5a:2b:9a:01:f1:4a:41:43:38:\n         96:d8:f7:82:7b:cb:14:4a\n```\n\n----------------------------------------\n\nTITLE: OID Assignment with Human-Readable Names in ASN.1\nDESCRIPTION: Example from RFC 5280 showing how an OID is assigned with human-readable arc names. This defines the id-pkix OID using a hierarchical structure with named components.\n\nLANGUAGE: asn1\nCODE:\n```\nid-pkix  OBJECT IDENTIFIER  ::=\n         { iso(1) identified-organization(3) dod(6) internet(1)\n                    security(5) mechanisms(5) pkix(7) }\n```\n\n----------------------------------------\n\nTITLE: Template for Do-Not-Translate Page Configuration in Markdown\nDESCRIPTION: Markdown configuration block for pages that should not be translated. This setup ensures the page exists in all languages but displays a notice to translators not to translate it and prevents the display of a message encouraging translation.\n\nLANGUAGE: text\nCODE:\n```\n---\nslug: repository\nuntranslated: 1\ndo_not_translate: 1\n---\n\n<!-- Note for translators: do NOT translate this file -->\n\n```\n\n----------------------------------------\n\nTITLE: Sample Certbot Registration JSON Output\nDESCRIPTION: Example of Certbot's registration JSON output containing the account URI which includes the account ID.\n\nLANGUAGE: json\nCODE:\n```\n\"uri\": \"https://acme-v02.api.letsencrypt.org/acme/acct/12345678\"\n```\n\n----------------------------------------\n\nTITLE: Finding Account ID with acme.sh Client\nDESCRIPTION: Command to locate the account ID when using the acme.sh ACME client by examining the account configuration file.\n\nLANGUAGE: bash\nCODE:\n```\ngrep ACCOUNT ~/.acme.sh/account.conf\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for Let's Encrypt Staging CA\nDESCRIPTION: This code snippet displays the full X.509 certificate structure for a Let's Encrypt staging certificate authority. It includes certificate metadata, issuer details, validity period, public key information, X509v3 extensions, and RSA signature information.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            26:d9:25:64:b4:0b:b2:78:30:a7:40:c3:e1:c9:5b:6a\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) False Fennel E6\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:ee:62:2c:84:40:1b:7e:76:61:5c:79:82:2d:38:\n                    5a:80:1a:bc:c0:d2:98:f3:86:24:53:29:d8:f3:7b:\n                    c1:a3:c1:46:20:57:41:43:bc:50:57:73:6b:3e:48:\n                    62:74:c5:f2:5b:86:90:70:00:f1:17:fb:24:02:76:\n                    40:b2:f9:e3:c5:1f:a8:0a:76:19:02:d0:57:81:e1:\n                    3e:58:50:3a:14:4e:ff:7e:bf:de:71:b4:e0:96:c0:\n                    20:a7:9f:5e:00:36:43\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                A1:74:1A:06:6D:50:B7:86:2D:4A:2C:C1:7E:B4:8D:88:49:6C:CD:16\n            X509v3 Authority Key Identifier: \n                B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n    Signature Algorithm: sha256WithRSAEncryption\n    Signature Value:\n        51:a3:3a:b7:3e:1a:56:58:0a:ec:4d:29:2f:6e:fb:89:7a:a4:\n        3b:b1:fb:e0:a0:dc:55:f7:85:1d:10:84:26:4f:28:e4:71:9e:\n        e6:bd:74:99:65:7a:ce:4d:05:c2:1f:e5:6d:58:d8:e5:bb:d4:\n        49:7e:a2:af:b4:70:24:b7:f5:ba:9f:1b:77:7e:f6:c4:5b:aa:\n        72:e5:a8:1f:71:ca:c4:5f:a4:63:e6:63:62:11:43:86:05:ba:\n        b2:33:ba:b1:70:fd:3b:21:a0:61:b0:2f:be:15:b4:18:26:c5:\n        e3:b5:7e:13:fc:39:62:5f:9c:c0:77:10:82:dd:cf:a8:71:12:\n        a6:d0:b4:29:94:ff:67:a3:41:34:04:2b:a7:10:b4:18:f7:dd:\n        af:8c:50:8e:e2:62:74:4f:f8:e4:cb:d4:cf:35:b6:66:51:91:\n        45:98:ed:62:2d:30:60:cf:21:a6:e1:5d:f1:ea:be:a6:17:87:\n        48:6e:c6:a5:03:96:cd:15:8c:2e:76:c6:98:8a:e9:ed:85:f9:\n        9c:68:bb:09:81:c1:09:71:48:bf:69:25:63:2f:85:11:89:74:\n        50:88:06:e9:50:3e:6f:f4:b5:bb:76:b1:e0:71:90:52:96:21:\n        89:a8:b8:38:7e:db:cb:30:91:34:a5:7f:c9:95:d0:a1:a6:11:\n        59:8f:91:ae:42:42:48:12:83:86:ed:34:75:28:67:5c:70:b7:\n        ef:9f:e0:dd:76:01:aa:52:7c:f0:d8:57:22:7a:f5:cf:5f:c3:\n        e9:1b:15:31:5a:f4:6d:64:78:de:f9:48:82:68:bd:65:a1:cb:\n        85:d4:11:c1:a4:22:70:cc:e0:6c:b2:11:f7:f5:92:97:84:79:\n        96:8e:41:97:b6:52:88:e7:a6:d7:e6:a8:b7:f4:a8:38:fa:9f:\n        4d:80:05:47:43:88:78:50:4f:b6:5a:eb:7e:1b:d2:9c:4a:00:\n        f5:d6:da:94:85:7e:5a:c6:65:cd:9e:fa:92:a9:20:6e:2e:8b:\n        ff:34:ba:af:00:1b:26:de:1d:d6:b5:0e:5e:e2:4b:63:2c:bf:\n        8c:29:06:28:b8:8f:54:2c:f2:05:c0:6f:bc:88:f6:8c:d2:db:\n        07:82:9a:ee:68:a8:33:78:4a:76:19:05:8a:22:ad:3f:2c:79:\n        48:9a:eb:66:b0:5c:c5:73:92:44:14:b2:34:50:cf:6a:2a:42:\n        c4:d4:67:1b:43:b8:85:34:54:23:58:3d:8d:14:81:e4:8b:8d:\n        dc:e8:f9:c5:08:6d:aa:0e:e8:cf:2b:00:ae:36:b6:af:f5:8c:\n        9f:b4:46:5b:54:14:f1:f1:2d:7c:62:d0:b2:00:57:4b:45:27:\n        11:09:55:46:e9:bf:b3:6d\n```\n\n----------------------------------------\n\nTITLE: Template for Untranslated Page Configuration in Markdown\nDESCRIPTION: Markdown configuration block for pages that should display English content but indicate they can be translated. This setup ensures the page uses the English content while rewriting links to translations and displaying a message to encourage translators.\n\nLANGUAGE: text\nCODE:\n```\n---\nslug: the-same-than-english\nuntranslated: 1\n---\n\n```\n\n----------------------------------------\n\nTITLE: Finding Account ID in acme.sh Client\nDESCRIPTION: Instructions for locating the account ID in acme.sh client by examining the account.conf file in the configured home directory.\n\nLANGUAGE: bash\nCODE:\n```\n# For acme.sh, the account ID is in the ACCOUNT_URL variable in ~/.acme.sh/account.conf\ngrep -E \"ACCOUNT_URL=\\\"https:\\/\\/acme-v02.api.letsencrypt.org\\/acme\\/acct\\/([0-9]+)\\\"\" ~/.acme.sh/account.conf\n```\n\n----------------------------------------\n\nTITLE: Reading Certificate Expiry Date Using OpenSSL in Bash\nDESCRIPTION: This command uses OpenSSL to connect to a remote server and check the certificate expiry date. It's useful for basic monitoring of certificate expiration in shell scripts.\n\nLANGUAGE: bash\nCODE:\n```\necho | openssl s_client -servername NAME -connect NAME:443 2>/dev/null | openssl x509 -noout -dates\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of BIT STRING\nDESCRIPTION: This example shows the DER encoding of an 18-bit BIT STRING (011011100101110111). The encoding includes a prefix byte (06) indicating the number of unused bits in the last byte.\n\nLANGUAGE: der\nCODE:\n```\n03 04 06 6e 5d c0\n```\n\n----------------------------------------\n\nTITLE: Updating Email Address with Certbot to Resubscribe to Let's Encrypt Notifications\nDESCRIPTION: This command allows users to update their Let's Encrypt account email address using Certbot, which automatically resubscribes them to expiration notifications after unsubscribing. The example shows adding a '+1' suffix to an existing email address.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot update_account --email yourname+1@example.com\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate Structure for Let's Encrypt Staging Environment\nDESCRIPTION: This displays the detailed structure of an X.509 certificate for Let's Encrypt's staging environment. It shows certificate metadata, issuer information, validity period, public key details, and various X.509v3 extensions that define the certificate's constraints and capabilities.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            47:5c:e1:4b:4f:76:54:9f:17:2b:6a:4d:9b:fb:75:80\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Puzzling Parsnip E7\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:7b:b9:75:d0:46:8c:fe:8a:cb:fb:ed:3d:55:e2:\n                    91:7c:98:c5:df:3e:b9:af:af:21:21:41:73:78:49:\n                    d4:8c:ff:ce:67:bc:4f:70:bb:05:0b:1c:53:75:ac:\n                    95:18:15:78:8e:9c:d8:2a:44:9f:6a:41:fb:9c:5b:\n                    d8:f4:55:63:cb:bc:46:8c:ab:b4:a5:7b:43:48:1c:\n                    51:b4:39:6c:c1:d8:25:cd:59:b9:b9:f8:b5:c5:ad:\n                    fa:d0:24:cf:1e:49:a2\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                A4:0F:94:0B:44:63:6A:99:A9:A0:D9:8C:66:43:B1:4F:DC:B0:2C:46\n            X509v3 Authority Key Identifier: \n                B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n    Signature Algorithm: sha256WithRSAEncryption\n    Signature Value:\n        64:c2:cd:21:14:57:51:33:a1:d8:6d:b7:92:57:eb:00:5f:7a:\n        a2:1f:41:92:40:20:12:de:57:bc:65:d1:03:c3:4b:dd:2d:05:\n        2a:34:0f:1d:61:de:2d:d8:fd:2d:8c:58:39:dd:95:6b:f0:c1:\n        43:42:f3:f4:cc:cc:93:01:13:93:ed:20:78:ff:cc:86:f5:04:\n        d6:57:db:90:e1:f3:23:c1:18:78:ef:81:16:bd:d5:c3:30:f5:\n        48:c3:55:bd:16:18:85:35:ab:57:40:3f:68:e8:38:37:43:dd:\n        69:b9:65:31:30:ec:22:bb:1f:97:92:93:11:1e:91:50:ff:a9:\n        07:0b:d3:b8:c2:18:d8:aa:f6:4e:61:96:91:c2:0d:1a:88:08:\n        38:48:e9:e8:ac:93:1e:a3:6d:b5:e6:70:2c:15:68:9d:7c:91:\n        7b:5b:37:d4:40:74:56:b2:64:9d:26:e9:94:7f:a4:92:62:5d:\n        a1:84:1d:75:9c:54:d2:1d:01:bb:e6:e6:86:ab:3d:bb:27:f5:\n        d2:3f:e4:22:17:40:41:05:1e:62:2b:bc:76:5b:bb:ce:14:6d:\n        54:4c:50:2b:79:d8:7b:48:09:09:7a:19:47:7e:73:5c:ac:52:\n        c7:18:fb:e4:44:b6:f5:81:6e:81:64:7e:ed:97:60:c1:dd:ab:\n        8c:b8:fe:4c:74:5c:ad:12:af:3c:1c:6f:37:79:ea:e9:e1:64:\n        41:67:c4:4b:f9:1d:e7:5c:3a:3a:7c:2b:f5:48:ca:fa:9b:30:\n        39:96:cc:ad:ae:60:c3:b9:64:92:46:c9:ff:ad:29:31:ef:c8:\n        7e:26:d0:df:06:b0:33:f9:00:15:61:ae:c8:e3:d9:ca:44:bc:\n        a1:73:d4:63:38:64:c6:a5:98:76:2c:b6:e2:43:4f:5b:4c:12:\n        20:48:dd:78:66:20:81:6d:eb:7c:bc:7e:5c:f8:f7:83:45:99:\n        c1:6d:26:6b:26:7f:49:bb:5e:26:e3:76:75:ae:63:8e:71:de:\n        15:a0:6d:70:8c:3d:97:43:70:eb:33:72:b5:4c:c9:fa:0d:6a:\n        bb:2a:cd:6c:6f:e5:e4:a0:c5:4a:aa:2f:be:33:86:e2:a7:73:\n        d4:c5:d3:4d:7e:3f:9e:92:8b:da:68:ad:49:26:c8:c4:0e:00:\n        a9:7f:a5:7e:4e:16:6b:0d:3e:f6:b6:63:98:ae:eb:3b:a1:05:\n        c3:82:52:99:da:b2:56:38:de:4b:07:f9:0a:e5:9f:4d:9f:bf:\n        ee:31:28:71:bb:0c:69:e6:bc:07:7f:9c:db:01:09:5f:00:a8:\n        28:b4:48:0f:41:f9:b3:7e:d4:47:bd:36:9b:e2:f0:31:f8:3d:\n        ae:f3:e3:47:97:38:ad:26\n```\n\n----------------------------------------\n\nTITLE: Configuring Certbot to use Let's Encrypt Staging Environment\nDESCRIPTION: This command shows how to use Certbot with Let's Encrypt's staging environment by specifying the --test-cert flag to avoid rate limits during testing.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot --test-cert ...\n```\n\n----------------------------------------\n\nTITLE: Aggiornamento dell'indirizzo email dell'account Certbot in Let's Encrypt\nDESCRIPTION: Comando per aggiornare l'indirizzo email associato al proprio account Let's Encrypt utilizzando Certbot, utile per ricominciare a ricevere notifiche di scadenza dopo aver annullato l'iscrizione.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot update_account --email yourname+1@example.com\n```\n\n----------------------------------------\n\nTITLE: BER Encoding of UTCTime\nDESCRIPTION: This example shows the BER encoding of December 15, 2019 19:02:10 Pacific Standard Time (-0800) as a UTCTime value. The tag (17) is followed by the length (11) and then the ASCII representation of the date-time string.\n\nLANGUAGE: der\nCODE:\n```\n17 11 31 39 31 32 31 35 31 39 30 32 31 30 2d 30 38 30 30\n```\n\n----------------------------------------\n\nTITLE: Deleting Certificate After Revocation Using Certbot\nDESCRIPTION: This command demonstrates how to delete a certificate after it has been revoked, using the --delete-after-revoke flag with Certbot.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-name example.com --delete-after-revoke\n```\n\n----------------------------------------\n\nTITLE: Defining ASN.1 SEQUENCE with APPLICATION Tags\nDESCRIPTION: ASN.1 definition of a Point SEQUENCE with optional fields using APPLICATION class tags to disambiguate the fields. This demonstrates how to use APPLICATION tags for field identification.\n\nLANGUAGE: asn1\nCODE:\n```\nPoint ::= SEQUENCE {\n  x [APPLICATION 0] INTEGER OPTIONAL,\n  y [APPLICATION 1] INTEGER OPTIONAL\n}\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate Structure for Let's Encrypt Staging CA\nDESCRIPTION: This shows the detailed structure of an X.509 certificate for a Let's Encrypt staging intermediate certificate authority named 'Wannabe Watercress R11'. The certificate contains various fields including version, serial number, validity dates, public key information, and extensions that define the certificate's capabilities and trust relationships.\n\nLANGUAGE: plaintext\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            e3:ae:0e:25:60:40:5c:80:4d:e8:0f:3b:17:ce:6b:92\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Wannabe Watercress R11\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\n                Modulus:\n                    00:95:60:7c:1e:da:0c:4c:bf:d2:61:fd:dd:41:82:\n                    87:16:dd:a9:b9:13:f8:81:3a:b2:e4:c8:43:60:46:\n                    a2:e6:56:5e:af:35:15:e0:a0:aa:4f:8e:d3:f8:d0:\n                    cb:f5:ed:9d:8b:95:88:51:b2:77:9a:2b:d8:1d:48:\n                    d9:8d:4f:12:65:63:cb:e2:aa:cf:5d:93:85:f0:28:\n                    9c:43:3d:f9:7f:bc:90:56:e0:cf:e7:27:31:70:4b:\n                    7d:2a:bb:b5:45:f2:34:9f:c8:5f:36:43:b2:a4:2e:\n                    5e:4d:c4:9d:fd:63:9c:af:40:5c:c7:8c:bd:d8:08:\n                    ef:1c:a0:c1:b9:bf:bd:83:0e:05:b3:73:ef:70:93:\n                    69:dc:a1:78:81:df:fd:e6:56:0e:11:b4:3d:70:d7:\n                    13:e9:76:3b:52:87:99:1e:07:b8:ea:82:70:f6:fc:\n                    8e:f9:38:b0:73:6a:6c:ba:34:bf:67:82:e6:84:73:\n                    c7:17:f0:27:67:a6:80:82:40:8f:3f:17:3f:6a:84:\n                    fb:49:8c:ff:8e:fd:11:c2:ba:05:95:91:2a:6d:b8:\n                    24:6b:6b:cb:5c:9c:94:c6:1d:18:8d:af:f1:b2:62:\n                    c1:d9:67:88:d9:ef:a8:5b:26:3c:5a:a7:07:f6:e0:\n                    4f:11:01:5c:ee:31:1b:30:fe:74:ba:fe:15:09:f2:\n                    5a:8f\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                13:CB:D7:F6:AE:9D:FC:69:42:64:D6:5C:7C:23:CC:85:F9:47:C7:B6\n            X509v3 Authority Key Identifier: \n                B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n    Signature Algorithm: sha256WithRSAEncryption\n    Signature Value:\n        78:3f:69:b7:9b:16:b5:71:10:c8:5f:78:44:cc:e8:94:5f:ae:\n        8a:9f:8e:0d:86:8d:c4:f1:09:1b:ff:77:c6:dc:4f:73:a4:02:\n        d1:bb:02:f5:02:20:bf:a7:41:93:eb:35:2d:47:f9:ba:52:25:\n        25:94:35:52:59:0b:81:31:f8:1f:31:e2:df:b3:b8:8a:f7:1b:\n        48:7a:48:2d:c8:03:d2:12:a7:7e:db:f4:13:ca:3d:48:d0:1a:\n        21:c3:bb:0c:a3:66:6d:e5:90:e9:c3:e5:7c:e9:51:b6:97:08:\n        5d:8a:1c:f7:9c:18:f4:08:a9:37:4f:e4:7a:7e:4a:c4:3c:5d:\n        c5:34:8a:b9:64:bb:01:ef:99:5a:1e:e1:98:b7:5f:0d:ce:42:\n        f3:9a:36:a2:62:ef:33:fe:8e:be:6a:74:c5:44:8f:53:fc:45:\n        47:57:e4:d2:44:66:33:de:f9:b2:67:a1:10:e5:d2:1c:e2:76:\n        e3:31:5a:63:a0:67:31:45:9a:eb:bc:8b:6b:06:f1:52:3d:00:\n        ab:31:a6:a2:17:6a:cf:b2:ee:0e:1b:4a:77:da:17:26:04:73:\n        69:c1:73:b8:c4:90:96:e3:74:8a:fc:0a:23:38:ab:a4:b4:7f:\n        00:9a:33:e2:71:d7:21:a0:d0:47:27:da:03:78:eb:d5:56:29:\n        2b:e6:c0:a6:82:17:02:38:31:47:fb:c4:16:d6:c4:1f:0e:df:\n        34:ed:c5:29:10:9d:76:fc:89:d2:f8:7e:38:a2:2b:63:49:eb:\n        6c:65:28:c9:19:4f:94:a1:7f:f5:7a:d0:dd:42:68:65:ce:f4:\n        f2:60:41:8f:3a:a2:8d:77:54:43:44:c1:d7:f8:ab:00:04:3b:\n        3b:fe:a2:f9:38:50:c4:49:6d:ef:b8:18:5b:3b:f6:ff:cb:12:\n        a1:a8:33:a9:12:97:3a:a2:c9:72:43:49:40:80:37:f6:de:07:\n        30:81:60:ab:10:cb:46:e4:4d:b6:8a:05:51:ea:0e:be:87:03:\n        59:34:2b:f3:46:d4:a7:ad:f9:ed:c0:6d:02:5e:f2:a5:c3:b3:\n        ac:f2:ba:9b:97:2e:bb:26:5f:43:bc:dd:87:9b:9f:71:f3:1d:\n        15:b8:23:c1:f7:8d:f1:de:38:d8:4c:c1:9c:bc:68:30:0f:53:\n        d8:88:1f:9f:b2:8e:84:59:77:ce:76:7e:58:98:52:87:ea:32:\n        05:2f:0f:ac:a5:0a:07:65:e8:f6:99:d7:99:ae:b5:db:7c:72:\n        14:f0:da:a6:7b:8a:de:28:8d:a4:62:5f:23:4b:14:2c:2a:a3:\n        12:87:58:1b:e6:86:c9:f0:b3:64:52:d6:7e:d6:d4:eb:cd:d8:\n        c5:90:8e:75:d8:18:c4:72\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of PrintableString\nDESCRIPTION: This example demonstrates the DER encoding of the PrintableString \"hi\". The first byte (13) is the tag for PrintableString, followed by the length (02), and then the ASCII values for 'h' (68) and 'i' (69).\n\nLANGUAGE: der\nCODE:\n```\n13 02 68 69\n```\n\n----------------------------------------\n\nTITLE: Using curl to Check if a Hostname's Certificate is Affected\nDESCRIPTION: Demonstrates how to use the checkhost.unboundtest.com API to verify if a specific hostname's certificate is affected by the CAA rechecking incident. The example shows a command that checks letsencrypt.org.\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -XPOST -d 'fqdn=letsencrypt.org' https://checkhost.unboundtest.com/checkhost\nThe certificate currently available on letsencrypt.org is OK. It is not one of the certificates affected by the Let's Encrypt CAA rechecking problem. Its serial number is 03a1c95bdaa36a8268327f2253cbd3ba243\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Details for Let's Encrypt Staging Environment\nDESCRIPTION: This output shows the detailed structure of an X.509 certificate used in Let's Encrypt's staging environment. The certificate is for 'Artificial Apricot R4' and is issued by 'Pretend Pear X1', with a validity period from 2020 to 2025. It includes RSA public key information, certificate extensions, and the digital signature.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            68:26:10:f7:94:01:c3:70:5b:72:62:f2:85:d5:c7:ce\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Sep  4 00:00:00 2020 GMT\n            Not After : Sep 15 16:00:00 2025 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Artificial Apricot R4\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:e8:9f:13:9a:58:7a:cf:ad:9a:c4:5d:be:2b:34:\n                    60:1c:79:b1:7f:47:39:2c:71:80:fb:05:71:f6:e9:\n                    09:9c:1f:73:92:a7:46:fa:0c:86:7d:80:67:c0:f9:\n                    71:9f:2d:09:58:14:bf:d7:fc:2e:ee:bc:be:22:1b:\n                    58:3a:a6:ab:d5:18:3e:7f:e8:03:d3:e4:aa:39:89:\n                    a7:80:d5:bc:20:8c:34:59:38:c7:86:a6:01:d9:dd:\n                    85:c6:ca:fd:6c:f2:29:0f:0a:47:45:b8:04:f0:79:\n                    28:cc:02:b0:ad:6b:39:c4:3b:61:66:56:8c:65:f1:\n                    32:00:ac:dd:c7:c9:82:3e:db:59:cc:a5:b8:b9:b4:\n                    a9:b6:63:4c:a0:61:f1:e6:df:e9:05:6a:cd:1b:3e:\n                    44:16:e4:d8:73:2d:03:92:49:cc:bc:a7:9d:91:52:\n                    67:fa:32:41:c5:54:3f:79:ff:f2:19:ea:7b:fb:55:\n                    a3:a5:6f:d4:42:fc:09:e4:7d:ac:9b:a5:2d:05:10:\n                    1f:a2:ce:54:d9:3b:9b:37:b7:e2:23:d3:86:b1:19:\n                    88:a7:bd:c1:3f:d4:ec:c8:fd:0c:8b:5a:d9:91:50:\n                    1f:30:45:3a:a4:8e:5d:25:74:cd:b7:a8:66:ce:e1:\n                    3a:7e:bb:7e:36:51:da:0b:dc:ab:b3:d8:84:1b:59:\n                    ba:0d\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                9A:EE:C0:15:A3:74:3B:C7:EC:F1:05:60:A6:C2:93:A7:F9:4F:1A:35\n            X509v3 Authority Key Identifier: \n                keyid:B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: sha256WithRSAEncryption\n         b0:a3:fc:6d:cc:e2:e1:96:25:82:e8:5e:97:4d:d8:02:aa:dd:\n         85:ae:32:d0:01:74:54:9c:2c:27:c2:0e:38:a1:56:c3:f8:68:\n         7d:a9:74:44:a5:da:51:3d:5a:e5:21:2e:d3:b6:86:f0:f1:9d:\n         f6:f6:7b:0b:67:ec:22:1a:f9:b7:c2:40:b7:29:ad:d1:59:b4:\n         e1:2c:4f:cc:bb:05:4c:ca:c6:93:8b:98:d7:2c:97:10:2e:f1:\n         d1:95:6d:34:8c:78:0c:fd:5f:2f:b4:93:eb:e6:ce:38:dc:ab:\n         8e:5f:54:c5:51:5e:59:ff:46:62:96:b0:58:de:c0:1b:81:59:\n         36:9f:f7:e0:ca:89:d7:fc:90:9d:88:65:ed:dc:73:83:a4:18:\n         77:78:91:f5:90:a3:3f:10:8a:d5:55:9c:31:1c:2c:06:d7:1f:\n         cb:b8:aa:5c:52:96:de:94:5f:8d:0c:8d:75:9d:e2:fe:03:38:\n         54:eb:09:81:86:0a:65:83:83:b1:cd:85:83:5e:0d:0b:0a:2e:\n         96:d3:fb:7b:dc:79:c6:f1:26:91:88:20:1c:3f:22:4e:18:16:\n         6d:2d:02:d4:81:f5:4a:49:de:83:b5:13:21:55:c4:f3:33:a1:\n         23:16:22:58:66:eb:f8:24:78:fa:e6:9d:72:16:1f:3e:92:02:\n         4b:fe:4c:88:5a:9d:be:98:78:23:fd:00:83:69:01:09:71:c9:\n         96:97:e7:69:5e:6d:23:cb:23:41:6e:32:86:ee:83:a5:0b:3b:\n         c7:1c:40:66:ad:84:a5:cd:62:38:5d:c2:b9:0b:6f:b5:4a:64:\n         90:a9:7b:fb:bc:fa:3c:8c:45:57:49:fb:60:e1:9e:a6:10:0f:\n         1e:d9:2e:9d:b7:fa:ef:ad:e8:90:f9:f0:e6:82:2c:4d:89:04:\n         5d:ee:59:14:a8:fb:f5:11:98:62:18:c6:31:85:6e:76:b5:a8:\n         fd:03:7c:65:72:70:fd:fe:d7:c3:ec:12:85:7b:7f:22:95:56:\n         e5:61:35:38:db:75:98:cc:0b:25:a7:3e:a8:0c:48:9f:b4:a0:\n         99:d9:59:9a:53:31:2c:4b:a1:e6:6b:fa:ff:4a:41:79:a2:8a:\n         d5:95:ac:fb:84:4d:6a:72:ef:47:2e:44:68:85:73:c9:b7:0d:\n         e4:5c:97:0a:d6:14:f7:ac:84:cf:6a:c6:92:4d:11:1f:c0:a0:\n         50:4b:ec:ba:82:ec:6f:f8:8a:64:65:fb:4c:12:23:94:8b:1d:\n         9c:46:82:02:25:eb:31:b1:80:c4:e6:d7:a2:3f:0a:da:91:ff:\n         f3:94:b7:c5:e1:60:d9:56:aa:d8:2a:c7:5d:56:a7:5d:02:86:\n         ba:e0:b7:d7:c5:2f:c1:e1\n```\n\n----------------------------------------\n\nTITLE: Encoding CHOICE with Tag Instructions in DER\nDESCRIPTION: Examples showing how GeneralName CHOICE fields (rfc822Name and dNSName) from RFC 5280 are encoded in DER, using context-specific tags to distinguish between same base types.\n\nLANGUAGE: asn1\nCODE:\n```\n   GeneralName ::= CHOICE {\n        otherName                       [0]     OtherName,\n        rfc822Name                      [1]     IA5String,\n        dNSName                         [2]     IA5String,\n        x400Address                     [3]     ORAddress,\n        directoryName                   [4]     Name,\n        ediPartyName                    [5]     EDIPartyName,\n        uniformResourceIdentifier       [6]     IA5String,\n        iPAddress                       [7]     OCTET STRING,\n        registeredID                    [8]     OBJECT IDENTIFIER }\n```\n\nLANGUAGE: der\nCODE:\n```\n81 0d 61 40 65 78 61 6d 70 6c 65 2e 63 6f 6d\n```\n\nLANGUAGE: der\nCODE:\n```\n82 0b 65 78 61 6d 70 6c 65 2e 63 6f 6d\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Structure for Let's Encrypt Staging Certificate\nDESCRIPTION: This snippet shows the detailed structure of a Let's Encrypt staging certificate in X.509 format. It includes certificate metadata, public key information, and various X.509v3 extensions that define the certificate's properties and usage constraints.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            42:e2:49:ce:4c:90:78:b2:93:e4:e4:96:3f:8d:6a:45\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Bogus Broccoli X2\n        Validity\n            Not Before: Sep  4 00:00:00 2020 GMT\n            Not After : Sep 15 16:00:00 2025 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Ersatz Edamame E2\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:4a:6c:c4:99:e6:4f:71:10:bb:a8:4b:e8:b7:98:\n                    ca:f5:60:81:97:75:68:e8:fa:41:ea:60:5f:e9:9d:\n                    84:e6:31:0a:00:2f:6f:87:ad:b8:bf:34:cb:b1:0f:\n                    b1:45:09:87:76:36:d1:68:60:5e:c6:56:db:58:ee:\n                    92:b2:fe:3f:37:4a:7d:cb:5c:46:83:8c:ec:21:41:\n                    06:4f:b4:f5:46:da:97:2c:ac:eb:d3:bd:f7:e0:7a:\n                    76:84:71:19:85:96:a7\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                6C:F8:8D:45:BE:48:1A:3A:03:50:11:F6:F2:92:5D:43:63:A9:86:88\n            X509v3 Authority Key Identifier: \n                keyid:DE:D1:A3:59:64:0E:C1:9A:36:A3:46:EE:B0:10:76:EF:AE:97:95:66\n\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x2.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://stg-x2.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: ecdsa-with-SHA384\n         30:65:02:31:00:bf:5f:44:48:4c:33:63:c7:c0:b7:55:a4:13:\n         83:64:9b:a6:c9:c5:01:09:67:02:0b:18:d9:ef:3e:e1:26:00:\n         a9:67:80:aa:2f:76:6d:5f:78:1c:34:ab:8e:45:97:c3:04:02:\n         30:36:e0:8a:16:62:de:ed:c4:94:9b:3d:0a:71:11:32:5f:b2:\n         33:bc:68:b5:b1:79:d4:29:a8:75:92:d7:1d:33:10:1e:0b:2b:\n         9b:85:73:df:7e:2f:9e:83:22:09:aa:8c:a3\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Details for Let's Encrypt Staging Environment\nDESCRIPTION: A complete X.509 certificate dump showing the structure and contents of a Let's Encrypt staging certificate. This certificate is part of the staging environment's certificate chain and is intended for testing rather than production use.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            1b:e5:4c:b5:7b:79:49:40:42:a8:e5:be:50:72:3c:59\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Riddling Rhubarb R12\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\n                Modulus:\n                    00:d8:1d:21:91:49:c1:6a:d5:4e:ec:01:2f:18:7e:\n                    a6:80:d8:8f:e1:9e:dd:5b:1d:e0:d3:df:f9:67:41:\n                    c4:38:53:6e:22:73:46:d2:1e:60:c4:08:b2:20:42:\n                    1f:1b:e0:78:4a:1b:41:b9:5f:d3:fb:fb:c2:50:81:\n                    64:1b:8b:39:0d:25:8a:6c:dc:83:b0:86:a8:86:d0:\n                    59:8f:bd:1d:66:fd:bc:9e:12:d8:9d:53:46:95:b4:\n                    04:28:2c:d2:24:1e:e9:5a:c3:59:77:9c:22:01:1a:\n                    d2:f9:64:61:8a:cc:e1:8f:df:d5:51:36:9d:a2:57:\n                    86:b5:4c:81:a7:6f:4f:c5:cf:4f:05:5a:1b:e4:03:\n                    16:97:e9:63:fc:1c:7f:5a:16:fb:ec:9e:31:f5:e0:\n                    3f:8e:db:85:81:26:3a:87:7b:95:7c:f8:88:8b:a3:\n                    13:3d:11:c4:42:80:e9:37:a0:04:b6:56:78:00:9e:\n                    84:aa:92:a7:87:2a:82:08:cf:cb:7b:eb:59:44:93:\n                    7e:0b:9f:ca:a1:10:41:c2:c5:a5:f8:e1:8e:20:96:\n                    59:5b:2d:02:f5:7c:dd:6d:11:48:95:ec:67:f0:5b:\n                    82:54:eb:8e:04:9b:64:64:cc:7a:f9:1b:fa:c3:e9:\n                    a6:a6:e8:45:e0:98:8a:b8:36:e7:23:f4:81:0d:8c:\n                    de:e1\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                F6:43:03:91:2F:66:25:AF:85:25:DD:E4:64:D1:69:7E:CB:A2:1C:D9\n            X509v3 Authority Key Identifier: \n                B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n    Signature Algorithm: sha256WithRSAEncryption\n    Signature Value:\n        ac:f4:e4:84:8f:76:f9:d5:2a:36:0c:55:8a:d6:22:ff:0f:33:\n        c7:03:97:47:aa:e1:88:9b:ca:6a:83:85:84:0f:03:c6:a5:1a:\n        43:5d:9e:21:5a:e1:20:df:0b:49:0a:b6:f8:ef:d2:bb:7f:95:\n        41:a2:d7:b9:0a:1e:87:f4:41:b6:ce:a6:19:04:b9:e9:f4:ee:\n        7f:a4:3b:49:be:3d:a2:57:cd:42:39:1d:57:e0:6a:c6:45:33:\n        c9:69:7b:8f:f1:80:1a:e9:a9:67:11:8f:2d:19:9f:51:3d:01:\n        57:58:ea:fb:66:1d:1c:a8:ef:a3:7b:26:58:f1:01:9f:1f:d7:\n        31:0f:a9:f9:f5:e1:df:12:f5:01:38:01:f9:e1:6d:81:0f:e6:\n        42:45:4b:30:35:16:1a:b7:07:53:2e:fc:2d:35:60:4d:99:ad:\n        79:68:53:b9:b3:a2:a6:03:55:26:2d:7d:14:78:b7:71:87:6c:\n        3d:33:37:24:e0:80:19:a8:6c:5c:e6:15:df:4b:14:fb:d4:ca:\n        c3:e7:c4:1b:54:60:8e:e7:15:02:23:c2:57:1a:32:4f:fc:62:\n        43:6f:2d:27:e3:23:5a:87:65:86:b7:56:95:39:a2:2c:79:ba:\n        b8:1a:89:57:c7:04:87:ab:f4:0f:09:48:e8:17:67:6c:2a:8c:\n        e3:87:7e:8e:c3:bd:42:39:4f:88:6e:ae:19:7f:4b:11:86:95:\n        9a:02:00:dd:ca:65:34:17:56:67:72:9d:60:d9:f1:87:e6:d5:\n        17:3f:5a:3b:c8:f5:1b:99:03:4c:d9:5d:c7:a9:cc:3f:eb:b9:\n        b7:5a:c0:d2:21:c8:54:c8:57:6d:8d:89:00:b0:1b:3b:af:e4:\n        1f:c5:d6:9a:08:6c:0b:cd:57:af:93:f3:24:49:d1:38:a6:7a:\n        e5:d6:81:22:d1:da:99:b3:65:f8:92:5c:9a:3f:38:22:a7:b8:\n        1c:88:e0:3a:7d:bf:05:b7:d0:1e:ef:d8:7d:0c:7c:81:91:a5:\n        e6:75:da:ac:39:06:b4:8d:c8:4b:88:db:f4:e3:df:25:91:04:\n        ae:78:b3:45:50:15:2a:ca:a2:0e:4d:38:4d:e8:77:05:95:ff:\n        c3:6a:6b:5c:71:82:76:cc:42:6d:b4:20:7f:18:a6:8b:44:3f:\n        52:0d:71:13:41:c2:9a:67:53:ab:f6:60:61:bd:b3:76:ed:e6:\n        b3:a4:a0:d3:48:af:8f:b6:f4:2d:a3:ed:54:6b:75:78:41:6a:\n        5f:ee:8e:a1:f9:5e:32:27:38:b9:98:22:6b:31:ff:f3:b8:f4:\n        12:10:6a:b8:f1:26:34:f7:97:10:ca:b5:48:82:98:6e:21:be:\n        2e:c8:71:d0:d5:87:14:61\n```\n\n----------------------------------------\n\nTITLE: Accessing Let's Encrypt ACME v2 Staging Environment URL\nDESCRIPTION: The URL endpoint for the Let's Encrypt ACME v2 staging environment, used for testing certificate issuance without affecting production rate limits. This URL should be specified in ACME clients to direct requests to the staging environment.\n\nLANGUAGE: bash\nCODE:\n```\nhttps://acme-staging-v02.api.letsencrypt.org/directory\n```\n\n----------------------------------------\n\nTITLE: Encoding NULL in DER\nDESCRIPTION: Shows how the NULL type is encoded in DER, consisting of just the tag (05) and a zero-length field.\n\nLANGUAGE: der\nCODE:\n```\n05 00\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for Let's Encrypt Staging Certificate\nDESCRIPTION: This is a complete X.509 certificate from Let's Encrypt's staging environment. It shows the certificate hierarchy, cryptographic details, and extensions configuration. The certificate uses ECDSA with SHA384 for signatures and includes various extensions like key usage constraints and CRL distribution points.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            b4:58:e3:df:76:15:5c:59:24:a3:89:dd:ba:5f:7d:62\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Bogus Broccoli X2\n        Validity\n            Not Before: Sep  4 00:00:00 2020 GMT\n            Not After : Sep 15 16:00:00 2025 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Ersatz Edamame E1\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:fd:bf:f3:c9:52:d1:ce:4e:4d:bc:9d:70:97:ae:\n                    93:fa:eb:9b:c8:e1:9d:3d:e2:1f:28:ed:1f:b9:13:\n                    ac:8d:6a:36:5a:d1:4b:9b:aa:3a:59:16:81:aa:bb:\n                    bf:39:fe:f1:97:8f:a9:9d:7c:8c:dc:f5:ba:08:4c:\n                    6b:ac:64:24:96:78:c8:f9:c9:23:19:19:99:12:f9:\n                    54:af:7f:c5:50:aa:3f:b7:61:d1:2e:e0:f2:d9:12:\n                    30:40:8a:f4:45:a4:47\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                EB:F9:25:C2:80:28:66:E2:6D:08:92:32:F3:C2:E1:AD:C3:FF:35:45\n            X509v3 Authority Key Identifier: \n                keyid:DE:D1:A3:59:64:0E:C1:9A:36:A3:46:EE:B0:10:76:EF:AE:97:95:66\n\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x2.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://stg-x2.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: ecdsa-with-SHA384\n         30:65:02:30:5d:c6:5b:76:0c:5c:18:7f:6b:4c:4a:df:49:39:\n         17:7c:12:8a:ca:05:34:c8:ee:ce:a5:bb:8d:79:8d:62:77:41:\n         59:fe:14:58:37:97:dd:2c:e1:ae:73:e6:87:7c:2b:0c:02:31:\n         00:d0:ff:f1:c0:aa:fa:35:0f:4c:37:bb:eb:7c:60:33:3b:7f:\n         7b:3c:0a:5d:a9:f3:3b:55:d1:4a:d7:c6:84:bb:5c:66:dc:73:\n         05:2b:32:11:f1:e1:0f:b0:cc:78:b2:63:25\n```\n\n----------------------------------------\n\nTITLE: Defining a Point Structure in Go\nDESCRIPTION: Example of how a simple point structure with coordinates and a label would be defined in the Go programming language. This shows Go's syntax for structured data types for comparison with ASN.1.\n\nLANGUAGE: go\nCODE:\n```\ntype point struct {\n  x, y int\n  label string\n}\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for STAGING Environment\nDESCRIPTION: Complete X.509 certificate structure for a staging intermediate CA certificate named 'Bogus Broccoli X2' issued by 'Pretend Pear X1'. The certificate uses ECDSA with the P-384 curve and includes standard CA extensions such as Key Usage, Basic Constraints, and AIA.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            92:55:22:bd:84:9b:fb:0e:ce:10:43:d9:b1:27:10:9c\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Sep  4 00:00:00 2020 GMT\n            Not After : Sep 15 16:00:00 2025 GMT\n        Subject: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Bogus Broccoli X2\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:3a:f4:be:c3:59:02:cc:0c:58:38:96:c0:d3:a0:\n                    30:d0:71:4f:da:d2:c1:2c:a3:e8:15:0a:91:f4:03:\n                    2c:92:5d:67:0b:6f:7b:e5:e4:2a:c9:c4:7e:00:2b:\n                    d8:7a:50:3c:ad:fc:05:5c:e6:cc:1d:85:c9:db:75:\n                    cb:07:e7:40:8c:f2:55:38:9d:8e:72:c8:d3:56:a3:\n                    b8:75:c0:d6:bb:ea:d0:d9:52:0b:76:72:51:63:2a:\n                    67:57:53:0c:4e:15:71\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Subject Key Identifier: \n                DE:D1:A3:59:64:0E:C1:9A:36:A3:46:EE:B0:10:76:EF:AE:97:95:66\n            X509v3 Authority Key Identifier: \n                keyid:B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: sha256WithRSAEncryption\n         32:4a:79:7a:d2:ce:c4:ce:3e:6b:a1:2a:5f:68:66:01:df:b2:\n         35:44:8d:08:0e:fe:31:89:ff:56:bc:09:9e:99:16:7b:cc:ee:\n         0b:e7:c8:2d:83:18:46:e0:72:5a:cf:f3:78:59:a8:e7:a2:5c:\n         ee:d7:79:37:d2:3e:40:dd:2b:61:27:84:6e:07:53:00:c7:9a:\n         06:36:77:3f:a7:89:c4:cd:40:6b:be:80:6e:b8:f9:50:b7:ea:\n         f1:78:4e:13:7e:d2:62:01:5b:65:2f:58:3c:e4:38:c2:e8:ac:\n         09:71:eb:ae:6b:b8:65:d6:49:9b:35:c8:41:7e:7a:db:10:5e:\n         27:17:f4:a3:82:c1:a9:2d:82:dd:29:a9:90:f6:3e:7f:c9:53:\n         b6:61:4e:fc:8e:aa:49:29:7c:4f:95:f2:34:4d:fc:e7:33:57:\n         69:17:7c:ac:c2:6a:34:2f:5f:20:70:e3:3d:e2:4c:21:aa:2e:\n         d1:36:58:4f:4b:8d:6f:d3:99:ed:98:53:ee:c9:90:49:a1:dc:\n         1b:1b:4a:d1:25:66:26:f1:8d:6a:07:3a:46:57:6b:1c:56:de:\n         98:b6:f0:56:97:88:e0:da:29:44:7c:a7:42:ac:e4:56:db:1f:\n         02:52:bc:54:3f:76:49:86:e9:a2:51:6c:25:95:ae:1d:59:07:\n         81:c7:2e:23:51:f1:d3:e4:54:a7:55:46:8f:53:cf:57:ed:09:\n         98:66:5e:1b:6c:9b:2e:5a:14:da:b8:e3:31:b4:66:90:d8:d3:\n         c6:e6:f6:53:5b:f3:08:6a:41:49:a0:5f:61:02:e3:2c:70:f0:\n         42:4d:40:a9:11:0d:95:9c:43:a8:29:17:16:ba:3c:7a:a4:fa:\n         4c:51:dd:b7:0d:bb:28:84:fe:a2:fd:50:ca:87:e2:ab:75:23:\n         d7:0e:ed:3e:97:05:31:20:df:89:63:51:13:45:c6:60:28:c4:\n         2c:3a:35:f6:83:ea:42:d8:48:31:0e:57:fb:fd:d8:a4:2a:99:\n         71:e4:78:bc:c4:7a:9f:da:25:2e:9f:f4:2a:68:c0:ce:a5:3e:\n         2e:a0:f6:7e:61:4b:b6:d2:af:65:4c:56:f1:a1:02:4c:62:1c:\n         0c:71:82:3c:90:e4:97:00:d6:de:5e:c3:51:0d:3c:5a:3e:45:\n         87:f2:84:7f:97:3d:7c:5d:ee:f3:b5:94:00:9b:b8:56:1f:42:\n         f9:ec:17:66:dc:cb:d0:b0:f8:ea:56:20:a6:7e:df:bf:9c:3d:\n         b0:b4:b8:cd:0d:c2:20:2d:ee:76:32:79:19:cf:ef:f1:58:4f:\n         41:a5:35:12:79:fb:35:6f:b8:20:79:df:49:e3:fa:1b:9a:f3:\n         2c:4b:65:d0:fa:de:0b:89\n```\n\n----------------------------------------\n\nTITLE: Encoding a Large Positive INTEGER in DER\nDESCRIPTION: Example of encoding a 64-bit positive integer (2^63+1) using DER encoding, showing the 9-byte representation with a leading zero byte to ensure the number is interpreted as positive.\n\nLANGUAGE: der\nCODE:\n```\n02 09 00 80 00 00 00 00 00 00 01\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for Let's Encrypt Staging CA\nDESCRIPTION: Complete X.509 certificate structure for a Let's Encrypt staging certificate authority named \"(STAGING) Pretend Pear X1\". This certificate is issued by the \"(STAGING) Doctored Durian Root CA X3\" and contains a 4096-bit RSA public key along with standard X.509v3 extensions for a certificate authority.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            ed:5d:5b:c9:6d:fb:df:4d:3e:cd:6a:49:8d:d1:b3:c7\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Doctored Durian Root CA X3\n        Validity\n            Not Before: Jan 20 19:14:03 2021 GMT\n            Not After : Sep 30 18:14:03 2024 GMT\n        Subject: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (4096 bit)\n                Modulus:\n                    00:b6:da:80:47:43:4d:ad:50:80:60:56:49:89:32:\n                    32:1b:1c:65:71:0d:38:16:95:45:33:17:d6:17:1e:\n                    24:43:60:b0:bd:0c:6b:8f:43:dc:c8:a5:23:82:92:\n                    df:c9:ad:92:67:45:e9:c3:d6:9c:bf:be:7e:07:a1:\n                    4f:41:5b:44:76:60:8c:e1:2b:f1:40:0d:e2:31:fa:\n                    a2:68:eb:6d:30:fe:f9:56:67:79:3b:0c:55:a1:9a:\n                    99:09:83:74:59:79:83:58:18:6a:28:24:92:6c:7c:\n                    3a:20:8e:eb:c6:b8:41:78:38:c1:2c:a7:ea:20:e2:\n                    a4:a3:fc:ba:db:04:fb:1d:44:db:c4:80:ef:91:ce:\n                    62:aa:5d:ae:4e:07:1b:1b:94:2e:f9:6b:d3:7c:19:\n                    19:32:1f:fe:84:6d:db:f7:3e:75:89:83:a1:a2:61:\n                    81:ef:86:3a:b2:c0:11:00:72:3b:bf:bc:fa:fc:ce:\n                    c2:93:40:3c:4c:7a:2d:6f:9c:ac:41:19:ed:e0:57:\n                    8a:1e:95:3f:5f:6c:4c:6c:b7:c9:fa:8a:e6:d3:ed:\n                    4d:d5:d7:08:e4:0c:28:0a:7e:80:28:ff:54:1c:a1:\n                    98:8a:fe:d2:23:43:0b:9e:34:82:db:d5:df:4d:d6:\n                    a5:c6:f0:9e:49:0b:60:2d:05:b7:67:18:53:21:ed:\n                    92:cb:4e:7d:17:11:3b:e2:b6:71:9a:33:a1:2c:15:\n                    3f:20:7c:fc:9f:51:a5:c4:4a:de:38:27:5f:d9:6e:\n                    8d:fc:00:fe:90:1b:3f:42:76:50:f4:05:c6:65:85:\n                    45:09:c5:8d:aa:ba:ae:4a:9b:34:40:60:2f:2f:a4:\n                    14:bd:4d:12:c4:5b:bc:56:ca:ad:18:b9:6d:8c:b6:\n                    94:d9:ac:d8:d2:4f:66:f7:4d:41:b4:ff:d9:d0:59:\n                    2a:62:6a:c4:79:31:0a:e3:90:16:38:49:40:d7:8e:\n                    f8:d8:e6:d5:9d:62:01:34:bf:de:bb:6c:db:26:65:\n                    a9:72:ac:c5:05:33:37:ab:cd:6c:3f:0a:9d:74:4c:\n                    11:e3:97:51:8b:db:57:89:6a:7c:27:fc:99:2d:78:\n                    58:46:d2:88:cc:bc:ec:60:79:4b:db:9c:49:5d:57:\n                    52:b9:53:1b:95:06:70:c4:99:38:17:04:52:98:ac:\n                    44:f1:26:41:65:0e:4d:62:28:0d:0e:45:3a:26:bf:\n                    18:8f:8a:8b:9d:b7:af:6a:ee:12:66:e6:1b:7e:c4:\n                    05:20:57:77:12:1d:9d:da:ab:8f:2f:90:54:09:82:\n                    79:bc:83:c7:d7:95:10:63:88:a6:7d:ba:6d:6e:4b:\n                    29:ea:ee:98:9c:5a:fc:21:41:68:a8:b8:6d:1b:e6:\n                    74:94:4b\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Subject Key Identifier: \n                B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n            X509v3 Authority Key Identifier: \n                keyid:08:57:DA:89:C7:A2:53:79:0C:4F:DD:E0:90:8F:74:BA:E2:27:73:44\n\n            Authority Information Access: \n                CA Issuers - URI:http://stg-dst3.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://stg-dst3.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: sha256WithRSAEncryption\n         7b:b5:1f:01:d1:e2:10:49:2e:8c:84:fe:64:ba:f1:ad:87:e7:\n         4d:d3:60:ec:22:1a:f4:c8:9b:64:d9:e8:48:70:f2:2a:4b:14:\n         51:98:71:a5:e2:ed:9c:dd:09:6f:12:97:91:0e:9d:b0:ed:e4:\n         1d:45:39:48:fd:69:cd:85:8e:09:3a:87:e9:31:fd:b3:c0:00:\n         60:05:6b:40:bb:45:68:a1:07:19:65:3a:50:ae:e8:a0:17:fc:\n         fa:c5:89:01:93:75:07:92:37:aa:c7:33:0d:dd:dd:44:a8:6b:\n         ac:c4:9a:2a:81:d4:e8:b9:9e:57:e5:04:d3:21:e7:bd:9d:0d:\n         cb:12:15:a7:45:25:c3:c7:b6:34:b6:d4:75:04:67:dc:76:a1:\n         e8:a4:ee:08:06:a0:21:6e:42:91:8c:5e:73:8f:b3:83:f1:c1:\n         b7:e6:89:b2:c1:46:d9:b4:e2:67:7e:d8:88:d2:71:5c:45:ac:\n         5b:5e:8d:2f:a0:37:cb:0f:44:ba:f8:00:b6:47:7b:4a:a6:a8:\n         e4:35:7e:bf:f7:58:6b:44:58:25:51:a9:32:31:c6:54:ff:19:\n         5e:a9:bb:fa:f8:ba:f7:60:3f:0f:b0:14:ee:6f:a9:48:a1:9d:\n         a5:4b:7f:1f:2f:5f:00:a2:7e:39:f1:f6:dc:d0:13:c7:b5:e9:\n         df:84:a8:f9\n```\n\n----------------------------------------\n\nTITLE: Setting Up Hugo Blog Post Frontmatter with Go Template Variables\nDESCRIPTION: This snippet shows the frontmatter for a new Hugo blog post using Go template variables. It automatically generates a title by replacing hyphens with spaces in the filename and sets the current date, while marking the post as a draft.\n\nLANGUAGE: toml\nCODE:\n```\n+++\ntitle = '{{ replace .File.ContentBaseName \"-\" \" \" | title }}'\ndate = {{ .Date }}\ndraft = true\n+++\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of EXPLICIT Tagged UTF8String\nDESCRIPTION: Shows the actual DER encoding bytes for a UTF8String \"hi\" with EXPLICIT tag 5, resulting in a nested structure with both the tag wrapper and the original UTF8String encoding.\n\nLANGUAGE: der\nCODE:\n```\n‎A5 04 0C 02 68 69\n```\n\n----------------------------------------\n\nTITLE: Analyzing X.509 Certificate Structure for (STAGING) Let's Encrypt\nDESCRIPTION: This certificate output displays the full structure of a staging X.509 certificate used by Let's Encrypt for testing. It shows a certificate with ECDSA-based signature using SHA384, issued by the staging Bogus Broccoli X2 authority, with a 3-year validity period. The certificate has pathlen:0 constraint and contains various standard extensions including key usage, CRL distribution points, and policy identifiers.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            1a:88:3a:f9:aa:24:b9:3e:92:1b:11:9d:47:05:9f:d3\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Bogus Broccoli X2\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Fake Fig E9\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:86:d0:7d:a3:dd:59:31:ac:50:62:0a:65:ca:55:\n                    f1:06:08:60:48:13:ec:8b:2d:fc:a1:5c:4d:6c:8e:\n                    06:c7:46:f9:af:fc:b0:3c:1c:fb:e8:70:f3:b7:4b:\n                    5d:ea:b3:b1:45:f3:1c:e0:ba:13:97:38:f1:57:ff:\n                    c4:32:55:e7:2a:7d:dd:8e:6c:40:40:e6:bb:ab:92:\n                    28:4d:bc:be:20:3e:4b:0e:73:48:e7:7b:74:7d:37:\n                    2d:cb:4b:42:db:2a:f1\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                8E:DD:E5:A8:F7:B0:D9:D1:A5:71:D4:FF:8A:38:F9:D6:3B:02:6D:57\n            X509v3 Authority Key Identifier: \n                DE:D1:A3:59:64:0E:C1:9A:36:A3:46:EE:B0:10:76:EF:AE:97:95:66\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x2.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x2.c.lencr.org/\n    Signature Algorithm: ecdsa-with-SHA384\n    Signature Value:\n        30:65:02:31:00:8a:8e:52:6e:ca:eb:ea:64:77:18:dd:c3:8e:\n        4a:7e:a1:07:3a:d0:9a:71:80:dc:f2:3e:6a:4f:c4:e4:ae:0d:\n        73:88:f0:6c:f8:76:b8:6b:9d:c3:7a:27:3a:3f:2f:dc:7e:02:\n        30:0d:34:eb:15:b9:19:ec:c8:93:c1:21:45:64:4a:43:b3:7f:\n        e1:93:73:54:c3:04:02:b1:7d:60:42:2b:d2:81:c3:01:f1:02:\n        ff:8a:78:33:0c:57:95:ce:be:7f:bb:35:fe\n```\n\n----------------------------------------\n\nTITLE: Examining DST Root CA X3 Certificate Structure in X.509 Format\nDESCRIPTION: This snippet shows the complete X.509 certificate for DST Root CA X3, a root certificate authority. It includes version information, serial number, validity period, subject details, RSA public key (2048-bit), and X.509v3 extensions that define this as a certificate authority with signing capabilities.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            44:af:b0:80:d6:a3:27:ba:89:30:39:86:2e:f8:40:6b\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: O = Digital Signature Trust Co., CN = DST Root CA X3\n        Validity\n            Not Before: Sep 30 21:12:19 2000 GMT\n            Not After : Sep 30 14:01:15 2021 GMT\n        Subject: O = Digital Signature Trust Co., CN = DST Root CA X3\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:df:af:e9:97:50:08:83:57:b4:cc:62:65:f6:90:\n                    82:ec:c7:d3:2c:6b:30:ca:5b:ec:d9:c3:7d:c7:40:\n                    c1:18:14:8b:e0:e8:33:76:49:2a:e3:3f:21:49:93:\n                    ac:4e:0e:af:3e:48:cb:65:ee:fc:d3:21:0f:65:d2:\n                    2a:d9:32:8f:8c:e5:f7:77:b0:12:7b:b5:95:c0:89:\n                    a3:a9:ba:ed:73:2e:7a:0c:06:32:83:a2:7e:8a:14:\n                    30:cd:11:a0:e1:2a:38:b9:79:0a:31:fd:50:bd:80:\n                    65:df:b7:51:63:83:c8:e2:88:61:ea:4b:61:81:ec:\n                    52:6b:b9:a2:e2:4b:1a:28:9f:48:a3:9e:0c:da:09:\n                    8e:3e:17:2e:1e:dd:20:df:5b:c6:2a:8a:ab:2e:bd:\n                    70:ad:c5:0b:1a:25:90:74:72:c5:7b:6a:ab:34:d6:\n                    30:89:ff:e5:68:13:7b:54:0b:c8:d6:ae:ec:5a:9c:\n                    92:1e:3d:64:b3:8c:c6:df:bf:c9:41:70:ec:16:72:\n                    d5:26:ec:38:55:39:43:d0:fc:fd:18:5c:40:f1:97:\n                    eb:d5:9a:9b:8d:1d:ba:da:25:b9:c6:d8:df:c1:15:\n                    02:3a:ab:da:6e:f1:3e:2e:f5:5c:08:9c:3c:d6:83:\n                    69:e4:10:9b:19:2a:b6:29:57:e3:e5:3d:9b:9f:f0:\n                    02:5d\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n            X509v3 Subject Key Identifier: \n                C4:A7:B1:A4:7B:2C:71:FA:DB:E1:4B:90:75:FF:C4:15:60:85:89:10\n    Signature Algorithm: sha1WithRSAEncryption\n         a3:1a:2c:9b:17:00:5c:a9:1e:ee:28:66:37:3a:bf:83:c7:3f:\n         4b:c3:09:a0:95:20:5d:e3:d9:59:44:d2:3e:0d:3e:bd:8a:4b:\n         a0:74:1f:ce:10:82:9c:74:1a:1d:7e:98:1a:dd:cb:13:4b:b3:\n         20:44:e4:91:e9:cc:fc:7d:a5:db:6a:e5:fe:e6:fd:e0:4e:dd:\n         b7:00:3a:b5:70:49:af:f2:e5:eb:02:f1:d1:02:8b:19:cb:94:\n         3a:5e:48:c4:18:1e:58:19:5f:1e:02:5a:f0:0c:f1:b1:ad:a9:\n         dc:59:86:8b:6e:e9:91:f5:86:ca:fa:b9:66:33:aa:59:5b:ce:\n         e2:a7:16:73:47:cb:2b:cc:99:b0:37:48:cf:e3:56:4b:f5:cf:\n         0f:0c:72:32:87:c6:f0:44:bb:53:72:6d:43:f5:26:48:9a:52:\n         67:b7:58:ab:fe:67:76:71:78:db:0d:a2:56:14:13:39:24:31:\n         85:a2:a8:02:5a:30:47:e1:dd:50:07:bc:02:09:90:00:eb:64:\n         63:60:9b:16:bc:88:c9:12:e6:d2:7d:91:8b:f9:3d:32:8d:65:\n         b4:e9:7c:b1:57:76:ea:c5:b6:28:39:bf:15:65:1c:c8:f6:77:\n         96:6a:0a:8d:77:0b:d8:91:0b:04:8e:07:db:29:b6:0a:ee:9d:\n         82:35:35:10\n```\n\n----------------------------------------\n\nTITLE: EXPLICIT Tag Example for UTF8String\nDESCRIPTION: Demonstrates how to encode a UTF8String \"hi\" using EXPLICIT tagging with tag number 5, showing the nested structure that results.\n\nLANGUAGE: asn1\nCODE:\n```\n[5] EXPLICIT UTF8String\n```\n\n----------------------------------------\n\nTITLE: Viewing X.509 Certificate Structure for Let's Encrypt Staging Environment\nDESCRIPTION: This snippet displays the detailed structure of an X.509 certificate used in Let's Encrypt's staging environment. The certificate is version 3, issued by '(STAGING) Pretend Pear X1' to '(STAGING) Fake Fig E9', valid from March 13, 2024 to March 12, 2027. It includes an ECDSA public key using the P-384 curve and various X.509v3 extensions for certificate usage and validation.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            72:62:ac:da:43:57:cb:85:45:3c:a5:9b:1f:2b:72:4f\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Fake Fig E9\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:86:d0:7d:a3:dd:59:31:ac:50:62:0a:65:ca:55:\n                    f1:06:08:60:48:13:ec:8b:2d:fc:a1:5c:4d:6c:8e:\n                    06:c7:46:f9:af:fc:b0:3c:1c:fb:e8:70:f3:b7:4b:\n                    5d:ea:b3:b1:45:f3:1c:e0:ba:13:97:38:f1:57:ff:\n                    c4:32:55:e7:2a:7d:dd:8e:6c:40:40:e6:bb:ab:92:\n                    28:4d:bc:be:20:3e:4b:0e:73:48:e7:7b:74:7d:37:\n                    2d:cb:4b:42:db:2a:f1\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                8E:DD:E5:A8:F7:B0:D9:D1:A5:71:D4:FF:8A:38:F9:D6:3B:02:6D:57\n            X509v3 Authority Key Identifier: \n                B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n    Signature Algorithm: sha256WithRSAEncryption\n    Signature Value:\n        43:41:d6:e2:7e:f6:dd:7c:ec:e5:88:ad:9d:bd:e8:9a:84:3c:\n        39:46:ae:58:94:03:9f:3a:22:77:75:b0:0e:b4:ac:a6:d6:c8:\n        89:ee:98:15:b8:52:05:79:61:4c:cf:b6:20:47:91:e1:67:c9:\n        22:3c:5a:94:57:22:3e:e4:c6:aa:ff:f9:34:19:47:88:d3:77:\n        bd:96:5f:a4:49:83:29:37:41:37:2d:84:07:12:db:39:2f:81:\n        36:fa:73:1b:25:49:d7:87:9d:81:f8:81:6b:0c:0c:cb:7d:ea:\n        af:29:bd:33:23:77:b2:23:a7:89:fc:5e:11:4b:6a:cf:f4:61:\n        8e:aa:b0:bd:ef:f9:40:54:9e:c1:0c:44:31:28:fa:41:fd:da:\n        5e:0e:8e:2e:0c:bf:0b:13:c2:ac:80:b0:82:13:41:e2:5d:71:\n        13:cb:b2:4a:72:b2:43:0c:31:24:53:0a:db:a6:30:8d:59:45:\n        d3:41:81:8b:a9:6f:03:6d:6b:a7:67:67:bb:94:2d:57:8b:3d:\n        25:de:64:1c:70:7c:b5:5a:bc:2c:1a:fc:30:44:20:cf:0e:4f:\n        3d:45:88:03:9c:18:99:ab:f0:b0:e9:5b:e4:c7:2a:32:f8:c0:\n        9a:e9:b8:e0:b6:97:29:4d:61:2d:b0:2c:50:b8:e8:44:ed:3f:\n        45:cf:84:ed:f0:07:2d:80:d7:e5:37:d2:76:44:56:24:da:14:\n        da:33:d8:51:c4:56:b6:44:d2:f1:d3:8b:5d:48:3c:9c:48:5c:\n        de:c0:17:51:5e:a7:9e:73:c4:f8:09:80:bc:01:b0:76:97:e7:\n        6f:d9:1e:48:7e:f3:2a:fb:61:f8:a5:75:57:97:8a:3b:cc:f0:\n        e9:76:b5:50:6a:52:01:27:9d:9b:70:ce:e8:f0:1f:17:36:1e:\n        53:39:b7:37:ba:d2:83:43:50:b3:0f:d4:ec:79:cb:20:8f:dd:\n        ac:04:ef:8d:b0:40:1a:d2:e8:6c:c1:28:81:b6:32:6b:5d:50:\n        fe:6e:99:8f:23:15:2e:90:d9:51:89:f4:bc:d9:64:20:be:29:\n        da:c8:4b:e3:3f:96:8a:ff:46:69:45:f7:b5:75:64:f2:10:4a:\n        5a:0b:36:ff:06:0c:58:c7:7d:f2:d0:1b:90:17:14:60:9d:f3:\n        79:4b:7b:10:e7:ed:e3:a3:52:19:c7:f4:75:c1:cf:68:4b:85:\n        4d:3e:b0:64:97:30:05:fe:28:52:6d:ce:91:fe:e4:e4:8e:fd:\n        34:ba:9b:ab:10:fd:69:60:61:d7:48:bf:f8:9f:49:d9:58:35:\n        20:b5:d9:66:bd:cc:03:e3:20:81:4d:e3:8f:a6:2c:70:9b:49:\n        19:0f:f8:72:5b:27:51:18\n```\n\n----------------------------------------\n\nTITLE: IMPLICIT Tag Example for UTF8String\nDESCRIPTION: Demonstrates how to encode a UTF8String \"hi\" using IMPLICIT tagging with tag number 5, showing the compact encoding that results.\n\nLANGUAGE: asn1\nCODE:\n```\n[5] IMPLICIT UTF8String\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate Structure for Let's Encrypt Staging Environment\nDESCRIPTION: This is a detailed X.509 certificate output showing a Let's Encrypt staging certificate. The certificate is for '(STAGING) Pseudo Plum E5', issued by '(STAGING) Pretend Pear X1', valid from March 13, 2024 to March 12, 2027. It uses ECDSA with the P-384 curve and includes various X.509v3 extensions defining its usage and constraints.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            47:31:29:d4:3d:66:0e:25:55:bf:86:f5:ce:50:79:ea\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Pseudo Plum E5\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:e5:8d:b6:dc:57:e9:aa:59:96:b7:83:ec:f4:6c:\n                    33:ae:06:96:4e:b5:b8:b8:f2:22:bd:ae:32:ed:3d:\n                    d4:54:d1:6b:20:56:9e:77:31:6d:e7:5c:55:3a:a9:\n                    56:15:cc:46:1a:61:de:8f:4a:67:9c:d1:38:f7:47:\n                    9c:c4:a7:9f:c5:f9:cb:8e:8d:37:61:dc:09:13:33:\n                    36:26:d6:d9:1f:96:87:0f:04:de:40:3c:76:19:fb:\n                    be:96:c5:96:9d:ab:e5\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                FC:46:D1:01:43:5F:BB:7B:A6:3D:30:68:AE:11:BA:E0:BC:6D:C9:D3\n            X509v3 Authority Key Identifier: \n                B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n    Signature Algorithm: sha256WithRSAEncryption\n    Signature Value:\n        02:d0:86:9f:88:86:72:ea:6b:ba:19:02:4d:ca:03:a9:22:15:\n        4c:58:15:47:c2:49:dc:6b:c6:2f:b4:98:c0:87:38:16:7d:00:\n        b3:ae:a7:42:09:e4:01:32:33:17:9f:a0:15:bf:82:5c:44:03:\n        a9:1d:89:a3:e4:77:f0:e7:93:ee:54:35:ac:d0:dc:68:97:1b:\n        63:a8:4b:f1:c3:51:92:ed:d0:95:c7:dd:60:e0:d9:e6:98:13:\n        54:7d:38:81:36:54:24:84:99:28:b8:c3:90:c3:1c:40:80:d9:\n        94:5e:e2:62:a4:ef:98:76:e7:d8:84:92:2a:8a:ec:27:74:0a:\n        02:f5:a1:1f:03:28:26:da:1c:4b:3d:d5:78:32:48:7a:9e:50:\n        b5:b1:e7:a1:78:75:fd:dc:83:c7:bb:29:f1:1b:a1:0b:47:8e:\n        f4:49:53:80:3b:62:03:65:7a:27:18:a0:2c:fc:ea:72:78:9b:\n        04:14:78:6c:52:c6:b4:c3:44:e0:4b:ce:38:3f:c5:91:dd:0b:\n        85:d1:83:6c:03:0d:77:e3:b4:ea:7f:9b:d2:b8:26:0e:f8:3b:\n        e4:88:0e:57:a7:e9:0e:b7:59:16:88:8d:7c:27:24:38:42:61:\n        f6:fd:74:b9:8b:78:a5:37:37:07:a9:5f:cc:8f:d7:dc:45:8f:\n        d4:7e:15:26:6b:18:bb:2f:8e:03:6f:63:3d:e3:fc:df:5b:00:\n        39:b6:6d:77:74:56:bf:42:d0:3e:b3:1f:c7:a1:42:9b:2e:00:\n        69:e6:04:32:fb:a5:16:b1:7a:39:7f:89:6e:cb:04:f9:b9:fc:\n        dc:5f:ac:18:43:19:bb:f7:95:07:0c:0a:87:77:5b:ef:ed:94:\n        76:e3:1d:4c:e6:fc:0d:e3:c4:dc:0a:a5:83:dc:e8:7d:2f:17:\n        f5:f2:57:ae:ba:7e:3c:fa:dd:43:2b:cc:dd:ef:03:c6:e8:a8:\n        59:af:46:2c:6d:f4:c8:3f:56:0f:a5:93:95:28:a2:3a:b7:56:\n        18:ec:e2:b1:6a:56:e2:c8:45:a0:bf:2e:d0:47:e6:78:b5:54:\n        e0:95:5b:6a:e8:4e:61:90:12:41:70:01:35:e5:de:c1:ef:65:\n        a8:95:b0:7e:a6:80:45:8a:51:8f:27:fe:8d:18:9b:9f:6d:87:\n        e4:d5:4a:e1:5a:20:97:9e:48:ab:5a:d4:82:37:3c:af:8f:77:\n        35:a3:6b:94:dc:06:ee:f6:bb:66:d9:1c:87:99:49:de:82:ff:\n        14:45:65:55:22:b8:b2:74:db:81:bd:1b:e6:a8:d0:cf:74:80:\n        8b:ba:c0:ff:c4:11:66:f3:8b:9c:a3:6d:74:45:25:0d:93:6b:\n        ce:46:70:1c:d9:6e:2c:6c\n```\n\n----------------------------------------\n\nTITLE: Example Account ID Format\nDESCRIPTION: Shows the typical format of a Let's Encrypt account ID to help users identify it in their configuration files.\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 12345678\n}\n```\n\n----------------------------------------\n\nTITLE: Revoking a Downloaded Certificate\nDESCRIPTION: After validating domain control, this command revokes a certificate that was downloaded from a source like crt.sh. This is typically used when revoking certificates from a different authorized account.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-path /PATH/TO/downloaded-cert.pem\n```\n\n----------------------------------------\n\nTITLE: ASN.1 TBSCertificate Definition with IMPLICIT Tags\nDESCRIPTION: Example of ASN.1 syntax from RFC 5280 showing a TBSCertificate definition that uses both explicit and implicit tags. This demonstrates how tags are defined in certificate structures with optional fields.\n\nLANGUAGE: asn1\nCODE:\n```\nTBSCertificate  ::=  SEQUENCE  {\n     version         [0]  Version DEFAULT v1,\n     serialNumber         CertificateSerialNumber,\n     signature            AlgorithmIdentifier,\n     issuer               Name,\n     validity             Validity,\n     subject              Name,\n     subjectPublicKeyInfo SubjectPublicKeyInfo,\n     issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n                          -- If present, version MUST be v2 or v3\n     subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n                          -- If present, version MUST be v2 or v3\n     extensions      [3]  Extensions OPTIONAL\n                          -- If present, version MUST be v3 --  }\n```\n\n----------------------------------------\n\nTITLE: Example of ASN.1 Certificate Structure with IMPLICIT Tags\nDESCRIPTION: Shows a real-world example from RFC 5280 demonstrating the use of IMPLICIT tags in a TBSCertificate structure, which is part of X.509 certificate specification.\n\nLANGUAGE: asn1\nCODE:\n```\nTBSCertificate  ::=  SEQUENCE  {\n     version         [0]  Version DEFAULT v1,\n     serialNumber         CertificateSerialNumber,\n     signature            AlgorithmIdentifier,\n     issuer               Name,\n     validity             Validity,\n     subject              Name,\n     subjectPublicKeyInfo SubjectPublicKeyInfo,\n     issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n                          -- If present, version MUST be v2 or v3\n     subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n                          -- If present, version MUST be v2 or v3\n     extensions      [3]  Extensions OPTIONAL\n                          -- If present, version MUST be v3 --  }\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure in Text Format\nDESCRIPTION: Complete X.509 certificate structure for a STAGING Let's Encrypt intermediate certificate named 'Tenuous Tomato R13'. The certificate includes version information, serial number, validity period, public key details, and various X.509v3 extensions defining its intended use and constraints.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            b1:47:0e:00:f2:a0:ad:5a:f6:38:09:e9:81:b2:35:91\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Tenuous Tomato R13\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\n                Modulus:\n                    00:b0:8a:f9:f1:92:b5:c4:7a:d4:19:d1:69:2e:37:\n                    d9:ad:cc:15:bf:ce:00:16:65:b3:89:f9:74:50:ec:\n                    91:3e:cd:af:16:e6:9d:61:44:f9:fa:f6:01:a8:d4:\n                    a9:fa:d0:be:2d:20:90:25:5c:d9:55:07:64:1b:c2:\n                    35:2a:36:48:d4:48:b2:a4:83:a8:cb:fe:a6:7b:ec:\n                    52:51:c5:b0:05:a4:36:7d:26:df:cb:71:95:61:de:\n                    e3:23:62:08:20:48:1b:91:61:b7:00:28:46:ca:f1:\n                    ab:bf:83:b9:cb:ee:ad:27:cc:d7:d8:dd:57:45:e8:\n                    ef:21:07:c2:58:c9:18:1a:45:56:60:1c:d6:80:87:\n                    7d:74:96:e0:c5:e0:35:38:05:c3:d0:05:4b:76:10:\n                    ba:2c:11:df:1a:58:59:bd:ac:76:74:b6:82:c5:d0:\n                    b6:a4:e2:f4:64:8f:ac:90:9e:4b:9f:94:a9:07:89:\n                    55:7b:98:a8:e7:40:d1:1e:21:08:18:5a:09:25:f4:\n                    7b:ca:a2:6d:8f:7e:0b:03:a6:50:2b:54:3c:3b:ba:\n                    fc:64:f4:a8:b1:40:c3:ee:13:53:08:a8:a3:8a:16:\n                    5c:43:3d:c3:ed:64:f1:03:0a:d8:2d:7e:f2:4e:de:\n                    4b:b1:9b:e8:ca:fb:7f:2f:21:29:49:a3:3b:0f:6d:\n                    01:89\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                3E:34:8F:CA:29:73:2B:10:58:19:A1:EB:F8:BB:A9:C4:5E:64:E6:D1\n            X509v3 Authority Key Identifier: \n                B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n    Signature Algorithm: sha256WithRSAEncryption\n    Signature Value:\n        2a:7a:29:9a:4b:37:79:c2:43:70:61:72:1d:d5:ad:09:fe:91:\n        3d:a0:6b:b7:ed:40:87:e1:2d:2f:90:42:61:cd:ab:77:c9:15:\n        08:76:89:02:e2:2c:40:b8:d5:44:69:7e:d7:ce:47:92:7d:09:\n        d5:40:12:f9:48:39:66:a1:55:c4:e3:f0:e7:ed:45:8a:18:e9:\n        3c:dc:44:2a:e7:ee:3d:84:83:50:f6:98:dc:51:72:3b:10:dc:\n        5b:cb:3f:99:36:34:b2:ed:4a:cb:f4:1e:8d:fd:91:f2:f3:f1:\n        8a:46:09:b6:71:dd:77:1b:06:c1:e3:02:40:e5:54:b5:81:ee:\n        6b:3f:2f:b7:ac:97:cc:ba:cc:dd:09:2c:bc:bf:f2:e5:4b:6c:\n        f2:a0:fb:4f:b7:b0:af:55:fb:32:f2:66:9c:de:3a:c9:75:f3:\n        0c:f5:48:1d:e2:e5:3c:ae:20:74:01:9e:72:63:b7:44:e4:7f:\n        0b:17:8f:6a:b6:6d:6a:27:95:5d:a7:ff:f8:5e:f6:b8:5a:47:\n        7b:61:26:c4:29:14:a0:a4:5e:d8:d0:1f:54:48:27:e1:c1:5c:\n        b0:d5:cc:4e:5a:e7:40:fd:11:bc:6c:56:92:7a:de:4e:47:18:\n        48:ca:04:5d:78:3c:11:39:93:58:fe:c7:6e:a0:79:68:25:e9:\n        06:6f:14:d1:07:d4:02:a9:d5:cb:63:4c:4f:70:38:e2:66:58:\n        8a:cd:fb:7c:5c:6e:f5:52:92:7d:2d:de:fe:9a:ad:70:c7:d8:\n        a0:a2:37:12:87:a6:40:09:a7:b2:85:b0:21:ed:2e:84:72:f1:\n        93:a6:fe:82:d5:86:40:0e:1e:8a:95:62:41:9e:b0:95:79:a4:\n        9d:ac:5c:77:0b:06:54:0e:d9:35:e9:84:07:71:8a:4b:d5:f2:\n        bd:f6:16:71:f6:46:b8:6b:00:a1:45:e0:ee:10:41:40:8e:ef:\n        7a:ce:93:d5:d9:2b:92:6f:47:ec:e9:9d:8b:f1:3a:c6:c0:c9:\n        a5:50:e7:b7:f4:7f:2c:30:a0:8b:52:7a:9d:5e:19:eb:45:c5:\n        8c:5a:5a:60:e7:05:5c:4e:49:1a:ef:70:25:77:ab:91:2d:02:\n        41:42:1b:6d:45:81:2d:0e:cc:b6:5a:fb:86:3f:9c:64:14:ea:\n        d2:83:11:bf:11:d5:66:0d:fd:34:b9:e3:bb:30:93:96:df:59:\n        93:cd:e0:81:99:f4:33:14:65:9b:05:a3:96:06:f9:74:d7:82:\n        00:8c:e3:45:b7:95:63:c8:3c:08:f4:d1:31:b2:b8:1c:21:da:\n        3d:d7:ee:11:e6:a5:7d:d9:a3:d7:a8:2f:87:d6:28:5c:ed:aa:\n        00:e9:c7:0b:ea:af:91:6a\n```\n\n----------------------------------------\n\nTITLE: Configuring robots.txt with User-agent and Sitemap directives\nDESCRIPTION: This code configures a standard robots.txt file with two essential directives: a wildcard User-agent that applies to all web crawlers, and a Sitemap directive that points to the sitemap.xml file using a template variable for the absolute URL.\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nSitemap: {{ \"sitemap.xml\" | absURL }}\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate Structure in PEM Format\nDESCRIPTION: This is a complete X.509 certificate in human-readable format, specifically a Let's Encrypt staging root certificate. It contains the certificate data fields including version, serial number, signature algorithm (ECDSA with SHA-384), issuer and subject information, validity period, public key (384-bit ECC), extensions, and signature value.\n\nLANGUAGE: pem\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            83:e0:73:79:39:2e:52:d5:2e:d5:14:be:ce:0a:fd:07\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Bogus Broccoli X2\n        Validity\n            Not Before: Sep  4 00:00:00 2020 GMT\n            Not After : Sep 17 16:00:00 2040 GMT\n        Subject: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Bogus Broccoli X2\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:3a:f4:be:c3:59:02:cc:0c:58:38:96:c0:d3:a0:\n                    30:d0:71:4f:da:d2:c1:2c:a3:e8:15:0a:91:f4:03:\n                    2c:92:5d:67:0b:6f:7b:e5:e4:2a:c9:c4:7e:00:2b:\n                    d8:7a:50:3c:ad:fc:05:5c:e6:cc:1d:85:c9:db:75:\n                    cb:07:e7:40:8c:f2:55:38:9d:8e:72:c8:d3:56:a3:\n                    b8:75:c0:d6:bb:ea:d0:d9:52:0b:76:72:51:63:2a:\n                    67:57:53:0c:4e:15:71\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Subject Key Identifier: \n                DE:D1:A3:59:64:0E:C1:9A:36:A3:46:EE:B0:10:76:EF:AE:97:95:66\n    Signature Algorithm: ecdsa-with-SHA384\n         30:65:02:30:45:ca:78:64:a0:6c:ab:d5:e4:52:e3:7c:c1:f5:\n         fe:18:46:d8:d4:de:67:98:24:5c:f1:ef:34:91:49:2e:01:e7:\n         e8:b9:cd:a3:dd:c2:02:79:7a:35:70:ec:9b:43:58:96:02:31:\n         00:dc:ea:1a:c2:5f:1e:43:24:78:c2:b8:c2:a1:f5:04:f2:1e:\n         38:a7:48:fb:62:5f:e4:06:52:59:4f:cf:bd:bd:bb:47:ed:08:\n         95:cd:e2:82:39:34:0f:20:dc:91:aa:5e:8f\n```\n\n----------------------------------------\n\nTITLE: Revogando Certificado Let's Encrypt com a Chave Privada em Bash\nDESCRIPTION: Comando para revogar um certificado usando sua chave privada correspondente, útil quando você não é o emissor original. Requer o caminho para o certificado, o caminho para a chave privada e o motivo da revogação.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-path /PATH/TO/cert.pem --key-path /PATH/TO/key.pem --reason keycompromise\n```\n\n----------------------------------------\n\nTITLE: Encoding a Point with Only y Value Using Context-specific Tags\nDESCRIPTION: Demonstrates how to encode a Point with only y=9 using context-specific tags, setting bits 8 and 7 to (1,0) and lower bits to 1.\n\nLANGUAGE: der\nCODE:\n```\n‎30 03 81 01 09\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache to use TLS certificates\nDESCRIPTION: Configuration snippet for Apache HTTP server to set up SSL/TLS with the generated certificates. It specifies the paths to the certificate and key files and enables SSL engine.\n\nLANGUAGE: conf\nCODE:\n```\nSSLEngine on\nSSLCertificateFile /path/to/localhost.crt\nSSLCertificateKeyFile /path/to/localhost.key\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate Structure for Let's Encrypt Staging CA\nDESCRIPTION: Output from an X.509 certificate inspection tool showing the complete structure of a Let's Encrypt staging certificate authority. The certificate is self-signed with a 4096-bit RSA key and valid from 2015 to 2035, configured with critical CA extensions allowing it to sign other certificates.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            53:d0:bc:ee:73:29:38:81:4a:62:97:ef:38:71:47:14\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Jun  4 11:04:38 2015 GMT\n            Not After : Jun  4 11:04:38 2035 GMT\n        Subject: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (4096 bit)\n                Modulus:\n                    00:b6:da:80:47:43:4d:ad:50:80:60:56:49:89:32:\n                    32:1b:1c:65:71:0d:38:16:95:45:33:17:d6:17:1e:\n                    24:43:60:b0:bd:0c:6b:8f:43:dc:c8:a5:23:82:92:\n                    df:c9:ad:92:67:45:e9:c3:d6:9c:bf:be:7e:07:a1:\n                    4f:41:5b:44:76:60:8c:e1:2b:f1:40:0d:e2:31:fa:\n                    a2:68:eb:6d:30:fe:f9:56:67:79:3b:0c:55:a1:9a:\n                    99:09:83:74:59:79:83:58:18:6a:28:24:92:6c:7c:\n                    3a:20:8e:eb:c6:b8:41:78:38:c1:2c:a7:ea:20:e2:\n                    a4:a3:fc:ba:db:04:fb:1d:44:db:c4:80:ef:91:ce:\n                    62:aa:5d:ae:4e:07:1b:1b:94:2e:f9:6b:d3:7c:19:\n                    19:32:1f:fe:84:6d:db:f7:3e:75:89:83:a1:a2:61:\n                    81:ef:86:3a:b2:c0:11:00:72:3b:bf:bc:fa:fc:ce:\n                    c2:93:40:3c:4c:7a:2d:6f:9c:ac:41:19:ed:e0:57:\n                    8a:1e:95:3f:5f:6c:4c:6c:b7:c9:fa:8a:e6:d3:ed:\n                    4d:d5:d7:08:e4:0c:28:0a:7e:80:28:ff:54:1c:a1:\n                    98:8a:fe:d2:23:43:0b:9e:34:82:db:d5:df:4d:d6:\n                    a5:c6:f0:9e:49:0b:60:2d:05:b7:67:18:53:21:ed:\n                    92:cb:4e:7d:17:11:3b:e2:b6:71:9a:33:a1:2c:15:\n                    3f:20:7c:fc:9f:51:a5:c4:4a:de:38:27:5f:d9:6e:\n                    8d:fc:00:fe:90:1b:3f:42:76:50:f4:05:c6:65:85:\n                    45:09:c5:8d:aa:ba:ae:4a:9b:34:40:60:2f:2f:a4:\n                    14:bd:4d:12:c4:5b:bc:56:ca:ad:18:b9:6d:8c:b6:\n                    94:d9:ac:d8:d2:4f:66:f7:4d:41:b4:ff:d9:d0:59:\n                    2a:62:6a:c4:79:31:0a:e3:90:16:38:49:40:d7:8e:\n                    f8:d8:e6:d5:9d:62:01:34:bf:de:bb:6c:db:26:65:\n                    a9:72:ac:c5:05:33:37:ab:cd:6c:3f:0a:9d:74:4c:\n                    11:e3:97:51:8b:db:57:89:6a:7c:27:fc:99:2d:78:\n                    58:46:d2:88:cc:bc:ec:60:79:4b:db:9c:49:5d:57:\n                    52:b9:53:1b:95:06:70:c4:99:38:17:04:52:98:ac:\n                    44:f1:26:41:65:0e:4d:62:28:0d:0e:45:3a:26:bf:\n                    18:8f:8a:8b:9d:b7:af:6a:ee:12:66:e6:1b:7e:c4:\n                    05:20:57:77:12:1d:9d:da:ab:8f:2f:90:54:09:82:\n                    79:bc:83:c7:d7:95:10:63:88:a6:7d:ba:6d:6e:4b:\n                    29:ea:ee:98:9c:5a:fc:21:41:68:a8:b8:6d:1b:e6:\n                    74:94:4b\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Subject Key Identifier: \n                B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n    Signature Algorithm: sha256WithRSAEncryption\n         9d:c0:d9:37:2b:43:6e:ba:d5:7b:af:14:4f:aa:72:d6:57:c5:\n         da:1e:93:9b:6a:7c:ae:8e:36:8b:ce:d6:5b:23:f6:2c:af:18:\n         9c:b1:c2:d2:1b:cd:7d:67:96:9a:36:50:60:14:1f:18:2e:5c:\n         ed:a4:11:7b:36:a4:fa:d1:cb:76:6a:cd:28:79:27:e6:49:fe:\n         f4:4f:4b:0a:30:9a:12:cc:88:22:7d:a3:a9:d1:e5:02:47:a9:\n         bb:f0:b7:2a:73:6d:57:1e:6d:5b:4e:de:e5:bb:c8:8c:94:9c:\n         c2:40:83:6c:fd:da:91:64:22:c4:fa:51:14:0b:27:3f:e5:0b:\n         c7:b9:34:68:ed:71:a8:07:9a:02:14:36:ae:0a:35:17:9f:21:\n         71:f9:60:a8:a4:d7:9e:93:cc:d3:68:a7:b5:57:e2:55:59:17:\n         e4:65:e9:26:32:b9:12:84:2d:2d:c7:b2:18:ea:e4:c6:53:3f:\n         b1:33:ea:e1:4a:e7:ca:99:ac:a9:26:a0:59:5d:c7:71:49:58:\n         b4:38:a7:73:e9:ee:90:59:3a:79:1e:17:93:35:c1:6f:02:9a:\n         8e:5d:18:8f:3b:5f:ac:22:07:3a:7e:50:08:92:fa:4c:44:55:\n         0d:b3:3f:68:03:e5:cb:c9:09:d6:c5:86:2e:eb:ef:59:8c:cc:\n         62:02:f3:0e:e9:7f:fe:b5:05:d7:48:04:31:66:97:55:95:79:\n         d4:aa:52:f4:36:3f:e4:2b:a7:ba:f0:97:98:44:09:1e:8e:e4:\n         19:c5:62:4f:bb:04:4e:7e:89:cf:d2:8e:86:f6:1c:5e:42:7b:\n         a6:8e:9d:f7:70:3f:8f:2e:06:28:f2:0f:9e:c2:8a:34:49:91:\n         c5:4b:97:63:8c:51:76:1e:39:b4:c2:67:2d:35:03:74:2f:45:\n         21:4d:1f:95:37:8e:f7:fb:cd:a5:50:3c:38:f5:35:8b:5e:2f:\n         0b:3f:8c:53:c2:97:d5:b5:77:19:79:bf:7f:19:41:ed:50:41:\n         8d:7f:6f:e6:85:1e:a7:4a:3f:8f:af:11:fe:20:e5:08:e3:38:\n         55:57:d1:6b:c8:17:e9:3d:85:53:b7:cd:75:ab:6f:1a:ba:3b:\n         b9:0c:c8:bd:6a:1f:80:df:56:53:00:9b:10:c0:72:fd:88:41:\n         4a:b5:f2:70:a0:3c:72:b8:06:83:7c:75:98:8b:28:a6:7f:3c:\n         24:ac:26:30:16:ba:f2:84:bb:10:73:3d:c3:b0:b8:cb:bd:4c:\n         ec:38:80:fb:ff:50:76:9f:51:05:62:69:4d:2f:62:fe:60:e7:\n         26:0d:71:be:8f:17:cf:8f:66:ae:b8:1f:99:c0:17:4c:22:6a:\n         5e:2d:b8:35:ab:48:dc:e7\n```\n\n----------------------------------------\n\nTITLE: Extracting Account ID from a URL\nDESCRIPTION: Demonstrates how to extract the numeric account ID from a full URL using string manipulation.\n\nLANGUAGE: bash\nCODE:\n```\necho \"https://acme-v02.api.letsencrypt.org/acme/acct/12345\" | grep -o '[0-9]*$'\n```\n\n----------------------------------------\n\nTITLE: Отримання хешу публічного ключа з приватного ключа\nDESCRIPTION: Команда для отримання хешу публічного ключа (SubjectPublicKeyInfo) з приватного ключа. Використовується для пошуку всіх сертифікатів, які використовують конкретний приватний ключ у сховищах Certificate Transparency.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl pkey -outform DER -in /PATH/TO/privkey.pem -pubout | openssl sha256\n```\n\n----------------------------------------\n\nTITLE: Setting up hosts file entries for local development\nDESCRIPTION: Example of adding entries to the hosts file to map domains to the local IP address 127.0.0.1 for development purposes.\n\nLANGUAGE: plaintext\nCODE:\n```\n127.0.0.1 www.example.test\n127.0.0.1 example.test\n```\n\n----------------------------------------\n\nTITLE: Analyzing X.509 Certificate Structure for Let's Encrypt Staging Root CA\nDESCRIPTION: Complete X.509 certificate structure for a Let's Encrypt staging root certificate. The certificate shows serial number, issuer details, validity period, public key information, and certificate extensions. This is a self-signed root certificate used in staging environments, valid from 2000 to 2021.\n\nLANGUAGE: X.509 Certificate Format\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            ba:8c:66:24:4d:69:11:78:10:66:52:f6:ea:e5:8f:ed\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Doctored Durian Root CA X3\n        Validity\n            Not Before: Sep 30 21:12:19 2000 GMT\n            Not After : Jan 30 14:01:15 2021 GMT\n        Subject: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Doctored Durian Root CA X3\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:a9:46:63:a1:16:e3:81:77:9c:3d:6c:57:90:60:\n                    94:11:77:0d:ae:ea:4b:ed:d9:1b:c1:cd:23:51:32:\n                    c5:10:3b:dc:c9:f0:f5:81:87:a4:63:9b:8b:0f:5f:\n                    6e:cd:84:e5:d2:92:99:cf:30:d7:1c:93:e7:25:8e:\n                    44:12:9d:bb:9c:00:85:3a:6f:17:cd:7f:6c:39:10:\n                    1a:9e:03:f4:3a:71:94:91:72:59:0c:73:3e:f1:c5:\n                    f6:10:72:5b:7e:3d:25:83:52:62:ad:11:77:c3:6b:\n                    b5:fc:a4:6e:14:4b:c8:95:68:37:15:d5:dd:b1:21:\n                    47:04:5e:73:d4:88:fb:30:b9:fb:4a:46:b9:73:fe:\n                    5f:2a:c0:d6:11:8c:ce:30:1e:84:05:6d:53:f5:10:\n                    e4:56:4f:d0:f7:ae:44:c0:34:f8:6d:1e:81:39:76:\n                    a4:6a:c8:1f:2a:b1:fd:9b:57:fa:97:d3:26:03:45:\n                    67:5d:dc:3d:ad:9f:ac:4e:f3:07:1b:5c:96:06:a3:\n                    4c:4a:a0:8a:7b:78:c6:e9:c6:96:80:de:e5:94:46:\n                    e3:e5:8b:02:5a:cd:f6:6f:3d:9d:31:fb:46:91:70:\n                    4f:73:2d:5f:35:6b:e9:79:3e:c6:0f:3d:99:d1:05:\n                    93:94:79:32:5c:0d:a4:1b:0d:f6:7d:da:17:2c:75:\n                    8e:13\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Subject Key Identifier: \n                08:57:DA:89:C7:A2:53:79:0C:4F:DD:E0:90:8F:74:BA:E2:27:73:44\n    Signature Algorithm: sha256WithRSAEncryption\n         5e:e5:12:d1:ee:48:de:23:fb:11:50:b0:cf:ee:8d:a5:4a:72:\n         7e:7b:55:ba:db:4d:e7:27:b2:99:89:24:0e:c7:ae:7e:8e:12:\n         bb:21:18:d3:b4:a7:5f:ee:d7:87:3b:b4:61:ca:8e:d1:75:b4:\n         41:45:49:58:5b:35:79:4a:c3:d3:bd:f4:07:e1:9a:51:60:74:\n         67:09:28:41:e7:65:cb:41:07:c6:e1:34:ed:fc:ee:f6:e2:09:\n         82:07:75:4f:e7:49:b6:bd:30:20:d8:c3:6f:d4:0a:da:1b:67:\n         a6:a8:f8:a2:40:dc:82:a6:3e:2c:5c:b4:06:e7:d8:89:2b:10:\n         df:57:d1:25:cd:3f:58:27:a9:03:f8:56:16:49:22:1e:9c:77:\n         ba:e0:f4:c8:a6:ce:82:e5:30:8d:e6:db:3d:75:75:21:98:6e:\n         1f:0e:59:27:6f:03:b6:8b:6d:21:a8:80:33:b9:1f:85:83:f1:\n         f8:2a:10:6d:2b:79:20:4e:f3:d7:9e:1f:ec:1e:f8:16:71:42:\n         d0:62:53:76:fd:54:c5:74:76:b7:3e:ef:30:b6:35:b5:ea:79:\n         0c:2e:e9:04:e5:7d:b2:7c:ca:da:9c:a9:4c:b4:83:95:d2:13:\n         a5:82:cc:f3:8b:dc:7f:6b:d2:3f:46:eb:87:5f:a2:d1:a5:04:\n         0e:6d:1b:ac\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of rfc822Name CHOICE in GeneralName\nDESCRIPTION: This example shows the DER encoding of an email address (a@example.com) as an rfc822Name in a GeneralName CHOICE. The context-specific tag [1] (81) is used to identify this choice variant.\n\nLANGUAGE: der\nCODE:\n```\n81 0d 61 40 65 78 61 6d 70 6c 65 2e 63 6f 6d\n```\n\n----------------------------------------\n\nTITLE: Generating a Locally-Trusted Certificate with mkcert\nDESCRIPTION: Command to create a locally-trusted certificate for localhost, localhost aliases, and IP addresses using mkcert. This generates certificate files that will be trusted by the local browser.\n\nLANGUAGE: bash\nCODE:\n```\nmkcert localhost 127.0.0.1 ::1\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Structure for Let's Encrypt Staging CA\nDESCRIPTION: This shows the complete X.509 certificate for a Let's Encrypt staging environment intermediate CA. It includes details such as the certificate version, serial number, signature algorithm, validity period, public key information, and X.509v3 extensions like key usage, CRL distribution points, and certificate policies.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            d0:6b:39:ed:0d:21:e2:58:fd:81:c4:9c:0b:0e:11:02\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Doctored Durian Root CA X3\n        Validity\n            Not Before: Oct  7 19:21:40 2020 GMT\n            Not After : Sep 29 19:21:40 2021 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Artificial Apricot R3\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:bb:a4:d1:f3:ee:f8:6f:8e:a6:38:4d:45:53:00:\n                    6b:bf:1c:c4:60:b7:24:de:26:ac:98:aa:dc:42:46:\n                    fe:83:2f:f3:f4:9c:bb:40:d2:00:97:40:7d:a5:52:\n                    a9:e1:85:3b:e8:9c:31:17:90:ce:65:98:62:ee:f2:\n                    bb:49:b0:a4:2b:a1:5b:1e:5c:94:e4:18:83:60:8c:\n                    5b:6d:fb:ce:2f:f8:d5:1a:a7:6c:4a:33:5a:25:04:\n                    e0:dc:2d:d7:ac:98:da:fc:70:38:58:21:44:31:5a:\n                    13:db:00:d9:9b:c0:01:0b:53:7e:21:07:bb:43:a1:\n                    44:a9:cf:0d:c2:64:d2:9e:69:91:42:6e:13:42:fa:\n                    f4:e8:33:fe:ce:01:4a:fc:c3:6e:6f:15:96:0d:26:\n                    d2:28:a4:c7:e6:29:b9:8f:67:d9:7e:0f:a3:fe:d3:\n                    35:6c:66:9c:cc:55:b0:f3:f9:52:9e:e9:32:9f:92:\n                    76:2f:e3:49:62:77:25:ce:45:e8:87:d9:cc:16:7c:\n                    8f:99:56:df:c8:33:ce:73:86:36:e5:a4:f3:56:87:\n                    81:29:76:bf:71:9e:4c:33:e5:9d:76:37:4b:6e:25:\n                    af:9b:5f:5f:d6:c6:27:d5:a4:5a:00:8a:e4:a6:9b:\n                    fb:92:49:fc:de:f7:2d:87:c5:c2:1b:7f:6a:0b:66:\n                    6f:69\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                DE:72:7A:48:DF:31:C3:A6:50:DF:9F:85:23:DF:57:37:4B:5D:2E:65\n            X509v3 Authority Key Identifier: \n                keyid:08:57:DA:89:C7:A2:53:79:0C:4F:DD:E0:90:8F:74:BA:E2:27:73:44\n\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: sha256WithRSAEncryption\n         99:7a:cf:6d:3c:d2:eb:78:43:4b:03:c5:04:af:32:8f:b6:14:\n         e8:38:d1:ee:20:62:b7:bc:da:c8:26:4d:83:f8:ee:17:da:55:\n         af:16:74:30:19:84:f2:b5:3a:38:92:a2:b1:64:fb:cd:59:7f:\n         73:6e:1a:51:fa:44:33:ec:c3:00:dc:6a:22:93:fb:2f:ca:5e:\n         b3:01:0d:74:3e:02:1b:ff:4e:bb:63:0f:71:89:b3:42:f4:8f:\n         2a:b0:5f:d1:b2:3f:4c:c0:7c:11:0d:4a:f2:1e:02:ee:f3:95:\n         50:5b:7c:de:38:b1:ad:f2:70:75:86:1c:bf:1c:0e:e8:00:89:\n         82:9d:d9:5f:28:94:2c:2a:1e:b0:9d:14:ec:ac:a0:75:5d:0d:\n         7d:e4:80:31:b9:f4:63:61:86:ab:ae:9c:b0:db:52:0b:a9:4e:\n         da:66:66:28:a2:e6:dd:00:eb:3d:87:c2:c6:ff:06:53:dc:e8:\n         59:d6:40:fa:b7:3d:19:5a:8e:64:77:26:2e:9c:ce:ec:e0:92:\n         a4:35:15:65:41:ed:a5:ed:ff:c2:9d:eb:0e:3f:97:07:f4:b4:\n         ff:9a:a3:e4:f3:ca:11:fa:4e:e5:52:80:0b:3c:70:00:81:d1:\n         bd:89:ea:1b:9c:29:63:e3:c0:f0:19:1b:e2:3b:91:04:5e:c5:\n         a9:08:28:4b\n```\n\n----------------------------------------\n\nTITLE: Відкликання сертифіката за допомогою приватного ключа\nDESCRIPTION: Команда для відкликання сертифіката за допомогою приватного ключа з вказанням причини keyCompromise. Використовується коли приватний ключ було скомпрометовано, навіть якщо ви не власник сертифіката.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-path /PATH/TO/cert.pem --key-path /PATH/TO/privkey.pem --reason keyCompromise\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of SEQUENCE OF INTEGER\nDESCRIPTION: This example demonstrates the DER encoding of a SEQUENCE OF containing three INTEGER values (7, 8, and 9). The encoding consists of the SEQUENCE tag and length followed by the encoded INTEGER values.\n\nLANGUAGE: der\nCODE:\n```\n30 09 02 01 07 02 01 08 02 01 09\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Structure for ISRG Root X1\nDESCRIPTION: This shows the full X.509 certificate structure for the ISRG Root X1 certificate cross-signed by DST Root CA X3. It includes version, serial number, signature algorithm, issuer, validity period, subject, public key information, extensions, and signature data.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            40:01:77:21:37:d4:e9:42:b8:ee:76:aa:3c:64:0a:b7\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: O = Digital Signature Trust Co., CN = DST Root CA X3\n        Validity\n            Not Before: Jan 20 19:14:03 2021 GMT\n            Not After : Sep 30 18:14:03 2024 GMT\n        Subject: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (4096 bit)\n                Modulus:\n                    00:ad:e8:24:73:f4:14:37:f3:9b:9e:2b:57:28:1c:\n                    87:be:dc:b7:df:38:90:8c:6e:3c:e6:57:a0:78:f7:\n                    75:c2:a2:fe:f5:6a:6e:f6:00:4f:28:db:de:68:86:\n                    6c:44:93:b6:b1:63:fd:14:12:6b:bf:1f:d2:ea:31:\n                    9b:21:7e:d1:33:3c:ba:48:f5:dd:79:df:b3:b8:ff:\n                    12:f1:21:9a:4b:c1:8a:86:71:69:4a:66:66:6c:8f:\n                    7e:3c:70:bf:ad:29:22:06:f3:e4:c0:e6:80:ae:e2:\n                    4b:8f:b7:99:7e:94:03:9f:d3:47:97:7c:99:48:23:\n                    53:e8:38:ae:4f:0a:6f:83:2e:d1:49:57:8c:80:74:\n                    b6:da:2f:d0:38:8d:7b:03:70:21:1b:75:f2:30:3c:\n                    fa:8f:ae:dd:da:63:ab:eb:16:4f:c2:8e:11:4b:7e:\n                    cf:0b:e8:ff:b5:77:2e:f4:b2:7b:4a:e0:4c:12:25:\n                    0c:70:8d:03:29:a0:e1:53:24:ec:13:d9:ee:19:bf:\n                    10:b3:4a:8c:3f:89:a3:61:51:de:ac:87:07:94:f4:\n                    63:71:ec:2e:e2:6f:5b:98:81:e1:89:5c:34:79:6c:\n                    76:ef:3b:90:62:79:e6:db:a4:9a:2f:26:c5:d0:10:\n                    e1:0e:de:d9:10:8e:16:fb:b7:f7:a8:f7:c7:e5:02:\n                    07:98:8f:36:08:95:e7:e2:37:96:0d:36:75:9e:fb:\n                    0e:72:b1:1d:9b:bc:03:f9:49:05:d8:81:dd:05:b4:\n                    2a:d6:41:e9:ac:01:76:95:0a:0f:d8:df:d5:bd:12:\n                    1f:35:2f:28:17:6c:d2:98:c1:a8:09:64:77:6e:47:\n                    37:ba:ce:ac:59:5e:68:9d:7f:72:d6:89:c5:06:41:\n                    29:3e:59:3e:dd:26:f5:24:c9:11:a7:5a:a3:4c:40:\n                    1f:46:a1:99:b5:a7:3a:51:6e:86:3b:9e:7d:72:a7:\n                    12:05:78:59:ed:3e:51:78:15:0b:03:8f:8d:d0:2f:\n                    05:b2:3e:7b:4a:1c:4b:73:05:12:fc:c6:ea:e0:50:\n                    13:7c:43:93:74:b3:ca:74:e7:8e:1f:01:08:d0:30:\n                    d4:5b:71:36:b4:07:ba:c1:30:30:5c:48:b7:82:3b:\n                    98:a6:7d:60:8a:a2:a3:29:82:cc:ba:bd:83:04:1b:\n                    a2:83:03:41:a1:d6:05:f1:1b:c2:b6:f0:a8:7c:86:\n                    3b:46:a8:48:2a:88:dc:76:9a:76:bf:1f:6a:a5:3d:\n                    19:8f:eb:38:f3:64:de:c8:2b:0d:0a:28:ff:f7:db:\n                    e2:15:42:d4:22:d0:27:5d:e1:79:fe:18:e7:70:88:\n                    ad:4e:e6:d9:8b:3a:c6:dd:27:51:6e:ff:bc:64:f5:\n                    33:43:4f\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n            Authority Information Access: \n                CA Issuers - URI:http://apps.identrust.com/roots/dstrootcax3.p7c\n\n            X509v3 Authority Key Identifier: \n                keyid:C4:A7:B1:A4:7B:2C:71:FA:DB:E1:4B:90:75:FF:C4:15:60:85:89:10\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n                  CPS: http://cps.root-x1.letsencrypt.org\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://crl.identrust.com/DSTROOTCAX3CRL.crl\n\n            X509v3 Subject Key Identifier: \n                79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n    Signature Algorithm: sha256WithRSAEncryption\n         0a:73:00:6c:96:6e:ff:0e:52:d0:ae:dd:8c:e7:5a:06:ad:2f:\n         a8:e3:8f:bf:c9:0a:03:15:50:c2:e5:6c:42:bb:6f:9b:f4:b4:\n         4f:c2:44:88:08:75:cc:eb:07:9b:14:62:6e:78:de:ec:27:ba:\n         39:5c:f5:a2:a1:6e:56:94:70:10:53:b1:bb:e4:af:d0:a2:c3:\n         2b:01:d4:96:f4:c5:20:35:33:f9:d8:61:36:e0:71:8d:b4:b8:\n         b5:aa:82:45:95:c0:f2:a9:23:28:e7:d6:a1:cb:67:08:da:a0:\n         43:2c:aa:1b:93:1f:c9:de:f5:ab:69:5d:13:f5:5b:86:58:22:\n         ca:4d:55:e4:70:67:6d:c2:57:c5:46:39:41:cf:8a:58:83:58:\n         6d:99:fe:57:e8:36:0e:f0:0e:23:aa:fd:88:97:d0:e3:5c:0e:\n         94:49:b5:b5:17:35:d2:2e:bf:4e:85:ef:18:e0:85:92:eb:06:\n         3b:6c:29:23:09:60:dc:45:02:4c:12:18:3b:e9:fb:0e:de:dc:\n         44:f8:58:98:ae:ea:bd:45:45:a1:88:5d:66:ca:fe:10:e9:6f:\n         82:c8:11:42:0d:fb:e9:ec:e3:86:00:de:9d:10:e3:38:fa:a4:\n         7d:b1:d8:e8:49:82:84:06:9b:2b:e8:6b:4f:01:0c:38:77:2e:\n         f9:dd:e7:39\n```\n\n----------------------------------------\n\nTITLE: Installing the mkcert Certificate Authority on macOS\nDESCRIPTION: Command to install the mkcert local CA (Certificate Authority) on macOS. This creates a trusted root certificate in the system and browser certificate stores.\n\nLANGUAGE: shell\nCODE:\n```\nmkcert -install\n```\n\n----------------------------------------\n\nTITLE: Initializing Let's Encrypt Growth Statistics Graph in JavaScript\nDESCRIPTION: JavaScript code that initializes a statistics graph titled 'Let's Encrypt Growth' with an element ID of 'activeUsage'. This snippet sets up a Plotly visualization to display growth metrics.\n\nLANGUAGE: javascript\nCODE:\n```\n<div class=\"figure\">\n  <div id=\"activeUsage\" title=\"Let's Encrypt Growth\" class=\"statsgraph\"></div>\n</div>\n\n{{< plotly >}}\n```\n\n----------------------------------------\n\nTITLE: Finding Account ID with Certbot\nDESCRIPTION: Shows how to locate the account ID using Certbot by examining the registration information file.\n\nLANGUAGE: bash\nCODE:\n```\nsudo certbot show_account\n```\n\n----------------------------------------\n\nTITLE: Viewing Account ID in Certbot Registration Directory\nDESCRIPTION: Examines the Certbot registration info file to find the account ID using grep command.\n\nLANGUAGE: bash\nCODE:\n```\nsudo grep \"\\\"id\\\"\" /etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org/directory/*/regr.json\n```\n\n----------------------------------------\n\nTITLE: Installing mkcert on macOS using Homebrew\nDESCRIPTION: Command to install the mkcert utility on macOS using the Homebrew package manager. mkcert simplifies the creation of locally-trusted development certificates.\n\nLANGUAGE: shell\nCODE:\n```\nbrew install mkcert\n```\n\n----------------------------------------\n\nTITLE: Encoding String Types in DER\nDESCRIPTION: Examples showing how different string types (PrintableString, IA5String, UTF8String) are encoded in DER, including a Unicode emoji character.\n\nLANGUAGE: der\nCODE:\n```\n13 02 68 69\n```\n\nLANGUAGE: der\nCODE:\n```\n16 02 68 69\n```\n\nLANGUAGE: der\nCODE:\n```\n0c 04 f0 9f 98 8e\n```\n\n----------------------------------------\n\nTITLE: Retrieving Trillian Database Schema Structure in SQL\nDESCRIPTION: This code snippet references the SQL schema file that defines the database structure for Trillian, which is the backend used by Let's Encrypt's Oak CT log. The schema defines tables for storing log entries, certificates, and sequenced data.\n\nLANGUAGE: SQL\nCODE:\n```\nhttps://github.com/google/trillian/blob/master/storage/mysql/schema/storage.sql\n```\n\n----------------------------------------\n\nTITLE: Installing mkcert on macOS using Homebrew\nDESCRIPTION: Command for installing the mkcert tool on macOS systems using the Homebrew package manager. mkcert is a tool that simplifies creating locally-trusted development certificates.\n\nLANGUAGE: bash\nCODE:\n```\nbrew install mkcert\n```\n\n----------------------------------------\n\nTITLE: Handling iframe Resizing with JavaScript\nDESCRIPTION: Script that listens for message events from the newsletter iframe to dynamically adjust its height based on content. It includes validation of the message source and only allows a single resize operation.\n\nLANGUAGE: javascript\nCODE:\n```\nlet hasResized = false;\nwindow.addEventListener('message', function(e) {\n    if (hasResized) return; // Only allow one resize\n    if (e.origin !== 'https://outreach.abetterinternet.org') return;\n    if (e.data && typeof e.data === 'object' && e.data.type === 'resize' && e.data.height) {\n        hasResized = true;\n        document.getElementById('newsletter-iframe-inline').style.height = (e.data.height + 20) + 'px';\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Account ID with Caddy\nDESCRIPTION: Shows how to look up the account ID in Caddy v2 by examining the JSON configuration.\n\nLANGUAGE: bash\nCODE:\n```\ncaddy admin get /config/apps/http/certificates | jq .module_name\n```\n\n----------------------------------------\n\nTITLE: Encoding ASN.1 Using IMPLICIT Tag Method\nDESCRIPTION: Demonstrates how a UTF8String with the value \"hi\" is encoded using the IMPLICIT tag method with tag number 5, resulting in a more compact representation compared to EXPLICIT tagging.\n\nLANGUAGE: asn1\nCODE:\n```\n[5] IMPLICIT UTF8String\n```\n\nLANGUAGE: der\nCODE:\n```\n85 02 68 69\n```\n\n----------------------------------------\n\nTITLE: Installing the mkcert root CA certificate\nDESCRIPTION: This command installs the mkcert-generated root CA certificate into the local trust store, allowing locally generated certificates to be trusted by browsers and other applications.\n\nLANGUAGE: bash\nCODE:\n```\nmkcert -install\n```\n\n----------------------------------------\n\nTITLE: Embedding Newsletter Subscription Form with iframe in HTML\nDESCRIPTION: Creates an embedded iframe for the Let's Encrypt newsletter subscription form, sourced from outreach.abetterinternet.org. The iframe is styled to fit the width of the container with no border and hidden overflow.\n\nLANGUAGE: html\nCODE:\n```\n<iframe id=\"newsletter-iframe-inline\" src=\"https://outreach.abetterinternet.org/l/1011011/2025-01-14/31v6r\" style=\"width: 100%; border: 0; overflow: hidden;\"></iframe>\n```\n\n----------------------------------------\n\nTITLE: Finding Account ID in Posh-ACME's Config\nDESCRIPTION: PowerShell command to locate the account ID when using the Posh-ACME PowerShell module for ACME certificate management.\n\nLANGUAGE: bash\nCODE:\n```\n(Get-PAAccount).id\n```\n\n----------------------------------------\n\nTITLE: Finding Account ID with Caddy Server\nDESCRIPTION: Command to locate the Let's Encrypt account ID when using Caddy server with ACME for certificate management.\n\nLANGUAGE: bash\nCODE:\n```\ngrep -r \"acme-account\" /var/lib/caddy/.local/share/caddy/\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for DST Root CA X3 Expiration Document\nDESCRIPTION: YAML frontmatter defining the metadata for a document about DST Root CA X3 certificate expiration. The frontmatter includes title, slug, last modification date (April 6, 2021), and indicates the content is not translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: DST Root CA X3 Expiration (September 2021)\nslug: dst-root-ca-x3-expiration-september-2021\nlastmod: 2021-04-06\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Thank You Page for Donations with Double Donation Widget\nDESCRIPTION: HTML markup for a donation thank you page that confirms receipt of the donation, provides tax information for ISRG (Internet Security Research Group), and includes a widget for donation matching programs.\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"container\">\n    <p><strong>Thank you for your donation</strong></p>\n    <p>On behalf of everyone at ISRG, thank you for your contribution to support our work.</p>\n    <p>A donation receipt has been sent to the email address you provided. Internet Security Research Group is a 501(c)(3) nonprofit public benefit organization. Our EIN is: 46-3344200.</p>\n    <p class=\"pt-2\"><strong>Double your donation</strong></p>\n    <p>Many organizations match donations to nonprofits made by employees. Check if your organization has a matching program and double your impact!</p>\n    <div class=\"pt-2\">\n      {{< double_donation >}}\n    </div>\n  </div>\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for ASN.1 and DER Article\nDESCRIPTION: YAML frontmatter metadata for a blog post about ASN.1 and DER. The metadata specifies the slug for the URL path and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: a-warm-welcome-to-asn1-and-der\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: PEM-encoded X.509 Certificate for DST Root CA X3\nDESCRIPTION: This is a PEM-encoded X.509 certificate for the Digital Signature Trust Co.'s DST Root CA X3. The certificate was issued on September 30, 2000 and expires on September 30, 2021. It's a root certificate used in PKI (Public Key Infrastructure) systems for validating certificate chains.\n\nLANGUAGE: text\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIDSjCCAjKgAwIBAgIQRK+wgNajJ7qJMDmGLvhAazANBgkqhkiG9w0BAQUFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTAwMDkzMDIxMTIxOVoXDTIxMDkzMDE0MDExNVow\nPzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMRcwFQYDVQQD\nEw5EU1QgUm9vdCBDQSBYMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAN+v6ZdQCINXtMxiZfaQguzH0yxrMMpb7NnDfcdAwRgUi+DoM3ZJKuM/IUmTrE4O\nrz5Iy2Xu/NMhD2XSKtkyj4zl93ewEnu1lcCJo6m67XMuegwGMoOifooUMM0RoOEq\nOLl5CjH9UL2AZd+3UWODyOKIYepLYYHsUmu5ouJLGiifSKOeDNoJjj4XLh7dIN9b\nxiqKqy69cK3FCxolkHRyxXtqqzTWMIn/5WgTe1QLyNau7Fqckh49ZLOMxt+/yUFw\n7BZy1SbsOFU5Q9D8/RhcQPGX69Wam40dutolucbY38EVAjqr2m7xPi71XAicPNaD\naeQQmxkqtilX4+U9m5/wAl0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNV\nHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMSnsaR7LHH62+FLkHX/xBVghYkQMA0GCSqG\nSIb3DQEBBQUAA4IBAQCjGiybFwBcqR7uKGY3Or+Dxz9LwwmglSBd49lZRNI+DT69\nikugdB/OEIKcdBodfpga3csTS7MgROSR6cz8faXbauX+5v3gTt23ADq1cEmv8uXr\nAvHRAosZy5Q6XkjEGB5YGV8eAlrwDPGxrancWYaLbumR9YbK+rlmM6pZW87ipxZz\nR8srzJmwN0jP41ZL9c8PDHIyh8bwRLtTcm1D9SZImlJnt1ir/md2cXjbDaJWFBM5\nJDGFoqgCWjBH4d1QB7wCCZAA62RjYJsWvIjJEubSfZGL+T0yjWW06XyxV3bqxbYo\nOb8VZRzI9neWagqNdwvYkQsEjgfbKbYK7p2CNTUQ\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: Configuring Frontmatter for a Thank You Page in Markdown\nDESCRIPTION: This snippet defines the frontmatter configuration for a markdown page with the slug 'thankyou' and marks it as untranslated with a value of 1. The frontmatter is delimited by triple dashes and uses YAML syntax.\n\nLANGUAGE: markdown\nCODE:\n```\n---\nslug: thankyou\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Retrieving Account ID from Certificate Details\nDESCRIPTION: Method to extract the account ID from a certificate by examining the certificate details with OpenSSL and identifying the account in the certificate's Authority Information Access field.\n\nLANGUAGE: bash\nCODE:\n```\n# For any certificate, the account ID can be found in the Authority Information Access field\nopenssl x509 -in /path/to/cert.pem -noout -text | grep -A 2 \"Authority Information Access\"\n```\n\n----------------------------------------\n\nTITLE: Using the New Page Script for Multilingual Content\nDESCRIPTION: Usage example for the new-page.sh script that automates the creation of translation stubs for new pages across all supported languages.\n\nLANGUAGE: sh\nCODE:\n```\nUsage: ./new-page.sh <page-path> <page title>\nExamples:\n./new-page.sh my-page \"My Page Title\"\n./new-page.sh post/my-post \"My Post Title\"\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Details for Let's Encrypt E9\nDESCRIPTION: This is a detailed X.509 certificate for Let's Encrypt's E9 certificate issued by ISRG Root X2. The certificate is valid from March 13, 2024 to March 12, 2027 and uses an ECDSA with SHA384 signature algorithm with a 384-bit elliptic curve key.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            2f:4c:37:d4:be:74:fc:42:33:88:c6:a8:40:4a:c0:22\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X2\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = E9\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:a0:5c:dc:45:9f:3b:ac:e6:02:a9:58:49:5d:0c:\n                    15:3a:22:02:7c:e9:a6:8d:59:48:97:db:5c:68:e9:\n                    ae:30:64:c9:d1:5b:60:17:a4:72:0a:e5:24:49:ad:\n                    e7:bf:3b:47:83:f5:82:b6:cf:b6:07:77:a1:40:65:\n                    7e:83:33:58:78:a1:a6:35:d6:92:88:ef:95:c7:8c:\n                    99:46:2a:bd:56:d0:73:7f:69:08:3d:d1:89:88:c3:\n                    0a:be:d6:a6:e2:2a:73\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                5D:77:D1:4D:AC:4D:22:78:59:B2:86:59:8E:43:1C:B7:64:59:13:41\n            X509v3 Authority Key Identifier: \n                keyid:7C:42:96:AE:DE:4B:48:3B:FA:92:F8:9E:8C:CF:6D:8B:A9:72:37:95\n\n            Authority Information Access: \n                CA Issuers - URI:http://x2.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x2.c.lencr.org/\n\n    Signature Algorithm: ecdsa-with-SHA384\n         30:64:02:30:15:ac:0f:7a:1b:34:26:f2:c8:af:b0:98:0e:69:\n         7a:09:7a:1b:85:44:20:40:33:2f:bc:0c:6f:36:ba:93:1e:0a:\n         ec:2b:c1:cd:a1:d0:c4:a9:7e:ae:81:70:39:10:7c:7e:02:30:\n         4b:7e:2e:13:a8:06:8a:32:32:d0:2d:97:9f:eb:e3:78:2a:a7:\n         f3:16:62:92:1a:b6:5d:fd:71:49:80:ee:62:aa:56:f5:85:49:\n         d4:eb:b6:be:a9:b9:61:91:42:21:7f:a7\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Trademark Page\nDESCRIPTION: YAML frontmatter that configures a webpage about trademarks for Let's Encrypt. It defines the slug as 'trademarks' and sets 'untranslated' to 1, indicating this page should not be translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Details for Let's Encrypt Authority X1\nDESCRIPTION: This snippet shows the full X.509 certificate details for Let's Encrypt Authority X1, including version, serial number, signature algorithm, issuer details, validity period, public key information, certificate extensions, and the digital signature. The certificate is signed by ISRG Root X1 and was valid from June 4, 2015 to June 4, 2020.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            e7:93:90:be:92:07:03:49:18:5f:79:75:81:e5:ca:83\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Jun  4 12:00:20 2015 GMT\n            Not After : Jun  4 12:00:20 2020 GMT\n        Subject: C = US, O = Let's Encrypt, CN = Let's Encrypt Authority X1\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:9c:d3:0c:f0:5a:e5:2e:47:b7:72:5d:37:83:b3:\n                    68:63:30:ea:d7:35:26:19:25:e1:bd:be:35:f1:70:\n                    92:2f:b7:b8:4b:41:05:ab:a9:9e:35:08:58:ec:b1:\n                    2a:c4:68:87:0b:a3:e3:75:e4:e6:f3:a7:62:71:ba:\n                    79:81:60:1f:d7:91:9a:9f:f3:d0:78:67:71:c8:69:\n                    0e:95:91:cf:fe:e6:99:e9:60:3c:48:cc:7e:ca:4d:\n                    77:12:24:9d:47:1b:5a:eb:b9:ec:1e:37:00:1c:9c:\n                    ac:7b:a7:05:ea:ce:4a:eb:bd:41:e5:36:98:b9:cb:\n                    fd:6d:3c:96:68:df:23:2a:42:90:0c:86:74:67:c8:\n                    7f:a5:9a:b8:52:61:14:13:3f:65:e9:82:87:cb:db:\n                    fa:0e:56:f6:86:89:f3:85:3f:97:86:af:b0:dc:1a:\n                    ef:6b:0d:95:16:7d:c4:2b:a0:65:b2:99:04:36:75:\n                    80:6b:ac:4a:f3:1b:90:49:78:2f:a2:96:4f:2a:20:\n                    25:29:04:c6:74:c0:d0:31:cd:8f:31:38:95:16:ba:\n                    a8:33:b8:43:f1:b1:1f:c3:30:7f:a2:79:31:13:3d:\n                    2d:36:f8:e3:fc:f2:33:6a:b9:39:31:c5:af:c4:8d:\n                    0d:1d:64:16:33:aa:fa:84:29:b6:d4:0b:c0:d8:7d:\n                    c3:93\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n                  CPS: http://cps.root-x1.letsencrypt.org\n\n            X509v3 Subject Key Identifier: \n                A8:4A:6A:63:04:7D:DD:BA:E6:D1:39:B7:A6:45:65:EF:F3:A8:EC:A1\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://crl.root-x1.letsencrypt.org\n\n            Authority Information Access: \n                OCSP - URI:http://ocsp.root-x1.letsencrypt.org/\n                CA Issuers - URI:http://cert.root-x1.letsencrypt.org/\n\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n    Signature Algorithm: sha256WithRSAEncryption\n         6b:cc:fd:71:af:f3:26:9f:19:11:8c:3c:fe:a1:9e:08:28:23:\n         d0:c6:58:67:f8:97:49:b3:8c:18:6e:0a:40:d5:aa:81:bf:ee:\n         bb:07:d7:2b:73:b5:e7:8f:c6:20:37:ee:4a:92:06:8d:1f:5e:\n         ee:46:99:b5:8e:c3:4f:46:a7:03:d8:c8:00:18:d2:25:8e:31:\n         4e:b2:6e:b4:c9:1d:2e:3a:e9:4a:f3:a1:ef:f8:23:02:d0:a1:\n         07:36:d7:d1:0a:96:1f:b8:52:0b:b5:ab:82:b1:35:8d:6a:30:\n         30:3f:d5:85:f6:42:6f:4c:e8:07:00:b3:55:2f:64:a1:d2:a4:\n         94:00:6e:c6:2b:6c:de:a8:6c:da:14:18:e7:86:e8:e3:47:62:\n         bf:0a:45:0c:f9:14:c7:d9:61:c0:38:f5:f9:9d:0d:3c:0a:9f:\n         fa:72:2c:e9:09:15:e0:3f:76:6f:e8:3f:df:54:98:a0:85:a1:\n         e3:9a:e7:0f:58:26:bd:95:8b:b8:9c:5d:de:7d:09:4f:26:a6:\n         b5:a1:c4:55:e7:99:ad:68:53:74:fc:64:da:2f:8e:26:f7:50:\n         7a:1c:8e:51:09:7c:d6:c3:cb:dc:e0:29:36:14:45:c3:15:c1:\n         ea:35:76:46:c7:35:b2:dc:e6:62:23:22:4f:e4:27:e4:4f:0f:\n         e7:21:47:e8:09:8f:2d:c6:87:dc:4c:36:40:eb:65:02:9f:b0:\n         83:bd:de:1c:53:b1:93:26:81:94:38:73:eb:ee:8c:2d:4c:8d:\n         26:a4:f8:08:bc:ed:86:5e:61:03:e1:d5:f0:86:31:24:e7:a3:\n         92:08:23:7e:c3:50:2b:48:9f:c0:49:c4:98:b1:b8:f7:8e:30:\n         ab:23:2c:b0:f9:02:d3:15:cb:47:e9:77:5f:65:71:47:a4:e1:\n         b8:c3:63:cf:d4:8d:be:7f:c1:f9:f6:f8:a9:3b:cf:bd:92:c5:\n         67:5e:92:3b:47:39:60:66:2b:1a:aa:f2:30:ee:b8:cc:38:ca:\n         68:35:83:99:fb:47:b4:d9:fd:8d:f2:e1:b4:e9:59:40:e4:04:\n         71:68:d3:7c:4d:33:6d:70:04:50:c8:ac:26:59:79:58:6f:0d:\n         6e:0c:b5:3e:be:02:cb:36:6d:ca:68:1f:06:1c:1a:89:76:81:\n         a2:c3:6b:99:36:76:41:b8:d4:e1:ad:5d:ad:1f:63:e4:e3:76:\n         bc:98:e1:c3:9c:b2:d2:54:2a:3b:f6:30:99:2e:e3:26:93:b6:\n         38:c4:09:7d:6b:26:f1:4b:9e:a6:1e:c0:2f:85:9b:18:e0:58:\n         fb:b2:44:db:8b:0c:05:8a:df:49:a6:a5:c2:59:dc:29:83:e9:\n         d1:6d:02:2e:21:ec:7d:fb\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Trademarks Document\nDESCRIPTION: YAML front matter configuration for a trademarks document, indicating it should use the 'trademarks' slug in URLs and should not be translated (untranslated: 1).\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Encontrando ID de cuenta en Certbot\nDESCRIPTION: Ruta de archivo donde Certbot almacena el ID de cuenta Let's Encrypt en sistemas Unix. El ID se encuentra en el campo \"uri\" del archivo regr.json.\n\nLANGUAGE: path\nCODE:\n```\n/etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org/directory/*/regr.json\n```\n\n----------------------------------------\n\nTITLE: Sample Certificate Authority Information Output\nDESCRIPTION: Example of OpenSSL output showing the Authority Information Access field from which the account ID can be extracted.\n\nLANGUAGE: bash\nCODE:\n```\nAuthority Information Access: \n    OCSP - URI:http://r3.o.lencr.org\n    CA Issuers - URI:http://r3.i.lencr.org/\n    CA Repository - URI:https://acme-v02.api.letsencrypt.org/acme/acct/12345678\n```\n\n----------------------------------------\n\nTITLE: PEM-encoded X.509 Certificate for ISRG Root OCSP X1\nDESCRIPTION: This is a PEM-encoded X.509 certificate for the ISRG Root OCSP X1 service. It was issued by ISRG Root X1 and is valid from June 9, 2020 to June 10, 2025. The certificate is used for OCSP (Online Certificate Status Protocol) responses in the Let's Encrypt certificate authority infrastructure.\n\nLANGUAGE: pem\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIEtjCCAp6gAwIBAgIRAOkSyQ2QhgQ/FnCA3JZEiqgwDQYJKoZIhvcNAQELBQAw\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwNjA5MTMwNDEx\nWhcNMjUwNjEwMTMwNDExWjBUMQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJu\nZXQgU2VjdXJpdHkgUmVzZWFyY2ggR3JvdXAxGjAYBgNVBAMTEUlTUkcgUm9vdCBP\nQ1NQIFgxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuw0cR9Li4+M+\naIJixENnV4PM9N8nAxwWsM/7PzV/766q/1PKA8jB4OykscNkK9XCblOElSzXSQJx\nBrpckIquoydslakPvaB4HLj3cx8EJP4tEyXRDt415uZs9LWFSoplSLBFNC2gMfL7\nWYxPqcoOagU+amCVSEDK85oILqnZ27FJrU2hQGOF/lWDa1y1YiIp9e2+ryFOUn1w\nAVWQdnOyovh6suBnjCcR+269q6Xtf3/fUHjqnOgO7e8XMDy69MygLltOzDxI0/VA\n21EL1kBoC2ckgorVASrKByaPS9o6p2bYcHZ3FC/3g+tv6pCiFZt+e4YMBnYVyAYC\nmiJVv7PFtQIDAQABo4GHMIGEMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAA\nMB0GA1UdDgQWBBQfuyfyJnprzPH1dNmWK34Z7MMcIzATBgNVHSUEDDAKBggrBgEF\nBQcDCTAfBgNVHSMEGDAWgBR5tFnme7bl5AFzgAiIyBpY9umbbjAPBgkrBgEFBQcw\nAQUEAgUAMA0GCSqGSIb3DQEBCwUAA4ICAQCC1SyXg+js3mvzBv6gHkZBOTP2MPh6\nEgQMnWAy2Olu933RBfucYKb4H8JFV7OZQDxa/VJUeVjBwOfQf2Sj7nQp5Aq3m7ug\nF228lkLaKOn4c7sX00Px3DpFUpYKHbdGsR69doWRp3mtFuBi3/uAwv1lrvPayzRm\nLLtu047CGfD0zmCY/VpuehYZa/g4MLwp6i7Lscvh3B+Jl+daqTYWCNulw8q5gfsE\nUXRQzGu5KnBOb6Jw0nrlk7h2YY8N4iP5sBThzl0qRLfy82n4tvs/2IwQd9RBcv6H\n+df/sGmjnLvlhAjqjybUQoA/rhkF8PzqKJtpOkaj2qO5XIVJg642T+Kb2qQhohAK\nl0YyMxazkQ9qFDuRrljixOIC4iBN40uk5uABF+Vf6UsITJCxkDNakDqKz/nwe+TM\nbHXTLuJ1PA+q+Ai73MR9zFW19MffOSaJOR4I/3WeNfUv0nNgYFN8VP60Bjgf7cFc\nj+t/zR1pRE/13dguo7FS5EA/52axalq6E+j3/uO7L33+CSBvON0GZlekRcPgvRgq\nh0VMhrl6ine7mG0UVBuIg9CLAf+cHCVsDyUiO8x50e5CNEjxh1hxgo46szLU5tHP\naocuXuOLVuLdUat+j/2satKSUStQRigSXAp8fAd5oUXQhSh7GVtIf5eEvGvl04Np\nu70vXLDE2hdzTg==\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Tests\nDESCRIPTION: Command chain to install Node.js dependencies, build the project, and run tests for JavaScript, CSS, or layout changes.\n\nLANGUAGE: sh\nCODE:\n```\nnpm install && npm run build && npm test\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Details for Let's Encrypt E7 Intermediate CA\nDESCRIPTION: This certificate data shows the complete X.509 v3 certificate for Let's Encrypt's E7 intermediate certificate authority. It includes issuer information, validity period, public key details, and various X.509 extensions that define the certificate's capabilities and restrictions.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            aa:75:f1:e6:2b:8f:0a:22:09:66:d3:8b:bf:d4:ba:a1\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = E7\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:41:e8:04:93:08:58:7f:be:37:30:0c:c0:a0:41:\n                    ea:fe:56:da:84:93:3e:c9:00:db:ab:67:12:cf:f9:\n                    4f:53:09:e8:a8:2f:ab:29:e5:9f:15:46:f4:5b:62:\n                    4e:0f:d4:83:41:99:b7:9f:40:72:45:1c:2c:5c:4a:\n                    32:a6:c2:db:c6:05:6a:65:ff:da:da:f0:75:b4:40:\n                    3b:14:68:95:b6:a8:e2:6a:71:e2:74:65:51:53:de:\n                    16:d4:1e:27:c1:33:fd\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                AE:48:9E:DC:87:1D:44:A0:6F:DA:A2:E5:60:74:04:78:C2:9C:00:80\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n    Signature Algorithm: sha256WithRSAEncryption\n         8f:1e:ba:7c:37:4b:93:9c:b0:16:7d:c2:cc:0d:70:d6:a7:f2:\n         94:75:03:68:47:f4:41:9a:57:70:9b:1e:75:d2:46:49:f6:d4:\n         50:eb:db:35:1f:4d:fd:04:35:e8:ad:65:5e:5e:15:17:28:66:\n         19:70:d3:e4:a7:5f:72:bd:11:bc:82:15:ac:dc:45:87:89:6a:\n         1e:d4:51:08:fe:91:05:1b:2d:a9:b6:76:cd:44:60:a9:a9:27:\n         fd:78:a9:d2:26:90:2f:42:1d:7c:70:59:af:7f:7a:16:09:27:\n         9e:24:58:15:c9:0a:39:13:c6:c8:cd:d0:2a:77:7a:ea:0b:4c:\n         b2:df:08:e6:79:11:42:50:20:fc:96:fe:19:cd:de:80:8b:ee:\n         18:a5:9b:a0:4d:46:f3:d3:53:b0:df:4b:4c:30:f7:3c:b8:f4:\n         75:43:2b:38:8b:aa:56:32:c1:f2:91:02:eb:29:3d:7a:7a:e5:\n         ae:a8:d7:42:09:0b:11:88:57:ce:ae:dd:2d:a7:ef:e5:59:22:\n         83:a1:a5:d2:7b:ae:aa:3a:9f:a7:44:35:6e:2d:68:c9:53:40:\n         95:77:ba:69:45:f0:f7:60:9c:82:10:bd:6c:db:0a:10:ed:7e:\n         33:9d:98:63:9f:a8:7c:85:e5:4b:f4:84:41:bb:d5:61:80:4b:\n         67:9c:9e:8a:09:55:ea:dd:d2:33:a1:fe:bd:31:b4:68:ff:58:\n         1f:32:e7:fc:a5:4e:1f:31:90:7d:70:cf:ee:a3:39:b6:47:fe:\n         ed:d8:99:7b:ba:36:7f:0e:8e:ec:8b:cd:e9:fb:10:5c:44:10:\n         8f:c4:c9:51:72:71:bf:6f:ee:26:17:2e:cb:fb:52:0e:05:f0:\n         1c:cf:14:93:7e:16:35:b4:53:ef:31:93:1a:44:11:5f:48:2c:\n         6e:30:1e:6b:f8:d8:02:85:af:d1:9b:d0:47:0a:6a:3d:ee:fd:\n         0f:f8:bb:09:ea:7c:a9:69:c0:fb:b0:04:ff:70:77:4b:fd:dd:\n         10:46:26:73:49:69:7b:5d:fa:e8:0f:fa:18:48:24:de:4b:6b:\n         f4:f1:28:42:b2:c2:86:ce:88:b6:ed:f0:9c:d2:c1:d9:eb:82:\n         f0:82:86:2d:01:69:1a:d3:8e:ff:6f:e1:88:02:a3:c9:a8:da:\n         04:fd:b9:c3:58:c5:d1:69:7c:05:ba:a7:7b:7b:99:da:ad:46:\n         c8:f1:49:61:19:93:ef:f3:97:a6:63:87:fc:55:4b:b7:04:be:\n         f2:78:35:70:09:a9:0a:e8:cf:c2:d7:89:64:d7:03:1b:4b:05:\n         da:7f:ec:73:4f:92:41:fe:3d:7d:dc:94:2b:4b:72:f9:55:30:\n         16:3f:6d:99:6c:72:47:f3\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for Let's Encrypt E8\nDESCRIPTION: Detailed X.509 certificate structure showing a Let's Encrypt E8 certificate issued by ISRG Root X2. The certificate uses ECDSA with SHA384 for signatures and includes a 384-bit ECC public key with various X.509v3 extensions defining its usage constraints and verification paths.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            7e:8f:14:5f:87:b1:59:33:2d:7f:d4:08:2b:82:6b:69\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X2\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = E8\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:d1:65:f2:5e:dc:4b:b4:0c:02:9c:d2:b2:fa:ee:\n                    e9:6c:ab:3a:ae:38:a1:f4:d4:39:32:33:c5:42:d4:\n                    cc:33:0c:34:c7:21:20:90:70:5c:e8:62:2f:1c:71:\n                    b3:42:d7:79:be:46:0d:c1:db:47:a1:13:a0:c7:df:\n                    81:26:63:3b:d4:8d:1d:f6:3d:82:33:32:f6:f4:2b:\n                    e7:f5:96:3a:b4:13:67:18:7b:6b:3e:8d:48:d9:ea:\n                    de:ed:ae:6d:3e:87:4c\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                8F:0D:13:A2:F6:2E:7E:D1:50:6C:33:18:38:5D:59:8E:23:72:91:CA\n            X509v3 Authority Key Identifier: \n                keyid:7C:42:96:AE:DE:4B:48:3B:FA:92:F8:9E:8C:CF:6D:8B:A9:72:37:95\n\n            Authority Information Access: \n                CA Issuers - URI:http://x2.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x2.c.lencr.org/\n\n    Signature Algorithm: ecdsa-with-SHA384\n         30:65:02:31:00:a5:b1:43:49:75:7d:fa:18:4f:a8:db:20:df:\n         ec:bd:36:9b:73:f7:12:55:56:44:b9:6c:e5:9c:8b:60:f8:dc:\n         35:a9:81:c5:10:7d:81:96:28:8f:6e:26:19:9b:4f:dc:69:02:\n         30:04:99:70:02:e0:ea:4a:52:72:89:aa:20:88:d5:1d:74:54:\n         43:9d:34:71:d9:78:e2:7e:df:87:1c:28:90:ba:3f:95:59:4e:\n         f1:8c:87:c0:08:bb:7a:34:c7:b6:fc:3d:56\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Get Involved Page\nDESCRIPTION: YAML frontmatter that defines metadata for a 'getinvolved' page in the Let's Encrypt project. The configuration sets the page slug and marks it as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: getinvolved\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Structure for Fake Let's Encrypt Intermediate Certificate\nDESCRIPTION: Complete X.509 certificate structure showing the fake Let's Encrypt intermediate certificate used for testing environments. The certificate has a 20-year validity period from 2016 to 2036, uses RSA-2048 encryption, and includes various X.509v3 extensions that define its purpose as an intermediate CA with path length constraints.\n\nLANGUAGE: x509 certificate\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            8b:e1:2a:0e:59:44:ed:3c:54:64:31:f0:97:61:4f:e5\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: CN = Fake LE Root X1\n        Validity\n            Not Before: May 23 22:07:59 2016 GMT\n            Not After : May 23 22:07:59 2036 GMT\n        Subject: CN = Fake LE Intermediate X1\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:ed:58:ac:92:0e:7e:eb:59:97:39:82:08:f3:dd:\n                    90:74:f2:33:b8:c6:d8:b7:bb:32:0d:7c:3e:6c:43:\n                    b2:e3:ee:1c:de:b5:44:fe:c1:0a:1b:fa:25:d2:66:\n                    48:67:bf:1f:88:bd:d6:d7:17:9f:f2:b7:c6:96:3e:\n                    95:0a:9c:fc:a6:a0:bc:6c:62:22:39:81:00:4b:c4:\n                    d0:f3:21:e7:34:38:86:9f:95:6a:80:af:6f:66:ec:\n                    9f:3e:34:db:40:a4:43:7c:9d:91:67:7f:76:e1:7a:\n                    16:56:ec:0c:66:4b:59:b4:66:74:ac:74:7c:34:17:\n                    0f:9b:82:2c:4f:83:63:10:f6:4f:68:79:f1:5e:a9:\n                    af:bb:2a:a7:65:cf:96:db:ad:46:15:da:fa:25:c6:\n                    10:c5:b6:72:38:32:1f:01:89:60:8d:c4:31:f5:1e:\n                    2c:ea:f8:62:82:70:7b:22:9c:36:56:ba:b0:aa:75:\n                    ea:ff:69:f2:41:9d:0b:3e:48:14:8b:e8:c5:40:a4:\n                    7b:7e:77:7e:73:8c:10:fd:d9:f3:b6:25:ee:7a:76:\n                    13:1f:cc:28:0e:29:77:89:df:8d:16:85:6d:d3:8c:\n                    3d:73:a8:b6:57:79:a0:b2:50:d4:67:7c:e9:96:65:\n                    5f:27:12:1b:47:38:56:d4:09:4e:eb:fc:a9:23:31:\n                    93:bd\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                C0:CC:03:46:B9:58:20:CC:5C:72:70:F3:E1:2E:CB:20:A6:F5:68:3A\n            Authority Information Access: \n                OCSP - URI:http://ocsp.stg-root-x1.letsencrypt.org/\n                CA Issuers - URI:http://cert.stg-root-x1.letsencrypt.org/\n\n            X509v3 Authority Key Identifier: \n                keyid:C1:26:74:A4:8A:44:A0:E6:FA:20:28:D8:5C:23:9A:45:88:18:79:E0\n\n    Signature Algorithm: sha256WithRSAEncryption\n         05:84:ae:e0:89:7e:7c:8d:0c:61:4e:36:39:39:84:8f:ed:47:\n         a9:0e:43:bf:20:1e:c8:20:3a:b0:6b:99:77:08:c5:50:67:95:\n         3a:fd:cd:9c:bc:9f:a1:fb:94:3a:31:1b:63:98:ab:14:20:ed:\n         9e:ff:b4:72:4b:a4:51:93:7d:97:3e:10:d9:88:d6:19:4a:56:\n         e1:34:ee:de:27:93:b1:a0:bd:00:5b:c2:4a:03:47:27:25:92:\n         56:d5:af:07:95:c3:c6:ca:9a:c2:5d:4a:cc:7c:f3:c2:bd:77:\n         d9:b1:76:ae:d1:ad:6b:34:aa:56:a2:bd:13:4e:ec:18:73:02:\n         7f:ec:e9:0d:05:43:55:51:ad:a9:93:c7:c1:7d:ca:a9:4b:5e:\n         7c:4e:b6:d5:bf:11:23:a5:42:97:8a:03:df:43:a5:7f:ca:63:\n         bb:31:b8:24:a0:45:44:57:25:cc:b4:63:a3:f8:7b:22:49:1f:\n         8d:9f:30:0d:ae:df:68:e8:d5:5f:1e:a7:f9:e5:10:db:d7:08:\n         30:2c:eb:f3:fa:cd:58:74:bd:a5:81:86:40:a2:62:63:6c:66:\n         54:2f:61:d7:61:fd:f5:7c:9f:cd:61:3d:bd:be:73:28:fd:cc:\n         54:6e:a7:79:7d:61:49:da:3b:3c:40:1b:f5:fa:91:84:79:2a:\n         56:ca:94:bc:99:48:46:6b:d7:bd:52:93:c0:d0:8f:dd:e0:a3:\n         44:20:88:3d:30:2f:8d:5f:b8:9e:2e:fc:ea:25:f0:c0:56:0d:\n         cf:c9:77:3e:63:cb:0b:24:17:58:6a:21:9c:9f:22:06:6f:b9:\n         9e:4e:ce:db:29:da:3d:55:b4:53:65:be:a6:dd:b0:49:5b:af:\n         74:33:39:cc:6b:f6:7f:d9:6d:35:65:22:61:91:c9:d6:69:8e:\n         f7:b8:d2:63:fe:98:7d:d3:94:1f:ae:a2:46:d4:2d:0e:41:c1:\n         45:d9:0d:06:c3:1b:0f:e1:26:d9:38:01:95:db:47:35:22:41:\n         7c:1d:e9:9b:d1:5b:96:03:9c:27:41:52:59:c5:03:58:9e:ef:\n         3b:4f:8d:4d:79:60:ad:1a:1f:45:3e:a9:57:2c:33:c5:5a:3a:\n         74:d0:f4:5b:36:25:4d:67:94:56:c3:b8:d3:12:6a:86:05:10:\n         44:44:7d:60:b3:8b:c4:9d:0e:e8:2f:22:d3:11:71:00:c2:8e:\n         b5:27:68:74:c0:77:44:8c:2d:ed:11:50:d2:ec:ad:9f:96:79:\n         32:a9:18:86:53:08:dc:9d:6d:3d:14:e9:d6:71:2d:f5:fc:86:\n         b2:90:4e:3b:4e:60:8b:5e:3c:41:ab:29:fb:73:7e:b2:fa:8a:\n         a2:6a:10:82:53:68:03:15\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Profiles Page\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about profiles in Let's Encrypt. It specifies the title, slug, creation date, last modification date, and flags for displaying modification date and translation status.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Profiles\nslug: profiles\ndate: 2025-02-05\nlastmod: 2025-02-05\nshow_lastmod: false\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Finding Account ID in regr.json format\nDESCRIPTION: Sample output from regr.json showing the account ID format with a numerical identifier prefixed with the directory URL.\n\nLANGUAGE: json\nCODE:\n```\n\"id\": https://acme-v02.api.letsencrypt.org/acme/acct/12345678\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Let's Encrypt Profiles Page\nDESCRIPTION: This YAML front matter block defines metadata for a web page about Let's Encrypt profiles. It specifies the page title, URL slug, creation date, last modification date, and display settings including hiding the last modified date and indicating that the content is not translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Profiles\nslug: profiles\ndate: 2025-02-05\nlastmod: 2025-02-05\nshow_lastmod: false\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for Let's Encrypt Staging Certificate\nDESCRIPTION: Detailed certificate information for a Let's Encrypt staging environment intermediate certificate named '(STAGING) Artificial Apricot R3'. This certificate is issued by '(STAGING) Pretend Pear X1' and is valid from September 2020 to September 2025. It includes RSA public key information, various X.509 extensions, and signature data.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            4d:f4:2b:95:d1:ee:9b:3a:4c:2e:b3:3b:8d:10:5d:d6\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Sep  4 00:00:00 2020 GMT\n            Not After : Sep 15 16:00:00 2025 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Artificial Apricot R3\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:bb:a4:d1:f3:ee:f8:6f:8e:a6:38:4d:45:53:00:\n                    6b:bf:1c:c4:60:b7:24:de:26:ac:98:aa:dc:42:46:\n                    fe:83:2f:f3:f4:9c:bb:40:d2:00:97:40:7d:a5:52:\n                    a9:e1:85:3b:e8:9c:31:17:90:ce:65:98:62:ee:f2:\n                    bb:49:b0:a4:2b:a1:5b:1e:5c:94:e4:18:83:60:8c:\n                    5b:6d:fb:ce:2f:f8:d5:1a:a7:6c:4a:33:5a:25:04:\n                    e0:dc:2d:d7:ac:98:da:fc:70:38:58:21:44:31:5a:\n                    13:db:00:d9:9b:c0:01:0b:53:7e:21:07:bb:43:a1:\n                    44:a9:cf:0d:c2:64:d2:9e:69:91:42:6e:13:42:fa:\n                    f4:e8:33:fe:ce:01:4a:fc:c3:6e:6f:15:96:0d:26:\n                    d2:28:a4:c7:e6:29:b9:8f:67:d9:7e:0f:a3:fe:d3:\n                    35:6c:66:9c:cc:55:b0:f3:f9:52:9e:e9:32:9f:92:\n                    76:2f:e3:49:62:77:25:ce:45:e8:87:d9:cc:16:7c:\n                    8f:99:56:df:c8:33:ce:73:86:36:e5:a4:f3:56:87:\n                    81:29:76:bf:71:9e:4c:33:e5:9d:76:37:4b:6e:25:\n                    af:9b:5f:5f:d6:c6:27:d5:a4:5a:00:8a:e4:a6:9b:\n                    fb:92:49:fc:de:f7:2d:87:c5:c2:1b:7f:6a:0b:66:\n                    6f:69\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                DE:72:7A:48:DF:31:C3:A6:50:DF:9F:85:23:DF:57:37:4B:5D:2E:65\n            X509v3 Authority Key Identifier: \n                keyid:B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: sha256WithRSAEncryption\n         8d:0c:b6:a6:f7:23:74:10:5c:71:9f:fd:e9:fa:bb:96:3b:a9:\n         ff:f6:0a:02:00:ce:4f:4f:a7:02:e9:f9:23:32:ce:2e:6a:ce:\n         94:19:72:63:af:98:fb:3e:84:d0:7f:70:b5:be:ec:62:20:64:\n         49:0b:aa:b1:57:bc:9c:e9:4d:17:fb:0d:0c:8f:ce:6c:1c:8e:\n         43:9d:05:56:37:9f:83:d5:ea:fb:9a:9d:77:24:90:34:c5:b0:\n         1b:1d:ad:d1:95:cc:e7:cb:64:3c:d9:72:ae:8b:c5:87:b9:6a:\n         da:d2:06:f6:28:ba:5f:6e:86:23:d4:68:60:92:1a:f7:81:ab:\n         bc:de:90:bf:59:0f:07:7e:4c:1c:bd:2c:21:21:8a:93:ab:1a:\n         19:52:af:07:21:fd:cc:f3:6a:92:f5:a2:8e:64:4d:02:12:64:\n         b2:47:5c:d9:a9:0c:49:51:3e:de:98:e5:1a:a6:45:0d:f6:9a:\n         09:f7:31:9c:f8:58:11:66:f7:6b:a3:45:c1:ca:98:56:5c:36:\n         aa:31:8a:61:d0:3c:56:ff:5d:22:83:98:f8:c6:69:8d:0e:30:\n         91:9a:a2:0a:b0:aa:16:03:9d:b0:05:32:8a:5c:ad:67:6b:6b:\n         72:fe:55:b9:76:1b:40:c6:4c:f9:ad:56:45:77:8b:20:4b:82:\n         74:3b:ec:e6:e9:de:46:46:45:ac:34:9e:24:9e:8b:46:5e:5f:\n         2f:b5:2d:d7:e3:42:97:79:bd:c0:e7:ef:f7:a7:4a:9a:0f:6d:\n         79:5e:af:28:48:d3:91:7c:1d:a8:23:59:10:bb:21:00:27:9c:\n         6f:3d:37:5f:c1:19:72:44:6d:e5:15:8a:1d:ad:18:3a:a6:85:\n         01:0f:ff:1f:35:35:cc:b7:3c:9d:a5:18:32:cd:44:19:87:fd:\n         7c:17:a0:7f:89:6e:9c:6e:24:4d:f6:bd:87:92:1d:39:3a:6f:\n         aa:d3:fe:b0:d0:37:59:7b:ef:18:ac:da:5f:85:23:9b:af:fd:\n         5e:55:96:ca:18:c2:18:a8:a9:b2:65:b0:4d:bb:9c:ac:10:d2:\n         0a:e4:c3:dc:d7:89:94:78:a9:85:8e:93:7c:e3:45:51:e7:3b:\n         a7:a1:4e:76:96:aa:4b:0e:e6:bf:a8:83:3c:89:d9:3c:eb:11:\n         96:c7:1d:a6:97:8d:c3:3b:f6:1a:fe:d5:59:56:89:34:98:ed:\n         13:52:3c:c9:21:f3:ea:ca:fa:f8:e7:92:2c:22:eb:78:46:50:\n         91:f4:8a:b4:10:34:ef:7b:6f:d9:c0:2b:86:85:28:e9:4d:41:\n         46:4a:24:2b:47:62:4a:d8:4b:e9:fa:8e:80:11:35:24:04:23:\n         b5:6b:0d:0f:a5:00:4f:0d\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Profiles Documentation\nDESCRIPTION: YAML frontmatter defining metadata for a documentation page about Let's Encrypt profiles. Includes title, slug, publication date, last modification date, display settings, and translation status.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Profiles\nslug: profiles\ndate: 2025-02-05\nlastmod: 2025-02-05\nshow_lastmod: false\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Example CAA Record Output Format\nDESCRIPTION: This snippet shows the expected output format when checking CAA records for a domain. It displays the formatted CAA record with flags, tag, and value fields that control certificate issuance permissions.\n\nLANGUAGE: shell\nCODE:\n```\nexample.com.             86400   IN      TYPE257 \\# 19 0005697373756573206C657473656E63727970742E6F7267\n```\n\n----------------------------------------\n\nTITLE: Retrieving Account ID using ACME.sh\nDESCRIPTION: Command to display Let's Encrypt account information when using the ACME.sh client, which includes the account ID.\n\nLANGUAGE: bash\nCODE:\n```\nacme.sh --account\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Let's Encrypt Profiles Documentation\nDESCRIPTION: YAML front matter that defines metadata for a documentation page about Let's Encrypt profiles. It includes title, slug, publication date, last modification date, and flags for display options and translation status.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Profiles\nslug: profiles\ndate: 2025-02-05\nlastmod: 2025-02-05\nshow_lastmod: false\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for Profiles Page\nDESCRIPTION: YAML frontmatter that configures metadata for a documentation page about profiles in Let's Encrypt. It specifies the title, slug, publication date, last modification date, and flags indicating the page doesn't show modification date and is currently untranslated.\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Profiles\nslug: profiles\ndate: 2025-02-05\nlastmod: 2025-02-05\nshow_lastmod: false\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for ACME Protocol Updates Document\nDESCRIPTION: YAML frontmatter configuration for a document about ACME protocol updates. The configuration specifies a slug identifier 'acme-protocol-updates' and sets an 'untranslated' flag to 1, indicating this content should not be translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: acme-protocol-updates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Profiles Page\nDESCRIPTION: This YAML frontmatter defines metadata for a webpage about Let's Encrypt profiles. It specifies the title, slug, publication date, last modification date, whether to show the last modification date, and translation status.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Profiles\nslug: profiles\ndate: 2025-02-05\nlastmod: 2025-02-05\nshow_lastmod: false\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Staging Environment Documentation\nDESCRIPTION: YAML frontmatter defining metadata for the staging environment documentation page, including title, slug, dates, and display options.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Staging Environment\nslug: staging-environment\ndate: 2018-01-05\nlastmod: 2025-04-01\nshow_lastmod: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Rate Limits Documentation Page\nDESCRIPTION: YAML front matter defining metadata for the 'Rate Limits' documentation page. Includes title, slug, creation date, last modification date, display settings, and translation status.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Rate Limits\nslug: rate-limits\ndate: 2018-01-04\nlastmod: 2024-10-22\nshow_lastmod: true\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Setting up YAML Frontmatter for Let's Encrypt Profiles Documentation\nDESCRIPTION: This YAML frontmatter defines metadata for a documentation page about ACME client profiles for Let's Encrypt. It specifies the title, URL slug, creation date, last modification date, and flags for showing modification date and translation status.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Profiles\nslug: profiles\ndate: 2025-02-05\nlastmod: 2025-02-05\nshow_lastmod: false\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for ACME Protocol Updates Page\nDESCRIPTION: YAML frontmatter that configures the page metadata for a document about ACME protocol updates. The frontmatter sets the page slug and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: acme-protocol-updates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Let's Encrypt Glossary Page\nDESCRIPTION: YAML front matter block that defines metadata for a glossary page in the Let's Encrypt project. It specifies the slug as 'glossary' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: glossary\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Setting CAA Record for Multiple Certificate Authorities\nDESCRIPTION: Example showing how to configure multiple CAA records to allow certificate issuance from both Let's Encrypt and another certificate authority.\n\nLANGUAGE: dns\nCODE:\n```\nexample.com. CAA 0 issue \"letsencrypt.org\"\nexample.com. CAA 0 issue \"example-ca.com\"\n```\n\n----------------------------------------\n\nTITLE: Using Let's Encrypt Staging Environment URL with ACME v2\nDESCRIPTION: The URL endpoint for connecting to Let's Encrypt's ACME v2 staging environment. This should be used for testing certificate issuance before using the production environment.\n\nLANGUAGE: bash\nCODE:\n```\nhttps://acme-staging-v02.api.letsencrypt.org/directory\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for ACME Protocol Updates Page\nDESCRIPTION: YAML frontmatter that configures metadata for a page about ACME protocol updates. The frontmatter defines the slug as 'acme-protocol-updates' and sets an 'untranslated' flag to 1, indicating this content should not be translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: acme-protocol-updates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Let's Encrypt Rate Limits Documentation\nDESCRIPTION: YAML front matter defining metadata for a documentation page about Let's Encrypt rate limits. Includes title, slug, creation date, last modification date, display settings for last modification date, and translation status.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Rate Limits\nslug: rate-limits\ndate: 2018-01-04\nlastmod: 2024-10-22\nshow_lastmod: true\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of dNSName CHOICE in GeneralName\nDESCRIPTION: This example demonstrates the DER encoding of a domain name (example.com) as a dNSName in a GeneralName CHOICE. The context-specific tag [2] (82) is used to identify this choice variant.\n\nLANGUAGE: der\nCODE:\n```\n82 0b 65 78 61 6d 70 6c 65 2e 63 6f 6d\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Glossary Page\nDESCRIPTION: YAML frontmatter that defines metadata for a glossary page in the Let's Encrypt project. It specifies the page slug as 'glossary' and indicates that it is untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: glossary\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Let's Encrypt Client Options Page\nDESCRIPTION: YAML front matter defining metadata for a page about ACME client options. The front matter indicates this is a slug 'client-options' that is marked as untranslated (value: 1).\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: client-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Front Matter Definition for Let's Encrypt Glossary Page\nDESCRIPTION: YAML front matter that defines the page as a glossary with a specific slug and marks it as untranslated. This metadata controls how the page is processed in the site generation system.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: glossary\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Accessing Let's Encrypt ACME v2 Staging Environment URL\nDESCRIPTION: The URL endpoint for connecting to Let's Encrypt's ACME v2 staging environment. This endpoint should be used for testing certificate issuance before moving to production.\n\nLANGUAGE: bash\nCODE:\n```\nhttps://acme-staging-v02.api.letsencrypt.org/directory\n```\n\n----------------------------------------\n\nTITLE: Including documentation index shortcode in Hugo template\nDESCRIPTION: Hugo shortcode that includes the documentation index component, which likely generates a table of contents or index of documentation pages.\n\nLANGUAGE: markdown\nCODE:\n```\n{{< docs_index >}}\n```\n\n----------------------------------------\n\nTITLE: Defining Metadata for Let's Encrypt Client Options Page in YAML\nDESCRIPTION: YAML frontmatter that defines metadata for a webpage about Let's Encrypt client options. It includes a slug identifier 'client-options' and indicates the content is untranslated with flag set to 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: client-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Expiration Emails Page\nDESCRIPTION: YAML frontmatter that defines configuration parameters for a page about Let's Encrypt certificate expiration emails. The configuration includes a slug for URL generation and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: expiration-emails\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: DER Encoding with Context-Specific Tags (x coordinate only)\nDESCRIPTION: DER encoding of a Point SEQUENCE with only an x coordinate value of 9 using context-specific tag [0]. The encoding demonstrates how tagged values appear in the binary representation.\n\nLANGUAGE: der\nCODE:\n```\n30 03 80 01 09\n```\n\n----------------------------------------\n\nTITLE: Creating Locally-Trusted Certificates with mkcert\nDESCRIPTION: Command to generate trusted certificates for localhost and 127.0.0.1 using mkcert. Creates certificate and key files that will be trusted by browsers on the local machine.\n\nLANGUAGE: shell\nCODE:\n```\nmkcert localhost 127.0.0.1 ::1\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for lencr.org Document\nDESCRIPTION: YAML frontmatter configuration defining the document slug as 'lencr.org' and marking it as untranslated with a boolean flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: lencr.org\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Expiration Emails Page\nDESCRIPTION: YAML front matter that defines metadata for a page about Let's Encrypt certificate expiration emails. The metadata indicates this is a stub page with slug 'expiration-emails' and is marked as untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: expiration-emails\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Including Documentation Index Template\nDESCRIPTION: Hugo shortcode that includes the documentation index template for the page content.\n\nLANGUAGE: markdown\nCODE:\n```\n{{< docs_index >}}\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of IA5String\nDESCRIPTION: This example shows the DER encoding of the IA5String \"hi\". The first byte (16) is the tag for IA5String, followed by the length (02), and then the ASCII values for 'h' (68) and 'i' (69).\n\nLANGUAGE: der\nCODE:\n```\n16 02 68 69\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of UTF8String\nDESCRIPTION: This example demonstrates the DER encoding of a UTF8String containing the emoji \"😎\" (U+1F60E Smiling Face With Sunglasses). The UTF-8 representation of this character requires 4 bytes.\n\nLANGUAGE: der\nCODE:\n```\n0c 04 f0 9f 98 8e\n```\n\n----------------------------------------\n\nTITLE: Encoding SEQUENCE OF INTEGER in DER\nDESCRIPTION: Example showing how a SEQUENCE OF INTEGER containing the values 7, 8, and 9 is encoded in DER, with each integer encoded separately and combined.\n\nLANGUAGE: der\nCODE:\n```\n30 09 02 01 07 02 01 08 02 01 09\n```\n\n----------------------------------------\n\nTITLE: Defining Metadata for lencr.org Documentation in Markdown\nDESCRIPTION: YAML frontmatter block that defines metadata for a documentation page about lencr.org. The metadata includes a slug for URL generation and an 'untranslated' flag set to 1, indicating this content should not be translated.\n\nLANGUAGE: markdown\nCODE:\n```\n---\nslug: lencr.org\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for ACME Protocol Updates Page\nDESCRIPTION: YAML front matter defining metadata for a page about ACME protocol updates. It specifies the slug as 'acme-protocol-updates' and marks the content as untranslated with a boolean flag.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: acme-protocol-updates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Generating a private key for localhost domain\nDESCRIPTION: This command creates a new private key for a local domain using OpenSSL with a 2048-bit RSA key.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -new -nodes -newkey rsa:2048 -keyout localhost.key -out localhost.csr \\\n  -subj \"/C=US/ST=YourState/L=YourCity/O=Example-Certificates/CN=localhost.local\"\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Italian Documentation Page\nDESCRIPTION: YAML front matter that configures the page title as 'Documentazione' and sets its position in the main menu with a weight of 10.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Documentazione\nmenu:\n  main:\n    weight: 10\n---\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of UTCTime\nDESCRIPTION: This example shows the DER encoding of the same time (converted to UTC) as a UTCTime. DER requires that UTCTime values use the 'Z' timezone indicator and include seconds.\n\nLANGUAGE: der\nCODE:\n```\n17 0d 31 39 31 32 31 36 30 33 30 32 31 30 5a\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of NULL\nDESCRIPTION: This example demonstrates the DER encoding of a NULL value. It consists of just the NULL tag (05) followed by a zero length field (00).\n\nLANGUAGE: der\nCODE:\n```\n05 00\n```\n\n----------------------------------------\n\nTITLE: Encoding Date and Time in BER and DER\nDESCRIPTION: Examples of encoding UTCTime in both BER (with time zone offset) and DER (with Z/UTC time) formats, showing how the same timestamp is represented differently.\n\nLANGUAGE: der\nCODE:\n```\n17 11 31 39 31 32 31 35 31 39 30 32 31 30 2d 30 38 30 30\n```\n\nLANGUAGE: der\nCODE:\n```\n17 0d 31 39 31 32 31 36 30 33 30 32 31 30 5a\n```\n\n----------------------------------------\n\nTITLE: Encoding a Point with Both x and y Values\nDESCRIPTION: Shows how to encode a Point with both x=9 and y=9 values using context-specific tags, combining both tag-length-value structures in sequence.\n\nLANGUAGE: der\nCODE:\n```\n‎30 06 80 01 09 81 01 09\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of EXPLICIT Tagged UTF8String\nDESCRIPTION: Example of how the string \"hi\" would be encoded in DER format when using an EXPLICIT tag of [5]. Shows the nested structure with both the outer tag and the inner UTF8String tag.\n\nLANGUAGE: der\nCODE:\n```\nA5 04 0C 02 68 69\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Challenge Types Documentation\nDESCRIPTION: YAML front matter that defines metadata for a documentation page about ACME challenge types. It specifies the slug as 'challenge-types' and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: challenge-types\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for ASN.1 and DER Article\nDESCRIPTION: YAML frontmatter for a Markdown document about ASN.1 and DER. The frontmatter defines the slug (URL path) for the article and indicates it's untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: a-warm-welcome-to-asn1-and-der\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining a Point Structure in Go\nDESCRIPTION: Example of how to define a simple point structure with x, y coordinates and a label in Go programming language. This demonstrates the Go syntax for comparison with ASN.1.\n\nLANGUAGE: go\nCODE:\n```\ntype point struct {\n  x, y int\n  label string\n}\n```\n\n----------------------------------------\n\nTITLE: Installing mkcert on Linux\nDESCRIPTION: This sequence shows how to install mkcert on Linux using apt, set up the local certificate authority, and create certificates for localhost addresses.\n\nLANGUAGE: shell\nCODE:\n```\napt install libnss3-tools\nmkcert -install\nmkcert localhost 127.0.0.1 ::1\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Challenge Types Documentation\nDESCRIPTION: This YAML frontmatter defines the metadata for a documentation page about Let's Encrypt challenge types. It specifies the slug as 'challenge-types' and marks the content as untranslated with value 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: challenge-types\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Front Matter for Documentation Index Page\nDESCRIPTION: Sets up the Hugo front matter for the documentation index page. It defines the page title as 'Dokumentace' (Czech for 'Documentation') and configures its position in the main menu with a weight of 10.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Dokumentace\nmenu:\n  main:\n    weight: 10\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for CAA Page\nDESCRIPTION: YAML frontmatter that defines the slug for the CAA page and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: caa\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Glossary Page\nDESCRIPTION: YAML frontmatter configuration for a glossary page in the Let's Encrypt documentation. It specifies the slug as 'glossary' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: glossary\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for lencr.org Documentation Page\nDESCRIPTION: YAML frontmatter that defines the slug (URL path) for content about the lencr.org domain and specifies that the content is not to be translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: lencr.org\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Creating a certificate with mkcert\nDESCRIPTION: Commands to install mkcert on different operating systems and use it to generate a certificate for localhost. mkcert automatically installs a local certificate authority that browsers will trust.\n\nLANGUAGE: bash\nCODE:\n```\n# macOS\nbrew install mkcert\nbrew install nss # if you use Firefox\n\n# Linux\nsudo apt install libnss3-tools\n    # or sudo yum install nss-tools\n    # or sudo pacman -S nss\n    # or sudo zypper install mozilla-nss-tools\n\n# Windows\nchoco install mkcert\n```\n\n----------------------------------------\n\nTITLE: Documentation Index Hugo Shortcode\nDESCRIPTION: Includes a Hugo shortcode named 'docs_index' that generates the documentation index content. This shortcode likely renders a structured list or navigation of all documentation pages.\n\nLANGUAGE: hugo\nCODE:\n```\n{{< docs_index >}}\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Let's Encrypt Integration Guide\nDESCRIPTION: YAML front matter configuration that specifies the slug as 'integration-guide' and sets 'untranslated' to 1, indicating this document should not be translated or is already in its untranslated state.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: integration-guide\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Privacy Policy Page\nDESCRIPTION: YAML front matter block defining metadata for the Let's Encrypt privacy policy page. It specifies the page slug as 'privacy', indicates that it's untranslated, and declares English as the canonical language.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining a Point Structure in C\nDESCRIPTION: Example of how to define a simple point structure with x, y coordinates and a label in C programming language. This demonstrates the C syntax for comparison with ASN.1.\n\nLANGUAGE: c\nCODE:\n```\nstruct point {\n  int x, y;\n  char label[10];\n};\n```\n\n----------------------------------------\n\nTITLE: Installing root certificate and creating certificates with mkcert\nDESCRIPTION: Commands to install the mkcert root certificate in the system trust store and then create certificates for localhost and 127.0.0.1. This generates the necessary files for local development.\n\nLANGUAGE: bash\nCODE:\n```\nmkcert -install\nmkcert localhost 127.0.0.1 ::1\n```\n\n----------------------------------------\n\nTITLE: Jekyll/Markdown Front Matter for Let's Encrypt Integration Guide\nDESCRIPTION: Front matter metadata block for a Jekyll/Markdown page defining a slug for the 'integration-guide' and marking it as untranslated (with value 1).\n\nLANGUAGE: markdown\nCODE:\n```\n---\nslug: integration-guide\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Privacy Policy Page\nDESCRIPTION: This YAML frontmatter defines metadata for a Let's Encrypt privacy policy page. It specifies the slug as 'privacy', indicates the content is untranslated, and designates English as the canonical language version.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Let's Encrypt Glossary Page\nDESCRIPTION: YAML front matter that defines metadata for a glossary page in the Let's Encrypt project. The metadata indicates this is a slug for a glossary page that is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: glossary\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Integration Guide\nDESCRIPTION: YAML frontmatter metadata for a Let's Encrypt integration guide page. It defines the slug as 'integration-guide' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: integration-guide\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Certificate Documentation\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about certificates in the Let's Encrypt project. The slug defines the URL path, and the page is marked as untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: certificates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Adding hosts file entries for local development domains\nDESCRIPTION: Example of entries to add to the system hosts file (/etc/hosts) to map domain names to the local IP address (127.0.0.1) for development purposes.\n\nLANGUAGE: yaml\nCODE:\n```\n127.0.0.1 www.example.test example.test\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Glossary Page\nDESCRIPTION: This YAML frontmatter defines metadata for a glossary page in the Let's Encrypt project. It specifies the page slug as 'glossary' and indicates with 'untranslated: 1' that the page hasn't been translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: glossary\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for FAQ Page\nDESCRIPTION: A YAML frontmatter block defining metadata for a FAQ page. It sets the slug to 'faq' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: faq\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Integration Guide\nDESCRIPTION: YAML frontmatter that defines metadata for a Let's Encrypt integration guide document. It specifies the URL slug as 'integration-guide' and marks the content with an untranslated flag set to 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: integration-guide\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt FAQ Page\nDESCRIPTION: YAML frontmatter that defines metadata for a Let's Encrypt FAQ page. It specifies the page slug as 'faq' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: faq\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: DER Encoding of a 64-bit Positive Integer\nDESCRIPTION: Example showing the DER encoding of a 64-bit positive integer (2^63+1). Note that this requires 9 bytes of value due to the sign bit requirements in DER encoding of integers.\n\nLANGUAGE: der\nCODE:\n```\n02 09 00 80 00 00 00 00 00 00 01\n```\n\n----------------------------------------\n\nTITLE: Setting CAA Record with iodef Flag\nDESCRIPTION: Example showing how to configure a DNS CAA record with the 'iodef' flag to specify a URL where certificate authorities should report policy violations.\n\nLANGUAGE: dns\nCODE:\n```\nexample.com. CAA 0 iodef \"mailto:security@example.com\"\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Trademark Policy Page\nDESCRIPTION: YAML front matter that defines metadata for a trademark policy page. It specifies the URL slug as 'trademarks' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Frontmatter for Glossary Page in Markdown\nDESCRIPTION: YAML frontmatter for a glossary page that specifies the slug as 'glossary' and indicates the content is untranslated with a flag value of 1. This metadata is used by the static site generator to properly render and place the page.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: glossary\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Monitoring Options Page\nDESCRIPTION: YAML frontmatter metadata for a markdown page about monitoring options for Let's Encrypt. The configuration specifies the page slug and indicates it is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: monitoring-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Trademarks Page\nDESCRIPTION: A YAML frontmatter block that defines the slug and translation status for the trademarks page. The 'slug' parameter sets the URL path component, and 'untranslated' is set to 1 indicating this content should not be translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Client Options Documentation\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about ACME client options. It includes a slug identifier and a flag indicating the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: client-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Setting up wildcard CAA records for Let's Encrypt\nDESCRIPTION: This configuration authorizes Let's Encrypt to issue wildcard certificates for a domain using the 'issuewild' tag with Let's Encrypt's domain identifier.\n\nLANGUAGE: DNS\nCODE:\n```\nexample.com. IN CAA 0 issuewild \"letsencrypt.org\"\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Let's Encrypt Glossary Page\nDESCRIPTION: YAML front matter that specifies metadata for a Let's Encrypt glossary page. It indicates this is a glossary with slug 'glossary' and that it's untranslated (marked with flag 1).\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: glossary\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Structure for Let's Encrypt Authority X3\nDESCRIPTION: The detailed structure of an X.509 certificate for Let's Encrypt Authority X3 signed by DST Root CA X3. The certificate shows all fields including validity dates (2016-2021), RSA public key (2048-bit), extensions, and SHA-256 with RSA signature algorithm.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            0a:01:41:42:00:00:01:53:85:73:6a:0b:85:ec:a7:08\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: O = Digital Signature Trust Co., CN = DST Root CA X3\n        Validity\n            Not Before: Mar 17 16:40:46 2016 GMT\n            Not After : Mar 17 16:40:46 2021 GMT\n        Subject: C = US, O = Let's Encrypt, CN = Let's Encrypt Authority X3\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:9c:d3:0c:f0:5a:e5:2e:47:b7:72:5d:37:83:b3:\n                    68:63:30:ea:d7:35:26:19:25:e1:bd:be:35:f1:70:\n                    92:2f:b7:b8:4b:41:05:ab:a9:9e:35:08:58:ec:b1:\n                    2a:c4:68:87:0b:a3:e3:75:e4:e6:f3:a7:62:71:ba:\n                    79:81:60:1f:d7:91:9a:9f:f3:d0:78:67:71:c8:69:\n                    0e:95:91:cf:fe:e6:99:e9:60:3c:48:cc:7e:ca:4d:\n                    77:12:24:9d:47:1b:5a:eb:b9:ec:1e:37:00:1c:9c:\n                    ac:7b:a7:05:ea:ce:4a:eb:bd:41:e5:36:98:b9:cb:\n                    fd:6d:3c:96:68:df:23:2a:42:90:0c:86:74:67:c8:\n                    7f:a5:9a:b8:52:61:14:13:3f:65:e9:82:87:cb:db:\n                    fa:0e:56:f6:86:89:f3:85:3f:97:86:af:b0:dc:1a:\n                    ef:6b:0d:95:16:7d:c4:2b:a0:65:b2:99:04:36:75:\n                    80:6b:ac:4a:f3:1b:90:49:78:2f:a2:96:4f:2a:20:\n                    25:29:04:c6:74:c0:d0:31:cd:8f:31:38:95:16:ba:\n                    a8:33:b8:43:f1:b1:1f:c3:30:7f:a2:79:31:13:3d:\n                    2d:36:f8:e3:fc:f2:33:6a:b9:39:31:c5:af:c4:8d:\n                    0d:1d:64:16:33:aa:fa:84:29:b6:d4:0b:c0:d8:7d:\n                    c3:93\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            Authority Information Access: \n                OCSP - URI:http://isrg.trustid.ocsp.identrust.com\n                CA Issuers - URI:http://apps.identrust.com/roots/dstrootcax3.p7c\n\n            X509v3 Authority Key Identifier: \n                keyid:C4:A7:B1:A4:7B:2C:71:FA:DB:E1:4B:90:75:FF:C4:15:60:85:89:10\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n                  CPS: http://cps.root-x1.letsencrypt.org\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://crl.identrust.com/DSTROOTCAX3CRL.crl\n\n            X509v3 Subject Key Identifier: \n                A8:4A:6A:63:04:7D:DD:BA:E6:D1:39:B7:A6:45:65:EF:F3:A8:EC:A1\n    Signature Algorithm: sha256WithRSAEncryption\n         dd:33:d7:11:f3:63:58:38:dd:18:15:fb:09:55:be:76:56:b9:\n         70:48:a5:69:47:27:7b:c2:24:08:92:f1:5a:1f:4a:12:29:37:\n         24:74:51:1c:62:68:b8:cd:95:70:67:e5:f7:a4:bc:4e:28:51:\n         cd:9b:e8:ae:87:9d:ea:d8:ba:5a:a1:01:9a:dc:f0:dd:6a:1d:\n         6a:d8:3e:57:23:9e:a6:1e:04:62:9a:ff:d7:05:ca:b7:1f:3f:\n         c0:0a:48:bc:94:b0:b6:65:62:e0:c1:54:e5:a3:2a:ad:20:c4:\n         e9:e6:bb:dc:c8:f6:b5:c3:32:a3:98:cc:77:a8:e6:79:65:07:\n         2b:cb:28:fe:3a:16:52:81:ce:52:0c:2e:5f:83:e8:d5:06:33:\n         fb:77:6c:ce:40:ea:32:9e:1f:92:5c:41:c1:74:6c:5b:5d:0a:\n         5f:33:cc:4d:9f:ac:38:f0:2f:7b:2c:62:9d:d9:a3:91:6f:25:\n         1b:2f:90:b1:19:46:3d:f6:7e:1b:a6:7a:87:b9:a3:7a:6d:18:\n         fa:25:a5:91:87:15:e0:f2:16:2f:58:b0:06:2f:2c:68:26:c6:\n         4b:98:cd:da:9f:0c:f9:7f:90:ed:43:4a:12:44:4e:6f:73:7a:\n         28:ea:a4:aa:6e:7b:4c:7d:87:dd:e0:c9:02:44:a7:87:af:c3:\n         34:5b:b4:42\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate Structure for Let's Encrypt Staging Environment\nDESCRIPTION: This snippet displays the structure of an X.509 certificate for the Let's Encrypt staging environment. The certificate is for '(STAGING) Artificial Apricot R4' issued by '(STAGING) Doctored Durian Root CA X3' with a validity period from October 2020 to September 2021. It includes RSA public key details, various X509v3 extensions, and signature information.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            64:ac:66:5d:ee:92:b0:c8:5c:93:94:5e:63:d8:66:22\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Doctored Durian Root CA X3\n        Validity\n            Not Before: Oct  7 19:21:45 2020 GMT\n            Not After : Sep 29 19:21:45 2021 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Artificial Apricot R4\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:e8:9f:13:9a:58:7a:cf:ad:9a:c4:5d:be:2b:34:\n                    60:1c:79:b1:7f:47:39:2c:71:80:fb:05:71:f6:e9:\n                    09:9c:1f:73:92:a7:46:fa:0c:86:7d:80:67:c0:f9:\n                    71:9f:2d:09:58:14:bf:d7:fc:2e:ee:bc:be:22:1b:\n                    58:3a:a6:ab:d5:18:3e:7f:e8:03:d3:e4:aa:39:89:\n                    a7:80:d5:bc:20:8c:34:59:38:c7:86:a6:01:d9:dd:\n                    85:c6:ca:fd:6c:f2:29:0f:0a:47:45:b8:04:f0:79:\n                    28:cc:02:b0:ad:6b:39:c4:3b:61:66:56:8c:65:f1:\n                    32:00:ac:dd:c7:c9:82:3e:db:59:cc:a5:b8:b9:b4:\n                    a9:b6:63:4c:a0:61:f1:e6:df:e9:05:6a:cd:1b:3e:\n                    44:16:e4:d8:73:2d:03:92:49:cc:bc:a7:9d:91:52:\n                    67:fa:32:41:c5:54:3f:79:ff:f2:19:ea:7b:fb:55:\n                    a3:a5:6f:d4:42:fc:09:e4:7d:ac:9b:a5:2d:05:10:\n                    1f:a2:ce:54:d9:3b:9b:37:b7:e2:23:d3:86:b1:19:\n                    88:a7:bd:c1:3f:d4:ec:c8:fd:0c:8b:5a:d9:91:50:\n                    1f:30:45:3a:a4:8e:5d:25:74:cd:b7:a8:66:ce:e1:\n                    3a:7e:bb:7e:36:51:da:0b:dc:ab:b3:d8:84:1b:59:\n                    ba:0d\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                9A:EE:C0:15:A3:74:3B:C7:EC:F1:05:60:A6:C2:93:A7:F9:4F:1A:35\n            X509v3 Authority Key Identifier: \n                keyid:08:57:DA:89:C7:A2:53:79:0C:4F:DD:E0:90:8F:74:BA:E2:27:73:44\n\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: sha256WithRSAEncryption\n         40:bb:aa:d2:e1:2e:04:92:0e:a9:4f:58:32:3d:07:d6:5f:30:\n         b3:59:3d:7a:d4:10:56:12:49:be:49:df:49:93:fe:ec:84:04:\n         0b:56:0d:7c:bb:78:1a:7c:24:8f:96:a3:1f:67:4b:ea:07:98:\n         ad:18:c4:ef:00:bf:ab:50:4e:b8:fb:c3:02:7c:1b:d8:e0:bf:\n         7b:a0:0c:b2:45:ef:71:e1:af:fa:08:e3:c4:4f:16:29:71:51:\n         0b:12:04:3b:8a:78:92:1b:f7:94:28:ce:fa:09:74:ff:26:a1:\n         b0:88:66:17:81:18:9d:c8:0c:fc:69:81:29:28:cb:a7:be:1f:\n         06:01:87:54:30:f9:84:60:17:67:5a:4f:4e:da:73:95:39:18:\n         74:3f:30:74:93:6d:25:60:91:2d:2d:09:e7:26:b6:b3:03:da:\n         68:7f:4b:79:2a:ac:b7:3b:d9:4c:80:22:cf:36:5a:5e:79:05:\n         dd:37:3f:98:e6:65:f0:95:8d:8c:c6:70:94:2b:c8:f8:00:f0:\n         73:dd:23:87:1b:b2:22:81:cd:37:8f:b4:46:09:5f:d0:08:4d:\n         36:d4:18:02:6d:c7:18:f7:8a:30:c7:31:6c:23:d3:c5:66:a1:\n         bb:8b:76:7c:73:d7:6e:6b:7f:76:a1:84:12:51:df:d2:10:9d:\n         fb:53:42:57\n```\n\n----------------------------------------\n\nTITLE: Let's Encrypt Authority X2 Certificate in PEM Format\nDESCRIPTION: This is a PEM-encoded X.509 certificate for Let's Encrypt Authority X2 intermediate certificate authority. It is signed by ISRG Root X1 and was valid from June 4, 2015 to June 4, 2020. The certificate contains public key information, issuer details, and various certificate extensions.\n\nLANGUAGE: pem\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIFjTCCA3WgAwIBAgIRAJY2TKc4C+SL3JDGzeC33mgwDQYJKoZIhvcNAQELBQAw\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMTUwNjA0MTIwMDMx\nWhcNMjAwNjA0MTIwMDMxWjBKMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg\nRW5jcnlwdDEjMCEGA1UEAxMaTGV0J3MgRW5jcnlwdCBBdXRob3JpdHkgWDIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDhJHRCe7eRMdlz/ziq2M5EXLc5\nCtxErg29RbmXN2evvVBPX9MQVGv3QdqOY+ZtW8DoQKmMQfzRA4n/YmEJYNYHBXia\nkL0aZD5P3M93L4lry2evQU3FjQDAa/6NhNy18pUxqOj2kKBDSpN0XLM+Q2lLiSJH\ndFE+mWTDzSQB+YQvKHcXIqfdw2wITGYvN3TFb5OOsEY3FmHRUJjIsA9PWFN8rPba\nLZZhUK1D3AqmT561Urmcju9O30azMdwg/GnCoyB1Puw4GzZOZmbS3/VmpJMve6YO\nlD5gPUpLHG+6tE0cPJFYbi9NxNpw2+0BOXbASefpNbUUBpDB5ZLiEP1rubSFAgMB\nAAGjggFnMIIBYzAOBgNVHQ8BAf8EBAMCAYYwEgYDVR0TAQH/BAgwBgEB/wIBADBU\nBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEBATAwMC4GCCsGAQUFBwIB\nFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQub3JnMB0GA1UdDgQWBBTF\nsatOTLHNZDCTfsGEmQWr5gPiJTAzBgNVHR8ELDAqMCigJqAkhiJodHRwOi8vY3Js\nLnJvb3QteDEubGV0c2VuY3J5cHQub3JnMHIGCCsGAQUFBwEBBGYwZDAwBggrBgEF\nBQcwAYYkaHR0cDovL29jc3Aucm9vdC14MS5sZXRzZW5jcnlwdC5vcmcvMDAGCCsG\nAQUFBzAChiRodHRwOi8vY2VydC5yb290LXgxLmxldHNlbmNyeXB0Lm9yZy8wHwYD\nVR0jBBgwFoAUebRZ5nu25eQBc4AIiMgaWPbpm24wDQYJKoZIhvcNAQELBQADggIB\nAA4eqMjSEJKCF6XRR5pEutkS/e7xgy2vCYYbw1ospQiGQ4FO5TtbvO+5K4v7WR3b\n1peMQ03rX0Dr+ylmGNypZahNxTqDiO0X2sHBwJWj/k61+MYq3bRYxKwI6cduTDXb\nYQxilGTDNGZUIFKKIloz4zGAl68sj+8pLg534EqKgl8+rWSxclToS1KrydJezokE\ndQRXfxu79iscWA3PIj1vbaUBB16lnWJxA3LhTGhUrhZrCnFuOZ93KO8kCKPM7EVo\n7c4FCYKI8eWDsf0FF49A4xMUmxPJAPIyZkwQ8KkjpzcTHOmT4CEXUhNu9eMI9qBK\nVSFDDMifJ8HzCaVLyMvY1Kf7iR+840EkX1EGC+Z39EaK1hjm314LYpLoYGvYYLJO\n/J76XAx8ZgpofqHz1gAEfiMLMLxLQkOjKLXqoUEd5KdnzaO3aLH91gnasy8aD4D5\n9RfEO2xcaozD2rbYsoAMVzcZZHw0Smdmobaz2YazMBjFRcqGntg6s5Xqwusaleiy\nsnjMCC/9mvIPqGyuVnBPTBaUDFDEhX6qD2MX4dzODL91Z0ogYDWcFLN+uLnZKHje\n4JoNuzkJ2FXWOREcsW93KXb+3T8COjhTDKvK4H6ufdrZxxusx60ajJAMBzW0XTf5\nnm2yGEDtyVoMgJLp0rkiPlormgHxSkFDOJbY94J7yxRK\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Trademark Page\nDESCRIPTION: YAML frontmatter that defines metadata for a page about trademarks. It indicates the page slug is 'trademarks' and has an 'untranslated' flag set to 1, suggesting this content should not be translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Client Options Page\nDESCRIPTION: This is the YAML frontmatter that defines metadata for a page about ACME client options for Let's Encrypt. It specifies the page slug as 'client-options' and marks it with 'untranslated: 1', indicating it hasn't been translated yet.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: client-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Encoding BIT STRING in DER\nDESCRIPTION: Example showing how a BIT STRING of 18 bits (011011100101110111) is encoded in DER, including the leading byte that indicates the number of unused bits.\n\nLANGUAGE: der\nCODE:\n```\n03 04 06 6e 5d c0\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration for CAA Documentation\nDESCRIPTION: YAML frontmatter configuration for a markdown file about CAA (Certificate Authority Authorization) DNS records. The configuration specifies the slug as 'caa' and marks the content as untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: caa\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for Let's Encrypt Documentation\nDESCRIPTION: This YAML frontmatter defines metadata for a documentation page about Let's Encrypt account IDs. It specifies the URL slug as 'account-id' and marks the content as untranslated with a boolean flag.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: account-id\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Documentation Page\nDESCRIPTION: YAML frontmatter configuration for a Let's Encrypt documentation page. It defines the page slug as 'client-options' and sets an 'untranslated' flag to 1, indicating this content should not be translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: client-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Trademark Page\nDESCRIPTION: YAML frontmatter defining the slug 'trademarks' and marking the content as untranslated with a value of 1. This configuration is likely used in a static site generator to define routing and translation settings for the page.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for CAA Page in Let's Encrypt Documentation\nDESCRIPTION: YAML front matter for a page about CAA (Certificate Authority Authorization) records. The page is marked as untranslated with slug 'caa'.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: caa\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Integration Guide\nDESCRIPTION: YAML frontmatter that defines metadata for a Let's Encrypt integration guide page. It specifies the slug 'integration-guide' and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: integration-guide\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for GoDaddy Let's Encrypt Guide\nDESCRIPTION: YAML frontmatter defining the slug 'godaddy' for this page and indicating that it is untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: godaddy\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Frontmatter for Let's Encrypt Trademarks Page in YAML\nDESCRIPTION: YAML frontmatter configuration for a Let's Encrypt web page about trademarks. It defines the URL slug as 'trademarks' and sets 'untranslated' to 1, indicating this page should not be translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Integration Guide\nDESCRIPTION: YAML frontmatter defining metadata for a Let's Encrypt integration guide page. The configuration specifies a slug for URL routing and indicates the content is untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: integration-guide\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for CAA Records Page\nDESCRIPTION: YAML frontmatter that defines metadata for a page about CAA records. It includes a slug identifier 'caa' and an 'untranslated' flag set to 1, indicating this content has not been translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: caa\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Integration Guide\nDESCRIPTION: This YAML frontmatter defines metadata for a Let's Encrypt integration guide page, including the URL slug and translation status marker.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: integration-guide\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for ASN.1 and DER Article\nDESCRIPTION: YAML front matter defining the slug for an article about ASN.1 and DER, with an untranslated status flag set to 1, indicating the content has not been translated yet.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: a-warm-welcome-to-asn1-and-der\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for GoDaddy Let's Encrypt Documentation Page\nDESCRIPTION: This YAML frontmatter sets up a documentation page with a slug 'godaddy' and indicates it hasn't been translated yet (untranslated: 1).\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: godaddy\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for CAA Documentation Page\nDESCRIPTION: YAML frontmatter that defines the page slug as 'caa' and indicates the content is untranslated with a flag set to 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: caa\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Let's Encrypt Privacy Policy Page\nDESCRIPTION: YAML front matter defining metadata for a privacy policy page. It specifies the slug as 'privacy', marks the page as untranslated with a value of 1, and indicates that the English version is the canonical version.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Let's Encrypt Documentation\nDESCRIPTION: This YAML front matter defines metadata for a page about certificate revocation. It indicates the page slug should be 'revoking' and that the content is untranslated (marked with flag '1').\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: revoking\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Let's Encrypt FAQ Page Metadata in Markdown\nDESCRIPTION: Metadata header for a Let's Encrypt FAQ page, defining the slug as 'faq' and marking the content as untranslated. This metadata likely controls how the page is processed and displayed within the website's content management system.\n\nLANGUAGE: markdown\nCODE:\n```\n---\nslug: faq\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Revoking Certificates Page\nDESCRIPTION: YAML frontmatter defining metadata for a page about revoking certificates in Let's Encrypt. The metadata indicates this is a slug named 'revoking' with an untranslated status set to 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: revoking\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Dynamically Constructing Email Address with JavaScript for Security\nDESCRIPTION: Script that dynamically constructs and displays a security email address by joining array elements. This technique is used to reduce email harvesting by bots, as the complete address isn't directly visible in the HTML source.\n\nLANGUAGE: javascript\nCODE:\n```\nvar parts = [\"security\", '@', \"letsencrypt\", \".\", \"org\"];\nvar anchor = document.createElement(\"a\");\nanchor.href = \"mailto:\" + parts.join(\"\");\nanchor.text = parts.join(\"\");\ndocument.getElementById(\"email\").appendChild(anchor)\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for a Privacy Policy Page\nDESCRIPTION: YAML frontmatter configuration for a privacy policy page in the Let's Encrypt project. The configuration specifies the page slug as 'privacy', indicates that the content is not translated (untranslated: 1), and declares that English is the canonical language version.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Getting Started Page\nDESCRIPTION: YAML frontmatter configuration for a Let's Encrypt documentation page. It defines a slug for URL generation and indicates the content is untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: getting-started\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Frontmatter Configuration for Certificate Revocation Page\nDESCRIPTION: YAML frontmatter that defines metadata for a page about certificate revocation. It specifies the slug as 'revoking' and indicates the content is untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: revoking\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Encoding AlgorithmIdentifier SEQUENCE in DER\nDESCRIPTION: Example of encoding an AlgorithmIdentifier SEQUENCE containing the sha256WithRSAEncryption OID and NULL parameters as defined in RFC 5280 and RFC 8017.\n\nLANGUAGE: asn1\nCODE:\n```\n   AlgorithmIdentifier  ::=  SEQUENCE  {\n        algorithm               OBJECT IDENTIFIER,\n        parameters              ANY DEFINED BY algorithm OPTIONAL  }\n```\n\nLANGUAGE: der\nCODE:\n```\n30 0d 06 09 2a 86 48 86 f7 0d 01 01 0b 05 00\n```\n\n----------------------------------------\n\nTITLE: Dynamically Generating Email Link for Security Contact in JavaScript\nDESCRIPTION: Creates a secure email link by dynamically constructing the address using JavaScript to prevent email harvesting by bots. The script splits the email into parts, creates an anchor element, and appends it to a specific element on the page.\n\nLANGUAGE: html\nCODE:\n```\n<span id=\"email\">Email: </span>\n\n<script>\n  var parts = [\"security\", '@', \"letsencrypt\", \".\", \"org\"];\n  var anchor = document.createElement(\"a\");\n  anchor.href = \"mailto:\" + parts.join(\"\");\n  anchor.text = parts.join(\"\");\n  document.getElementById(\"email\").appendChild(anchor)\n</script>\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Getting Started Page\nDESCRIPTION: YAML frontmatter that defines metadata for a 'Getting Started' page in the Let's Encrypt project. It specifies the slug as 'getting-started' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: getting-started\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for IPv6 Support Documentation\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about IPv6 support in Let's Encrypt. It specifies the slug as 'ipv6-support' and marks the content as untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: ipv6-support\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Frontmatter for Thank You Page in Markdown\nDESCRIPTION: This frontmatter configuration defines metadata for a 'thank you' page in a static site. It specifies the URL slug as 'thankyou' and indicates that the content is untranslated with a flag value of 1.\n\nLANGUAGE: markdown\nCODE:\n```\n---\nslug: thankyou\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Privacy Page\nDESCRIPTION: YAML frontmatter that defines metadata for the privacy policy page in the Let's Encrypt project. It specifies the slug as 'privacy', indicates the content is untranslated, and marks English as the canonical language version.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Hugo Front Matter Configuration for Documentation Page\nDESCRIPTION: Defines the page title as 'Documentation' and configures its position in the main navigation menu with a weight of 10. This is standard Hugo front matter that controls how the page appears in the site navigation.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Documentation\nmenu:\n  main:\n    weight: 10\n---\n```\n\n----------------------------------------\n\nTITLE: Displaying Security Email with JavaScript Anti-Scraping Protection\nDESCRIPTION: A JavaScript snippet that constructs and displays the security email address by combining parts of the address to protect it from email harvesting bots. It creates an anchor element and appends it to a specific element in the DOM.\n\nLANGUAGE: javascript\nCODE:\n```\nvar parts = [\"security\", '@', \"letsencrypt\", \".\", \"org\"];\nvar anchor = document.createElement(\"a\");\nanchor.href = \"mailto:\" + parts.join(\"\");\nanchor.text = parts.join(\"\");\ndocument.getElementById(\"email\").appendChild(anchor)\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Thank You Page\nDESCRIPTION: This YAML front matter block configures a 'thankyou' page for Let's Encrypt. It sets the URL slug and indicates the content is untranslated, likely meaning it won't be localized into different languages.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: thankyou\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Including Documentation Index Shortcode in Hugo Template\nDESCRIPTION: Uses Hugo's shortcode syntax to include the 'docs_index' component which renders the documentation index on the page.\n\nLANGUAGE: hugo\nCODE:\n```\n{{< docs_index >}}\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Privacy Policy Page\nDESCRIPTION: YAML frontmatter that configures a web page for Let's Encrypt's privacy policy. It specifies the URL slug as 'privacy', marks the content as untranslated, and designates English as the canonical language version.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Including Documentation Index Shortcode in Hugo Template\nDESCRIPTION: Hugo shortcode that includes a documentation index component. This shortcode is used to generate and display the documentation table of contents or index on the page.\n\nLANGUAGE: hugo\nCODE:\n```\n{{< docs_index >}}\n```\n\n----------------------------------------\n\nTITLE: Converting Hex to Base64 Using Bash\nDESCRIPTION: This bash command converts the hexadecimal values 308200 (the beginning bytes of a DER-encoded certificate) to Base64, demonstrating why PEM certificates typically start with 'MII'.\n\nLANGUAGE: bash\nCODE:\n```\nxxd -r -p <<<308200 | base64\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Let's Encrypt Documentation\nDESCRIPTION: YAML front matter that defines page metadata for a Let's Encrypt documentation page. Specifies the slug as 'certificates' and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: certificates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Including Let's Encrypt Documentation Index Template in Hugo\nDESCRIPTION: This snippet shows how to include a custom Hugo shortcode that generates the documentation index for Let's Encrypt. The shortcode '{{< docs_index >}}' is responsible for rendering the full documentation structure based on the site's content organization.\n\nLANGUAGE: hugo\nCODE:\n```\n{{< docs_index >}}\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Let's Encrypt Documentation\nDESCRIPTION: YAML front matter block defining metadata for a documentation page about upcoming Let's Encrypt features. It specifies the slug as 'upcoming-features' and sets an 'untranslated' flag to 1, indicating this content should not be translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: upcoming-features\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Generating a self-signed certificate for localhost with OpenSSL\nDESCRIPTION: This command uses OpenSSL to generate a self-signed certificate for localhost that will be valid for 90 days. The certificate created will generate browser warnings that must be manually bypassed.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config <( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n```\n\n----------------------------------------\n\nTITLE: Creating a Documentation Index with Hugo Template\nDESCRIPTION: This code snippet uses a Hugo shortcode to include a documentation index in the page. The shortcode {{< docs_index >}} will be processed by Hugo to generate a documentation index.\n\nLANGUAGE: markdown\nCODE:\n```\n{{< docs_index >}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Self-Signed Certificate Using OpenSSL\nDESCRIPTION: This command creates a self-signed certificate valid for 365 days with the specified parameters. The command generates both a key file and a certificate file that can be used for local HTTPS development.\n\nLANGUAGE: shell\nCODE:\n```\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config <( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Let's Encrypt Documentation Page\nDESCRIPTION: YAML metadata section that defines the page slug as 'how-it-works' and sets an untranslated flag to 1, indicating this page should not be translated or is the original version.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: how-it-works\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Let's Encrypt Page\nDESCRIPTION: YAML front matter that defines the slug 'getinvolved' for a web page and marks it as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: getinvolved\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Setting up YAML frontmatter for Let's Encrypt Portuguese documentation page\nDESCRIPTION: YAML frontmatter that configures the page title as 'Documentação' and sets its position in the main menu with a weight of 10.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Documentação\nmenu:\n  main:\n    weight: 10\n---\n```\n\n----------------------------------------\n\nTITLE: Explicit Tag Encoding Example in ASN.1\nDESCRIPTION: Example of ASN.1 encoding instruction using EXPLICIT tag, which wraps the encoded value of the underlying type in an outer encoding with the specified tag. The example shows how 'hi' would be encoded with this method, requiring more bytes than the implicit version.\n\nLANGUAGE: asn1\nCODE:\n```\n[5] EXPLICIT UTF8String\n```\n\nLANGUAGE: der\nCODE:\n```\nA5 04 0C 02 68 69\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Documentation\nDESCRIPTION: This YAML frontmatter defines configuration parameters for a 'how-it-works' documentation page in the Let's Encrypt project. It includes a slug for URL routing and an 'untranslated' flag (set to 1) indicating the content should not be processed for translation.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: how-it-works\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring slug and translation status in YAML front matter\nDESCRIPTION: A YAML front matter block that defines the URL slug 'how-it-works' for a webpage and indicates that the content is untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: how-it-works\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Let's Encrypt Getting Started Page Metadata in YAML\nDESCRIPTION: YAML front matter configuration for a Let's Encrypt documentation page. The metadata defines the slug as 'getting-started' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: getting-started\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Page Metadata Using YAML Frontmatter in Markdown\nDESCRIPTION: This code snippet represents YAML frontmatter used to configure page properties for a static site generator. It sets the page slug to 'about' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: about\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Glossary Page\nDESCRIPTION: YAML frontmatter that configures the page as a glossary with a specific slug and sets it as untranslated. The frontmatter uses the slug 'glossary' for URL purposes and sets the 'untranslated' flag to 1 to indicate this page should not be translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: glossary\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Let's Encrypt documentation\nDESCRIPTION: This YAML frontmatter configures a documentation page with a slug 'getting-started' and indicates that it is untranslated by setting the untranslated value to 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: getting-started\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Expiration Emails Page\nDESCRIPTION: YAML front matter defining metadata for a page about certificate expiration emails. It specifies the slug as 'expiration-emails' and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: expiration-emails\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining SET with Size Constraint in ASN.1\nDESCRIPTION: Example from RFC 5280 showing how a SET with size constraints is defined. RelativeDistinguishedName is defined as a SET containing at least one AttributeTypeAndValue element.\n\nLANGUAGE: asn1\nCODE:\n```\nRelativeDistinguishedName ::=\n  SET SIZE (1..MAX) OF AttributeTypeAndValue\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Integration Guide\nDESCRIPTION: YAML frontmatter defining metadata for a Let's Encrypt integration guide page. It specifies the URL slug as 'integration-guide' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: integration-guide\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Frontmatter Properties for Let's Encrypt Certificate Documentation\nDESCRIPTION: YAML frontmatter for a documentation page about certificates. The frontmatter defines the page slug as 'certificates' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: certificates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Integration Guide\nDESCRIPTION: This YAML frontmatter defines metadata for a Let's Encrypt integration guide page, including a slug for URL routing and an untranslated flag indicating the content has not been translated to other languages.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: integration-guide\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Let's Encrypt Markdown Page Metadata in YAML\nDESCRIPTION: YAML frontmatter for a markdown page about certificates in Let's Encrypt documentation. The metadata indicates this is a placeholder page with slug 'certificates' that has not been translated yet.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: certificates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Newsletter Subscription Iframe Implementation\nDESCRIPTION: This HTML code embeds an iframe from outreach.abetterinternet.org to provide newsletter subscription functionality. The iframe has styling for width and border removal with an ID that's referenced by the resizing script.\n\nLANGUAGE: html\nCODE:\n```\n<iframe id=\"newsletter-iframe-inline\" src=\"https://outreach.abetterinternet.org/l/1011011/2025-01-14/31v6r\" style=\"width: 100%; border: 0; overflow: hidden;\"></iframe>\n```\n\n----------------------------------------\n\nTITLE: Handling Newsletter Iframe Resizing with JavaScript\nDESCRIPTION: This script listens for a message event from the newsletter iframe to dynamically adjust the iframe's height. It includes origin validation and only allows a single resize operation for security.\n\nLANGUAGE: javascript\nCODE:\n```\nlet hasResized = false;\nwindow.addEventListener('message', function(e) {\n    if (hasResized) return; // Only allow one resize\n    if (e.origin !== 'https://outreach.abetterinternet.org') return;\n    if (e.data && typeof e.data === 'object' && e.data.type === 'resize' && e.data.height) {\n        hasResized = true;\n        document.getElementById('newsletter-iframe-inline').style.height = (e.data.height + 20) + 'px';\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Let's Encrypt Integration Guide\nDESCRIPTION: YAML front matter defining the page slug as 'integration-guide' with an 'untranslated' flag set to 1, indicating the page content is not yet translated or is to be used as-is.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: integration-guide\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Expiration Emails Documentation Page\nDESCRIPTION: This YAML frontmatter defines metadata for a documentation page about certificate expiration emails. It includes a slug for URL generation and an untranslated flag.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: expiration-emails\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Front Matter for Let's Encrypt Privacy Policy Page\nDESCRIPTION: YAML front matter that configures a Markdown page for Let's Encrypt's privacy policy. It sets the page slug to 'privacy', marks it as untranslated, and specifies that English is the canonical version.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Revocation Documentation\nDESCRIPTION: YAML frontmatter defining metadata for a Let's Encrypt documentation page about certificate revocation. It specifies the page slug as 'revoking' and marks the content as untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: revoking\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Implementing 'replaces' Field in Lego ACME Client Order Structure\nDESCRIPTION: This Go code snippet shows the modification of the Order struct in the Lego ACME client to include the 'replaces' field, which is used to identify the certificate being replaced during renewal as suggested by ARI.\n\nLANGUAGE: go\nCODE:\n```\n// Order the ACME order Object.\n// - https://www.rfc-editor.org/rfc/rfc8555.html#section-7.1.3\n\ntype Order struct {\n  ...\n  // replaces (optional, string):\n  // a string uniquely identifying a previously-issued\n  // certificate which this order is intended to replace.\n  // - https://datatracker.ietf.org/doc/html/draft-ietf-acme-ari-03#section-5\n  Replaces string `json:\"replaces,omitempty\"`\n}\n\n...\n\n// NewWithOptions Creates a new order.\nfunc (o *OrderService) NewWithOptions(domains []string, opts *OrderOptions) (acme.ExtendedOrder, error) {\n  ...\n  if o.core.GetDirectory().RenewalInfo != \"\" {\n    orderReq.Replaces = opts.ReplacesCertID\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Privacy Policy Page\nDESCRIPTION: YAML frontmatter that configures a privacy policy page for the Let's Encrypt project. It sets the page slug to 'privacy', marks the content as untranslated, and designates English as the canonical language version.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Revocation Documentation Page\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about certificate revocation. It indicates the page slug is 'revoking' and that the content is not translated (untranslated: 1).\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: revoking\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Privacy Policy Page\nDESCRIPTION: YAML front matter configuration that defines the URL slug 'privacy' for a webpage and specifies translation settings. It indicates that the page is untranslated and that English is the canonical version.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Revocation Page\nDESCRIPTION: This YAML frontmatter defines metadata for a Let's Encrypt documentation page about certificate revocation. It specifies a slug 'revoking' for URL routing and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: revoking\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Monitoring Options Documentation\nDESCRIPTION: This YAML frontmatter defines metadata for a content page about Let's Encrypt monitoring options. It specifies the slug (URL path) as 'monitoring-options' and indicates that the content is untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: monitoring-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: OpenSSL X509 Certificate Analysis Output\nDESCRIPTION: This is the detailed certificate information obtained by analyzing Let's Encrypt's first short-lived certificate using the 'openssl x509 -text' command. It shows the six-day validity period from Feb 19 to Feb 26, 2025, along with other certificate details.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            03:b0:b0:15:c1:a4:e2:64:16:11:73:1a:71:1b:71:1d:e0:ef\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C=US, O=Let's Encrypt, CN=E6\n        Validity\n            Not Before: Feb 19 17:30:01 2025 GMT\n            Not After : Feb 26 09:30:00 2025 GMT\n        Subject:\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (256 bit)\n                pub:\n                    04:28:48:8b:6d:d9:5d:5a:a1:c2:39:77:1a:ca:47:\n                    c8:8b:7e:69:b4:2a:25:6f:3a:18:b0:28:1c:b3:bb:\n                    69:0b:78:2e:c2:d0:17:5f:02:0b:70:74:80:9d:92:\n                    e1:21:01:7a:24:85:72:ea:e8:33:59:66:09:a1:e5:\n                    3e:1f:95:5c:19\n                ASN1 OID: prime256v1\n                NIST CURVE: P-256\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature\n            X509v3 Extended Key Usage:\n                TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:FALSE\n            X509v3 Authority Key Identifier:\n                93:27:46:98:03:A9:51:68:8E:98:D6:C4:42:48:DB:23:BF:58:94:D2\n            Authority Information Access:\n                OCSP - URI:http://e6.o.lencr.org\n                CA Issuers - URI:http://e6.i.lencr.org/\n            X509v3 Subject Alternative Name: critical\n                DNS:helloworld.letsencrypt.org\n            X509v3 Certificate Policies:\n                Policy: 2.23.140.1.2.1\n            CT Precertificate SCTs:\n                Signed Certificate Timestamp:\n                    Version   : v1 (0x0)\n                    Log ID    : CC:FB:0F:6A:85:71:09:65:FE:95:9B:53:CE:E9:B2:7C:\n                                22:E9:85:5C:0D:97:8D:B6:A9:7E:54:C0:FE:4C:0D:B0\n                    Timestamp : Feb 19 18:28:32.078 2025 GMT\n                    Extensions: none\n                    Signature : ecdsa-with-SHA256\n                                30:45:02:20:53:5D:E7:54:DF:48:D8:89:AC:EF:B6:F7:\n                                8B:78:F4:2E:40:35:CE:28:0B:B8:13:53:37:FB:C6:79:\n                                4D:96:12:AC:02:21:00:C2:2E:61:7E:20:BD:4A:C2:8B:\n                                C6:54:D0:D2:C7:2D:53:18:4B:99:D6:21:E3:4A:FA:10:\n                                25:90:4B:FC:96:C3:60\n                Signed Certificate Timestamp:\n                    Version   : v1 (0x0)\n                    Log ID    : E0:92:B3:FC:0C:1D:C8:E7:68:36:1F:DE:61:B9:96:4D:\n                                0A:52:78:19:8A:72:D6:72:C4:B0:4D:A5:6D:6F:54:04\n                    Timestamp : Feb 19 18:28:32.147 2025 GMT\n                    Extensions: none\n                    Signature : ecdsa-with-SHA256\n                                30:46:02:21:00:AC:D8:DB:99:21:42:25:A0:E6:87:D6:\n                                DF:5E:5C:32:9B:F1:B8:E8:58:44:81:3E:C2:B8:8B:60:\n                                71:32:F1:08:B3:02:21:00:E3:0D:69:03:72:AF:56:24:\n                                CE:B7:0D:53:3D:79:A8:65:74:A1:52:E0:E4:12:4D:FA:\n                                29:16:C5:73:9D:71:11:C5\n    Signature Algorithm: ecdsa-with-SHA384\n    Signature Value:\n        30:65:02:30:30:0d:ab:2e:c6:d3:d0:08:c3:35:dc:77:b4:8d:\n        97:bb:85:c2:10:be:c6:57:dd:ba:fa:75:3d:e1:03:1d:cf:c5:\n        03:d2:b7:99:16:24:19:7b:8a:b7:33:5d:3a:1e:f0:70:02:31:\n        00:b8:c4:30:39:81:42:2c:17:6c:1e:38:ee:81:a4:69:90:1e:\n        d2:ba:b1:03:71:2d:35:5e:70:8f:4a:1b:78:e6:e5:ba:3f:cd:\n        81:4b:15:10:6f:4e:aa:20:48:a2:08:05:47\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for Let's Encrypt Revocation Page\nDESCRIPTION: YAML frontmatter defining metadata for a Let's Encrypt documentation page about certificate revocation. The frontmatter indicates the page slug is 'revoking' and it's marked as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: revoking\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Documentation Page in Hugo\nDESCRIPTION: This code snippet defines the front matter for a Hugo documentation page. It sets the title to 'Documentation' and configures the menu placement with a weight of 10. The page also includes a docs_index shortcode to generate the documentation index.\n\nLANGUAGE: hugo\nCODE:\n```\n---\ntitle: Documentation\nmenu:\n  main:\n    weight: 10\n---\n\n{{< docs_index >}}\n```\n\n----------------------------------------\n\nTITLE: Відкликання завантаженого сертифіката\nDESCRIPTION: Команда для відкликання сертифіката, який був завантажений з crt.sh після підтвердження контролю над доменами. Використовується після підтвердження володіння доменами через DNS або HTTP-перевірку.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot revoke --cert-path /PATH/TO/downloaded-cert.pem\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Let's Encrypt Integration Guide\nDESCRIPTION: This YAML front matter defines metadata for a Let's Encrypt integration guide page. It specifies the URL slug as 'integration-guide' and sets an 'untranslated' flag to 1, indicating the content is not yet translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: integration-guide\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Using curl to check hostnames and certificate serials for TLS-ALPN-01 incident\nDESCRIPTION: Examples of using curl commands to check if a hostname or certificate serial is in the list of certificates affected by the TLS-ALPN-01 incident. The commands send POST requests to a Let's Encrypt checking service with either an FQDN or a certificate serial.\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -X POST -d 'fqdn=letsencrypt.org' https://tls-alpn-check.letsencrypt.org/checkhost\n[letsencrypt.org]: FQDN was not found in the impacted list.\n\n$ curl -X POST -d 'fqdn=example.com' https://tls-alpn-check.letsencrypt.org/checkhost\n[example.com]: The certificate retrieved from your web server has serial 030xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx and was found in our affected data set. Please renew your certificate as soon as possible. Help is available at https://community.letsencrypt.org/t/questions-about-renewing-before-tls-alpn-01-revocations/170449\n\n$ curl -X POST -d 'serial=03a1c95bdaa36a8268327f2253cbd3ba243' https://tls-alpn-check.letsencrypt.org/checkserial\n[03a1c95bdaa36a8268327f2253cbd3ba243]: Serial was not found in the impacted list. No action should be necessary.\n\n$ curl -X POST -d 'serial=030xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' https://tls-alpn-check.letsencrypt.org/checkserial\n[030xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx]: Serial was found in the impacted list. Please renew your certificate as soon as possible. Help is available at https://community.letsencrypt.org/t/questions-about-renewing-before-tls-alpn-01-revocations/170449\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Challenge Types Documentation\nDESCRIPTION: YAML frontmatter for a documentation page about Let's Encrypt challenge types. The frontmatter defines the slug for the page URL and indicates the content is untranslated (likely a placeholder for future content).\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: challenge-types\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Let's Encrypt Getting Started Page\nDESCRIPTION: YAML front matter configuration for a markdown page that defines page properties including slug and translation status for the Let's Encrypt getting started guide.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: getting-started\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Challenge Types Documentation\nDESCRIPTION: YAML metadata block that defines the page slug as 'challenge-types' and marks the content as untranslated with a value of 1. This is likely used in a static site generator for documentation.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: challenge-types\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: JSON Structure for ACME Order with 'replaces' Field\nDESCRIPTION: This JSON example demonstrates how to structure an ACME order request that includes the 'replaces' field, which identifies the certificate being replaced during renewal as part of the ARI process.\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"protected\": base64url({\n    \"alg\": \"ES256\",\n    \"kid\": \"https://example.com/acme/acct/evOfKhNU60wg\",\n    \"nonce\": \"5XJ1L3lEkMG7tR6pA00clA\",\n    \"url\": \"https://example.com/acme/new-order\"\n  }),\n  \"payload\": base64url({\n    \"identifiers\": [\n      { \"type\": \"dns\", \"value\": \"example.com\" }\n    ],\n    \"replaces\": \"aYhba4dGQEHhs3uEe6CuLN4ByNQ.AIdlQyE\"\n  }),\n  \"signature\": \"H6ZXtGjTZyUnPeKn...wEA4TklBdh3e454g\"\n}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for ASN.1 and DER Blog Post\nDESCRIPTION: YAML frontmatter that defines metadata for a blog post about ASN.1 and DER. It specifies the slug (URL path) for the article and indicates the content is not translated (untranslated: 1).\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: a-warm-welcome-to-asn1-and-der\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Documentation\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about ACME challenge types. The frontmatter specifies the URL slug as 'challenge-types' and marks the content as untranslated with flag '1'.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: challenge-types\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Trademark Page\nDESCRIPTION: YAML frontmatter that defines metadata for the Let's Encrypt trademarks page. It includes a slug for URL generation and an untranslated flag indicating the content shouldn't be translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Certificate Compatibility Page\nDESCRIPTION: YAML frontmatter that defines metadata for a web page about certificate compatibility. It specifies the page slug and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: certificate-compatibility\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Documentation Page\nDESCRIPTION: YAML frontmatter configuration for a Let's Encrypt documentation page about upcoming features. It includes a slug identifier and an untranslated flag set to 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: upcoming-features\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Trademark Page\nDESCRIPTION: YAML frontmatter that defines metadata for a webpage about Let's Encrypt trademarks. The configuration specifies the page slug as 'trademarks' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Examining Certbot Account ID in regr.json\nDESCRIPTION: Example showing how to extract the account ID from the uri field in Certbot's regr.json file using cat and grep commands.\n\nLANGUAGE: bash\nCODE:\n```\ncat /etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org/directory/d2de4236d25376651234f81a704331b4/regr.json | grep uri\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Trademark Page\nDESCRIPTION: This YAML frontmatter defines metadata for a webpage about Let's Encrypt trademarks. It specifies the URL slug 'trademarks' and indicates that the content is untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Page Frontmatter Configuration in Markdown\nDESCRIPTION: YAML frontmatter block defining page metadata including slug and translation status. The slug is set to 'lencr.org' and the page is marked as untranslated with a value of 1.\n\nLANGUAGE: markdown\nCODE:\n```\n---\nslug: lencr.org\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Documentation\nDESCRIPTION: YAML frontmatter that defines the page slug as 'allow-port-80' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: allow-port-80\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Documentation Page\nDESCRIPTION: YAML frontmatter that configures a documentation page about getting involved with Let's Encrypt. It defines the slug as 'getinvolved' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: getinvolved\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Client Options Page\nDESCRIPTION: This YAML frontmatter defines a page about Let's Encrypt client options. It includes a slug for URL generation and an untranslated flag to indicate the page hasn't been translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: client-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Documentation Page\nDESCRIPTION: YAML frontmatter defining metadata for a documentation page about getting involved with Let's Encrypt. The page is marked with a slug 'getinvolved' and is flagged as untranslated with value 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: getinvolved\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Documentation Page\nDESCRIPTION: This YAML frontmatter defines configuration for a documentation page about Let's Encrypt client options. It specifies the slug as 'client-options' and indicates the content is not to be translated with 'untranslated: 1'.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: client-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Certificates Documentation\nDESCRIPTION: YAML frontmatter defining metadata for a page about Let's Encrypt certificates. It specifies the slug 'certificates' and sets a flag indicating the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: certificates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Certificate Documentation Page\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about certificates. It includes a slug identifier and an untranslated flag set to 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: certificates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Expiration Emails Documentation\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about certificate expiration emails. It includes a slug for URL routing and an untranslated flag.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: expiration-emails\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Expiration Emails Page\nDESCRIPTION: YAML frontmatter that configures a documentation page about certificate expiration emails. It defines the slug as 'expiration-emails' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: expiration-emails\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Upcoming Features Page\nDESCRIPTION: YAML frontmatter that defines the page slug as 'upcoming-features' and marks the content as untranslated with a flag value of 1. This is typically used in static site generators to control page routing and translation status.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: upcoming-features\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Staging Environment Documentation\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about Let's Encrypt's staging environment. The frontmatter specifies the slug as 'staging-environment' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: staging-environment\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Front Matter Definition for Let's Encrypt Certificate Compatibility Page\nDESCRIPTION: YAML front matter that defines metadata for a certificate compatibility page. It specifies the URL slug and marks the page as untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: certificate-compatibility\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Frontmatter Configuration for Let's Encrypt Privacy Policy Page\nDESCRIPTION: YAML frontmatter defining metadata for a privacy policy page. It specifies the page slug as 'privacy', indicates the content is untranslated with a flag value of 1, and designates English as the canonical language version.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Let's Encrypt Privacy Policy Page\nDESCRIPTION: YAML frontmatter configuration that defines metadata for a privacy policy page. The configuration specifies the URL slug as 'privacy', indicates the content is untranslated, and marks English as the canonical language version.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Front Matter for Let's Encrypt Contact Page\nDESCRIPTION: This snippet defines the YAML front matter for a Markdown page that contains contact information for Let's Encrypt. It specifies the page slug as 'contact' and indicates the page is untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: contact\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Contact Page\nDESCRIPTION: YAML frontmatter that defines the page slug as 'contact' and marks the page as untranslated with a value of 1. This is likely used by a static site generator to control page routing and translation handling.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: contact\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Challenge Types Documentation\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about ACME challenge types. It specifies the URL slug as 'challenge-types' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: challenge-types\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for the Get Involved Page\nDESCRIPTION: YAML front matter that defines metadata for a web page about getting involved with Let's Encrypt. The metadata includes a slug for URL generation and an 'untranslated' flag set to 1, indicating this content should not be translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: getinvolved\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Markdown Header for Let's Encrypt Client Options Page\nDESCRIPTION: A YAML/markdown header block that defines metadata for a documentation page about client options for Let's Encrypt. It specifies the page slug as 'client-options' and marks the content as untranslated.\n\nLANGUAGE: markdown\nCODE:\n```\n---\nslug: client-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Documentation Page\nDESCRIPTION: YAML frontmatter metadata that defines a documentation page for upcoming features. The frontmatter includes a slug indicating the URL path and an 'untranslated' flag set to 1, indicating this content has not been translated yet.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: upcoming-features\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Integration Guide\nDESCRIPTION: YAML frontmatter that sets metadata for a Let's Encrypt integration guide page. It specifies the slug 'integration-guide' and marks the content as untranslated with flag '1'.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: integration-guide\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Profiles Documentation\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about profiles in Let's Encrypt. It specifies the title, slug, dates, and translation status.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Profiles\nslug: profiles\ndate: 2025-02-05\nlastmod: 2025-02-05\nshow_lastmod: false\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Upcoming Features Page\nDESCRIPTION: A YAML frontmatter block that defines the slug (URL path) as 'upcoming-features' and sets an 'untranslated' flag to 1, indicating this content is not available for translation or has not been translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: upcoming-features\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Let's Encrypt FAQ Page\nDESCRIPTION: This YAML front matter block defines configuration properties for a FAQ page, including the URL slug and translation status. It's likely used by a static site generator or CMS to properly route and process the page.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: faq\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Feature Documentation Page\nDESCRIPTION: YAML frontmatter metadata that defines a placeholder page for upcoming Let's Encrypt features. The frontmatter includes a slug for URL generation and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: upcoming-features\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for Let's Encrypt FAQ Page\nDESCRIPTION: This snippet shows the YAML frontmatter configuration for a Markdown document defining the FAQ page for Let's Encrypt. It specifies the page slug as 'faq' and marks the content as untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: faq\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Up Hugo Documentation Structure in Markdown\nDESCRIPTION: This markdown code defines a documentation page with front matter for the Let's Encrypt project. It includes title configuration, menu placement with weight, and uses a docs_index Hugo shortcode to render a documentation index.\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Documentation\nmenu:\n  main:\n    weight: 10\n---\n\n{{< docs_index >}}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Profiles Documentation\nDESCRIPTION: YAML frontmatter that defines the metadata for a documentation page about Let's Encrypt profiles. The configuration includes title, slug, dates, modification display settings, and translation status.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Profiles\nslug: profiles\ndate: 2025-02-05\nlastmod: 2025-02-05\nshow_lastmod: false\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt FAQ Page\nDESCRIPTION: YAML frontmatter that defines metadata for a Let's Encrypt FAQ page in a documentation system. It specifies the page slug as 'faq' and indicates that the content is untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: faq\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for DST Root CA X3 Expiration Documentation\nDESCRIPTION: YAML frontmatter defining metadata for a documentation page about the DST Root CA X3 certificate expiration in September 2021. It specifies the title, URL slug, last modification date (April 6, 2021), and indicates that the content is not translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: DST Root CA X3 Expiration (September 2021)\nslug: dst-root-ca-x3-expiration-september-2021\nlastmod: 2021-04-06\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt FAQ Page\nDESCRIPTION: This YAML frontmatter defines metadata for a FAQ page in the Let's Encrypt documentation. It specifies the slug 'faq' and indicates that the content is untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: faq\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Creating a self-signed certificate with OpenSSL for localhost\nDESCRIPTION: Command to generate a self-signed certificate using OpenSSL with the Common Name set to localhost. This creates both a private key and a certificate that will expire after 365 days.\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config <( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n```\n\n----------------------------------------\n\nTITLE: Defining Metadata for Let's Encrypt Rate Limits Page using Markdown\nDESCRIPTION: This YAML front matter block sets the metadata for a webpage about Let's Encrypt rate limits, including the title, URL slug, creation date, last modification date, and display settings.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Rate Limits\nslug: rate-limits\ndate: 2018-01-04\nlastmod: 2024-10-22\nshow_lastmod: true\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Certificate Types Page\nDESCRIPTION: YAML frontmatter defining metadata for a page about Let's Encrypt certificate types. It includes a slug for URL routing and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: certificates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Certificate Compatibility Page\nDESCRIPTION: YAML front matter configuration for a page about certificate compatibility. It sets the page slug and marks it as untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: certificate-compatibility\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Documentation Page\nDESCRIPTION: A YAML frontmatter block defining metadata for a documentation page about how Let's Encrypt works. It specifies a slug for URL generation and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: how-it-works\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Revoking Page\nDESCRIPTION: A YAML frontmatter block that defines metadata for a page about revoking Let's Encrypt certificates. It specifies the slug as 'revoking' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: revoking\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for an ASN.1/DER Article\nDESCRIPTION: YAML front matter that defines metadata for a blog post or documentation page about ASN.1 and DER encoding. It specifies the URL slug and indicates the content is not translated to other languages.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: a-warm-welcome-to-asn1-and-der\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for GoDaddy Let's Encrypt Documentation\nDESCRIPTION: YAML frontmatter defining metadata for a documentation page about using Let's Encrypt with GoDaddy. The frontmatter includes a slug for URL generation and indicates the page is not translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: godaddy\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Let's Encrypt FAQ Page\nDESCRIPTION: YAML front matter metadata for a Let's Encrypt FAQ page. It defines the page slug as 'faq' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: faq\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Documentation Page\nDESCRIPTION: This YAML frontmatter defines metadata for a documentation page about monitoring options for Let's Encrypt. It specifies the slug for URL generation and indicates that the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: monitoring-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Content Update Requirement for Let's Encrypt Documentation\nDESCRIPTION: Instruction for contributors regarding updating the 'lastmod' field when modifying files in the content/en directory.\n\nLANGUAGE: markdown\nCODE:\n```\nIf you update a file in `content/en` with a `lastmod` field, it **must** be updated.\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Monitoring Page\nDESCRIPTION: YAML frontmatter that defines metadata for a page about monitoring options for Let's Encrypt. The configuration includes the page slug and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: monitoring-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: MPL 2.0 Source Code Form License Notice\nDESCRIPTION: The required license notice that must be included with source code distributed under MPL 2.0. This text is meant to be included in source files or in a LICENSE file within the project.\n\nLANGUAGE: text\nCODE:\n```\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Let's Encrypt Documentation\nDESCRIPTION: YAML front matter header that specifies metadata for a documentation page about monitoring options. It defines the slug for the URL path and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: monitoring-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for lencr.org Documentation Page\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about lencr.org. It specifies the slug as 'lencr.org' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: lencr.org\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for ACME Protocol Documentation\nDESCRIPTION: YAML front matter block defining metadata for a documentation page about ACME protocol updates. It includes a slug for URL routing and an untranslated flag set to 1, indicating that this content has not yet been translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: acme-protocol-updates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for ACME Protocol Updates Page\nDESCRIPTION: This YAML frontmatter block defines metadata for a web page about ACME protocol updates. It sets the URL slug to 'acme-protocol-updates' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: acme-protocol-updates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for lencr.org Documentation Page\nDESCRIPTION: Configuration metadata for a documentation page about the lencr.org domain. The front matter defines the page slug as 'lencr.org' and marks it as untranslated content.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: lencr.org\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for CAA Documentation Page\nDESCRIPTION: YAML frontmatter that configures the metadata for a documentation page about CAA (Certificate Authority Authorization) records for Let's Encrypt. It specifies the URL slug and indicates the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: caa\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Page Frontmatter in YAML for Let's Encrypt Documentation\nDESCRIPTION: YAML frontmatter for a Let's Encrypt documentation page about profiles. The frontmatter specifies metadata like title, slug, dates, and translation status of the page.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Profiles\nslug: profiles\ndate: 2025-02-05\nlastmod: 2025-02-05\nshow_lastmod: false\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for Let's Encrypt About Page\nDESCRIPTION: YAML frontmatter that defines metadata for the 'About' page of the Let's Encrypt project. It specifies the URL slug as 'about' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: about\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Documentation\nDESCRIPTION: YAML frontmatter defining the slug and translation status for a Let's Encrypt documentation page. The slug is set to 'getting-started' and the 'untranslated' flag is set to 1, indicating this is a base template that hasn't been translated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: getting-started\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Trademarks Page\nDESCRIPTION: This YAML frontmatter defines metadata for a webpage about Let's Encrypt trademarks. It specifies the URL slug as 'trademarks' and indicates the content is untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Trademarks Page\nDESCRIPTION: YAML frontmatter that defines metadata for a trademarks policy page. It specifies the URL slug as 'trademarks' and indicates that the content is untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Trademark Page\nDESCRIPTION: YAML frontmatter that defines the page slug as 'trademarks' and marks the content as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: trademarks\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Definition Template for Let's Encrypt Glossary\nDESCRIPTION: Example of the template structure used for defining terms in the glossary. This snippet demonstrates the custom def macro for translators to use when adding terms to the document.\n\nLANGUAGE: markdown\nCODE:\n```\n{% def \n\tid=\"a unique id for anchor - the SAME than for english. will be prefixed by `def-`\" \n\tname=\"The term to define (optional if english or abbr is provided)\"\n\tabbr=\"an accronym (optional)\"\n\tenglish=\"the english term (optional - if present the abbr is in english too)\" %}\n\t\tthe definition\n{% /def %}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Let's Encrypt Glossary Page\nDESCRIPTION: This YAML frontmatter defines metadata for a glossary page in the Let's Encrypt project. It specifies that the page slug is 'glossary' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: glossary\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Glossary Page\nDESCRIPTION: YAML frontmatter that defines metadata for a glossary page in the Let's Encrypt documentation. The frontmatter specifies the page slug and indicates that the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: glossary\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Page Metadata in YAML Front Matter\nDESCRIPTION: YAML front matter defining the metadata for the glossary page. It specifies the URL slug as 'glossary' and marks the page as untranslated with a value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: glossary\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Let's Encrypt Documentation Page\nDESCRIPTION: YAML frontmatter that specifies metadata for a documentation page about Let's Encrypt client options. The frontmatter indicates the page slug is 'client-options' and that the content is untranslated.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: client-options\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Hostname in /etc/hosts File\nDESCRIPTION: This shows how to add a custom local domain to the hosts file on Unix-like systems, mapping a domain name to the localhost IP address.\n\nLANGUAGE: bash\nCODE:\n```\n# in /etc/hosts\n127.0.0.1 local.example.com\n```\n\n----------------------------------------\n\nTITLE: Installing mkcert's local CA in system trust store\nDESCRIPTION: This command initializes mkcert and installs its Certificate Authority in the system and/or browser trust stores.\n\nLANGUAGE: bash\nCODE:\n```\nmkcert -install\n```\n\n----------------------------------------\n\nTITLE: Important Guidelines for Let's Encrypt Pull Requests in Markdown\nDESCRIPTION: A markdown checklist of important considerations when submitting pull requests to the Let's Encrypt repository. It reminds contributors to update the 'lastmod' field when modifying English content files and to consult the translation guide for non-English content.\n\nLANGUAGE: markdown\nCODE:\n```\n# Important\n\n- If this PR updates a file in `content/en` with a `lastmod` field, it **must** be updated.\n\n- If this PR is a translation, please read [TRANSLATION.md](./TRANSLATION.md) first.\n```\n\n----------------------------------------\n\nTITLE: Viewing X.509 Certificate Details for Let's Encrypt Authority X3\nDESCRIPTION: This displays the complete X.509 certificate information for Let's Encrypt Authority X3, including version, serial number, signature algorithm, issuer, validity period, subject, public key information, and extensions. The certificate is signed by ISRG Root X1 and was valid from 2016 to 2021.\n\nLANGUAGE: plaintext\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            d3:b1:72:26:34:23:32:dc:f4:05:28:51:2a:ec:9c:6a\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Oct  6 15:43:55 2016 GMT\n            Not After : Oct  6 15:43:55 2021 GMT\n        Subject: C = US, O = Let's Encrypt, CN = Let's Encrypt Authority X3\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:9c:d3:0c:f0:5a:e5:2e:47:b7:72:5d:37:83:b3:\n                    68:63:30:ea:d7:35:26:19:25:e1:bd:be:35:f1:70:\n                    92:2f:b7:b8:4b:41:05:ab:a9:9e:35:08:58:ec:b1:\n                    2a:c4:68:87:0b:a3:e3:75:e4:e6:f3:a7:62:71:ba:\n                    79:81:60:1f:d7:91:9a:9f:f3:d0:78:67:71:c8:69:\n                    0e:95:91:cf:fe:e6:99:e9:60:3c:48:cc:7e:ca:4d:\n                    77:12:24:9d:47:1b:5a:eb:b9:ec:1e:37:00:1c:9c:\n                    ac:7b:a7:05:ea:ce:4a:eb:bd:41:e5:36:98:b9:cb:\n                    fd:6d:3c:96:68:df:23:2a:42:90:0c:86:74:67:c8:\n                    7f:a5:9a:b8:52:61:14:13:3f:65:e9:82:87:cb:db:\n                    fa:0e:56:f6:86:89:f3:85:3f:97:86:af:b0:dc:1a:\n                    ef:6b:0d:95:16:7d:c4:2b:a0:65:b2:99:04:36:75:\n                    80:6b:ac:4a:f3:1b:90:49:78:2f:a2:96:4f:2a:20:\n                    25:29:04:c6:74:c0:d0:31:cd:8f:31:38:95:16:ba:\n                    a8:33:b8:43:f1:b1:1f:c3:30:7f:a2:79:31:13:3d:\n                    2d:36:f8:e3:fc:f2:33:6a:b9:39:31:c5:af:c4:8d:\n                    0d:1d:64:16:33:aa:fa:84:29:b6:d4:0b:c0:d8:7d:\n                    c3:93\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n                  CPS: http://cps.root-x1.letsencrypt.org\n\n            X509v3 Subject Key Identifier: \n                A8:4A:6A:63:04:7D:DD:BA:E6:D1:39:B7:A6:45:65:EF:F3:A8:EC:A1\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://crl.root-x1.letsencrypt.org\n\n            Authority Information Access: \n                OCSP - URI:http://ocsp.root-x1.letsencrypt.org/\n                CA Issuers - URI:http://cert.root-x1.letsencrypt.org/\n\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n    Signature Algorithm: sha256WithRSAEncryption\n         19:cf:75:20:34:2d:3a:a6:45:ff:d0:d5:e6:8c:da:32:e8:9c:\n         6e:1b:41:d1:27:a8:e2:50:f2:70:aa:c4:e7:93:46:b4:e8:10:\n         ab:70:4f:ef:b7:ea:04:d2:94:11:b1:03:fe:5d:ba:df:36:8c:\n         94:36:8f:13:7c:44:8f:0b:f5:01:57:ad:68:b8:c5:79:c0:d8:\n         4a:80:d7:4c:a3:1e:24:7a:1f:d7:23:e8:c1:62:3a:76:f9:22:\n         7d:5e:5a:c4:4c:50:cd:af:dd:ef:6d:36:c0:80:80:1b:a4:3c:\n         70:20:d6:54:21:d3:ba:ef:14:a9:bf:07:3f:41:0a:36:b1:a2:\n         b0:0b:20:d5:1f:67:d0:c3:eb:88:f6:8a:02:c8:c6:57:b6:0c:\n         fc:56:f1:d2:3f:17:69:68:1c:c8:d7:66:3a:86:f1:19:2a:65:\n         47:68:c6:d2:03:e7:ef:74:16:0b:06:21:f9:0c:a6:a8:11:4b:\n         4e:5f:e3:33:db:08:41:ea:09:79:75:78:ee:47:c8:42:d3:81:\n         c5:65:2d:75:d0:0e:00:16:9d:1c:ee:b7:58:45:25:e7:33:63:\n         5b:63:41:09:e8:e9:fe:ac:fa:73:32:74:b3:76:e9:6b:94:e2:\n         cd:d4:62:f3:ae:3a:c5:31:46:52:6e:ed:34:91:1e:a0:c2:de:\n         54:84:e5:78:20:56:4c:dd:68:f9:2e:28:64:1b:1a:99:f2:fb:\n         4d:7f:e3:b8:5f:5d:73:41:ec:79:ed:58:d6:7a:37:65:70:a7:\n         b1:ba:39:f6:3e:61:0a:d9:c0:86:90:9a:1a:c8:a8:96:6e:8a:\n         0b:2b:6d:ed:d6:fa:07:67:e7:29:04:f7:e2:b2:d1:58:15:52:\n         c7:f1:a3:9d:a6:c0:56:2c:d4:92:98:d8:f1:83:b9:6c:7c:33:\n         a0:e5:4b:aa:90:92:f1:da:45:4a:34:14:c7:7c:4e:c4:a5:6c:\n         5d:3f:bf:de:b9:a8:61:4a:85:20:de:42:83:29:62:7c:1c:99:\n         08:a5:46:1f:f4:6b:22:d3:86:51:cb:37:cd:60:4a:42:63:56:\n         b3:c8:d1:8f:31:09:53:c1:e2:dc:1b:d4:f1:54:77:67:cf:33:\n         7b:00:d6:d2:7c:de:c6:79:bf:cb:e0:16:fd:b2:a1:f2:91:3c:\n         1d:2d:e8:9c:d4:03:cd:66:4a:a3:37:93:19:79:7b:e2:19:c2:\n         16:00:c8:ed:0e:4e:0d:ff:7e:cf:07:a8:64:cd:29:df:41:aa:\n         85:30:49:10:73:a7:4e:89:32:0e:5b:ad:40:86:c1:b0:94:0c:\n         8d:26:c5:a7:49:dc:1c:f8:5b:14:7a:7f:23:69:04:ad:b2:02:\n         29:d6:12:c8:a4:c6:a1:2d\n```\n\n----------------------------------------\n\nTITLE: PEM-Encoded X.509 Certificate for Let's Encrypt Authority X3\nDESCRIPTION: This is the PEM-encoded X.509 certificate for Let's Encrypt Authority X3. The certificate is valid from March 17, 2016 to March 17, 2021, and is signed by DST Root CA X3. It is used as an intermediate certificate in the Let's Encrypt certificate chain.\n\nLANGUAGE: pem\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan/PQeGdxyGkOlZHP/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB/onkxEz0tNvjj\n/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr/1wXKtx8/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6/DNFu0Qg==\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: X.509 PEM Certificate for Let's Encrypt Authority X4\nDESCRIPTION: This is a PEM-encoded X.509 certificate for Let's Encrypt Authority X4. It's signed by ISRG Root X1 and was valid from October 6, 2016 to October 6, 2021. The certificate contains the public key and identity information for the Let's Encrypt intermediate certificate authority.\n\nLANGUAGE: text\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIFjTCCA3WgAwIBAgIRAJObmZ6kjhYNW0JZtD0gE9owDQYJKoZIhvcNAQELBQAw\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMTYxMDA2MTU0NDM0\nWhcNMjExMDA2MTU0NDM0WjBKMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg\nRW5jcnlwdDEjMCEGA1UEAxMaTGV0J3MgRW5jcnlwdCBBdXRob3JpdHkgWDQwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDhJHRCe7eRMdlz/ziq2M5EXLc5\nCtxErg29RbmXN2evvVBPX9MQVGv3QdqOY+ZtW8DoQKmMQfzRA4n/YmEJYNYHBXia\nkL0aZD5P3M93L4lry2evQU3FjQDAa/6NhNy18pUxqOj2kKBDSpN0XLM+Q2lLiSJH\ndFE+mWTDzSQB+YQvKHcXIqfdw2wITGYvN3TFb5OOsEY3FmHRUJjIsA9PWFN8rPba\nLZZhUK1D3AqmT561Urmcju9O30azMdwg/GnCoyB1Puw4GzZOZmbS3/VmpJMve6YO\nlD5gPUpLHG+6tE0cPJFYbi9NxNpw2+0BOXbASefpNbUUBpDB5ZLiEP1rubSFAgMB\nAAGjggFnMIIBYzAOBgNVHQ8BAf8EBAMCAYYwEgYDVR0TAQH/BAgwBgEB/wIBADBU\nBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEBATAwMC4GCCsGAQUFBwIB\nFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQub3JnMB0GA1UdDgQWBBTF\nsatOTLHNZDCTfsGEmQWr5gPiJTAzBgNVHR8ELDAqMCigJqAkhiJodHRwOi8vY3Js\nLnJvb3QteDEubGV0c2VuY3J5cHQub3JnMHIGCCsGAQUFBwEBBGYwZDAwBggrBgEF\nBQcwAYYkaHR0cDovL29jc3Aucm9vdC14MS5sZXRzZW5jcnlwdC5vcmcvMDAGCCsG\nAQUFBzAChiRodHRwOi8vY2VydC5yb290LXgxLmxldHNlbmNyeXB0Lm9yZy8wHwYD\nVR0jBBgwFoAUebRZ5nu25eQBc4AIiMgaWPbpm24wDQYJKoZIhvcNAQELBQADggIB\nAF4tI1yGjZgld9lP01+zftU3aSV0un0d2GKUMO7GxvwTLWAKQz/eT+u3J4+GvpD+\nBMfopIxkJcDCzMChjjZtZZwJpIY7BatVrO6OkEmaRNITtbZ/hCwNkUnbk3C7EG3O\nGJZlo9b2wzA8v9WBsPzHpTvLfOr+dS57LLPZBhp3ArHaLbdk33lIONRPt9sseDEk\nmdHnVmGmBRf4+J0Wy67mddOvz5rHH8uzY94raOayf20gzzcmqmot4hPXtDG4Y49M\noFMMT2kcWck3EOTAH6QiGWkGJ7cxMfSL3S0niA6wgFJtfETETOZu8AVDgENgCJ3D\nS0bz/dhVKvs3WRkaKuuR/W0nnC2VDdaFj4+CRF8LGtn/8ERaH48TktH5BDyDVcF9\nzfJ75Scxcy23jAL2N6w3n/t3nnqoXt9Im4FprDr+mP1g2Z6Lf2YA0jE3kZalgZ6l\nNHu4CmvJYoOTSJw9X2qlGl1K+B4U327rG1tRxgjM76pN6lIS02PMECoyKJigpOSB\nu4V8+LVaUMezCJH9Qf4EKeZTHddQ1t96zvNd2s9ewSKx/DblXbKsBDzIdHJ+qi6+\nF9DIVM5/ICdtDdulOO+dr/BXB+pBZ3uVxjRANvJKKpdxkePyluITSNZHbanWRN07\ngMvwBWOL060i4VrL9er1sBQrRjU9iNpZQGTnLVAxQVFu\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: PEM-encoded X.509 Certificate for Let's Encrypt Authority X4\nDESCRIPTION: This is a digital certificate for Let's Encrypt Authority X4, issued by DST Root CA X3. The certificate is valid from March 17, 2016 to March 17, 2021 and is used in the certificate chain for Let's Encrypt issued SSL/TLS certificates.\n\nLANGUAGE: certificate\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc6bLEeMfizANBgkqhkiG9w0BAQsFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDEwMloXDTIxMDMxNzE2NDEwMlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFg0MIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEA4SR0Qnu3kTHZc/84qtjORFy3OQrcRK4NvUW5lzdnr71QT1/T\nEFRr90HajmPmbVvA6ECpjEH80QOJ/2JhCWDWBwV4mpC9GmQ+T9zPdy+Ja8tnr0FN\nxY0AwGv+jYTctfKVMajo9pCgQ0qTdFyzPkNpS4kiR3RRPplkw80kAfmELyh3FyKn\n3cNsCExmLzd0xW+TjrBGNxZh0VCYyLAPT1hTfKz22i2WYVCtQ9wKpk+etVK5nI7v\nTt9GszHcIPxpwqMgdT7sOBs2TmZm0t/1ZqSTL3umDpQ+YD1KSxxvurRNHDyRWG4v\nTcTacNvtATl2wEnn6TW1FAaQweWS4hD9a7m0hQIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBTFsatOTLHNZDCTfsGEmQWr5gPiJTANBgkqhkiG9w0BAQsF\nAAOCAQEANlaeSdstfAtqFN3jdRZJFjx9X+Ob3PIDlekPYQ1OQ1Uw43rE1FUj7hUw\ng2MJKfs9b7M0WoQg7C20nJY/ajsg7pWhUG3J6rlkDTfVY9faeWi0qsPYXE6BpBDr\n5BrW/Xv8yT8U2BiEAmNggWq8dmFl82fghmLzHBM8X8NZ3ZwA1fGePA53AP5IoD+0\nArpW8Ik1sSuQBjZ8oQLfN+G8OoY7MNRopyLyQQCNy4aWfE+xYnoVoa5+yr+aPiX0\n7YQrY/cKawAn7QB4PyF5//IKSAVs7mAuB68wbMdE3FKfOHfJ24W4z/bIJTrTY8Y5\nSr4AUhtzf8oVDrHZYWRrP4joIcOu/Q==\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate for Let's Encrypt Authority X2\nDESCRIPTION: This is a PEM-encoded X.509 certificate for Let's Encrypt Authority X2, issued by DST Root CA X3. The certificate is valid from October 19, 2015, to October 19, 2020, and is used for signing end-entity certificates in the Let's Encrypt certificate authority hierarchy.\n\nLANGUAGE: certificate\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIEqDCCA5CgAwIBAgIRAMODTJjAvWslLKN5tm+lKw4wDQYJKoZIhvcNAQELBQAw\nPzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMRcwFQYDVQQD\nEw5EU1QgUm9vdCBDQSBYMzAeFw0xNTEwMTkyMjM1MDFaFw0yMDEwMTkyMjM1MDFa\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMjCCASIwDQYJKoZIhvcNAQEBBQAD\nggEPADCCAQoCggEBAOEkdEJ7t5Ex2XP/OKrYzkRctzkK3ESuDb1FuZc3Z6+9UE9f\n0xBUa/dB2o5j5m1bwOhAqYxB/NEDif9iYQlg1gcFeJqQvRpkPk/cz3cviWvLZ69B\nTcWNAMBr/o2E3LXylTGo6PaQoENKk3Rcsz5DaUuJIkd0UT6ZZMPNJAH5hC8odxci\np93DbAhMZi83dMVvk46wRjcWYdFQmMiwD09YU3ys9totlmFQrUPcCqZPnrVSuZyO\n707fRrMx3CD8acKjIHU+7DgbNk5mZtLf9Wakky97pg6UPmA9Skscb7q0TRw8kVhu\nL03E2nDb7QE5dsBJ5+k1tRQGkMHlkuIQ/Wu5tIUCAwEAAaOCAZIwggGOMBIGA1Ud\nEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQDAgGGMH8GCCsGAQUFBwEBBHMwcTAy\nBggrBgEFBQcwAYYmaHR0cDovL2lzcmcudHJ1c3RpZC5vY3NwLmlkZW50cnVzdC5j\nb20wOwYIKwYBBQUHMAKGL2h0dHA6Ly9hcHBzLmlkZW50cnVzdC5jb20vcm9vdHMv\nZHN0cm9vdGNheDMucDdjMB8GA1UdIwQYMBaAFMSnsaR7LHH62+FLkHX/xBVghYkQ\nMFQGA1UdIARNMEswCAYGZ4EMAQIBMD8GCysGAQQBgt8TAQEBMDAwLgYIKwYBBQUH\nAgEWImh0dHA6Ly9jcHMucm9vdC14MS5sZXRzZW5jcnlwdC5vcmcwPAYDVR0fBDUw\nMzAxoC+gLYYraHR0cDovL2NybC5pZGVudHJ1c3QuY29tL0RTVFJPT1RDQVgzQ1JM\nLmNybDATBgNVHR4EDDAKoQgwBoIELm1pbDAdBgNVHQ4EFgQUxbGrTkyxzWQwk37B\nhJkFq+YD4iUwDQYJKoZIhvcNAQELBQADggEBAAcSAhaE7rvHxyUnhgkEpMR56o2I\nIH+mlw5kknjhAuvaBIAM59MZkFbFg5CrNWt8K+G3UoxJgFwv7HvJJxqwgPpNgXC/\nuT3prkvwt+2lvzKJKbqdH+lo40P8EuSyyJOz2hjrRzNMHbJHYDS9OhF5WC5LOQQa\nydgLZ/JHxXgJypEZqcmVgQ+yYBs0XPwXjE7OE8vbx5REwu7gToMIqAoWRoWW2MxS\ng28RGPVnHzHk2XV1nZGy9T+NYQ91vWWJr1pzNEFZ0cnA2xGwTeJ+zZ3URCfw3Z1U\n+YAL3YUmrvdoRBlASOTmNJmXSo9qvMYPa3DEomAPoFQFZqsSN6kuqDEIqMA=\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate in PEM Format for Let's Encrypt Authority X1\nDESCRIPTION: This is a PEM-encoded X.509 certificate for Let's Encrypt Authority X1. It was issued by DST Root CA X3 and was valid from October 19, 2015 to October 19, 2020. The certificate contains the public key and identity information needed to verify certificates issued by Let's Encrypt.\n\nLANGUAGE: text\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIEqDCCA5CgAwIBAgIRAJgT9HUT5XULQ+dDHpceRL0wDQYJKoZIhvcNAQELBQAw\nPzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMRcwFQYDVQQD\nEw5EU1QgUm9vdCBDQSBYMzAeFw0xNTEwMTkyMjMzMzZaFw0yMDEwMTkyMjMzMzZa\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMTCCASIwDQYJKoZIhvcNAQEBBQAD\nggEPADCCAQoCggEBAJzTDPBa5S5Ht3JdN4OzaGMw6tc1Jhkl4b2+NfFwki+3uEtB\nBaupnjUIWOyxKsRohwuj43Xk5vOnYnG6eYFgH9eRmp/z0HhncchpDpWRz/7mmelg\nPEjMfspNdxIknUcbWuu57B43ABycrHunBerOSuu9QeU2mLnL/W08lmjfIypCkAyG\ndGfIf6WauFJhFBM/ZemCh8vb+g5W9oaJ84U/l4avsNwa72sNlRZ9xCugZbKZBDZ1\ngGusSvMbkEl4L6KWTyogJSkExnTA0DHNjzE4lRa6qDO4Q/GxH8Mwf6J5MRM9LTb4\n4/zyM2q5OTHFr8SNDR1kFjOq+oQpttQLwNh9w5MCAwEAAaOCAZIwggGOMBIGA1Ud\nEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQDAgGGMH8GCCsGAQUFBwEBBHMwcTAy\nBggrBgEFBQcwAYYmaHR0cDovL2lzcmcudHJ1c3RpZC5vY3NwLmlkZW50cnVzdC5j\nb20wOwYIKwYBBQUHMAKGL2h0dHA6Ly9hcHBzLmlkZW50cnVzdC5jb20vcm9vdHMv\nZHN0cm9vdGNheDMucDdjMB8GA1UdIwQYMBaAFMSnsaR7LHH62+FLkHX/xBVghYkQ\nMFQGA1UdIARNMEswCAYGZ4EMAQIBMD8GCysGAQQBgt8TAQEBMDAwLgYIKwYBBQUH\nAgEWImh0dHA6Ly9jcHMucm9vdC14MS5sZXRzZW5jcnlwdC5vcmcwPAYDVR0fBDUw\nMzAxoC+gLYYraHR0cDovL2NybC5pZGVudHJ1c3QuY29tL0RTVFJPT1RDQVgzQ1JM\nLmNybDATBgNVHR4EDDAKoQgwBoIELm1pbDAdBgNVHQ4EFgQUqEpqYwR93brm0Tm3\npkVl7/Oo7KEwDQYJKoZIhvcNAQELBQADggEBANHIIkus7+MJiZZQsY14cCoBG1hd\nv0J20/FyWo5ppnfjL78S2k4s2GLRJ7iD9ZDKErndvbNFGcsW+9kKK/TnY21hp4Dd\nITv8S9ZYQ7oaoqs7HwhEMY9sibED4aXw09xrJZTC9zK1uIfW6t5dHQjuOWv+HHoW\nZnupyxpsEUlEaFb+/SCI4KCSBdAsYxAcsHYI5xxEI4LutHp6s3OT2FuO90WfdsIk\n6q78OMSdn875bNjdBYAqxUp2/LEIHfDBkLoQz0hFJmwAbYahqKaLn73PAAm1X2kj\nf1w8DdnkabOLGeOVcj9LQ+s67vBykx4anTjURkbqZslUEUsn2k5xeua2zUk=\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: Let's Encrypt Authority X3 Certificate in PEM Format\nDESCRIPTION: This is a PEM-encoded X.509 certificate for the Let's Encrypt Authority X3 intermediate certificate authority. It's signed by ISRG Root X1 and is valid from October 6, 2016 to October 6, 2021. This certificate is used by Let's Encrypt to issue end-entity TLS certificates.\n\nLANGUAGE: text\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIFjTCCA3WgAwIBAgIRANOxciY0IzLc9AUoUSrsnGowDQYJKoZIhvcNAQELBQAw\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMTYxMDA2MTU0MzU1\nWhcNMjExMDA2MTU0MzU1WjBKMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg\nRW5jcnlwdDEjMCEGA1UEAxMaTGV0J3MgRW5jcnlwdCBBdXRob3JpdHkgWDMwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCc0wzwWuUuR7dyXTeDs2hjMOrX\nNSYZJeG9vjXxcJIvt7hLQQWrqZ41CFjssSrEaIcLo+N15Obzp2JxunmBYB/XkZqf\n89B4Z3HIaQ6Vkc/+5pnpYDxIzH7KTXcSJJ1HG1rrueweNwAcnKx7pwXqzkrrvUHl\nNpi5y/1tPJZo3yMqQpAMhnRnyH+lmrhSYRQTP2XpgofL2/oOVvaGifOFP5eGr7Dc\nGu9rDZUWfcQroGWymQQ2dYBrrErzG5BJeC+ilk8qICUpBMZ0wNAxzY8xOJUWuqgz\nuEPxsR/DMH+ieTETPS02+OP88jNquTkxxa/EjQ0dZBYzqvqEKbbUC8DYfcOTAgMB\nAAGjggFnMIIBYzAOBgNVHQ8BAf8EBAMCAYYwEgYDVR0TAQH/BAgwBgEB/wIBADBU\nBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEBATAwMC4GCCsGAQUFBwIB\nFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQub3JnMB0GA1UdDgQWBBSo\nSmpjBH3duubRObemRWXv86jsoTAzBgNVHR8ELDAqMCigJqAkhiJodHRwOi8vY3Js\nLnJvb3QteDEubGV0c2VuY3J5cHQub3JnMHIGCCsGAQUFBwEBBGYwZDAwBggrBgEF\nBQcwAYYkaHR0cDovL29jc3Aucm9vdC14MS5sZXRzZW5jcnlwdC5vcmcvMDAGCCsG\nAQUFBzAChiRodHRwOi8vY2VydC5yb290LXgxLmxldHNlbmNyeXB0Lm9yZy8wHwYD\nVR0jBBgwFoAUebRZ5nu25eQBc4AIiMgaWPbpm24wDQYJKoZIhvcNAQELBQADggIB\nABnPdSA0LTqmRf/Q1eaM2jLonG4bQdEnqOJQ8nCqxOeTRrToEKtwT++36gTSlBGx\nA/5dut82jJQ2jxN8RI8L9QFXrWi4xXnA2EqA10yjHiR6H9cj6MFiOnb5In1eWsRM\nUM2v3e9tNsCAgBukPHAg1lQh07rvFKm/Bz9BCjaxorALINUfZ9DD64j2igLIxle2\nDPxW8dI/F2loHMjXZjqG8RkqZUdoxtID5+90FgsGIfkMpqgRS05f4zPbCEHqCXl1\neO5HyELTgcVlLXXQDgAWnRzut1hFJeczY1tjQQno6f6s+nMydLN26WuU4s3UYvOu\nOsUxRlJu7TSRHqDC3lSE5XggVkzdaPkuKGQbGpny+01/47hfXXNB7HntWNZ6N2Vw\np7G6OfY+YQrZwIaQmhrIqJZuigsrbe3W+gdn5ykE9+Ky0VgVUsfxo52mwFYs1JKY\n2PGDuWx8M6DlS6qQkvHaRUo0FMd8TsSlbF0/v965qGFKhSDeQoMpYnwcmQilRh/0\nayLThlHLN81gSkJjVrPI0Y8xCVPB4twb1PFUd2fPM3sA1tJ83sZ5v8vgFv2yofKR\nPB0t6JzUA81mSqM3kxl5e+IZwhYAyO0OTg3/fs8HqGTNKd9BqoUwSRBzp06JMg5b\nrUCGwbCUDI0mxadJ3Bz4WxR6fyNpBK2yAinWEsikxqEt\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: ISRG Root X1 Certificate in PEM Format\nDESCRIPTION: This is the PEM-encoded X.509 certificate for ISRG Root X1, issued by the Internet Security Research Group. The certificate is valid from June 4, 2015 to June 4, 2035 and serves as a trusted root certificate authority used in the Let's Encrypt certificate chain.\n\nLANGUAGE: pem\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIFazCCA1OgAwIBAgIRAIIQz7DSQONZRGPgu2OCiwAwDQYJKoZIhvcNAQELBQAw\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMTUwNjA0MTEwNDM4\nWhcNMzUwNjA0MTEwNDM4WjBPMQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJu\nZXQgU2VjdXJpdHkgUmVzZWFyY2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBY\nMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK3oJHP0FDfzm54rVygc\nh77ct984kIxuPOZXoHj3dcKi/vVqbvYATyjb3miGbESTtrFj/RQSa78f0uoxmyF+\n0TM8ukj13Xnfs7j/EvEhmkvBioZxaUpmZmyPfjxwv60pIgbz5MDmgK7iS4+3mX6U\nA5/TR5d8mUgjU+g4rk8Kb4Mu0UlXjIB0ttov0DiNewNwIRt18jA8+o+u3dpjq+sW\nT8KOEUt+zwvo/7V3LvSye0rgTBIlDHCNAymg4VMk7BPZ7hm/ELNKjD+Jo2FR3qyH\nB5T0Y3HsLuJvW5iB4YlcNHlsdu87kGJ55tukmi8mxdAQ4Q7e2RCOFvu396j3x+UC\nB5iPNgiV5+I3lg02dZ77DnKxHZu8A/lJBdiB3QW0KtZB6awBdpUKD9jf1b0SHzUv\nKBds0pjBqAlkd25HN7rOrFleaJ1/ctaJxQZBKT5ZPt0m9STJEadao0xAH0ahmbWn\nOlFuhjuefXKnEgV4We0+UXgVCwOPjdAvBbI+e0ocS3MFEvzG6uBQE3xDk3SzynTn\njh8BCNAw1FtxNrQHusEwMFxIt4I7mKZ9YIqioymCzLq9gwQbooMDQaHWBfEbwrbw\nqHyGO0aoSCqI3Haadr8faqU9GY/rOPNk3sgrDQoo//fb4hVC1CLQJ13hef4Y53CI\nrU7m2Ys6xt0nUW7/vGT1M0NPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNV\nHRMBAf8EBTADAQH/MB0GA1UdDgQWBBR5tFnme7bl5AFzgAiIyBpY9umbbjANBgkq\nhkiG9w0BAQsFAAOCAgEAVR9YqbyyqFDQDLHYGmkgJykIrGF1XIpu+ILlaS/V9lZL\nubhzEFnTIZd+50xx+7LSYK05qAvqFyFWhfFQDlnrzuBZ6brJFe+GnY+EgPbk6ZGQ\n3BebYhtF8GaV0nxvwuo77x/Py9auJ/GpsMiu/X1+mvoiBOv/2X/qkSsisRcOj/KK\nNFtY2PwByVS5uCbMiogziUwthDyC3+6WVwW6LLv3xLfHTjuCvjHIInNzktHCgKQ5\nORAzI4JMPJ+GslWYHb4phowim57iaztXOoJwTdwJx4nLCgdNbOhdjsnvzqvHu7Ur\nTkXWStAmzOVyyghqpZXjFaH3pO3JLF+l+/+sKAIuvtd7u+Nxe5AW0wdeRlN8NwdC\njNPElpzVmbUq4JUagEiuTDkHzsxHpFKVK7q4+63SM1N95R1NbdWhscdCb+ZAJzVc\noyi3B43njTOQ5yOf+1CceWxG1bQVs5ZufpsMljq4Ui0/1lvh+wjChP4kqKOJ2qxq\n4RgqsahDYVvTH9w7jXbyLeiNdd8XM2w9U/t7y0Ff/9yi0GE44Za4rF2LN9d11TPA\nmRGunUHBcnWEvgJBQl9nJEiU0Zsnvgc/ubhPgXRR4Xq37Z0j4r7g1SgEEzwxA57d\nemyPxgcYxn/eR44/KJ4EBs+lVDR3veyJm+kXQ99b21/+jh5Xos1AnX5iItreGCc=\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Structure for ISRG Root OCSP X1\nDESCRIPTION: This text output shows the detailed structure of an X.509 certificate for Let's Encrypt's OCSP responder. It includes certificate version, serial number, signature algorithm, issuer details, validity period, subject information, public key data, and X.509 extensions required for OCSP signing.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            e9:12:c9:0d:90:86:04:3f:16:70:80:dc:96:44:8a:a8\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Jun  9 13:04:11 2020 GMT\n            Not After : Jun 10 13:04:11 2025 GMT\n        Subject: C = US, O = Internet Security Research Group, CN = ISRG Root OCSP X1\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:bb:0d:1c:47:d2:e2:e3:e3:3e:68:82:62:c4:43:\n                    67:57:83:cc:f4:df:27:03:1c:16:b0:cf:fb:3f:35:\n                    7f:ef:ae:aa:ff:53:ca:03:c8:c1:e0:ec:a4:b1:c3:\n                    64:2b:d5:c2:6e:53:84:95:2c:d7:49:02:71:06:ba:\n                    5c:90:8a:ae:a3:27:6c:95:a9:0f:bd:a0:78:1c:b8:\n                    f7:73:1f:04:24:fe:2d:13:25:d1:0e:de:35:e6:e6:\n                    6c:f4:b5:85:4a:8a:65:48:b0:45:34:2d:a0:31:f2:\n                    fb:59:8c:4f:a9:ca:0e:6a:05:3e:6a:60:95:48:40:\n                    ca:f3:9a:08:2e:a9:d9:db:b1:49:ad:4d:a1:40:63:\n                    85:fe:55:83:6b:5c:b5:62:22:29:f5:ed:be:af:21:\n                    4e:52:7d:70:01:55:90:76:73:b2:a2:f8:7a:b2:e0:\n                    67:8c:27:11:fb:6e:bd:ab:a5:ed:7f:7f:df:50:78:\n                    ea:9c:e8:0e:ed:ef:17:30:3c:ba:f4:cc:a0:2e:5b:\n                    4e:cc:3c:48:d3:f5:40:db:51:0b:d6:40:68:0b:67:\n                    24:82:8a:d5:01:2a:ca:07:26:8f:4b:da:3a:a7:66:\n                    d8:70:76:77:14:2f:f7:83:eb:6f:ea:90:a2:15:9b:\n                    7e:7b:86:0c:06:76:15:c8:06:02:9a:22:55:bf:b3:\n                    c5:b5\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature\n            X509v3 Basic Constraints: critical\n                CA:FALSE\n            X509v3 Subject Key Identifier: \n                1F:BB:27:F2:26:7A:6B:CC:F1:F5:74:D9:96:2B:7E:19:EC:C3:1C:23\n            X509v3 Extended Key Usage: \n                OCSP Signing\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            OCSP No Check: \n\n    Signature Algorithm: sha256WithRSAEncryption\n         82:d5:2c:97:83:e8:ec:de:6b:f3:06:fe:a0:1e:46:41:39:33:\n         f6:30:f8:7a:12:04:0c:9d:60:32:d8:e9:6e:f7:7d:d1:05:fb:\n         9c:60:a6:f8:1f:c2:45:57:b3:99:40:3c:5a:fd:52:54:79:58:\n         c1:c0:e7:d0:7f:64:a3:ee:74:29:e4:0a:b7:9b:bb:a0:17:6d:\n         bc:96:42:da:28:e9:f8:73:bb:17:d3:43:f1:dc:3a:45:52:96:\n         0a:1d:b7:46:b1:1e:bd:76:85:91:a7:79:ad:16:e0:62:df:fb:\n         80:c2:fd:65:ae:f3:da:cb:34:66:2c:bb:6e:d3:8e:c2:19:f0:\n         f4:ce:60:98:fd:5a:6e:7a:16:19:6b:f8:38:30:bc:29:ea:2e:\n         cb:b1:cb:e1:dc:1f:89:97:e7:5a:a9:36:16:08:db:a5:c3:ca:\n         b9:81:fb:04:51:74:50:cc:6b:b9:2a:70:4e:6f:a2:70:d2:7a:\n         e5:93:b8:76:61:8f:0d:e2:23:f9:b0:14:e1:ce:5d:2a:44:b7:\n         f2:f3:69:f8:b6:fb:3f:d8:8c:10:77:d4:41:72:fe:87:f9:d7:\n         ff:b0:69:a3:9c:bb:e5:84:08:ea:8f:26:d4:42:80:3f:ae:19:\n         05:f0:fc:ea:28:9b:69:3a:46:a3:da:a3:b9:5c:85:49:83:ae:\n         36:4f:e2:9b:da:a4:21:a2:10:0a:97:46:32:33:16:b3:91:0f:\n         6a:14:3b:91:ae:58:e2:c4:e2:02:e2:20:4d:e3:4b:a4:e6:e0:\n         01:17:e5:5f:e9:4b:08:4c:90:b1:90:33:5a:90:3a:8a:cf:f9:\n         f0:7b:e4:cc:6c:75:d3:2e:e2:75:3c:0f:aa:f8:08:bb:dc:c4:\n         7d:cc:55:b5:f4:c7:df:39:26:89:39:1e:08:ff:75:9e:35:f5:\n         2f:d2:73:60:60:53:7c:54:fe:b4:06:38:1f:ed:c1:5c:8f:eb:\n         7f:cd:1d:69:44:4f:f5:dd:d8:2e:a3:b1:52:e4:40:3f:e7:66:\n         b1:6a:5a:ba:13:e8:f7:fe:e3:bb:2f:7d:fe:09:20:6f:38:dd:\n         06:66:57:a4:45:c3:e0:bd:18:2a:87:45:4c:86:b9:7a:8a:77:\n         bb:98:6d:14:54:1b:88:83:d0:8b:01:ff:9c:1c:25:6c:0f:25:\n         22:3b:cc:79:d1:ee:42:34:48:f1:87:58:71:82:8e:3a:b3:32:\n         d4:e6:d1:cf:6a:87:2e:5e:e3:8b:56:e2:dd:51:ab:7e:8f:fd:\n         ac:6a:d2:92:51:2b:50:46:28:12:5c:0a:7c:7c:07:79:a1:45:\n         d0:85:28:7b:19:5b:48:7f:97:84:bc:6b:e5:d3:83:69:bb:bd:\n         2f:5c:b0:c4:da:17:73:4e\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Data for Let's Encrypt E8 Intermediate CA\nDESCRIPTION: Complete certificate data showing the details of Let's Encrypt's E8 intermediate certificate. The certificate is valid from March 13, 2024 to March 12, 2027, uses an ECDSA P-384 key, and is issued by ISRG Root X1.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            63:95:93:63:c2:4e:70:82:71:59:18:bf:c3:d7:ed:56\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = E8\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:d1:65:f2:5e:dc:4b:b4:0c:02:9c:d2:b2:fa:ee:\n                    e9:6c:ab:3a:ae:38:a1:f4:d4:39:32:33:c5:42:d4:\n                    cc:33:0c:34:c7:21:20:90:70:5c:e8:62:2f:1c:71:\n                    b3:42:d7:79:be:46:0d:c1:db:47:a1:13:a0:c7:df:\n                    81:26:63:3b:d4:8d:1d:f6:3d:82:33:32:f6:f4:2b:\n                    e7:f5:96:3a:b4:13:67:18:7b:6b:3e:8d:48:d9:ea:\n                    de:ed:ae:6d:3e:87:4c\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                8F:0D:13:A2:F6:2E:7E:D1:50:6C:33:18:38:5D:59:8E:23:72:91:CA\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n    Signature Algorithm: sha256WithRSAEncryption\n         67:13:48:46:20:d2:ac:09:85:a2:d1:7c:75:ca:0c:43:e6:a8:\n         a1:12:36:74:44:8d:ed:4d:9c:f5:c2:e0:13:1f:76:70:60:f2:\n         29:f7:b9:16:11:ac:9a:9c:3d:63:d1:c0:e1:21:8c:f2:e0:29:\n         03:a3:68:c1:f0:3e:6d:d1:ae:b3:65:6c:e5:af:df:1d:01:01:\n         4d:87:cb:8a:26:42:07:74:b4:a1:cb:e9:d4:c9:e6:71:73:96:\n         cd:78:ca:75:2e:ed:20:4b:31:38:31:ca:9f:98:d3:2f:22:97:\n         a2:c1:64:98:3b:dc:3c:d8:e6:fc:a2:db:d7:70:ed:89:51:88:\n         b7:b2:f1:c8:59:19:b7:fb:bd:3b:0d:46:cb:e7:55:cc:71:8d:\n         a2:65:d9:42:ab:85:9a:f6:76:ee:93:75:93:53:88:2b:e8:b6:\n         3c:33:35:40:68:34:06:db:ee:14:dd:e2:7a:a9:41:75:d1:b0:\n         67:47:5b:ae:57:20:d8:b3:d4:61:af:0b:9c:45:59:df:b8:38:\n         f6:f4:23:0b:4e:ca:65:33:97:f9:c1:25:79:85:4a:66:53:0a:\n         7f:bd:5e:cc:e3:0e:1a:1a:e9:ed:ef:89:28:5f:bd:67:e0:47:\n         5a:80:2b:0b:fd:89:39:fa:60:10:53:4f:ad:b9:ed:09:39:f0:\n         15:fd:1e:ad:d6:4f:97:93:db:36:1c:c4:05:7a:8c:69:a5:fc:\n         c0:54:2d:38:15:d1:bd:33:e0:02:d8:95:b1:98:54:ad:e8:10:\n         ae:87:70:84:7b:2d:df:13:9d:90:ae:3f:58:33:be:6b:b6:f2:\n         23:b2:6f:f5:1e:5f:ae:ff:f5:aa:c6:7b:b5:65:0e:23:a5:af:\n         95:a6:e6:62:18:e9:56:ae:a4:8f:f5:ea:20:74:e8:42:1a:2b:\n         27:c9:ec:16:27:04:50:3a:a2:b5:eb:08:86:c9:97:91:c6:cf:\n         c1:7a:4c:3a:e6:fc:12:21:a5:64:06:bb:8f:89:37:cc:3a:8d:\n         19:87:88:15:6b:cf:ea:26:03:1b:25:bc:ab:c3:01:bd:ef:3f:\n         cf:46:09:8b:28:20:e5:f3:3d:dd:b4:0d:19:ee:aa:bb:7e:d6:\n         b4:1a:5d:b8:bb:2b:81:d3:97:6a:23:92:75:2e:f0:33:2a:e5:\n         9d:22:34:f5:b4:ff:2a:0a:8c:52:13:fc:69:8b:1f:21:5f:67:\n         6d:de:1f:bf:8e:e8:d4:80:53:c5:67:41:15:67:4c:52:c8:13:\n         51:17:73:1b:a0:66:67:61:71:54:c6:93:63:4d:63:ca:a5:a8:\n         03:1c:94:26:aa:b0:1c:0e:65:89:9c:cb:05:63:78:d2:bb:58:\n         a0:bf:73:9e:7e:75:a3:49\n```\n\n----------------------------------------\n\nTITLE: Examining Let's Encrypt's First Six-Day Certificate in PEM Format\nDESCRIPTION: This is the PEM-encoded representation of Let's Encrypt's first short-lived certificate with a six-day validity period. The certificate was issued for testing purposes and immediately revoked to observe its complete lifecycle.\n\nLANGUAGE: pem\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIDSzCCAtGgAwIBAgISA7CwFcGk4mQWEXMacRtxHeDvMAoGCCqGSM49BAMDMDIx\nCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQDEwJF\nNjAeFw0yNTAyMTkxNzMwMDFaFw0yNTAyMjYwOTMwMDBaMAAwWTATBgcqhkjOPQIB\nBggqhkjOPQMBBwNCAAQoSItt2V1aocI5dxrKR8iLfmm0KiVvOhiwKByzu2kLeC7C\n0BdfAgtwdICdkuEhAXokhXLq6DNZZgmh5T4flVwZo4IB9zCCAfMwDgYDVR0PAQH/\nBAQDAgeAMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwHwYDVR0j\nBBgwFoAUkydGmAOpUWiOmNbEQkjbI79YlNIwVQYIKwYBBQUHAQEESTBHMCEGCCsG\nAQUFBzABhhVodHRwOi8vZTYuby5sZW5jci5vcmcwIgYIKwYBBQUHMAKGFmh0dHA6\nLy9lNi5pLmxlbmNyLm9yZy8wKAYDVR0RAQH/BB4wHIIaaGVsbG93b3JsZC5sZXRz\nZW5jcnlwdC5vcmcwEwYDVR0gBAwwCjAIBgZngQwBAgEwggEFBgorBgEEAdZ5AgQC\nBIH2BIHzAPEAdgDM+w9qhXEJZf6Vm1PO6bJ8IumFXA2XjbapflTA/kwNsAAAAZUf\nd/zOAAAEAwBHMEUCIFNd51TfSNiJrO+294t49C5ANc4oC7gTUzf7xnlNlhKsAiEA\nwi5hfiC9SsKLxlTQ0sctUxhLmdYh40r6ECWQS/yWw2AAdwDgkrP8DB3I52g2H95h\nuZZNClJ4GYpy1nLEsE2lbW9UBAAAAZUfd/0TAAAEAwBIMEYCIQCs2NuZIUIloOaH\n1t9eXDKb8bjoWESBPsK4i2BxMvEIswIhAOMNaQNyr1YkzrcNUz15qGV0oVLg5BJN\n+ikWxXOdcRHFMAoGCCqGSM49BAMDA2gAMGUCMDANqy7G09AIwzXcd7SNl7uFwhC+\nxlfduvp1PeEDHc/FA9K3mRYkGXuKtzNdOh7wcAIxALjEMDmBQiwXbB447oGkaZAe\n0rqxA3EtNV5wj0obeObluj/NgUsVEG9OqiBIoggFRw==\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: Analyzing Let's Encrypt E2 Certificate Structure\nDESCRIPTION: This is the X.509 certificate information for Let's Encrypt's E2 intermediate certificate issued by ISRG Root X2. The certificate is valid from September 4, 2020 to September 15, 2025, uses ECDSA with SHA384 for signatures, and has a 384-bit elliptic curve public key. It includes extensions for key usage, extended key usage, basic constraints limiting it to a path length of 0, and various identifiers and access points.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            4e:d2:3d:f6:af:7e:c7:f9:b0:c4:72:6f:f9:51:2a:77\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X2\n        Validity\n            Not Before: Sep  4 00:00:00 2020 GMT\n            Not After : Sep 15 16:00:00 2025 GMT\n        Subject: C = US, O = Let's Encrypt, CN = E2\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:23:9a:2c:ed:e5:8b:19:8d:61:55:9e:c7:e6:55:\n                    60:e8:93:2e:08:b4:4a:03:56:b5:4e:21:b9:f9:39:\n                    d1:55:38:66:9f:cb:6c:15:43:c4:2b:27:b0:8e:ef:\n                    b9:fe:31:a7:80:ae:f8:44:cd:82:01:84:c8:1a:89:\n                    de:3f:22:53:07:b9:62:df:ea:7d:2a:d1:7f:5f:c3:\n                    e5:1e:7c:76:e6:89:f8:8b:cb:45:77:80:49:1a:84:\n                    2f:e5:64:0d:7a:d6:de\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                6D:99:2A:F5:4D:02:EB:E3:11:C1:60:BA:92:6F:8D:3D:2E:F1:EA:44\n            X509v3 Authority Key Identifier: \n                keyid:7C:42:96:AE:DE:4B:48:3B:FA:92:F8:9E:8C:CF:6D:8B:A9:72:37:95\n\n            Authority Information Access: \n                CA Issuers - URI:http://x2.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x2.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: ecdsa-with-SHA384\n         30:65:02:31:00:f2:42:37:da:a9:c8:39:99:b5:7f:0a:de:6f:\n         14:61:0b:ca:e7:50:6b:5d:c9:4c:e9:67:eb:75:e6:65:50:12:\n         b2:85:35:d4:98:50:2d:27:0e:17:e8:0d:31:f6:64:05:3c:02:\n         30:25:af:cd:a3:e2:90:50:03:35:bb:7e:04:df:a9:de:2f:f6:\n         5b:6b:ba:26:6e:42:0e:72:14:a0:c7:58:95:c7:3a:ad:15:61:\n         9d:76:0a:06:fa:da:69:44:f5:a1:ba:18:67\n```\n\n----------------------------------------\n\nTITLE: Displaying X.509 Certificate Details for Let's Encrypt E1\nDESCRIPTION: Detailed X.509 certificate information for Let's Encrypt's E1 intermediate certificate. The certificate uses ECDSA with SHA-384 on the P-384 curve, has a validity period from 2020 to 2025, and includes standard X.509v3 extensions defining its purpose as a certificate authority with a path length of 0.\n\nLANGUAGE: x509\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            b3:bd:df:f8:a7:84:5b:bc:e9:03:a0:41:35:b3:4a:45\n        Signature Algorithm: ecdsa-with-SHA384\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X2\n        Validity\n            Not Before: Sep  4 00:00:00 2020 GMT\n            Not After : Sep 15 16:00:00 2025 GMT\n        Subject: C = US, O = Let's Encrypt, CN = E1\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (384 bit)\n                pub:\n                    04:24:5c:2d:a2:2a:fd:1c:4b:a6:5d:97:73:27:31:\n                    ac:b2:a0:69:62:ef:65:e8:a6:b0:f0:ac:4b:9f:ff:\n                    1c:0b:70:0f:d3:98:2f:4d:fc:0f:00:9b:37:f0:74:\n                    05:57:32:97:2e:05:ef:2a:43:25:a3:fb:6e:34:27:\n                    13:f6:4f:7e:69:d3:02:99:5e:eb:24:47:92:c1:24:\n                    9b:e6:b1:21:8f:c1:24:81:fc:68:cc:1f:69:ba:58:\n                    f5:19:22:f7:74:c6:16\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                5A:F3:ED:2B:FC:36:C2:37:79:B9:52:30:EA:54:6F:CF:55:CB:2E:AC\n            X509v3 Authority Key Identifier: \n                keyid:7C:42:96:AE:DE:4B:48:3B:FA:92:F8:9E:8C:CF:6D:8B:A9:72:37:95\n\n            Authority Information Access: \n                CA Issuers - URI:http://x2.i.lencr.org/\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x2.c.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n                Policy: 1.3.6.1.4.1.44947.1.1.1\n\n    Signature Algorithm: ecdsa-with-SHA384\n         30:64:02:30:7b:74:d5:52:13:8d:61:fe:0d:ba:3f:03:00:9d:\n         f3:d7:98:84:d9:57:2e:bd:e9:0f:9c:5c:48:04:21:f2:cb:b3:\n         60:72:8e:97:d6:12:4f:ca:44:f6:42:c9:d3:7b:86:a9:02:30:\n         5a:b1:b1:b4:ed:ea:60:99:20:b1:38:03:ca:3d:a0:26:b8:ee:\n         6e:2d:4a:f6:c6:66:1f:33:9a:db:92:4a:d5:f5:29:13:c6:70:\n         62:28:ba:23:8c:cf:3d:2f:cb:82:e9:7f\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Details for Let's Encrypt R11\nDESCRIPTION: Complete X.509 certificate information for Let's Encrypt R11 intermediate certificate issued by Internet Security Research Group. The certificate is valid from March 13, 2024 to March 12, 2027 and includes RSA 2048-bit public key and various X.509v3 extensions.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            8a:7d:3e:13:d6:2f:30:ef:23:86:bd:29:07:6b:34:f8\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = Internet Security Research Group, CN = ISRG Root X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = Let's Encrypt, CN = R11\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:ba:87:bc:5c:1b:00:39:cb:ca:0a:cd:d4:67:10:\n                    f9:01:3c:a5:4e:a5:61:cb:26:ca:52:fb:15:01:b7:\n                    b9:28:f5:28:1e:ed:27:b3:24:18:39:67:09:0c:08:\n                    ec:e0:3a:b0:3b:77:0e:bd:f3:e5:39:54:41:0c:4e:\n                    ae:41:d6:99:74:de:51:db:ef:7b:ff:58:bd:a8:b7:\n                    13:f6:de:31:d5:f2:72:c9:72:6a:0b:83:74:95:9c:\n                    46:00:64:14:99:f3:b1:d9:22:d9:cd:a8:92:aa:1c:\n                    26:7a:3f:fe:ef:58:05:7b:08:95:81:db:71:0f:8e:\n                    fb:e3:31:09:bb:09:be:50:4d:5f:8f:91:76:3d:5a:\n                    9d:9e:83:f2:e9:c4:66:b3:e1:06:66:43:48:18:80:\n                    65:a0:37:18:9a:9b:84:32:97:b1:b2:bd:c4:f8:15:\n                    00:9d:27:88:fb:e2:63:17:96:6c:9b:27:67:4b:c4:\n                    db:28:5e:69:c2:79:f0:49:5c:e0:24:50:e1:c4:bc:\n                    a1:05:ac:7b:40:6d:00:b4:c2:41:3f:a7:58:b8:2f:\n                    c5:5c:9b:a5:bb:09:9e:f1:fe:eb:b0:85:39:fd:a8:\n                    0a:ef:45:c4:78:eb:65:2a:c2:cf:5f:3c:de:e3:5c:\n                    4d:1b:f7:0b:27:2b:aa:0b:42:77:53:4f:79:6a:1d:\n                    87:d9\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                C5:CF:46:A4:EA:F4:C3:C0:7A:6C:95:C4:2D:B0:5E:92:2F:26:E3:B9\n            X509v3 Authority Key Identifier: \n                keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E\n\n            Authority Information Access: \n                CA Issuers - URI:http://x1.i.lencr.org/\n\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n\n            X509v3 CRL Distribution Points: \n\n                Full Name:\n                  URI:http://x1.c.lencr.org/\n\n    Signature Algorithm: sha256WithRSAEncryption\n         4e:e2:89:5d:0a:03:1c:90:38:d0:f5:1f:f9:71:5c:f8:c3:8f:\n         b2:37:88:7a:6f:b0:25:1f:ed:be:b7:d8:86:06:8e:e9:09:84:\n         cd:72:bf:81:f3:fc:ca:cf:53:48:ed:bd:f6:69:42:d4:a5:11:\n         3e:35:c8:13:b2:92:1d:05:5f:ea:2e:d4:d8:f8:49:c3:ad:f5:\n         99:96:9c:ef:26:d8:e1:b4:24:0b:48:20:4d:fc:d3:54:b4:a9:\n         c6:21:c8:e1:36:1b:ff:77:64:29:17:b9:f0:4b:ef:5d:ea:cd:\n         79:d0:bf:90:bf:be:23:b2:90:da:4a:a9:48:31:74:a9:44:0b:\n         e1:e2:f6:2d:83:71:a4:75:7b:d2:94:c1:05:19:46:1c:b9:8f:\n         f3:c4:74:48:25:2a:0d:e5:f5:db:43:e2:db:93:9b:b9:19:b4:\n         1f:2f:df:6a:0e:8f:31:d3:63:0f:bb:29:dc:dd:66:2c:3f:b0:\n         1b:67:51:f8:41:3c:e4:4d:b9:ac:b8:a4:9c:66:63:f5:ab:85:\n         23:1d:cc:53:b6:ab:71:ae:dc:c5:01:71:da:36:ee:0a:18:2a:\n         32:fd:09:31:7c:8f:f6:73:e7:9c:9c:b5:4a:15:6a:77:82:5a:\n         cf:da:8d:45:fe:1f:2a:64:05:30:3e:73:c2:c6:0c:b9:d6:3b:\n         63:4a:ab:46:03:fe:99:c0:46:40:27:60:63:df:50:3a:07:47:\n         d8:15:4a:9f:ea:47:1f:99:5a:08:62:0c:b6:6c:33:08:4d:d7:\n         38:ed:48:2d:2e:05:68:ae:80:5d:ef:4c:dc:d8:20:41:5f:68:\n         f1:bb:5a:cd:e3:0e:b0:0c:31:87:9b:43:de:49:43:e1:c8:04:\n         3f:d1:3c:1b:87:45:30:69:a8:a9:72:0e:79:12:1c:31:d8:3e:\n         23:57:dd:a7:4f:a0:f0:1c:81:d1:77:1f:6f:d6:d2:b9:a8:b3:\n         03:16:81:39:4b:9f:55:ae:d2:6a:e4:b3:bf:ea:a5:d5:9f:4b:\n         a3:c9:d6:3b:72:f3:4a:f6:54:ab:0c:fc:38:f7:60:80:df:6e:\n         35:ca:75:a1:54:e4:2f:bc:6e:17:c9:1a:a5:37:b5:a2:9a:ba:\n         ec:f4:c0:75:46:4f:77:a8:e8:59:56:91:66:2d:6e:de:29:81:\n         d6:a6:97:05:5e:64:45:be:2c:ce:ea:64:42:44:b0:c3:4f:ad:\n         f0:b4:dc:03:ca:99:9b:09:82:95:82:0d:63:8a:66:f9:19:72:\n         f8:d5:b9:89:10:e2:89:98:09:35:f9:a2:1c:be:92:73:23:74:\n         e9:9d:1f:d7:3b:4a:9a:84:58:10:c2:f3:a7:e2:35:ec:7e:3b:\n         45:ce:30:46:52:6b:c0:c0\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate Structure for Let's Encrypt Staging Environment\nDESCRIPTION: A detailed X.509 certificate structure for a Let's Encrypt staging certificate named 'Counterfeit Cashew R10'. The certificate includes RSA public key information, various X.509v3 extensions, and a SHA-256 with RSA encryption signature.\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            81:1b:25:93:4c:45:ed:f5:de:93:c5:6c:f0:df:d4:04\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = (STAGING) Internet Security Research Group, CN = (STAGING) Pretend Pear X1\n        Validity\n            Not Before: Mar 13 00:00:00 2024 GMT\n            Not After : Mar 12 23:59:59 2027 GMT\n        Subject: C = US, O = (STAGING) Let's Encrypt, CN = (STAGING) Counterfeit Cashew R10\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\n                Modulus:\n                    00:9a:f3:34:5f:b6:1c:39:4f:8f:e7:f6:4b:76:8a:\n                    e3:71:6f:8c:ed:ef:ca:d1:dd:9c:a0:79:9b:e9:18:\n                    6c:7c:9c:c7:54:ee:3a:82:2d:e3:aa:92:ea:a1:28:\n                    1b:c1:57:cd:b7:7e:f0:34:6d:88:37:25:a0:a2:16:\n                    cc:81:e8:87:6b:cb:c7:95:64:b1:49:a7:70:6d:05:\n                    91:57:a5:b0:1b:ef:e4:02:60:b0:19:ad:49:79:ad:\n                    7d:c6:f5:5a:13:1b:fc:78:43:c6:bd:a4:de:7b:08:\n                    8d:f8:6e:62:65:29:a6:9e:7d:22:e8:79:e0:0e:02:\n                    b9:3c:7d:c5:77:fc:c9:13:40:75:86:fa:17:a1:f5:\n                    ec:74:a2:0a:f7:90:34:10:39:29:be:74:8d:78:87:\n                    3e:f9:78:7b:a2:57:6e:a4:a2:bc:be:b4:30:c1:37:\n                    5a:de:ef:a4:1f:f1:14:6d:37:19:e7:81:86:45:ad:\n                    b2:7d:20:ea:2f:14:96:b6:f3:07:86:39:55:de:90:\n                    e2:f8:24:9e:ff:55:d1:4c:31:c7:97:43:37:bc:33:\n                    ed:2a:9e:46:9a:8f:e1:cd:45:84:31:cf:43:75:81:\n                    e0:f7:72:54:ff:c6:b9:9e:de:02:f4:cb:9c:40:2a:\n                    35:fa:7a:ae:1d:5d:d2:6e:6a:ed:21:f7:45:45:4d:\n                    cd:c3\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n            X509v3 Extended Key Usage: \n                TLS Web Client Authentication, TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Subject Key Identifier: \n                A4:52:46:EA:58:A8:8F:68:D8:B7:B1:90:D1:4A:42:4A:8F:6B:28:71\n            X509v3 Authority Key Identifier: \n                B5:F3:65:F2:FE:B0:0A:92:1F:FB:3C:7D:F3:44:A0:AC:63:25:C3:14\n            Authority Information Access: \n                CA Issuers - URI:http://stg-x1.i.lencr.org/\n            X509v3 Certificate Policies: \n                Policy: 2.23.140.1.2.1\n            X509v3 CRL Distribution Points: \n                Full Name:\n                  URI:http://stg-x1.c.lencr.org/\n    Signature Algorithm: sha256WithRSAEncryption\n    Signature Value:\n        1e:1a:46:b7:ca:7a:40:99:3c:7e:73:34:cc:e4:b9:00:45:2e:\n        96:d7:10:3f:fd:b4:35:20:9d:06:92:31:01:fa:30:9d:df:b2:\n        95:4c:c7:da:cd:69:ae:5f:13:f6:b8:4a:cd:39:b8:c5:9f:8d:\n        06:a3:c4:0c:07:7f:d6:9e:5e:d4:f6:2a:47:c6:cd:9c:a2:5c:\n        4c:00:24:8c:16:2f:2a:8e:5b:af:49:e0:e8:65:24:09:04:ea:\n        27:76:ad:6c:0b:f1:d9:b8:21:75:fa:d4:2c:5e:be:bb:e7:f8:\n        a3:6f:3c:26:8e:a8:d6:43:76:25:fd:66:4d:74:ca:8b:61:91:\n        27:92:5e:ac:28:67:d1:d9:6c:db:c3:33:c7:c4:12:de:65:9f:\n        14:54:ae:f9:0b:86:c2:dc:4b:b7:2e:f2:4b:35:84:4c:7f:a5:\n        34:c6:bc:53:a3:1b:b5:2b:e8:59:ff:0e:63:33:54:67:b0:62:\n        87:a2:4a:9e:ea:38:b9:e1:bb:cd:18:ab:da:0a:3c:ca:03:5d:\n        66:85:87:86:69:3c:e1:cd:f9:00:11:fc:74:a5:fe:7c:a3:43:\n        2b:ac:73:7b:28:2d:6e:0b:89:37:6f:c3:d6:7e:f6:45:02:bc:\n        c3:b8:17:8d:3e:e9:b6:98:44:a3:19:b1:7b:e6:52:43:55:c4:\n        a0:a5:2f:23:f5:f2:d8:3f:05:ff:9f:9b:e1:4c:60:f3:14:8d:\n        7a:ff:cd:f8:4f:45:fd:e9:ef:dc:fa:7b:cd:02:6d:fc:be:1d:\n        86:75:0c:a2:aa:9b:00:e8:9f:38:4f:25:fc:27:4d:40:72:af:\n        d4:e2:64:35:88:9a:27:ec:5f:c7:e6:7d:c1:4c:38:cd:1b:e3:\n        b8:3d:b7:10:ae:36:1a:30:9f:b0:ad:09:36:e1:db:f7:c2:c0:\n        98:30:45:f9:77:ea:f8:f9:47:38:66:53:2e:59:a7:33:bd:89:\n        9a:3b:e2:e4:82:7f:ba:8e:69:33:64:1b:99:ab:94:32:57:b8:\n        b5:9c:2a:d7:58:a9:46:cd:01:82:06:58:d1:f1:c5:2b:fe:c0:\n        c5:78:ff:8f:73:d0:64:06:e7:2d:2a:3f:f7:1f:d8:50:ae:9a:\n        47:53:46:65:80:52:71:fc:05:09:f6:c4:30:db:97:07:52:89:\n        26:f9:ff:79:03:fb:4d:b5:52:ae:ab:2b:b0:7a:64:00:0c:c0:\n        1e:f0:e4:85:4a:5c:b5:d3:7c:05:f8:e3:ca:58:f8:a7:d0:f4:\n        cc:6a:6a:cf:b4:4c:77:81:0a:9c:2f:8a:eb:06:80:46:dd:fe:\n        71:8d:39:9f:3a:bb:b8:5d:f8:e1:e6:a6:b5:c0:22:f1:fe:a1:\n        de:1f:6f:42:57:16:38:08\n```\n\n----------------------------------------\n\nTITLE: Displaying Sponsor Logos with HTML Grid Layout\nDESCRIPTION: HTML code that creates a responsive grid container to display sponsor logos with proper attribution. Each logo is linked to the sponsor's website and includes appropriate alt text for accessibility.\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"grid-container\">\n        <div class=\"text-center home_sponsors\">\n                <a href=\"https://www.akamai.com\"><img src=\"/images/sponsors/small/akamai-logo.png\" alt=\"Akamai\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.cisco.com\"><img src=\"/images/sponsors/small/cisco-logo.png\" alt=\"Cisco\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.mozilla.org\"><img src=\"/images/sponsors/small/mozilla-logo.png\" alt=\"Mozilla\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.google.com/chrome\"><img src=\"/images/sponsors/small/chrome-logo.png\" alt=\"Google Chrome\" rel=\"nofollow\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.ovh.com\"><img src=\"/images/sponsors/small/ovh-logo.png\" alt=\"OVH\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.internetsociety.org\"><img src=\"/images/sponsors/small/isoc-logo.png\" alt=\"Internet Society\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.shopify.com\"><img src=\"/images/sponsors/small/shopify-logo.png\" alt=\"shopify\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.hostpoint.ch\"><img src=\"/images/sponsors/small/hostpoint-logo.png\" alt=\"HostPoint\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.siteground.com\"><img src=\"/images/sponsors/small/siteground-logo.png\" alt=\"SiteGround\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.cyon.ch\"><img src=\"/images/sponsors/small/cyon-logo.png\" alt=\"Cyon\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.identrust.com\"><img src=\"/images/sponsors/small/identrust-logo.png\" alt=\"IdenTrust\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.vultr.com\"><img src=\"/images/sponsors/small/vultr-logo.png\" alt=\"Vultr\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://automattic.com\"><img src=\"/images/sponsors/small/automattic-logo.png\" alt=\"Automattic\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.eff.org\"><img src=\"/images/sponsors/small/eff-logo.png\" alt=\"Electronic Frontier Foundation\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.infomaniak.ch\"><img src=\"/images/sponsors/small/infomaniak-logo.png\" alt=\"Infomaniak\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.planethoster.com\"><img src=\"/images/sponsors/small/planethoster-logo.png\" alt=\"Hébergement web\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n                <a href=\"https://www.discourse.org\"><img src=\"/images/sponsors/small/discourse-logo.png\" alt=\"Discourse\" width=\"80\" height=\"48\" class=\"sponsor-logo-small\"></a>\n        </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Let's Encrypt Contact Page\nDESCRIPTION: YAML front matter that defines metadata for a contact page. It specifies the slug 'contact' for URL generation and sets 'untranslated' to 1, indicating this page doesn't have translations.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: contact\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Privacy Policy Page\nDESCRIPTION: YAML frontmatter defining metadata for the privacy policy page of Let's Encrypt. It sets the slug as 'privacy', marks the content as untranslated, and designates English as the canonical language.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Privacy Policy Page Metadata in YAML\nDESCRIPTION: This code snippet defines metadata for the privacy policy page on the Let's Encrypt website. It specifies the slug as 'privacy', marks the content as untranslated, and designates English as the canonical version.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: privacy\nuntranslated: 1\nenglish_is_canonical: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for Certificate Documentation\nDESCRIPTION: YAML frontmatter that defines metadata for a documentation page about certificates. It specifies the URL slug as 'certificates' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: certificates\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Let's Encrypt Thank You Page\nDESCRIPTION: YAML frontmatter that defines metadata for a static page. It specifies a URL slug of 'thankyou' and sets an 'untranslated' flag to 1, indicating this page should remain in its original language.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: thankyou\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Setting up Certbot with Let's Encrypt Staging Environment\nDESCRIPTION: Command for running Certbot with the Let's Encrypt staging environment to test certificate issuance without hitting production rate limits.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot --staging ...\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration for Let's Encrypt Staging Environment Page\nDESCRIPTION: This markdown frontmatter snippet defines metadata for a page about Let's Encrypt's staging environment. It specifies the URL slug as 'staging-environment' and marks the content as untranslated with a flag value of 1.\n\nLANGUAGE: markdown\nCODE:\n```\n---\nslug: staging-environment\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Blog Page Settings in YAML for Hugo CMS\nDESCRIPTION: YAML frontmatter that defines configuration for the blog section of the Let's Encrypt website. It sets the page title as 'Blog', defines the URL path as '/blog/', and configures the menu placement with a weight of 100 under the 'about' parent section.\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Blog\nurl: \"/blog/\"\nmenu:\n  main:\n    weight: 100\n    parent: about\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic CAA Records for DNS\nDESCRIPTION: Example of basic CAA DNS record configuration allowing Let's Encrypt to issue certificates for a domain. The record uses the issuewild property to allow wildcard certificates.\n\nLANGUAGE: dns\nCODE:\n```\nexample.com. IN CAA 0 issue \"letsencrypt.org\"\nexample.com. IN CAA 0 issuewild \"letsencrypt.org\"\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for CAA Documentation Page\nDESCRIPTION: YAML front matter that defines metadata for a documentation page about CAA (Certificate Authority Authorization) records. It specifies the slug 'caa' for URL generation and marks the content as untranslated with flag '1'.\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: caa\nuntranslated: 1\n---\n```\n\n----------------------------------------\n\nTITLE: CSV format for TLS-ALPN-01 incident affected certificates data\nDESCRIPTION: Example of the CSV format used in the gzipped file containing affected certificates data. Each row includes account ID, certificate serial number, expiration time, and DNS hostnames for which the certificate was issued.\n\nLANGUAGE: csv\nCODE:\n```\n123456,\"03e1ce2c0324f9ca93417fc8886f87f34857\",\"2022-02-25T18:25:29Z\",\"letsencrypt.org\",\"www.letsencrypt.org\",\"status.letsencrypt.org\"\n```\n\n----------------------------------------\n\nTITLE: MPL 2.0 Incompatible With Secondary Licenses Notice\nDESCRIPTION: The notice that must be attached when distributing Source Code Form that is incompatible with Secondary Licenses under MPL 2.0. This is required as mentioned in section 10.4.\n\nLANGUAGE: text\nCODE:\n```\nThis Source Code Form is \"Incompatible With Secondary Licenses\", as\ndefined by the Mozilla Public License, v. 2.0.\n```"
  }
]
[
  {
    "owner": "apache",
    "repo": "velocity-engine",
    "content": "TITLE: Conditional Logic in Custom Velocity Syntax\nDESCRIPTION: Shows conditional statement implementation using @if/@else/@end structure instead of traditional #if syntax.\nSOURCE: https://github.com/apache/velocity-engine/blob/master/velocity-custom-parser-example/src/test/resources/templates/test.md#2025-04-21_snippet_1\n\nLANGUAGE: velocity\nCODE:\n```\n@if ($some == 'value')\n  all seems fine\n@else\n  there is a problem\n@end\n```\n\n----------------------------------------\n\nTITLE: Custom Macro Definition and Usage\nDESCRIPTION: Demonstrates macro definition with parameters and body content using @macro syntax, followed by macro invocation.\nSOURCE: https://github.com/apache/velocity-engine/blob/master/velocity-custom-parser-example/src/test/resources/templates/test.md#2025-04-21_snippet_2\n\nLANGUAGE: velocity\nCODE:\n```\n@macro(block $foo)\n  block macro called with foo=$foo and bodyContent=$bodyContent\n@end\n\n@%block($some)\nhere\n@end\n```\n\n----------------------------------------\n\nTITLE: Setting Template Variables in Velocity Custom Syntax\nDESCRIPTION: Demonstrates setting a template variable using custom @set syntax instead of traditional #set.\nSOURCE: https://github.com/apache/velocity-engine/blob/master/velocity-custom-parser-example/src/test/resources/templates/test.md#2025-04-21_snippet_0\n\nLANGUAGE: velocity\nCODE:\n```\n@set ($subtitle = 'Custom parser is needed')\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Block Macro Usage in Velocity\nDESCRIPTION: This snippet shows how a block macro is called in Velocity, passing parameters 'foo' and 'bodyContent'. It illustrates the syntax for invoking macros with both named parameters and body content.\nSOURCE: https://github.com/apache/velocity-engine/blob/master/velocity-custom-parser-example/src/test/resources/reference/test.md#2025-04-21_snippet_0\n\nLANGUAGE: velocity\nCODE:\n```\nblock macro called with foo=value and bodyContent=here\n```\n\n----------------------------------------\n\nTITLE: Configuring VelocityEngineFactoryBean in Spring XML\nDESCRIPTION: This XML configuration sets up a VelocityEngineFactoryBean with ClasspathResourceLoader. It defines the resource loader and its class for Velocity engine integration with Spring.\nSOURCE: https://github.com/apache/velocity-engine/blob/master/spring-velocity-support/README.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<bean id=\"velocityEngine\"\n    class=\"org.apache.velocity.spring.VelocityEngineFactoryBean\">\n    <property name=\"velocityProperties\">\n        <props>\n            <prop key=\"resource.loaders\">class</prop>\n            <prop key=\"class.resource.loader.class\">\n                org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader\n            </prop>\n        </props>\n    </property>\n</bean>\n```\n\n----------------------------------------\n\nTITLE: Testing Velocity Templates with Shell Script\nDESCRIPTION: Convenience script for command-line testing of .vm template files. Not intended to replace the main engine testing suite.\nSOURCE: https://github.com/apache/velocity-engine/blob/master/velocity-engine-core/src/test/resources/misc/README.txt#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n./test.sh ../templates/test.vm\n```\n\n----------------------------------------\n\nTITLE: Dumping Velocity AST with Shell Script\nDESCRIPTION: Shell script to generate and display a text representation of the Abstract Syntax Tree (AST) for Velocity templates.\nSOURCE: https://github.com/apache/velocity-engine/blob/master/velocity-engine-core/src/test/resources/misc/README.txt#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n./dump.sh ../templates/test.vm\n```\n\n----------------------------------------\n\nTITLE: Displaying Apache Velocity Directory Structure\nDESCRIPTION: Shows the main directory structure of the Apache Velocity Engine project, including the core module, examples, scripting support, Spring framework integration, and parent module sources.\nSOURCE: https://github.com/apache/velocity-engine/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nvelocity-engine-core/       The Velocity Engine core module\nvelocity-engine-examples/   Several simple examples\nvelocity-engine-scripting/  JSR-223 implementation for Velocity scripting\nspring-velocity-support     Velocity Engine factory bean for Spring framework\nsrc/                        Source for parent modules, mainly changelog\n```\n\n----------------------------------------\n\nTITLE: Incomplete foreach Loop in Velocity Template\nDESCRIPTION: A Velocity template with an intentionally incorrect foreach loop that's missing the closing parenthesis. This can be used to test error handling in the Velocity Engine.\nSOURCE: https://github.com/apache/velocity-engine/blob/master/velocity-engine-core/src/test/resources/includeerror/haserror.txt#2025-04-21_snippet_0\n\nLANGUAGE: velocity\nCODE:\n```\n#foreach($i in (1..10)\n\n$i\n```\n\n----------------------------------------\n\nTITLE: Defining Velocity Macro with Syntax Error\nDESCRIPTION: Demonstrates a Velocity macro definition with a parameter list and a syntax error. The macro takes two parameters: a string argument and a list, but the closing parenthesis is missing in the macro call.\nSOURCE: https://github.com/apache/velocity-engine/blob/master/velocity-engine-core/src/test/resources/includeerror/haserror2.txt#2025-04-21_snippet_0\n\nLANGUAGE: Velocity\nCODE:\n```\n#macro (myMacro $arg1 $list)\nThis is text from velPTest2.vm\n#myMacro('name', ['apples', 'oranges']\nMore text\n```\n\n----------------------------------------\n\nTITLE: Compiling Velocity Templates with Shell Script\nDESCRIPTION: Shell script to compile .vm template files into .class files. Note: Currently non-functional.\nSOURCE: https://github.com/apache/velocity-engine/blob/master/velocity-engine-core/src/test/resources/misc/README.txt#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./compile.sh ../templates/test.vm\n```"
  }
]
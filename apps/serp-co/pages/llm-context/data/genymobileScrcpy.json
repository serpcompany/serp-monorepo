[
  {
    "owner": "genymobile",
    "repo": "scrcpy",
    "content": "TITLE: Installing Scrcpy using Chocolatey on Windows\nDESCRIPTION: Commands to install Scrcpy and ADB (if needed) using the Chocolatey package manager on Windows.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/windows.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nchoco install scrcpy\nchoco install adb    # if you don't have it yet\n```\n\n----------------------------------------\n\nTITLE: Running Scrcpy with H.265 Video Encoding and Custom Settings in Bash\nDESCRIPTION: This command launches scrcpy with H.265 video codec for better quality, limits screen size to 1920, caps frame rate at 60fps, disables audio, and simulates a physical keyboard for device control. Both the full command and a shortened version with equivalent flags are shown.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --video-codec=h265 --max-size=1920 --max-fps=60 --no-audio --keyboard=uhid\nscrcpy --video-codec=h265 -m1920 --max-fps=60 --no-audio -K  # short version\n```\n\n----------------------------------------\n\nTITLE: Using Android Camera as a Linux Webcam with Scrcpy in Bash\nDESCRIPTION: This command captures the device's front camera at 1920x1080 resolution and makes it available as a webcam on the Linux system through the V4L2 interface without displaying the video on the computer screen.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --video-source=camera --camera-size=1920x1080 --camera-facing=front --v4l2-sink=/dev/video2 --no-playback\n```\n\n----------------------------------------\n\nTITLE: Building scrcpy from Source\nDESCRIPTION: Commands to build scrcpy from source using Meson and Ninja. The build must be run as a non-root user for security reasons.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nmeson setup x --buildtype=release --strip -Db_lto=true\nninja -Cx  # DO NOT RUN AS ROOT\n```\n\n----------------------------------------\n\nTITLE: Recording Device Camera and Microphone with Scrcpy in Bash\nDESCRIPTION: This command records the device camera using H.265 encoding at 1920x1080 resolution along with microphone audio to an MP4 file.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --video-source=camera --video-codec=h265 --camera-size=1920x1080 --record=file.mp4\n```\n\n----------------------------------------\n\nTITLE: Controlling Android Device in OTG Mode with Scrcpy in Bash\nDESCRIPTION: This command enables OTG mode, which allows controlling the device without mirroring by simulating a physical keyboard and mouse. This mode doesn't require USB debugging to be enabled on the device.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --otg\n```\n\n----------------------------------------\n\nTITLE: Cloning the scrcpy Repository\nDESCRIPTION: Commands to clone the scrcpy repository from GitHub as a non-root user, which is the first common step for all platforms.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Genymobile/scrcpy\ncd scrcpy\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Scrcpy on Debian/Ubuntu\nDESCRIPTION: Installs required system packages and development dependencies for building scrcpy on Debian-based systems.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/linux.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install ffmpeg libsdl2-2.0-0 adb wget \\\n                 gcc git pkg-config meson ninja-build libsdl2-dev \\\n                 libavcodec-dev libavdevice-dev libavformat-dev libavutil-dev \\\n                 libswresample-dev libusb-1.0-0 libusb-1.0-0-dev\n```\n\n----------------------------------------\n\nTITLE: Installing scrcpy System-Wide\nDESCRIPTION: Command to install scrcpy on the system after building. This installs the binary, server, manpage, icon, and shell completions.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nsudo ninja -Cx install    # without sudo on Windows\n```\n\n----------------------------------------\n\nTITLE: Installing Scrcpy via Homebrew on macOS\nDESCRIPTION: Commands to install Scrcpy using the Homebrew package manager on macOS.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/macos.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbrew install scrcpy\n```\n\n----------------------------------------\n\nTITLE: Starting an App in a Virtual Display with Scrcpy in Bash\nDESCRIPTION: This command creates a new virtual display with resolution 1920x1080 and launches the VLC app on this display, separate from the device's physical display.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --new-display=1920x1080 --start-app=org.videolan.vlc\n```\n\n----------------------------------------\n\nTITLE: Selecting a Device by Serial Number in Bash\nDESCRIPTION: This snippet demonstrates how to select a specific Android device for scrcpy by its serial number or IP address using command-line arguments.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/connection.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --serial=0123456789abcdef\nscrcpy -s 0123456789abcdef   # short version\n\n# the serial is the ip:port if connected over TCP/IP (same behavior as adb)\nscrcpy --serial=192.168.1.1:5555\n```\n\n----------------------------------------\n\nTITLE: Installing Scrcpy using Scoop on Windows\nDESCRIPTION: Commands to install Scrcpy and ADB (if needed) using the Scoop package manager on Windows.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/windows.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscoop install scrcpy\nscoop install adb    # if you don't have it yet\n```\n\n----------------------------------------\n\nTITLE: Control-Only Mode in Scrcpy\nDESCRIPTION: Commands to control the device without video or audio mirroring, useful for remote control with minimal bandwidth.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/control.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-video --no-audio\n```\n\n----------------------------------------\n\nTITLE: Executing scrcpy Server on Android Device\nDESCRIPTION: Commands to push the server JAR to the device, set up port forwarding, and execute the server process with the specified classpath and main class.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/develop.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nadb push scrcpy-server /data/local/tmp/scrcpy-server.jar\nadb forward tcp:27183 localabstract:scrcpy\nadb shell CLASSPATH=/data/local/tmp/scrcpy-server.jar app_process / com.genymobile.scrcpy.Server 2.1\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies on macOS with Homebrew\nDESCRIPTION: Commands to install runtime and build dependencies for scrcpy on macOS using the Homebrew package manager.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# runtime dependencies\nbrew install sdl2 ffmpeg libusb\n\n# client build dependencies\nbrew install pkg-config meson\n```\n\n----------------------------------------\n\nTITLE: Basic Video and Audio Recording in Scrcpy\nDESCRIPTION: Commands to record both video and audio streams while mirroring the screen. Supports MP4 and MKV formats.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/recording.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --record=file.mp4\nscrcpy -r file.mkv\n```\n\n----------------------------------------\n\nTITLE: Installing 32-bit Dependencies in MSYS2\nDESCRIPTION: Commands to install runtime and build dependencies for scrcpy in MSYS2 environment on Windows, targeting 32-bit builds.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# runtime dependencies\npacman -S mingw-w64-i686-SDL2 \\\n          mingw-w64-i686-ffmpeg \\\n          mingw-w64-i686-libusb\n\n# client build dependencies\npacman -S mingw-w64-i686-make \\\n          mingw-w64-i686-gcc \\\n          mingw-w64-i686-pkg-config \\\n          mingw-w64-i686-meson\n```\n\n----------------------------------------\n\nTITLE: Creating a custom batch file for Scrcpy with specific arguments\nDESCRIPTION: Example of how to create a batch file with custom arguments for Scrcpy, allowing quick launch with preferred settings.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/windows.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --prefer-text --turn-screen-off --stay-awake\n```\n\n----------------------------------------\n\nTITLE: Preventing Device Sleep with scrcpy\nDESCRIPTION: Commands to prevent the device from sleeping when plugged in. The --stay-awake or -w flag modifies the stay_on_while_plugged_in Android setting while scrcpy is running.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --stay-awake\nscrcpy -w\n```\n\n----------------------------------------\n\nTITLE: Powering Off Device on scrcpy Close\nDESCRIPTION: Command to automatically turn off the device screen when closing the scrcpy application.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --power-off-on-close\n```\n\n----------------------------------------\n\nTITLE: Executing scrcpy Server with Custom Options\nDESCRIPTION: Example of executing the scrcpy server with specific options like disabling audio and setting maximum size. The server version and a unique client ID are also provided.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/develop.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nadb shell CLASSPATH=/data/local/tmp/scrcpy-server.jar app_process / com.genymobile.scrcpy.Server 2.1 scid=12345678 log_level=info audio=false max_size=1920\n```\n\n----------------------------------------\n\nTITLE: Listing and Selecting Video Encoders in scrcpy (Bash)\nDESCRIPTION: Lists available encoders on the device and demonstrates how to select a specific encoder, which can be useful if the default encoder has issues.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --list-encoders\n\nscrcpy --video-codec=h264 --video-encoder=OMX.qcom.video.encoder.avc\n```\n\n----------------------------------------\n\nTITLE: Connecting to Specific IP and Port in Bash\nDESCRIPTION: This snippet demonstrates how to connect scrcpy to a device at a specific IP address and port, with an option to force reconnection.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/connection.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --tcpip=192.168.1.1       # default port is 5555\nscrcpy --tcpip=192.168.1.1:5555\n\nscrcpy --tcpip=+192.168.1.1\n```\n\n----------------------------------------\n\nTITLE: Manual TCP/IP Connection Steps in Bash\nDESCRIPTION: This snippet outlines the manual steps to enable and use a TCP/IP connection for adb and scrcpy, including enabling the mode, connecting, and disconnecting.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/connection.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nadb tcpip 5555\nadb connect DEVICE_IP:5555\nscrcpy\nadb disconnect\n```\n\n----------------------------------------\n\nTITLE: Connecting to TCP/IP Device in Bash\nDESCRIPTION: This code demonstrates how to connect to an Android device already listening on a specific IP address and port for TCP/IP connections.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/connection.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --tcpip=192.168.1.1:5555\nscrcpy --tcpip=192.168.1.1        # default port is 5555\n```\n\n----------------------------------------\n\nTITLE: Using Computer Gamepad Controllers with Scrcpy in Bash\nDESCRIPTION: This command enables control of the Android device using gamepad controllers connected to the computer, simulating HID devices. Both the full command and the shortened version are shown.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --gamepad=uhid\nscrcpy -G  # short version\n```\n\n----------------------------------------\n\nTITLE: Running scrcpy Without Installing\nDESCRIPTION: Command to run scrcpy directly after building without installing it system-wide, useful for testing or development.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n./run x [options]\n```\n\n----------------------------------------\n\nTITLE: Starting Specific Android Apps with scrcpy\nDESCRIPTION: Commands to launch a specific Android application when starting scrcpy, identified by package name or app name.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --start-app=org.mozilla.firefox\n```\n\n----------------------------------------\n\nTITLE: Basic Camera Source Configuration in Scrcpy\nDESCRIPTION: Basic commands to enable camera capture and configure video/audio sources in Scrcpy. Demonstrates switching between display and camera sources with audio options.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/camera.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --video-source=camera\n\nscrcpy --video-source=display  # default is --audio-source=output\nscrcpy --video-source=camera   # default is --audio-source=mic\nscrcpy --video-source=display --audio-source=mic    # force display AND microphone\nscrcpy --video-source=camera --audio-source=output  # force camera AND device audio output\n```\n\n----------------------------------------\n\nTITLE: Targeting Specific Device by Serial Number in scrcpy\nDESCRIPTION: Command to connect scrcpy to a specific Android device when multiple devices are connected, using the device serial number.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/FAQ.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy -s 0123456789abcdef\n```\n\n----------------------------------------\n\nTITLE: Camera Size and Aspect Ratio Configuration\nDESCRIPTION: Commands showing various ways to configure camera resolution and aspect ratio settings.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/camera.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --video-source=camera --camera-size=1920x1080\n\nscrcpy --video-source=camera --camera-size=1840x444\n\nscrcpy --video-source=camera                          # use the greatest width and the greatest associated height\nscrcpy --video-source=camera -m1920                   # use the greatest width not above 1920 and the greatest associated height\nscrcpy --video-source=camera --camera-ar=4:3          # use the greatest size with an aspect ratio of 4:3 (+/- 10%)\nscrcpy --video-source=camera --camera-ar=1.6          # use the greatest size with an aspect ratio of 1.6 (+/- 10%)\nscrcpy --video-source=camera --camera-ar=sensor       # use the greatest size with the aspect ratio of the camera sensor (+/- 10%)\nscrcpy --video-source=camera -m1920 --camera-ar=16:9  # use the greatest width not above 1920 and the closest to 16:9 aspect ratio\n\nscrcpy --video-source=camera --camera-size=1920x1080 -m3000  # error\n```\n\n----------------------------------------\n\nTITLE: Selecting Video Codec in scrcpy (Bash)\nDESCRIPTION: Chooses the video codec for encoding. Supports h264 (default), h265, and av1. H265 may provide better quality, while H264 offers lower latency.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --video-codec=h264  # default\nscrcpy --video-codec=h265\nscrcpy --video-codec=av1\n```\n\n----------------------------------------\n\nTITLE: Running Scrcpy with Custom Arguments\nDESCRIPTION: Example of running scrcpy with specific arguments to disable audio and record to a file.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/linux.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-audio --record=file.mkv\n```\n\n----------------------------------------\n\nTITLE: Configuring Scrcpy Shortcut Modifiers\nDESCRIPTION: Examples showing how to customize the shortcut modifier key in scrcpy using the --shortcut-mod parameter. Demonstrates setting single and multiple modifier keys.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/shortcuts.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# use RCtrl for shortcuts\nscrcpy --shortcut-mod=rctrl\n\n# use either LCtrl or LSuper for shortcuts\nscrcpy --shortcut-mod=lctrl,lsuper\n```\n\n----------------------------------------\n\nTITLE: Setting Display Orientation in scrcpy (Bash)\nDESCRIPTION: Sets the orientation of the video on the client side. Affects both display and recording. Supports various angles and flipping options.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --orientation=0\nscrcpy --orientation=90       # 90° clockwise\nscrcpy --orientation=180      # 180°\nscrcpy --orientation=270      # 270° clockwise\nscrcpy --orientation=flip0    # hflip\nscrcpy --orientation=flip90   # hflip + 90° clockwise\nscrcpy --orientation=flip180  # vflip (hflip + 180°)\nscrcpy --orientation=flip270  # hflip + 270° clockwise\n```\n\n----------------------------------------\n\nTITLE: Encoder Management Commands\nDESCRIPTION: Commands for listing and selecting specific audio encoders.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/audio.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --list-encoders\n```\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-codec=opus --audio-encoder='c2.android.opus.encoder'\n```\n\n----------------------------------------\n\nTITLE: Configuring Mouse Button Bindings in scrcpy\nDESCRIPTION: Examples of how to configure mouse button bindings using the --mouse-bind parameter with different configurations for primary and secondary (Shift) clicks.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/mouse.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --mouse-bind=bhsn:++++  # the default mode for SDK mouse\nscrcpy --mouse-bind=++++:bhsn  # the default mode for AOA and UHID\nscrcpy --mouse-bind=++bh:++sn  # forward right and middle clicks,\n                               # use 4th and 5th for BACK and HOME,\n                               # use Shift+4th and Shift+5th for APP_SWITCH\n                               # and expand notification panel\n```\n\n----------------------------------------\n\nTITLE: Enabling UHID Gamepad Mode in scrcpy\nDESCRIPTION: This command enables the UHID gamepad mode in scrcpy, which simulates physical HID gamepads using the UHID kernel module on the device. It can be used with either the long or short version of the command.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/gamepad.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --gamepad=uhid\nscrcpy -G  # short version\n```\n\n----------------------------------------\n\nTITLE: Disabling Audio in Scrcpy\nDESCRIPTION: Command to disable audio forwarding in Scrcpy sessions.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/audio.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-audio\n```\n\n----------------------------------------\n\nTITLE: Camera Listing Commands\nDESCRIPTION: Commands to list available cameras and their supported sizes/frame rates on the device.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/camera.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --list-cameras\nscrcpy --list-camera-sizes\n```\n\n----------------------------------------\n\nTITLE: Configuring Video Buffering in scrcpy (Bash)\nDESCRIPTION: Adds buffering to delay the video stream and compensate for jitter, resulting in smoother playback. Buffering can be set independently for display, v4l2 sinks, and audio playback.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --video-buffer=50     # add 50ms buffering for video playback\nscrcpy --audio-buffer=200    # set 200ms buffering for audio playback\nscrcpy --v4l2-buffer=300     # add 300ms buffering for v4l2 sink\n\nscrcpy --video-buffer=50 --v4l2-buffer=300\n```\n\n----------------------------------------\n\nTITLE: Autostarting scrcpy with AutoAdb in Bash\nDESCRIPTION: This code demonstrates how to use AutoAdb to automatically start scrcpy when a new Android device is connected.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/connection.md#2025-04-19_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nautoadb scrcpy -s '{}'\n```\n\n----------------------------------------\n\nTITLE: Listing available v4l2 video devices\nDESCRIPTION: Commands to list all available video devices in the system, either using v4l2-ctl from v4l-utils package or a simple ls command.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/v4l2.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# requires v4l-utils package\nv4l2-ctl --list-devices\n\n# simple but might be sufficient\nls /dev/video*\n```\n\n----------------------------------------\n\nTITLE: Automatic TCP/IP Connection in Bash\nDESCRIPTION: This code shows how to automatically configure a TCP/IP connection for scrcpy, including finding the device IP and enabling TCP/IP mode if necessary.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/connection.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --tcpip   # without arguments\n```\n\n----------------------------------------\n\nTITLE: Selecting Display for Mirroring in scrcpy (Bash)\nDESCRIPTION: Selects a specific display to mirror when multiple displays are available on the Android device. Also shows how to list available displays.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --display-id=1\n\nscrcpy --list-displays\n```\n\n----------------------------------------\n\nTITLE: Camera Selection and Facing Configuration\nDESCRIPTION: Commands for selecting specific cameras by ID or facing direction (front/back/external).\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/camera.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --video-source=camera --camera-id=0\n\nscrcpy --video-source=camera                           # use the first camera\nscrcpy --video-source=camera --camera-facing=front     # use the first front camera\nscrcpy --video-source=camera --camera-facing=back      # use the first back camera\nscrcpy --video-source=camera --camera-facing=external  # use the first external camera\n\nscrcpy --video-source=camera --camera-id=0 --camera-facing=front  # error\n```\n\n----------------------------------------\n\nTITLE: Audio Configuration with Camera Source\nDESCRIPTION: Commands for managing audio settings when using camera capture, including disabling audio and configuring recording options.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/camera.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# audio not captured at all\nscrcpy --video-source=camera --no-audio\nscrcpy --video-source=camera --no-audio --record=file.mp4\n\n# audio captured and recorded, but not played\nscrcpy --video-source=camera --no-audio-playback --record=file.mp4\n```\n\n----------------------------------------\n\nTITLE: Enabling UHID Keyboard and Mouse in Control-Only Mode\nDESCRIPTION: Commands to use both UHID keyboard and mouse when controlling a device without video mirroring.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/control.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-video --no-audio --mouse=uhid --keyboard=uhid\nscrcpy --no-video --no-audio -MK  # short version\n```\n\n----------------------------------------\n\nTITLE: Establishing SSH Tunnel\nDESCRIPTION: Command to create an SSH tunnel for secure remote ADB connection with bidirectional port forwarding.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nssh -CN -L5038:localhost:5037 -R27183:localhost:27183 your_remote_computer\n```\n\n----------------------------------------\n\nTITLE: Audio Codec Selection\nDESCRIPTION: Commands for selecting different audio codecs including opus, aac, flac, and raw.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/audio.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-codec=opus\n```\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-codec=aac\n```\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-codec=flac\n```\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-codec=raw\n```\n\n----------------------------------------\n\nTITLE: Opening v4l2 video stream with media players\nDESCRIPTION: Commands to open and view the v4l2 video stream using ffplay or VLC media players after scrcpy has been configured as the video source.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/v4l2.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nffplay -i /dev/videoN\nvlc v4l2:///dev/videoN   # VLC might add some buffering delay\n```\n\n----------------------------------------\n\nTITLE: Time-Limited Recording and Mirroring\nDESCRIPTION: Commands to set time limits for recording and mirroring sessions in seconds.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/recording.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --record=file.mkv --time-limit=20  # in seconds\n\nscrcpy --time-limit=20\n```\n\n----------------------------------------\n\nTITLE: Audio Duplication Configuration\nDESCRIPTION: Commands for enabling audio duplication on Android 13+ devices.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/audio.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-source=playback --audio-dup\n```\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-dup\n```\n\n----------------------------------------\n\nTITLE: Disabling Device Controls in Scrcpy\nDESCRIPTION: Commands to disable all device controls (input keys, mouse events, file transfers) while still mirroring the screen.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/control.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-control\nscrcpy -n   # short version\n```\n\n----------------------------------------\n\nTITLE: Loading v4l2loopback module with exclusive_caps for WebRTC compatibility\nDESCRIPTION: Command to load the v4l2loopback module with exclusive_caps option enabled, which helps with Chrome/WebRTC device detection.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/v4l2.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo modprobe v4l2loopback exclusive_caps=1\n```\n\n----------------------------------------\n\nTITLE: Configuring Video Bit Rate in scrcpy (Bash)\nDESCRIPTION: Sets the video bit rate to 2 Mbps. This can be specified in different formats as shown in the example.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --video-bit-rate=2M\nscrcpy --video-bit-rate=2000000  # equivalent\nscrcpy -b 2M                     # short version\n```\n\n----------------------------------------\n\nTITLE: Basic Scrcpy Usage Command\nDESCRIPTION: Basic command to run Scrcpy with default settings on macOS.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/macos.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Enabling OTG Mode in scrcpy\nDESCRIPTION: Command to enable OTG mode in scrcpy. It allows specifying a device serial if multiple USB devices are connected.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/otg.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --otg\n# Pass the serial if several USB devices are available\nscrcpy --otg -s 0123456789abcdef\n```\n\n----------------------------------------\n\nTITLE: Enabling AOA Gamepad Mode in scrcpy\nDESCRIPTION: This command enables the AOA gamepad mode in scrcpy, which simulates physical HID gamepads using the AOAv2 protocol. This mode works at the USB level directly and does not require USB debugging.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/gamepad.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --gamepad=aoa\n```\n\n----------------------------------------\n\nTITLE: Turning Device Screen Off at scrcpy Startup\nDESCRIPTION: Commands to start scrcpy with the device screen turned off while still mirroring the content to the computer.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --turn-screen-off\nscrcpy -S   # short version\n```\n\n----------------------------------------\n\nTITLE: Limiting Frame Rate in scrcpy (Bash)\nDESCRIPTION: Limits the capture frame rate to 15 fps. Also shows how to print the actual capture frame rate to the console.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --max-fps=15\n\nscrcpy --print-fps\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Video Size in scrcpy (Bash)\nDESCRIPTION: Limits both width and height of the mirrored video to a maximum value of 1024 pixels while preserving the aspect ratio.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --max-size=1024\nscrcpy -m 1024   # short version\n```\n\n----------------------------------------\n\nTITLE: Creating New Virtual Displays with Scrcpy\nDESCRIPTION: Examples of creating virtual displays with different size and DPI configurations. Shows various ways to specify display dimensions and density.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/virtual_display.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --new-display=1920x1080\nscrcpy --new-display=1920x1080/420  # force 420 dpi\nscrcpy --new-display         # use the main display size and density\nscrcpy --new-display=/240    # use the main display size and 240 dpi\n```\n\n----------------------------------------\n\nTITLE: Starting scrcpy in Fullscreen Mode (Bash)\nDESCRIPTION: These commands start scrcpy directly in fullscreen mode. The first command uses the full option name, while the second uses a short version.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/window.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --fullscreen\nscrcpy -f   # short version\n```\n\n----------------------------------------\n\nTITLE: Audio-Only Recording with Different Codecs\nDESCRIPTION: Commands to record only audio using various codecs including opus, aac, flac, and raw formats.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/recording.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-video --record=file.opus\nscrcpy --no-video --audio-codec=aac --record=file.aac\nscrcpy --no-video --audio-codec=flac --record=file.flac\nscrcpy --no-video --audio-codec=raw --record=file.wav\n# .m4a/.mp4 and .mka/.mkv are also supported for opus, aac and flac\n```\n\n----------------------------------------\n\nTITLE: Enabling UHID Mouse in Control-Only Mode\nDESCRIPTION: Commands to enable relative mouse control using UHID mode when video is disabled, allowing for more precise input control.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/control.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-video --no-audio --mouse=uhid\nscrcpy --no-video --no-audio -M  # short version\n```\n\n----------------------------------------\n\nTITLE: Starting Apps on Virtual Display\nDESCRIPTION: Commands to launch specific Android applications on the virtual display, including examples with VLC and Fossify Launcher.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/virtual_display.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --new-display=1920x1080 --start-app=org.videolan.vlc\nscrcpy --new-display=1920x1080 --no-vd-system-decorations --start-app=org.fossify.home\n```\n\n----------------------------------------\n\nTITLE: Video-Only Recording in Scrcpy\nDESCRIPTION: Command to record only the video stream without audio.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/recording.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-audio --record=file.mp4\n```\n\n----------------------------------------\n\nTITLE: Running scrcpy with v4l2 sink output\nDESCRIPTION: Commands to start scrcpy with video output directed to a v4l2 loopback device, with options to disable the playback window.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/v4l2.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --v4l2-sink=/dev/videoN\nscrcpy --v4l2-sink=/dev/videoN --no-video-playback  # disable playback window\n```\n\n----------------------------------------\n\nTITLE: Using AOA Control Mode Over USB\nDESCRIPTION: Commands to use Android Open Accessory (AOA) protocol for keyboard and mouse control over USB without video mirroring.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/control.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-video --no-audio --keyboard=aoa --mouse=aoa\n```\n\n----------------------------------------\n\nTITLE: Setting Screen Off Timeout in scrcpy\nDESCRIPTION: Command to change the screen timeout duration while scrcpy is running. The argument is specified in seconds, and the original value is restored upon exit.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --screen-off-timeout=300  # 300 seconds (5 minutes)\n```\n\n----------------------------------------\n\nTITLE: Enabling AOA Mouse Mode in scrcpy\nDESCRIPTION: Command to enable AOA mode, which simulates a physical HID mouse using the AOAv2 protocol at the USB level.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/mouse.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --mouse=aoa\n```\n\n----------------------------------------\n\nTITLE: Configuring IME Display Policy\nDESCRIPTION: Commands to configure where the Input Method Editor (IME) appears, either on the default or local display.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/virtual_display.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --display-id=1 --display-ime-policy=local\nscrcpy --new-display --display-ime-policy=local\n```\n\n----------------------------------------\n\nTITLE: Enabling Gamepads in OTG Mode\nDESCRIPTION: Commands to enable gamepad support in OTG mode when using scrcpy.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/otg.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --otg --gamepad=aoa\nscrcpy --otg -G  # short version\n```\n\n----------------------------------------\n\nTITLE: Combining Screen Off with Stay Awake\nDESCRIPTION: Commands to turn the screen off while preventing the device from sleeping, useful for background operations.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --turn-screen-off --stay-awake\nscrcpy -Sw   # short version\n```\n\n----------------------------------------\n\nTITLE: Enabling Touch Indicators in scrcpy\nDESCRIPTION: Command to show physical touch points on the device screen during mirroring, useful for presentations or demonstrations.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --show-touches\nscrcpy -t   # short version\n```\n\n----------------------------------------\n\nTITLE: Selecting TCP/IP-Connected Device in Bash\nDESCRIPTION: This snippet illustrates how to select the Android device connected over TCP/IP, assuming there is only one such device.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/connection.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --select-tcpip\nscrcpy -e   # short version\n```\n\n----------------------------------------\n\nTITLE: Camera Orientation and Frame Rate Settings\nDESCRIPTION: Commands for configuring camera rotation, frame rate, and high-speed capture modes.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/camera.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --video-source=camera --camera-size=1920x1080 --orientation=90\n\nscrcpy --video-source=camera --camera-fps=60\n\nscrcpy --video-source=camera --camera-size=1920x1080 --camera-fps=240\n```\n\n----------------------------------------\n\nTITLE: Cropping Device Screen in scrcpy (Bash)\nDESCRIPTION: Crops the device screen to mirror only a specific part. Values are expressed in the device's natural orientation.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --crop=1224:1440:0:0   # 1224x1440 at offset (0,0)\n```\n\n----------------------------------------\n\nTITLE: Setting Capture Orientation in scrcpy (Bash)\nDESCRIPTION: Configures the orientation of the captured video. Supports various angles and flipping options. Can be locked to prevent changes due to physical device rotation.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --capture-orientation=0\nscrcpy --capture-orientation=90       # 90° clockwise\nscrcpy --capture-orientation=180      # 180°\nscrcpy --capture-orientation=270      # 270° clockwise\nscrcpy --capture-orientation=flip0    # hflip\nscrcpy --capture-orientation=flip90   # hflip + 90° clockwise\nscrcpy --capture-orientation=flip180  # hflip + 180°\nscrcpy --capture-orientation=flip270  # hflip + 270° clockwise\n```\n\n----------------------------------------\n\nTITLE: Buffer Configuration\nDESCRIPTION: Commands for adjusting audio and video buffer settings to optimize playback.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/audio.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --video-buffer=200 --audio-buffer=200\n```\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-output-buffer=10\n```\n\n----------------------------------------\n\nTITLE: Microphone Audio Source Configuration\nDESCRIPTION: Commands for capturing and recording audio from device microphone.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/audio.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-source=mic\n```\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-source=mic --no-video --no-playback --record=file.opus\n```\n\n----------------------------------------\n\nTITLE: Disabling Window for Recording in scrcpy (Bash)\nDESCRIPTION: This command runs scrcpy without displaying a window, which is useful for recording or playing audio only. The recording is saved to 'file.mp4'. Use Ctrl+C to stop the process.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/window.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-window --record=file.mp4\n# Ctrl+C to interrupt\n```\n\n----------------------------------------\n\nTITLE: Connecting to Remote ADB Server - Bash\nDESCRIPTION: Bash commands to connect scrcpy to a remote ADB server at 192.168.1.2 by setting the ADB server socket and tunnel host.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport ADB_SERVER_SOCKET=tcp:192.168.1.2:5037\nscrcpy --tunnel-host=192.168.1.2\n```\n\n----------------------------------------\n\nTITLE: Windowless Recording in Scrcpy\nDESCRIPTION: Command to record without displaying a window, using Ctrl+C to stop recording.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/recording.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-playback --no-window --record=file.mp4\n# interrupt recording with Ctrl+C\n```\n\n----------------------------------------\n\nTITLE: Selecting USB or TCP/IP Device in scrcpy\nDESCRIPTION: Commands to connect scrcpy to a device by connection type when multiple devices are available. The -d flag selects a USB device while -e selects a TCP/IP device.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/FAQ.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy -d  # USB device\nscrcpy -e  # TCP/IP device\n```\n\n----------------------------------------\n\nTITLE: Control-Only Configuration with USB Debugging\nDESCRIPTION: Commands to configure scrcpy for device control without mirroring, using UHID or AOA, when USB debugging is enabled.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/otg.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-video --no-audio --keyboard=uhid --mouse=uhid --gamepad=uhid\nscrcpy --no-video --no-audio -KMG  # short version\nscrcpy --no-video --no-audio --keyboard=aoa --mouse=aoa --gamepad=aoa\n```\n\n----------------------------------------\n\nTITLE: Listing Installed Android Apps\nDESCRIPTION: Command to display a list of all applications installed on the connected Android device.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --list-apps\n```\n\n----------------------------------------\n\nTITLE: Audio Bitrate Configuration\nDESCRIPTION: Commands for setting custom audio bitrates.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/audio.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-bit-rate=64K\n```\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-bit-rate=64000\n```\n\n----------------------------------------\n\nTITLE: Launching App in Virtual Display\nDESCRIPTION: Command to start an Android application in a virtual display with a specified resolution.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --new-display=1920x1080 --start-app=org.videolan.vlc\n```\n\n----------------------------------------\n\nTITLE: Enabling UHID Mouse Mode in scrcpy\nDESCRIPTION: Commands to enable UHID mode, which simulates a physical HID mouse using the UHID kernel module on the device.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/mouse.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --mouse=uhid\nscrcpy -M  # short version\n```\n\n----------------------------------------\n\nTITLE: Preventing Device Power On at Startup\nDESCRIPTION: Command to prevent scrcpy from automatically turning on the device screen when starting.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-power-on\n```\n\n----------------------------------------\n\nTITLE: Customizing File Push Target Directory\nDESCRIPTION: Command to change the target directory when pushing files to the device via drag and drop, allowing custom file organization.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/control.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --push-target=/sdcard/Movies/\n```\n\n----------------------------------------\n\nTITLE: Specifying Window Position and Size in scrcpy (Bash)\nDESCRIPTION: This command sets the initial position (x and y coordinates) and size (width and height) of the scrcpy window.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/window.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --window-x=100 --window-y=100 --window-width=800 --window-height=600\n```\n\n----------------------------------------\n\nTITLE: Selecting USB-Connected Device in Bash\nDESCRIPTION: This code shows how to select the Android device connected via USB, assuming there is only one such device.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/connection.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --select-usb\nscrcpy -d   # short version\n```\n\n----------------------------------------\n\nTITLE: Recording Without Playback and Control\nDESCRIPTION: Commands to record while disabling playback and control features, including options for selective audio/video playback.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/recording.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-playback --no-control --record=file.mp4\n\n# Record both video and audio, but only play video\nscrcpy --record=file.mkv --no-audio-playback\n```\n\n----------------------------------------\n\nTITLE: Setting ANDROID_SERIAL Environment Variable in PowerShell\nDESCRIPTION: This snippet illustrates how to set the ANDROID_SERIAL environment variable in PowerShell for device selection.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/connection.md#2025-04-19_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\n# in PowerShell\n$env:ANDROID_SERIAL = '0123456789abcdef'\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Disabling Mouse Hover Events in SDK Mode\nDESCRIPTION: Command to disable mouse hover events forwarding to the device when using SDK mouse mode.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/mouse.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-mouse-hover\n```\n\n----------------------------------------\n\nTITLE: Advanced Scrcpy Usage with Arguments\nDESCRIPTION: Example command showing how to run Scrcpy with specific arguments to disable audio and record to a file.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/macos.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-audio --record=file.mkv\n```\n\n----------------------------------------\n\nTITLE: Installing v4l2loopback module on Linux for scrcpy\nDESCRIPTION: Command to install the v4l2loopback DKMS module which is required to create virtual video devices on Linux.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/v4l2.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install v4l2loopback-dkms\n```\n\n----------------------------------------\n\nTITLE: Disabling System Decorations\nDESCRIPTION: Command to create a virtual display without system decorations, useful for devices with UI issues or to disable default launcher UI.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/virtual_display.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --new-display --no-vd-system-decorations\n```\n\n----------------------------------------\n\nTITLE: Managing stay_on_while_plugged_in Settings via ADB\nDESCRIPTION: ADB commands to view and modify the Android stay_on_while_plugged_in setting manually. This controls whether the device stays awake when charging via AC, USB, or wireless.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# get the current show_touches value\nadb shell settings get global stay_on_while_plugged_in\n# enable for AC/USB/wireless chargers\nadb shell settings put global stay_on_while_plugged_in 7\n# disable\nadb shell settings put global stay_on_while_plugged_in 0\n```\n\n----------------------------------------\n\nTITLE: Running Scrcpy with default settings on Windows\nDESCRIPTION: Basic command to run Scrcpy with default settings from a terminal on Windows.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/windows.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Creating a v4l2 loopback device for scrcpy\nDESCRIPTION: Command to load the v4l2loopback kernel module which creates a virtual video device at /dev/videoN.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/v4l2.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo modprobe v4l2loopback\n```\n\n----------------------------------------\n\nTITLE: Managing Touch Indicators via ADB\nDESCRIPTION: ADB commands to view and modify the Android show_touches setting manually.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# get the current show_touches value\nadb shell settings get system show_touches\n# enable show_touches\nadb shell settings put system show_touches 1\n# disable show_touches\nadb shell settings put system show_touches 0\n```\n\n----------------------------------------\n\nTITLE: Combining App Launch Modifiers\nDESCRIPTION: Command showing how to combine the force-stop and search-by-name modifiers when launching an app.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --start-app=+?firefox\n```\n\n----------------------------------------\n\nTITLE: Installing Scrcpy via MacPorts on macOS\nDESCRIPTION: Command to install Scrcpy using MacPorts package manager on macOS, which includes ADB setup.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/macos.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo port install scrcpy\n```\n\n----------------------------------------\n\nTITLE: Setting ANDROID_SERIAL Environment Variable in CMD\nDESCRIPTION: This code demonstrates how to set the ANDROID_SERIAL environment variable in Windows Command Prompt for device selection.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/connection.md#2025-04-19_snippet_5\n\nLANGUAGE: cmd\nCODE:\n```\n:: in cmd\nset ANDROID_SERIAL=0123456789abcdef\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Explicit Format Selection in Scrcpy\nDESCRIPTION: Command to explicitly specify the container format for recording, independent of the filename extension.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/recording.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --record=file --record-format=mkv\n```\n\n----------------------------------------\n\nTITLE: Initializing Connection Flow with adb Tunneling in scrcpy\nDESCRIPTION: Shows the process of setting up an adb tunnel for communication between the client and server in scrcpy. It creates either a reverse or forward redirection using a random session ID to avoid conflicts when multiple scrcpy instances are running.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/develop.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# By default, a reverse redirection: the computer listens, the device connects\nadb reverse localabstract:scrcpy_<SCID> tcp:27183\n\n# As a fallback (or if --force-adb forward is set), a forward redirection:\n# the device listens, the computer connects\nadb forward tcp:27183 localabstract:scrcpy_<SCID>\n```\n\n----------------------------------------\n\nTITLE: Enabling Borderless Window in scrcpy (Bash)\nDESCRIPTION: This command starts scrcpy with a borderless window, removing window decorations.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/window.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --window-borderless\n```\n\n----------------------------------------\n\nTITLE: Setting ANDROID_SERIAL Environment Variable in Bash\nDESCRIPTION: This snippet shows how to set the ANDROID_SERIAL environment variable in Bash, which scrcpy uses to select a device.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/connection.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# in bash\nexport ANDROID_SERIAL=0123456789abcdef\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Forward-Only SSH Tunnel\nDESCRIPTION: Command to create an SSH tunnel using only forward connections, without remote port forwarding.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nssh -CN -L5038:localhost:5037 -L27183:localhost:27183 your_remote_computer\n```\n\n----------------------------------------\n\nTITLE: Exposing Raw H.264 Stream via TCP Socket with Scrcpy Server\nDESCRIPTION: This bash snippet demonstrates how to push the scrcpy server to an Android device, set up port forwarding, and launch the server with options configured to expose a raw H.264 video stream through a TCP socket.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/develop.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nadb push scrcpy-server-v2.1 /data/local/tmp/scrcpy-server-manual.jar\nadb forward tcp:1234 localabstract:scrcpy\nadb shell CLASSPATH=/data/local/tmp/scrcpy-server-manual.jar \\\n    app_process / com.genymobile.scrcpy.Server 2.1 \\\n    tunnel_forward=true audio=false control=false cleanup=false \\\n    raw_stream=true max_size=1920\n```\n\n----------------------------------------\n\nTITLE: Setting Always-on-Top Window in scrcpy (Bash)\nDESCRIPTION: This command keeps the scrcpy window always on top of other windows.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/window.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --always-on-top\n```\n\n----------------------------------------\n\nTITLE: Generating Windows Releases from Linux\nDESCRIPTION: Command to generate Windows (win32 and win64) releases of scrcpy from a Linux environment with cross-compilation tools installed.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n./release.sh\n```\n\n----------------------------------------\n\nTITLE: Using Forward-Only SSH Tunnel - Bash\nDESCRIPTION: Bash commands to connect scrcpy using forward-only SSH tunnel configuration.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nexport ADB_SERVER_SOCKET=tcp:localhost:5038\nscrcpy --force-adb-forward\n```\n\n----------------------------------------\n\nTITLE: Starting Remote ADB Server\nDESCRIPTION: Commands to start an ADB server that listens on all network interfaces. This is the first step for remote device connection.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nadb kill-server\nadb -a nodaemon server start\n```\n\n----------------------------------------\n\nTITLE: Disabling Playback in scrcpy (Bash)\nDESCRIPTION: Captures the Android device without playing video or audio on the computer. Useful for recording or when using v4l2. Also demonstrates how to disable video and audio playback separately.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --v4l2-sink=/dev/video2 --no-playback\nscrcpy --record=file.mkv --no-playback\n# interrupt with Ctrl+C\n\n# Send video to V4L2 sink without playing it, but keep audio playback\nscrcpy --v4l2-sink=/dev/video2 --no-video-playback\n\n# Record both video and audio, but only play video\nscrcpy --record=file.mkv --no-audio-playback\n```\n\n----------------------------------------\n\nTITLE: Installing JDK for Server Build on Linux\nDESCRIPTION: Command to install OpenJDK 17 on Debian/Ubuntu for building the server component of scrcpy.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install openjdk-17-jdk\n```\n\n----------------------------------------\n\nTITLE: Disabling Keyboard or Mouse in OTG Mode\nDESCRIPTION: Commands to disable keyboard or mouse input in OTG mode while using scrcpy.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/otg.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --otg --keyboard=disabled\nscrcpy --otg --mouse=disabled\n```\n\n----------------------------------------\n\nTITLE: Connecting to Remote ADB Server - PowerShell\nDESCRIPTION: PowerShell commands to connect scrcpy to a remote ADB server at 192.168.1.2.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$env:ADB_SERVER_SOCKET = 'tcp:192.168.1.2:5037'\nscrcpy --tunnel-host=192.168.1.2\n```\n\n----------------------------------------\n\nTITLE: Audio Buffering Configuration\nDESCRIPTION: Command to set audio buffer size to minimize glitches in audio-only mode.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/audio.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-video --audio-buffer=200\n```\n\n----------------------------------------\n\nTITLE: Installing ADB via Homebrew on macOS\nDESCRIPTION: Command to install Android Debug Bridge (ADB) using Homebrew cask on macOS, which is a prerequisite for Scrcpy.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/macos.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew install --cask android-platform-tools\n```\n\n----------------------------------------\n\nTITLE: Force-Stopping App Before Launch\nDESCRIPTION: Command to force-stop an application before launching it with scrcpy, using the + prefix.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --start-app=+org.mozilla.firefox\n```\n\n----------------------------------------\n\nTITLE: Using SSH Tunnel - Bash\nDESCRIPTION: Bash commands to connect scrcpy through an established SSH tunnel.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nexport ADB_SERVER_SOCKET=tcp:localhost:5038\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Connecting to Remote ADB Server - CMD\nDESCRIPTION: Windows CMD commands to connect scrcpy to a remote ADB server at 192.168.1.2.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_2\n\nLANGUAGE: cmd\nCODE:\n```\nset ADB_SERVER_SOCKET=tcp:192.168.1.2:5037\nscrcpy --tunnel-host=192.168.1.2\n```\n\n----------------------------------------\n\nTITLE: Installing Scrcpy from Release Script\nDESCRIPTION: Clone the scrcpy repository and run the installation script to install the latest release.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/linux.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Genymobile/scrcpy\ncd scrcpy\n./install_release.sh\n```\n\n----------------------------------------\n\nTITLE: Uninstalling scrcpy\nDESCRIPTION: Command to uninstall scrcpy from the system, removing all installed files.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nsudo ninja -Cx uninstall  # without sudo on Windows\n```\n\n----------------------------------------\n\nTITLE: FLAC Compression Configuration\nDESCRIPTION: Command to set FLAC compression level using codec options.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/audio.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --audio-codec=flac --audio-codec-options=flac-compression-level=8\n```\n\n----------------------------------------\n\nTITLE: Disabling Screensaver in scrcpy (Bash)\nDESCRIPTION: This command prevents the computer's screensaver from activating while scrcpy is running.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/window.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --disable-screensaver\n```\n\n----------------------------------------\n\nTITLE: Preserving Content on Display Close\nDESCRIPTION: Command to prevent destruction of running apps when closing the virtual display, moving them to the main display instead.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/virtual_display.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --new-display --no-vd-destroy-content\n```\n\n----------------------------------------\n\nTITLE: Setting Custom ADB Path in PowerShell for scrcpy\nDESCRIPTION: PowerShell command to specify a custom ADB binary path for scrcpy using the ADB environment variable. Resolves ADB version conflicts on Windows using PowerShell.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/FAQ.md#2025-04-19_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\n# in PowerShell\n$env:ADB = 'C:\\path\\to\\your\\adb.exe'\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Running Scrcpy Basic Command\nDESCRIPTION: Basic command to launch scrcpy with default settings.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/linux.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Checking ADB Device Detection in Command Line\nDESCRIPTION: Command to verify if Android devices are properly detected by ADB. This is a basic troubleshooting step when devices aren't connecting to scrcpy.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/FAQ.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nadb devices\n```\n\n----------------------------------------\n\nTITLE: Using SSH Tunnel - CMD\nDESCRIPTION: Windows CMD commands to connect scrcpy through an established SSH tunnel.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_8\n\nLANGUAGE: cmd\nCODE:\n```\nset ADB_SERVER_SOCKET=tcp:localhost:5038\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Running Scrcpy with command line arguments on Windows\nDESCRIPTION: Example command showing how to run Scrcpy with specific arguments to disable audio and record to a file.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/windows.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-audio --record=file.mkv\n```\n\n----------------------------------------\n\nTITLE: Configuring v4l2 buffering in scrcpy\nDESCRIPTION: Command to configure buffering for the v4l2 stream in scrcpy to delay the video output, trading latency for smoother playback.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/v4l2.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --v4l2-buffer=300     # add 300ms buffering for v4l2 sink\n```\n\n----------------------------------------\n\nTITLE: Using SSH Tunnel - PowerShell\nDESCRIPTION: PowerShell commands to connect scrcpy through an established SSH tunnel.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\n$env:ADB_SERVER_SOCKET = 'tcp:localhost:5038'\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Installing Scrcpy using WinGet on Windows\nDESCRIPTION: Command to install Scrcpy using the WinGet package manager on Windows. This will also install ADB and other dependencies alongside Scrcpy.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/windows.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwinget install --exact Genymobile.scrcpy\n```\n\n----------------------------------------\n\nTITLE: Using Forward-Only SSH Tunnel - CMD\nDESCRIPTION: Windows CMD commands to connect scrcpy using forward-only SSH tunnel configuration.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_12\n\nLANGUAGE: cmd\nCODE:\n```\nset ADB_SERVER_SOCKET=tcp:localhost:5038\nscrcpy --force-adb-forward\n```\n\n----------------------------------------\n\nTITLE: Windowless Audio Playback\nDESCRIPTION: Command for audio playback without displaying a window interface.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/audio.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-window\n```\n\n----------------------------------------\n\nTITLE: Setting Custom ADB Path in Bash for scrcpy\nDESCRIPTION: Bash command to specify a custom ADB binary path for scrcpy using the ADB environment variable. Useful when dealing with ADB version conflicts.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/FAQ.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# in bash\nexport ADB=/path/to/your/adb\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Setting Up ADB Port Forwarding for Server Debugging (Android < 11)\nDESCRIPTION: This command sets up port forwarding for the scrcpy server debugger on Android devices running versions earlier than Android 11.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/develop.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nadb forward tcp:5005 tcp:5005\n```\n\n----------------------------------------\n\nTITLE: Audio-Only Streaming Configuration\nDESCRIPTION: Commands for audio-only streaming without video or control functionality.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/audio.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-video --no-control\n```\n\n----------------------------------------\n\nTITLE: Setting Custom ADB Path in Windows CMD for scrcpy\nDESCRIPTION: Command Prompt instruction to specify a custom ADB binary path for scrcpy using the ADB environment variable. Helps resolve ADB version conflicts on Windows.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/FAQ.md#2025-04-19_snippet_4\n\nLANGUAGE: cmd\nCODE:\n```\n:: in cmd\nset ADB=C:\\path\\to\\your\\adb.exe\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Setting Up ADB Port Forwarding for Server Debugging (Android 11+)\nDESCRIPTION: This command sets up port forwarding for the scrcpy server debugger on Android devices running Android 11 or later, using the JDWP process ID.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/develop.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nadb forward tcp:5005 jdwp:XXXX  # replace XXXX\n```\n\n----------------------------------------\n\nTITLE: Starting App by Name Instead of Package ID\nDESCRIPTION: Command to start an application by its name rather than package ID, using the ? prefix.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --start-app=?firefox\n```\n\n----------------------------------------\n\nTITLE: Starting ADB Server for SSH Tunnel\nDESCRIPTION: Command to ensure ADB server is running on the remote computer before establishing SSH tunnel.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nadb start-server\n```\n\n----------------------------------------\n\nTITLE: Finding Device IP Address in Bash\nDESCRIPTION: This code shows how to find the IP address of an Android device using adb shell commands.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/connection.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nadb shell ip route | awk '{print $9}'\n```\n\n----------------------------------------\n\nTITLE: Managing Screen Timeout Settings via ADB\nDESCRIPTION: ADB commands to view and modify the Android screen timeout settings manually. Note that Android uses milliseconds for this setting.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# get the current screen_off_timeout value\nadb shell settings get system screen_off_timeout\n# set a new value (in milliseconds)\nadb shell settings put system screen_off_timeout 30000\n```\n\n----------------------------------------\n\nTITLE: Custom Tunnel Port Configuration\nDESCRIPTION: Command to specify a custom tunnel port for scrcpy connection.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --tunnel-port=1234\n```\n\n----------------------------------------\n\nTITLE: Installing 64-bit Dependencies in MSYS2\nDESCRIPTION: Commands to install runtime and build dependencies for scrcpy in MSYS2 environment on Windows, targeting 64-bit builds.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# runtime dependencies\npacman -S mingw-w64-x86_64-SDL2 \\\n          mingw-w64-x86_64-ffmpeg \\\n          mingw-w64-x86_64-libusb\n\n# client build dependencies\npacman -S mingw-w64-x86_64-make \\\n          mingw-w64-x86_64-gcc \\\n          mingw-w64-x86_64-pkg-config \\\n          mingw-w64-x86_64-meson\n```\n\n----------------------------------------\n\nTITLE: Playing Raw H.264 Stream from Scrcpy Server using VLC\nDESCRIPTION: This command shows how to use VLC to play the raw H.264 video stream exposed by the scrcpy server on the local TCP port.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/develop.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nvlc -Idummy --demux=h264 --network-caching=0 tcp://localhost:1234\n```\n\n----------------------------------------\n\nTITLE: Using Forward-Only SSH Tunnel - PowerShell\nDESCRIPTION: PowerShell commands to connect scrcpy using forward-only SSH tunnel configuration.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/tunnels.md#2025-04-19_snippet_13\n\nLANGUAGE: powershell\nCODE:\n```\n$env:ADB_SERVER_SOCKET = 'tcp:localhost:5038'\nscrcpy --force-adb-forward\n```\n\n----------------------------------------\n\nTITLE: Installing Cross-Compilation Dependencies on Debian\nDESCRIPTION: Commands to install MinGW for cross-compiling scrcpy for Windows from a Linux system, plus JDK for building the server component.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install mingw-w64 mingw-w64-tools libz-mingw-w64-dev\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Window Title in scrcpy (Bash)\nDESCRIPTION: This command allows you to set a custom title for the scrcpy window instead of using the default device model name.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/window.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --window-title='My device'\n```\n\n----------------------------------------\n\nTITLE: Updating Scrcpy Installation\nDESCRIPTION: Update the local repository and reinstall scrcpy when a new release is available.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/linux.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit pull\n./install_release.sh\n```\n\n----------------------------------------\n\nTITLE: Controlling Screen Power State via ADB (Android 15+)\nDESCRIPTION: ADB commands to manually turn the device screen on or off for Android 15 and newer versions.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/device.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# turn screen off (0 for main display)\nadb shell cmd display power-off 0\n# turn screen on\nadb shell cmd display power-on 0\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Rotation Angle in scrcpy (Bash)\nDESCRIPTION: Rotates the video content by a custom angle in degrees, clockwise. The center of rotation is the center of the visible area.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --angle=23\n```\n\n----------------------------------------\n\nTITLE: Building scrcpy with Prebuilt Server\nDESCRIPTION: Commands to build scrcpy using a prebuilt server instead of building the server from source, useful when you don't need Java or Android SDK.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nmeson setup x --buildtype=release --strip -Db_lto=true \\\n    -Dprebuilt_server=/path/to/scrcpy-server\nninja -Cx  # DO NOT RUN AS ROOT\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Scrcpy\nDESCRIPTION: Remove the installed scrcpy application using ninja build system.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/linux.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo ninja -Cbuild-auto uninstall\n```\n\n----------------------------------------\n\nTITLE: MinGW Cross-Compilation Configuration\nDESCRIPTION: Meson build system configuration that defines cross-compilation toolchain binaries and target machine specifications for 32-bit Windows builds using MinGW-w64\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/cross_win32.txt#2025-04-19_snippet_1\n\nLANGUAGE: meson\nCODE:\n```\n[binaries]\nname = 'mingw'\nc = 'i686-w64-mingw32-gcc'\ncpp = 'i686-w64-mingw32-g++'\nar = 'i686-w64-mingw32-ar'\nstrip = 'i686-w64-mingw32-strip'\npkg-config = 'i686-w64-mingw32-pkg-config'\n# backward compatibility\npkgconfig = 'i686-w64-mingw32-pkg-config'\nwindres = 'i686-w64-mingw32-windres'\n\n[host_machine]\nsystem = 'windows'\ncpu_family = 'x86'\ncpu = 'i686'\nendian = 'little'\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Debian/Ubuntu\nDESCRIPTION: Commands to install runtime and build dependencies for scrcpy on Debian/Ubuntu. Includes packages needed for the client (FFmpeg, SDL2) and server (Java JDK) components.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# runtime dependencies\nsudo apt install ffmpeg libsdl2-2.0-0 adb libusb-1.0-0\n\n# client build dependencies\nsudo apt install gcc git pkg-config meson ninja-build libsdl2-dev \\\n                 libavcodec-dev libavdevice-dev libavformat-dev libavutil-dev \\\n                 libswresample-dev libusb-1.0-0-dev\n\n# server build dependencies\nsudo apt install openjdk-17-jdk\n```\n\n----------------------------------------\n\nTITLE: Using Simplified Mouse Binding Syntax in scrcpy\nDESCRIPTION: Example showing that when the second sequence of bindings is omitted, it defaults to the same as the first sequence.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/mouse.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --mouse-bind=bhsn\nscrcpy --mouse-bind=bhsn:bhsn  # equivalent\n```\n\n----------------------------------------\n\nTITLE: Disabling Video Forwarding in scrcpy (Bash)\nDESCRIPTION: Completely disables video forwarding, allowing only audio to be forwarded from the Android device.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/video.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --no-video\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Fedora\nDESCRIPTION: Commands to install both runtime and build dependencies for scrcpy on Fedora Linux, including enabling RPM fusion repository for required packages.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# enable RPM fusion free\nsudo dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm\n\n# client build dependencies\nsudo dnf install SDL2-devel ffms2-devel libusb1-devel libavdevice-free-devel meson gcc make\n\n# server build dependencies\nsudo dnf install java-devel\n```\n\n----------------------------------------\n\nTITLE: Installing MinGW-w64 Compiler Toolchain on Debian-based Systems\nDESCRIPTION: Command to install the MinGW-w64 cross-compiler toolchain and related tools for Windows cross-compilation on Debian-based Linux distributions.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/cross_win64.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# apt install mingw-w64 mingw-w64-tools\n```\n\n----------------------------------------\n\nTITLE: Finding Debuggable Process ID on Android 11+\nDESCRIPTION: This command helps identify the Java Debugger Wire Protocol (JDWP) process ID needed for debugging on Android 11 and above.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/develop.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nadb jdwp\n# press Ctrl+C to interrupt\n```\n\n----------------------------------------\n\nTITLE: Setting Android SDK Path on Different Platforms\nDESCRIPTION: Commands to set the ANDROID_SDK_ROOT environment variable on different operating systems when building scrcpy from source.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n# Linux\nexport ANDROID_SDK_ROOT=~/Android/Sdk\n# Mac\nexport ANDROID_SDK_ROOT=~/Library/Android/sdk\n# Windows\nset ANDROID_SDK_ROOT=%LOCALAPPDATA%\\Android\\sdk\n```\n\n----------------------------------------\n\nTITLE: Specifying Target Windows Platform Configuration in Meson\nDESCRIPTION: Meson build system configuration that defines the target machine properties for cross-compilation. Specifies Windows as the target system with x86_64 architecture and little-endian byte order.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/cross_win64.txt#2025-04-19_snippet_2\n\nLANGUAGE: meson\nCODE:\n```\n[host_machine]\nsystem = 'windows'\ncpu_family = 'x86'\ncpu = 'x86_64'\nendian = 'little'\n```\n\n----------------------------------------\n\nTITLE: Configuring SDL Video Driver for Wayland Support\nDESCRIPTION: Command to set the SDL video driver to Wayland before running scrcpy. This addresses display issues on Linux systems using Wayland instead of X11.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/FAQ.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nexport SDL_VIDEODRIVER=wayland\nscrcpy\n```\n\n----------------------------------------\n\nTITLE: Installing Java on macOS for Server Build\nDESCRIPTION: Commands to install Java 17 on macOS using Homebrew Cask and configure environment variables for building the server component.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nbrew tap homebrew/cask-versions\nbrew install adoptopenjdk/openjdk/adoptopenjdk17\nexport JAVA_HOME=\"$(/usr/libexec/java_home --version 1.17)\"\nexport PATH=\"$JAVA_HOME/bin:$PATH\"\n```\n\n----------------------------------------\n\nTITLE: Defining Scrcpy Build Options in Meson\nDESCRIPTION: This snippet defines various build options for the Scrcpy project using Meson's option() function. It includes options for compiling the client and server, specifying a prebuilt server, enabling portable mode, static linking, server debugging, and feature toggles for V4L2 and USB support.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/meson_options.txt#2025-04-19_snippet_0\n\nLANGUAGE: meson\nCODE:\n```\noption('compile_app', type: 'boolean', value: true, description: 'Build the client')\noption('compile_server', type: 'boolean', value: true, description: 'Build the server')\noption('prebuilt_server', type: 'string', description: 'Path of the prebuilt server')\noption('portable', type: 'boolean', value: false, description: 'Use scrcpy-server from the same directory as the scrcpy executable')\noption('static', type: 'boolean', value: false, description: 'Use static dependencies')\noption('server_debugger', type: 'boolean', value: false, description: 'Run a server debugger and wait for a client to be attached')\noption('v4l2', type: 'boolean', value: true, description: 'Enable V4L2 feature when supported')\noption('usb', type: 'boolean', value: true, description: 'Enable HID/OTG features when supported')\n```\n\n----------------------------------------\n\nTITLE: Brace Expansion Example for Camera Configuration\nDESCRIPTION: Example showing how to use shell brace expansion to simplify multiple camera configuration options.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/camera.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nscrcpy --video-source=camera --camera-{facing=back,ar=16:9,high-speed,fps=120}\n\nscrcpy --video-source=camera --camera-facing=back --camera-ar=16:9 --camera-high-speed --camera-fps=120\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Path in MSYS2\nDESCRIPTION: Command to add manually installed Java to the PATH environment variable in MSYS2 for building the server component.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"$JAVA_HOME/bin:$PATH\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Scrcpy Server Debugger with Meson\nDESCRIPTION: These commands show how to enable the server debugger during the configuration phase of the build process using meson.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/develop.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmeson setup x -Dserver_debugger=true\n# or, if x is already configured\nmeson configure x -Dserver_debugger=true\n```\n\n----------------------------------------\n\nTITLE: Video Frame Header Format in scrcpy Protocol\nDESCRIPTION: Illustrates the structure of the frame header used in the scrcpy protocol for video packets. It shows how the 12-byte header contains flags for config packets and key frames, a 62-bit PTS (Presentation Timestamp), and a 32-bit packet size field.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/develop.md#2025-04-19_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n    [. . . . . . . .|. . . .]. . . . . . . . . . . . . . . ...\n     <-------------> <-----> <-----------------------------...\n           PTS        packet        raw packet\n                       size\n     <--------------------->\n           frame header\n\nThe most significant bits of the PTS are used for packet flags:\n\n     byte 7   byte 6   byte 5   byte 4   byte 3   byte 2   byte 1   byte 0\n    CK...... ........ ........ ........ ........ ........ ........ ........\n    ^^<------------------------------------------------------------------->\n    ||                                PTS\n    | `- key frame\n     `-- config packet\n```\n\n----------------------------------------\n\nTITLE: Installing Meson on Older Ubuntu Versions\nDESCRIPTION: Commands to install Meson via pip3 on older Ubuntu versions (like 16.04) where the packaged version is too old for building scrcpy.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/doc/build.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install python3-pip\npip3 install meson\n```\n\n----------------------------------------\n\nTITLE: Installing MinGW Cross-Compilation Tools\nDESCRIPTION: Shell command to install MinGW-w64 and related tools for cross-compilation\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/cross_win32.txt#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\napt install mingw-w64 mingw-w64-tools\n```\n\n----------------------------------------\n\nTITLE: Configuring MinGW Cross-Compilation Binaries in Meson\nDESCRIPTION: Meson build system configuration for cross-compilation targeting Windows. Defines the specific MinGW-w64 toolchain executables for C/C++ compilation, archiving, resource compilation, and dependency resolution.\nSOURCE: https://github.com/genymobile/scrcpy/blob/master/cross_win64.txt#2025-04-19_snippet_1\n\nLANGUAGE: meson\nCODE:\n```\n[binaries]\nname = 'mingw'\nc = 'x86_64-w64-mingw32-gcc'\ncpp = 'x86_64-w64-mingw32-g++'\nar = 'x86_64-w64-mingw32-ar'\nstrip = 'x86_64-w64-mingw32-strip'\npkg-config = 'x86_64-w64-mingw32-pkg-config'\n# backward compatibility\npkgconfig = 'x86_64-w64-mingw32-pkg-config'\nwindres = 'x86_64-w64-mingw32-windres'\n```"
  }
]
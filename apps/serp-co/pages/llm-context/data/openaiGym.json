[
  {
    "owner": "openai",
    "repo": "gym",
    "content": "TITLE: Interacting with Gym Environment in Python\nDESCRIPTION: This snippet demonstrates how to create a Gym environment instance, reset it, perform actions, and handle termination. It uses the 'CartPole-v1' environment as an example.\nSOURCE: https://github.com/openai/gym/blob/master/README.md#2025-04-07_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport gym\nenv = gym.make(\"CartPole-v1\")\nobservation, info = env.reset(seed=42)\n\nfor _ in range(1000):\n    action = env.action_space.sample()\n    observation, reward, terminated, truncated, info = env.step(action)\n\n    if terminated or truncated:\n        observation, info = env.reset()\nenv.close()\n```\n\n----------------------------------------\n\nTITLE: Initializing Basic Gym Environment Wrapper\nDESCRIPTION: Demonstrates how to create and wrap a basic Gym environment using a custom wrapper class. Shows the pattern of applying a wrapper to modify environment behavior.\nSOURCE: https://github.com/openai/gym/blob/master/gym/wrappers/README.md#2025-04-07_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nenv = gym.make('Pong-v0')\nenv = MyWrapper(env)\n```\n\n----------------------------------------\n\nTITLE: Listing Python Package Dependencies for OpenAI Gym\nDESCRIPTION: This snippet enumerates the required Python packages and their version constraints for the OpenAI Gym project. It includes core libraries like NumPy and CloudPickle, as well as specific libraries for different simulation environments such as Box2D, Pygame, and MuJoCo.\nSOURCE: https://github.com/openai/gym/blob/master/requirements.txt#2025-04-07_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\nnumpy>=1.18.0\ncloudpickle>=1.2.0\nimportlib_metadata>=4.8.0; python_version < '3.10'\ngym_notices>=0.0.4\ndataclasses==0.8; python_version == '3.6'\ntyping_extensions==4.3.0; python_version == '3.7'\nopencv-python>=3.0\nlz4>=3.1.0\nmatplotlib>=3.0\nbox2d-py==2.3.5\npygame==2.1.0\nale-py~=0.8.0\nmujoco==2.2.0\nmujoco_py<2.2,>=2.1\nimageio>=2.14.1\n```\n\n----------------------------------------\n\nTITLE: Defining Python Package Dependencies for OpenAI Gym\nDESCRIPTION: Lists required Python packages and their version constraints for OpenAI Gym. Includes physics engines (box2d-py, mujoco), visualization tools (opencv-python, matplotlib, pygame), and utility packages (lz4, imageio) along with testing framework (pytest).\nSOURCE: https://github.com/openai/gym/blob/master/test_requirements.txt#2025-04-07_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nbox2d-py==2.3.5\nlz4>=3.1.0\nopencv-python>=3.0\nmujoco==2.2.0\nmatplotlib>=3.0\nimageio>=2.14.1\npygame==2.1.0\nmujoco_py<2.2,>=2.1\npytest==7.0.1\n```\n\n----------------------------------------\n\nTITLE: Importing OpenAI Gym Wrapper\nDESCRIPTION: Shows the correct way to import a wrapper from the gym.wrappers module. This is the recommended import pattern for accessing wrapper classes.\nSOURCE: https://github.com/openai/gym/blob/master/gym/wrappers/README.md#2025-04-07_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom gym.wrappers import MyWrapper\n```\n\n----------------------------------------\n\nTITLE: Running Pyright Type Checking in Python\nDESCRIPTION: Instructions for running type checking using Pyright. The command can be executed via pre-commit hooks or directly through the command line with project configuration.\nSOURCE: https://github.com/openai/gym/blob/master/CONTRIBUTING.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npre-commit run --all-files\npyright --project=pyproject.toml\n```\n\n----------------------------------------\n\nTITLE: Running PyTest for Gym Project\nDESCRIPTION: Command for executing the project's test suite using pytest in the root folder.\nSOURCE: https://github.com/openai/gym/blob/master/CONTRIBUTING.md#2025-04-07_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npytest\n```\n\n----------------------------------------\n\nTITLE: Running Pydocstyle for Documentation Verification\nDESCRIPTION: Command to verify docstring formatting using pydocstyle with Google convention settings.\nSOURCE: https://github.com/openai/gym/blob/master/CONTRIBUTING.md#2025-04-07_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npydocstyle --source --explain --convention=google\n```\n\n----------------------------------------\n\nTITLE: Displaying MuJoCo Model License in Markdown\nDESCRIPTION: This code snippet shows the license text for MuJoCo models used in the OpenAI Gym project. It includes information about the source, version, release date, and author of the MuJoCo models.\nSOURCE: https://github.com/openai/gym/blob/master/LICENSE.md#2025-04-07_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n```\nThis file is part of MuJoCo.     \nCopyright 2009-2015 Roboti LLC.\t\nMujoco\t\t:: Advanced physics simulation engine\nSource\t\t: www.roboti.us\nVersion\t\t: 1.31\nReleased \t: 23Apr16\nAuthor\t\t:: Vikash Kumar\nContacts \t: kumar@roboti.us\n```\n```"
  }
]
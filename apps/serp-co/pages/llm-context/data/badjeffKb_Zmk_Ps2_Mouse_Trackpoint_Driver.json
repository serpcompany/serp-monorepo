[
  {
    "owner": "badjeff",
    "repo": "kb_zmk_ps2_mouse_trackpoint_driver",
    "content": "TITLE: PS/2 Device Reset Attempt - ZMK\nDESCRIPTION: These log messages indicate the firmware's attempt to reset the PS/2 device by sending the 0xff reset command. It includes error messages and retry attempts.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_22\n\nLANGUAGE: text\nCODE:\n```\n[00:00:03.986,022] <inf> zmk: Trying to reset PS2 device...\n[00:00:03.990,234] <err> ps2_uart: Failed to write value 0xff: scl timeout\n[00:00:03.990,264] <err> ps2_uart: Blocking write finished with failure for byte 0xff status: 3\n[00:00:03.990,295] <wrn> ps2_uart: Attempting write re-try #2 of 5...\n[00:00:03.996,246] <err> ps2_uart: Blocking write failed due to semaphore timeout for byte 0xff: -11\n[00:00:03.996,276] <wrn> ps2_uart: Attempting write re-try #3 of 5...\n[00:00:04.000,457] <err> ps2_uart: Failed to write value 0xff: scl timeout\n[00:00:04.000,488] <err> ps2_uart: Blocking write finished with failure for byte 0xff status: 3\n[00:00:04.000,518] <wrn> ps2_uart: Attempting write re-try #4 of 5...\n[00:00:04.006,469] <err> ps2_uart: Blocking write failed due to semaphore timeout for byte 0xff: -11\n[00:00:04.006,500] <wrn> ps2_uart: Attempting write re-try #5 of 5...\n[00:00:04.010,711] <err> ps2_uart: Failed to write value 0xff: scl timeout\n[00:00:04.010,742] <err> ps2_uart: Blocking write finished with failure for byte 0xff status: 3\n```\n\n----------------------------------------\n\nTITLE: Modifying west.yml for ZMK module\nDESCRIPTION: This code snippet demonstrates the changes required in the `west.yml` file to switch to a specific fork of the ZMK firmware and add the `kb_zmk_ps2_mouse_trackpoint_driver` module. It involves adding a new remote, updating the zmk project to use the forked remote and revision, and including the new module. This is a crucial first step for incorporating the PS/2 mouse and TrackPoint driver.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\nmanifest:\n  remotes:\n    - name: zmkfirmware\n      url-base: https://github.com/zmkfirmware\n+   - name: infused-kim\n+     url-base: https://github.com/infused-kim\n\n  projects:\n    - name: zmk\n-     remote: zmkfirmware\n-     revision: main\n+     remote: infused-kim\n+     revision: pr-testing/mouse_ps2_module_base\n      import: app/west.yml\n\n+   # Module for PS/2 mouse & TP driver\n+   - name: kb_zmk_ps2_mouse_trackpoint_driver\n+     remote: infused-kim\n+     revision: main\n\n  self:\n    path: config\n```\n\n----------------------------------------\n\nTITLE: Changing input-listener in device tree source file - DTS\nDESCRIPTION: This code snippet demonstrates how to modify the `input-listener` compatible property in a device tree source file (.dtsi) for a ZMK keyboard. It involves changing the compatible property from `zmk,input-listener` to `zmk,input-listener-ps2` within the `mouse_ps2_input_listener` node.  This change is required when using the new PS/2 mouse driver module to correctly identify and utilize the PS/2 input device. The `status` is initially set to \"disabled\" and `device` is set to the node `&mouse_ps2`.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n/ {\n    mouse_ps2_input_listener: mouse_ps2_input_listener {\n-       compatible = \"zmk,input-listener\";\n+       compatible = \"zmk,input-listener-ps2\";\n        status = \"disabled\";\n\n        device = <&mouse_ps2>;\n    };\n};\n```\n\n----------------------------------------\n\nTITLE: TrackPoint Inertia Setting Logs - ZMK\nDESCRIPTION: These log messages show the firmware attempting to set the TrackPoint inertia, including potential errors during the write process due to GPIO interrupt usage. Retries and successful writes are also logged.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_18\n\nLANGUAGE: text\nCODE:\n```\n[00:00:02.002,777] <inf> zmk: Setting TP inertia to 6...\n[00:00:02.006,988] <err> ps2_uart: Failed to write value 0xe2: scl timeout\n[00:00:02.007,019] <err> ps2_uart: Blocking write finished with failure for byte 0xe2 status: 3\n[00:00:02.007,049] <wrn> ps2_uart: Attempting write re-try #2 of 5...\n[00:00:02.011,505] <wrn> ps2_uart: Successfully wrote 0xe2 on try #2 of 5...\n[00:00:02.020,019] <inf> zmk: Successfully set TP negative inertia to 6\n```\n\n----------------------------------------\n\nTITLE: Configuring central split role in Kconfig.defconfig for ZMK\nDESCRIPTION: This code snippet configures the central side of a split keyboard in the `Kconfig.defconfig` file. It checks the right shield is defined and sets `ZMK_SPLIT_ROLE_CENTRAL` to 'y', which is required for proper operation when the pointing device is connected to the right half. This is necessary for the PS/2 mouse and TrackPoint driver to function correctly.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\n-if SHIELD_YOUR_KEYBOARD_TP_LEFT\n+if SHIELD_YOUR_KEYBOARD_TP_RIGHT\n\nconfig ZMK_KEYBOARD_NAME\n    default \"YourKeyboard TP\"\n\nconfig ZMK_SPLIT_ROLE_CENTRAL\n    default y\n\nendif\n```\n\n----------------------------------------\n\nTITLE: Adding the PS/2 Driver Module to west.yml\nDESCRIPTION: This code snippet demonstrates how to add the PS/2 mouse/TrackPoint driver as a ZMK module to the `config/west.yml` file. This allows you to use the driver without modifying the ZMK core.  It involves adding a new remote and project definition.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\nmanifest:\n  remotes:\n    - name: zmkfirmware\n      url-base: https://github.com/zmkfirmware\n+   - name: infused-kim\n+     url-base: https://github.com/infused-kim\n  projects:\n    - name: zmk\n      remote: zmkfirmware\n      revision: main\n      import: app/west.yml\n+\n+   # zmk module for PS/2 mouse / TP driver\n+   - name: kb_zmk_ps2_mouse_trackpoint_driver\n+     remote: infused-kim\n+     revision: main\n\n  self:\n    path: config\n```\n\n----------------------------------------\n\nTITLE: Configuring PS/2 Mouse Pins\nDESCRIPTION: This code snippet shows how to define the pins used for the PS/2 mouse clock (SCL) and data (SDA) lines. The first two lines define the pins for a Pro Micro controller, while the third line is specific to the nRF52 UART. High-frequency pins are preferred to avoid Bluetooth interference.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_6\n\nLANGUAGE: c\nCODE:\n```\n#define MOUSE_PS2_PIN_SCL_PRO_MICRO <&pro_micro 16 GPIO_ACTIVE_HIGH>\n#define MOUSE_PS2_PIN_SDA_PRO_MICRO <&pro_micro 10 GPIO_ACTIVE_HIGH>\n#define MOUSE_PS2_PIN_SDA_PINCTRL <NRF_PSEL(UART_RX, 0, 9)>\n```\n\n----------------------------------------\n\nTITLE: Data Reporting Enable Logs - ZMK\nDESCRIPTION: These log messages indicate that the firmware is enabling data reporting and the PS/2 callback. Errors during the write process are also shown with retry attempts.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_19\n\nLANGUAGE: text\nCODE:\n```\n[00:00:02.065,032] <inf> zmk: Enabling data reporting and ps2 callback...\n[00:00:02.069,244] <err> ps2_uart: Failed to write value 0xf4: scl timeout\n[00:00:02.069,274] <err> ps2_uart: Blocking write finished with failure for byte 0xf4 status: 3\n[00:00:02.069,305] <wrn> ps2_uart: Attempting write re-try #2 of 5...\n[00:00:02.072,875] <wrn> ps2_uart: Successfully wrote 0xf4 on try #2 of 5...\n```\n\n----------------------------------------\n\nTITLE: Updating shield name in build.yaml for ZMK\nDESCRIPTION: This snippet shows how to update the shield name in the `build.yaml` file, reflecting the custom shield created for the keyboard (e.g., replacing `corne_left` with `corne_tp_left`).  This ensures that the build process targets the correct shield definition, including the custom configurations for the PS/2 mouse and TrackPoint driver.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\ninclude:\n  - board: nice_nano_v2\n-   shield: corne_left\n+   shield: corne_tp_left\n  - board: nice_nano_v2\n-   shield: corne_right\n+   shield: corne_tp_right\n```\n\n----------------------------------------\n\nTITLE: UART Pin Initialization Logs - ZMK\nDESCRIPTION: These log messages indicate the initialization of the ps2_uart driver and the configured SCL and SDA pins. It also indicates the status of the UART device and callback disabling. It's used to verify correct pin configuration and driver readiness.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_10\n\nLANGUAGE: text\nCODE:\n```\n[00:00:00.404,663] <inf> ps2_uart: Initializing ps2_uart driver with pins... SCL: P0.06; SDA: P0.08; SDA Pinctrl: P0.08\n[00:00:00.404,724] <inf> ps2_uart: UART device is ready\n[00:00:00.404,754] <inf> ps2_uart: Disabling callback...\n```\n\n----------------------------------------\n\nTITLE: Mouse Layer Activation Logs - ZMK\nDESCRIPTION: These log messages indicate when mouse layers are being activated or deactivated based on mouse activity. The logs provide information on the timing and conditions under which the mouse layers are toggled.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_20\n\nLANGUAGE: text\nCODE:\n```\n[00:00:08.984,313] <inf> zmk: Not activating mouse layer 3, because last mouse activity was 250ms ago\n[00:00:10.580,169] <inf> zmk: Not activating mouse layer 3, because last mouse activity was 42ms ago\n[00:00:10.848,449] <inf> zmk: Activating layer 3 due to mouse activity...\n[00:00:15.222,473] <inf> zmk: Deactivating layer 3 due to mouse activity...\n```\n\n----------------------------------------\n\nTITLE: PS/2 Device Identification Logs - ZMK\nDESCRIPTION: These log messages display information about the connected PS/2 device, including its type (mouse), manufacturer (IBM), and device ID. This information helps confirm that the correct device is connected and properly identified.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_16\n\nLANGUAGE: text\nCODE:\n```\n[00:00:01.984,527] <inf> zmk: Reading PS/2 device id...\n[00:00:01.984,527] <inf> zmk: Connected PS/2 device is a mouse...\n[00:00:01.984,527] <inf> zmk: Connected device is a Trackpoint by IBM (0x01); Rom Version: 3E; Secondary ID: 0x0E\n```\n\n----------------------------------------\n\nTITLE: Disabling TrackPoint Power-On Reset\nDESCRIPTION: This code snippet shows how to disable the software-based Power-On-Reset for the TrackPoint. Commenting out this line disables the software reset, which is necessary if a hardware reset circuit is used instead. A software reset is required as TrackPoints need a specific electrical sequence to power on.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_7\n\nLANGUAGE: c\nCODE:\n```\n// #define MOUSE_PS2_PIN_RST_PRO_MICRO <&pro_micro 9 GPIO_ACTIVE_HIGH>\n```\n\n----------------------------------------\n\nTITLE: Conditionally Adding Mouse Setting Behavior Source File (CMake)\nDESCRIPTION: This CMake command conditionally adds the `src/behaviors/behavior_mouse_setting.c` source file to the `app` target if the `CONFIG_ZMK_BEHAVIOR_MOUSE_SETTING` Kconfig option is enabled. The `PRIVATE` keyword ensures that the source file is only used for compiling the `app` target and not exported to other targets.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/CMakeLists.txt#_snippet_2\n\nLANGUAGE: CMake\nCODE:\n```\ntarget_sources_ifdef(CONFIG_ZMK_BEHAVIOR_MOUSE_SETTING app PRIVATE src/behaviors/behavior_mouse_setting.c)\n```\n\n----------------------------------------\n\nTITLE: Conditionally Adding PS/2 Input Listener Source File (CMake)\nDESCRIPTION: This CMake command conditionally adds the `src/mouse/input_listener_ps2.c` source file to the `app` target if the `CONFIG_ZMK_INPUT_LISTENER_PS2` Kconfig option is enabled.  The `PRIVATE` keyword ensures that the source file is only used for compiling the `app` target and not exported to other targets.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/CMakeLists.txt#_snippet_1\n\nLANGUAGE: CMake\nCODE:\n```\ntarget_sources_ifdef(CONFIG_ZMK_INPUT_LISTENER_PS2 app PRIVATE src/mouse/input_listener_ps2.c)\n```\n\n----------------------------------------\n\nTITLE: PS/2 Self-Test Result Timeout - ZMK\nDESCRIPTION: These log messages indicate a timeout while waiting for the PS/2 device's self-test result (0xaa or 0xfc). This can occur if the device is not responding or if the driver isn't ready to receive the response.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_21\n\nLANGUAGE: text\nCODE:\n```\n[00:00:03.985,992] <wrn> ps2_uart: Data queue timed out...\n[00:00:03.986,022] <wrn> zmk: Could not read PS/2 device self-test result: -116.\n```\n\n----------------------------------------\n\nTITLE: Enabling Urob Compatibility in ZMK config\nDESCRIPTION: This snippet adds a configuration option to the keyboard's `.conf` file to enable compatibility with Urob's ZMK fork.  This setting `CONFIG_ZMK_INPUT_MOUSE_PS2_ENABLE_UROB_COMPAT=y` is specifically required if using urob's fork to ensure correct PS/2 mouse functionality.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_2\n\nLANGUAGE: conf\nCODE:\n```\nCONFIG_ZMK_INPUT_MOUSE_PS2_ENABLE_UROB_COMPAT=y\n```\n\n----------------------------------------\n\nTITLE: Conditional PS/2 GPIO Source Inclusion (Kconfig)\nDESCRIPTION: This line conditionally includes the `ps2_gpio.c` source file in the application's build if the `CONFIG_PS2_GPIO` Kconfig option is defined. The source file is added to the `app` target and is marked as `PRIVATE`, meaning it's only used within the application's scope.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/src/drivers/ps2/CMakeLists.txt#_snippet_0\n\nLANGUAGE: Kconfig\nCODE:\n```\ntarget_sources_ifdef(CONFIG_PS2_GPIO app PRIVATE ps2_gpio.c)\n```\n\n----------------------------------------\n\nTITLE: Conditional PS/2 UART Source Inclusion (Kconfig)\nDESCRIPTION: This line conditionally includes the `ps2_uart.c` source file in the application's build if the `CONFIG_PS2_UART` Kconfig option is defined. The source file is added to the `app` target and is marked as `PRIVATE`, meaning it's only used within the application's scope.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/src/drivers/ps2/CMakeLists.txt#_snippet_1\n\nLANGUAGE: Kconfig\nCODE:\n```\ntarget_sources_ifdef(CONFIG_PS2_UART app PRIVATE ps2_uart.c)\n```\n\n----------------------------------------\n\nTITLE: UART RX Framing Error Warning - ZMK\nDESCRIPTION: This log warning indicates that a framing error was detected by the UART receiver. These errors can occur during PS/2 communication, but occasional errors are acceptable if overall performance isn't affected.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_12\n\nLANGUAGE: text\nCODE:\n```\n[00:00:00.679,077] <wrn> ps2_uart: UART RX detected error for byte 0xaa: Framing error (4)\n```\n\n----------------------------------------\n\nTITLE: Enabling UART Driver for PS/2 Mouse\nDESCRIPTION: This code snippet shows how to enable the UART driver for the PS/2 mouse. Uncommenting this line enables the UART driver, while commenting it out enables the GPIO driver. The UART driver is recommended for nrf52-based controllers like the nice!nano because it provides better performance.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_5\n\nLANGUAGE: c\nCODE:\n```\n#define MOUSE_PS2_DRIVER_UART\n```\n\n----------------------------------------\n\nTITLE: Mouse Initialization Attempt - ZMK\nDESCRIPTION: These log messages show the firmware repeatedly attempting to initialize the mouse device. It indicates the attempt number and any errors encountered during the process.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_24\n\nLANGUAGE: text\nCODE:\n```\n[00:00:04.010,803] <inf> zmk: Trying to initialize mouse device (attempt 2 / 10)\n[00:00:06.010,894] <wrn> ps2_uart: Data queue timed out...\n[00:00:06.010,925] <wrn> zmk: Could not read PS/2 device self-test result: -116.\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Logging for PS/2 & UART\nDESCRIPTION: This code snippet demonstrates how to enable debug logging for the PS/2 and UART drivers in the ZMK configuration. This allows for more detailed information to be displayed in the logs, aiding in debugging issues with the drivers.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_27\n\nLANGUAGE: conf\nCODE:\n```\nCONFIG_ZMK_LOGGING_MINIMAL=y\nCONFIG_PS2_LOG_LEVEL_DBG=y\nCONFIG_UART_LOG_LEVEL_DBG=y\n```\n\n----------------------------------------\n\nTITLE: Mouse Initialization Failure - ZMK\nDESCRIPTION: This log message indicates that the firmware failed to initialize the mouse after multiple attempts (10 in this case). It suggests power cycling the mouse and resetting ZMK to try again.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_25\n\nLANGUAGE: text\nCODE:\n```\n[00:00:47.111,328] <err> zmk: Could not init a mouse in 10 attempts. Giving up. Power cycle the mouse and reset zmk to try again.\n```\n\n----------------------------------------\n\nTITLE: Reset Command Failure - ZMK\nDESCRIPTION: This log message indicates that the firmware failed to send the reset command to the PS/2 device after multiple attempts. This suggests a communication problem between the microcontroller and the device.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_23\n\nLANGUAGE: text\nCODE:\n```\n[00:00:04.010,803] <err> zmk: Could not send reset cmd\n```\n\n----------------------------------------\n\nTITLE: Conditional Compilation using target_sources_ifdef in CMake\nDESCRIPTION: This CMake command conditionally includes the `input_mouse_ps2.c` file in the application build based on the `CONFIG_ZMK_INPUT_MOUSE_PS2` configuration. If the configuration is defined, the source file is added to the application's private source files.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/src/drivers/input/CMakeLists.txt#_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ntarget_sources_ifdef(CONFIG_ZMK_INPUT_MOUSE_PS2 app PRIVATE input_mouse_ps2.c)\n```\n\n----------------------------------------\n\nTITLE: Power-On-Reset Log - ZMK\nDESCRIPTION: This log message indicates that the firmware is performing a power-on-reset sequence on a specified pin, typically for TrackPoint devices. This is essential for initializing TrackPoint modules without a dedicated reset circuit.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_13\n\nLANGUAGE: text\nCODE:\n```\n[00:00:01.384,368] <inf> zmk: Performing Power-On-Reset on pin P0.09...\n```\n\n----------------------------------------\n\nTITLE: Mouse Connection Attempt Log - ZMK\nDESCRIPTION: These log messages indicate that the firmware is waiting for the mouse to connect and attempting to initialize it. The initialization is retried multiple times.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_14\n\nLANGUAGE: text\nCODE:\n```\n[00:00:01.984,466] <inf> zmk: Waiting for mouse to connect...\n[00:00:01.984,497] <inf> zmk: Trying to initialize mouse device (attempt 1 / 10)\n```\n\n----------------------------------------\n\nTITLE: Set Log Startup Delay - ZMK Configuration\nDESCRIPTION: This configuration setting increases the log startup delay to allow for the PS/2 UART initialization messages to be displayed in the logs. This is necessary because UART initialization can be delayed, leading to missing log messages if the delay is insufficient.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_9\n\nLANGUAGE: config\nCODE:\n```\nCONFIG_LOG_PROCESS_THREAD_STARTUP_DELAY_MS=3000\n```\n\n----------------------------------------\n\nTITLE: PS/2 Self-Test Success Log - ZMK\nDESCRIPTION: This log message confirms that the PS/2 device has passed its self-test with a successful status code (0xaa). It indicates that the device is ready for further communication.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_15\n\nLANGUAGE: text\nCODE:\n```\n[00:00:01.984,497] <inf> zmk: PS/2 Device passed self-test: 0xaa\n```\n\n----------------------------------------\n\nTITLE: Adding Include Directory for Zephyr Headers (CMake)\nDESCRIPTION: This CMake command adds the `include` directory to the include search path for the Zephyr build system. This allows the compiler to find header files located in the `include` directory during compilation.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/CMakeLists.txt#_snippet_3\n\nLANGUAGE: CMake\nCODE:\n```\nzephyr_include_directories(include)\n```\n\n----------------------------------------\n\nTITLE: Conditional Subdirectory Addition with add_subdirectory_ifdef\nDESCRIPTION: This CMake snippet conditionally adds subdirectories to the build based on configuration flags. If `CONFIG_PS2` is defined, the `ps2` subdirectory is included, and if `CONFIG_INPUT` is defined, the `input` subdirectory is included.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/src/drivers/CMakeLists.txt#_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\nadd_subdirectory_ifdef(CONFIG_PS2 ps2)\nadd_subdirectory_ifdef(CONFIG_INPUT input)\n```\n\n----------------------------------------\n\nTITLE: TrackPoint Sensitivity Setting Logs - ZMK\nDESCRIPTION: These log messages show the firmware attempting to set the TrackPoint sensitivity. Successful writes indicate the settings are being applied.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_17\n\nLANGUAGE: text\nCODE:\n```\n[00:00:01.991,058] <inf> zmk: Setting TP sensitivity to 135...\n[00:00:02.002,777] <inf> zmk: Successfully set TP sensitivity to 135\n```\n\n----------------------------------------\n\nTITLE: Disabling UART Driver (Switch to GPIO)\nDESCRIPTION: This code snippet shows how to disable the UART driver and switch to the GPIO driver in the ZMK configuration. This is useful for troubleshooting compatibility issues with different pointing devices.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_26\n\nLANGUAGE: C\nCODE:\n```\n// #define MOUSE_PS2_DRIVER_UART\n```\n\n----------------------------------------\n\nTITLE: Adding Subdirectory for Drivers using CMake\nDESCRIPTION: This CMake command adds the `src/drivers` subdirectory to the build process. This allows the CMake project to find and compile the source files located within the `src/drivers` directory.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/CMakeLists.txt#_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\nadd_subdirectory(src/drivers)\n```\n\n----------------------------------------\n\nTITLE: Disabling USB Logging\nDESCRIPTION: This code snippet disables USB logging in the ZMK configuration to improve battery life. Logging consumes power, so disabling it can extend the operating time of the keyboard.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_28\n\nLANGUAGE: conf\nCODE:\n```\nCONFIG_ZMK_USB_LOGGING=y\n```\n\n----------------------------------------\n\nTITLE: ZMK Welcome Message - ZMK\nDESCRIPTION: This log message indicates that the ZMK firmware has started successfully. It is a basic indicator of the firmware's initial state.\nSOURCE: https://github.com/badjeff/kb_zmk_ps2_mouse_trackpoint_driver/blob/main/README.md#_snippet_11\n\nLANGUAGE: text\nCODE:\n```\n[00:00:00.423,828] <inf> zmk: Welcome to ZMK!\n```"
  }
]
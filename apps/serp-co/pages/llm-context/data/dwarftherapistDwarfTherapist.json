[
  {
    "owner": "dwarf-therapist",
    "repo": "dwarf-therapist",
    "content": "TITLE: File Structure Pattern for Dwarf Therapist Data\nDESCRIPTION: Demonstrates the expected file organization pattern for Dwarf Therapist configurations. Gridviews use .dtg extension and are loaded sequentially by name. Memory layouts are organized by OS type with .ini extension. Game data configurations can override defaults using game_data.ini.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/share/README.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ngridviews/\n    *.dtg\n\nmemory_layouts/\n    linux/*.ini\n    osx/*.ini\n    windows/*.ini\n\ngame_data.ini\n```\n\n----------------------------------------\n\nTITLE: Platform-Specific Configuration\nDESCRIPTION: Configures platform-specific source files and libraries for Windows, Linux, and macOS.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/CMakeLists.txt#2025-04-21_snippet_3\n\nLANGUAGE: cmake\nCODE:\n```\nif(WIN32)\n    add_definitions(-DUNICODE -D_UNICODE -DNOMINMAX)\n    set(SOURCES ${SOURCES} DwarfTherapist.rc src/dfinstancewindows.cpp)\n    set(LIBS user32 psapi)\nelseif(UNIX)\n    set(SOURCES ${SOURCES} src/dfinstancenix.cpp)\n    if(APPLE)\n        set(SOURCES ${SOURCES} DwarfTherapist.rc src/dfinstanceosx.mm)\n        find_library(FOUNDATION_LIB Foundation)\n        find_library(SECURITY_LIB Security)\n        find_library(APPKIT_LIB AppKit)\n        set(LIBS ${FOUNDATION_LIB} ${SECURITY_LIB} ${APPKIT_LIB})\n\n        set(MACOSX_BUNDLE_GUI_IDENTIFIER \"io.github.dwarf-therapist.DwarfTherapist\")\n        set(MACOSX_BUNDLE_SHORT_VERSION_STRING \"${DT_VERSION_MAJOR}.${DT_VERSION_MINOR}.${DT_VERSION_PATCH}\")\n        set(MACOSX_BUNDLE_BUNDLE_VERSION \"${DT_VERSION}\")\n    else()\n        set(SOURCES ${SOURCES} src/dfinstancelinux.cpp)\n    endif()\nelse()\n    message(FATAL_ERROR \"unsupported target\")\nendif()\n```\n\n----------------------------------------\n\nTITLE: Qt5 Configuration and Dependencies\nDESCRIPTION: Sets up Qt5 build configuration and finds required Qt components.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/CMakeLists.txt#2025-04-21_snippet_2\n\nLANGUAGE: cmake\nCODE:\n```\nset(CMAKE_AUTOMOC ON)\nset(CMAKE_AUTOUIC ON)\nset(CMAKE_AUTORCC ON)\nset(CMAKE_INCLUDE_CURRENT_DIR ON)\n\nfind_package(Qt5 REQUIRED COMPONENTS Qml Widgets Concurrent)\n```\n\n----------------------------------------\n\nTITLE: Cloning Dwarf Therapist Repository\nDESCRIPTION: Git command to clone the Dwarf Therapist source code repository from GitHub and navigate to the project directory.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/BUILDING.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Dwarf-Therapist/Dwarf-Therapist.git\ncd Dwarf-Therapist\n```\n\n----------------------------------------\n\nTITLE: Setting CMake Basic Configuration\nDESCRIPTION: Configures basic CMake settings including C++14 standard requirement and compiler flags.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/CMakeLists.txt#2025-04-21_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required(VERSION 3.5.0 FATAL_ERROR)\nproject(DwarfTherapist)\n\nset(CMAKE_CXX_STANDARD 14)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\nif(CMAKE_COMPILER_IS_GNUCC)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall\")\nendif()\n```\n\n----------------------------------------\n\nTITLE: Version Configuration and File Generation\nDESCRIPTION: Sets up version information and generates configuration files based on version numbers.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/CMakeLists.txt#2025-04-21_snippet_1\n\nLANGUAGE: cmake\nCODE:\n```\nset(DT_VERSION \"42.1.12\")\nif(${DT_VERSION} MATCHES \"^([0-9]+)\\\\.([0-9]+)\\\\.([0-9]+)(-(.*))?$\")\n    set(DT_VERSION_MAJOR ${CMAKE_MATCH_1})\n    set(DT_VERSION_MINOR ${CMAKE_MATCH_2})\n    set(DT_VERSION_PATCH ${CMAKE_MATCH_3})\n    set(DT_VERSION_EXTRA \"\\\"${CMAKE_MATCH_5}\\\"\")\nelse()\n    message(FATAL_ERROR \"Failed to parse version string: ${DT_VERSION}\")\nendif()\nconfigure_file(src/version.h.in src/version.h @ONLY)\nconfigure_file(lnp/manifest.json.in lnp/manifest.json @ONLY)\n```\n\n----------------------------------------\n\nTITLE: Build Configuration Options\nDESCRIPTION: Defines build options for portable and development mode configurations.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/CMakeLists.txt#2025-04-21_snippet_4\n\nLANGUAGE: cmake\nCODE:\n```\noption(BUILD_PORTABLE \"Build as portable application (look for files in the application directory)\" OFF)\nif(BUILD_PORTABLE)\n    add_definitions(-DBUILD_PORTABLE)\nendif()\noption(BUILD_DEVMODE \"Build as devmode, using current source directory as source for data\" OFF)\nif (BUILD_DEVMODE)\n    add_definitions(\"-DDEVMODE_PATH=\\\"${CMAKE_CURRENT_SOURCE_DIR}/share\\\"\")\n    install(CODE \"message(FATAL_ERROR \\\"Cannot install when built with BUILD_DEVMODE\\\")\")\nendif()\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Debian/Ubuntu Linux\nDESCRIPTION: Command to install required development dependencies on Debian-based Linux distributions using apt-get package manager. Installs CMake build system, C++ compiler, and Qt development libraries.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/BUILDING.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install cmake g++ qtbase5-dev qtdeclarative5-dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Fedora Linux\nDESCRIPTION: Command to install required development dependencies on Fedora Linux using the dnf package manager. Installs CMake build system, C++ compiler, and Qt development libraries.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/BUILDING.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo dnf install cmake gcc-c++ qt5-qtbase-devel qt5-qtdeclarative-devel\n```\n\n----------------------------------------\n\nTITLE: Windows Build Process with Visual Studio and Qt\nDESCRIPTION: Complete sequence of commands for building Dwarf Therapist on Windows using Visual Studio. Includes creating a build directory, running CMake with Qt path, and building the solution with MSBuild.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/BUILDING.md#2025-04-21_snippet_10\n\nLANGUAGE: cmd\nCODE:\n```\nmkdir build\ncd build\ncmake -DCMAKE_PREFIX_PATH=E:/Qt/Qt5.9.7/5.9.7/msvc2017_64 -G \"Visual Studio 15 2017 Win64\" ../\nMSBuild.exe DwarfTherapist.sln /p:Configuration=Release\n```\n\n----------------------------------------\n\nTITLE: Creating Build Directory for Linux/macOS\nDESCRIPTION: Commands to create and navigate to a build directory for compiling Dwarf Therapist, following the out-of-source build pattern recommended for CMake projects.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/BUILDING.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmkdir build\ncd build\n```\n\n----------------------------------------\n\nTITLE: Running CMake for Linux Build\nDESCRIPTION: Command to generate build files using CMake for Linux. The comment explains how to use the CMAKE_INSTALL_PREFIX option to specify the installation location.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/BUILDING.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncmake .. <options>\n```\n\n----------------------------------------\n\nTITLE: Building and Installing on Linux\nDESCRIPTION: Commands to compile Dwarf Therapist using make and install it to the specified location, with an option to use sudo for system-wide installation.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/BUILDING.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmake\nmake install\n```\n\n----------------------------------------\n\nTITLE: Checking Ptrace Permissions on Linux\nDESCRIPTION: Command to check the ptrace permission settings on Linux systems, which affects Dwarf Therapist's ability to connect to Dwarf Fortress.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/BUILDING.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsysctl kernel.yama.ptrace_scope\n```\n\n----------------------------------------\n\nTITLE: Installing macOS Dependencies with Homebrew\nDESCRIPTION: Commands to install the required dependencies (CMake and Qt) on macOS using the Homebrew package manager.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/BUILDING.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbrew install cmake\nbrew install qt\n```\n\n----------------------------------------\n\nTITLE: Running CMake for macOS Build\nDESCRIPTION: Command to configure the build for macOS using CMake, specifying the Qt installation path provided by Homebrew.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/BUILDING.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncmake .. -DCMAKE_PREFIX_PATH=/usr/local/opt/qt\n```\n\n----------------------------------------\n\nTITLE: Building on macOS\nDESCRIPTION: Command to compile Dwarf Therapist on macOS using the make build system after CMake configuration.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/BUILDING.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nmake\n```\n\n----------------------------------------\n\nTITLE: Preparing Windows Distribution Files\nDESCRIPTION: Commands to collect all necessary files for running Dwarf Therapist on Windows into a single directory, including the executable, Qt dependencies, and data files.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/BUILDING.md#2025-04-21_snippet_11\n\nLANGUAGE: cmd\nCODE:\n```\nmkdir ..\\run\ncopy Release\\DwarfTherapist.exe ..\\run\nE:\\Qt\\Qt5.9.7\\5.9.7\\msvc2017_64\\bin\\windeployqt.exe ..\\run\nmkdir ..\\run\\data\nxcopy /s ..\\share\\* ..\\run\\data\n```\n\n----------------------------------------\n\nTITLE: Starting Dwarf Fortress as Child Process of Dwarf Therapist in Bash\nDESCRIPTION: A bash script that launches Dwarf Fortress as a child process of Dwarf Therapist, allowing memory tracing when ptrace_scope is set to 1. Both applications must be started together, and if either one closes, both need to be restarted.\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/dist/ptrace_scope/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\nset -e\n{\n    # Setup DF environment here\n    cd /path/to/df\n    exec ./df\n} &\n\n# Setup DT environment here\nexec dwarftherapist\n```\n\n----------------------------------------\n\nTITLE: MIT License Header Comment\nDESCRIPTION: C-style comment block containing the MIT license text for the Dwarf Therapist project, including copyright notice and permissions granted to users\nSOURCE: https://github.com/dwarf-therapist/dwarf-therapist/blob/master/LICENSE.txt#2025-04-21_snippet_0\n\nLANGUAGE: cpp\nCODE:\n```\n/*\nDwarf Therapist\nCopyright (c) 2009,2010 Trey Stout (chmod)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\nhttp://www.opensource.org/licenses/mit-license.php\n*/\n```"
  }
]
[
  {
    "owner": "tosave04",
    "repo": "dolibarr-utils-ts",
    "content": "TITLE: Initializing DolibarrApi Instance in TypeScript\nDESCRIPTION: Example of importing and instantiating the DolibarrApi class with API URL and key from environment variables.\nSOURCE: https://github.com/tosave04/dolibarr-utils-ts/blob/main/README.md#2025-04-20_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DolibarrApi } from \"@tosave04/dolibarr-utils-ts\"\n\nconst url = String(process.env.DOLIBARR_API_URL)\nconst key = String(process.env.DOLIBARR_API_KEY)\n\nconst dolibarrApi = new DolibarrApi(url, key)\n```\n\n----------------------------------------\n\nTITLE: Installing Dolibarr Utils TypeScript Library\nDESCRIPTION: Commands to install the @tosave04/dolibarr-utils-ts package using npm or yarn package managers.\nSOURCE: https://github.com/tosave04/dolibarr-utils-ts/blob/main/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @tosave04/dolibarr-utils-ts\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @tosave04/dolibarr-utils-ts\n```\n\n----------------------------------------\n\nTITLE: Creating a New Product in TypeScript\nDESCRIPTION: Example of creating a new product in Dolibarr using the products.create method.\nSOURCE: https://github.com/tosave04/dolibarr-utils-ts/blob/main/README.md#2025-04-20_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst newProduct = {\n\tlabel: \"New Product\",\n\tprice: 100,\n\t// Other product fields...\n}\n\ndolibarrApi.products\n\t.create(newProduct)\n\t.then((productId) => {\n\t\tconsole.log(\"Created Product ID:\", productId)\n\t})\n\t.catch((error) => {\n\t\tconsole.error(\"Error:\", error)\n\t})\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Product in TypeScript\nDESCRIPTION: Example of updating an existing product by its ID using the products.update method.\nSOURCE: https://github.com/tosave04/dolibarr-utils-ts/blob/main/README.md#2025-04-20_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst updatedProduct = {\n\tlabel: \"Updated Product\",\n\tprice: 150,\n\t// Other product fields...\n}\n\ndolibarrApi.products\n\t.update(1, updatedProduct)\n\t.then((response) => {\n\t\tconsole.log(\"Update Response:\", response)\n\t})\n\t.catch((error) => {\n\t\tconsole.error(\"Error:\", error)\n\t})\n```\n\n----------------------------------------\n\nTITLE: Deleting a Product in TypeScript\nDESCRIPTION: Example of deleting a product by its ID using the products.delete method.\nSOURCE: https://github.com/tosave04/dolibarr-utils-ts/blob/main/README.md#2025-04-20_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ndolibarrApi.products\n\t.delete(1)\n\t.then((response) => {\n\t\tconsole.log(\"Delete Response:\", response)\n\t})\n\t.catch((error) => {\n\t\tconsole.error(\"Error:\", error)\n\t})\n```\n\n----------------------------------------\n\nTITLE: Pinging Dolibarr API in TypeScript\nDESCRIPTION: Example of using the ping method to check the API status.\nSOURCE: https://github.com/tosave04/dolibarr-utils-ts/blob/main/README.md#2025-04-20_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ndolibarrApi\n\t.ping()\n\t.then((response) => {\n\t\tconsole.log(\"API Status:\", response)\n\t})\n\t.catch((error) => {\n\t\tconsole.error(\"Error:\", error)\n\t})\n```\n\n----------------------------------------\n\nTITLE: Listing Proposals with Sorting in TypeScript\nDESCRIPTION: Example of retrieving a list of proposals with optional sorting parameters.\nSOURCE: https://github.com/tosave04/dolibarr-utils-ts/blob/main/README.md#2025-04-20_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ndolibarrApi.proposals\n\t.list({ sortfield: \"t.rowid\", sortorder: \"ASC\" })\n\t.then((proposals) => {\n\t\tconsole.log(\"Proposals:\", proposals)\n\t})\n\t.catch((error) => {\n\t\tconsole.error(\"Error:\", error)\n\t})\n```\n\n----------------------------------------\n\nTITLE: Building Distribution Folder in Bash\nDESCRIPTION: Commands to test, build, and verify the distribution folder of the project.\nSOURCE: https://github.com/tosave04/dolibarr-utils-ts/blob/main/README.md#2025-04-20_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nyarn test # To check the cohesion of the methods\nyarn build # tsup compilation of the dist folder\nyarn test-dist # Run the `test.js` file created in the dist folder\n```\n\n----------------------------------------\n\nTITLE: Formatting Comments with Regular Expression in Bash\nDESCRIPTION: A regular expression to help format comments in the codebase, particularly for @param and @return tags.\nSOURCE: https://github.com/tosave04/dolibarr-utils-ts/blob/main/README.md#2025-04-20_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nfind: @(param|return)\\s*([\\w|<>]+)\\s*(\\$(\\w*))?\\s*\nreplace: @$1\\t$2\\t\\t$4\\t\\t\n```"
  }
]
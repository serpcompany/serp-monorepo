[
  {
    "owner": "erwinm",
    "repo": "acts_as_tenant",
    "content": "TITLE: Scoping a Model to Tenant in Ruby on Rails\nDESCRIPTION: Add acts_as_tenant to a model to scope it to the current tenant. This ensures all queries and operations on this model are tenant-aware.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_9\n\nLANGUAGE: ruby\nCODE:\n```\nclass Project < ActiveRecord::Base\n  acts_as_tenant(:account)\nend\n```\n\n----------------------------------------\n\nTITLE: Setting Current Tenant by Subdomain or Domain in Ruby on Rails\nDESCRIPTION: Configure the application controller to set the current tenant based on the subdomain or domain. This method checks for a subdomain first and falls back to the domain if needed.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nclass ApplicationController < ActionController::Base\n  set_current_tenant_by_subdomain_or_domain(:account, :subdomain, :domain)\nend\n```\n\n----------------------------------------\n\nTITLE: Setting Current Tenant by Subdomain in Ruby on Rails\nDESCRIPTION: Configure the application controller to set the current tenant based on the subdomain. This method uses the Account model and the 'subdomain' column for tenant lookup.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nclass ApplicationController < ActionController::Base\n  set_current_tenant_by_subdomain(:account, :subdomain)\nend\n```\n\n----------------------------------------\n\nTITLE: Manually Setting Current Tenant in Ruby on Rails Controller\nDESCRIPTION: Configure a controller to manually set the current tenant using a before_action filter. This approach allows for custom tenant lookup logic.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nclass ApplicationController < ActionController::Base\n  set_current_tenant_through_filter\n  before_action :your_method_that_finds_the_current_tenant\n\n  def your_method_that_finds_the_current_tenant\n    current_account = Account.find_it\n    set_current_tenant(current_account)\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring Acts As Tenant in Ruby\nDESCRIPTION: Shows how to create an initializer to control options in ActsAsTenant. The example demonstrates setting 'require_tenant' option which can raise an error when queries are made without a tenant.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_14\n\nLANGUAGE: ruby\nCODE:\n```\nActsAsTenant.configure do |config|\n  config.require_tenant = false # true\n\n  # Customize the query for loading the tenant in background jobs\n  config.job_scope = ->{ all }\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring Tenant by Subdomain in Rails Controller\nDESCRIPTION: Configuration in ApplicationController to set the current tenant based on subdomain, specifying the account model and subdomain column.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/docs/blog_post.md#2025-04-17_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nclass ApplicationController < ActionController::Base\n  set_current_tenant_by_subdomain(:account, :subdomain)\nend\n```\n\n----------------------------------------\n\nTITLE: Setting Current Tenant in Specific Controller in Ruby on Rails\nDESCRIPTION: Configure a specific controller to set the current tenant. This example demonstrates setting the tenant based on the current user's account.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\nclass MembersController < ActionController::Base\n  set_current_tenant_through_filter\n  before_action :set_tenant\n  before_action :set_member, only: [:show, :edit, :update, :destroy]\n\n  def set_tenant\n    set_current_tenant(current_user.account)\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Validating Attribute Uniqueness within Tenant Scope in Ruby on Rails\nDESCRIPTION: Use validates_uniqueness_to_tenant to ensure attribute uniqueness within the scope of the current tenant.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_10\n\nLANGUAGE: ruby\nCODE:\n```\nvalidates_uniqueness_to_tenant :name, :email\n```\n\n----------------------------------------\n\nTITLE: Implementing Tenant Change Hook for Postgres Row-Level Security\nDESCRIPTION: Example of using the config.tenant_change_hook callback to implement Postgres row-level security when a tenant changes. This hook executes a SQL statement to set the account_id parameter and logs the tenant change.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nActsAsTenant.configure do |config|\n  config.tenant_change_hook = lambda do |tenant|\n    if tenant.present?\n      ActiveRecord::Base.connection.execute(ActiveRecord::Base.sanitize_sql_array([\"SET rls.account_id = ?;\", tenant.id]))\n      Rails.logger.info \"Changed tenant to \" + [tenant.id, tenant.name].to_json\n    end\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Setting Up Testing with ActsAsTenant in RSpec\nDESCRIPTION: Shows how to set up middleware and configure RSpec to properly handle tenant scoping in both regular and integration tests, including managing test_tenant and current_tenant values.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_18\n\nLANGUAGE: ruby\nCODE:\n```\n# test.rb\nrequire_dependency 'acts_as_tenant/test_tenant_middleware'\n\nRails.application.configure do\n  config.middleware.use ActsAsTenant::TestTenantMiddleware\nend\n```\n\nLANGUAGE: ruby\nCODE:\n```\n# spec_helper.rb\nconfig.before(:suite) do |example|\n  # Make the default tenant globally available to the tests\n  $default_account = Account.create!\nend\n\nconfig.before(:each) do |example|\n  if example.metadata[:type] == :request\n    # Set the `test_tenant` value for integration tests\n    ActsAsTenant.test_tenant = $default_account\n  else\n    # Otherwise just use current_tenant\n    ActsAsTenant.current_tenant = $default_account\n  end\nend\n\nconfig.after(:each) do |example|\n  # Clear any tenancy that might have been set\n  ActsAsTenant.current_tenant = nil\n  ActsAsTenant.test_tenant = nil\nend\n```\n\n----------------------------------------\n\nTITLE: Adding Tenant Column to Projects Table in Ruby on Rails Migration\nDESCRIPTION: Create a migration to add an account_id column to the projects table, which will be used for tenant scoping.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_8\n\nLANGUAGE: ruby\nCODE:\n```\nclass AddAccountToProjects < ActiveRecord::Migration\n  def up\n    add_column :projects, :account_id, :integer\n    add_index  :projects, :account_id\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Adding Account Reference Migration in Rails\nDESCRIPTION: Database migration for adding an account_id column to the projects table to establish tenant relationship.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/docs/blog_post.md#2025-04-17_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nclass Addaccounttoproject < ActiveRecord::Migration\n  def change\n    add_column :projects, :account_id, :integer\n  end\nend\n\nclass Project < ActiveRecord::Base\n  acts_as_tenant(:account)\n  validates_uniqueness_to_tenant :name\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring Sidekiq Support for ActsAsTenant\nDESCRIPTION: Shows how to enable ActsAsTenant support for Sidekiq background processing by adding the necessary require statement in the initializer.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_17\n\nLANGUAGE: ruby\nCODE:\n```\nrequire 'acts_as_tenant/sidekiq'\n```\n\n----------------------------------------\n\nTITLE: Using Lambda with require_tenant in Acts As Tenant\nDESCRIPTION: Shows how to assign a lambda to config.require_tenant that is evaluated at runtime to determine if a tenant is required based on request path.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_15\n\nLANGUAGE: ruby\nCODE:\n```\nActsAsTenant.configure do |config|\n  config.require_tenant = lambda do\n    if $request_env.present?\n      return false if $request_env[\"REQUEST_PATH\"].start_with?(\"/admin/\")\n    end\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Manual Tenant Configuration in Rails Controller\nDESCRIPTION: Alternative approach to manually set the current tenant in ApplicationController using a custom method to find the account.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/docs/blog_post.md#2025-04-17_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nclass ApplicationController < ActionController::Base\n  current_account = Account.method_to_find_the_current_account\n  set_current_tenant_to(current_account)\nend\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Foreign Key for Tenant in Ruby on Rails\nDESCRIPTION: Configure acts_as_tenant to use a custom foreign key for the tenant association if it differs from the default naming convention.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_11\n\nLANGUAGE: ruby\nCODE:\n```\nacts_as_tenant(:account, :foreign_key => 'accountID') # by default AaT expects account_id\n```\n\n----------------------------------------\n\nTITLE: Implementing HABTM Relationships with acts_as_tenant in Ruby\nDESCRIPTION: Shows how to scope a model that is part of a Has And Belongs To Many relationship using the 'through' option with acts_as_tenant.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_13\n\nLANGUAGE: ruby\nCODE:\n```\nclass Organisation < ActiveRecord::Base\n  has_many :organisations_users\n  has_many :users, through: :organisations_users\nend\n\nclass User < ActiveRecord::Base\n  has_many :organisations_users\n  acts_as_tenant :organisation, through: :organisations_users\nend\n\nclass OrganisationsUser < ActiveRecord::Base\n  belongs_to :user\n  acts_as_tenant :organisation\nend\n```\n\n----------------------------------------\n\nTITLE: Setting Current Tenant for a Block in Ruby\nDESCRIPTION: Use a block to set the current tenant for a specific section of code. This is useful for background processes or isolated operations.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\nActsAsTenant.with_tenant(current_account) do\n  # Current tenant is set for all code in this block\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring Job Scope for Soft Deleted Tenants\nDESCRIPTION: Configuration example for customizing how tenants are loaded in background jobs, particularly useful for situations like soft delete. The job_scope lambda customizes the query used to find tenants.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nActsAsTenant.configure do |config|\n  config.job_scope = ->{ with_deleted }\nend\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Primary Key for Tenant in Ruby on Rails\nDESCRIPTION: Configure acts_as_tenant to use a custom primary key for the tenant model if it differs from the default 'id' column.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_12\n\nLANGUAGE: ruby\nCODE:\n```\nacts_as_tenant(:account, :primary_key => 'primaryID') # by default AaT expects id\n```\n\n----------------------------------------\n\nTITLE: Disabling Tenant Checking for a Block in Ruby\nDESCRIPTION: Disable tenant checking for a specific block of code. This is useful for shared routes or admin panels when the 'require_tenant' option is enabled.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_6\n\nLANGUAGE: ruby\nCODE:\n```\nActsAsTenant.without_tenant do\n  # Tenant checking is disabled for all code in this block\nend\n```\n\n----------------------------------------\n\nTITLE: Allowing Tenant Updating for a Block in Ruby\nDESCRIPTION: Enable tenant updating for a specific block of code. This feature is useful for admin screens where changing the tenant on existing models is allowed.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\nActsAsTenant.with_mutable_tenant do\n  # Tenant updating is enabled for all code in this block\nend\n```\n\n----------------------------------------\n\nTITLE: Setting Default Tenant in Rails Console for ActsAsTenant\nDESCRIPTION: Shows how to set the default tenant in Rails console for improved developer experience, especially when require_tenant is enabled.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_16\n\nLANGUAGE: ruby\nCODE:\n```\nSET_TENANT_PROC = lambda do\n  if defined?(Rails::Console)\n    puts \"> ActsAsTenant.current_tenant = Account.first\"\n    ActsAsTenant.current_tenant = Account.first\n  end\nend\n\nRails.application.configure do\n  if Rails.env.development?\n    # Set the tenant to the first account in development on load\n    config.after_initialize do\n      SET_TENANT_PROC.call\n    end\n\n    # Reset the tenant after calling 'reload!' in the console\n    ActiveSupport::Reloader.to_complete do\n      SET_TENANT_PROC.call\n    end\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Installing Acts As Tenant Gem in Ruby\nDESCRIPTION: Add the Acts As Tenant gem to your Gemfile for installation in a Ruby on Rails project.\nSOURCE: https://github.com/ErwinM/acts_as_tenant/blob/master/README.md#2025-04-17_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\ngem 'acts_as_tenant'\n```"
  }
]
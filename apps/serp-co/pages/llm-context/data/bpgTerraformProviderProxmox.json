[
  {
    "owner": "bpg",
    "repo": "terraform-provider-proxmox",
    "content": "TITLE: Creating a Proxmox VM with Ubuntu using Terraform\nDESCRIPTION: This example demonstrates how to create an Ubuntu VM in Proxmox with Terraform. It includes configuration for VM resources, cloud-init initialization, SSH key setup, and output values for credentials. The configuration covers CPU, memory, disk, networking, operating system, and more.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_vm.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_vm\" \"ubuntu_vm\" {\n  name        = \"terraform-provider-proxmox-ubuntu-vm\"\n  description = \"Managed by Terraform\"\n  tags        = [\"terraform\", \"ubuntu\"]\n\n  node_name = \"first-node\"\n  vm_id     = 4321\n\n  agent {\n    # read 'Qemu guest agent' section, change to true only when ready\n    enabled = false\n  }\n  # if agent is not enabled, the VM may not be able to shutdown properly, and may need to be forced off\n  stop_on_destroy = true\n\n  startup {\n    order      = \"3\"\n    up_delay   = \"60\"\n    down_delay = \"60\"\n  }\n\n  cpu {\n    cores        = 2\n    type         = \"x86-64-v2-AES\"  # recommended for modern CPUs\n  }\n\n  memory {\n    dedicated = 2048\n    floating  = 2048 # set equal to dedicated to enable ballooning\n  }\n\n  disk {\n    datastore_id = \"local-lvm\"\n    file_id      = proxmox_virtual_environment_download_file.latest_ubuntu_22_jammy_qcow2_img.id\n    interface    = \"scsi0\"\n  }\n\n  initialization {\n    ip_config {\n      ipv4 {\n        address = \"dhcp\"\n      }\n    }\n\n    user_account {\n      keys     = [trimspace(tls_private_key.ubuntu_vm_key.public_key_openssh)]\n      password = random_password.ubuntu_vm_password.result\n      username = \"ubuntu\"\n    }\n\n    user_data_file_id = proxmox_virtual_environment_file.cloud_config.id\n  }\n\n  network_device {\n    bridge = \"vmbr0\"\n  }\n\n  operating_system {\n    type = \"l26\"\n  }\n\n  tpm_state {\n    version = \"v2.0\"\n  }\n\n  serial_device {}\n\n  virtiofs {\n    mapping = \"data_share\"\n    cache = \"always\"\n    direct_io = true\n  }\n}\n\nresource \"proxmox_virtual_environment_download_file\" \"latest_ubuntu_22_jammy_qcow2_img\" {\n  content_type = \"iso\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n  url          = \"https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img\"\n}\n\nresource \"random_password\" \"ubuntu_vm_password\" {\n  length           = 16\n  override_special = \"_%@\"\n  special          = true\n}\n\nresource \"tls_private_key\" \"ubuntu_vm_key\" {\n  algorithm = \"RSA\"\n  rsa_bits  = 2048\n}\n\noutput \"ubuntu_vm_password\" {\n  value     = random_password.ubuntu_vm_password.result\n  sensitive = true\n}\n\noutput \"ubuntu_vm_private_key\" {\n  value     = tls_private_key.ubuntu_vm_key.private_key_pem\n  sensitive = true\n}\n\noutput \"ubuntu_vm_public_key\" {\n  value = tls_private_key.ubuntu_vm_key.public_key_openssh\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox Container with Ubuntu Template\nDESCRIPTION: Demonstrates the complete setup of an Ubuntu container in Proxmox VE including network configuration, storage allocation, SSH key setup, and mount points. The configuration includes DHCP networking, volume mounting, startup order settings, and automatic password generation.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_container.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_container\" \"ubuntu_container\" {\n  description = \"Managed by Terraform\"\n\n  node_name = \"first-node\"\n  vm_id     = 1234\n\n  initialization {\n    hostname = \"terraform-provider-proxmox-ubuntu-container\"\n\n    ip_config {\n      ipv4 {\n        address = \"dhcp\"\n      }\n    }\n\n    user_account {\n      keys = [\n        trimspace(tls_private_key.ubuntu_container_key.public_key_openssh)\n      ]\n      password = random_password.ubuntu_container_password.result\n    }\n  }\n\n  network_interface {\n    name = \"veth0\"\n  }\n\n  disk {\n    datastore_id = \"local-lvm\"\n    size         = 4\n  }\n  \n  operating_system {\n    template_file_id = proxmox_virtual_environment_download_file.latest_ubuntu_22_jammy_lxc_img.id\n    # Or you can use a volume ID, as obtained from a \"pvesm list <storage>\"\n    # template_file_id = \"local:vztmpl/jammy-server-cloudimg-amd64.tar.gz\"\n    type             = \"ubuntu\"\n  }\n\n  mount_point {\n    # bind mount, *requires* root@pam authentication\n    volume = \"/mnt/bindmounts/shared\"\n    path   = \"/mnt/shared\"\n  }\n\n  mount_point {\n    # volume mount, a new volume will be created by PVE\n    volume = \"local-lvm\"\n    size   = \"10G\"\n    path   = \"/mnt/volume\"\n  }\n\n  startup {\n    order      = \"3\"\n    up_delay   = \"60\"\n    down_delay = \"60\"\n  }\n}\n\nresource \"proxmox_virtual_environment_download_file\" \"latest_ubuntu_22_jammy_lxc_img\" {\n  content_type = \"vztmpl\"\n  datastore_id = \"local\"\n  node_name    = \"first-node\"\n  url          = \"http://download.proxmox.com/images/system/ubuntu-20.04-standard_20.04-1_amd64.tar.gz\"\n}\n\nresource \"random_password\" \"ubuntu_container_password\" {\n  length           = 16\n  override_special = \"_%@\"\n  special          = true\n}\n\nresource \"tls_private_key\" \"ubuntu_container_key\" {\n  algorithm = \"RSA\"\n  rsa_bits  = 2048\n}\n\noutput \"ubuntu_container_password\" {\n  value     = random_password.ubuntu_container_password.result\n  sensitive = true\n}\n\noutput \"ubuntu_container_private_key\" {\n  value     = tls_private_key.ubuntu_container_key.private_key_pem\n  sensitive = true\n}\n\noutput \"ubuntu_container_public_key\" {\n  value = tls_private_key.ubuntu_container_key.public_key_openssh\n}\n```\n\n----------------------------------------\n\nTITLE: Cloning a VM Template in Proxmox with Terraform\nDESCRIPTION: This Terraform code clones a previously created VM template in Proxmox. It specifies the source template, configures memory, DNS, and IP settings. It also outputs the IPv4 address of the cloned VM.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/clone-vm.md#2025-04-23_snippet_1\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_vm\" \"ubuntu_clone\" {\n  name      = \"ubuntu-clone\"\n  node_name = \"pve\"\n\n  clone {\n    vm_id = proxmox_virtual_environment_vm.ubuntu_template.id\n  }\n\n  agent {\n    enabled = true\n  }\n\n  memory {\n    dedicated = 768\n  }\n\n  initialization {\n    dns {\n      servers = [\"1.1.1.1\"]\n    }\n    ip_config {\n      ipv4 {\n        address = \"dhcp\"\n      }\n    }\n  }\n}\n\noutput \"vm_ipv4_address\" {\n  value = proxmox_virtual_environment_vm.ubuntu_clone.ipv4_addresses[1][0]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider with API Token Authentication in HCL\nDESCRIPTION: Example of configuring the Proxmox provider using API token authentication, which is the recommended approach for production environments due to its enhanced security and revocability.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_1\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  endpoint  = \"https://10.0.0.2:8006/\"\n  api_token = \"terraform@pve!provider=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring VM with Native Proxmox Cloud-Init Support in Terraform\nDESCRIPTION: This snippet demonstrates how to use Terraform to create a Proxmox VM with native cloud-init support. It sets up the VM with a static IP, SSH key, and downloads an Ubuntu cloud image.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/cloud-init.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"local_file\" \"ssh_public_key\" {\n  filename = \"./id_rsa.pub\"\n}\n\nresource \"proxmox_virtual_environment_vm\" \"ubuntu_vm\" {\n  name      = \"test-ubuntu\"\n  node_name = \"pve\"\n\n  initialization {\n    ip_config {\n      ipv4 {\n        address = \"192.168.3.233/24\"\n        gateway = \"192.168.3.1\"\n      }\n    }\n\n    user_account {\n      username = \"ubuntu\"\n      keys     = [trimspace(data.local_file.ssh_public_key.content)]\n    }\n  }\n\n  disk {\n    datastore_id = \"local-lvm\"\n    file_id      = proxmox_virtual_environment_download_file.ubuntu_cloud_image.id\n    interface    = \"virtio0\"\n    iothread     = true\n    discard      = \"on\"\n    size         = 20\n  }\n\n  network_device {\n    bridge = \"vmbr0\"\n  }\n}\n\nresource \"proxmox_virtual_environment_download_file\" \"ubuntu_cloud_image\" {\n  content_type = \"iso\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n\n  url = \"https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Firewall Rules in Terraform\nDESCRIPTION: Example HCL configuration that creates firewall rules for a VM in Proxmox Virtual Environment. It demonstrates setting up inbound rules for HTTP and HTTPS traffic to a specific IP address, as well as applying a security group.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_firewall_rules.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_firewall_rules\" \"inbound\" {\n  depends_on = [\n    proxmox_virtual_environment_vm.example,\n    proxmox_virtual_environment_cluster_firewall_security_group.example,\n  ]\n\n  node_name = proxmox_virtual_environment_vm.example.node_name\n  vm_id     = proxmox_virtual_environment_vm.example.vm_id\n\n  rule {\n    type    = \"in\"\n    action  = \"ACCEPT\"\n    comment = \"Allow HTTP\"\n    dest    = \"192.168.1.5\"\n    dport   = \"80\"\n    proto   = \"tcp\"\n    log     = \"info\"\n  }\n\n  rule {\n    type    = \"in\"\n    action  = \"ACCEPT\"\n    comment = \"Allow HTTPS\"\n    dest    = \"192.168.1.5\"\n    dport   = \"443\"\n    proto   = \"tcp\"\n    log     = \"info\"\n  }\n\n  rule {\n    security_group = proxmox_virtual_environment_cluster_firewall_security_group.example.name\n    comment        = \"From security group\"\n    iface          = \"net0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider with API Token Authentication\nDESCRIPTION: Terraform configuration block for the Proxmox provider using API token authentication, SSH agent, and insecure connection. This establishes the connection to the Proxmox API.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_10\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  endpoint  = var.virtual_environment_endpoint\n  api_token = \"terraform@pve!provider=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n  insecure  = true\n  ssh {\n    agent    = true\n    username = \"terraform\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Cloud-Init Configuration File in Terraform\nDESCRIPTION: This snippet shows how to create a custom cloud-init configuration file using Terraform. It sets up a user with SSH key access, installs packages including qemu-guest-agent, and configures the system.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/cloud-init.md#2025-04-23_snippet_1\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"local_file\" \"ssh_public_key\" {\n  filename = \"./id_rsa.pub\"\n}\n\nresource \"proxmox_virtual_environment_file\" \"user_data_cloud_config\" {\n  content_type = \"snippets\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n\n  source_raw {\n    data = <<-EOF\n    #cloud-config\n    hostname: test-ubuntu\n    timezone: America/Toronto\n    users:\n      - default\n      - name: ubuntu\n        groups:\n          - sudo\n        shell: /bin/bash\n        ssh_authorized_keys:\n          - ${trimspace(data.local_file.ssh_public_key.content)}\n        sudo: ALL=(ALL) NOPASSWD:ALL\n    package_update: true\n    packages:\n      - qemu-guest-agent\n      - net-tools\n      - curl\n    runcmd:\n      - systemctl enable qemu-guest-agent\n      - systemctl start qemu-guest-agent\n      - echo \"done\" > /tmp/cloud-config.done\n    EOF\n\n    file_name = \"user-data-cloud-config.yaml\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Virtual Environment File Downloads with Terraform\nDESCRIPTION: Examples of configuring various file downloads in Proxmox VE including Debian and Ubuntu images for both VMs and LXC containers. Shows different configuration options like checksums, timeouts, and content types.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_download_file.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_download_file\" \"release_20231228_debian_12_bookworm_qcow2_img\" {\n  content_type       = \"iso\"\n  datastore_id       = \"local\"\n  file_name          = \"debian-12-generic-amd64-20231228-1609.img\"\n  node_name          = \"pve\"\n  url                = \"https://cloud.debian.org/images/cloud/bookworm/20231228-1609/debian-12-generic-amd64-20231228-1609.qcow2\"\n  checksum           = \"d2fbcf11fb28795842e91364d8c7b69f1870db09ff299eb94e4fbbfa510eb78d141e74c1f4bf6dfa0b7e33d0c3b66e6751886feadb4e9916f778bab1776bdf1b\"\n  checksum_algorithm = \"sha512\"\n}\n\nresource \"proxmox_virtual_environment_download_file\" \"latest_debian_12_bookworm_qcow2_img\" {\n  content_type = \"iso\"\n  datastore_id = \"local\"\n  file_name    = \"debian-12-generic-amd64.qcow2.img\"\n  node_name    = \"pve\"\n  url          = \"https://cloud.debian.org/images/cloud/bookworm/latest/debian-12-generic-amd64.qcow2\"\n}\n\nresource \"proxmox_virtual_environment_download_file\" \"latest_ubuntu_22_jammy_qcow2_img\" {\n  content_type = \"iso\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n  url          = \"https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img\"\n}\n\nresource \"proxmox_virtual_environment_download_file\" \"latest_static_ubuntu_24_noble_qcow2_img\" {\n  content_type = \"iso\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n  url          = \"https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-amd64.img\"\n  overwrite    = false\n}\n\nresource \"proxmox_virtual_environment_download_file\" \"release_20231211_ubuntu_22_jammy_lxc_img\" {\n  content_type       = \"vztmpl\"\n  datastore_id       = \"local\"\n  node_name          = \"pve\"\n  url                = \"https://cloud-images.ubuntu.com/releases/22.04/release-20231211/ubuntu-22.04-server-cloudimg-amd64-root.tar.xz\"\n  checksum           = \"c9997dcfea5d826fd04871f960c513665f2e87dd7450bba99f68a97e60e4586e\"\n  checksum_algorithm = \"sha256\"\n  upload_timeout     = 4444\n}\n\nresource \"proxmox_virtual_environment_download_file\" \"latest_ubuntu_22_jammy_lxc_img\" {\n  content_type = \"vztmpl\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n  url          = \"https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.tar.gz\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox User and API Token in Terraform\nDESCRIPTION: Creates a Proxmox user and associated API token. The user must be created before the token can be created. The example sets various attributes like comment, expiration date, and token name.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_user_token.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\n# if creating a user token, the user must be created first\nresource \"proxmox_virtual_environment_user\" \"user\" {\n  comment         = \"Managed by Terraform\"\n  email           = \"user@pve\"\n  enabled         = true\n  expiration_date = \"2034-01-01T22:00:00Z\"\n  user_id         = \"user@pve\"\n}\n\nresource \"proxmox_virtual_environment_user_token\" \"user_token\" {\n  comment         = \"Managed by Terraform\"\n  expiration_date = \"2033-01-01T22:00:00Z\"\n  token_name      = \"tk1\"\n  user_id         = proxmox_virtual_environment_user.user.user_id\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Virtual Machine Resources in Terraform HCL\nDESCRIPTION: This snippet outlines the structure and available options for configuring Proxmox virtual machine resources in Terraform. It includes settings for disks, EFI, TPM, PCI passthrough, USB devices, cloud-init, and various hardware parameters.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_vm.md#2025-04-23_snippet_2\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_vm\" \"example\" {\n  # Disk configuration\n  disk {\n    interface = \"virtio0\"\n    size = 8\n    iothread = false\n    replicate = true\n    # ... other disk options\n  }\n\n  # EFI disk configuration\n  efi_disk {\n    datastore_id = \"local-lvm\"\n    file_format = \"raw\"\n    type = \"4m\"\n    # ... other EFI options\n  }\n\n  # TPM state configuration\n  tpm_state {\n    datastore_id = \"local-lvm\"\n    version = \"v2.0\"\n  }\n\n  # Host PCI device mapping\n  hostpci {\n    device = \"hostpci0\"\n    id = \"0000:00:00.0\"\n    # ... other PCI options\n  }\n\n  # USB device mapping\n  usb {\n    host = \"spice\"\n    usb3 = false\n  }\n\n  # Cloud-init configuration\n  initialization {\n    datastore_id = \"local-lvm\"\n    # ... other cloud-init options\n  }\n\n  # Other VM configuration options\n  keyboard_layout = \"en-us\"\n  kvm_arguments = \"\"\n  machine = \"q35\"\n  memory {\n    dedicated = 512\n    floating = 0\n    # ... other memory options\n  }\n  numa {\n    device = \"numa0\"\n    cpus = \"0-7\"\n    memory = 4096\n    # ... other NUMA options\n  }\n  migrate = false\n  name = \"example-vm\"\n  network_device {\n    bridge = \"vmbr0\"\n  }\n  # ... other resource options\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider Block in Terraform\nDESCRIPTION: Example configuration block showing structure and supported arguments for the Proxmox provider, including authentication options, SSH configuration, and VM ID management settings. Supports various authentication methods including API tokens, username/password, and external auth tickets.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_24\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  endpoint = \"https://<your-cluster-endpoint>:8006/\"\n  insecure = false\n  min_tls = \"1.3\"\n  \n  # Authentication (choose one method)\n  api_token = \"username@realm!for-terraform-provider=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n  # or\n  username = \"root@pam\"\n  password = \"your-password\"\n  # or\n  auth_ticket = \"PVE:username@realm:12345678::some_base64_payload==\"\n  csrf_prevention_token = \"12345678:some_blob\"\n  \n  # SSH Configuration\n  ssh {\n    username = \"ssh-user\"\n    password = \"ssh-password\"\n    agent = false\n    private_key = \"path-to-private-key\"\n    \n    node {\n      name = \"node1\"\n      address = \"node1.example.com\"\n      port = 22\n    }\n  }\n  \n  # VM ID Management\n  random_vm_ids = false\n  random_vm_id_start = 10000\n  random_vm_id_end = 99999\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Debian VM from Existing Cloud Image in Proxmox using Terraform\nDESCRIPTION: This snippet shows how to create a Debian VM using an existing cloud image already stored in Proxmox. It configures the VM with user credentials and disk settings while referencing the pre-existing Debian cloud image file.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/cloud-image.md#2025-04-23_snippet_2\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_vm\" \"debian_vm\" {\n  name      = \"test-debian\"\n  node_name = \"pve\"\n\n  # should be true if qemu agent is not installed / enabled on the VM\n  stop_on_destroy = true\n\n  initialization {\n    user_account {\n      # do not use this in production, configure your own ssh key instead!\n      username = \"user\"\n      password = \"password\"\n    }\n  }\n\n  disk {\n    datastore_id = \"local-lvm\"\n    file_id      = \"local:iso/debian-12-genericcloud-amd64.img\"\n    interface    = \"virtio0\"\n    iothread     = true\n    discard      = \"on\"\n    size         = 20\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Proxmox VMs with Multiple Criteria in Terraform\nDESCRIPTION: This example shows how to use the proxmox_virtual_environment_vms data source with multiple filters to query specific VMs based on tags, template status, VM status, name pattern, and node name pattern.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_vms.md#2025-04-23_snippet_1\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_vms\" \"ubuntu_templates\" {\n  tags      = [\"template\", \"latest\"]\n\n  filter {\n    name   = \"template\"\n    values = [true]\n  }\n\n  filter {\n    name   = \"status\"\n    values = [\"stopped\"]\n  }\n\n  filter {\n    name   = \"name\"\n    regex  = true\n    values = [\"^ubuntu-20.*$\"]\n  }\n\n  filter {\n    name   = \"node_name\"\n    regex  = true\n    values = [\"node_us_[1-3]\", \"node_eu_[1-3]\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox User with ACL and Role in Terraform\nDESCRIPTION: Example showing how to create a Proxmox VE user with associated access control list and custom role. Demonstrates setting up monitoring privileges and user authentication details.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_user.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_user\" \"operations_automation\" {\n  acl {\n    path      = \"/vms/1234\"\n    propagate = true\n    role_id   = proxmox_virtual_environment_role.operations_monitoring.role_id\n  }\n\n  comment  = \"Managed by Terraform\"\n  password = \"a-strong-password\"\n  user_id  = \"operations-automation@pve\"\n}\n\nresource \"proxmox_virtual_environment_role\" \"operations_monitoring\" {\n  role_id = \"operations-monitoring\"\n\n  privileges = [\n    \"VM.Monitor\",\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a VM Template in Proxmox with Terraform\nDESCRIPTION: This Terraform code creates a VM template in Proxmox. It sets up a Ubuntu cloud image as the base, configures CPU, memory, storage, and networking. The 'template' attribute is set to true to make it a template VM.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/clone-vm.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_vm\" \"ubuntu_template\" {\n  name      = \"ubuntu-template\"\n  node_name = \"pve\"\n\n  template = true\n  started  = false\n\n  machine     = \"q35\"\n  bios        = \"ovmf\"\n  description = \"Managed by Terraform\"\n\n  cpu {\n    cores = 2\n  }\n\n  memory {\n    dedicated = 2048\n  }\n\n  efi_disk {\n    datastore_id = \"local\"\n    type         = \"4m\"\n  }\n\n  disk {\n    datastore_id = \"local-lvm\"\n    file_id      = proxmox_virtual_environment_download_file.ubuntu_cloud_image.id\n    interface    = \"virtio0\"\n    iothread     = true\n    discard      = \"on\"\n    size         = 20\n  }\n\n  initialization {\n    ip_config {\n      ipv4 {\n        address = \"dhcp\"\n      }\n    }\n\n    user_data_file_id = proxmox_virtual_environment_file.user_data_cloud_config.id\n  }\n\n  network_device {\n    bridge = \"vmbr0\"\n  }\n\n}\n\nresource \"proxmox_virtual_environment_download_file\" \"ubuntu_cloud_image\" {\n  content_type = \"iso\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n\n  url = \"https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox Firewall Aliases with Terraform\nDESCRIPTION: This snippet demonstrates how to create firewall aliases in Proxmox using Terraform. It shows examples for creating both VM-level and cluster-level aliases, specifying network ranges and individual IP addresses.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_firewall_alias.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_firewall_alias\" \"local_network\" {\n  depends_on = [proxmox_virtual_environment_vm.example]\n\n  node_name = proxmox_virtual_environment_vm.example.node_name\n  vm_id     = proxmox_virtual_environment_vm.example.vm_id\n\n  name    = \"local_network\"\n  cidr    = \"192.168.0.0/23\"\n  comment = \"Managed by Terraform\"\n}\n\nresource \"proxmox_virtual_environment_firewall_alias\" \"ubuntu_vm\" {\n  name    = \"ubuntu\"\n  cidr    = \"192.168.0.1\"\n  comment = \"Managed by Terraform\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Ubuntu VM from Cloud Image using Terraform with Proxmox Provider\nDESCRIPTION: This snippet demonstrates how to create an Ubuntu VM by downloading a cloud image from cloud-images.ubuntu.com. It specifies the VM configuration including credentials, disk settings, and handles the download of an Ubuntu Jammy cloud image.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/cloud-image.md#2025-04-23_snippet_1\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_vm\" \"ubuntu_vm\" {\n  name      = \"test-ubuntu\"\n  node_name = \"pve\"\n\n  # should be true if qemu agent is not installed / enabled on the VM\n  stop_on_destroy = true\n\n  initialization {\n    user_account {\n      # do not use this in production, configure your own ssh key instead!\n      username = \"user\"\n      password = \"password\"\n    }\n  }\n\n  disk {\n    datastore_id = \"local-lvm\"\n    file_id      = proxmox_virtual_environment_download_file.ubuntu_cloud_image.id\n    interface    = \"virtio0\"\n    iothread     = true\n    discard      = \"on\"\n    size         = 20\n  }\n}\n\nresource \"proxmox_virtual_environment_download_file\" \"ubuntu_cloud_image\" {\n  content_type = \"iso\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n  url          = \"https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Attached Disks for Proxmox VMs in Terraform\nDESCRIPTION: This snippet demonstrates how to create a data VM with two disks and attach those disks to another VM. This allows for data persistence even if the user VM is recreated.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_vm.md#2025-04-23_snippet_3\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_vm\" \"data_vm\" {\n  node_name = \"first-node\"\n  started = false\n  on_boot = false\n\n  disk {\n    datastore_id = \"local-zfs\"\n    interface    = \"scsi0\"\n    size         = 1\n  }\n\n  disk {\n    datastore_id = \"local-zfs\"\n    interface    = \"scsi1\"\n    size         = 4\n  }\n}\n\nresource \"proxmox_virtual_environment_vm\" \"data_user_vm\" {\n  # boot disk\n  disk {\n    datastore_id = \"local-zfs\"\n    interface    = \"scsi0\"\n    size         = 8\n  }\n\n  # attached disks from data_vm\n  dynamic \"disk\" {\n    for_each = { for idx, val in proxmox_virtual_environment_vm.data_vm.disk : idx => val }\n    iterator = data_disk\n    content {\n      datastore_id      = data_disk.value[\"datastore_id\"]\n      path_in_datastore = data_disk.value[\"path_in_datastore\"]\n      file_format       = data_disk.value[\"file_format\"]\n      size              = data_disk.value[\"size\"]\n      # assign from scsi1 and up\n      interface         = \"scsi${data_disk.key + 1}\"\n    }\n  }\n\n  # remainder of VM configuration\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Proxmox Provider Configuration with Variables in HCL\nDESCRIPTION: Example showing how to use Terraform variables for Proxmox provider configuration, which is a more secure approach as it allows storing sensitive values in separate .tfvars files that can be excluded from version control.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_4\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  endpoint = var.virtual_environment_endpoint\n  \n  # Choose one authentication method:\n  api_token = var.virtual_environment_api_token\n  # OR\n  username  = var.virtual_environment_username\n  password  = var.virtual_environment_password\n  # OR\n  auth_ticket           = var.virtual_environment_auth_ticket\n  csrf_prevention_token = var.virtual_environment_csrf_prevention_token\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox ACL with User and Role in Terraform\nDESCRIPTION: Example showing how to create a Proxmox ACL that applies a monitoring role to a specific user. The example includes creating the user and role resources first, then associating them via the ACL resource.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_acl.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_user\" \"operations_automation\" {\n  comment  = \"Managed by Terraform\"\n  password = \"a-strong-password\"\n  user_id  = \"operations-automation@pve\"\n}\n\nresource \"proxmox_virtual_environment_role\" \"operations_monitoring\" {\n  role_id = \"operations-monitoring\"\n\n  privileges = [\n    \"VM.Monitor\",\n  ]\n}\n\nresource \"proxmox_virtual_environment_acl\" \"operations_automation_monitoring\" {\n  user_id = proxmox_virtual_environment_user.operations_automation.user_id\n  role_id = proxmox_virtual_environment_role.operations_monitoring.role_id\n\n  path      = \"/vms/1234\"\n  propagate = true\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring VM with Custom Cloud-Init in Terraform\nDESCRIPTION: This snippet demonstrates how to configure a Proxmox VM using a custom cloud-init configuration. It sets up the VM with DHCP, enables the QEMU guest agent, and uses the custom cloud-init file created earlier.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/cloud-init.md#2025-04-23_snippet_2\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_vm\" \"ubuntu_vm\" {\n  name      = \"test-ubuntu\"\n  node_name = \"pve\"\n\n  agent {\n    enabled = true\n  }\n\n  cpu {\n    cores = 2\n  }\n\n  memory {\n    dedicated = 2048\n  }\n\n  disk {\n    datastore_id = \"local-lvm\"\n    file_id      = proxmox_virtual_environment_download_file.ubuntu_cloud_image.id\n    interface    = \"virtio0\"\n    iothread     = true\n    discard      = \"on\"\n    size         = 20\n  }\n\n  initialization {\n    ip_config {\n      ipv4 {\n        address = \"dhcp\"\n      }\n    }\n\n    user_data_file_id = proxmox_virtual_environment_file.user_data_cloud_config.id\n  }\n\n  network_device {\n    bridge = \"vmbr0\"\n  }\n\n}\n\nresource \"proxmox_virtual_environment_download_file\" \"ubuntu_cloud_image\" {\n  content_type = \"iso\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n\n  url = \"https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img\"\n}\n\noutput \"vm_ipv4_address\" {\n  value = proxmox_virtual_environment_vm.ubuntu_vm.ipv4_addresses[1][0]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox VE Cluster Options with Terraform\nDESCRIPTION: Example Terraform configuration for managing Proxmox VE Cluster Datacenter options, including language, keyboard settings, bandwidth limits, and notification configurations.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_cluster_options.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_cluster_options\" \"options\" {\n  language                  = \"en\"\n  keyboard                  = \"pl\"\n  email_from                = \"ged@gont.earthsea\"\n  bandwidth_limit_migration = 555555\n  bandwidth_limit_default   = 666666\n  max_workers               = 5\n  migration_cidr            = \"10.0.0.0/8\"\n  migration_type            = \"secure\"\n  next_id = {\n    lower = 100\n    upper = 999999999\n  }\n  notify = {\n    ha_fencing_mode            = \"never\"\n    ha_fencing_target          = \"default-matcher\"\n    package_updates            = \"always\"\n    package_updates_target     = \"default-matcher\"\n    package_replication        = \"always\"\n    package_replication_target = \"default-matcher\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating CentOS VM from Cloud Image using Terraform with Proxmox Provider\nDESCRIPTION: This snippet shows how to create a CentOS 8 VM by downloading a qcow2 cloud image from cloud.centos.org and converting it for use with Proxmox. It configures the VM with user credentials, disk settings, and handles the image download process.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/cloud-image.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_vm\" \"centos_vm\" {\n  name      = \"test-centos\"\n  node_name = \"pve\"\n\n  # should be true if qemu agent is not installed / enabled on the VM\n  stop_on_destroy = true\n\n  initialization {\n    user_account {\n      # do not use this in production, configure your own ssh key instead!\n      username = \"user\"\n      password = \"password\"\n    }\n  }\n\n  disk {\n    datastore_id = \"local-lvm\"\n    file_id      = proxmox_virtual_environment_download_file.centos_cloud_image.id\n    interface    = \"virtio0\"\n    iothread     = true\n    discard      = \"on\"\n    size         = 20\n  }\n}\n\nresource \"proxmox_virtual_environment_download_file\" \"centos_cloud_image\" {\n  content_type = \"iso\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n  url          = \"https://cloud.centos.org/centos/8-stream/x86_64/images/CentOS-Stream-GenericCloud-8-latest.x86_64.qcow2\"\n  file_name    = \"centos8.img\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Terraform Variables File for Proxmox\nDESCRIPTION: Example of a terraform.tfvars file containing the required variables for connecting to a Proxmox environment. Includes endpoint URL, SSH username, and API token credentials.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nvirtual_environment_endpoint                 = \"https://pve.example.doc:8006/\"\nvirtual_environment_ssh_username             = \"terraform\"\nvirtual_environment_api_token                = \"root@pam!terraform=00000000-0000-0000-0000-000000000000\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider with Basic Authentication in HCL\nDESCRIPTION: Example configuration for the Proxmox provider using username/password authentication with a self-signed TLS certificate. Includes placeholders for credentials that should be replaced with actual values or environment variables.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  endpoint = \"https://10.0.0.2:8006/\"\n\n  # TODO: use terraform variable or remove the line, and use PROXMOX_VE_USERNAME environment variable\n  username = \"root@pam\"\n  # TODO: use terraform variable or remove the line, and use PROXMOX_VE_PASSWORD environment variable\n  password = \"the-password-set-during-installation-of-proxmox-ve\"\n\n  # because self-signed TLS certificate is in use\n  insecure = true\n  # uncomment (unless on Windows...)\n  # tmp_dir  = \"/var/tmp\"\n\n  ssh {\n    agent = true\n    # TODO: uncomment and configure if using api_token instead of password\n    # username = \"root\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Proxmox HA Resource in Terraform\nDESCRIPTION: This snippet demonstrates how to create a Proxmox HA resource using Terraform. It specifies the resource ID, state, group, and comment. The resource depends on a previously defined HA group.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_haresource.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_haresource\" \"example\" {\n  depends_on = [\n    proxmox_virtual_environment_hagroup.example\n  ]\n  resource_id = \"vm:123\"\n  state       = \"started\"\n  group       = \"example\"\n  comment     = \"Managed by Terraform\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider with Username/Password in HCL\nDESCRIPTION: Example of configuring the Proxmox provider using username and password authentication. This method is simpler but less secure, recommended primarily for development/testing environments.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_2\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  endpoint = \"https://10.0.0.2:8006/\"\n  insecure = true\n  username = \"username@realm\"\n  password = \"a-strong-password\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider with SSH Connection\nDESCRIPTION: Terraform configuration block for the Proxmox provider with SSH connection using password authentication. This enables executing commands on Proxmox nodes for actions not supported by the API.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_13\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  endpoint = \"https://10.0.0.2:8006/\"\n  username = \"username@realm\"\n  password = \"a-strong-password\"\n  insecure = true\n\n  ssh {\n    agent = true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Linux Bridge Interfaces in Proxmox VE\nDESCRIPTION: Shell script example showing how to import existing Linux Bridge interfaces into Terraform state. Uses the format node_name:iface for the import identifier.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_network_linux_bridge.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n#Interfaces can be imported using the `node_name:iface` format, e.g.\nterraform import proxmox_virtual_environment_network_linux_bridge.vmbr99 pve:vmbr99\n```\n\n----------------------------------------\n\nTITLE: Configuring Node Time Zone in Proxmox using Terraform\nDESCRIPTION: This example shows how to set the time zone for a Proxmox node. It requires specifying the node name and desired time zone.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_time.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_time\" \"first_node_time\" {\n  node_name = \"first-node\"\n  time_zone = \"UTC\"\n}\n```\n\n----------------------------------------\n\nTITLE: Workaround for VMware Disk Images in Proxmox with HCL\nDESCRIPTION: HCL configuration showing how to import VMware disk images into Proxmox by bypassing API validation. This workaround allows using VMDK files by changing the file extension and specifying the correct format.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_file\" \"vmdk_disk_image\" {\n  content_type = \"iso\"\n  datastore_id = \"datastore-id\"\n  node_name    = \"node-name\"\n\n  source_file {\n    # We must override the file extension to bypass the validation code\n    # in the Proxmox VE API.\n    file_name = \"vmdk-file-name.img\"\n    path      = \"path-to-vmdk-file\"\n  }\n}\n\nresource \"proxmox_virtual_environment_vm\" \"example\" {\n  //...\n\n  disk {\n    datastore_id = \"datastore-id\"\n    # We must tell the provider that the file format is vmdk instead of qcow2.\n    file_format  = \"vmdk\"\n    file_id      = \"${proxmox_virtual_environment_file.vmdk_disk_image.id}\"\n  }\n\n  //...\n}\n```\n\n----------------------------------------\n\nTITLE: Importing an Existing Proxmox Firewall Security Group into Terraform\nDESCRIPTION: Command for importing an existing Proxmox firewall security group into Terraform state using the security group name. This allows management of existing resources through Terraform.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_cluster_firewall_security_group.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nterraform import proxmox_virtual_environment_cluster_firewall_security_group.webserver webserver\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider with Auth Ticket in HCL\nDESCRIPTION: Example of configuring the Proxmox provider using pre-authentication with auth ticket and CSRF prevention token. This approach is useful for automated scripts where ticket generation happens externally.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_3\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  endpoint              = \"https://10.0.0.2:8006/\"\n  auth_ticket          = \"PVE:username@realm:12345678::some_base64_payload==\"\n  csrf_prevention_token = \"12345678:some_blob\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Linux Bridge and VLAN Interfaces in Proxmox VE\nDESCRIPTION: Example configuration that creates a Linux Bridge network interface with a VLAN dependency in Proxmox VE. The example demonstrates setting up a bridge with IP addressing, comments, and port attachments.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_network_linux_bridge.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_network_linux_bridge\" \"vmbr99\" {\n  depends_on = [\n    proxmox_virtual_environment_network_linux_vlan.vlan99\n  ]\n\n  node_name = \"pve\"\n  name      = \"vmbr99\"\n\n  address = \"99.99.99.99/16\"\n\n  comment = \"vmbr99 comment\"\n\n  ports = [\n    # Network (or VLAN) interfaces to attach to the bridge, specified by their interface name\n    # (e.g. \"ens18.99\" for VLAN 99 on interface ens18).\n    # For VLAN interfaces with custom names, use the interface name without the VLAN tag, e.g. \"vlan_lab\"\n    \"ens18.99\"\n  ]\n}\n\nresource \"proxmox_virtual_environment_network_linux_vlan\" \"vlan99\" {\n  node_name = \"pve\"\n  name      = \"ens18.99\"\n\n  ## or alternatively, use custom name:\n  # name      = \"vlan_lab\"\n  # interface = \"eno0\"\n  # vlan      = 98\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Firewall IPSet with Terraform\nDESCRIPTION: Example Terraform configuration for creating an IPSet resource in Proxmox Virtual Environment. The resource is configured for a VM with local network CIDR blocks, including options for matching and non-matching IP addresses.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_firewall_ipset.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_firewall_ipset\" \"ipset\" {\n  depends_on = [proxmox_virtual_environment_vm.example]\n\n  node_name = proxmox_virtual_environment_vm.example.node_name\n  vm_id     = proxmox_virtual_environment_vm.example.vm_id\n\n  name    = \"local_network\"\n  comment = \"Managed by Terraform\"\n\n  cidr {\n    name    = \"192.168.0.0/23\"\n    comment = \"Local network 1\"\n  }\n\n  cidr {\n    name    = \"192.168.0.1\"\n    comment = \"Server 1\"\n    nomatch = true\n  }\n\n  cidr {\n    name    = \"192.168.2.1\"\n    comment = \"Server 1\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxmox VM Information using Terraform HCL\nDESCRIPTION: Example of using the proxmox_virtual_environment_vm data source to fetch information about a specific VM. The data source requires node_name and vm_id as mandatory parameters to identify the target VM.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_vm.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_vm\" \"test_vm\" {\n    node_name = \"test\"\n    vm_id = 100\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Disk Pass-through for Proxmox VMs in Terraform\nDESCRIPTION: This snippet shows how to attach a physical disk from the PVE host to a VM using the path_in_datastore attribute set to the path of the block device on the host.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_vm.md#2025-04-23_snippet_4\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_vm\" \"test_vm\" {\n  ...\n\n  # boot disk\n  disk {\n    ...\n  }\n  \n  # attached disk\n  disk {\n    datastore_id = \"\"\n    path_in_datastore  = \"/dev/path/to/block/device\"\n    file_format = \"raw\"\n  }\n\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Metadata Cloud-Init Configuration in Terraform\nDESCRIPTION: This snippet shows how to create a separate metadata cloud-init configuration file for setting the hostname. This is useful when deploying multiple VMs with a generic user data configuration.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/cloud-init.md#2025-04-23_snippet_3\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_file\" \"meta_data_cloud_config\" {\n  content_type = \"snippets\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n\n  source_raw {\n    data = <<-EOF\n    #cloud-config\n    local-hostname: test-ubuntu\n    EOF\n\n    file_name = \"meta-data-cloud-config.yaml\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Environment Variables for Proxmox Authentication in Shell\nDESCRIPTION: Example showing how to use environment variables to provide authentication credentials for the Proxmox provider, which keeps sensitive information out of the Terraform configuration files entirely.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nexport PROXMOX_VE_USERNAME=\"username@realm\"\nexport PROXMOX_VE_PASSWORD='a-strong-password'\nterraform plan\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox Virtual Environment ACME Account in Terraform\nDESCRIPTION: This shell command demonstrates how to import an existing ACME account into Terraform state. It uses the 'terraform import' command with the resource address and the account name as arguments.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_acme_account.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n# ACME accounts can be imported using their name, e.g.:\nterraform import proxmox_virtual_environment_acme_account.example example\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox VE Linux VLAN Network Interfaces with Terraform\nDESCRIPTION: This snippet demonstrates how to create Linux VLAN network interfaces in Proxmox VE using Terraform. It shows two examples: one using a VLAN tag and another using a custom network interface name.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_network_linux_vlan.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\n# using VLAN tag\nresource \"proxmox_virtual_environment_network_linux_vlan\" \"vlan99\" {\n  node_name = \"pve\"\n  name      = \"eno0.99\"\n\n  comment = \"VLAN 99\"\n}\n\n# using custom network interface name\nresource \"proxmox_virtual_environment_network_linux_vlan\" \"vlan98\" {\n  node_name = \"pve\"\n  name      = \"vlan_lab\"\n\n  interface = \"eno0\"\n  vlan      = 98\n  comment   = \"VLAN 98\"\n}\n```\n\n----------------------------------------\n\nTITLE: Proxmox VM Configuration Properties\nDESCRIPTION: Detailed specification of all supported configuration properties for Proxmox virtual machines. Includes settings for ACPI, QEMU agent, audio devices, BIOS, boot order, CPU, storage, and more.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_vm.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `acpi` - (Optional) Whether to enable ACPI (defaults to `true`).\n- `agent` - (Optional) The QEMU agent configuration.\n    - `enabled` - (Optional) Whether to enable the QEMU agent (defaults to `false`).\n    - `timeout` - (Optional) The maximum amount of time to wait for data from the QEMU agent.\n    - `trim` - (Optional) Whether to enable the FSTRIM feature.\n    - `type` - (Optional) The QEMU agent interface type.\n[...additional configuration properties...]\n```\n\n----------------------------------------\n\nTITLE: Creating USB Hardware Mapping in Proxmox VE with Terraform\nDESCRIPTION: Terraform configuration for creating a USB hardware mapping resource in Proxmox VE. Demonstrates setting up device mapping with ID, node, and optional path parameters.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_hardware_mapping_usb.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_hardware_mapping_usb\" \"example\" {\n  comment = \"This is a comment\"\n  name    = \"example\"\n  # The actual map of devices.\n  map = [\n    {\n      comment = \"This is a device specific comment\"\n      id      = \"8087:0a2b\"\n      node    = \"pve\"\n      # This attribute is optional, but can be used to map the device based on its port instead of only the device ID.\n      path = \"1-8.2\"\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Proxmox VMs with Tags in Terraform\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_vms data source to query VMs with specific tags in a Proxmox cluster.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_vms.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_vms\" \"ubuntu_vms\" {\n  tags      = [\"ubuntu\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Metrics Servers with Terraform\nDESCRIPTION: Example of creating InfluxDB and Graphite metrics servers for a Proxmox Virtual Environment. The resource configuration specifies essential parameters including name, server address, port, and server type.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_metrics_server.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_metrics_server\" \"influxdb_server\" {\n  name   = \"example_influxdb_server\"\n  server = \"192.168.3.2\"\n  port   = 8089\n  type   = \"influxdb\"\n}\n\nresource \"proxmox_virtual_environment_metrics_server\" \"graphite_server\" {\n  name   = \"example_graphite_server\"\n  server = \"192.168.4.2\"\n  port   = 2003\n  type   = \"graphite\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS for a Proxmox Node using Terraform\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_dns resource to manage DNS configuration for a Proxmox node. It sets the domain and DNS servers, and uses a data source to fetch existing configuration.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_dns.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_dns\" \"first_node_dns_configuration\" {\n  domain    = data.proxmox_virtual_environment_dns.first_node_dns_configuration.domain\n  node_name = data.proxmox_virtual_environment_dns.first_node_dns_configuration.node_name\n\n  servers = [\n    \"1.1.1.1\",\n    \"1.0.0.1\",\n  ]\n}\n\ndata \"proxmox_virtual_environment_dns\" \"first_node_dns_configuration\" {\n  node_name = \"first-node\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Role Information with proxmox_virtual_environment_role Data Source in HCL\nDESCRIPTION: This snippet demonstrates how to retrieve information about a specific role (in this case, 'operations') from the Proxmox Virtual Environment using Terraform. The data source requires a role_id parameter and returns the role's privileges.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_role.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_role\" \"operations_role\" {\n  role_id = \"operations\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox Virtual Environment ACME Account in Terraform\nDESCRIPTION: This snippet demonstrates how to create an ACME account resource in a Proxmox VE cluster using Terraform. It specifies the account name, contact email, ACME directory URL, and terms of service agreement.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_acme_account.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_acme_account\" \"example\" {\n  name      = \"example\"\n  contact   = \"example@email.com\"\n  directory = \"https://acme-staging-v02.api.letsencrypt.org/directory\"\n  tos       = \"https://letsencrypt.org/documents/LE-SA-v1.3-September-21-2022.pdf\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Proxmox Nodes Using Terraform HCL\nDESCRIPTION: Example showing how to declare a data source to retrieve information about all available Proxmox nodes. This data source requires no arguments and returns various node attributes including CPU count, memory usage, node names, and status.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_nodes.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_nodes\" \"available_nodes\" {}\n```\n\n----------------------------------------\n\nTITLE: Importing Existing Proxmox ACL in Terraform\nDESCRIPTION: Shell script demonstrating how to import an existing Proxmox ACL into Terraform state. The import command uses a specific format combining path, user/group/token information, and role ID.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_acl.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n# ACL can be imported using its unique identifier, e.g.: {path}?{group|user@realm|user@realm!token}?{role}\nterraform import proxmox_virtual_environment_acl.operations_automation_monitoring /?monitor@pve?operations-monitoring\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxmox High Availability Groups with Terraform\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_hagroups data source to retrieve High Availability groups from Proxmox and output their identifiers.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_hagroups.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_hagroups\" \"example\" {}\n\noutput \"data_proxmox_virtual_environment_hagroups\" {\n  value = data.proxmox_virtual_environment_hagroups.example.group_ids\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Proxmox APT Standard Repository with Terraform\nDESCRIPTION: Example showing how to create and configure a Proxmox VE APT standard repository using Terraform. This example demonstrates creating a 'no-subscription' repository and linking it to an APT repository resource.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_apt_standard_repository.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_apt_standard_repository\" \"example\" {\n  handle = \"no-subscription\"\n  node   = \"pve\"\n}\n\nresource \"proxmox_virtual_environment_apt_repository\" \"example\" {\n  enabled   = true\n  file_path = proxmox_virtual_environment_apt_standard_repository.example.file_path\n  index     = proxmox_virtual_environment_apt_standard_repository.example.index\n  node      = proxmox_virtual_environment_apt_standard_repository.example.node\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox VM Firewall Options with Terraform\nDESCRIPTION: Example Terraform configuration for setting up firewall options on a Proxmox VM. Demonstrates how to configure various firewall settings including DHCP, IP filtering, logging levels, and network policies. The resource depends on an existing VM and requires node name and VM ID as basic parameters.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_firewall_options.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_firewall_options\" \"example\" {\n  depends_on = [proxmox_virtual_environment_vm.example]\n\n  node_name = proxmox_virtual_environment_vm.example.node_name\n  vm_id     = proxmox_virtual_environment_vm.example.vm_id\n\n  dhcp          = true\n  enabled       = false\n  ipfilter      = true\n  log_level_in  = \"info\"\n  log_level_out = \"info\"\n  macfilter     = false\n  ndp           = true\n  input_policy  = \"ACCEPT\"\n  output_policy = \"ACCEPT\"\n  radv          = true\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox Virtual Environment Group into Terraform State\nDESCRIPTION: This bash command demonstrates how to import an existing Proxmox user group into the Terraform state. It uses the terraform import command with the resource address and the group identifier as arguments.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_group.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nterraform import proxmox_virtual_environment_group.operations_team operations-team\n```\n\n----------------------------------------\n\nTITLE: Creating Cloud-Config Snippets in Proxmox VE\nDESCRIPTION: Example of creating cloud-config snippets in Proxmox VE. This requires SSH access to the node and snippets must be enabled in the Proxmox interface. The example uses raw content to create a cloud-init configuration file.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_file.md#2025-04-23_snippet_2\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_file\" \"cloud_config\" {\n  content_type = \"snippets\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n\n  source_raw {\n    data = <<-EOF\n    #cloud-config\n    chpasswd:\n      list: |\n        ubuntu:example\n      expire: false\n    hostname: example-hostname\n    packages:\n      - qemu-guest-agent\n    users:\n      - default\n      - name: ubuntu\n        groups: sudo\n        shell: /bin/bash\n        ssh-authorized-keys:\n          - ${trimspace(tls_private_key.example.public_key_openssh)}\n        sudo: ALL=(ALL) NOPASSWD:ALL\n    EOF\n\n    file_name = \"example.cloud-config.yaml\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Proxmox Virtual Environment Certificate with Terraform\nDESCRIPTION: This Terraform configuration creates a self-signed certificate and applies it to a Proxmox Virtual Environment node. It demonstrates the use of the proxmox_virtual_environment_certificate resource along with tls_private_key and tls_self_signed_cert resources.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_certificate.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_certificate\" \"example\" {\n  certificate = tls_self_signed_cert.proxmox_virtual_environment_certificate.cert_pem\n  node_name   = \"first-node\"\n  private_key = tls_private_key.proxmox_virtual_environment_certificate.private_key_pem\n}\n\nresource \"tls_private_key\" \"proxmox_virtual_environment_certificate\" {\n  algorithm = \"RSA\"\n  rsa_bits  = 2048\n}\n\nresource \"tls_self_signed_cert\" \"proxmox_virtual_environment_certificate\" {\n  key_algorithm   = tls_private_key.proxmox_virtual_environment_certificate.algorithm\n  private_key_pem = tls_private_key.proxmox_virtual_environment_certificate.private_key_pem\n\n  subject {\n    common_name  = \"example.com\"\n    organization = \"Terraform Provider for Proxmox\"\n  }\n\n  validity_period_hours = 8760\n\n  allowed_uses = [\n    \"key_encipherment\",\n    \"digital_signature\",\n    \"server_auth\",\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Existing Proxmox Metrics Server into Terraform\nDESCRIPTION: Shell command for importing an existing Proxmox metrics server into Terraform state. This allows management of previously created metrics servers through Terraform.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_metrics_server.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\nterraform import proxmox_virtual_environment_metrics_server.example example\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox User Resource in Terraform\nDESCRIPTION: Command example for importing an existing Proxmox VE user into Terraform state management.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_user.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nterraform import proxmox_virtual_environment_user.operations_automation operations-automation@pve\n```\n\n----------------------------------------\n\nTITLE: Creating Executable Hook Scripts in Proxmox VE\nDESCRIPTION: Example of creating an executable hook script as a snippet in Proxmox VE. This sets the file_mode to make the script executable, which is required when the script is referenced in hook_script_file_id attributes of container or VM resources.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_file.md#2025-04-23_snippet_3\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_file\" \"hook_script\" {\n  content_type = \"snippets\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n  # Hook scripts must be executable, otherwise the Proxmox VE API will reject the configuration for the VM/CT.\n  file_mode    = \"0700\"\n\n  source_raw {\n    data      = <<-EOF\n      #!/usr/bin/env bash\n\n      echo \"Running hook script\"\n      EOF\n    file_name = \"prepare-hook.sh\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox HA Group Configuration in Terraform\nDESCRIPTION: Example configuration for creating a High Availability group in Proxmox VE with node priorities, restrictions, and failback settings. Demonstrates setting up member nodes with different priority levels and configuring group properties.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_hagroup.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_hagroup\" \"example\" {\n  group   = \"example\"\n  comment = \"This is a comment.\"\n\n  # Member nodes, with or without priority.\n  nodes = {\n    node1 = null\n    node2 = 2\n    node3 = 1\n  }\n\n  restricted  = true\n  no_failback = false\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Existing Proxmox Role into Terraform State\nDESCRIPTION: Command to import an existing Proxmox VE role into Terraform state management using the role identifier.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_role.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nterraform import proxmox_virtual_environment_role.operations_monitoring operations-monitoring\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox Containers with Terraform\nDESCRIPTION: Command example for importing an existing Proxmox container into Terraform state management. The import format requires the node name and VM ID separated by a forward slash.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_container.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nterraform import proxmox_virtual_environment_container.ubuntu_container first-node/1234\n```\n\n----------------------------------------\n\nTITLE: Creating a Proxmox Firewall Security Group with HTTP/HTTPS Rules in Terraform\nDESCRIPTION: This example demonstrates how to define a 'webserver' security group with rules that allow HTTP and HTTPS traffic to a specific destination IP. Each rule includes action, type, destination port, protocol, and logging configuration.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_cluster_firewall_security_group.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_cluster_firewall_security_group\" \"webserver\" {\n  name    = \"webserver\"\n  comment = \"Managed by Terraform\"\n\n  rule {\n    type    = \"in\"\n    action  = \"ACCEPT\"\n    comment = \"Allow HTTP\"\n    dest    = \"192.168.1.5\"\n    dport   = \"80\"\n    proto   = \"tcp\"\n    log     = \"info\"\n  }\n\n  rule {\n    type    = \"in\"\n    action  = \"ACCEPT\"\n    comment = \"Allow HTTPS\"\n    dest    = \"192.168.1.5\"\n    dport   = \"443\"\n    proto   = \"tcp\"\n    log     = \"info\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Existing Proxmox Node Time Configuration into Terraform\nDESCRIPTION: Command for importing an existing Proxmox node time configuration into Terraform state. This allows management of resources that were created outside of Terraform.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_time.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nterraform import proxmox_virtual_environment_dns.first_node first-node\n```\n\n----------------------------------------\n\nTITLE: Importing Existing USB Hardware Mapping in Proxmox VE\nDESCRIPTION: Shell command for importing an existing USB hardware mapping into Terraform state using the mapping name.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_hardware_mapping_usb.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n# A USB hardware mapping can be imported using their name, e.g.:\nterraform import proxmox_virtual_environment_hardware_mapping_usb.example example\n```\n\n----------------------------------------\n\nTITLE: Uploading ISO Images to Proxmox VE\nDESCRIPTION: Example of uploading ISO images to a Proxmox VE node. This approach is less efficient than using the proxmox_virtual_environment_download_file resource as it requires transferring the uploaded image to the node.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_file.md#2025-04-23_snippet_1\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_file\" \"ubuntu_container_template\" {\n  content_type = \"iso\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n\n  source_file {\n    path = \"https://cloud-images.ubuntu.com/jammy/20230929/jammy-server-cloudimg-amd64-disk-kvm.img\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring PCI Hardware Mapping in Proxmox VE with Terraform\nDESCRIPTION: Example of creating a PCI hardware mapping resource with device specifications, IOMMU group configuration, and mediated devices support. Demonstrates setting required fields like name and map, along with optional attributes like comments.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_hardware_mapping_pci.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_hardware_mapping_pci\" \"example\" {\n  comment = \"This is a comment\"\n  name    = \"example\"\n  # The actual map of devices.\n  map = [\n    {\n      comment = \"This is a device specific comment\"\n      id      = \"8086:5916\"\n      # This is an optional attribute, but causes a mapping to be incomplete when not defined.\n      iommu_group = 0\n      node        = \"pve\"\n      path        = \"0000:00:02.0\"\n      # This is an optional attribute, but causes a mapping to be incomplete when not defined.\n      subsystem_id = \"8086:2068\"\n    },\n  ]\n  mediated_devices = true\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving APT Repository Data from Proxmox VE in Terraform\nDESCRIPTION: This code demonstrates how to use the proxmox_virtual_environment_apt_repository data source to retrieve information about an APT repository from a specific node in a Proxmox VE cluster. It specifies a file path, an index within that file, and the target node, then outputs the retrieved data.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_apt_repository.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_apt_repository\" \"example\" {\n  file_path = \"/etc/apt/sources.list\"\n  index     = 0\n  node      = \"pve\"\n}\n\noutput \"proxmox_virtual_environment_apt_repository\" {\n  value = data.proxmox_virtual_environment_apt_repository.example\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Directory Mapping in Proxmox VE with Terraform\nDESCRIPTION: Creates a directory mapping resource in Proxmox VE with a name, comment, and a map of devices specifying node and path.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_hardware_mapping_dir.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_hardware_mapping_dir\" \"example\" {\n  comment = \"This is a comment\"\n  name    = \"example\"\n  # The actual map of devices.\n  map = [\n    {\n      node = \"pve\"\n      path = \"/mnt/data\"\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Cluster Firewall Settings in Terraform\nDESCRIPTION: Example configuration for managing cluster-wide firewall settings in Proxmox VE. Demonstrates setting firewall state, policies, and log rate limiting options.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_cluster_firewall.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_cluster_firewall\" \"example\" {\n  enabled = false\n\n  ebtables      = false\n  input_policy  = \"DROP\"\n  output_policy = \"ACCEPT\"\n  log_ratelimit {\n    enabled = false\n    burst   = 10\n    rate    = \"5/second\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving APT Standard Repository Data in Terraform for Proxmox VE\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_apt_standard_repository data source to retrieve information about an APT standard repository from a Proxmox VE cluster. It specifies the handle and node as required parameters and outputs the retrieved data.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_apt_standard_repository.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_apt_standard_repository\" \"example\" {\n  handle = \"no-subscription\"\n  node   = \"pve\"\n}\n\noutput \"proxmox_virtual_environment_apt_standard_repository\" {\n  value = data.proxmox_virtual_environment_apt_standard_repository.example\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox VE Linux VLAN Network Interfaces in Terraform\nDESCRIPTION: This shell script demonstrates how to import existing Proxmox VE Linux VLAN network interfaces into Terraform. It uses the 'node_name:iface' format for the import command.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_network_linux_vlan.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n#Interfaces can be imported using the `node_name:iface` format, e.g.\nterraform import proxmox_virtual_environment_network_linux_vlan.vlan99 pve:vlan99\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox Resource Pool with Terraform\nDESCRIPTION: Example showing how to create a Proxmox resource pool using Terraform. Demonstrates setting a pool ID and comment for resource management.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_pool.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_pool\" \"operations_pool\" {\n  comment = \"Managed by Terraform\"\n  pool_id = \"operations-pool\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using Metadata Cloud-Init Configuration in VM Resource\nDESCRIPTION: This snippet demonstrates how to use both user data and metadata cloud-init configurations when creating a Proxmox VM. It references both configuration files in the initialization block.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/cloud-init.md#2025-04-23_snippet_4\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_vm\" \"ubuntu_vm\" {\n  # ...\n\n  initialization {\n    # ...\n    user_data_file_id = proxmox_virtual_environment_file.user_data_cloud_config.id\n    meta_data_file_id = proxmox_virtual_environment_file.meta_data_cloud_config.id\n  }\n\n  # ...\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Iterating Through Proxmox HA Resources in Terraform\nDESCRIPTION: This example demonstrates how to fetch all HA resource identifiers and then retrieve detailed information for each resource using the for_each loop. It first uses the proxmox_virtual_environment_haresources data source to get all resource IDs, then iterates through them with the proxmox_virtual_environment_haresource data source.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_haresource.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\n// This will fetch the set of all HA resource identifiers...\ndata \"proxmox_virtual_environment_haresources\" \"all\" {}\n\n// ...which we will go through in order to fetch the whole record for each resource.\ndata \"proxmox_virtual_environment_haresource\" \"example\" {\n  for_each    = data.proxmox_virtual_environment_haresources.all.resource_ids\n  resource_id = each.value\n}\n\noutput \"proxmox_virtual_environment_haresources_full\" {\n  value = data.proxmox_virtual_environment_haresource.example\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox APT Repository in Terraform\nDESCRIPTION: Example of creating an APT repository resource in Proxmox VE. Configures a repository with specific file path, index, and node settings.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_apt_repository.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_apt_repository\" \"example\" {\n  enabled   = true\n  file_path = \"/etc/apt/sources.list\"\n  index     = 0\n  node      = \"pve\"\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Backup Files to Proxmox VE\nDESCRIPTION: Example of uploading backup files to a Proxmox VE node. This operation requires SSH access to the node, and the provider does not currently support restoring backups.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_file.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_file\" \"backup\" {\n  content_type = \"backup\"\n  datastore_id = \"local\"\n  node_name    = \"pve\"\n\n  source_file {\n    path = \"vzdump-lxc-100-2023_11_08-23_10_05.tar.zst\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Host Entries from a Proxmox Node using Terraform\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_hosts data source to retrieve all host entries from a specific node named 'first-node' in a Proxmox Virtual Environment.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_hosts.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_hosts\" \"first_node_host_entries\" {\n  node_name = \"first-node\"\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Container Templates to Proxmox VE\nDESCRIPTION: Example of uploading container templates to a Proxmox VE node. This approach is less efficient than using the proxmox_virtual_environment_download_file resource as it requires transferring the uploaded template to the node.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_file.md#2025-04-23_snippet_4\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_file\" \"ubuntu_container_template\" {\n  content_type = \"vztmpl\"\n  datastore_id = \"local\"\n  node_name    = \"first-node\"\n\n  source_file {\n    path = \"https://download.proxmox.com/images/system/ubuntu-20.04-standard_20.04-1_amd64.tar.gz\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Existing Proxmox Pool into Terraform\nDESCRIPTION: Command example for importing an existing Proxmox resource pool into Terraform state management using the pool ID.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_pool.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nterraform import proxmox_virtual_environment_pool.operations_pool operations-pool\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox HA Resource in Terraform\nDESCRIPTION: This shell script demonstrates how to import an existing Proxmox HA resource into Terraform. It uses the 'terraform import' command with the resource identifier.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_haresource.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n# HA resources can be imported using their identifiers, e.g.:\nterraform import proxmox_virtual_environment_haresource.example vm:123\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox Role with Monitoring Privileges in HCL\nDESCRIPTION: Creates a Proxmox VE role with monitoring privileges using Terraform. The role is configured with a specific ID and VM monitoring capabilities.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_role.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_role\" \"operations_monitoring\" {\n  role_id = \"operations-monitoring\"\n\n  privileges = [\n    \"VM.Monitor\",\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider with SSH Private Key from File\nDESCRIPTION: Terraform configuration for the Proxmox provider using a private key file for SSH authentication instead of SSH agent. Useful in CI/CD environments without SSH agent support.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_14\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  // ...\n  ssh {\n    agent       = false\n    private_key = file(\"~/.ssh/id_rsa\")\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Hardware Directory Mapping from Proxmox VE in Terraform\nDESCRIPTION: This snippet demonstrates how to retrieve a directory mapping from a Proxmox VE cluster and output its values. It creates a data source reference with a specific name parameter and then outputs the retrieved data.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_hardware_mapping_dir.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_hardware_mapping_dir\" \"example\" {\n  name = \"example\"\n}\n\noutput \"data_proxmox_virtual_environment_hardware_mapping_dir\" {\n  value = data.proxmox_virtual_environment_hardware_mapping_dir.example\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Sudo Permissions for Terraform User (Text)\nDESCRIPTION: Sudoers configuration that grants the terraform user passwordless sudo access to specific Proxmox commands required for managing VMs and storage.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_19\n\nLANGUAGE: text\nCODE:\n```\nterraform ALL=(root) NOPASSWD: /sbin/pvesm\nterraform ALL=(root) NOPASSWD: /sbin/qm\nterraform ALL=(root) NOPASSWD: /usr/bin/tee /var/lib/vz/*\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider with Inline SSH Private Key\nDESCRIPTION: Terraform configuration for the Proxmox provider using an inline private key for SSH authentication. This approach embeds the private key directly in the configuration using heredoc syntax.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_15\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  // ...\n\n  ssh {\n    agent       = false\n    private_key = <<-EOF\n    -----BEGIN OPENSSH PRIVATE KEY-----\n    b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW\n    <SKIPPED>\n    DMUWUEaH7yMCKl7uCZ9xAAAAAAECAwQF\n    -----END OPENSSH PRIVATE KEY-----\n    EOF\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving PCI Hardware Mapping Data in Terraform for Proxmox VE\nDESCRIPTION: Example of how to retrieve a PCI hardware mapping from a Proxmox VE cluster using the proxmox_virtual_environment_hardware_mapping_pci data source. The example shows how to reference a mapping by name and output its data.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_hardware_mapping_pci.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_hardware_mapping_pci\" \"example\" {\n  name = \"example\"\n}\n\noutput \"data_proxmox_virtual_environment_hardware_mapping_pci\" {\n  value = data.proxmox_virtual_environment_hardware_mapping_pci.example\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Proxmox Virtual Environment Host Entries with Terraform\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_hosts resource to manage host entries on a specific Proxmox node. It sets up an entry for localhost with multiple hostnames.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_hosts.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_hosts\" \"first_node_host_entries\" {\n  node_name = \"first-node\"\n\n  entry {\n    address = \"127.0.0.1\"\n\n    hostnames = [\n      \"localhost\",\n      \"localhost.localdomain\",\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Hardware Mappings in Proxmox Virtual Environment\nDESCRIPTION: Example Terraform configuration demonstrating how to retrieve different types of hardware mappings (directory, PCI, and USB) from a Proxmox node and output PCI and USB mapping data.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_hardware_mappings.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_hardware_mappings\" \"example-dir\" {\n  check_node = \"pve\"\n  type       = \"dir\"\n}\n\ndata \"proxmox_virtual_environment_hardware_mappings\" \"example-pci\" {\n  check_node = \"pve\"\n  type       = \"pci\"\n}\n\ndata \"proxmox_virtual_environment_hardware_mappings\" \"example-usb\" {\n  check_node = \"pve\"\n  type       = \"usb\"\n}\n\noutput \"data_proxmox_virtual_environment_hardware_mappings_pci\" {\n  value = data.proxmox_virtual_environment_hardware_mappings.example-pci\n}\n\noutput \"data_proxmox_virtual_environment_hardware_mappings_usb\" {\n  value = data.proxmox_virtual_environment_hardware_mappings.example-usb\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving PVE Metric Server Data in Terraform\nDESCRIPTION: This code snippet demonstrates how to retrieve information about a specific Proxmox Virtual Environment (PVE) metric server using the proxmox_virtual_environment_metrics_server data source and output selected attributes.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_metrics_server.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_metrics_server\" \"example\" {\n  name = \"example_influxdb\"\n}\n\noutput \"data_proxmox_virtual_environment_metrics_server\" {\n  value = {\n    server = data.proxmox_virtual_environment_metrics_server.example.server\n    port   = data.proxmox_virtual_environment_metrics_server.example.port\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Bash Script for Pre-Authentication with Proxmox API\nDESCRIPTION: A bash script that uses curl and jq to obtain an authentication ticket and CSRF prevention token from the Proxmox API. Includes support for TOTP two-factor authentication.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n#!/usr/bin/bash\n\n## assume vars are set: PROXMOX_VE_ENDPOINT, PROXMOX_VE_USERNAME, PROXMOX_VE_PASSWORD\n## end-goal: automatically set PROXMOX_VE_AUTH_TICKET and PROXMOX_VE_CSRF_PREVENTION_TOKEN\n\n_user_totp_password='123456' ## optional TOTP password\n\n\nproxmox_api_ticket_path='api2/json/access/ticket' ## cannot have double \"//\" - ensure endpoint ends with a \"/\" and this string does not begin with a \"/\", or vice-versa\n\n## call the auth api endpoint\nresp=$( curl -q -s -k --data-urlencode \"username=${PROXMOX_VE_USERNAME}\"  --data-urlencode \"password=${PROXMOX_VE_PASSWORD}\"  \"${PROXMOX_VE_ENDPOINT}${proxmox_api_ticket_path}\" )\nauth_ticket=$( jq -r '.data.ticket' <<\"${resp}\" )\nresp_csrf=$( jq -r '.data.CSRFPreventionToken' <<\"${resp}\" )\n\n## check if the response payload needs a TFA (totp) passed, call the auth-api endpoint again\nif [[ $(jq -r '.data.NeedTFA' <<\"${resp}\") == 1 ]]; then\n  resp=$( curl -q -s -k  -H \"CSRFPreventionToken: ${resp_csrf}\" --data-urlencode  \"username=${PROXMOX_VE_USERNAME}\" --data-urlencode \"tfa-challenge=${auth_ticket}\" --data-urlencode \"password=totp:${_user_totp_password}\"  \"${PROXMOX_VE_ENDPOINT}${proxmox_api_ticket_path}\" )\n  auth_ticket=$( jq -r '.data.ticket' <<\"${resp}\" )\n  resp_csrf=$( jq -r '.data.CSRFPreventionToken' <<\"${resp}\" )\nfi\n\n\nexport PROXMOX_VE_AUTH_TICKET=\"${auth_ticket}\"\nexport PROXMOX_VE_CSRF_PREVENTION_TOKEN=\"${resp_csrf}\"\n\nterraform plan\n```\n\n----------------------------------------\n\nTITLE: Retrieving USB Hardware Mapping Data in Terraform for Proxmox VE\nDESCRIPTION: Example Terraform configuration that demonstrates how to retrieve a USB hardware mapping from a Proxmox VE cluster using the proxmox_virtual_environment_hardware_mapping_usb data source and output the retrieved data.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_hardware_mapping_usb.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_hardware_mapping_usb\" \"example\" {\n  name = \"example\"\n}\n\noutput \"data_proxmox_virtual_environment_hardware_mapping_usb\" {\n  value = data.proxmox_virtual_environment_hardware_mapping_usb.example\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxmox Node Information using Terraform HCL\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_node data source in Terraform to retrieve information about a Proxmox node. It requires no additional arguments beyond the data source declaration.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_node.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_node\" \"node\" {}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider for Pre-Authentication\nDESCRIPTION: Minimal Terraform configuration block for the Proxmox provider when using pre-authentication. This setup requires the auth ticket and CSRF token to be provided separately.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_11\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  endpoint = \"https://10.0.0.2:8006/\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving DNS Configuration from Proxmox Node in HCL\nDESCRIPTION: Example showing how to use the proxmox_virtual_environment_dns data source to retrieve DNS configuration for a specific Proxmox node. The node_name parameter is required to specify which node's DNS configuration to retrieve.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_dns.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_dns\" \"first_node\" {\n  node_name = \"first-node\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxmox Virtual Environment Pool IDs using Terraform\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_pools data source to retrieve the identifiers for all available resource pools in a Proxmox Virtual Environment. It doesn't require any arguments and returns a list of pool IDs.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_pools.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_pools\" \"available_pools\" {}\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Username in Proxmox Provider (HCL)\nDESCRIPTION: Example of configuring a custom SSH username in the Proxmox provider block instead of using the default Proxmox API username. This is required when using API Token or non-PAM authentication.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_16\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  // ...\n\n  ssh {\n    agent    = true\n    username = \"terraform\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox User API Token in Shell\nDESCRIPTION: Shell command for importing existing Proxmox user API tokens into Terraform state. Tokens can be imported using the format 'user_id!token_name'.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_user_token.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n#Tokens can be imported using they identifiers in format `user_id!token_name` format, e.g.:\nterraform import proxmox_virtual_environment_user_token.token1 user@pve!token1\n```\n\n----------------------------------------\n\nTITLE: Retrieving Node Time in Proxmox Virtual Environment using Terraform\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_time data source to retrieve the current time for a specific node. It requires specifying the node_name as an argument and provides access to local_time, time_zone, and utc_time attributes.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_time.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_time\" \"first_node_time\" {\n  node_name = \"first-node\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User Group in Proxmox Virtual Environment with Terraform\nDESCRIPTION: This snippet demonstrates how to create a Proxmox user group using Terraform. It shows the basic configuration with a group ID and comment field, which is a common pattern for creating manageable user groups in a Proxmox environment.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_group.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_virtual_environment_group\" \"operations_team\" {\n  comment  = \"Managed by Terraform\"\n  group_id = \"operations-team\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxmox Pool Information with Terraform\nDESCRIPTION: This code snippet shows how to use the proxmox_virtual_environment_pool data source to fetch information about a specific resource pool. It requires specifying the pool_id parameter to identify which pool to retrieve.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_pool.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_pool\" \"operations_pool\" {\n  pool_id = \"operations\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxmox User Data with Terraform\nDESCRIPTION: Example of using the proxmox_virtual_environment_user data source to fetch information about a specific Proxmox user. The example demonstrates how to reference a PAM-authenticated operations user.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_user.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_user\" \"operations_user\" {\n  user_id = \"operation@pam\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Container Information from Proxmox Virtual Environment using Terraform\nDESCRIPTION: This code demonstrates how to use the proxmox_virtual_environment_container data source to retrieve information about a specific container in Proxmox. It requires specifying the node_name and vm_id parameters to identify the target container.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_container.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_container\" \"test_container\" {\n    node_name = \"test\"\n    vm_id = 100\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving ACME Accounts in Proxmox Virtual Environment with Terraform\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_acme_accounts data source to retrieve the list of ACME accounts and output the result. It uses the Terraform configuration language to define the data source and output.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_acme_accounts.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_acme_accounts\" \"example\" {}\n\noutput \"data_proxmox_virtual_environment_acme_accounts\" {\n  value = data.proxmox_virtual_environment_acme_accounts.example.accounts\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxmox Virtual Environment Version Data in Terraform\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_version data source to retrieve API version details and output them. It accesses the release, repository_id, and version attributes of the data source.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_version.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_version\" \"example\" {}\n\noutput \"data_proxmox_virtual_environment_version\" {\n  value = {\n    release       = data.proxmox_virtual_environment_version.example.release\n    repository_id = data.proxmox_virtual_environment_version.example.repository_id\n    version       = data.proxmox_virtual_environment_version.example.version\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox Cluster Firewall Configuration\nDESCRIPTION: Command for importing existing Proxmox cluster firewall configuration into Terraform state management.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_cluster_firewall.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nterraform import proxmox_virtual_environment_cluster_firewall.example example\n```\n\n----------------------------------------\n\nTITLE: Fetching Proxmox HA Resources with Terraform\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_haresources data source to retrieve all HA resources and VM-specific HA resources. It also shows how to output the fetched resource IDs.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_haresources.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\n// This will fetch the set of all HA resource identifiers.\ndata \"proxmox_virtual_environment_haresources\" \"example_all\" {}\n\n// This will fetch the set of HA resource identifiers that correspond to virtual machines.\ndata \"proxmox_virtual_environment_haresources\" \"example_vm\" {\n  type = \"vm\"\n}\n\noutput \"data_proxmox_virtual_environment_haresources\" {\n  value = {\n    all = data.proxmox_virtual_environment_haresources.example_all.resource_ids\n    vms = data.proxmox_virtual_environment_haresources.example_vm.resource_ids\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox ACME DNS Plugin with AWS Configuration\nDESCRIPTION: Example Terraform configuration for creating an ACME DNS plugin resource in Proxmox VE using AWS credentials. Demonstrates setting up required fields like plugin name, API type, and authentication data.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_acme_dns_plugin.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\nresource \"proxmox_virtual_environment_acme_dns_plugin\" \"example\" {\n  plugin = \"test\"\n  api    = \"aws\"\n  data = {\n    AWS_ACCESS_KEY_ID     = \"EXAMPLE\"\n    AWS_SECRET_ACCESS_KEY = \"EXAMPLE\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox HA Group in Terraform\nDESCRIPTION: Shell command example showing how to import an existing Proxmox HA group into Terraform state management using the group name as the identifier.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_hagroup.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n# HA groups can be imported using their name, e.g.:\nterraform import proxmox_virtual_environment_hagroup.example example\n```\n\n----------------------------------------\n\nTITLE: Retrieving Available Roles in Proxmox Virtual Environment with Terraform\nDESCRIPTION: This snippet demonstrates how to retrieve information about all available roles in a Proxmox Virtual Environment using Terraform. No arguments are required for this data source as it simply fetches all available roles.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_roles.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_roles\" \"available_roles\" {}\n```\n\n----------------------------------------\n\nTITLE: Importing Existing Proxmox ACME DNS Plugin\nDESCRIPTION: Shell command example showing how to import an existing ACME DNS plugin into Terraform state management using the plugin name as the identifier.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_acme_dns_plugin.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n# ACME accounts can be imported using their name, e.g.:\nterraform import proxmox_virtual_environment_acme_dns_plugin.example test\n```\n\n----------------------------------------\n\nTITLE: Importing Existing Directory Mappings into Terraform\nDESCRIPTION: A shell script showing how to import an existing directory mapping into Terraform state using its name.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_hardware_mapping_dir.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n# A directory mapping can be imported using their name, e.g.:\nterraform import proxmox_virtual_environment_hardware_mapping_dir.example example\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxmox Virtual Environment Users with Terraform\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_users data source in Terraform to retrieve information about all available users in a Proxmox Virtual Environment.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_users.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_users\" \"available_users\" {}\n```\n\n----------------------------------------\n\nTITLE: Retrieving ACME Plugins Data in Terraform for Proxmox Virtual Environment\nDESCRIPTION: This snippet demonstrates how to retrieve all ACME plugins from a Proxmox Virtual Environment and output the result. The data source doesn't require any configuration parameters.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_acme_plugins.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_acme_plugins\" \"example\" {}\n\noutput \"data_proxmox_virtual_environment_acme_plugins\" {\n  value = data.proxmox_virtual_environment_acme_plugins.example.plugins\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Datastore Path to Sudo Permissions (Text)\nDESCRIPTION: Additional sudoers configuration for when using a non-default datastore for snippets, showing how to allow access to a specific mount point.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_20\n\nLANGUAGE: text\nCODE:\n```\nterraform ALL=(root) NOPASSWD: /usr/bin/tee /mnt/pve/cephfs/*\n```\n\n----------------------------------------\n\nTITLE: Defining Proxmox VM2 Data Source Schema in Terraform\nDESCRIPTION: Schema definition for the proxmox_virtual_environment_vm2 data source, outlining required fields like ID and node_name, as well as optional configuration for CPU, VGA, RNG, and cloning parameters.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_vm2.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_vm2\" \"example\" {\n  id        = 100\n  node_name = \"pve-node1\"\n  \n  # Optional configuration\n  name        = \"my-vm\"\n  description = \"Example VM\"\n  template    = false\n  tags        = [\"prod\", \"web\"]\n  \n  cpu {\n    cores      = 2\n    sockets    = 1\n    type       = \"host\"\n    architecture = \"x86_64\"\n  }\n  \n  vga {\n    type       = \"std\"\n    memory     = 32\n  }\n  \n  timeouts {\n    read = \"5m\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Assigning Role to Terraform User in Proxmox\nDESCRIPTION: Command to assign the previously created role to the Terraform user, establishing the user's permissions in the system.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nsudo pveum aclmod / -user terraform@pve -role Terraform\n```\n\n----------------------------------------\n\nTITLE: Retrieving ACME Plugin Information in Terraform Proxmox Provider\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_acme_plugin data source to retrieve information about a specific ACME plugin (in this case, the 'standalone' plugin) and output its details.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_acme_plugin.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndata \"proxmox_virtual_environment_acme_plugin\" \"example\" {\n  plugin = \"standalone\"\n}\n\noutput \"data_proxmox_virtual_environment_acme_plugin\" {\n  value = data.proxmox_virtual_environment_acme_plugin.example\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Role for Terraform in Proxmox\nDESCRIPTION: Command to create a role with specific privileges for Terraform operations in Proxmox. This defines the permissions the Terraform user will have.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsudo pveum role add Terraform -privs \"Datastore.Allocate Datastore.AllocateSpace Datastore.AllocateTemplate Datastore.Audit Pool.Allocate Sys.Audit Sys.Console Sys.Modify SDN.Use VM.Allocate VM.Audit VM.Clone VM.Config.CDROM VM.Config.Cloudinit VM.Config.CPU VM.Config.Disk VM.Config.HWType VM.Config.Memory VM.Config.Network VM.Config.Options VM.Migrate VM.Monitor VM.PowerMgmt User.Modify\"\n```\n\n----------------------------------------\n\nTITLE: Creating an API Token for Terraform User in Proxmox\nDESCRIPTION: Command to generate an API token for the Terraform user with privilege separation disabled. This token will be used for authentication.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nsudo pveum user token add terraform@pve provider --privsep=0\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxmox ACME Account Information with Terraform\nDESCRIPTION: This example demonstrates how to fetch all ACME accounts in a Proxmox environment and then iterate through them to get detailed information about each account. It uses the for_each construct to dynamically create multiple instances of the data source based on available accounts.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_acme_account.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\n// This will fetch all ACME accounts...\ndata \"proxmox_virtual_environment_acme_accounts\" \"all\" {}\n\n// ...which we will go through in order to fetch the whole data on each account.\ndata \"proxmox_virtual_environment_acme_account\" \"example\" {\n  for_each = data.proxmox_virtual_environment_acme_accounts.all.accounts\n  name     = each.value\n}\n\noutput \"data_proxmox_virtual_environment_acme_account\" {\n  value = data.proxmox_virtual_environment_acme_account.example\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Proxmox User for API Token Authentication\nDESCRIPTION: Command to create a new user in Proxmox specifically for Terraform use.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nsudo pveum user add terraform@pve\n```\n\n----------------------------------------\n\nTITLE: Creating a System User for Terraform SSH Access (Shell)\nDESCRIPTION: Command to create a new system user named 'terraform' that will be used for SSH connections to Proxmox nodes.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_17\n\nLANGUAGE: sh\nCODE:\n```\nuseradd -m terraform\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxmox HA Group Data in Terraform\nDESCRIPTION: This snippet demonstrates how to fetch data for all HA groups in Proxmox Virtual Environment. It first retrieves the set of HA group identifiers, then iterates through them to fetch the complete data for each group.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_hagroup.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\n// This will fetch the set of HA group identifiers...\ndata \"proxmox_virtual_environment_hagroups\" \"all\" {}\n\n// ...which we will go through in order to fetch the whole data on each group.\ndata \"proxmox_virtual_environment_hagroup\" \"example\" {\n  for_each = data.proxmox_virtual_environment_hagroups.all.group_ids\n  group    = each.value\n}\n\noutput \"proxmox_virtual_environment_hagroups_full\" {\n  value = data.proxmox_virtual_environment_hagroup.example\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox DNS Configuration into Terraform\nDESCRIPTION: This command shows how to import an existing Proxmox DNS configuration into Terraform state. It uses the node name as the identifier for importing the resource.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_dns.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nterraform import proxmox_virtual_environment_dns.first_node first-node\n```\n\n----------------------------------------\n\nTITLE: Configuring Node IP Addresses for SSH Connections (HCL)\nDESCRIPTION: Example of explicitly specifying IP addresses for Proxmox nodes in the provider configuration, which overrides the automatic node IP resolution process.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_22\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  // ...\n  ssh {\n    // ...\n    node {\n      name    = \"pve1\"\n      address = \"192.168.10.1\"\n    }\n    node {\n      name    = \"pve2\"\n      address = \"192.168.10.2\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxmox Group Data in Terraform HCL\nDESCRIPTION: Demonstrates how to retrieve information about a specific Proxmox user group using the proxmox_virtual_environment_group data source. The example shows fetching data for an 'operations-team' group.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_group.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_group\" \"operations_team\" {\n  group_id = \"operations-team\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Existing PCI Hardware Mapping into Terraform\nDESCRIPTION: Shell command example showing how to import an existing PCI hardware mapping into Terraform state using the mapping name.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_hardware_mapping_pci.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n# A PCI hardware mapping can be imported using their name, e.g.:\nterraform import proxmox_virtual_environment_hardware_mapping_pci.example example\n```\n\n----------------------------------------\n\nTITLE: SSH Command for Proxmox Access\nDESCRIPTION: This command allows you to SSH into the Proxmox node using the root user and the IP address obtained from the previous steps. This is useful for remote management of the Proxmox node.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/setup-proxmox-for-tests.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nssh root@192.168.122.43\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox Virtual Environment Hosts Resource in Terraform\nDESCRIPTION: This command shows how to import an existing proxmox_virtual_environment_hosts resource into Terraform state. It uses the node name as the identifier for import.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_hosts.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nterraform import proxmox_virtual_environment_hosts.first_node_host_entries first-node\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox APT Standard Repository in Terraform\nDESCRIPTION: Shell script showing how to import an existing Proxmox VE APT standard repository into Terraform state. The import command requires the node name and repository handle separated by a comma.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_apt_standard_repository.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n# An APT standard repository can be imported using a comma-separated list consisting of the name of the Proxmox VE node,\n# and the standard repository handle in the exact same order, e.g.:\nterraform import proxmox_virtual_environment_apt_standard_repository.example pve,no-subscription\n```\n\n----------------------------------------\n\nTITLE: Building Proxmox Provider - Build Commands\nDESCRIPTION: Commands to build the provider and generate documentation\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncd \"${GOPATH}/src/github.com/bpg/terraform-provider-proxmox\"\nmake build\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox APT Repository in Shell\nDESCRIPTION: Shell command for importing an existing APT repository into Terraform state. Uses a comma-separated format containing node name, file path, and index.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_apt_repository.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n# An APT repository can be imported using a comma-separated list consisting of the name of the Proxmox VE node,\n# the absolute source list file path, and the index in the exact same order, e.g.:\nterraform import proxmox_virtual_environment_apt_repository.example pve,/etc/apt/sources.list,0\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox VE Cluster Options in Terraform\nDESCRIPTION: Shell script demonstrating how to import existing Proxmox VE Cluster options into Terraform state. Cluster options are global and can be imported using the 'cluster' identifier.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/resources/virtual_environment_cluster_options.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n#!/usr/bin/env sh\n# Cluster options are global and can be imported using e.g.:\nterraform import proxmox_virtual_environment_cluster_options.options cluster\n```\n\n----------------------------------------\n\nTITLE: Acceptance Tests Environment Configuration\nDESCRIPTION: Environment variables required for running acceptance tests against a Proxmox instance\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CONTRIBUTING.md#2025-04-23_snippet_5\n\nLANGUAGE: env\nCODE:\n```\nTF_ACC=1\nPROXMOX_VE_API_TOKEN=\"root@pam!<token name>=<token value>\"\nPROXMOX_VE_ENDPOINT=\"https://<pve instance>:8006/\"\nPROXMOX_VE_SSH_AGENT=\"true\"\nPROXMOX_VE_SSH_USERNAME=\"root\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxmox Virtual Environment Groups in HCL\nDESCRIPTION: This snippet demonstrates how to use the proxmox_virtual_environment_groups data source to retrieve information about all available user groups in a Proxmox Virtual Environment. It doesn't require any arguments and returns group comments and identifiers.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/data-sources/virtual_environment_groups.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ndata \"proxmox_virtual_environment_groups\" \"available_groups\" {}\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH via SOCKS5 Proxy (HCL)\nDESCRIPTION: Example of setting up the Proxmox provider to connect to nodes through a SOCKS5 proxy, including optional authentication parameters.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_23\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  // ...\n  ssh {\n    // ...\n    socks5_server     = \"ip-or-fqdn-of-socks5-server:port\"\n    socks5_username   = \"username\"  # optional  \n    socks5_password   = \"password\"  # optional\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Provider Override Configuration for Linux/macOS\nDESCRIPTION: Terraform configuration for local provider development on Linux/macOS\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CONTRIBUTING.md#2025-04-23_snippet_7\n\nLANGUAGE: hcl\nCODE:\n```\nprovider_installation {\n  dev_overrides {\n    \"bpg/proxmox\" = \"/home/user/go/bin/\"  # Replace with your $GOPATH/bin\n  }\n  direct {}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring VM disk with required interface parameter in Proxmox (Terraform)\nDESCRIPTION: Example of configuring a disk in a Proxmox VM using the required 'interface' parameter introduced in v0.4.0. This shows how to specify a disk with a datastore ID, file ID, and the interface type.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/HISTORY.md#2025-04-23_snippet_0\n\nLANGUAGE: terraform\nCODE:\n```\ndisk {\n  datastore_id = \"local-lvm\"\n  file_id      = \"${proxmox_virtual_environment_file.ubuntu_cloud_image.id}\"\n  interface    = \"scsi0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Serial Device for Debian/Ubuntu VMs in HCL\nDESCRIPTION: HCL configuration block for adding a required serial device to Debian 12 and Ubuntu VMs to prevent kernel panic when resizing cloud image boot disks.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: hcl\nCODE:\n```\n  serial_device {\n    device = \"socket\"\n  }\n```\n\n----------------------------------------\n\nTITLE: Version Release Notes\nDESCRIPTION: Detailed release notes for version 0.59.1 including bug fixes and miscellaneous changes\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.59.1](https://github.com/bpg/terraform-provider-proxmox/compare/v0.59.0...v0.59.1) (2024-06-10)\n\n### Bug Fixes\n\n* **vm:** ignore 599 task status response when waiting for VM start ([#1365](https://github.com/bpg/terraform-provider-proxmox/issues/1365)) ([5d4193b](https://github.com/bpg/terraform-provider-proxmox/commit/5d4193b6beb2b4b71b9f5be7507d4ddc6ea3b6b7))\n```\n\n----------------------------------------\n\nTITLE: Running Provider Tests in Shell\nDESCRIPTION: Command to run unit tests for the Proxmox provider using make. This executes the test suite to ensure backward compatibility.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmake test\n```\n\n----------------------------------------\n\nTITLE: Creating Terraform Variables Configuration\nDESCRIPTION: This creates a terraform.tfvars file in the example folder with credentials for the Proxmox node. This file contains the username, endpoint URL, and password needed for Terraform to authenticate with the Proxmox API.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/setup-proxmox-for-tests.md#2025-04-23_snippet_3\n\nLANGUAGE: txt\nCODE:\n```\n# example/terraform.tfvars\nvirtual_environment_username = \"root@pam\"\nvirtual_environment_endpoint = \"https://192.168.122.43:8006/\"\nvirtual_environment_password = \"your password from step 5\"\n```\n\n----------------------------------------\n\nTITLE: Bug Fix Entry Format in Changelog\nDESCRIPTION: Example format used for documenting bug fixes with issue links and commit hashes\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **provider:** allow FQDN for `ssh.node.address` in provider's config ([#824](https://github.com/bpg/terraform-provider-proxmox/issues/824)) ([34df977](https://github.com/bpg/terraform-provider-proxmox/commit/34df9773c34b43ba39b5d8505b5916b52f87ff3e))\n```\n\n----------------------------------------\n\nTITLE: Testing SSH Connection with Sudo Privileges (Shell)\nDESCRIPTION: Command to test SSH connectivity and sudo privileges by executing a Proxmox storage command that should return API version information without password prompt.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_21\n\nLANGUAGE: sh\nCODE:\n```\nssh terraform@<target-node> sudo pvesm apiinfo\n```\n\n----------------------------------------\n\nTITLE: Version Reference\nDESCRIPTION: Git commit reference showing version comparison between releases.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[0.21.0](https://github.com/bpg/terraform-provider-proxmox/compare/v0.20.1...v0.21.0)\n```\n\n----------------------------------------\n\nTITLE: Feature Entry Format in Changelog\nDESCRIPTION: Example format used for documenting new features with issue links and commit hashes\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* **vm, lxc:** add new `initialization.dns.servers` param to vm and container ([#832](https://github.com/bpg/terraform-provider-proxmox/issues/832)) ([16e571d](https://github.com/bpg/terraform-provider-proxmox/commit/16e571dc199c8977b3954e3c56c9b96cc351503e))\n```\n\n----------------------------------------\n\nTITLE: Configuring Sudo Privileges with visudo (Shell)\nDESCRIPTION: Command to open the visudo editor to create a new sudoers file specifically for the terraform user.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/index.md#2025-04-23_snippet_18\n\nLANGUAGE: sh\nCODE:\n```\nvisudo -f /etc/sudoers.d/terraform\n```\n\n----------------------------------------\n\nTITLE: Commit Hash Reference\nDESCRIPTION: Git commit hash reference for a specific change.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n926382c155169f1be07cba26b3fda0572fdc1002\n```\n\n----------------------------------------\n\nTITLE: Semantic Version Headers in Changelog\nDESCRIPTION: Version headers and links showing semantic versioning format used in the changelog\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.41.0](https://github.com/bpg/terraform-provider-proxmox/compare/v0.40.0...v0.41.0) (2023-12-18)\n\n## [0.40.0](https://github.com/bpg/terraform-provider-proxmox/compare/v0.39.0...v0.40.0) (2023-12-06)\n\n## [0.39.0](https://github.com/bpg/terraform-provider-proxmox/compare/v0.38.1...v0.39.0) (2023-11-30)\n```\n\n----------------------------------------\n\nTITLE: Provider Override Configuration for Windows\nDESCRIPTION: Terraform configuration for local provider development on Windows\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CONTRIBUTING.md#2025-04-23_snippet_8\n\nLANGUAGE: hcl\nCODE:\n```\nprovider_installation {\n  dev_overrides {\n    \"bpg/proxmox\" = \"C:\\\\Users\\\\user\\\\go\\\\bin\"  # Replace with your %GOPATH%/bin\n  }\n  direct {}\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML Table of Project Contributors\nDESCRIPTION: This HTML snippet generates a table displaying contributor information including profile pictures, usernames, and contribution types for the terraform-provider-proxmox project on GitHub. It uses inline styles for layout and includes links to contributor profiles and contribution details.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CONTRIBUTORS.md#2025-04-23_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/mritalian\"><img src=\"https://avatars.githubusercontent.com/u/15789014?v=4?s=100\" width=\"100px;\" alt=\"Eric B\"/><br /><sub><b>Eric B</b></sub></a><br /><a href=\"https://github.com/bpg/terraform-provider-proxmox/commits?author=mritalian\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/bpg/terraform-provider-proxmox/commits?author=mritalian\" title=\"Documentation\">📖</a> <a href=\"https://github.com/bpg/terraform-provider-proxmox/issues?q=author%3Amritalian\" title=\"Bug reports\">🐛</a></td>\n```\n\n----------------------------------------\n\nTITLE: Building Proxmox Provider - Clone Repository\nDESCRIPTION: Commands to clone the Proxmox provider repository to the correct GOPATH location\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmkdir -p \"${GOPATH}/src/github.com/bpg\"\ncd \"${GOPATH}/src/github.com/bpg\"\ngit clone git@github.com:bpg/terraform-provider-proxmox\n```\n\n----------------------------------------\n\nTITLE: Building Proxmox Provider - Cross Compilation\nDESCRIPTION: Command to cross-compile the provider for all supported platforms\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nmake build-all\n```\n\n----------------------------------------\n\nTITLE: Generating Documentation\nDESCRIPTION: Command to update documentation generated from source code\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmake docs\n```\n\n----------------------------------------\n\nTITLE: Contributors Table Layout in HTML/Markdown\nDESCRIPTION: HTML table layout showing contributor information including avatars, names, and contribution types. The table is formatted with markdown and HTML components to display contributor details in a grid format with aligned cells.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CONTRIBUTORS.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://danitso.com/\"><img src=\"https://avatars.githubusercontent.com/u/7096448?v=4?s=100\" width=\"100px;\" alt=\"Dan R. Petersen\"/><br /><sub><b>Dan R. Petersen</b></sub></a><br /><a href=\"https://github.com/bpg/terraform-provider-proxmox/commits?author=danitso-dp\" title=\"Code\">💻</a></td>\n      <!-- Additional contributor entries -->\n    </tr>\n    <!-- Additional rows -->\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests\nDESCRIPTION: Command to execute the unit test suite\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CONTRIBUTING.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmake test\n```\n\n----------------------------------------\n\nTITLE: Optional Acceptance Tests Configuration\nDESCRIPTION: Additional optional environment variables for acceptance tests\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CONTRIBUTING.md#2025-04-23_snippet_6\n\nLANGUAGE: env\nCODE:\n```\nPROXMOX_VE_ACC_NODE_NAME=\"pve1\"\nPROXMOX_VE_ACC_NODE_SSH_ADDRESS=\"10.0.0.11\"\nPROXMOX_VE_ACC_NODE_SSH_PORT=\"22\"\nPROXMOX_VE_ACC_IFACE_NAME=\"enp1s0\"\n```\n\n----------------------------------------\n\nTITLE: Checking IP Address Output in Proxmox VM\nDESCRIPTION: This shows the sample output of the 'ip a' command in a newly installed Proxmox VM, displaying the network interfaces including the loopback (lo), physical interface (enp1s0), and virtual bridge (vmbr0) with their respective IP addresses.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/setup-proxmox-for-tests.md#2025-04-23_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\nroot@proxmox:~# ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host noprefixroute\n    valid_lft forever preferred_lft forever\n2: enp1s0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast master vmbr0 state UP group default qlen 1000\n    link/ether 52:54:00:b3:22:f5 brd ff:ff:ff:ff:ff:ff\n3: vmbr0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000\n    link/ether 52:54:00:b3:22:f5 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.122.43/24 scope global vmbr0\n    valid_lft forever preferred_lft forever\n    inet6 fe80::5054:ff:feb3:22f5/64 scope link\n    valid_lft forever preferred_lft forever\n```\n\n----------------------------------------\n\nTITLE: Checking Host Virtual Bridge Interface\nDESCRIPTION: This shows the output of the 'ip a' command on the host system, displaying the virtual bridge (virbr0) interface that's created when running Proxmox in a VM. This interface is used for communication with the Proxmox VM.\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/docs/guides/setup-proxmox-for-tests.md#2025-04-23_snippet_1\n\nLANGUAGE: txt\nCODE:\n```\n...\n\n8: virbr0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000\n    link/ether 52:54:00:ca:65:49 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0\n    valid_lft forever preferred_lft forever\n\n...\n```\n\n----------------------------------------\n\nTITLE: Version Changelog Entries\nDESCRIPTION: Structured changelog entries documenting changes across multiple versions including bug fixes, features and miscellaneous updates\nSOURCE: https://github.com/bpg/terraform-provider-proxmox/blob/main/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **docs:** add more details about the `usb` block in VM ([#1382](https://github.com/bpg/terraform-provider-proxmox/issues/1382)) ([1eb64a2](https://github.com/bpg/terraform-provider-proxmox/commit/1eb64a25226d6c2ae48ac5cc4c24499e0bbb84cf))\n* **docs:** update virtual_environment_vm.md ([#1377](https://github.com/bpg/terraform-provider-proxmox/issues/1377)) ([63f0cbf](https://github.com/bpg/terraform-provider-proxmox/commit/63f0cbfd27387a9d4fd0b5aa853be9a5a52475f2))\n* **lxc:** make container vm_id computed ([#1386](https://github.com/bpg/terraform-provider-proxmox/issues/1386)) ([bc079c0](https://github.com/bpg/terraform-provider-proxmox/commit/bc079c0c192d1b3cb99c2b646f639a57cfbff7f6))\n```"
  }
]
[
  {
    "owner": "phoenixframework",
    "repo": "phoenix_live_reload",
    "content": "TITLE: Installing Phoenix Live Reload Dependencies\nDESCRIPTION: Configuration for adding phoenix_live_reload to project dependencies in mix.exs\nSOURCE: https://github.com/phoenixframework/phoenix_live_reload/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\ndef deps do\n  [{:phoenix_live_reload, \"~> 1.5\"}]\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring Live Reload Interval\nDESCRIPTION: Configuration for setting the reload interval in config/dev.exs\nSOURCE: https://github.com/phoenixframework/phoenix_live_reload/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\n# Watch static and templates for browser reloading.\nconfig :my_app, MyAppWeb.Endpoint,\n  live_reload: [\n    interval: 1000,\n    patterns: [\n      ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Backend Directories\nDESCRIPTION: Configuration for specifying watched directories and backend options\nSOURCE: https://github.com/phoenixframework/phoenix_live_reload/blob/main/README.md#2025-04-23_snippet_7\n\nLANGUAGE: elixir\nCODE:\n```\nconfig :phoenix_live_reload,\n  dirs: [\n    \"priv/static\",\n    \"priv/gettext\",\n    \"lib/example_web/live\",\n    \"lib/example_web/views\",\n    \"lib/example_web/templates\",\n    \"../another_project/priv/static\", # Contents of this directory is not watched\n    \"/another_project/priv/static\", # Contents of this directory is not watched\n  ],\n  backend: :fs_poll,\n  backend_opts: [\n    interval: 500\n  ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Backend Type\nDESCRIPTION: Configuration for setting the file system backend type in config/config.exs\nSOURCE: https://github.com/phoenixframework/phoenix_live_reload/blob/main/README.md#2025-04-23_snippet_6\n\nLANGUAGE: elixir\nCODE:\n```\nconfig :phoenix_live_reload,\n  backend: :fs_poll\n```\n\n----------------------------------------\n\nTITLE: Enabling Web Console Logger\nDESCRIPTION: Configuration for enabling server log streaming to web console in config/dev.exs\nSOURCE: https://github.com/phoenixframework/phoenix_live_reload/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: elixir\nCODE:\n```\nconfig :my_app, MyAppWeb.Endpoint,\n  live_reload: [\n    interval: 1000,\n    patterns: [...],\n    web_console_logger: true\n  ]\n```\n\n----------------------------------------\n\nTITLE: Implementing Server Log Streaming\nDESCRIPTION: JavaScript event listener for enabling server log streaming to client console\nSOURCE: https://github.com/phoenixframework/phoenix_live_reload/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.addEventListener(\"phx:live_reload:attached\", ({detail: reloader}) => {\n  reloader.enableServerLogs()\n})\n```\n\n----------------------------------------\n\nTITLE: HEEx Editor Integration\nDESCRIPTION: Configuration for setting up code editor integration using PLUG_EDITOR environment variable\nSOURCE: https://github.com/phoenixframework/phoenix_live_reload/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport PLUG_EDITOR=\"vscode://file/__FILE__:__LINE__\"\n```\n\n----------------------------------------\n\nTITLE: Implementing HEEx File Navigation\nDESCRIPTION: JavaScript implementation for handling HEEx file navigation with keyboard shortcuts\nSOURCE: https://github.com/phoenixframework/phoenix_live_reload/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.addEventListener(\"phx:live_reload:attached\", ({detail: reloader}) => {\n  reloader.enableServerLogs()\n\n  let keyDown\n  window.addEventListener(\"keydown\", e => keyDown = e.key)\n  window.addEventListener(\"keyup\", e => keyDown = null)\n  window.addEventListener(\"click\", e => {\n    if(keyDown === \"c\"){\n      e.preventDefault()\n      e.stopImmediatePropagation()\n      reloader.openEditorAtCaller(e.target)\n    } else if(keyDown === \"d\"){\n      e.preventDefault()\n      e.stopImmediatePropagation()\n      reloader.openEditorAtDef(e.target)\n    }\n  }, true)\n  window.liveReloader = reloader\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Target Window in Phoenix Live Reload\nDESCRIPTION: Sets the target window option to ':top' to reload the whole page when Phoenix app is displayed in an iframe. This overrides the default ':parent' setting introduced in version 1.6.0.\nSOURCE: https://github.com/phoenixframework/phoenix_live_reload/blob/main/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\nconfig :phoenix_live_reload, MyAppWeb.Endpoint,\n  target_window: :top,\n  ...\n```"
  }
]
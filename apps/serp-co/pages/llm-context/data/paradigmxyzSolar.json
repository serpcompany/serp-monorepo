[
  {
    "owner": "paradigmxyz",
    "repo": "solar",
    "content": "TITLE: Adding Solar as a Dependency in Cargo.toml\nDESCRIPTION: Shows how to add Solar to a Rust project by including it in the dependencies section of Cargo.toml. Uses version pinning to ensure API stability.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/README.md#2025-04-16_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[dependencies]\nsolar = { version = \"=0.1.2\", package = \"solar-compiler\" }\n```\n\n----------------------------------------\n\nTITLE: Adding Solar as a Dependency in Cargo.toml\nDESCRIPTION: Configures Solar as a dependency in a Rust project's Cargo.toml file. The package is referenced by its crate name 'solar-compiler' but can be used as 'solar' in the code.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/solar/README.md#2025-04-16_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[dependencies]\nsolar = { version = \"=0.1.2\", package = \"solar-compiler\" }\n```\n\n----------------------------------------\n\nTITLE: Installing Solar Binary on macOS/Linux\nDESCRIPTION: Command for downloading and installing pre-built Solar binary on macOS and Linux systems using curl and an installation script.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/README.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -LsSf https://paradigm.xyz/solar/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Installing Solar on macOS and Linux\nDESCRIPTION: Command to install pre-built Solar binaries on macOS and Linux systems using a shell script. The script is fetched from the Paradigm website and executed.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/solar/README.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -LsSf https://paradigm.xyz/solar/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Installing Solar via Cargo CLI\nDESCRIPTION: Command for installing Solar compiler as a dependency using Cargo's command-line interface, with the appropriate package renaming.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncargo add solar-compiler --rename solar\n```\n\n----------------------------------------\n\nTITLE: Installing Solar via Cargo Command\nDESCRIPTION: Command to add Solar as a dependency to a Rust project using the Cargo CLI, renaming the package from 'solar-compiler' to 'solar' for easier reference in code.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/solar/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncargo add solar-compiler --rename solar\n```\n\n----------------------------------------\n\nTITLE: Installing Solar from crates.io\nDESCRIPTION: Command for installing Solar directly from crates.io using cargo install with the --locked flag to ensure reproducible builds.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/README.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncargo install solar-compiler --locked\n```\n\n----------------------------------------\n\nTITLE: Installing Solar from crates.io\nDESCRIPTION: Command to install the Solar CLI tool from crates.io using Cargo. The --locked flag ensures reproducible builds by using the exact dependency versions specified in the lockfile.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/solar/README.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncargo install solar-compiler --locked\n```\n\n----------------------------------------\n\nTITLE: Installing Solar from GitHub\nDESCRIPTION: Command for installing Solar directly from the GitHub repository using cargo install with the --locked flag for dependency consistency.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/README.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncargo install --git https://github.com/paradigmxyz/solar --locked\n```\n\n----------------------------------------\n\nTITLE: Installing Solar from GitHub Repository\nDESCRIPTION: Command to install Solar directly from the GitHub repository using Cargo. This approach installs the latest development version rather than the latest published release.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/solar/README.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncargo install --git https://github.com/paradigmxyz/solar --locked\n```\n\n----------------------------------------\n\nTITLE: Building Solar from Git Checkout\nDESCRIPTION: Series of commands for cloning the Solar repository, navigating to it, and installing the binary locally using cargo from the project path.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/README.md#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/paradigmxyz/solar\ncd solar\ncargo install --locked --path crates/solar\n```\n\n----------------------------------------\n\nTITLE: Building and Installing Solar from Source\nDESCRIPTION: Commands to clone the Solar repository, navigate to the project directory, and install the binary from the local source. This allows for custom modifications to the source code.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/solar/README.md#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/paradigmxyz/solar\ncd solar\ncargo install --locked --path crates/solar\n```\n\n----------------------------------------\n\nTITLE: Installing Specific Solar Version\nDESCRIPTION: Commands for installing a specific version of Solar on different platforms by specifying the version in the installation URL.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/README.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -LsSf https://paradigm.xyz/solar/v0.1.0/install.sh | sh\npowershell -c \"irm https://paradigm.xyz/solar/v0.1.0/install.ps1 | iex\"\n```\n\n----------------------------------------\n\nTITLE: Installing Specific Solar Version\nDESCRIPTION: Commands to install a specific version of Solar (v0.1.0) on different platforms. Shows both bash and PowerShell examples for version-specific installations.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/solar/README.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -LsSf https://paradigm.xyz/solar/v0.1.0/install.sh | sh\npowershell -c \"irm https://paradigm.xyz/solar/v0.1.0/install.ps1 | iex\"\n```\n\n----------------------------------------\n\nTITLE: Installing Solar Binary on Windows\nDESCRIPTION: PowerShell command for downloading and installing pre-built Solar binary on Windows systems using an installation script.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/README.md#2025-04-16_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\npowershell -c \"irm https://paradigm.xyz/solar/install.ps1 | iex\"\n```\n\n----------------------------------------\n\nTITLE: Installing Solar on Windows\nDESCRIPTION: PowerShell command to install pre-built Solar binaries on Windows systems. The installation script is downloaded from the Paradigm website and executed.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/solar/README.md#2025-04-16_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\npowershell -c \"irm https://paradigm.xyz/solar/install.ps1 | iex\"\n```\n\n----------------------------------------\n\nTITLE: Compiling with Foundry Remappings\nDESCRIPTION: Command for compiling a Solidity file with remappings from a Foundry project, using command substitution to include the remappings.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/README.md#2025-04-16_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nsolar $(forge re) src/Contract.sol\n```\n\n----------------------------------------\n\nTITLE: Compiling with Foundry Remappings\nDESCRIPTION: Command showing how to use Solar with Foundry's remappings to compile a Solidity contract. Demonstrates integration with the Foundry toolchain for resolving import paths.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/solar/README.md#2025-04-16_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n# Compile a file with a Foundry project's remappings.\nsolar $(forge re) src/Contract.sol\n```\n\n----------------------------------------\n\nTITLE: Compiling Solidity from Standard Input\nDESCRIPTION: Examples showing how to compile Solidity code provided through standard input using echo or heredoc syntax.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/README.md#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\necho \"contract C {}\" | solar -\nsolar - <<EOF\ncontract HelloWorld {\n    function helloWorld() external pure returns (string memory) {\n        return \"Hello, World!\";\n    }\n}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Compiling Solidity from Standard Input\nDESCRIPTION: Examples showing how to compile Solidity code provided through standard input using Solar. Demonstrates both a simple echo pipe and a heredoc syntax for multi-line code.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/solar/README.md#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n# Compile a contract through standard input (`-` file).\necho \"contract C {}\" | solar -\nsolar - <<EOF\ncontract HelloWorld {\n    function helloWorld() external pure returns (string memory) {\n        return \"Hello, World!\";\n    }\n}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Compiling Solidity and Emitting ABI\nDESCRIPTION: Command to compile a Solidity file named Counter.sol and output its ABI (Application Binary Interface) to standard output.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/README.md#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nsolar Counter.sol --emit abi\n```\n\n----------------------------------------\n\nTITLE: Compiling Solidity and Emitting ABI\nDESCRIPTION: Example command showing how to use Solar to compile a Solidity contract file and emit just the ABI to standard output. Demonstrates a focused compilation that only produces specific artifacts.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/solar/README.md#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# Compile a single file and emit ABI to stdout.\nsolar Counter.sol --emit abi\n```\n\n----------------------------------------\n\nTITLE: Getting Solar Help Information\nDESCRIPTION: Command for displaying Solar's help information and available options using the -h flag.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/README.md#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nsolar -h\n```\n\n----------------------------------------\n\nTITLE: Displaying Solar CLI Help Information\nDESCRIPTION: Command to show the available options and commands in the Solar CLI by displaying the help information. Useful for exploring the tool's capabilities.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/solar/README.md#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nsolar -h\n```\n\n----------------------------------------\n\nTITLE: Running Common Cargo Commands for Solar Workspace\nDESCRIPTION: Examples of basic cargo commands that should be run with the --workspace flag to include all packages in the Solar repository. These commands check, lint, format, and test the codebase.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/CONTRIBUTING.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncargo check --workspace\ncargo clippy --workspace\ncargo fmt --all --check\ncargo test --workspace\n```\n\n----------------------------------------\n\nTITLE: Running Tests with cargo-nextest for Better Performance\nDESCRIPTION: Instructions for installing and using cargo-nextest, a faster test runner for Rust projects. This is recommended over standard cargo test for the Solar project.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/CONTRIBUTING.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncargo install --locked cargo-nextest\ncargo nextest run --workspace\n```\n\n----------------------------------------\n\nTITLE: Building Documentation with docs.rs Features\nDESCRIPTION: Command for generating documentation that matches what will appear on docs.rs, including feature flags and proper conditional compilation indicators.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/CONTRIBUTING.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nRUSTDOCFLAGS=\"--cfg docsrs\" cargo +nightly doc --workspace --no-deps --all-features [--open]\n```\n\n----------------------------------------\n\nTITLE: Using cargo-docs-rs for Documentation Building\nDESCRIPTION: A more concise approach to building docs.rs-equivalent documentation using the cargo-docs-rs tool, which reads documentation flags from Solar's Cargo.toml.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/CONTRIBUTING.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncargo install --locked cargo-docs-rs\ncargo +nightly docs-rs -p solar-compiler [--open]\n```\n\n----------------------------------------\n\nTITLE: Running Spellcheck on Solar Codebase\nDESCRIPTION: Instructions for installing and using typos-cli to perform spellchecking on the Solar codebase. This helps maintain consistent spelling throughout the project.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/CONTRIBUTING.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncargo install --locked typos-cli\ntypos\n```\n\n----------------------------------------\n\nTITLE: Writing UI Integration Tests in Solar\nDESCRIPTION: Example of how to write a UI integration test for the Solar compiler using annotations to specify expected compiler output, error messages, and compiler flags.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/CONTRIBUTING.md#2025-04-16_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\n// Directives\n//@compile-flags: --flag\n\n// Annotations specify the errors that the compiler is expected to emit.\n// These are `//~`, one of HELP, NOTE, WARN, ERROR, and a colon (`:`),\n// followed by the expected message. The message can be a partial match.\n\nline with error //~ ERROR: error message\n\n// The annotation can be prefixed with any number of `^` or `v`\n// to point at the N'th line above or below respectively.\n\n//~vv ERROR: error message\n\nline with error\n\n// Diagnostics pointing to the same line should be grouped together using `|`.\n\nline with multiple errors\n//~^ ERROR: first error\n//~| ERROR: second error\n//~| ERROR: third error\n```\n\n----------------------------------------\n\nTITLE: Formatting Conventional Commits for Solar Project\nDESCRIPTION: Example of a properly formatted commit message following the Conventional Commits specification. It demonstrates the required structure with a subject line, detailed body with proper line wrapping, and issue references.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/CONTRIBUTING.md#2025-04-16_snippet_6\n\nLANGUAGE: txt\nCODE:\n```\nfeat(module): explain the commit in one line\n\nBody of commit message is a few lines of text, explaining things\nin more detail, possibly giving some background about the issue\nbeing fixed, etc.\n\nThe body of the commit message can be several paragraphs, and\nplease do proper word-wrap and keep columns shorter than about\n72 characters or so. That way, `git log` will show things\nnicely even when it is indented.\n\nFixes: #1337\nRefs: #453, #154\n```\n\n----------------------------------------\n\nTITLE: Installing Required Tools for Release Process\nDESCRIPTION: Commands for installing the necessary tools for the release process: cargo-release for version management, git-cliff for changelog generation, and cargo-dist for distribution.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/RELEASE_CHECKLIST.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncargo install cargo-release\n```\n\nLANGUAGE: shell\nCODE:\n```\ncargo install --git https://github.com/DaniPopes/git-cliff.git --branch fix-include-paths git-cliff\n```\n\nLANGUAGE: shell\nCODE:\n```\ncargo install cargo-dist\n```\n\n----------------------------------------\n\nTITLE: Executing Release Commands with cargo-release\nDESCRIPTION: Commands for performing the release process using cargo-release. First command bumps versions and generates changelog without publishing, while the second command tags and publishes to crates.io.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/RELEASE_CHECKLIST.md#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncargo release --execute --no-publish --no-tag --allow-branch=<branch> <version>\n```\n\nLANGUAGE: shell\nCODE:\n```\nNO_GIT_CLIFF=1 cargo release --execute [--no-verify] <version>\n```\n\n----------------------------------------\n\nTITLE: Git Operations for Release Preparation\nDESCRIPTION: Git commands for creating a release branch, pulling the latest changes, and verifying the distribution plan before finalizing the release.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/RELEASE_CHECKLIST.md#2025-04-16_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout -b release-<version>\n```\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout main\n```\n\nLANGUAGE: shell\nCODE:\n```\ngit pull\n```\n\n----------------------------------------\n\nTITLE: Introduction to the solar-interface Module\nDESCRIPTION: This snippet provides an overview of the solar-interface module, explaining the core concepts and components. It introduces spans, source maps, and interned symbols as the key elements of the module.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/interface/README.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# solar-interface\n\nSource positions, diagnostics, and related helper functions.\n\nImportant concepts in this module include:\n\n- the *span*, represented by [`Span`] and related types;\n- source code as represented by a [`SourceMap`]; and\n- interned strings, represented by [`Symbol`]s, with some common symbols available statically in\n  the [`sym`] module.\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Documentation\nDESCRIPTION: A structured changelog file documenting version history, bug fixes, features, and other changes for the Solar project. Follows conventional changelog formatting with version tags, categories, and issue references.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/interface/CHANGELOG.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [0.1.2](https://github.com/paradigmxyz/solar/releases/tag/v0.1.2)\n\n### Bug Fixes\n\n- Dedup resolved files ([#246](https://github.com/paradigmxyz/solar/issues/246))\n- Panic in multiline diagnostics ([#193](https://github.com/paradigmxyz/solar/issues/193))\n\n### Features\n\n- Align input options with solc, implement remapping context ([#238](https://github.com/paradigmxyz/solar/issues/238))\n- Refactor FileResolver to allow custom current_dir ([#235](https://github.com/paradigmxyz/solar/issues/235))\n- Improve SourceMap helpers for Span to source ([#233](https://github.com/paradigmxyz/solar/issues/233))\n- Parse storage layout specifiers ([#232](https://github.com/paradigmxyz/solar/issues/232))\n- Make current_dir configurable ([#231](https://github.com/paradigmxyz/solar/issues/231))\n- Saner defaults for single threaded targets ([#212](https://github.com/paradigmxyz/solar/issues/212))\n- Implement minimal HIR visitor ([#195](https://github.com/paradigmxyz/solar/issues/195))\n\n### Miscellaneous Tasks\n\n- Make SilentEmitter wrap DynEmitter ([#199](https://github.com/paradigmxyz/solar/issues/199))\n- Shorten Diagnostic* to Diag ([#184](https://github.com/paradigmxyz/solar/issues/184))\n\n## [0.1.1](https://github.com/paradigmxyz/solar/releases/tag/v0.1.1)\n\n### Bug Fixes\n\n- Add Session::enter_parallel ([#183](https://github.com/paradigmxyz/solar/issues/183))\n- [parser] Accept leading dot in literals ([#151](https://github.com/paradigmxyz/solar/issues/151))\n- Properly handle recursive types ([#133](https://github.com/paradigmxyz/solar/issues/133))\n- Install rayon pool in Session::enter ([#123](https://github.com/paradigmxyz/solar/issues/123))\n\n### Dependencies\n\n- Update dependencies ([#161](https://github.com/paradigmxyz/solar/issues/161))\n\n### Documentation\n\n- Fix typos\n- Add some more docs to Session ([#155](https://github.com/paradigmxyz/solar/issues/155))\n- Add icons ([#109](https://github.com/paradigmxyz/solar/issues/109))\n\n### Features\n\n- Add some more Span utils ([#179](https://github.com/paradigmxyz/solar/issues/179))\n- Unify CLI and Session options ([#176](https://github.com/paradigmxyz/solar/issues/176))\n- Add more methods to index types ([#156](https://github.com/paradigmxyz/solar/issues/156))\n- Update to Rust 1.83 ([#150](https://github.com/paradigmxyz/solar/issues/150))\n- Add some FileName functions ([#143](https://github.com/paradigmxyz/solar/issues/143))\n- Print AST statistics with -Zast-stats flag ([#125](https://github.com/paradigmxyz/solar/issues/125))\n\n### Miscellaneous Tasks\n\n- Extend rayon threadpool comment ([#138](https://github.com/paradigmxyz/solar/issues/138))\n- Remove Pos trait ([#137](https://github.com/paradigmxyz/solar/issues/137))\n\n### Testing\n\n- Add a test for SessionGlobals + Session::enter ([#142](https://github.com/paradigmxyz/solar/issues/142))\n- Add another Session test ([#134](https://github.com/paradigmxyz/solar/issues/134))\n\n## [0.1.0](https://github.com/paradigmxyz/solar/releases/tag/v0.1.0)\n\nInitial release.\n\n<!-- generated by git-cliff -->\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog for Solar Project\nDESCRIPTION: A structured changelog following the Keep a Changelog format and adhering to Semantic Versioning. It details changes for versions 0.1.2, 0.1.1, and 0.1.0 of the Solar project.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/parse/CHANGELOG.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [0.1.2](https://github.com/paradigmxyz/solar/releases/tag/v0.1.2)\n\n### Bug Fixes\n\n- [parser] Glob imports require an alias ([#245](https://github.com/paradigmxyz/solar/issues/245))\n- Correctly resolve try/catch scopes ([#200](https://github.com/paradigmxyz/solar/issues/200))\n\n### Features\n\n- Refactor FileResolver to allow custom current_dir ([#235](https://github.com/paradigmxyz/solar/issues/235))\n- Parse storage layout specifiers ([#232](https://github.com/paradigmxyz/solar/issues/232))\n\n### Miscellaneous Tasks\n\n- Shorten Diagnostic* to Diag ([#184](https://github.com/paradigmxyz/solar/issues/184))\n\n### Performance\n\n- Make Token implement Copy ([#241](https://github.com/paradigmxyz/solar/issues/241))\n\n## [0.1.1](https://github.com/paradigmxyz/solar/releases/tag/v0.1.1)\n\n### Bug Fixes\n\n- Add Session::enter_parallel ([#183](https://github.com/paradigmxyz/solar/issues/183))\n- [parser] Accept leading dot in literals ([#151](https://github.com/paradigmxyz/solar/issues/151))\n- [parser] Span of partially-parsed expressions ([#139](https://github.com/paradigmxyz/solar/issues/139))\n- [parser] Ignore more doc comments ([#136](https://github.com/paradigmxyz/solar/issues/136))\n\n### Documentation\n\n- Add icons ([#109](https://github.com/paradigmxyz/solar/issues/109))\n\n### Features\n\n- Add some more Span utils ([#179](https://github.com/paradigmxyz/solar/issues/179))\n- [parser] Allow doc-comments anywhere ([#154](https://github.com/paradigmxyz/solar/issues/154))\n- Validate variable data locations ([#149](https://github.com/paradigmxyz/solar/issues/149))\n- [parser] Recover old-style fallbacks ([#135](https://github.com/paradigmxyz/solar/issues/135))\n- Make parse_semver_req public ([#114](https://github.com/paradigmxyz/solar/issues/114))\n\n### Miscellaneous Tasks\n\n- Remove Pos trait ([#137](https://github.com/paradigmxyz/solar/issues/137))\n\n### Other\n\n- Validate num. variants in enum declaration ([#120](https://github.com/paradigmxyz/solar/issues/120))\n- Better error for struct without any fields ([#121](https://github.com/paradigmxyz/solar/issues/121))\n\n### Refactor\n\n- Re-export ast::* internal module ([#141](https://github.com/paradigmxyz/solar/issues/141))\n\n## [0.1.0](https://github.com/paradigmxyz/solar/releases/tag/v0.1.0)\n\nInitial release.\n\n<!-- generated by git-cliff -->\n```\n\n----------------------------------------\n\nTITLE: Referencing the Source of Modified Data Structures from rustc_data_structures\nDESCRIPTION: A link to the original Rust compiler data structures repository from which Solar's data structures were modified.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/data-structures/README.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[`rustc_data_structures`](https://github.com/rust-lang/rust/blob/c1fc1d18cd38cab44696a9b0e0d52633863308fd/compiler/rustc_data_structures/src/lib.rs)\n```\n\n----------------------------------------\n\nTITLE: Internal Macros Documentation\nDESCRIPTION: Documentation header explaining that these are internal Solar compiler macros modified from rustc_macros and rustc_index_macros repositories.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/crates/macros/README.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# solar-macros\n\nInternal Solar compiler macros.\n\nModified from [`rustc_macros`](https://github.com/rust-lang/rust/blob/661b33f5247debc4e0cd948caa388997e18e9cb8/compiler/rustc_macros/src/lib.rs)\nand [`rustc_index_macros`](https://github.com/rust-lang/rust/blob/f1eee2843fd3e62c71d993f732082b28cb5b22a0/compiler/rustc_index_macros).\n```\n\n----------------------------------------\n\nTITLE: Running Solar Benchmark with Criterion and Processing Results\nDESCRIPTION: Command sequence for running the Solar benchmark using Criterion and processing the output with a Python script to generate formatted tables.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/benches/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Criterion\ncargo criterion -p solar-bench --bench criterion -- --quiet --format terse |& tee benches/tables.in\n./benches/tables.py ./benches/README.md < benches/tables.in\n```\n\n----------------------------------------\n\nTITLE: Running Solar Benchmark with IAI\nDESCRIPTION: Command for running the Solar benchmark using the IAI benchmarking tool, which requires valgrind and iai-callgrind-runner.\nSOURCE: https://github.com/paradigmxyz/solar/blob/main/benches/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# iai - requires `valgrind` and `iai-callgrind-runner`\ncargo bench -p solar-bench --bench iai\n```"
  }
]
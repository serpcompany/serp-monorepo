[
  {
    "owner": "horilla-opensource",
    "repo": "horilla",
    "content": "TITLE: Setting up Python virtual environment on Windows\nDESCRIPTION: Commands to create a virtual environment, activate it, and install dependencies for Horilla on Windows.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_10\n\nLANGUAGE: powershell\nCODE:\n```\npython -m venv horillavenv\n.\\horillavenv\\Scripts\\activate\n```\n\nLANGUAGE: powershell\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL installation and setup on Ubuntu\nDESCRIPTION: Commands to install, start, and configure PostgreSQL on Ubuntu, including creating a database and user for Horilla.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt update && sudo apt upgrade -y\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install postgresql postgresql-contrib -y\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl start postgresql\nsudo systemctl enable postgresql\n```\n\nLANGUAGE: bash\nCODE:\n```\npsql --version\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo su postgres\npsql\n```\n\nLANGUAGE: sql\nCODE:\n```\nCREATE ROLE horilla LOGIN PASSWORD 'horilla';\nCREATE DATABASE horilla_main OWNER horilla;\n\\q\n```\n\nLANGUAGE: bash\nCODE:\n```\nexit\n```\n\n----------------------------------------\n\nTITLE: Configuring environment variables for Horilla\nDESCRIPTION: Commands to rename and edit the environment file with necessary configuration values for the Horilla application.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nmv .env.dist .env\n```\n\nLANGUAGE: env\nCODE:\n```\nDEBUG=True\nTIME_ZONE=Asia/Kolkata\nSECRET_KEY=django-insecure-j8op9)1q8$1&@^s&p*_0%d#pr@w9qj@lo=3#@d=a(^@9@zd@%j\nALLOWED_HOSTS=www.example.com,example.com,*\nDB_INIT_PASSWORD=d3f6a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d\nDB_ENGINE=django.db.backends.postgresql\nDB_NAME=horilla_main\nDB_USER=horilla\nDB_PASSWORD=horilla\nDB_HOST=localhost\nDB_PORT=5432\n```\n\n----------------------------------------\n\nTITLE: Running Django migrations for Horilla on Ubuntu/macOS\nDESCRIPTION: Commands to make and apply database migrations for the Horilla project on Ubuntu or macOS.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\npython3 manage.py makemigrations\npython3 manage.py migrate\n```\n\n----------------------------------------\n\nTITLE: Setting up Python virtual environment on macOS\nDESCRIPTION: Commands to create a virtual environment, activate it, and install dependencies for Horilla on macOS.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m venv horillavenv\nsource horillavenv/bin/activate\n```\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Setting up Python virtual environment on Ubuntu\nDESCRIPTION: Commands to create a virtual environment, activate it, and install dependencies for Horilla on Ubuntu.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install python3-venv\n```\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m venv horillavenv\nsource horillavenv/bin/activate\n```\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Running Horilla on Ubuntu/macOS\nDESCRIPTION: Command to start the Django development server for Horilla on Ubuntu or macOS.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\npython3 manage.py runserver\n```\n\n----------------------------------------\n\nTITLE: Running Horilla on Windows\nDESCRIPTION: Command to start the Django development server for Horilla on Windows.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_18\n\nLANGUAGE: powershell\nCODE:\n```\npython manage.py runserver\n```\n\n----------------------------------------\n\nTITLE: Cloning Horilla repository on Windows\nDESCRIPTION: Git commands to initialize and clone the Horilla repository on Windows.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\ngit init\ngit remote add horilla https://horilla-opensource@github.com/horilla-opensource/horilla.git\ngit pull horilla master\n```\n\n----------------------------------------\n\nTITLE: Cloning Horilla repository on macOS\nDESCRIPTION: Git commands to initialize and clone the Horilla repository on macOS.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ngit init\ngit remote add horilla https://horilla-opensource@github.com/horilla-opensource/horilla.git\ngit pull horilla master\n```\n\n----------------------------------------\n\nTITLE: Cloning Horilla repository on Ubuntu\nDESCRIPTION: Git commands to initialize and clone the Horilla repository on Ubuntu.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsudo git init\nsudo git remote add horilla https://horilla-opensource@github.com/horilla-opensource/horilla.git\nsudo git pull horilla master\n```\n\n----------------------------------------\n\nTITLE: Running Django migrations for Horilla on Windows\nDESCRIPTION: Commands to make and apply database migrations for the Horilla project on Windows.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_14\n\nLANGUAGE: powershell\nCODE:\n```\npython manage.py makemigrations\npython manage.py migrate\n```\n\n----------------------------------------\n\nTITLE: Enabling translations for Horilla on Ubuntu/macOS\nDESCRIPTION: Command to compile message translations for the Horilla application on Ubuntu or macOS.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\npython3 manage.py compilemessages\n```\n\n----------------------------------------\n\nTITLE: Enabling translations for Horilla on Windows\nDESCRIPTION: Command to compile message translations for the Horilla application on Windows.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_16\n\nLANGUAGE: powershell\nCODE:\n```\npython manage.py compilemessages\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL configuration on Windows\nDESCRIPTION: Commands to access PostgreSQL and create a database and user for Horilla on Windows.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\npsql -U postgres\n```\n\nLANGUAGE: sql\nCODE:\n```\nCREATE ROLE horilla LOGIN PASSWORD 'horilla';\nCREATE DATABASE horilla_main OWNER horilla;\n\\q\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL configuration on macOS\nDESCRIPTION: Commands to install, start, and configure PostgreSQL on macOS using Homebrew.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbrew install postgresql\n```\n\nLANGUAGE: bash\nCODE:\n```\nbrew services start postgresql\n```\n\nLANGUAGE: bash\nCODE:\n```\npsql --version\n```\n\nLANGUAGE: bash\nCODE:\n```\ncreatedb horilla_main\ncreateuser horilla\npsql -c \"ALTER USER horilla WITH PASSWORD 'horilla';\"\n```\n\n----------------------------------------\n\nTITLE: Running Horilla on a custom port\nDESCRIPTION: Commands to run the Horilla application on a specified port instead of the default port 8000.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\npython3 manage.py runserver 8080  # For Ubuntu/macOS\npython manage.py runserver 8080   # For Windows\n```\n\n----------------------------------------\n\nTITLE: Running Horilla with Docker Compose\nDESCRIPTION: Command to build and start the Horilla application using Docker Compose. This will set up the entire application stack including the Python 3.10 application and PostgreSQL 16 database.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/docker.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up\n```\n\n----------------------------------------\n\nTITLE: Installing Python on Ubuntu\nDESCRIPTION: Commands to install and verify Python on Ubuntu operating system.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install python3\n```\n\nLANGUAGE: bash\nCODE:\n```\npython3 --version\n```\n\n----------------------------------------\n\nTITLE: Installing Python on Windows\nDESCRIPTION: Command to verify Python installation on Windows after downloading from the official website.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython3 --version\n```\n\n----------------------------------------\n\nTITLE: Installing Python on macOS using Homebrew\nDESCRIPTION: Commands to install Homebrew package manager and Python on macOS.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\nLANGUAGE: bash\nCODE:\n```\nbrew install python\n```\n\nLANGUAGE: bash\nCODE:\n```\npython3 --version\n```\n\n----------------------------------------\n\nTITLE: Cloning the Horilla Repository in Bash\nDESCRIPTION: Command to clone the forked Horilla repository to your local machine. This is the first step after forking the repository to start contributing to the project.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/your-username/Horilla.git\n```\n\n----------------------------------------\n\nTITLE: Creating a Feature Branch in Bash\nDESCRIPTION: Command to create a new branch for implementing a feature or fixing a bug in the Horilla project. This keeps your changes isolated from the main branch.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b feature-or-bugfix-branch\n```\n\n----------------------------------------\n\nTITLE: Committing Changes in Bash\nDESCRIPTION: Command to commit your code changes with a descriptive message. Clear commit messages help maintainers understand the purpose of your contribution.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -m \"Add feature X\"\n```\n\n----------------------------------------\n\nTITLE: Pushing Changes to GitHub in Bash\nDESCRIPTION: Command to push your local branch and commits to your forked repository on GitHub. This makes your changes available online for creating a pull request.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit push origin feature-or-bugfix-branch\n```\n\n----------------------------------------\n\nTITLE: Installing Ionicons Web Component\nDESCRIPTION: This snippet shows how to include the Ionicons web component in your HTML page. The script should be placed near the end of your page, just before the closing body tag.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/images/ionicons/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/ionicons@latest/dist/ionicons.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Using Basic Ionicons\nDESCRIPTION: This example demonstrates how to use a built-in icon from the Ionicons package by populating the name attribute on the ion-icon component.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/images/ionicons/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<ion-icon name=\"heart\"></ion-icon>\n```\n\n----------------------------------------\n\nTITLE: Using Ionicons Variants\nDESCRIPTION: This example demonstrates how to use the different variants of Ionicons - filled (default), outline, and sharp. Each provides a different visual style for the same icon.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/images/ionicons/readme.md#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<ion-icon name=\"heart\"></ion-icon> <!--filled-->\n<ion-icon name=\"heart-outline\"></ion-icon> <!--outline-->\n<ion-icon name=\"heart-sharp\"></ion-icon> <!--sharp-->\n```\n\n----------------------------------------\n\nTITLE: Using Custom SVG Icons\nDESCRIPTION: This snippet shows how to use a custom SVG icon by providing its URL in the src attribute. The external file must be a valid SVG and cannot contain scripts or events.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/images/ionicons/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ion-icon src=\"/path/to/external/file.svg\"></ion-icon>\n```\n\n----------------------------------------\n\nTITLE: Sizing Ionicons with Predefined Sizes\nDESCRIPTION: This example shows how to use predefined sizes for Ionicons by using the size attribute with values like 'small' or 'large'.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/images/ionicons/readme.md#2025-04-23_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<ion-icon size=\"small\"></ion-icon>\n<ion-icon size=\"large\"></ion-icon>\n```\n\n----------------------------------------\n\nTITLE: Sizing Ionicons with CSS\nDESCRIPTION: This snippet demonstrates how to set a specific size for Ionicons using the font-size CSS property. It's recommended to use pixel sizes that are multiples of 8.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/images/ionicons/readme.md#2025-04-23_snippet_6\n\nLANGUAGE: css\nCODE:\n```\nion-icon {\n  font-size: 64px;\n}\n```\n\n----------------------------------------\n\nTITLE: Coloring Ionicons with CSS\nDESCRIPTION: This example shows how to specify the icon color by applying the color CSS property to the ion-icon component.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/images/ionicons/readme.md#2025-04-23_snippet_7\n\nLANGUAGE: css\nCODE:\n```\nion-icon {\n  color: blue;\n}\n```\n\n----------------------------------------\n\nTITLE: Platform-Specific Ionicons\nDESCRIPTION: This snippet shows how to specify different icons per platform when using Ionic Framework. The ios and md attributes allow you to provide platform-specific icon variants.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/images/ionicons/readme.md#2025-04-23_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<ion-icon ios=\"heart-outline\" md=\"heart-sharp\"></ion-icon>\n```\n\n----------------------------------------\n\nTITLE: Using Outline Icons with Custom Stroke Width\nDESCRIPTION: This snippet demonstrates how to use outline variant icons with a custom stroke width using the --ionicon-stroke-width CSS custom property for better visual balance.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/images/ionicons/readme.md#2025-04-23_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<ion-icon name=\"heart-outline\"></ion-icon>\n```\n\nLANGUAGE: css\nCODE:\n```\nion-icon {\n  --ionicon-stroke-width: 16px;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Stencil Component in TypeScript with JSX\nDESCRIPTION: This example demonstrates how to create a Stencil component using TypeScript and JSX syntax. The component uses decorators like @Component and @Prop, defines properties, and includes a render method that returns JSX markup.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/build/vendor/ionicons/@stencil/core/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'my-component',            // the name of the component's custom HTML tag\n  styleUrl: 'my-component.css',   // css styles to apply to the component\n  shadow: true,                   // this component uses the ShadowDOM\n})\nexport class MyComponent {\n  // The component accepts two arguments:\n  @Prop() first: string;\n  @Prop() last: string;\n\n   //The following HTML is rendered when our component is used\n  render() {\n    return (\n      <div>\n        Hello, my name is {this.first} {this.last}\n      </div>\n    );\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Stencil Components in HTML\nDESCRIPTION: This snippet shows how to use a Stencil-generated web component in HTML markup. It demonstrates passing properties to the component using HTML attributes.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/build/vendor/ionicons/@stencil/core/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<my-component first=\"Stencil\" last=\"JS\"></my-component>\n```\n\n----------------------------------------\n\nTITLE: Optimizing with Prefetch Related in Python ORM\nDESCRIPTION: This code shows how to optimize database access by using the prefetch_related technique, which performs a separate lookup for each relationship and joins them in Python. This reduces the number of database queries needed.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/helpdesk/templates/search/indexes/helpdesk/faq_text.txt#2025-04-23_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n# Fetch all books and prefetch their authors\nbooks = Book.objects.prefetch_related('author').all()\n\n# Accessing the author doesn't trigger additional queries\nfor book in books:\n    author = book.author  # No additional query\n```\n\n----------------------------------------\n\nTITLE: Using Bulk Operations in Python ORM\nDESCRIPTION: This code demonstrates how to use bulk create operations to efficiently insert multiple records in a single database query, which is significantly more efficient than creating records one at a time.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/helpdesk/templates/search/indexes/helpdesk/faq_text.txt#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n# Instead of this (N queries):\nfor i in range(1000):\n    Book.objects.create(title=f\"Book {i}\", author=some_author)\n\n# Do this (1 query):\nbooks_to_create = [Book(title=f\"Book {i}\", author=some_author) for i in range(1000)]\nBook.objects.bulk_create(books_to_create)\n```\n\n----------------------------------------\n\nTITLE: SQL JOIN Example for Efficient Data Retrieval\nDESCRIPTION: This SQL query demonstrates how to use JOIN operations to fetch related data in a single query, which is more efficient than retrieving the primary records first and then making separate queries for related data.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/helpdesk/templates/search/indexes/helpdesk/faq_text.txt#2025-04-23_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nSELECT books.title, authors.name\nFROM books\nJOIN authors ON books.author_id = authors.id\nWHERE books.published_year > 2000;\n```\n\n----------------------------------------\n\nTITLE: Executing the N+1 Query Problem in Python ORM\nDESCRIPTION: This code demonstrates the N+1 query anti-pattern, where an initial query fetches N rows, and then N additional queries are executed to fetch related data. This pattern can severely impact performance in database applications.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/helpdesk/templates/search/indexes/helpdesk/faq_text.txt#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n# Fetch all books\nbooks = Book.objects.all()\n\n# For each book, fetch its author (N additional queries)\nfor book in books:\n    author = book.author  # This triggers an additional query\n```\n\n----------------------------------------\n\nTITLE: Organizing Page-Specific Styles in Sass Project Structure\nDESCRIPTION: Demonstrates the recommended file structure for page-specific styles in a Sass project, using the home page as an example. This structure helps keep page-specific styling isolated and maintainable.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/src/scss/pages/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Pages\n\nIf you have page-specific styles, it is better to put them in a `pages/` folder, in a file named after the page. For instance, it's not uncommon to have very specific styles for the home page hence the need for a `_home.scss` file in `pages/`.\n\n*Note — Depending on your deployment process, these files could be called on their own to avoid merging them with the others in the resulting stylesheet. It is really up to you.*\n\nReference: [Sass Guidelines](https://sass-guidelin.es/) > [Architecture](https://sass-guidelin.es/#architecture) > [Pages folder](https://sass-guidelin.es/#pages-folder)\n```\n\n----------------------------------------\n\nTITLE: Theme Folder Structure Description in Markdown\nDESCRIPTION: Description of the approach for organizing themes in a dedicated 'themes/' folder for large websites and applications. This is noted as being project-specific and may not be applicable to many projects.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/src/scss/themes/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Theme\n\nOn large sites and applications, it is not unusual to have different themes. There are certainly different ways of dealing with themes but I personally like having them all in a `themes/` folder.\n\n*Note — This is very project-specific and is likely to be non-existent on many projects.*\n\nReference: [Sass Guidelines](https://sass-guidelin.es/) > [Architecture](https://sass-guidelin.es/#architecture) > [Themes folder](https://sass-guidelin.es/#themes-folder)\n```\n\n----------------------------------------\n\nTITLE: Referencing SASS Base Directory Structure\nDESCRIPTION: Description of the base/ directory which contains boilerplate code, typography rules, and _base.scss file with standard HTML element styles.\nSOURCE: https://github.com/horilla-opensource/horilla/blob/master/static/src/scss/base/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nbase/\n  _base.scss\n  _typography.scss\n```"
  }
]
[
  {
    "owner": "aider-ai",
    "repo": "aider",
    "content": "TITLE: Paddle and Ball Classes in Python\nDESCRIPTION: This snippet defines the Paddle and Ball classes as Pygame sprites. The Paddle class handles movement, and the Ball class handles updating position, collision with top/bottom, and resetting after scoring. It introduces random ball direction upon initialization and defines collision behavior with paddles.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/pong.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport pygame\nimport sys\nimport random\n\n# Initialize Pygame\npygame.init()\n\n# Set up the game window\nscreen_width = 640\nscreen_height = 480\nscreen = pygame.display.set_mode((screen_width, screen_height))\npygame.display.set_caption(\"Pong\")\n\n# Paddle and Ball classes\nclass Paddle(pygame.sprite.Sprite):\n    def __init__(self, x, y):\n        super().__init__()\n        self.width = 10\n        self.height = 60\n        self.image = pygame.Surface((self.width, self.height))\n        self.image.fill((255, 255, 255))\n        self.rect = self.image.get_rect()\n        self.rect.x = x\n        self.rect.y = y\n\n    def move(self, dy):\n        if self.rect.y + dy >= 0 and self.rect.y + dy <= screen_height - self.height:\n            self.rect.y += dy\n\nclass Ball(pygame.sprite.Sprite):\n    def __init__(self):\n        super().__init__()\n        self.width = 10\n        self.height = 10\n        self.image = pygame.Surface((self.width, self.height))\n        self.image.fill((255, 255, 255))\n        self.rect = self.image.get_rect()\n        self.rect.x = screen_width // 2 - self.width // 2\n        self.rect.y = screen_height // 2 - self.height // 2\n        self.dx = random.choice([-1, 1]) * 4\n        self.dy = random.choice([-1, 1]) * 4\n\n    def update(self):\n        self.rect.x += self.dx\n        self.rect.y += self.dy\n\n        # Collision with top and bottom\n        if self.rect.y <= 0 or self.rect.y >= screen_height - self.height:\n            self.dy = -self.dy\n\n        # Scoring\n        if self.rect.x <= 0 or self.rect.x >= screen_width - self.width:\n            self.reset()\n\n    def reset(self):\n        self.rect.x = screen_width // 2 - self.width // 2\n        self.rect.y = screen_height // 2 - self.height // 2\n        self.dx = random.choice([-1, 1]) * 4\n        self.dy = random.choice([-1, 1]) * 4\n\n    def collide_with(self, paddle):\n        if self.rect.colliderect(paddle.rect):\n            self.dx = -self.dx\n```\n\n----------------------------------------\n\nTITLE: Sample .env Configuration File for Aider\nDESCRIPTION: A comprehensive sample .env file that can be used to configure Aider. It includes sections for LLM parameters, API keys, model settings, cache settings, repository mapping, history files, output settings, Git configurations, and more. Each option is documented with comments explaining its purpose and default values.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/dotenv.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n##########################################################\n# Sample aider .env file.\n# Place at the root of your git repo.\n# Or use `aider --env <fname>` to specify.\n##########################################################\n\n#################\n# LLM parameters:\n#\n# Include xxx_API_KEY parameters and other params needed for your LLMs.\n# See https://aider.chat/docs/llms.html for details.\n\n## OpenAI\n#OPENAI_API_KEY=\n\n## Anthropic\n#ANTHROPIC_API_KEY=\n\n##...\n\n#############\n# Main model:\n\n## Specify the model to use for the main chat\n#AIDER_MODEL=\n\n########################\n# API Keys and settings:\n\n## Specify the OpenAI API key\n#AIDER_OPENAI_API_KEY=\n\n## Specify the Anthropic API key\n#AIDER_ANTHROPIC_API_KEY=\n\n## Specify the api base url\n#AIDER_OPENAI_API_BASE=\n\n## (deprecated, use --set-env OPENAI_API_TYPE=<value>)\n#AIDER_OPENAI_API_TYPE=\n\n## (deprecated, use --set-env OPENAI_API_VERSION=<value>)\n#AIDER_OPENAI_API_VERSION=\n\n## (deprecated, use --set-env OPENAI_API_DEPLOYMENT_ID=<value>)\n#AIDER_OPENAI_API_DEPLOYMENT_ID=\n\n## (deprecated, use --set-env OPENAI_ORGANIZATION=<value>)\n#AIDER_OPENAI_ORGANIZATION_ID=\n\n## Set an environment variable (to control API settings, can be used multiple times)\n#AIDER_SET_ENV=\n\n## Set an API key for a provider (eg: --api-key provider=<key> sets PROVIDER_API_KEY=<key>)\n#AIDER_API_KEY=\n\n#################\n# Model settings:\n\n## List known models which match the (partial) MODEL name\n#AIDER_LIST_MODELS=\n\n## Specify a file with aider model settings for unknown models\n#AIDER_MODEL_SETTINGS_FILE=.aider.model.settings.yml\n\n## Specify a file with context window and costs for unknown models\n#AIDER_MODEL_METADATA_FILE=.aider.model.metadata.json\n\n## Add a model alias (can be used multiple times)\n#AIDER_ALIAS=\n\n## Set the reasoning_effort API parameter (default: not set)\n#AIDER_REASONING_EFFORT=\n\n## Set the thinking token budget for models that support it (default: not set)\n#AIDER_THINKING_TOKENS=\n\n## Verify the SSL cert when connecting to models (default: True)\n#AIDER_VERIFY_SSL=true\n\n## Timeout in seconds for API calls (default: None)\n#AIDER_TIMEOUT=\n\n## Specify what edit format the LLM should use (default depends on model)\n#AIDER_EDIT_FORMAT=\n\n## Use architect edit format for the main chat\n#AIDER_ARCHITECT=\n\n## Enable/disable automatic acceptance of architect changes (default: True)\n#AIDER_AUTO_ACCEPT_ARCHITECT=true\n\n## Specify the model to use for commit messages and chat history summarization (default depends on --model)\n#AIDER_WEAK_MODEL=\n\n## Specify the model to use for editor tasks (default depends on --model)\n#AIDER_EDITOR_MODEL=\n\n## Specify the edit format for the editor model (default: depends on editor model)\n#AIDER_EDITOR_EDIT_FORMAT=\n\n## Only work with models that have meta-data available (default: True)\n#AIDER_SHOW_MODEL_WARNINGS=true\n\n## Check if model accepts settings like reasoning_effort/thinking_tokens (default: True)\n#AIDER_CHECK_MODEL_ACCEPTS_SETTINGS=true\n\n## Soft limit on tokens for chat history, after which summarization begins. If unspecified, defaults to the model's max_chat_history_tokens.\n#AIDER_MAX_CHAT_HISTORY_TOKENS=\n\n#################\n# Cache settings:\n\n## Enable caching of prompts (default: False)\n#AIDER_CACHE_PROMPTS=false\n\n## Number of times to ping at 5min intervals to keep prompt cache warm (default: 0)\n#AIDER_CACHE_KEEPALIVE_PINGS=false\n\n###################\n# Repomap settings:\n\n## Suggested number of tokens to use for repo map, use 0 to disable\n#AIDER_MAP_TOKENS=\n\n## Control how often the repo map is refreshed. Options: auto, always, files, manual (default: auto)\n#AIDER_MAP_REFRESH=auto\n\n## Multiplier for map tokens when no files are specified (default: 2)\n#AIDER_MAP_MULTIPLIER_NO_FILES=true\n\n################\n# History Files:\n\n## Specify the chat input history file (default: .aider.input.history)\n#AIDER_INPUT_HISTORY_FILE=.aider.input.history\n\n## Specify the chat history file (default: .aider.chat.history.md)\n#AIDER_CHAT_HISTORY_FILE=.aider.chat.history.md\n\n## Restore the previous chat history messages (default: False)\n#AIDER_RESTORE_CHAT_HISTORY=false\n\n## Log the conversation with the LLM to this file (for example, .aider.llm.history)\n#AIDER_LLM_HISTORY_FILE=\n\n##################\n# Output settings:\n\n## Use colors suitable for a dark terminal background (default: False)\n#AIDER_DARK_MODE=false\n\n## Use colors suitable for a light terminal background (default: False)\n#AIDER_LIGHT_MODE=false\n\n## Enable/disable pretty, colorized output (default: True)\n#AIDER_PRETTY=true\n\n## Enable/disable streaming responses (default: True)\n#AIDER_STREAM=true\n\n## Set the color for user input (default: #00cc00)\n#AIDER_USER_INPUT_COLOR=#00cc00\n\n## Set the color for tool output (default: None)\n#AIDER_TOOL_OUTPUT_COLOR=\n\n## Set the color for tool error messages (default: #FF2222)\n#AIDER_TOOL_ERROR_COLOR=#FF2222\n\n## Set the color for tool warning messages (default: #FFA500)\n#AIDER_TOOL_WARNING_COLOR=#FFA500\n\n## Set the color for assistant output (default: #0088ff)\n#AIDER_ASSISTANT_OUTPUT_COLOR=#0088ff\n\n## Set the color for the completion menu (default: terminal's default text color)\n#AIDER_COMPLETION_MENU_COLOR=\n\n## Set the background color for the completion menu (default: terminal's default background color)\n#AIDER_COMPLETION_MENU_BG_COLOR=\n\n## Set the color for the current item in the completion menu (default: terminal's default background color)\n#AIDER_COMPLETION_MENU_CURRENT_COLOR=\n\n## Set the background color for the current item in the completion menu (default: terminal's default text color)\n#AIDER_COMPLETION_MENU_CURRENT_BG_COLOR=\n\n## Set the markdown code theme (default: default, other options include monokai, solarized-dark, solarized-light, or a Pygments builtin style, see https://pygments.org/styles for available themes)\n#AIDER_CODE_THEME=default\n\n## Show diffs when committing changes (default: False)\n#AIDER_SHOW_DIFFS=false\n\n###############\n# Git settings:\n\n## Enable/disable looking for a git repo (default: True)\n#AIDER_GIT=true\n\n## Enable/disable adding .aider* to .gitignore (default: True)\n#AIDER_GITIGNORE=true\n\n## Specify the aider ignore file (default: .aiderignore in git root)\n#AIDER_AIDERIGNORE=.aiderignore\n\n## Only consider files in the current subtree of the git repository\n#AIDER_SUBTREE_ONLY=false\n\n## Enable/disable auto commit of LLM changes (default: True)\n#AIDER_AUTO_COMMITS=true\n\n## Enable/disable commits when repo is found dirty (default: True)\n#AIDER_DIRTY_COMMITS=true\n\n## Attribute aider code changes in the git author name (default: True)\n#AIDER_ATTRIBUTE_AUTHOR=true\n\n## Attribute aider commits in the git committer name (default: True)\n#AIDER_ATTRIBUTE_COMMITTER=true\n\n## Prefix commit messages with 'aider: ' if aider authored the changes (default: False)\n#AIDER_ATTRIBUTE_COMMIT_MESSAGE_AUTHOR=false\n\n## Prefix all commit messages with 'aider: ' (default: False)\n#AIDER_ATTRIBUTE_COMMIT_MESSAGE_COMMITTER=false\n\n## Enable/disable git pre-commit hooks with --no-verify (default: False)\n#AIDER_GIT_COMMIT_VERIFY=false\n\n## Commit all pending changes with a suitable commit message, then exit\n#AIDER_COMMIT=false\n\n## Specify a custom prompt for generating commit messages\n#AIDER_COMMIT_PROMPT=\n\n## Perform a dry run without modifying files (default: False)\n#AIDER_DRY_RUN=false\n\n## Skip the sanity check for the git repository (default: False)\n#AIDER_SKIP_SANITY_CHECK_REPO=false\n\n## Enable/disable watching files for ai coding comments (default: False)\n#AIDER_WATCH_FILES=false\n\n########################\n# Fixing and committing:\n\n## Lint and fix provided files, or dirty files if none provided\n#AIDER_LINT=false\n\n## Specify lint commands to run for different languages, eg: \"python: flake8 --select=...\" (can be used multiple times)\n#AIDER_LINT_CMD=\n\n## Enable/disable automatic linting after changes (default: True)\n#AIDER_AUTO_LINT=true\n\n## Specify command to run tests\n#AIDER_TEST_CMD=\n\n## Enable/disable automatic testing after changes (default: False)\n#AIDER_AUTO_TEST=false\n\n## Run tests, fix problems found and then exit\n#AIDER_TEST=false\n\n############\n# Analytics:\n\n## Enable/disable analytics for current session (default: random)\n#AIDER_ANALYTICS=\n\n## Specify a file to log analytics events\n#AIDER_ANALYTICS_LOG=\n\n## Permanently disable analytics\n#AIDER_ANALYTICS_DISABLE=false\n\n############\n# Upgrading:\n\n## Check for updates and return status in the exit code\n#AIDER_JUST_CHECK_UPDATE=false\n\n## Check for new aider versions on launch\n#AIDER_CHECK_UPDATE=true\n\n## Show release notes on first run of new version (default: None, ask user)\n#AIDER_SHOW_RELEASE_NOTES=\n\n## Install the latest version from the main branch\n#AIDER_INSTALL_MAIN_BRANCH=false\n\n## Upgrade aider to the latest version from PyPI\n#AIDER_UPGRADE=false\n\n########\n# Modes:\n\n## Specify a single message to send the LLM, process reply then exit (disables chat mode)\n#AIDER_MESSAGE=\n\n## Specify a file containing the message to send the LLM, process reply, then exit (disables chat mode)\n#AIDER_MESSAGE_FILE=\n```\n\n----------------------------------------\n\nTITLE: Starting Aider for Specific Programming Tasks\nDESCRIPTION: This snippet shows the execution of Aider to create a program for calculating factorials. Aider is initialized with a set of configurations and ready to make the requested changes in the specified file. This requires Aider version 0.37.1-dev and a git repository available.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ aider factorial.py\n\nAider v0.37.1-dev\nModels: gpt-4o with diff edit format, weak model gpt-3.5-turbo\nGit repo: .git with 258 files\nRepo-map: using 1024 tokens\nUse /help to see in-chat commands, run with --help to see cmd line args\n───────────────────────────────────────────────────────────────────────\n> Make a program that asks for a number and prints its factorial\n```\n\n----------------------------------------\n\nTITLE: Configuring API Keys in YAML Config File for OpenAI and Anthropic\nDESCRIPTION: This YAML snippet shows how to set OpenAI and Anthropic API keys in the .aider.conf.yml configuration file. Each key is assigned to its respective configuration option.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/api-keys.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nopenai-api-key: <key>\nanthropic-api-key: <key>\n```\n\n----------------------------------------\n\nTITLE: Setting API Keys in .env File for Multiple Providers\nDESCRIPTION: This bash snippet demonstrates how to set API keys for multiple providers (Gemini, OpenRouter, DeepSeek) in a .env file. Each key is assigned to its respective environment variable.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/api-keys.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nGEMINI_API_KEY=foo\nOPENROUTER_API_KEY=bar\nDEEPSEEK_API_KEY=baz\n```\n\n----------------------------------------\n\nTITLE: Installing Aider AI Assistant using pip and aider-install\nDESCRIPTION: These commands install the Aider AI assistant tool. First, it uses pip to install the aider-install package, then runs the aider-install command which handles the complete installation of Aider.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/install.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython -m pip install aider-install\naider-install\n```\n\n----------------------------------------\n\nTITLE: Adding Fibonacci Sequence Endpoint\nDESCRIPTION: Creates an endpoint that calculates the Xth number in the Fibonacci sequence. Includes input validation and handles edge cases for the first two numbers in the sequence.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/hello-world-flask.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef fibonacci(n):\n    if n <= 0:\n        return \"Invalid input. Please enter a positive integer.\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 2):\n            a, b = b, a + b\n        return b\n\n@app.route('/fibonacci/<int:x>')\ndef fibonacci_x(x):\n    return str(fibonacci(x))\n\n@app.route('/hello')\ndef hello():\n    return \"Hello, World!\"\n```\n\n----------------------------------------\n\nTITLE: Installing and Using Aider with Architect Models\nDESCRIPTION: This shell snippet installs aider-chat and demonstrates how to use different Architect and Editor models. Required dependencies include a Python environment and API keys for either Anthropic or OpenAI. The same aider command is configured differently to employ various models, highlighting its flexibility. Expected input is a proper API key, and the output is the execution of aider with specified configurations.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-09-26-architect.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\npip install -U aider-chat\n\n# Change directory into a git repo\ncd /to/your/git/repo\n\n# Work with Claude 3.5 Sonnet as the Architect and Editor\nexport ANTHROPIC_API_KEY=your-key-goes-here\naider --sonnet --architect\n\n# Work with OpenAI models, using gpt-4o as the Editor\nexport OPENAI_API_KEY=your-key-goes-here\naider --4o --architect\naider --o1-mini --architect\naider --o1-preview --architect\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Aider with Different LLM Models\nDESCRIPTION: This code snippet demonstrates how to install Aider using pip and run it with different LLM models such as DeepSeek, Claude 3.7 Sonnet, and OpenAI's o3-mini. It includes steps to change to the project directory and specify API keys for each model.\nSOURCE: https://github.com/aider-ai/aider/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython -m pip install aider-install\naider-install\n\n# Change directory into your codebase\ncd /to/your/project\n\n# DeepSeek\naider --model deepseek --api-key deepseek=<key>\n\n# Claude 3.7 Sonnet\naider --model sonnet --api-key anthropic=<key>\n\n# o3-mini\naider --model o3-mini --api-key openai=<key>\n```\n\n----------------------------------------\n\nTITLE: Complete Aider YAML Configuration Template\nDESCRIPTION: Comprehensive sample configuration file showing all available configuration options with detailed comments\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/aider_conf.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n##########################################################\n# Sample .aider.conf.yml\n# This file lists *all* the valid configuration entries.\n# Place in your home dir, or at the root of your git repo.\n##########################################################\n\n# Note: You can only put OpenAI and Anthropic API keys in the yaml\n# config file. Keys for all APIs can be stored in a .env file\n# https://aider.chat/docs/config/dotenv.html\n\n##########\n# options:\n\n## show this help message and exit\n#help: xxx\n\n#############\n# Main model:\n\n## Specify the model to use for the main chat\n#model: xxx\n\n########################\n# API Keys and settings:\n\n## Specify the OpenAI API key\n#openai-api-key: xxx\n\n## Specify the Anthropic API key\n#anthropic-api-key: xxx\n\n## Specify the api base url\n#openai-api-base: xxx\n\n## (deprecated, use --set-env OPENAI_API_TYPE=<value>)\n#openai-api-type: xxx\n\n## (deprecated, use --set-env OPENAI_API_VERSION=<value>)\n#openai-api-version: xxx\n\n## (deprecated, use --set-env OPENAI_API_DEPLOYMENT_ID=<value>)\n#openai-api-deployment-id: xxx\n\n## (deprecated, use --set-env OPENAI_ORGANIZATION=<value>)\n#openai-organization-id: xxx\n\n## Set an environment variable (to control API settings, can be used multiple times)\n#set-env: xxx\n## Specify multiple values like this:\n#set-env:\n#  - xxx\n#  - yyy\n#  - zzz\n\n## Set an API key for a provider (eg: --api-key provider=<key> sets PROVIDER_API_KEY=<key>)\n#api-key: xxx\n## Specify multiple values like this:\n#api-key:\n#  - xxx\n#  - yyy\n#  - zzz\n\n#################\n# Model settings:\n\n## List known models which match the (partial) MODEL name\n#list-models: xxx\n\n## Specify a file with aider model settings for unknown models\n#model-settings-file: .aider.model.settings.yml\n\n## Specify a file with context window and costs for unknown models\n#model-metadata-file: .aider.model.metadata.json\n\n## Add a model alias (can be used multiple times)\n#alias: xxx\n## Specify multiple values like this:\n#alias:\n#  - xxx\n#  - yyy\n#  - zzz\n\n## Set the reasoning_effort API parameter (default: not set)\n#reasoning-effort: xxx\n\n## Set the thinking token budget for models that support it (default: not set)\n#thinking-tokens: xxx\n\n## Verify the SSL cert when connecting to models (default: True)\n#verify-ssl: true\n\n## Timeout in seconds for API calls (default: None)\n#timeout: xxx\n\n## Specify what edit format the LLM should use (default depends on model)\n#edit-format: xxx\n\n## Use architect edit format for the main chat\n#architect: false\n\n## Enable/disable automatic acceptance of architect changes (default: True)\n#auto-accept-architect: true\n\n## Specify the model to use for commit messages and chat history summarization (default depends on --model)\n#weak-model: xxx\n\n## Specify the model to use for editor tasks (default depends on --model)\n#editor-model: xxx\n\n## Specify the edit format for the editor model (default: depends on editor model)\n#editor-edit-format: xxx\n\n## Only work with models that have meta-data available (default: True)\n#show-model-warnings: true\n\n## Check if model accepts settings like reasoning_effort/thinking_tokens (default: True)\n#check-model-accepts-settings: true\n\n## Soft limit on tokens for chat history, after which summarization begins. If unspecified, defaults to the model's max_chat_history_tokens.\n#max-chat-history-tokens: xxx\n\n#################\n# Cache settings:\n\n## Enable caching of prompts (default: False)\n#cache-prompts: false\n\n## Number of times to ping at 5min intervals to keep prompt cache warm (default: 0)\n#cache-keepalive-pings: false\n\n###################\n# Repomap settings:\n\n## Suggested number of tokens to use for repo map, use 0 to disable\n#map-tokens: xxx\n\n## Control how often the repo map is refreshed. Options: auto, always, files, manual (default: auto)\n#map-refresh: auto\n\n## Multiplier for map tokens when no files are specified (default: 2)\n#map-multiplier-no-files: true\n\n################\n# History Files:\n\n## Specify the chat input history file (default: .aider.input.history)\n#input-history-file: .aider.input.history\n\n## Specify the chat history file (default: .aider.chat.history.md)\n#chat-history-file: .aider.chat.history.md\n\n## Restore the previous chat history messages (default: False)\n#restore-chat-history: false\n\n## Log the conversation with the LLM to this file (for example, .aider.llm.history)\n#llm-history-file: xxx\n\n##################\n# Output settings:\n\n## Use colors suitable for a dark terminal background (default: False)\n#dark-mode: false\n\n## Use colors suitable for a light terminal background (default: False)\n#light-mode: false\n\n## Enable/disable pretty, colorized output (default: True)\n#pretty: true\n\n## Enable/disable streaming responses (default: True)\n#stream: true\n\n## Set the color for user input (default: #00cc00)\n#user-input-color: \"#00cc00\"\n\n## Set the color for tool output (default: None)\n#tool-output-color: \"xxx\"\n\n## Set the color for tool error messages (default: #FF2222)\n#tool-error-color: \"#FF2222\"\n\n## Set the color for tool warning messages (default: #FFA500)\n#tool-warning-color: \"#FFA500\"\n\n## Set the color for assistant output (default: #0088ff)\n#assistant-output-color: \"#0088ff\"\n\n## Set the color for the completion menu (default: terminal's default text color)\n#completion-menu-color: \"xxx\"\n\n## Set the background color for the completion menu (default: terminal's default background color)\n#completion-menu-bg-color: \"xxx\"\n\n## Set the color for the current item in the completion menu (default: terminal's default background color)\n#completion-menu-current-color: \"xxx\"\n\n## Set the background color for the current item in the completion menu (default: terminal's default text color)\n#completion-menu-current-bg-color: \"xxx\"\n\n## Set the markdown code theme (default: default, other options include monokai, solarized-dark, solarized-light, or a Pygments builtin style, see https://pygments.org/styles for available themes)\n#code-theme: default\n\n## Show diffs when committing changes (default: False)\n#show-diffs: false\n\n###############\n# Git settings:\n\n## Enable/disable looking for a git repo (default: True)\n#git: true\n\n## Enable/disable adding .aider* to .gitignore (default: True)\n#gitignore: true\n\n## Specify the aider ignore file (default: .aiderignore in git root)\n#aiderignore: .aiderignore\n\n## Only consider files in the current subtree of the git repository\n#subtree-only: false\n\n## Enable/disable auto commit of LLM changes (default: True)\n#auto-commits: true\n\n## Enable/disable commits when repo is found dirty (default: True)\n#dirty-commits: true\n\n## Attribute aider code changes in the git author name (default: True)\n#attribute-author: true\n\n## Attribute aider commits in the git committer name (default: True)\n#attribute-committer: true\n\n## Prefix commit messages with 'aider: ' if aider authored the changes (default: False)\n#attribute-commit-message-author: false\n\n## Prefix all commit messages with 'aider: ' (default: False)\n#attribute-commit-message-committer: false\n\n## Enable/disable git pre-commit hooks with --no-verify (default: False)\n#git-commit-verify: false\n\n## Commit all pending changes with a suitable commit message, then exit\n#commit: false\n\n## Specify a custom prompt for generating commit messages\n#commit-prompt: xxx\n\n## Perform a dry run without modifying files (default: False)\n#dry-run: false\n\n## Skip the sanity check for the git repository (default: False)\n#skip-sanity-check-repo: false\n\n## Enable/disable watching files for ai coding comments (default: False)\n#watch-files: false\n\n########################\n# Fixing and committing:\n\n## Lint and fix provided files, or dirty files if none provided\n#lint: false\n\n## Specify lint commands to run for different languages, eg: \"python: flake8 --select=...\" (can be used multiple times)\n#lint-cmd: xxx\n## Specify multiple values like this:\n#lint-cmd:\n#  - xxx\n#  - yyy\n#  - zzz\n\n## Enable/disable automatic linting after changes (default: True)\n#auto-lint: true\n\n## Specify command to run tests\n#test-cmd: xxx\n\n## Enable/disable automatic testing after changes (default: False)\n#auto-test: false\n\n## Run tests, fix problems found and then exit\n#test: false\n\n############\n# Analytics:\n\n## Enable/disable analytics for current session (default: random)\n#analytics: xxx\n\n## Specify a file to log analytics events\n#analytics-log: xxx\n\n## Permanently disable analytics\n#analytics-disable: false\n\n############\n# Upgrading:\n\n## Check for updates and return status in the exit code\n#just-check-update: false\n\n## Check for new aider versions on launch\n#check-update: true\n\n## Show release notes on first run of new version (default: None, ask user)\n#show-release-notes: xxx\n\n## Install the latest version from the main branch\n#install-main-branch: false\n\n```\n\n----------------------------------------\n\nTITLE: Initializing Pygame and Game Loop in Python\nDESCRIPTION: This snippet initializes Pygame, sets up the game window, and creates a basic game loop. It imports the necessary libraries (pygame, sys) and handles the quit event. The code provides the foundation for the Pong game.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/pong.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport pygame\nimport sys\n\n# Initialize Pygame\npygame.init()\n\n# Set up the game window\nscreen_width = 640\nscreen_height = 480\nscreen = pygame.display.set_mode((screen_width, screen_height))\npygame.display.set_caption(\"Pong\")\n\n# Game loop\nrunning = True\nwhile running:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\n\n    # Update game objects\n\n    # Draw game objects\n\n    # Update the display\n    pygame.display.flip()\n\n# Quit Pygame\npygame.quit()\nsys.exit()\n```\n\n----------------------------------------\n\nTITLE: Setting OpenAI API Key Environment Variables\nDESCRIPTION: Commands to set up the OPENAI_API_KEY environment variable in different operating systems. For Mac/Linux using export command and for Windows using setx command.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/openai.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENAI_API_KEY=<key> # Mac/Linux\nsetx   OPENAI_API_KEY <key> # Windows, restart shell after setx\n```\n\n----------------------------------------\n\nTITLE: Installing and Launching Aider Browser UI\nDESCRIPTION: This snippet shows how to install the latest version of Aider, set up the OpenAI API key, and launch Aider's browser UI. It includes commands for both Mac/Linux and Windows environments.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/browser.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython -m pip install -U aider-chat\n\nexport OPENAI_API_KEY=<key> # Mac/Linux\nsetx   OPENAI_API_KEY <key> # Windows, restart shell after setx\n\naider --browser\n```\n\n----------------------------------------\n\nTITLE: Defining Car Class - Python\nDESCRIPTION: The 'Car' class represents a car object with attributes for make, model, and year, and includes methods for car operations like accelerating and braking.\nSOURCE: https://github.com/aider-ai/aider/blob/main/tests/fixtures/sample-code-base-repo-map.txt#2025-04-21_snippet_7\n\nLANGUAGE: Python\nCODE:\n```\nclass Car:\n    def __init__(self, make, model, year):\n        self.make = make\n        self.model = model\n        self.year = year\n    def accelerate(self, increment):\n\n    def brake(self, decrement):\n\n    def honk(self):\n```\n\n----------------------------------------\n\nTITLE: Running Aider with Source Files\nDESCRIPTION: This shell command demonstrates how to start the Aider application with specified source code files. These files are 'added to the chat session' for AI-assisted editing. This use of Aider does not require any specific dependencies aside from having Aider installed.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\naider <file1> <file2> ...\n```\n\n----------------------------------------\n\nTITLE: Running Aider with Different OpenAI Models\nDESCRIPTION: Commands showing how to use aider with various OpenAI models, including o3-mini, o1-mini, gpt-4o, and how to list available OpenAI models.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/openai.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\n# o3-mini\naider --model o3-mini\n\n# o1-mini\naider --model o1-mini\n\n# GPT-4o\naider --model gpt-4o\n\n# List models available from OpenAI\naider --list-models openai/\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Flask Hello World Endpoint\nDESCRIPTION: Initial setup of a Flask application with a simple /hello endpoint that returns 'Hello, World!'. Requires Flask package to be installed via pip.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/hello-world-flask.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/hello')\ndef hello():\n    return \"Hello, World!\"\n\nif __name__ == '__main__':\n    app.run()\n```\n\n----------------------------------------\n\nTITLE: Installing and Using Claude 3 Opus with Aider CLI\nDESCRIPTION: Command-line instructions for installing the Aider chat tool, setting up the Anthropic API key, and launching Aider with the Claude 3 Opus model for pair programming with AI.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-03-08-claude-3.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython -m pip install -U aider-chat\nexport ANTHROPIC_API_KEY=sk-...\naider --opus\n```\n\n----------------------------------------\n\nTITLE: Filtering Even Numbers - JavaScript\nDESCRIPTION: The 'filterEvenNumbers' function filters out even numbers from an array, returning only odd numbers using the filter method.\nSOURCE: https://github.com/aider-ai/aider/blob/main/tests/fixtures/sample-code-base-repo-map.txt#2025-04-21_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction filterEvenNumbers(numbers) {\n    return numbers.filter(num => num % 2 !== 0);\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Aider Language Model and API Key\nDESCRIPTION: This code snippet configures the Aider tool to use specific language models like 'o3-mini' or 'Claude 3.7 Sonnet' by providing API keys. This configuration is crucial for specifying which AI model should be used during the session.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n# o3-mini\n$ aider --model o3-mini --api-key openai=<key>\n\n# Claude 3.7 Sonnet\n$ aider --model sonnet --api-key anthropic=<key>\n```\n\n----------------------------------------\n\nTITLE: Running Aider CLI with Different AI Models\nDESCRIPTION: Command line examples showing how to start Aider with different AI models including DeepSeek, Claude 3.7 Sonnet, and o3-mini. Each command requires navigating to the project directory and providing the appropriate API key.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/get-started.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\n# DeepSeek\naider --model deepseek --api-key deepseek=<key>\n\n# Claude 3.7 Sonnet\naider --model sonnet --api-key anthropic=<key>\n\n# o3-mini\naider --model o3-mini --api-key openai=<key>\n```\n\n----------------------------------------\n\nTITLE: Python Integration with Aider\nDESCRIPTION: Example of using Aider's Python API to programmatically modify files and execute commands. Shows initialization, file modification, and command execution.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/scripting.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom aider.coders import Coder\nfrom aider.models import Model\n\n# This is a list of files to add to the chat\nfnames = [\"greeting.py\"]\n\nmodel = Model(\"gpt-4-turbo\")\n\n# Create a coder object\ncoder = Coder.create(main_model=model, fnames=fnames)\n\n# This will execute one instruction on those files and then return\ncoder.run(\"make a script that prints hello world\")\n\n# Send another instruction\ncoder.run(\"make it say goodbye\")\n\n# You can run in-chat \"/\" commands too\ncoder.run(\"/tokens\")\n```\n\n----------------------------------------\n\nTITLE: Specifying Model and API Key for Aider CLI\nDESCRIPTION: These commands demonstrate how to use the Aider CLI with different LLM models and API providers. They show the syntax for specifying the model and providing the corresponding API key.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/troubleshooting/models-and-keys.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Work with DeepSeek via DeepSeek's API\naider --model deepseek --api-key deepseek=your-key-goes-here\n\n# Work with Claude 3.7 Sonnet via Anthropic's API\naider --model sonnet --api-key anthropic=your-key-goes-here\n\n# Work with o3-mini via OpenAI's API\naider --model o3-mini --api-key openai=your-key-goes-here\n\n# Work with Sonnet via OpenRouter's API\naider --model openrouter/anthropic/claude-3.7-sonnet --api-key openrouter=your-key-goes-here\n\n# Work with DeepSeek Chat V3 via OpenRouter's API\naider --model openrouter/deepseek/deepseek-chat --api-key openrouter=your-key-goes-here\n```\n\n----------------------------------------\n\nTITLE: Batch Processing with Aider CLI\nDESCRIPTION: Shell script for batch processing multiple Python files to add docstrings to all functions using Aider.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/scripting.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nfor FILE in *.py ; do\n    aider --message \"add descriptive docstrings to all the functions\" $FILE\ndone\n```\n\n----------------------------------------\n\nTITLE: Reversing a String - JavaScript\nDESCRIPTION: The 'reverseString' function takes a string as input and returns the string in reversed order using split, reverse, and join methods.\nSOURCE: https://github.com/aider-ai/aider/blob/main/tests/fixtures/sample-code-base-repo-map.txt#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction reverseString(str) {\n    return str.split('').reverse().join('');\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Aider on Mac & Linux using wget\nDESCRIPTION: An alternative one-liner bash command to install aider on Mac and Linux systems using wget. It's useful for systems without curl installed.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nwget -qO- https://aider.chat/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Setting API Keys in .env File for OpenAI and Anthropic\nDESCRIPTION: This snippet demonstrates how to set OpenAI and Anthropic API keys in a .env file. Each key is assigned to its respective environment variable.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/api-keys.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nOPENAI_API_KEY=<key>\nANTHROPIC_API_KEY=<key>\n```\n\n----------------------------------------\n\nTITLE: Starting Aider with OpenAI Compatible API\nDESCRIPTION: Commands to change directory to the project and start Aider with a specific model using an OpenAI compatible API. The model name should be prefixed with 'openai/'.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/openai-compat.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\n# Prefix the model name with openai/\naider --model openai/<model-name>\n```\n\n----------------------------------------\n\nTITLE: Running Aider with Cohere Models\nDESCRIPTION: Commands to navigate to your project directory, start Aider with a specific Cohere model, and list all available Cohere models. Uses the command-r-plus model which is suitable for basic coding assistance.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/cohere.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\naider --model command-r-plus-08-2024\n\n# List models available from Cohere\naider --list-models cohere_chat/\n```\n\n----------------------------------------\n\nTITLE: Command Reference Table in Markdown\nDESCRIPTION: A markdown table listing all available slash commands in aider with their descriptions, including commands for file management, chat modes, model selection, and various utility functions.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/commands.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Command|Description|\n|:------|:----------|\n| **/add** | Add files to the chat so aider can edit them or review them in detail |\n| **/architect** | Enter architect/editor mode using 2 different models. If no prompt provided, switches to architect/editor mode. |\n| **/ask** | Ask questions about the code base without editing any files. If no prompt provided, switches to ask mode. |\n| **/chat-mode** | Switch to a new chat mode |\n| **/clear** | Clear the chat history |\n| **/code** | Ask for changes to your code. If no prompt provided, switches to code mode. |\n| **/commit** | Commit edits to the repo made outside the chat (commit message optional) |\n| **/context** | Enter context mode to see surrounding code context. If no prompt provided, switches to context mode. |\n| **/copy** | Copy the last assistant message to the clipboard |\n| **/copy-context** | Copy the current chat context as markdown, suitable to paste into a web UI |\n| **/diff** | Display the diff of changes since the last message |\n| **/drop** | Remove files from the chat session to free up context space |\n| **/edit** | Alias for /editor: Open an editor to write a prompt |\n| **/editor** | Open an editor to write a prompt |\n| **/editor-model** | Switch the Editor Model to a new LLM |\n| **/exit** | Exit the application |\n| **/git** | Run a git command (output excluded from chat) |\n| **/help** | Ask questions about aider |\n| **/lint** | Lint and fix in-chat files or all dirty files if none in chat |\n| **/load** | Load and execute commands from a file |\n| **/ls** | List all known files and indicate which are included in the chat session |\n| **/map** | Print out the current repository map |\n| **/map-refresh** | Force a refresh of the repository map |\n| **/model** | Switch the Main Model to a new LLM |\n| **/models** | Search the list of available models |\n| **/multiline-mode** | Toggle multiline mode (swaps behavior of Enter and Meta+Enter) |\n| **/paste** | Paste image/text from the clipboard into the chat.        Optionally provide a name for the image. |\n| **/quit** | Exit the application |\n| **/read-only** | Add files to the chat that are for reference only, or turn added files to read-only |\n| **/reasoning-effort** | Set the reasoning effort level (values: number or low/medium/high depending on model) |\n| **/report** | Report a problem by opening a GitHub Issue |\n| **/reset** | Drop all files and clear the chat history |\n| **/run** | Run a shell command and optionally add the output to the chat (alias: !) |\n| **/save** | Save commands to a file that can reconstruct the current chat session's files |\n| **/settings** | Print out the current settings |\n| **/test** | Run a shell command and add the output to the chat on non-zero exit code |\n| **/think-tokens** | Set the thinking token budget (supports formats like 8096, 8k, 10.5k, 0.5M) |\n| **/tokens** | Report on the number of tokens used by the current chat context |\n| **/undo** | Undo the last git commit if it was done by aider |\n| **/voice** | Record and transcribe voice input |\n| **/weak-model** | Switch the Weak Model to a new LLM |\n| **/web** | Scrape a webpage, convert to markdown and send in a message |\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Aider with Claude 3.5 Sonnet\nDESCRIPTION: Commands to install the latest version of Aider, set up the Anthropic API key, and run Aider. This setup allows users to leverage Claude 3.5 Sonnet's capabilities with Aider's optimizations.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-07-01-sonnet-not-lazy.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ python -m pip install -U aider-chat\n\n$ export ANTHROPIC_API_KEY=<key> # Mac/Linux\n$ setx   ANTHROPIC_API_KEY <key> # Windows, restart shell after setx\n\n$ aider\n```\n\n----------------------------------------\n\nTITLE: Passing Input and Output to InputOutput Class in Python\nDESCRIPTION: This snippet updates the InputOutput class to accept input and output parameters, used within aider/getinput.py. This is critical for redirecting input/output streams during testing scenarios. The update ensures that mocked stdin and stdout are utilized instead of default system streams, crucial for automation and test environments.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/complex-change.md#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\naider/getinput.py\n<<<<<<< ORIGINAL\nclass InputOutput:\n    def __init__(self, pretty, yes, input_history_file, chat_history_file):\n=======\nclass InputOutput:\n    def __init__(self, pretty, yes, input_history_file, chat_history_file, input=None, output=None):\n        self.input = input\n        self.output = output\n>>>>>>> UPDATED\n```\n\n----------------------------------------\n\nTITLE: Installing Aider using curl one-liner with uv\nDESCRIPTION: A shell one-liner that uses curl to download and execute the aider install script, which installs uv, Python 3.12, and the aider CLI tool without requiring Python to be pre-installed.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-15-uv.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -LsSf https://aider.chat/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Displaying Aider's Usage Summary\nDESCRIPTION: Shows the complete command-line usage documentation for aider, including all available options and their descriptions. This is the same output as running 'aider --help' in the terminal.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/options.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nusage: aider [-h] [--model] [--openai-api-key] [--anthropic-api-key]\n             [--openai-api-base] [--openai-api-type]\n             [--openai-api-version] [--openai-api-deployment-id]\n             [--openai-organization-id] [--set-env] [--api-key]\n             [--list-models] [--model-settings-file]\n             [--model-metadata-file] [--alias] [--reasoning-effort]\n             [--thinking-tokens] [--verify-ssl | --no-verify-ssl]\n             [--timeout] [--edit-format] [--architect]\n             [--auto-accept-architect | --no-auto-accept-architect]\n             [--weak-model] [--editor-model] [--editor-edit-format]\n             [--show-model-warnings | --no-show-model-warnings]\n             [--check-model-accepts-settings | --no-check-model-accepts-settings]\n             [--max-chat-history-tokens]\n             [--cache-prompts | --no-cache-prompts]\n             [--cache-keepalive-pings] [--map-tokens]\n             [--map-refresh] [--map-multiplier-no-files]\n             [--input-history-file] [--chat-history-file]\n             [--restore-chat-history | --no-restore-chat-history]\n             [--llm-history-file] [--dark-mode] [--light-mode]\n             [--pretty | --no-pretty] [--stream | --no-stream]\n             [--user-input-color] [--tool-output-color]\n             [--tool-error-color] [--tool-warning-color]\n             [--assistant-output-color] [--completion-menu-color]\n             [--completion-menu-bg-color]\n             [--completion-menu-current-color]\n             [--completion-menu-current-bg-color] [--code-theme]\n             [--show-diffs] [--git | --no-git]\n             [--gitignore | --no-gitignore] [--aiderignore]\n             [--subtree-only] [--auto-commits | --no-auto-commits]\n             [--dirty-commits | --no-dirty-commits]\n             [--attribute-author | --no-attribute-author]\n             [--attribute-committer | --no-attribute-committer]\n             [--attribute-commit-message-author | --no-attribute-commit-message-author]\n             [--attribute-commit-message-committer | --no-attribute-commit-message-committer]\n             [--git-commit-verify | --no-git-commit-verify]\n             [--commit] [--commit-prompt] [--dry-run | --no-dry-run]\n             [--skip-sanity-check-repo]\n             [--watch-files | --no-watch-files] [--lint]\n             [--lint-cmd] [--auto-lint | --no-auto-lint]\n             [--test-cmd] [--auto-test | --no-auto-test] [--test]\n             [--analytics | --no-analytics] [--analytics-log]\n             [--analytics-disable] [--just-check-update]\n             [--check-update | --no-check-update]\n             [--show-release-notes | --no-show-release-notes]\n             [--install-main-branch] [--upgrade] [--version]\n             [--message] [--message-file]\n             [--gui | --no-gui | --browser | --no-browser]\n             [--copy-paste | --no-copy-paste] [--apply]\n             [--apply-clipboard-edits] [--exit] [--show-repo-map]\n             [--show-prompts] [--voice-format] [--voice-language]\n             [--voice-input-device] [--file] [--read] [--vim]\n             [--chat-language] [--yes-always] [-v] [--load]\n             [--encoding] [--line-endings] [-c] [--env-file]\n             [--suggest-shell-commands | --no-suggest-shell-commands]\n             [--fancy-input | --no-fancy-input]\n             [--multiline | --no-multiline]\n             [--notifications | --no-notifications]\n             [--notifications-command]\n             [--detect-urls | --no-detect-urls] [--editor] [--opus]\n             [--sonnet] [--haiku] [--4] [--4o] [--mini] [--4-turbo]\n             [--35turbo] [--deepseek] [--o1-mini] [--o1-preview]\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for OpenAI API (Mac/Linux)\nDESCRIPTION: Commands to set the OPENAI_API_BASE and OPENAI_API_KEY environment variables on Mac/Linux systems. These variables are required for Aider to connect to an OpenAI compatible API endpoint.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/openai-compat.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENAI_API_BASE=<endpoint>\nexport OPENAI_API_KEY=<key>\n```\n\n----------------------------------------\n\nTITLE: Basic Command Line Usage with Aider\nDESCRIPTION: Simple example of using Aider's command line interface to create a JavaScript file that prints hello.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/scripting.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naider --message \"make a script that prints hello\" hello.js\n```\n\n----------------------------------------\n\nTITLE: Python Edit Block: Add Factorial Endpoint (Flask)\nDESCRIPTION: This Python code snippet shows the edit block required to add a factorial endpoint to a Flask application. It defines a new route `/fact/<int:x>` that calculates the factorial of the input `x` using `math.factorial` and returns the result as a string.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/voice.md#2025-04-21_snippet_4\n\nLANGUAGE: Python\nCODE:\n```\n\"app.py\\n<<<<<<< HEAD\\nif __name__ == '__main__':\\n    print(\\\"Starting...\\\")\\n    app.run()\\n=======\\n@app.route('/fact/<int:x>')\\ndef factorial(x):\\n    result = math.factorial(x)\\n    return str(result)\\n\\nif __name__ == '__main__':\\n    print(\\\"Starting...\\\")\\n    app.run()\\n>>>>>>> updated\"\n```\n\n----------------------------------------\n\nTITLE: Installing Aider using pip\nDESCRIPTION: A bash command to install aider using pip. It updates aider to the latest version while only upgrading dependencies if necessary.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npython -m pip install -U --upgrade-strategy only-if-needed aider-chat\n```\n\n----------------------------------------\n\nTITLE: Installing Google Generative AI Package\nDESCRIPTION: Different methods for installing the required google-generativeai package using various package managers like uv tool, pipx, or pip.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/gemini.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# If you installed with aider-install or `uv tool`\nuv tool run --from aider-chat pip install google-generativeai\n\n# Or with pipx...\npipx inject aider-chat google-generativeai\n\n# Or with pip\npip install -U google-generativeai\n```\n\n----------------------------------------\n\nTITLE: Configuring Prompt Function for stdin and stdout in Python\nDESCRIPTION: This snippet corrects a prior error by correctly passing the stdin and stdout arguments to the prompt_toolkit.prompt function within the get_input method, replacing incorrect input and output arguments. This update ensures the get_input method utilizes provided mock streams, essential for automated testing via prompt_toolkit.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/complex-change.md#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\naider/getinput.py\n<<<<<<< ORIGINAL\n            input=self.input,\n            output=self.output,\n=======\n            stdin=self.input,\n            stdout=self.output,\n>>>>>>> UPDATED\n```\n\n----------------------------------------\n\nTITLE: Installing Aider using uv\nDESCRIPTION: A set of bash commands to install aider using the uv package manager. It installs uv if needed, then uses it to install aider with Python 3.12.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npython -m pip install uv  # If you need to install uv\nuv tool install --force --python python3.12 aider-chat@latest\n```\n\n----------------------------------------\n\nTITLE: Displaying Repository Map for Python Files in Aider\nDESCRIPTION: This code snippet shows a partial repository map for two Python files in the Aider project: base_coder.py and commands.py. It displays key classes, methods, and function signatures to provide context to the LLM.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/repomap.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\naider/coders/base_coder.py:\n⋮...\n│class Coder:\n│    abs_fnames = None\n⋮...\n│    @classmethod\n│    def create(\n│        self,\n│        main_model,\n│        edit_format,\n│        io,\n│        skip_model_availabily_check=False,\n│        **kwargs,\n⋮...\n│    def abs_root_path(self, path):\n⋮...\n│    def run(self, with_message=None):\n⋮...\n\naider/commands.py:\n⋮...\n│class Commands:\n│    voice = None\n│\n⋮...\n│    def get_commands(self):\n⋮...\n│    def get_command_completions(self, cmd_name, partial):\n⋮...\n│    def run(self, inp):\n⋮...\n```\n\n----------------------------------------\n\nTITLE: Configuring Model-Specific Settings with Extra Parameters in YAML\nDESCRIPTION: Example of how to override settings for a specific model by adding extra parameters to be passed to litellm.completion(). This configuration sets custom headers and maximum tokens for a particular model.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/adv-model-settings.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- name: some-provider/my-special-model\n  extra_params:\n    extra_headers:\n      Custom-Header: value\n    max_tokens: 8192\n```\n\n----------------------------------------\n\nTITLE: Adding Number Addition Endpoint\nDESCRIPTION: Implementation of an endpoint that adds two numbers provided in the URL path (/add/<num1>/<num2>). Takes two integer parameters and returns their sum as a string.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/hello-world-flask.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@app.route('/add/<int:num1>/<int:num2>')\ndef add(num1, num2):\n    return str(num1 + num2)\n\n@app.route('/hello')\ndef hello():\n    return \"Hello, World!\"\n```\n\n----------------------------------------\n\nTITLE: Python AI Comment Examples\nDESCRIPTION: Examples of AI comment syntax in Python showing how to request code changes or ask questions\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/watch.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n# Make a snake game. AI!\n# What is the purpose of this method AI?\n```\n\n----------------------------------------\n\nTITLE: Installing Aider on Windows using PowerShell\nDESCRIPTION: A one-liner PowerShell command to install aider on Windows. It downloads and executes an installation script from aider.chat.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install.md#2025-04-21_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\npowershell -ExecutionPolicy ByPass -c \"irm https://aider.chat/install.ps1 | iex\"\n```\n\n----------------------------------------\n\nTITLE: Starting Aider with Ollama\nDESCRIPTION: This set of commands demonstrates how to pull an Ollama model, start the Ollama server with an increased context window, and run Aider with the specified Ollama model.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/ollama.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Pull the model\nollama pull <model>\n\n# Start your ollama server, increasing the context window to 8k tokens\nOLLAMA_CONTEXT_LENGTH=8192 ollama serve\n\n# In another terminal window, change directory into your codebase\ncd /to/your/project\n\naider --model ollama_chat/<model>\n```\n\n----------------------------------------\n\nTITLE: Running Aider with o1 Models in Bash\nDESCRIPTION: Demonstrates how to use Aider with OpenAI's new o1 models, specifically o1-mini and o1-preview.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-09-12-o1.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naider --model o1-mini\naider --model o1-preview\n```\n\n----------------------------------------\n\nTITLE: Importing PromptSession in Python\nDESCRIPTION: This snippet replaces the import of `prompt` with `PromptSession` from `prompt_toolkit.shortcuts`. This is done to use `PromptSession` for more control over input and output streams.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/complex-change.md#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom prompt_toolkit.shortcuts import PromptSession\n```\n\n----------------------------------------\n\nTITLE: Installing Aider using pipx\nDESCRIPTION: A set of bash commands to install aider using pipx. It installs pipx if needed, then uses it to install aider in an isolated environment.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npython -m pip install pipx  # If you need to install pipx\npipx install aider-chat\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Aider Browser UI\nDESCRIPTION: Command line instructions for installing Aider via pip, setting up the OpenAI API key environment variable, and launching the browser interface.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-05-02-browser.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython -m pip install -U aider-chat\n\nexport OPENAI_API_KEY=<key> # Mac/Linux\nsetx   OPENAI_API_KEY <key> # Windows, restart shell after setx\n\naider --browser\n```\n\n----------------------------------------\n\nTITLE: Setup Commands for MacOS/Linux\nDESCRIPTION: These commands provide a comprehensive setup for the Aider project on MacOS or Linux systems, including creating and activating a virtual environment, installing the project and its dependencies.\nSOURCE: https://github.com/aider-ai/aider/blob/main/CONTRIBUTING.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m venv ../aider_venv \\\n && source ../aider_venv/bin/activate \\\n && pip3 install -e . \\\n && pip3 install -r requirements.txt \\\n && pip3 install -r requirements/requirements-dev.txt\n```\n\n----------------------------------------\n\nTITLE: Running Aider with OpenRouter Models\nDESCRIPTION: Commands to start Aider with OpenRouter models and list available models.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/openrouter.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\n# Or any other open router model\naider --model openrouter/<provider>/<model>\n\n# List models available from OpenRouter\naider --list-models openrouter/\n```\n\n----------------------------------------\n\nTITLE: Refactoring Factorial Function to Use Built-in - Python\nDESCRIPTION: This snippet shows how to refactor a custom factorial function to utilize Python's built-in math library for better optimization.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/modes.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"\\nfrom math import factorial\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Using R1 and Sonnet with aider via OpenRouter\nDESCRIPTION: This snippet shows how to use R1 as the architect model and Sonnet as the editor model with aider using an OpenRouter account. It requires setting an environment variable for the OpenRouter API key.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-24-r1-sonnet.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENROUTER_API_KEY=<your-key>\n\naider --architect --model openrouter/deepseek/deepseek-r1 --editor-model openrouter/anthropic/claude-3.5-sonnet\n```\n\n----------------------------------------\n\nTITLE: Defining Model Settings in YAML for Aider AI\nDESCRIPTION: This YAML snippet defines configuration settings for various AI models used in the Aider project. It includes default values and specific overrides for different models, covering aspects like edit format, model capabilities, and API parameters.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/adv-model-settings.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- name: (default values)\n  edit_format: whole\n  weak_model_name: null\n  use_repo_map: false\n  send_undo_reply: false\n  lazy: false\n  overeager: false\n  reminder: user\n  examples_as_sys_msg: false\n  extra_params: null\n  cache_control: false\n  caches_by_default: false\n  use_system_prompt: true\n  use_temperature: true\n  streaming: true\n  editor_model_name: null\n  editor_edit_format: null\n  reasoning_tag: null\n  remove_reasoning: null\n  system_prompt_prefix: null\n  accepts_settings: null\n\n- name: anthropic/claude-3-5-haiku-20241022\n  edit_format: diff\n  weak_model_name: anthropic/claude-3-5-haiku-20241022\n  use_repo_map: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25\n  cache_control: true\n\n- name: anthropic/claude-3-5-sonnet-20240620\n  edit_format: diff\n  weak_model_name: anthropic/claude-3-5-haiku-20241022\n  use_repo_map: true\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25\n    max_tokens: 8192\n  cache_control: true\n  editor_model_name: anthropic/claude-3-5-sonnet-20240620\n  editor_edit_format: editor-diff\n\n- name: anthropic/claude-3-5-sonnet-20241022\n  edit_format: diff\n  weak_model_name: anthropic/claude-3-5-haiku-20241022\n  use_repo_map: true\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25\n    max_tokens: 8192\n  cache_control: true\n  editor_model_name: anthropic/claude-3-5-sonnet-20241022\n  editor_edit_format: editor-diff\n\n- name: anthropic/claude-3-5-sonnet-latest\n  edit_format: diff\n  weak_model_name: anthropic/claude-3-5-haiku-20241022\n  use_repo_map: true\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25\n    max_tokens: 8192\n  cache_control: true\n  editor_model_name: anthropic/claude-3-5-sonnet-20241022\n  editor_edit_format: editor-diff\n\n- name: anthropic/claude-3-7-sonnet-20250219\n  edit_format: diff\n  weak_model_name: anthropic/claude-3-5-haiku-20241022\n  use_repo_map: true\n  overeager: true\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25,output-128k-2025-02-19\n    max_tokens: 64000\n  cache_control: true\n  editor_model_name: anthropic/claude-3-7-sonnet-20250219\n  editor_edit_format: editor-diff\n  accepts_settings:\n  - thinking_tokens\n\n- name: anthropic/claude-3-7-sonnet-latest\n  edit_format: diff\n  weak_model_name: anthropic/claude-3-5-haiku-20241022\n  use_repo_map: true\n  overeager: true\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25,output-128k-2025-02-19\n    max_tokens: 64000\n  cache_control: true\n  editor_model_name: anthropic/claude-3-7-sonnet-latest\n  editor_edit_format: editor-diff\n  accepts_settings:\n  - thinking_tokens\n\n- name: anthropic/claude-3-haiku-20240307\n  weak_model_name: anthropic/claude-3-haiku-20240307\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25\n  cache_control: true\n\n- name: azure/gpt-4.1\n  edit_format: diff\n  weak_model_name: azure/gpt-4.1-mini\n  use_repo_map: true\n  reminder: sys\n  editor_model_name: azure/gpt-4.1-mini\n\n- name: azure/gpt-4.1-mini\n  edit_format: diff\n  use_repo_map: true\n  reminder: sys\n\n- name: azure/o1\n  edit_format: diff\n  weak_model_name: azure/gpt-4o-mini\n  use_repo_map: true\n  use_temperature: false\n  streaming: false\n  editor_model_name: azure/gpt-4o\n  editor_edit_format: editor-diff\n  accepts_settings:\n  - reasoning_effort\n\n- name: azure/o1-mini\n  weak_model_name: azure/gpt-4o-mini\n  use_repo_map: true\n  use_system_prompt: false\n  use_temperature: false\n  editor_model_name: azure/gpt-4o\n  editor_edit_format: editor-diff\n\n- name: azure/o1-preview\n  edit_format: diff\n  weak_model_name: azure/gpt-4o-mini\n  use_repo_map: true\n  use_system_prompt: false\n  use_temperature: false\n  editor_model_name: azure/gpt-4o\n  editor_edit_format: editor-diff\n\n- name: azure/o3\n  edit_format: diff\n  weak_model_name: azure/gpt-4.1-mini\n  use_repo_map: true\n  examples_as_sys_msg: true\n  streaming: false\n  editor_model_name: azure/gpt-4.1\n  editor_edit_format: editor-diff\n  system_prompt_prefix: 'Formatting re-enabled. '\n  accepts_settings:\n  - reasoning_effort\n\n- name: azure/o3-mini\n  edit_format: diff\n  weak_model_name: azure/gpt-4o-mini\n  use_repo_map: true\n  use_temperature: false\n  editor_model_name: azure/gpt-4o\n  editor_edit_format: editor-diff\n  system_prompt_prefix: 'Formatting re-enabled. '\n  accepts_settings:\n  - reasoning_effort\n\n- name: azure/o4-mini\n  edit_format: diff\n  weak_model_name: azure/gpt-4.1-mini\n  use_repo_map: true\n  examples_as_sys_msg: true\n  use_temperature: false\n  editor_model_name: azure/gpt-4.1\n  editor_edit_format: editor-diff\n  system_prompt_prefix: 'Formatting re-enabled. '\n  accepts_settings:\n  - reasoning_effort\n\n- name: azure/o4-mini\n  edit_format: diff\n  weak_model_name: azure/gpt-4.1-mini\n  use_repo_map: true\n  examples_as_sys_msg: true\n  use_temperature: false\n  editor_model_name: azure/gpt-4.1\n  editor_edit_format: editor-diff\n  system_prompt_prefix: 'Formatting re-enabled. '\n  accepts_settings:\n  - reasoning_effort\n\n- name: azure/o4-mini\n  edit_format: diff\n  weak_model_name: azure/gpt-4.1-mini\n  use_repo_map: true\n  examples_as_sys_msg: true\n  use_temperature: false\n  editor_model_name: azure/gpt-4.1\n  editor_edit_format: editor-diff\n  system_prompt_prefix: 'Formatting re-enabled. '\n  accepts_settings:\n  - reasoning_effort\n\n- name: azure/o4-mini\n  edit_format: diff\n  weak_model_name: azure/gpt-4.1-mini\n  use_repo_map: true\n  examples_as_sys_msg: true\n  use_temperature: false\n  editor_model_name: azure/gpt-4.1\n  editor_edit_format: editor-diff\n  system_prompt_prefix: 'Formatting re-enabled. '\n  accepts_settings:\n  - reasoning_effort\n\n- name: azure/o4-mini\n  edit_format: diff\n  weak_model_name: azure/gpt-4.1-mini\n  use_repo_map: true\n  examples_as_sys_msg: true\n  use_temperature: false\n  editor_model_name: azure/gpt-4.1\n  editor_edit_format: editor-diff\n  system_prompt_prefix: 'Formatting re-enabled. '\n  accepts_settings:\n  - reasoning_effort\n\n- name: bedrock/anthropic.claude-3-5-haiku-20241022-v1:0\n  edit_format: diff\n  weak_model_name: bedrock/anthropic.claude-3-5-haiku-20241022-v1:0\n  use_repo_map: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25\n  cache_control: true\n\n- name: bedrock/anthropic.claude-3-5-sonnet-20241022-v2:0\n  edit_format: diff\n  weak_model_name: bedrock/anthropic.claude-3-5-haiku-20241022-v1:0\n  use_repo_map: true\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25\n    max_tokens: 8192\n  cache_control: true\n  editor_model_name: bedrock/anthropic.claude-3-5-sonnet-20241022-v2:0\n  editor_edit_format: editor-diff\n\n- name: bedrock/anthropic.claude-3-7-sonnet-20250219-v1:0\n  edit_format: diff\n  weak_model_name: bedrock/anthropic.claude-3-5-haiku-20241022-v1:0\n  use_repo_map: true\n  overeager: true\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25,output-128k-2025-02-19\n    max_tokens: 64000\n  cache_control: true\n  editor_model_name: bedrock/anthropic.claude-3-7-sonnet-20250219-v1:0\n  editor_edit_format: editor-diff\n  accepts_settings:\n  - thinking_tokens\n\n- name: bedrock/us.anthropic.claude-3-7-sonnet-20250219-v1:0\n  edit_format: diff\n  weak_model_name: bedrock/us.anthropic.claude-3-5-haiku-20241022-v1:0\n  use_repo_map: true\n  overeager: true\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25,output-128k-2025-02-19\n    max_tokens: 64000\n  cache_control: true\n  editor_model_name: bedrock/us.anthropic.claude-3-7-sonnet-20250219-v1:0\n  editor_edit_format: editor-diff\n  accepts_settings:\n  - thinking_tokens\n\n- name: bedrock_converse/anthropic.claude-3-7-sonnet-20250219-v1:0\n  edit_format: diff\n  weak_model_name: bedrock_converse/anthropic.claude-3-5-haiku-20241022-v1:0\n  use_repo_map: true\n  overeager: true\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25,output-128k-2025-02-19\n    max_tokens: 64000\n  cache_control: true\n  editor_model_name: bedrock_converse/anthropic.claude-3-7-sonnet-20250219-v1:0\n  editor_edit_format: editor-diff\n  accepts_settings:\n  - thinking_tokens\n\n- name: bedrock_converse/us.anthropic.claude-3-7-sonnet-20250219-v1:0\n  edit_format: diff\n  weak_model_name: bedrock_converse/us.anthropic.claude-3-5-haiku-20241022-v1:0\n  use_repo_map: true\n  overeager: true\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25,output-128k-2025-02-19\n    max_tokens: 64000\n  cache_control: true\n  editor_model_name: bedrock_converse/us.anthropic.claude-3-7-sonnet-20250219-v1:0\n  editor_edit_format: editor-diff\n  accepts_settings:\n  - thinking_tokens\n```\n\n----------------------------------------\n\nTITLE: OpenRouter Provider Routing Configuration\nDESCRIPTION: YAML configuration for controlling OpenRouter provider selection, including provider order, fallbacks, data collection settings, and parameter requirements.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/openrouter.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/anthropic/claude-3.7-sonnet\n  extra_params:\n    extra_body:\n      provider:\n        # Only use these providers, in this order\n        order: [\"Anthropic\", \"Together\"]\n        # Don't fall back to other providers\n        allow_fallbacks: false\n        # Skip providers that may train on inputs\n        data_collection: \"deny\"\n        # Only use providers supporting all parameters\n        require_parameters: true\n```\n\n----------------------------------------\n\nTITLE: Setting Left Paddle Color to Red in Python\nDESCRIPTION: This code explicitly sets the color of the left paddle to red. It modifies the left_paddle object after its creation, changes the color attribute, and then redraws the paddle with the new color.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/pong.md#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nleft_paddle = Paddle(10, screen_height // 2 - 40)\nleft_paddle.color = (255, 0, 0)\nleft_paddle.image.fill(left_paddle.color)\n```\n\n----------------------------------------\n\nTITLE: Configuring Aider via YAML\nDESCRIPTION: Example of setting the dark-mode option using a .aider.conf.yml configuration file, which can be placed in the home directory or git repo root.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndark-mode: true\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation for Aider LLM Benchmarking\nDESCRIPTION: Markdown documentation detailing Aider's benchmarking methodology, covering pricing notes, key performance metrics, and explanation of different edit formats used by various LLM models.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/leaderboards/notes.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Benchmark notes\n\n## Notes on pricing\n\nAll pricing information is the cost to run the benchmark at the time it was\nrun.\nProviders change their pricing, and every benchmark run ends up with a slightly\ndifferent cost.\nPricing is provided on a *best efforts* basis, and may not always be current\nor fully accurate.\n\n## Notes on benchmarking results\n\nThe key benchmarking results are:\n\n- **Percent completed correctly** - Measures what percentage of the coding tasks that the LLM completed successfully. To complete a task, the LLM must solve the programming assignment *and* edit the code to implement that solution.\n- **Percent using correct edit format** - Measures the percent of coding tasks where the LLM complied with the edit format specified in the system prompt. If the LLM makes edit mistakes, aider will give it feedback and ask for a fixed copy of the edit. The best models can reliably conform to the edit format, without making errors.\n\n\n## Notes on the edit format\n\nAider uses different \"edit formats\" to collect code edits from different LLMs.\nThe \"whole\" format is the easiest for an LLM to use, but it uses a lot of tokens\nand may limit how large a file can be edited.\nModels which can use one of the diff formats are much more efficient,\nusing far fewer tokens.\nModels that use a diff-like format are able to \nedit larger files with less cost and without hitting token limits.\n```\n\n----------------------------------------\n\nTITLE: Editing Escape Codes in Asciinema File using Python\nDESCRIPTION: This Python snippet illustrates the modification of an asciinema cast file to remove unnecessary escape sequences. It demonstrates how to edit the content of the file by replacing complex escape sequences with a simpler prompt display. This is useful for users who want a cleaner output in their screencasts.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/asciinema.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nhello.cast\n<<<<<<< ORIGINAL\n[19.534013, \"o\", \"\\u001b[?2004h\\u001b[?1l\\u001b[?25l\\u001b[0m\\u001b[?7l\\u001b[0m\\u001b[J\\u001b[0;38;5;28mhello.py>  \\u001b[0m\\r\\r\\n\\r\\r\\n\\r\\r\\n\\u001b[0;38;5;28m                                                                \\r\\u001b[64C \\r\\u001b[3A\\u001b[10C\\u001b[?7h\\u001b[0m\\u001b[?12l\\u001b[?25h\"]\n=======\n[19.534013, \"o\", \"\\u001b[?2004h\\u001b[?1l\\u001b[?25l\\u001b[0m\\u001b[?7l\\u001b[0m\\u001b[J\\u001b[0;38;5;28mhello.py> \\u001b[0m\\u001b[?7h\\u001b[0m\\u001b[?12l\\u001b[?25h\"]\n>>>>>>> UPDATED\n```\n\n----------------------------------------\n\nTITLE: Web Page Scraping with Aider Module\nDESCRIPTION: Command to scrape web page content using Aider's scraping module, converting HTML content to markdown format for use in chat sessions.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/images-urls.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\npython -m aider.scrape https://aider.chat/docs/usage/tips.html\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Extra Parameters for All Models in YAML\nDESCRIPTION: Example of how to set global extra parameters that will be passed to litellm.completion() for all models using the special aider/extra_params model name. These settings will be merged with any model-specific settings.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/adv-model-settings.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- name: aider/extra_params\n  extra_params:\n    extra_headers:\n      Custom-Header: value\n    max_tokens: 8192\n```\n\n----------------------------------------\n\nTITLE: Setting Up Environment Variables for Aider - YAML\nDESCRIPTION: This snippet demonstrates how to configure the environment variables `VERTEXAI_PROJECT` and `VERTEXAI_LOCATION` necessary for Aider to connect to Google Vertex AI.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/vertex.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\"VERTEXAI_PROJECT=my-project\\nVERTEXAI_LOCATION=us-east5\"\n```\n\n----------------------------------------\n\nTITLE: Running Aider Using Python Module Syntax\nDESCRIPTION: Demonstrates the most reliable way to execute Aider when the direct command is not accessible in the system path. This method uses Python's module execution syntax to bypass path-related issues.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/troubleshooting/aider-not-found.md#2025-04-21_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\npython -m aider\n```\n\n----------------------------------------\n\nTITLE: Modifying Output in Python Script\nDESCRIPTION: This code snippet demonstrates how to modify a Python script to change the printed output from 'hello' to 'goodbye'. This snippet is part of an example chat transcript showcasing the step-by-step code update process. Note that the language used is Python, and it requires basic knowledge of Python's print function. The expected input is the original code and the intended output modification.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/hello.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nprint(\"hello\")\n```\n\nLANGUAGE: python\nCODE:\n```\nprint(\"goodbye\")\n```\n\n----------------------------------------\n\nTITLE: Generating Supported Languages Table with Python\nDESCRIPTION: Python code snippet that generates a Markdown table listing all supported languages and their capabilities in Aider. Uses the get_supported_languages_md() function from aider.repomap module.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/languages.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n<!--[[[cog\nfrom aider.repomap import get_supported_languages_md\ncog.out(get_supported_languages_md())\n]]]-->\n```\n\n----------------------------------------\n\nTITLE: Installing and Running AI Code Editors with Different Models\nDESCRIPTION: Command line instructions for installing aider-chat and configuring it to work with various AI models including DeepSeek, Mistral, and LLama. Shows how to set API keys and specify different models when running the tool.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-07-25-new-models.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ python -m pip install -U aider-chat\n\n# Change directory into a git repo to work on\n$ cd /to/your/git/repo\n\n$ export DEEPSEEK_API_KEY=your-key-goes-here\n$ aider --model deepseek/deepseek-coder\n\n$ export MISTRAL_API_KEY=your-key-goes-here\n$ aider --model mistral/mistral-large-2407\n\n$ export OPENROUTER_API_KEY=your-key-goes-here\n$ aider --model openrouter/meta-llama/llama-3.1-405b-instruct\n$ aider --model openrouter/meta-llama/llama-3.1-70b-instruct\n$ aider --model openrouter/meta-llama/llama-3.1-8b-instruct\n```\n\n----------------------------------------\n\nTITLE: Creating a Python Virtual Environment\nDESCRIPTION: This command creates a Python virtual environment using venv module, which is recommended for Python 3.9 and later versions.\nSOURCE: https://github.com/aider-ai/aider/blob/main/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython -m venv /path/to/venv\n```\n\n----------------------------------------\n\nTITLE: Model Configuration with Accepts Settings\nDESCRIPTION: YAML configuration example showing how to specify which reasoning settings a model accepts.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/reasoning.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- name: a-fancy-reasoning-model\n  edit_format: diff\n  use_repo_map: true\n  accepts_settings:                  \n    - reasoning_effort               \n```\n\n----------------------------------------\n\nTITLE: Setting Azure Environment Variables\nDESCRIPTION: Configuration of environment variables for Azure OpenAI API access across different operating systems (Mac/Linux and Windows).\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/azure.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Mac/Linux:                                           \nexport AZURE_API_KEY=<key>\nexport AZURE_API_VERSION=2024-12-01-preview\nexport AZURE_API_BASE=https://myendpt.openai.azure.com\n\n# Windows\nsetx AZURE_API_KEY <key>\nsetx AZURE_API_VERSION 2024-12-01-preview\nsetx AZURE_API_BASE https://myendpt.openai.azure.com\n# ... restart your shell after setx commands\n```\n\n----------------------------------------\n\nTITLE: Installing Playwright for Web Page Scraping in Aider\nDESCRIPTION: This command installs Playwright's Chromium browser and its dependencies to enhance Aider's web scraping capabilities beyond the default httpx library, enabling better handling of JavaScript-rendered pages and sites that block basic scrapers.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install/optional.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nplaywright install --with-deps chromium\n```\n\n----------------------------------------\n\nTITLE: Configuring .aiderignore for Large Monorepos\nDESCRIPTION: Example of a .aiderignore file to focus on specific directories in a monorepo. It ignores everything by default and then allows specific directories and their contents.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/faq.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n# Ignore everything\n/*\n\n# Allow specific directories and their contents\n!foo/\n!bar/\n!baz/\n\n# Allow nested files under these directories\n!foo/**\n!bar/**\n!baz/**\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: These commands install the main project dependencies and development dependencies from the requirements files.\nSOURCE: https://github.com/aider-ai/aider/blob/main/CONTRIBUTING.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\npip install -r requirements/requirements-dev.txt\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Diff Edit Format\nDESCRIPTION: Example of the 'diff' format using git merge conflict-style markers to show file modifications. Shows adding an import statement to a Flask application.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/more/edit-formats.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n<<<<<<< SEARCH\nfrom flask import Flask\n=======\nimport math\nfrom flask import Flask\n>>>>>>> REPLACE\n```\n\n----------------------------------------\n\nTITLE: Starting Aider with Vertex AI Model - Bash\nDESCRIPTION: This code snippet illustrates how to navigate to your project directory and invoke Aider with the specific Vertex AI model. It requires the Aider tool to be installed and the correct model set in the command.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/vertex.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"# Change directory into your codebase\\ncd /to/your/project\\n\\naider --model vertex_ai/claude-3-5-sonnet@20240620\"\n```\n\n----------------------------------------\n\nTITLE: Setting Groq API Key in Environment\nDESCRIPTION: Commands to set the Groq API key as an environment variable on Mac/Linux and Windows systems. Windows users need to restart their shell after using setx.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/groq.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport GROQ_API_KEY=<key> # Mac/Linux\nsetx   GROQ_API_KEY <key> # Windows, restart shell after setx\n```\n\n----------------------------------------\n\nTITLE: Implementing Code Formatter Script in Bash\nDESCRIPTION: Shell script that wraps code formatters to handle their non-zero exit codes when making formatting changes. The script runs the formatter twice to ensure actual errors are properly detected versus formatting changes.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/lint-test.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n\n# Run it twice.\n#\n# First attempt may reformat/modify files, and therefore exit with non-zero status.\n#\n# Second attempt will not do anything and exit 0 unless there's a real problem beyond\n# the code formatting that was completed.\n\npre-commit run --files $* >/dev/null \\\n    || pre-commit run --files $*\n```\n\n----------------------------------------\n\nTITLE: Setting AWS Environment Variables in Bash\nDESCRIPTION: These commands set the necessary AWS environment variables for authentication and region selection using Bash syntax.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/bedrock.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport AWS_REGION=your_preferred_region\n\n# For user authentication\nexport AWS_ACCESS_KEY_ID=your_access_key\nexport AWS_SECRET_ACCESS_KEY=your_secret_key\n\n# For profile authentication\nexport AWS_PROFILE=your-profile\n```\n\n----------------------------------------\n\nTITLE: Setting xAI API Keys in Environment\nDESCRIPTION: Commands to set xAI API key environment variable on different operating systems. For Mac/Linux using export, and Windows using setx command.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/xai.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport XAI_API_KEY=<key> # Mac/Linux\nsetx   XAI_API_KEY <key> # Windows, restart shell after setx\n```\n\n----------------------------------------\n\nTITLE: JavaScript Factorial Implementation Example\nDESCRIPTION: Example showing how Aider processes an AI comment to implement a factorial function\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/watch.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction factorial(n) // Implement this. AI!\n```\n\nLANGUAGE: javascript\nCODE:\n```\nfunction factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  } else {\n    return n * factorial(n - 1);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Cohere API Key Environment Variables\nDESCRIPTION: Commands to set the Cohere API key as an environment variable for both Mac/Linux and Windows systems. For Windows users, a shell restart is required after setting the key.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/cohere.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport COHERE_API_KEY=<key> # Mac/Linux\nsetx   COHERE_API_KEY <key> # Windows, restart shell after setx\n```\n\n----------------------------------------\n\nTITLE: Setting Up Docker User and Healthchecks\nDESCRIPTION: This snippet sets a non-root user for the Docker image and enables healthchecks to monitor the application's status.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/not-code.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n+ USER appuser\n+ HEALTHCHECK --interval=30s --timeout=3s \\\n+   CMD curl -f http://localhost:8000/health || exit 1\n```\n\n----------------------------------------\n\nTITLE: Adjusting Function Signature to Accept Input and Output in Python\nDESCRIPTION: This snippet modifies the main() function in aider/main.py to accept input and output keyword arguments, allowing passing of these mock parameters from test environments. The modification adds flexibility and enables the function to interact with mocked inputs during testing. Correct utilization of these arguments ensures proper function behavior in varied input contexts.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/complex-change.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\naider/main.py\n<<<<<<< ORIGINAL\ndef main(args=None):\n    if args is None:\n        args = sys.argv[1:]\n=======\ndef main(args=None, input=None, output=None):\n    if args is None:\n        args = sys.argv[1:]\n    if input is None:\n        input = sys.stdin\n    if output is None:\n        output = sys.stdout\n>>>>>>> UPDATED\n```\n\n----------------------------------------\n\nTITLE: Switching Chat Modes in Aider - Python\nDESCRIPTION: This code snippet demonstrates how to switch between chat modes in the Aider application using specific commands.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/modes.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"\\n/chat-mode code\\n/chat-mode architect\\n/chat-mode ask\\n/chat-mode help\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Demonstrating UDiff Edit Format\nDESCRIPTION: Example of the 'udiff' format showing a unified diff-style modification. Shows adding a sympy import and class definition modification.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/more/edit-formats.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n--- mathweb/flask/app.py\n+++ mathweb/flask/app.py\n@@ ... @@\n-class MathWeb:\n+import sympy\n+\nclass MathWeb:\n```\n\n----------------------------------------\n\nTITLE: Setting Ollama API Endpoint in Bash (Mac/Linux)\nDESCRIPTION: This command sets the OLLAMA_API_BASE environment variable to the default Ollama API endpoint for Mac and Linux systems.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/ollama.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport OLLAMA_API_BASE=http://127.0.0.1:11434\n```\n\n----------------------------------------\n\nTITLE: Setting Anthropic API Key in Environment (Bash)\nDESCRIPTION: Commands to set the Anthropic API key as an environment variable for both Mac/Linux and Windows systems.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/anthropic.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport ANTHROPIC_API_KEY=<key> # Mac/Linux\nsetx   ANTHROPIC_API_KEY <key> # Windows, restart shell after setx\n```\n\n----------------------------------------\n\nTITLE: Setting AWS Environment Variables in PowerShell\nDESCRIPTION: These commands set the necessary AWS environment variables for authentication and region selection using PowerShell syntax, compatible with MacOS, Linux, and Windows.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/bedrock.md#2025-04-21_snippet_3\n\nLANGUAGE: pwsh\nCODE:\n```\n$env:AWS_ACCESS_KEY_ID = 'your_access_key'\n$env:AWS_SECRET_ACCESS_KEY = 'your_secret_key'\n$env:AWS_REGION = 'us-west-2'   # Put whichever AWS region that you'd like, that the Bedrock service supports.\n```\n\n----------------------------------------\n\nTITLE: Using Aider with Anthropic Models (Bash)\nDESCRIPTION: Commands to start Aider with the default Claude 3.7 Sonnet model and to list available Anthropic models.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/anthropic.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\n# Aider uses Claude 3.7 Sonnet by default\naider\n\n# List models available from Anthropic\naider --list-models anthropic/\n```\n\n----------------------------------------\n\nTITLE: Setting OpenRouter API Key\nDESCRIPTION: Commands to set up the OpenRouter API key in environment variables for both Mac/Linux and Windows systems.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/openrouter.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENROUTER_API_KEY=<key> # Mac/Linux\nsetx   OPENROUTER_API_KEY <key> # Windows, restart shell after setx\n```\n\n----------------------------------------\n\nTITLE: Adding Shell Configuration for Aliases and Path Management\nDESCRIPTION: This snippet shows how to add an alias 'll' for listing files in a human-readable format and update the PATH to include custom installed tools.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/not-code.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n+ alias ll='ls -alh'\n+ export PATH=\"$PATH:$HOME/.local/bin:$PATH\"\n```\n\n----------------------------------------\n\nTITLE: Updating Import Statements with prompt_toolkit in Python Tests\nDESCRIPTION: This snippet demonstrates the addition of imports for prompt_toolkit's input and output mock classes in a test module. It's essential to include these imports to facilitate input simulation during testing. Dependencies include prompt_toolkit, and the updated imports replace the existing ones to shift towards input mocking.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/complex-change.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ntests/test_main.py\n<<<<<<< ORIGINAL\nimport os\nimport sys\nimport tempfile\nfrom unittest import TestCase\nfrom aider.main import main\nimport subprocess\n=======\nimport os\nimport tempfile\nfrom unittest import TestCase\nfrom aider.main import main\nimport subprocess\nfrom prompt_toolkit.input import create_pipe_input\nfrom prompt_toolkit.output import DummyOutput\n>>>>>>> UPDATED\n```\n\n----------------------------------------\n\nTITLE: Blocking Tracking Domains in Hosts File\nDESCRIPTION: This snippet demonstrates how to block tracking domains by editing the hosts file to point them to 127.0.0.1.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/not-code.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n+ 127.0.0.1   ads.example.com\n+ 127.0.0.1   track.analytics.co\n```\n\n----------------------------------------\n\nTITLE: Python Main Function Enhancement Example\nDESCRIPTION: Example showing how to request multiple changes using a block of AI comments\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/watch.md#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n# Make these changes: AI!\n# - Add a proper main() function\n# - Use Click to process cmd line args\n# - Accept --host and --port args\n# - Print a welcome message that includes the listening url\n\nif __name__ == \"__main__\":\n    app.run(debug=True)\n```\n\n----------------------------------------\n\nTITLE: Managing Dependencies with pip-compile\nDESCRIPTION: These commands install pip-tools and use the pip-compile.sh script to manage project dependencies, with an option to upgrade all packages.\nSOURCE: https://github.com/aider-ai/aider/blob/main/CONTRIBUTING.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\npip install pip-tools\n./scripts/pip-compile.sh\n./scripts/pip-compile.sh --upgrade\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Whole Edit Format in Python\nDESCRIPTION: Example showing the 'whole' edit format where the complete file content is provided after the filename. This format requires returning the entire file content even for small changes.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/more/edit-formats.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport sys\n\ndef greeting(name):\n    print(\"Hey\", name)\n\nif __name__ == '__main__':\n    greeting(sys.argv[1])\n```\n\n----------------------------------------\n\nTITLE: Running Aider with Amazon Bedrock Model\nDESCRIPTION: This command demonstrates how to run Aider with a specific Amazon Bedrock model, using the --model command line switch.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/bedrock.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\naider --model bedrock/anthropic.claude-3-5-sonnet-20240620-v1:0\n```\n\n----------------------------------------\n\nTITLE: Running Aider with DeepSeek Chat v3 Model\nDESCRIPTION: This code snippet demonstrates how to change to your project directory and start Aider using the DeepSeek Chat v3 model. It specifies the model using the --model flag.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/deepseek.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\n# Use DeepSeek Chat v3\naider --model deepseek/deepseek-chat\n```\n\n----------------------------------------\n\nTITLE: Installing PortAudio for Voice Coding in Aider\nDESCRIPTION: Installation commands for PortAudio across different operating systems to enable Aider's voice coding feature. PortAudio is used to capture audio input for the /voice command.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install/optional.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew install portaudio\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install libportaudio2\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install libasound2-plugins\n```\n\n----------------------------------------\n\nTITLE: Configuring Vim Settings\nDESCRIPTION: This snippet shows how to enable line numbers and set tab size for Python files in the Vim editor.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/not-code.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n+ set number\n+ autocmd FileType python set tabstop=4 shiftwidth=4 expandtab\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Unified Diff Format in Python\nDESCRIPTION: This snippet shows a simple unified diff example, illustrating how to change a greeting message in a Python function using the diff format.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/unified-diffs.md#2025-04-21_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n--- a/greeting.py\n+++ b/greeting.py\n@@ -1,5 +1,5 @@\n def main(args):\n     # show a greeting\n-    print(\"Hello!\")\n+    print(\"Goodbye!\")\n     return\n```\n\n----------------------------------------\n\nTITLE: Azure O3-Mini Model Configuration\nDESCRIPTION: Example YAML configuration for using O3-Mini model via Azure provider.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/reasoning.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- name: azure/o3-mini\n  edit_format: diff\n  weak_model_name: azure/gpt-4o-mini\n  use_repo_map: true\n  use_temperature: false\n  editor_model_name: azure/gpt-4o\n  editor_edit_format: editor-diff\n  accepts_settings: [\"reasoning_effort\"]\n```\n\n----------------------------------------\n\nTITLE: Exposing PostgreSQL Port and Setting Volume\nDESCRIPTION: This snippet configures the Docker Compose file to expose port 5432 for PostgreSQL and add a persistent volume for data storage.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/not-code.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n  services:\n    postgres:\n      image: postgres:15\n+     ports:\n+       - \"5432:5432\"\n+     volumes:\n+       - pgdata:/var/lib/postgresql/data\n```\n\n----------------------------------------\n\nTITLE: Testing cmd_add Method in Python\nDESCRIPTION: This Python unit test checks whether the 'cmd_add' method creates specified files in the current directory. It utilizes Python's unittest framework and mock objects for dependencies, initializing necessary class instances in a temporary directory and asserting file creation. The test initially uses incorrect input, which is subsequently corrected.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/add-test.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport os\nimport tempfile\nfrom unittest import TestCase\nfrom unittest.mock import MagicMock\nfrom aider.commands import Commands\nfrom aider.io import InputOutput\n\nclass TestCommands(TestCase):\n    def test_cmd_add(self):\n        # Create a temporary directory and change the current working directory\n        with tempfile.TemporaryDirectory() as tmpdir:\n            os.chdir(tmpdir)\n\n            # Initialize the Commands and InputOutput objects\n            io = InputOutput(pretty=False, yes=True)\n            coder = MagicMock()\n            commands = Commands(io, coder)\n\n            # Call the cmd_add method with 'foo.txt' and 'bar.txt'\n            commands.cmd_add(['foo.txt', 'bar.txt'])\n\n            # Check if both files have been created in the temporary directory\n            self.assertTrue(os.path.exists('foo.txt'))\n            self.assertTrue(os.path.exists('bar.txt'))\n```\n\nLANGUAGE: python\nCODE:\n```\n            # Call the cmd_add method with 'foo.txt' and 'bar.txt'\n            commands.cmd_add(['foo.txt', 'bar.txt'])\n```\n\nLANGUAGE: python\nCODE:\n```\n            # Call the cmd_add method with 'foo.txt' and 'bar.txt' as a single string\n            commands.cmd_add('foo.txt bar.txt')\n```\n\n----------------------------------------\n\nTITLE: URL Validation and Fetching\nDESCRIPTION: Validates URLs and fetches markdown content to be sanitized and displayed as HTML on a webpage using JavaScript. It ensures the URL is valid and properly fetches raw data for non-raw GitHub gists.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/share/index.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction isValidUrl(url) {\n    try {\n        const urlObj = new URL(url);\n        return urlObj.protocol === 'http:' || urlObj.protocol === 'https:';\n    } catch {\n        return false;\n    }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmarked.setOptions({\n    headerIds: false,\n    mangle: false\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.onload = function() {\n    var urlParams = new URLSearchParams(window.location.search);\n    var conv = urlParams.get('mdurl');\n    if (!conv || !isValidUrl(conv)) {\n        document.querySelector('#shared-transcript').innerHTML = \n            '<div style=\"color: red; padding: 1em;\">Error: Invalid or missing URL provided</div>';\n        return;\n    }\n    document.getElementById('mdurl').href = conv;\n    var gistRegex = /^https:\\/\\/gist\\.github\\.com\\/([^\\/]+)\\/([a-f0-9]+)$/;\n    var match = gistRegex.exec(conv);\n    if (match) {\n        conv = 'https://gist.githubusercontent.com/' + match[1] + '/' + match[2] + '/raw';\n    }\n    fetch(conv)\n    .then(response => response.text())\n    .then(markdown => {\n        markdown = markdown.split('\\n').map(function(line) {\n            if (line.startsWith('>')) {\n                return line.trimEnd() + '  ';\n            }\n            return line;\n        }).join('\\n');\n        var html = marked.parse(markdown);\n        var sanitizedHtml = DOMPurify.sanitize(html);\n        var divElement = document.querySelector('#shared-transcript');\n        divElement.innerHTML = sanitizedHtml;\n    })\n    .catch(error => {\n        console.error('Error fetching markdown:', error);\n        document.querySelector('#shared-transcript').innerHTML = \n            '<div style=\"color: red; padding: 1em;\">Error: Failed to load chat transcript</div>';\n    });\n}\n```\n\n----------------------------------------\n\nTITLE: Using Model Aliases in Command Line\nDESCRIPTION: Examples of using defined aliases instead of full model names when launching Aider from the command line.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/model-aliases.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naider --model fast  # Uses gpt-4o-mini\naider --model smart  # Uses o3-mini\n```\n\n----------------------------------------\n\nTITLE: Setting Aider Command Line Option\nDESCRIPTION: Example of setting the dark-mode option using a command line switch when running Aider.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ aider --dark-mode\n```\n\n----------------------------------------\n\nTITLE: X.AI Grok Model Configuration\nDESCRIPTION: Configuration settings for X.AI's Grok models, specifying repository mapping and optional reasoning effort settings\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/adv-model-settings.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- name: xai/grok-3-mini-beta\n  use_repo_map: true\n  accepts_settings:\n  - reasoning_effort\n```\n\n----------------------------------------\n\nTITLE: Configuring Thinking Tokens for Anthropic Claude 3.7 Sonnet (YAML)\nDESCRIPTION: YAML configuration for enabling thinking tokens in the Anthropic Claude 3.7 Sonnet model, including custom parameters and token budget settings.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/anthropic.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- name: anthropic/claude-3-7-sonnet-20250219\n  edit_format: diff\n  weak_model_name: anthropic/claude-3-5-haiku-20241022\n  use_repo_map: true\n  examples_as_sys_msg: true\n  use_temperature: false\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25,output-128k-2025-02-19\n    max_tokens: 64000\n    thinking:\n      type: enabled\n      budget_tokens: 32000 # Adjust this number\n  cache_control: true\n  editor_model_name: anthropic/claude-3-7-sonnet-20250219\n  editor_edit_format: editor-diff\n```\n\n----------------------------------------\n\nTITLE: Defining greeting function - JavaScript\nDESCRIPTION: The 'greet' function takes a name as input and returns a greeting string. It uses template literals to format the output.\nSOURCE: https://github.com/aider-ai/aider/blob/main/tests/fixtures/sample-code-base-repo-map.txt#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction greet(name) {\n    return `Hello, ${name}!`;\n}\n```\n\n----------------------------------------\n\nTITLE: Fireworks API Configuration for DeepSeek\nDESCRIPTION: Setup instructions for using Fireworks.ai as a DeepSeek provider, including API key configuration options.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-28-deepseek-down.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Set your API key using environment variables\nexport FIREWORKS_API_KEY=<your-key>\naider --model fireworks_ai/accounts/fireworks/models/deepseek-chat\n\n# Or use the --api-key command line option\naider --model fireworks_ai/accounts/fireworks/models/deepseek-chat --api-key fireworks=<your-key>\n\n# Or add it to .aider.conf.yml in your home directory or project root:\napi-key:\n  - fireworks=<your-key>\n```\n\n----------------------------------------\n\nTITLE: Configuring Fixed Context Window Size for Ollama\nDESCRIPTION: This YAML configuration sets a fixed context window size for a specific Ollama model using an .aider.model.settings.yml file. It demonstrates how to set the num_ctx parameter to 65536 for the qwen2.5-coder model.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/ollama.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- name: ollama/qwen2.5-coder:32b-instruct-fp16\n  extra_params:\n    num_ctx: 65536\n```\n\n----------------------------------------\n\nTITLE: Running Pytest for Aider\nDESCRIPTION: These commands demonstrate how to run the entire test suite or specific test files/cases using pytest.\nSOURCE: https://github.com/aider-ai/aider/blob/main/CONTRIBUTING.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\npytest\npytest tests/basic/test_coder.py\npytest tests/basic/test_coder.py::TestCoder::test_specific_case\n```\n\n----------------------------------------\n\nTITLE: Setting Gemini API Key Environment Variables\nDESCRIPTION: Commands to configure the Gemini API key in environment variables for both Mac/Linux and Windows systems.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/gemini.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport GEMINI_API_KEY=<key> # Mac/Linux\nsetx   GEMINI_API_KEY <key> # Windows, restart shell after setx\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Linters CLI Commands\nDESCRIPTION: Examples of command-line usage for configuring custom language-specific linters in Aider.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-05-22-linting.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# To lint javascript with jslint\naider --lint-cmd javascript:jslint\n\n# To lint python with flake8 using some specific args:\naider --lint-cmd \"python:flake8 --select=E9,F821,F823...\"\n```\n\n----------------------------------------\n\nTITLE: Launching Aider with Prompt Caching Enabled\nDESCRIPTION: This snippet shows the console output when launching Aider with prompt caching enabled for the main model. It demonstrates how Aider indicates that caching is active for the selected model.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/caching.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nMain model: claude-3-5-sonnet-20240620 with diff edit format, prompt cache, infinite output\n```\n\n----------------------------------------\n\nTITLE: O3-Mini Model Configuration\nDESCRIPTION: YAML configuration for O3-Mini model showing basic settings and reasoning effort support.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/reasoning.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- name: o3-mini\n  edit_format: diff\n  weak_model_name: gpt-4o-mini\n  use_repo_map: true\n  use_temperature: false\n  editor_model_name: gpt-4o\n  editor_edit_format: editor-diff\n  accepts_settings: [\"reasoning_effort\"]\n```\n\n----------------------------------------\n\nTITLE: Enabling Analytics for Current Session in Aider (Bash)\nDESCRIPTION: This command enables analytics for the current Aider session. It will not override a permanent disable setting and may prompt for opt-in confirmation if it's the first time enabling analytics.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/more/analytics.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naider --analytics\n```\n\n----------------------------------------\n\nTITLE: Defining AI Model Configuration - YAML\nDESCRIPTION: This snippet defines various settings for different AI models, specifying properties such as the model name, editing format, and whether to use a repository map. These configurations are essential for managing model interactions and settings.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/adv-model-settings.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- name: o4-mini\n  edit_format: diff\n  weak_model_name: gpt-4.1-mini\n  use_repo_map: true\n  examples_as_sys_msg: true\n  use_temperature: false\n  editor_model_name: gpt-4.1\n  editor_edit_format: editor-diff\n  system_prompt_prefix: 'Formatting re-enabled. '\n  accepts_settings:\n  - reasoning_effort\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openai/gpt-4.1\n  edit_format: diff\n  weak_model_name: openai/gpt-4.1-mini\n  use_repo_map: true\n  reminder: sys\n  editor_model_name: openai/gpt-4.1-mini\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openai/gpt-4.1-mini\n  edit_format: diff\n  use_repo_map: true\n  reminder: sys\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openai/gpt-4.5-preview\n  edit_format: diff\n  weak_model_name: gpt-4o-mini\n  use_repo_map: true\n  lazy: true\n  reminder: sys\n  examples_as_sys_msg: true\n  editor_model_name: openai/gpt-4o\n  editor_edit_format: editor-diff\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openai/gpt-4o\n  edit_format: diff\n  weak_model_name: gpt-4o-mini\n  use_repo_map: true\n  lazy: true\n  reminder: sys\n  examples_as_sys_msg: true\n  editor_edit_format: editor-diff\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openai/gpt-4o-2024-08-06\n  edit_format: diff\n  weak_model_name: gpt-4o-mini\n  use_repo_map: true\n  lazy: true\n  reminder: sys\n  examples_as_sys_msg: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openai/gpt-4o-2024-11-20\n  edit_format: diff\n  weak_model_name: gpt-4o-mini\n  use_repo_map: true\n  lazy: true\n  reminder: sys\n  examples_as_sys_msg: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openai/gpt-4o-mini\n  weak_model_name: openai/gpt-4o-mini\n  lazy: true\n  reminder: sys\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openai/o1\n  edit_format: diff\n  weak_model_name: openai/gpt-4o-mini\n  use_repo_map: true\n  use_temperature: false\n  streaming: false\n  editor_model_name: openai/gpt-4o\n  editor_edit_format: editor-diff\n  system_prompt_prefix: 'Formatting re-enabled. '\n  accepts_settings:\n  - reasoning_effort\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openai/o1-mini\n  weak_model_name: openai/gpt-4o-mini\n  use_repo_map: true\n  use_system_prompt: false\n  use_temperature: false\n  editor_model_name: openai/gpt-4o\n  editor_edit_format: editor-diff\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openai/o1-preview\n  edit_format: diff\n  weak_model_name: openai/gpt-4o-mini\n  use_repo_map: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/anthropic/claude-3-opus\n  edit_format: diff\n  weak_model_name: openrouter/anthropic/claude-3-5-haiku\n  use_repo_map: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/anthropic/claude-3.5-sonnet\n  edit_format: diff\n  weak_model_name: openrouter/anthropic/claude-3-5-haiku\n  use_repo_map: true\n  examples_as_sys_msg: true\n  extra_params:\n    max_tokens: 8192\n  cache_control: true\n  editor_model_name: openrouter/anthropic/claude-3.5-sonnet\n  editor_edit_format: editor-diff\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/anthropic/claude-3.5-sonnet:beta\n  edit_format: diff\n  weak_model_name: openrouter/anthropic/claude-3-5-haiku:beta\n  use_repo_map: true\n  examples_as_sys_msg: true\n  extra_params:\n    max_tokens: 8192\n  cache_control: true\n  editor_model_name: openrouter/anthropic/claude-3.5-sonnet:beta\n  editor_edit_format: editor-diff\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/anthropic/claude-3.7-sonnet\n  edit_format: diff\n  weak_model_name: openrouter/anthropic/claude-3-5-haiku\n  use_repo_map: true\n  overeager: true\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25,output-128k-2025-02-19\n    max_tokens: 64000\n  cache_control: true\n  editor_model_name: openrouter/anthropic/claude-3.7-sonnet\n  editor_edit_format: editor-diff\n  accepts_settings:\n  - thinking_tokens\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/anthropic/claude-3.7-sonnet:beta\n  edit_format: diff\n  weak_model_name: openrouter/anthropic/claude-3-5-haiku\n  use_repo_map: true\n  overeager: true\n  examples_as_sys_msg: true\n  extra_params:\n    extra_headers:\n      anthropic-beta: prompt-caching-2024-07-31,pdfs-2024-09-25,output-128k-2025-02-19\n    max_tokens: 64000\n  cache_control: true\n  editor_model_name: openrouter/anthropic/claude-3.7-sonnet\n  editor_edit_format: editor-diff\n  accepts_settings:\n  - thinking_tokens\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/cohere/command-a-03-2025\n  examples_as_sys_msg: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/deepseek/deepseek-chat\n  edit_format: diff\n  use_repo_map: true\n  reminder: sys\n  examples_as_sys_msg: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/deepseek/deepseek-chat-v3-0324\n  edit_format: diff\n  use_repo_map: true\n  reminder: sys\n  examples_as_sys_msg: true\n  extra_params:\n    max_tokens: 8192\n  caches_by_default: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/deepseek/deepseek-chat-v3-0324:free\n  edit_format: diff\n  weak_model_name: openrouter/deepseek/deepseek-chat-v3-0324:free\n  use_repo_map: true\n  examples_as_sys_msg: true\n  caches_by_default: true\n  use_temperature: false\n  editor_model_name: openrouter/deepseek/deepseek-r1:free\n  editor_edit_format: editor-diff\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/deepseek/deepseek-chat:free\n  edit_format: diff\n  weak_model_name: openrouter/deepseek/deepseek-chat:free\n  use_repo_map: true\n  examples_as_sys_msg: true\n  extra_params:\n    max_tokens: 8192\n  caches_by_default: true\n  use_temperature: false\n  editor_model_name: openrouter/deepseek/deepseek-chat:free\n  editor_edit_format: editor-diff\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/deepseek/deepseek-coder\n  edit_format: diff\n  use_repo_map: true\n  reminder: sys\n  examples_as_sys_msg: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/deepseek/deepseek-r1\n  edit_format: diff\n  weak_model_name: openrouter/deepseek/deepseek-chat\n  use_repo_map: true\n  examples_as_sys_msg: true\n  extra_params:\n    max_tokens: 8192\n    include_reasoning: true\n  caches_by_default: true\n  editor_model_name: openrouter/deepseek/deepseek-chat\n  editor_edit_format: editor-diff\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/deepseek/deepseek-r1-distill-llama-70b\n  edit_format: diff\n  weak_model_name: openrouter/deepseek/deepseek-chat\n  use_repo_map: true\n  examples_as_sys_msg: true\n  extra_params:\n    max_tokens: 8192\n  caches_by_default: true\n  use_temperature: false\n  editor_model_name: openrouter/deepseek/deepseek-chat\n  editor_edit_format: editor-diff\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/deepseek/deepseek-r1:free\n  edit_format: diff\n  weak_model_name: openrouter/deepseek/deepseek-r1:free\n  use_repo_map: true\n  examples_as_sys_msg: true\n  extra_params:\n    max_tokens: 8192\n  caches_by_default: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/google/gemini-2.5-pro-exp-03-25:free\n  edit_format: diff-fenced\n  weak_model_name: openrouter/google/gemini-2.0-flash-exp:free\n  use_repo_map: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/google/gemma-3-27b-it\n  use_system_prompt: false\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/google/gemma-3-27b-it:free\n  use_system_prompt: false\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/meta-llama/llama-3-70b-instruct\n  edit_format: diff\n  weak_model_name: openrouter/meta-llama/llama-3-70b-instruct\n  examples_as_sys_msg: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/openai/gpt-4.1\n  edit_format: diff\n  weak_model_name: openrouter/openai/gpt-4.1-mini\n  use_repo_map: true\n  reminder: sys\n  editor_model_name: openrouter/openai/gpt-4.1-mini\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/openai/gpt-4.1-mini\n  edit_format: diff\n  use_repo_map: true\n  reminder: sys\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/openai/gpt-4o\n  edit_format: diff\n  weak_model_name: openrouter/openai/gpt-4o-mini\n  use_repo_map: true\n  lazy: true\n  reminder: sys\n  examples_as_sys_msg: true\n  editor_edit_format: editor-diff\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/openai/o1\n  edit_format: diff\n  weak_model_name: openrouter/openai/gpt-4o-mini\n  use_repo_map: true\n  use_temperature: false\n  streaming: false\n  editor_model_name: openrouter/openai/gpt-4o\n  editor_edit_format: editor-diff\n  system_prompt_prefix: 'Formatting re-enabled. '\n  accepts_settings:\n  - reasoning_effort\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/openai/o1-mini\n  weak_model_name: openrouter/openai/gpt-4o-mini\n  use_repo_map: true\n  use_system_prompt: false\n  use_temperature: false\n  streaming: false\n  editor_model_name: openrouter/openai/gpt-4o\n  editor_edit_format: editor-diff\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/openai/o1-preview\n  edit_format: diff\n  weak_model_name: openrouter/openai/gpt-4o-mini\n  use_repo_map: true\n```\n\n----------------------------------------\n\nTITLE: Installing Aider Project in Editable Mode\nDESCRIPTION: This command installs the Aider project in editable mode, allowing changes to the source code to take effect immediately without reinstallation.\nSOURCE: https://github.com/aider-ai/aider/blob/main/CONTRIBUTING.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npip install -e .\n```\n\n----------------------------------------\n\nTITLE: Running Aider with Gemini Models\nDESCRIPTION: Commands for launching Aider with different Gemini model options and listing available Gemini models.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/gemini.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\n# You can run the Gemini 2.5 Pro model with this shortcut:\naider --model gemini\n\n# You can run the Gemini 2.5 Pro Exp for free, with usage limits:\naider --model gemini-exp\n\n# List models available from Gemini\naider --list-models gemini/\n```\n\n----------------------------------------\n\nTITLE: Installation Command Reference for Aider Repository Mapping\nDESCRIPTION: Command-line instructions for setting up and running Aider with repository mapping functionality. Requires installation of Aider and universal-ctags as prerequisites.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/ctags.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\naider\n```\n\n----------------------------------------\n\nTITLE: DeepSeek R1 Model Configuration\nDESCRIPTION: Complete YAML configuration for DeepSeek R1 model including reasoning tag and other settings.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/reasoning.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- name: fireworks_ai/accounts/fireworks/models/deepseek-r1\n  edit_format: diff\n  weak_model_name: fireworks_ai/accounts/fireworks/models/deepseek-v3\n  use_repo_map: true\n  extra_params:\n    max_tokens: 160000\n  use_temperature: false\n  editor_model_name: fireworks_ai/accounts/fireworks/models/deepseek-v3\n  editor_edit_format: editor-diff\n  reasoning_tag: think\n```\n\n----------------------------------------\n\nTITLE: Setting Basic Editor in Bash\nDESCRIPTION: Example of setting the default editor using AIDER_EDITOR environment variable in shell configuration files.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/editor.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport AIDER_EDITOR=vim\n```\n\n----------------------------------------\n\nTITLE: Fireworks Model Settings Configuration\nDESCRIPTION: YAML configuration for Fireworks model settings including edit format, repository mapping, and various behavioral parameters.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-28-deepseek-down.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- name: fireworks_ai/accounts/fireworks/models/deepseek-chat\n  edit_format: diff\n  weak_model_name: null\n  use_repo_map: true\n  send_undo_reply: false\n  lazy: false\n  reminder: sys\n  examples_as_sys_msg: true\n  extra_params:\n    max_tokens: 8192\n  cache_control: false\n  caches_by_default: true\n  use_system_prompt: true\n  use_temperature: true\n  streaming: true\n```\n\n----------------------------------------\n\nTITLE: Compact List Configuration in YAML\nDESCRIPTION: Demonstrates how to specify lists using YAML's compact square bracket notation\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/aider_conf.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nread: [CONVENTIONS.md, anotherfile.txt, thirdfile.py]\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS CLI\nDESCRIPTION: This command initiates the AWS CLI configuration process, prompting the user to enter their AWS Access Key ID, Secret Access Key, and default region.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/bedrock.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naws configure\n```\n\n----------------------------------------\n\nTITLE: Running Aider with Amazon Bedrock Model (Alternative)\nDESCRIPTION: This command shows an alternative way to run Aider with an Amazon Bedrock model, prefixing the model name with 'us.'.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/bedrock.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naider --model bedrock/us.anthropic.claude-3-5-sonnet-20240620-v1:0\n```\n\n----------------------------------------\n\nTITLE: Activating Virtual Environment on Windows\nDESCRIPTION: This command activates the Python virtual environment on Windows systems.\nSOURCE: https://github.com/aider-ai/aider/blob/main/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n/path/to/venv/Scripts/activate\n```\n\n----------------------------------------\n\nTITLE: Fetching Additional Variables for Data Analysis\nDESCRIPTION: This code snippet updates the parameters in the download script to include additional ACS variables, allowing the analysis of both population density and housing prices for hypothesis testing.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/census.md#2025-04-21_snippet_3\n\nLANGUAGE: Python\nCODE:\n```\nnew_file/getdata.py\n<<<<<<< ORIGINAL\n    'get': 'NAME,B01001_001E',  # Variables to retrieve (NAME: Geographic area name, B01001_001E: Total population)\n=======\n    'get': 'NAME,B01003_001E,B25077_001E',  # Variables to retrieve (NAME: Geographic area name, B01003_001E: Total population, B25077_001E: Median value of owner-occupied housing units)\n>>>>>>> UPDATED\n```\n\n----------------------------------------\n\nTITLE: Setting Ollama API Endpoint in Windows\nDESCRIPTION: This command sets the OLLAMA_API_BASE environment variable to the default Ollama API endpoint for Windows systems. Note that the shell needs to be restarted after using setx.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/ollama.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsetx   OLLAMA_API_BASE http://127.0.0.1:11434\n```\n\n----------------------------------------\n\nTITLE: Adding aider-chat installation to uv installer script\nDESCRIPTION: The key line added to uv's install script that installs aider-chat as a tool using uv, forcing it to use Python 3.12 as the interpreter.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-15-uv.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nensure \"${_install_dir}/uv\" tool install --force --python python3.12 aider-chat@latest\n```\n\n----------------------------------------\n\nTITLE: OpenRouter AI Model Configuration\nDESCRIPTION: Configuration settings for OpenRouter AI models, specifying edit formats, model names, and system prompting behaviors\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/adv-model-settings.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/openai/o3\n  edit_format: diff\n  weak_model_name: openrouter/openai/gpt-4.1-mini\n  use_repo_map: true\n  examples_as_sys_msg: true\n  streaming: false\n  editor_model_name: openrouter/openai/gpt-4.1\n  editor_edit_format: editor-diff\n  system_prompt_prefix: 'Formatting re-enabled. '\n  accepts_settings:\n  - reasoning_effort\n```\n\n----------------------------------------\n\nTITLE: Running Aider with Azure\nDESCRIPTION: Commands for starting Aider with Azure OpenAI models and listing available Azure models.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/azure.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\naider --model azure/<your_model_deployment_name>\n\n# List models available from Azure\naider --list-models azure/\n```\n\n----------------------------------------\n\nTITLE: Hyperbolic Model Settings Configuration\nDESCRIPTION: YAML configuration for Hyperbolic model settings including editor configuration and token limits.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-28-deepseek-down.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openai/deepseek-ai/DeepSeek-V3\n  edit_format: diff\n  weak_model_name: null\n  use_repo_map: true\n  send_undo_reply: false\n  lazy: false\n  reminder: sys\n  examples_as_sys_msg: true\n  cache_control: false\n  caches_by_default: true\n  use_system_prompt: true\n  use_temperature: true\n  streaming: true\n  editor_model_name: null\n  editor_edit_format: null\n  extra_params:\n    max_tokens: 65536\n```\n\n----------------------------------------\n\nTITLE: Installing boto3 Package\nDESCRIPTION: These commands show different methods to install the boto3 package, which may be required for using Amazon Bedrock with Aider.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/bedrock.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# If you installed with aider-install or `uv tool`\nuv tool run --from aider-chat pip install boto3\n\n# Or with pipx...\npipx inject aider-chat boto3\n\n# Or with pip\npip install -U boto3\n```\n\n----------------------------------------\n\nTITLE: Import os module in aider/io.py\nDESCRIPTION: This snippet imports the `os` module into the `aider/io.py` file. This import is necessary to access environment variables like `NO_COLOR` for controlling the color output.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/no-color.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport os\nimport os.path\n```\n\n----------------------------------------\n\nTITLE: Commands executed by aider-install script\nDESCRIPTION: The commands that the aider-install script runs to install aider-chat as a tool using uv with Python 3.12, and to update the user's shell path to include the uv tools directory.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-15-uv.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nuv tool install --force --python python3.12 aider-chat\nuv tool update-shell\n```\n\n----------------------------------------\n\nTITLE: Python Code Diff with Conventions\nDESCRIPTION: Diff showing generated Python code following the specified conventions using httpx and type hints.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/conventions.md#2025-04-21_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n--- useragent.py\n+++ useragent.py\n@@ ... @@\n+import httpx\n+\n+def check_user_agent() -> str:\n+    response = httpx.get('https://httpbin.org/user-agent')\n+    return response.json()['user-agent']\n```\n\n----------------------------------------\n\nTITLE: Setting Ollama API Key in Bash (Mac/Linux)\nDESCRIPTION: This command sets the OLLAMA_API_KEY environment variable for Mac and Linux systems when using an Ollama instance that requires an API key.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/ollama.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport OLLAMA_API_KEY=<api-key>\n```\n\n----------------------------------------\n\nTITLE: Linux Editor Configurations\nDESCRIPTION: Common editor configurations for Linux including Vim, Emacs, nano, VSCode, and Sublime Text with appropriate wait flags.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/editor.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport AIDER_EDITOR=vim\n```\n\nLANGUAGE: bash\nCODE:\n```\nexport AIDER_EDITOR=emacs\n```\n\nLANGUAGE: bash\nCODE:\n```\nexport AIDER_EDITOR=nano\n```\n\nLANGUAGE: bash\nCODE:\n```\nexport AIDER_EDITOR=\"code --wait\"\n```\n\nLANGUAGE: bash\nCODE:\n```\nexport AIDER_EDITOR=\"subl --wait\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenRouter API Access for DeepSeek\nDESCRIPTION: Setup instructions for using OpenRouter as a DeepSeek provider, including environment variables, command line options, and configuration file settings.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-28-deepseek-down.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Set your API key using environment variables\nexport OPENROUTER_API_KEY=<your-key>\naider --model openrouter/deepseek/deepseek-chat\n\n# Or use the --api-key command line option\naider --model openrouter/deepseek/deepseek-chat --api-key openrouter=<your-key>\n\n# Or add it to .aider.conf.yml in your home directory or project root:\napi-key:\n  - openrouter=<your-key>\n```\n\n----------------------------------------\n\nTITLE: Setting Ollama API Key in Windows\nDESCRIPTION: This command sets the OLLAMA_API_KEY environment variable for Windows systems when using an Ollama instance that requires an API key. Note that the shell needs to be restarted after using setx.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/ollama.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsetx   OLLAMA_API_KEY <api-key>\n```\n\n----------------------------------------\n\nTITLE: Hyperbolic API Configuration for DeepSeek\nDESCRIPTION: Setup instructions for using Hyperbolic's API as an OpenAI-compatible provider for DeepSeek access.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-28-deepseek-down.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Set your API key using environment variables\nexport OPENAI_API_BASE=https://api.hyperbolic.xyz/v1/\nexport OPENAI_API_KEY=<your-key>\naider --model openai/deepseek-ai/DeepSeek-V3\n\n# Or use the --api-key command line option\naider --model openai/deepseek-ai/DeepSeek-V3 --api-key openai=<your-key>\n\n# Or add it to .aider.conf.yml in your home directory or project root:\napi-key:\n  - openai=<your-key>\n```\n\n----------------------------------------\n\nTITLE: Example of Lazy Coding in Python\nDESCRIPTION: This snippet demonstrates the 'lazy coding' behavior observed in GPT-4 Turbo models, where the model omits implementation details and leaves a comment placeholder instead of writing the actual code.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-04-09-gpt-4-turbo.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndef some_complex_method(foo, bar):\n    # ... implement method here ...\n```\n\n----------------------------------------\n\nTITLE: Importing create_input and StringIO in Python\nDESCRIPTION: This snippet replaces the import of `create_pipe_input` with `create_input` and imports `StringIO` from the `io` module. This allows for creating input streams from strings for testing purposes.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/complex-change.md#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfrom prompt_toolkit.input import create_input\nfrom io import StringIO\n```\n\n----------------------------------------\n\nTITLE: Basic List Configuration in YAML\nDESCRIPTION: Shows how to specify lists of values using YAML bulleted list format\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/aider_conf.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nread:\n  - CONVENTIONS.md\n  - anotherfile.txt\n  - thirdfile.py\n```\n\n----------------------------------------\n\nTITLE: Replacing Console Print with Tool Error in Python\nDESCRIPTION: This snippet demonstrates the replacement of console print calls that output error messages with a new method, self.io.tool_error, for improved error handling. The editor modifies strings to eliminate '[red]' highlighting, focusing on clearer error messaging. It assumes that a corresponding method self.io.tool_error exists or needs to be implemented.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/semantic-search-replace.md#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\n>>>>>>> UPDATED\n            self.io.tool_error(f\"This tool will almost certainly fail to work with {main_model}\")\n>>>>>>> ORIGINAL\n            self.console.print(\n                f\"[red]This tool will almost certainly fail to work with {main_model}\"\n            )\n```\n\nLANGUAGE: Python\nCODE:\n```\n>>>>>>> UPDATED\n            self.io.tool_error(\"Files are not in a git repo.\")\n>>>>>>> ORIGINAL\n            self.console.print(\"[red]Files are not in a git repo.\")\n```\n\nLANGUAGE: Python\nCODE:\n```\n>>>>>>> UPDATED\n            self.io.tool_error(\"Malformed ORIGINAL/UPDATE blocks, retrying...\")\n            self.io.tool_error(Text(err))\n>>>>>>> ORIGINAL\n            self.console.print(\"[red]Malformed ORIGINAL/UPDATE blocks, retrying...\")\n            self.console.print(\"[red]\", Text(err))\n```\n\n----------------------------------------\n\nTITLE: Setting LM Studio API Key and Base URL in Environment Variables\nDESCRIPTION: This snippet shows how to set the LM Studio API key and base URL as environment variables for both Mac/Linux and Windows systems. It's necessary to set a dummy API key even if LM Studio doesn't require one by default.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/lm-studio.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Must set a value here even if its a dummy value\nexport LM_STUDIO_API_KEY=dummy-api-key # Mac/Linux\nsetx   LM_STUDIO_API_KEY dummy-api-key # Windows, restart shell after setx\n\n# LM Studio default server URL is http://localhost:1234/v1\nexport LM_STUDIO_API_BASE=http://localhost:1234/v1 # Mac/Linux\nsetx   LM_STUDIO_API_BASE http://localhost:1234/v1 # Windows, restart shell after setx\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Aider with Repo Map Feature\nDESCRIPTION: Instructions for setting up and using the experimental repo map feature in Aider. It requires installing Aider, ctags, and running Aider inside the repository.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-05-25-ctags.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n  - Install [aider](https://aider.chat/docs/install.html).\n  - Install ctags.\n  - Run `aider` inside your repo, and it should say \"Repo-map: universal-ctags using 1024 tokens\".\n```\n\n----------------------------------------\n\nTITLE: Configuration for Aider Using YAML - YAML\nDESCRIPTION: This snippet presents an example of a YAML configuration file that specifies the model to be used with Aider. This is an alternative to setting the model via command line.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/vertex.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n\"model: vertex_ai/claude-3-5-sonnet@20240620\"\n```\n\n----------------------------------------\n\nTITLE: Two-step installation using aider-install package\nDESCRIPTION: A two-command installation process for users who already have Python 3.8+ installed. It first installs the aider-install package and uv, then runs aider-install to set up aider.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-15-uv.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npip install aider-install\naider-install\n```\n\n----------------------------------------\n\nTITLE: Windows Editor Configurations\nDESCRIPTION: Common editor configurations for Windows including Notepad, VSCode, and Notepad++ with appropriate wait flags.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/editor.md#2025-04-21_snippet_3\n\nLANGUAGE: bat\nCODE:\n```\nset AIDER_EDITOR=notepad\n```\n\nLANGUAGE: bat\nCODE:\n```\nset AIDER_EDITOR=\"code --wait\"\n```\n\nLANGUAGE: bat\nCODE:\n```\nset AIDER_EDITOR=\"notepad++ -multiInst -notabbar -nosession -noPlugin -waitForClose\"\n```\n\n----------------------------------------\n\nTITLE: Whole File Edit Format Example\nDESCRIPTION: An example of the 'whole' edit format where GPT returns the entire updated file with standard markdown code fences. This format performed best in the benchmarks across all models.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/benchmarks.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nHere is the updated copy of your file demo.py:\n\ndemo.py\n```python\ndef main():\n    print(\"goodbye\")\n```\n```\n\n----------------------------------------\n\nTITLE: Adding Randomized 10x Bonus Scoring in JavaScript\nDESCRIPTION: Modifies the original scoring logic to introduce a 10% chance of receiving a 10x bonus when tiles merge, adding an element of unpredictability and excitement to the game\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/2048-game.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n  // Update the score with a 10% chance of 10x bonus\n  var bonus = Math.random() <= 0.1 ? 10 : 1;\n  self.score += merged.value * bonus;\n```\n\n----------------------------------------\n\nTITLE: Hallucinated Function Call Example in JSON\nDESCRIPTION: Example showing how GPT-3.5 incorrectly generates function calls by ignoring JSON Schema specifications and creating invalid function_call fragments.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/benchmarks.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n        \"function_call\": {\n          \"name\": \"python\",\n          \"arguments\": \"def main():\\n    print(\\\"hello\\\")\\n\"\n        },\n```\n\n----------------------------------------\n\nTITLE: Running Aider with LM Studio Model\nDESCRIPTION: This command demonstrates how to start Aider with a specific LM Studio model. It requires changing to the project directory first and then running Aider with the appropriate model parameter.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/lm-studio.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\naider --model lm_studio/<your-model-name>\n```\n\n----------------------------------------\n\nTITLE: Configuring API Keys in YAML Config File for Multiple Providers\nDESCRIPTION: This YAML snippet shows how to set API keys for multiple providers (Gemini, OpenRouter, DeepSeek) in the .aider.conf.yml configuration file. Each key is listed under the 'api-key' entry and sets the corresponding environment variable.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/api-keys.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napi-key:\n- gemini=foo      # Sets env var GEMINI_API_KEY=foo\n- openrouter=bar  # Sets env var OPENROUTER_API_KEY=bar\n- deepseek=baz    # Sets env var DEEPSEEK_API_KEY=baz\n```\n\n----------------------------------------\n\nTITLE: Running Aider with Groq Models\nDESCRIPTION: Commands to navigate to project directory and start aider with Groq's Llama3-70b model, plus instructions for listing available Groq models.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/groq.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\naider --model groq/llama3-70b-8192\n\n# List models available from Groq\naider --list-models groq/\n```\n\n----------------------------------------\n\nTITLE: Running Aider via Python Module\nDESCRIPTION: Alternative command to run Aider by invoking it as a Python module directly when the standard 'aider' command is not found in the system path.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/python-m-aider.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npython -m aider\n```\n\n----------------------------------------\n\nTITLE: Configuring Git User Details\nDESCRIPTION: Commands to set up git user configuration in the local repository before running the Docker container.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install/docker.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit config user.email \"you@example.com\"\ngit config user.name \"Your Name\"\n```\n\n----------------------------------------\n\nTITLE: Instruction Prompt for GPT Code Implementation\nDESCRIPTION: The prompt used to instruct GPT to implement code based on Exercism exercise instructions. This prompt asks GPT to modify the supplied implementation file and implement the existing function stubs that will be called by unit tests.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/benchmarks.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nUse the above instructions to modify the supplied files: <implementation file>\nKeep and implement the existing function or class stubs, they will be called from unit tests.\nOnly use standard python libraries, don't suggest installing any packages.\n```\n\n----------------------------------------\n\nTITLE: Whole File Edit Format Example for GPT Code Editing\nDESCRIPTION: Example of the 'whole' edit format where GPT returns the entire updated file within markdown triple-backticks. This format provides the updated content of the whole file with the filename indicated before the code block.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-07-02-benchmarks.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nHere is the updated copy of your file demo.py:\n\ndemo.py\n```python\ndef main():\n    print(\"goodbye\")\n```\n```\n\n----------------------------------------\n\nTITLE: Example of Imperfect Diff\nDESCRIPTION: This is an example of an imperfect diff generated by GPT, where the 'show a greeting' comment line is missing.  Aider needs to be flexible enough to apply this diff, even with the missing line. The diff format shows additions and removals to the code.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/unified-diffs.md#2025-04-21_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n@@ ... @@\n-def main(args):\n-    print(\"Hello!\")\n-    return\n+def main(args):\n+    print(\"Goodbye!\")\n+    return\n```\n\n----------------------------------------\n\nTITLE: Defining diff-func Format for Code Edits in JSON\nDESCRIPTION: Demonstrates the structure of the diff-func format used for requesting code edits. It includes an explanation and a list of edits with original and updated lines.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-07-02-benchmarks.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"explanation\": \"Changed hello to goodbye.\",\n    \"edits\": [\n        {\n            \"path\": \"demo.py\",\n            \"original_lines\": [\n                \"    print(\\\"hello\\\")\"\n            ],\n            \"updated_lines\": [\n                \"    print(\\\"goodbye\\\")\"\n            ],\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Setting DeepSeek API Key in Environment Variables\nDESCRIPTION: This snippet shows how to set the DEEPSEEK_API_KEY environment variable on Mac/Linux and Windows systems. This step is necessary for authenticating with the DeepSeek API.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/deepseek.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport DEEPSEEK_API_KEY=<key> # Mac/Linux\nsetx   DEEPSEEK_API_KEY <key> # Windows, restart shell after setx\n```\n\n----------------------------------------\n\nTITLE: Logging Analytics Data in Aider (Bash)\nDESCRIPTION: This command logs all analytics data collected by Aider to a specified file. It allows users to audit the data being collected.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/more/analytics.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naider --analytics-log filename.jsonl\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Notification Command\nDESCRIPTION: Demonstrates how to set a custom notification command for Aider.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/notifications.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naider --notifications-command \"your-custom-command\"\n```\n\n----------------------------------------\n\nTITLE: Model Configuration Commands - Aider v0.29.0\nDESCRIPTION: Command line switches for configuring different AI models in Aider\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/HISTORY.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n--4-turbo-vision\n--opus\n--sonnet\n--anthropic-api-key\n--weak-model <model-name>\n```\n\n----------------------------------------\n\nTITLE: JavaScript Error Handling Example\nDESCRIPTION: Example showing how to request error handling improvements through AI comments\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/watch.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\napp.get('/sqrt/:n', (req, res) => {\n    const n = parseFloat(req.params.n);\n\n    // Add error handling for NaN and less than zero. AI!\n\n    const result = math.sqrt(n);\n    res.json({ result: result });\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Model Aliases in YAML\nDESCRIPTION: Demonstrates how to define model aliases in the .aider.conf.yml configuration file. Multiple aliases can be specified in a list format.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/model-aliases.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nalias:\n  - \"fast:gpt-4o-mini\"\n  - \"smart:o3-mini\"\n  - \"hacker:claude-3-sonnet-20240229\"\n```\n\n----------------------------------------\n\nTITLE: Creating Aider Chat Share URL Examples\nDESCRIPTION: Examples showing how to create shareable URLs for Aider chat logs using GitHub gists\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/faq.md#2025-04-21_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://gist.github.com/Aider-AI/2087ab8b64034a078c0a209440ac8be0\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://aider.chat/share/?mdurl=\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://aider.chat/share/?mdurl=https://gist.github.com/Aider-AI/2087ab8b64034a078c0a209440ac8be0\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for OpenAI API (Windows)\nDESCRIPTION: Commands to set the OPENAI_API_BASE and OPENAI_API_KEY environment variables on Windows systems. These variables are required for Aider to connect to an OpenAI compatible API endpoint. Note that the shell needs to be restarted after using setx.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/openai-compat.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsetx OPENAI_API_BASE <endpoint>\nsetx OPENAI_API_KEY <key>\n# ... restart shell after setx commands\n```\n\n----------------------------------------\n\nTITLE: Installing Pre-commit Hooks\nDESCRIPTION: This command installs pre-commit hooks for code formatting and linting, which will run automatically on each commit.\nSOURCE: https://github.com/aider-ai/aider/blob/main/CONTRIBUTING.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npre-commit install\n```\n\n----------------------------------------\n\nTITLE: Defining Command Line Model Aliases in Bash\nDESCRIPTION: Shows how to define model aliases when launching Aider using the --alias command line option. Multiple aliases can be defined using the format alias:model-name.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/model-aliases.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naider --alias \"fast:gpt-4o-mini\" --alias \"smart:o3-mini\"\n```\n\n----------------------------------------\n\nTITLE: YAML Configuration Settings\nDESCRIPTION: Example of configuring notifications in YAML configuration file.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/notifications.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# Enable notifications\nnotifications: true\n\n# Optional custom notification command\nnotifications_command: \"your-custom-command\"\n```\n\n----------------------------------------\n\nTITLE: Command Line Configuration Example - Aider v0.38.0\nDESCRIPTION: Example showing configuration of Aider command line options including vim keybindings and model metadata specification\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/HISTORY.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n--vim\n.aider.models.json\n```\n\n----------------------------------------\n\nTITLE: Python Code Edit Example - Plain Text Format\nDESCRIPTION: Example showing how code edits are specified in plain text using search/replace markers\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-08-14-code-in-json.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ngreeting.py\n<<<<<<< SEARCH\ndef greeting():\n    print(\"Hello\")\n=======\ndef greeting():\n    print(\"Goodbye\")\n>>>>>>> REPLACE\n```\n\n----------------------------------------\n\nTITLE: Running Aider Locally from Source Code\nDESCRIPTION: Step-by-step instructions for cloning the Aider repository, setting up a virtual environment, installing Aider in editable mode, and running the local version.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/faq.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Clone the repository\ngit clone git@github.com:Aider-AI/aider.git\n\n# Navigate to the project directory\ncd aider\n\n# It's recommended to make a virtual environment\n\n# Install aider in editable/development mode, \n# so it runs from the latest copy of these source files\npython -m pip install -e .\n\n# Run the local version of aider\npython -m aider\n```\n\n----------------------------------------\n\nTITLE: Defining Dependencies with Version Control\nDESCRIPTION: This snippet lists the required Python packages and their specific versions. Each package entry specifies its dependencies and purpose within the Aider AI project, allowing for accurate replication of the project environment.\nSOURCE: https://github.com/aider-ai/aider/blob/main/requirements/common-constraints.txt#2025-04-21_snippet_1\n\nLANGUAGE: Python\nCODE:\n```\nsqlalchemy[asyncio]==2.0.40\nstreamlit==1.44.1\nsympy==1.13.3\ntenacity==9.1.2\nthreadpoolctl==3.6.0\ntiktoken==0.9.0\ntokenizers==0.21.1\ntoml==0.10.2\ntorch==2.2.2\ntornado==6.4.2\ntqdm==4.67.1\ntransformers==4.51.2\ntree-sitter==0.24.0\ntree-sitter-c-sharp==0.23.1\ntree-sitter-embedded-template==0.23.2\ntree-sitter-language-pack==0.7.1\ntree-sitter-yaml==0.7.0\ntyper==0.15.2\ntyping-extensions==4.13.2\ntyping-inspect==0.9.0\ntyping-inspection==0.4.0\ntzdata==2025.2\nurllib3==2.4.0\nuv==0.6.14\nvirtualenv==20.30.0\nwatchfiles==1.0.5\nwcwidth==0.2.13\nwheel==0.45.1\nwrapt==1.17.2\nyarl==1.19.0\nzipp==3.21.0\n```\n\n----------------------------------------\n\nTITLE: Running Benchmark Inside Docker Container\nDESCRIPTION: Commands for launching the docker container, installing aider, and running the benchmark with configurable parameters\nSOURCE: https://github.com/aider-ai/aider/blob/main/benchmark/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Launch the docker container\n./benchmark/docker.sh\n\n# Inside the container, install aider as a development build\npip install -e .[dev]\n\n# Run the benchmark\n./benchmark/benchmark.py a-helpful-name-for-this-run --model gpt-3.5-turbo --edit-format whole --threads 10 --exercises-dir polyglot-benchmark\n```\n\n----------------------------------------\n\nTITLE: Listing Available Bedrock Models\nDESCRIPTION: This command lists some of the models available via Amazon Bedrock that can be used with Aider.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/bedrock.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naider --list-models bedrock/\n```\n\n----------------------------------------\n\nTITLE: Comment Style Examples\nDESCRIPTION: Examples of supported one-liner comment styles across different languages\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/watch.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n# Python and bash style\n// Javascript style\n-- SQL style\n```\n\n----------------------------------------\n\nTITLE: Running Git Diff Commands in Aider\nDESCRIPTION: Examples of using the /run command with git diff to include recent changes in the chat context. This can provide context about recent work when starting a new Aider session.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/faq.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n/run git diff HEAD~1\n```\n\nLANGUAGE: bash\nCODE:\n```\n/run git diff HEAD~3\n```\n\nLANGUAGE: bash\nCODE:\n```\n/run git diff one-branch..another-branch\n```\n\n----------------------------------------\n\nTITLE: Aider Help Command Chat Transcript - Local LLM Configuration\nDESCRIPTION: Example chat transcript showing how to use the /help command to inquire about using local LLM models with Aider, including information about Ollama and OpenAI-compatible APIs.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/troubleshooting/support.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n#### /help can i use local LLMs?\n```\n\n----------------------------------------\n\nTITLE: Styling Leaderboard Table with HTML and CSS\nDESCRIPTION: Defines the structure and styling for a table displaying leaderboard results, including model names, performance metrics, and commands.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-09-12-o1.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<table style=\"width: 100%; max-width: 800px; margin: auto; border-collapse: collapse; box-shadow: 0 2px 4px rgba(0,0,0,0.1); font-size: 14px;\">\n  <thead style=\"background-color: #f2f2f2;\">\n    <tr>\n      <th style=\"padding: 8px; text-align: left;\">Model</th>\n      <th style=\"padding: 8px; text-align: center;\">Percent completed correctly</th>\n      <th style=\"padding: 8px; text-align: center;\">Percent using correct edit format</th>\n      <th style=\"padding: 8px; text-align: left;\">Command</th>\n      <th style=\"padding: 8px; text-align: center;\">Edit format</th>\n    </tr>\n  </thead>\n  <tbody>\n    {% for row in edit_sorted %}\n      <tr style=\"border-bottom: 1px solid #ddd;\">\n        <td style=\"padding: 8px;\">{{ row.model }}</td>\n        <td style=\"padding: 8px; text-align: center;\">{{ row.pass_rate_2 }}%</td>\n        <td style=\"padding: 8px; text-align: center;\">{{ row.percent_cases_well_formed }}%</td>\n        <td style=\"padding: 8px;\"><code>{{ row.command }}</code></td>\n        <td style=\"padding: 8px; text-align: center;\">{{ row.edit_format }}</td>\n      </tr>\n    {% endfor %}\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: JavaScript Timer for Recording Indicator\nDESCRIPTION: This JavaScript code creates a timer that updates the displayed recording time during the voice recording process. It provides a dynamic time display to the user while they are speaking.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/voice.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"<script>\\nwindow.onload = function() {\\n    var counter = 0;\\n    var timer = document.getElementById('timer');\\n    setInterval(function() {\\n        counter = (counter + 0.1) % 9;\\n        timer.textContent = counter.toFixed(1);\\n    }, 100);\\n}\\n</script>\"\n```\n\n----------------------------------------\n\nTITLE: Using R1 and Sonnet with aider via API keys\nDESCRIPTION: This snippet demonstrates how to use R1 as the architect model and Sonnet as the editor model with aider. It requires setting environment variables for DeepSeek and Anthropic API keys.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-24-r1-sonnet.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport DEEPSEEK_API_KEY=<your-key>\nexport ANTHROPIC_API_KEY=<your-key>\n\naider --architect --model r1 --editor-model sonnet\n```\n\n----------------------------------------\n\nTITLE: Setting Aider Environment Variable\nDESCRIPTION: Example of setting the dark-mode option by exporting an environment variable in the shell.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport AIDER_DARK_MODE=true\n```\n\n----------------------------------------\n\nTITLE: Enabling Basic Notifications in Aider\nDESCRIPTION: Shows how to enable notifications using the command line flag.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/notifications.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naider --notifications\n```\n\n----------------------------------------\n\nTITLE: Vertex AI Claude Model Configuration\nDESCRIPTION: Configuration settings for Vertex AI's Claude models, including edit formats, token limits, and weak model specifications\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/adv-model-settings.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- name: vertex_ai/claude-3-5-sonnet-v2@20241022\n  edit_format: diff\n  weak_model_name: vertex_ai/claude-3-5-haiku@20241022\n  use_repo_map: true\n  examples_as_sys_msg: true\n  extra_params:\n    max_tokens: 8192\n  editor_model_name: vertex_ai/claude-3-5-sonnet-v2@20241022\n  editor_edit_format: editor-diff\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image for Aider\nDESCRIPTION: This command builds a Docker image for the Aider project using the provided Dockerfile.\nSOURCE: https://github.com/aider-ai/aider/blob/main/CONTRIBUTING.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t aider -f docker/Dockerfile .\n```\n\n----------------------------------------\n\nTITLE: Unknown Environment Variables Warning Message\nDESCRIPTION: Warning message shown when aider cannot determine which environment variables are required for a specified model.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/model-warnings.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nModel gpt-5: Unknown which environment variables are required.\n```\n\n----------------------------------------\n\nTITLE: Launching Aider for SWE Bench Benchmarking\nDESCRIPTION: This command demonstrates how to launch Aider for benchmarking, accepting all suggestions and using pytest for testing.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-06-02-main-swe-bench.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naider --yes --test-cmd pytest\n```\n\n----------------------------------------\n\nTITLE: Simplified Unified Diff Without Line Numbers in Python\nDESCRIPTION: This snippet demonstrates a simplified unified diff format without line numbers, focusing on the core changes to a Python function.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/unified-diffs.md#2025-04-21_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n@@ ... @@\n def main(args):\n     # show a greeting\n-    print(\"Hello!\")\n+    print(\"Goodbye!\")\n     return\n```\n\n----------------------------------------\n\nTITLE: LiteLLM API Key Environment Variables\nDESCRIPTION: Generated list of supported API key environment variables for various LLM providers through litellm integration.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/other.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n- ALEPHALPHA_API_KEY\n- ALEPH_ALPHA_API_KEY\n- ANTHROPIC_API_KEY\n- ANYSCALE_API_KEY\n- AZURE_AI_API_KEY\n- AZURE_API_KEY\n- AZURE_OPENAI_API_KEY\n- BASETEN_API_KEY\n- CEREBRAS_API_KEY\n- CLARIFAI_API_KEY\n- CLOUDFLARE_API_KEY\n- CODESTRAL_API_KEY\n- COHERE_API_KEY\n- CO_API_KEY\n- DATABRICKS_API_KEY\n- DEEPINFRA_API_KEY\n- DEEPSEEK_API_KEY\n- FIREWORKSAI_API_KEY\n- FIREWORKS_AI_API_KEY\n- FIREWORKS_API_KEY\n- GEMINI_API_KEY\n- GROQ_API_KEY\n- HUGGINGFACE_API_KEY\n- MARITALK_API_KEY\n- MISTRAL_API_KEY\n- NLP_CLOUD_API_KEY\n- NVIDIA_NIM_API_KEY\n- OLLAMA_API_KEY\n- OPENAI_API_KEY\n- OPENAI_LIKE_API_KEY\n- OPENROUTER_API_KEY\n- OR_API_KEY\n- PALM_API_KEY\n- PERPLEXITYAI_API_KEY\n- PREDIBASE_API_KEY\n- PROVIDER_API_KEY\n- REPLICATE_API_KEY\n- TOGETHERAI_API_KEY\n- VOLCENGINE_API_KEY\n- VOYAGE_API_KEY\n- WATSONX_API_KEY\n- WX_API_KEY\n- XAI_API_KEY\n- XINFERENCE_API_KEY\n```\n\n----------------------------------------\n\nTITLE: Activating Virtual Environment on Unix/macOS\nDESCRIPTION: This command activates the Python virtual environment on Unix or macOS systems.\nSOURCE: https://github.com/aider-ai/aider/blob/main/CONTRIBUTING.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsource /path/to/venv/bin/activate\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Configuration\nDESCRIPTION: Example of configuring notifications using environment variables in .env file.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/notifications.md#2025-04-21_snippet_7\n\nLANGUAGE: text\nCODE:\n```\nAIDER_NOTIFICATIONS=true\nAIDER_NOTIFICATIONS_COMMAND=your-custom-command\n```\n\n----------------------------------------\n\nTITLE: Mocking Input using create_pipe_input in Python Tests\nDESCRIPTION: This code snippet replaces the use of /dev/null with prompt_toolkit's create_pipe_input for mocking input during tests, enabling more controlled test scenarios. The snippet initializes a pipe_input to simulate input operations and redirects sys.stdin accordingly. Inputs are defined, and sys.stdin is restored after the main function execution. Limitations include ensuring correct prompt_toolkit imports and environment setup.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/complex-change.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ntests/test_main.py\n<<<<<<< ORIGINAL\n            with open(os.devnull, \"r\") as dev_null:\n                save_stdin = sys.stdin\n                sys.stdin = dev_null\n                main([])\n                sys.stdin = save_stdin\n=======\n            pipe_input = create_pipe_input()\n            save_stdin = sys.stdin\n            sys.stdin = pipe_input\n            main([], input=pipe_input, output=DummyOutput())\n            sys.stdin = save_stdin\n            pipe_input.close()\n>>>>>>> UPDATED\n```\n\nLANGUAGE: python\nCODE:\n```\ntests/test_main.py\n<<<<<<< ORIGINAL\n            with open(os.devnull, \"r\") as dev_null:\n                save_stdin = sys.stdin\n                sys.stdin = dev_null\n                main([\"foo.txt\"])\n                sys.stdin = save_stdin\n                self.assertTrue(os.path.exists(\"foo.txt\"))\n=======\n            pipe_input = create_pipe_input()\n            save_stdin = sys.stdin\n            sys.stdin = pipe_input\n            main([\"foo.txt\"], input=pipe_input, output=DummyOutput())\n            sys.stdin = save_stdin\n            pipe_input.close()\n            self.assertTrue(os.path.exists(\"foo.txt\"))\n>>>>>>> UPDATED\n```\n\nLANGUAGE: python\nCODE:\n```\ntests/test_main.py\n<<<<<<< ORIGINAL\n            with open(os.devnull, \"r\") as dev_null:\n                save_stdin = sys.stdin\n                sys.stdin = dev_null\n                main([\"--yes\", \"foo.txt\"])\n                sys.stdin = save_stdin\n                self.assertTrue(os.path.exists(\"foo.txt\"))\n=======\n            pipe_input = create_pipe_input()\n            save_stdin = sys.stdin\n            sys.stdin = pipe_input\n            main([\"--yes\", \"foo.txt\"], input=pipe_input, output=DummyOutput())\n            sys.stdin = save_stdin\n            pipe_input.close()\n            self.assertTrue(os.path.exists(\"foo.txt\"))\n>>>>>>> UPDATED\n```\n\n----------------------------------------\n\nTITLE: Initialize InputOutput class to check NO_COLOR in aider/io.py\nDESCRIPTION: This code modifies the `__init__` method of the `InputOutput` class in `aider/io.py`. It checks for the presence of the `NO_COLOR` environment variable and disables ANSI color if it is set. The console is configured with the no_color flag.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/no-color.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(\n        self,\n        pretty=True,\n        yes=False,\n        input_history_file=None,\n        chat_history_file=None,\n        input=None,\n        output=None,\n        user_input_color=\"blue\",\n        tool_output_color=None,\n        tool_error_color=\"red\",\n    ):\n        no_color = os.environ.get(\"NO_COLOR\")\n        if no_color is not None and no_color != \"\":\n            pretty = False\n\n        self.user_input_color = user_input_color if pretty else None\n        self.tool_output_color = tool_output_color if pretty else None\n        self.tool_error_color = tool_error_color if pretty else None\n        self.input = input\n        self.output = output\n        self.pretty = pretty\n        self.yes = yes\n        self.input_history_file = input_history_file\n        if chat_history_file is not None:\n            self.chat_history_file = Path(chat_history_file)\n        else:\n            self.chat_history_file = None\n\n        self.console = Console(force_terminal=not pretty, no_color=not pretty)\n```\n\n----------------------------------------\n\nTITLE: Ctags JSON Output for Python File\nDESCRIPTION: Example of the JSON output produced by running ctags on a Python source file (main.py). This output shows the structure and metadata extracted by ctags, which is used to build the repository map.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-05-25-ctags.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"_type\": \"tag\",\n  \"name\": \"main\",\n  \"path\": \"aider/main.py\",\n  \"pattern\": \"/^def main(args=None, input=None, output=None):$/\",\n  \"kind\": \"function\",\n  \"signature\": \"(args=None, input=None, output=None)\"\n}\n{\n  \"_type\": \"tag\",\n  \"name\": \"status\",\n  \"path\": \"aider/main.py\",\n  \"pattern\": \"/^    status = main()$/\",\n  \"kind\": \"variable\"\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Table of Contents with Liquid Templating in Markdown\nDESCRIPTION: This snippet uses Liquid templating syntax embedded in Markdown to create a dynamic table of contents structure for the Aider documentation site. It sorts pages by navigation order and builds a hierarchical list with up to three levels (pages, children, and grandchildren), displaying titles and descriptions for each documentation page.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/index.md#2025-04-21_snippet_0\n\nLANGUAGE: liquid\nCODE:\n```\n{% assign pages_list = site.html_pages | sort: \"nav_order\" %}\n\n<ul>\n{% for page in pages_list %}\n  {% if page.title and page.url != \"/\" and page.parent == nil and page.nav_exclude != true %}\n    <li>\n      <a href=\"{{ page.url | absolute_url }}\">{{ page.title }}</a>{% if page.description %} <span style=\"font-size: 0.9em; font-style: italic;\">— {{ page.description }}</span>{% endif %}\n      \n      {% assign children = site.html_pages | where: \"parent\", page.title | sort: \"nav_order\" %}\n      {% if children.size > 0 %}\n        <ul>\n        {% for child in children %}\n          {% if child.title %}\n            <li>\n              <a href=\"{{ child.url | absolute_url }}\">{{ child.title }}</a>{% if child.description %} <span style=\"font-size: 0.9em; font-style: italic;\">— {{ child.description }}</span>{% endif %}\n              \n              {% assign grandchildren = site.html_pages | where: \"parent\", child.title | sort: \"nav_order\" %}\n              {% if grandchildren.size > 0 %}\n                <ul>\n                {% for grandchild in grandchildren %}\n                  {% if grandchild.title %}\n                    <li>\n                      <a href=\"{{ grandchild.url | absolute_url }}\">{{ grandchild.title }}</a>{% if grandchild.description %} <span style=\"font-size: 0.9em; font-style: italic;\">— {{ grandchild.description }}</span>{% endif %}\n                    </li>\n                  {% endif %}\n                {% endfor %}\n                </ul>\n              {% endif %}\n            </li>\n          {% endif %}\n        {% endfor %}\n        </ul>\n      {% endif %}\n    </li>\n  {% endif %}\n{% endfor %}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Diff Edit Format Example for GPT Code Editing\nDESCRIPTION: Example of the 'diff' edit format where GPT provides changes in a diff-like format showing original and updated code sections within a markdown code block. This format indicates specific changes rather than the entire file.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-07-02-benchmarks.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nHere are the changes you requested to demo.py:\n\n```python\ndemo.py\n<<<<<<< ORIGINAL\n    print(\"hello\")\n=======\n    print(\"goodbye\")\n>>>>>>> UPDATED\n```\n```\n\n----------------------------------------\n\nTITLE: Listing Available Turbo Models in Aider CLI\nDESCRIPTION: Example command output showing how to list available LLM models matching 'turbo' pattern using the Aider CLI's --list-models flag.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/other.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ aider --list-models turbo\n\nAider v0.29.3-dev\nModels which match \"turbo\":\n- gpt-4-turbo-preview (openai/gpt-4-turbo-preview)\n- gpt-4-turbo (openai/gpt-4-turbo)\n- gpt-4-turbo-2024-04-09 (openai/gpt-4-turbo-2024-04-09)\n- gpt-3.5-turbo (openai/gpt-3.5-turbo)\n- ...\n```\n\n----------------------------------------\n\nTITLE: HTML for Voice Command Display\nDESCRIPTION: This HTML snippet displays the transcribed voice command within a styled box. The styling is intended to mimic a speech bubble, providing a visual cue to the user that the text represents their spoken command.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/voice.md#2025-04-21_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n\"<div style=\\\"display: inline-block; position: relative; width: 200px; background-color: #f0f0f0; border-radius: 10px; padding: 10px; color: #333; font-family: 'Comic Sans MS', 'Comic Sans', 'Marker Felt', sans-serif;\\\">\\n<span style=\\\"position: absolute; top: 0; left: 50%; transform: translate(-50%, -100%); width: 0; height: 0; border-left: 10px solid transparent; border-right: 10px solid transparent; border-bottom: 10px solid #f0f0f0;\\\"></span>\\n“&nbsp;add a factorial endpoint that uses math factorial&nbsp;”\\n</div>\"\n```\n\n----------------------------------------\n\nTITLE: Slack Integration with Apprise\nDESCRIPTION: Example of sending notifications to Slack using Apprise.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/notifications.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naider --notifications-command \"apprise -b 'Aider is ready' 'slack://your-slack-webhook-token'\"\n```\n\n----------------------------------------\n\nTITLE: Updating get_input() Method to Use PromptSession in Python\nDESCRIPTION: This snippet updates the `get_input()` method to utilize `PromptSession` instead of the `prompt` function. It instantiates a `PromptSession` object with specified parameters and then calls its `prompt()` method to receive user input, allowing for greater control over the input/output streams.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/complex-change.md#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nsession = PromptSession(\n    message=show,\n    completer=completer_instance,\n    history=FileHistory(self.input_history_file),\n    style=style,\n    reserve_space_for_menu=4,\n    complete_style=CompleteStyle.MULTI_COLUMN,\n    input=self.input,\n    output=self.output,\n)\nline = session.prompt()\n```\n\n----------------------------------------\n\nTITLE: Add test case for NO_COLOR in tests/test_io.py\nDESCRIPTION: This code adds a test case to `tests/test_io.py` to verify that the `pretty` attribute of the `InputOutput` class is set to `False` when the `NO_COLOR` environment variable is set. It uses the `unittest` and `unittest.mock` modules to mock the environment variable.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/no-color.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nimport os\nimport unittest\nfrom unittest.mock import patch\nfrom aider.io import InputOutput\n\nclass TestInputOutput(unittest.TestCase):\n    def test_no_color_environment_variable(self):\n        with patch.dict(os.environ, {\"NO_COLOR\": \"1\"}):\n            io = InputOutput()\n            self.assertFalse(io.pretty)\n\nif __name__ == \"__main__\":\n    unittest.main()\n```\n\n----------------------------------------\n\nTITLE: Matching Blockquote Font Color to Paragraph Color - HTML\nDESCRIPTION: This HTML snippet modifies the blockquote font color to align with the standard paragraph color for consistency. It maintains the overall style and usability of the content.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/chat-transcript-css.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<style>\n      .main-content blockquote {\n        border: 0.1rem solid #159957;\n        border-radius: 0.5rem;\n        color: #606c71;\n      }\n      .btn {\n        display: inline-block;\n        width: auto;\n      }\n      .btn + .btn {\n        margin-top: 0;\n      }\n    </style>\n```\n\n----------------------------------------\n\nTITLE: Implementing Time-Series Chart with Chart.js for Sonnet Performance Visualization\nDESCRIPTION: This snippet creates an interactive time-series scatter plot using Chart.js to visualize Claude 3.5 Sonnet's performance on aider's code editing benchmark over time. It displays two metrics: Pass Rate 1 (initial success) and Pass Rate 2 (success after second attempt), with dates on the x-axis and percentages on the y-axis.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-08-26-sonnet-seems-fine.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.addEventListener('DOMContentLoaded', function() {\n    var ctx = document.getElementById('sonnetPerformanceChart').getContext('2d');\n    var sonnetData = {{ site.data.sonnet-fine | jsonify }};\n\n    var chartData = sonnetData.map(item => ({\n        x: moment(item.date).toDate(),\n        y1: item.pass_rate_1,\n        y2: item.pass_rate_2\n    })).sort((a, b) => a.x - b.x);\n\n    new Chart(ctx, {\n        type: 'scatter',\n        data: {\n            datasets: [{\n                label: 'Pass Rate 1',\n                data: chartData.map(item => ({ x: item.x, y: item.y1 })),\n                backgroundColor: 'rgb(75, 192, 192)',\n                pointRadius: 5,\n                pointHoverRadius: 7\n            }, {\n                label: 'Pass Rate 2',\n                data: chartData.map(item => ({ x: item.x, y: item.y2 })),\n                backgroundColor: 'rgb(255, 99, 132)',\n                pointRadius: 5,\n                pointHoverRadius: 7\n            }]\n        },\n        options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n                y: {\n                    beginAtZero: true,\n                    title: {\n                        display: true,\n                        text: 'Pass Rate (%)',\n                        font: {\n                            size: 14\n                        }\n                    },\n                    ticks: {\n                        font: {\n                            size: 12\n                        }\n                    }\n                },\n                x: {\n                    type: 'time',\n                    time: {\n                        unit: 'day'\n                    },\n                    title: {\n                        display: true,\n                        text: 'Date',\n                        font: {\n                            size: 14\n                        }\n                    },\n                    ticks: {\n                        font: {\n                            size: 12\n                        }\n                    }\n                }\n            },\n            plugins: {\n                title: {\n                    display: true,\n                    text: 'Claude 3.5 Sonnet Performance Over Time',\n                    font: {\n                        size: 18\n                    }\n                },\n                legend: {\n                    labels: {\n                        font: {\n                            size: 14\n                        }\n                    }\n                },\n                tooltip: {\n                    callbacks: {\n                        label: function(context) {\n                            let label = context.dataset.label || '';\n                            if (label) {\n                                label += ': ';\n                            }\n                            if (context.parsed.y !== null) {\n                                label += context.parsed.y.toFixed(1) + '%';\n                            }\n                            return label;\n                        }\n                    }\n                }\n            }\n        }\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Running Different Grok Models with Aider\nDESCRIPTION: Commands demonstrating how to use different xAI Grok models including standard, fast, and mini variants. Also shows how to list available xAI models.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/xai.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Change directory into your codebase\ncd /to/your/project\n\n# Grok 3\naider --model xai/grok-3-beta\n\n# Grok 3 fast (faster, more expensive)\naider --model xai/grok-3-fast-beta\n\n# Grok 3 Mini\naider --model xai/grok-3-mini-beta\n\n# Grok 3 Mini fast (faster, more expensive)\naider --model xai/grok-3-mini-fast-beta\n\n# List models available from xAI\naider --list-models xai/\n```\n\n----------------------------------------\n\nTITLE: HTML for Recording Indicator and Progress Bar\nDESCRIPTION: This HTML snippet creates a visual indicator for voice recording, including a progress bar that animates during the recording process. It provides visual feedback to the user while they are speaking their coding instructions.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/voice.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n\"<div class=\\\"recording-line\\\">\\n    <p style=\\\"display: inline;\\\">Recording, press ENTER when done... <span id=\\\"timer\\\">3.5</span>sec</p>\\n    <div id=\\\"progress-bar\\\">\\n        <div id=\\\"progress\\\"></div>\\n    </div>\\n</div>\"\n```\n\n----------------------------------------\n\nTITLE: Setting Reasoning Effort for Grok Mini Models\nDESCRIPTION: Example command showing how to set the reasoning effort level for Grok 3 Mini models using the --reasoning-effort flag.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/xai.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naider --model xai/grok-3-mini-beta --reasoning-effort high\n```\n\n----------------------------------------\n\nTITLE: Cloning the Aider Repository\nDESCRIPTION: These commands clone the Aider repository from GitHub and navigate into the project directory.\nSOURCE: https://github.com/aider-ai/aider/blob/main/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Aider-AI/aider.git\ncd aider\n```\n\n----------------------------------------\n\nTITLE: Calculating Correlation and Printing Summary Table\nDESCRIPTION: This code snippet shows how to enhance the analysis by importing the pandas library to compute and display the correlation between population density and housing prices, allowing for a summary of results regarding the hypothesis.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/census.md#2025-04-21_snippet_4\n\nLANGUAGE: Python\nCODE:\n```\nnew_file/getdata.py\n<<<<<<< ORIGINAL\nimport requests\n=======\nimport requests\nimport pandas as pd\n>>>>>>> UPDATED\n```\n\nLANGUAGE: Python\nCODE:\n```\nnew_file/getdata.py\n<<<<<<< ORIGINAL\ndata = response.json()\n=======\ndata = response.json()\n# Convert the JSON data to a pandas DataFrame\ndf = pd.DataFrame(data[1:], columns=data[0])\ndf[['B01003_001E', 'B25077_001E']] = df[['B01003_001E', 'B25077_001E']].apply(pd.to_numeric)\n>>>>>>> UPDATED\n```\n\nLANGUAGE: Python\nCODE:\n```\nnew_file/getdata.py\n<<<<<<< ORIGINAL\nfor row in data:\n    print(row)\n=======\n# Calculate the correlation between population density and housing prices\ncorrelation = df['B01003_001E'].corr(df['B25077_001E'])\n>>>>>>> UPDATED\n```\n\n----------------------------------------\n\nTITLE: Python Diff Display\nDESCRIPTION: Displays a simple Python code diff using a triple-angle bracket format, showcasing the difference between the original and updated code. This snippet is part of a user chat response in the Aider tool.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/share/index.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nhello.py\n<<<<<<< ORIGINAL\nprint(\"hello\")\n=======\nprint(\"goodbye\")\n>>>>>>> UPDATED\n```\n\n----------------------------------------\n\nTITLE: Initializing Chart.js for Leaderboard Visualization in JavaScript\nDESCRIPTION: This snippet sets up a Chart.js visualization for the code editing leaderboard. It includes configuration for a canvas element, imports required libraries, and references a separate JavaScript file for chart initialization.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/leaderboards/edit.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<canvas id=\"editChart\" width=\"800\" height=\"450\" style=\"margin-top: 20px\"></canvas>\n<script src=\"https://unpkg.com/patternomaly/dist/patternomaly.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n<script>\n{% assign data_source = edit_sorted %}\n{% assign pass_rate_field = \"pass_rate_2\" %}\n{% include leaderboard.js %}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Setting Up HTML Chart Container and Required Libraries\nDESCRIPTION: This HTML snippet sets up a responsive container for the chart visualization and includes necessary external dependencies: Chart.js for rendering the chart, Moment.js for date handling, and a Chart.js adapter for Moment.js to enable time-based axes.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-08-26-sonnet-seems-fine.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"chart-container\" style=\"position: relative; height:400px; width:100%\">\n    <canvas id=\"sonnetPerformanceChart\"></canvas>\n</div>\n\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/chartjs-adapter-moment@1.0.1/dist/chartjs-adapter-moment.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Model Metadata for Context Window and Token Costs in JSON\nDESCRIPTION: Example of how to configure model metadata including context window size and token costs using the .aider.model.metadata.json file. This configuration specifies maximum tokens, input/output token limits, and cost per token for a specific model.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/adv-model-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"deepseek/deepseek-chat\": {\n        \"max_tokens\": 4096,\n        \"max_input_tokens\": 32000,\n        \"max_output_tokens\": 4096,\n        \"input_cost_per_token\": 0.00000014,\n        \"output_cost_per_token\": 0.00000028,\n        \"litellm_provider\": \"deepseek\",\n        \"mode\": \"chat\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: JavaScript AI Comment Example\nDESCRIPTION: Example of AI comment syntax in JavaScript for requesting new functionality\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/watch.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Write a protein folding prediction engine. AI!\n```\n\n----------------------------------------\n\nTITLE: Python Configuration for Automated Responses\nDESCRIPTION: Code snippet showing how to configure Aider's Python interface to automatically respond 'yes' to all prompts.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/scripting.md#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom aider.io import InputOutput\nio = InputOutput(yes=True)\n# ...\ncoder = Coder.create(model=model, fnames=fnames, io=io)\n```\n\n----------------------------------------\n\nTITLE: LLM-Friendly Lint Report with Context\nDESCRIPTION: Enhanced linting output format that includes code context and visual highlighting of errors using tree-sitter AST analysis.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-05-22-linting.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\napp.py:23:36: F821 undefined name 'num'\napp.py:41:16: F541 f-string is missing placeholders\n\napp.py:\n...⋮...\n  6│class LongNum:\n  7│    def __init__(self, num):\n  8│        \"\"\"\n  9│        Initialize the number.\n 10│        \"\"\"\n...⋮...\n 19│    def __str__(self):\n 20│        \"\"\"\n 21│        Render the number as a string.\n 22│        \"\"\"\n 23█        return str(num)\n 24│\n 25│\n 26│@app.route('/subtract/<int:x>/<int:y>')\n...⋮...\n 38│@app.route('/divide/<int:x>/<int:y>')\n 39│def divide(x, y):\n 40│    if y == 0:\n 41█        return f\"Error: Cannot divide by zero\"\n 42│    else:\n 43│        result = x / y\n 44│        return str(result)\n 45│\n...⋮...\n```\n\n----------------------------------------\n\nTITLE: Displaying Repository Map Samples in Python\nDESCRIPTION: This code snippet shows examples of the repository map generated by aider for two Python files: base_coder.py and commands.py. It demonstrates how the map includes important class and function definitions with their signatures.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-10-22-repomap.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\naider/coders/base_coder.py:\n⋮...\n│class Coder:\n│    abs_fnames = None\n⋮...\n│    @classmethod\n│    def create(\n│        self,\n│        main_model,\n│        edit_format,\n│        io,\n│        skip_model_availabily_check=False,\n│        **kwargs,\n⋮...\n│    def abs_root_path(self, path):\n⋮...\n│    def run(self, with_message=None):\n⋮...\n\naider/commands.py:\n⋮...\n│class Commands:\n│    voice = None\n│\n⋮...\n│    def get_commands(self):\n⋮...\n│    def get_command_completions(self, cmd_name, partial):\n⋮...\n│    def run(self, inp):\n⋮...\n```\n\n----------------------------------------\n\nTITLE: Initializing Chart.js for Benchmark Visualization in JavaScript\nDESCRIPTION: This code snippet sets up a Chart.js visualization to display benchmark results for different AI models. It includes responsive design considerations and custom styling for the chart.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-09-26-architect.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var ctx = document.getElementById('passRateChart').getContext('2d');\n    \n    // Function to determine aspect ratio and base font size based on screen width\n    function getChartSettings() {\n      if (window.innerWidth < 600) {\n        return { aspectRatio: 1, baseFontSize: 8 }; // Slightly taller for small screens\n      } else if (window.innerWidth < 800) {\n        return { aspectRatio: 1.2, baseFontSize: 10 }; // Slightly taller for small screens\n      } else {\n        return { aspectRatio: 1.4, baseFontSize: 12 }; // Slightly taller for larger screens\n      }\n    }\n\n    var chartSettings = getChartSettings();\n    var baseFontSize = chartSettings.baseFontSize;\n\n    var labels = [];\n    var data = [];\n    var colorMapping = {\n      \"claude-3.5-sonnet\": \"rgba(75, 192, 192, 0.2)\",\n      \"gpt-4o\": \"rgba(255, 99, 132, 0.2)\",\n      \"o1-preview\": \"rgba(54, 162, 235, 0.2)\",\n      \"o1-mini\": \"rgba(255, 206, 86, 0.2)\",\n      \"gpt-4o-mini\": \"rgba(153, 102, 255, 0.2)\"\n    };\n    var borderColorMapping = {\n      \"claude-3.5-sonnet\": \"rgba(75, 192, 192, 1)\",\n      \"gpt-4o\": \"rgba(255, 99, 132, 1)\",\n      \"o1-preview\": \"rgba(54, 162, 235, 1)\",\n      \"o1-mini\": \"rgba(255, 206, 86, 1)\",\n      \"gpt-4o-mini\": \"rgba(153, 102, 255, 1)\"\n    };\n    var backgroundColors = [];\n    var borderColors = [];\n    var patterns = {};\n    for (var key in colorMapping) {\n      patterns[key] = ctx.createPattern(createStripePattern(colorMapping[key]), 'repeat');\n    }\n    // ... (data population code omitted for brevity)\n    var chart = new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Pass Rate',\n          data: data,\n          backgroundColor: backgroundColors,\n          borderColor: borderColors,\n          borderWidth: 1\n        }]\n      },\n      options: {\n        // ... (chart options omitted for brevity)\n      }\n    });\n\n    // Update aspect ratio and font sizes on window resize\n    window.addEventListener('resize', function() {\n      var newSettings = getChartSettings();\n      chart.options.aspectRatio = newSettings.aspectRatio;\n      baseFontSize = newSettings.baseFontSize;\n      \n      // Update font sizes\n      chart.options.scales.y.title.font.size = baseFontSize + 6;\n      chart.options.scales.y.ticks.font.size = baseFontSize;\n      chart.options.scales.x.title.font.size = baseFontSize + 6;\n      chart.options.scales.x.ticks.font.size = baseFontSize + 4;\n      chart.options.plugins.annotation.annotations.line1.label.font.size = baseFontSize;\n      chart.options.plugins.legend.title.font.size = baseFontSize + 4;\n      chart.options.plugins.legend.labels.font.size = baseFontSize + 4;\n      \n      chart.update();\n    });\n  });\n\n  function createStripePattern(baseColor) {\n    var canvas = document.createElement('canvas');\n    canvas.width = 10;\n    canvas.height = 10;\n    var ctx = canvas.getContext('2d');\n\n    ctx.fillStyle = baseColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.1)';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(10, 10);\n    ctx.stroke();\n\n    return canvas;\n  }\n```\n\n----------------------------------------\n\nTITLE: Adding Label 'aider' Above Blockquote - HTML\nDESCRIPTION: This HTML snippet introduces a label 'aider' positioned above the blockquote. It utilizes absolute positioning to enhance the visual hierarchy of the blockquote.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/chat-transcript-css.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<style>\n      .main-content blockquote {\n        padding: 1rem;\n        position: relative;\n      }\n      .main-content blockquote::before {\n        content: \"aider\";\n        display: inline-block;\n        position: absolute;\n        top: -0.5rem;\n        left: 1rem;\n        background-color: #e0f2ef;\n        padding: 0 0.5rem;\n        font-weight: bold;\n        color: #159957;\n      }\n    </style>\n```\n\n----------------------------------------\n\nTITLE: Python Code Diff without Conventions\nDESCRIPTION: Diff showing generated Python code without applying conventions, using requests instead of httpx and omitting type hints.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/conventions.md#2025-04-21_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\n--- /dev/null\n+++ useragent.py\n@@ ... @@\n+import requests\n+\n+def check_user_agent():\n+    response = requests.get('https://httpbin.org/user-agent')\n+    user_agent = response.json().get('user-agent')\n+    return user_agent\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Reasoning Models with Command Line Options\nDESCRIPTION: Examples of using different reasoning models with their specific configuration options via command line arguments.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/reasoning.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Sonnet uses a thinking token budget\naider --model sonnet --thinking-tokens 8k\n\n# o3-mini uses low/medium/high reasoning effort\naider --model o3-mini --reasoning-effort high\n\n# R1 doesn't have configurable thinking/reasoning\naider --model r1\n```\n\n----------------------------------------\n\nTITLE: Adding JUnit 5 Dependency in XML Configuration\nDESCRIPTION: This snippet adds a dependency for JUnit 5 with test scope in a Maven POM file.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/not-code.md#2025-04-21_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n+ <dependency>\n+     <groupId>org.junit.jupiter</groupId>\n+     <artifactId>junit-jupiter-api</artifactId>\n+     <version>5.9.2</version>\n+     <scope>test</scope>\n+ </dependency>\n```\n\n----------------------------------------\n\nTITLE: Configuring Aider via .env File\nDESCRIPTION: Example of setting the dark-mode option using a .env file to define environment variables.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nAIDER_DARK_MODE=true\n```\n\n----------------------------------------\n\nTITLE: Replacing create_pipe_input() with create_input(StringIO('')) in Python\nDESCRIPTION: This snippet replaces the calls to `create_pipe_input()` with `create_input(StringIO(''))` in the test cases. This allows for providing an empty string as input to the test cases using `StringIO`.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/complex-change.md#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\npipe_input = create_input(StringIO(''))\n```\n\n----------------------------------------\n\nTITLE: High-Level Unified Diff for Function Modification in Python\nDESCRIPTION: This snippet illustrates a high-level unified diff approach, showing the entire function before and after changes, which is easier to read and less error-prone.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/unified-diffs.md#2025-04-21_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\n@@ ... @@\n-def factorial(n):\n-    if n == 0:\n-        return 1\n-    else:\n-        return n * factorial(n-1)\n+def factorial(number):\n+    if number == 0:\n+        return 1\n+    else:\n+        return number * factorial(number-1)\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation for LLM Integration\nDESCRIPTION: Contains markdown formatting and structure for documenting LLM integration options, including sections for best models, free options, and local deployment configurations.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Connecting to LLMs\nnav_order: 40\nhas_children: true\ndescription: Aider can connect to most LLMs for AI pair programming.\n---\n\n# Aider can connect to most LLMs\n{: .no_toc }\n\n[![connecting to many LLMs](/assets/llms.jpg)](https://aider.chat/assets/llms.jpg)\n\n\n## Best models\n{: .no_toc }\n\nAider works best with these models, which are skilled at editing code:\n\n- [Gemini 2.5 Pro](/docs/llms/gemini.html)\n- [DeepSeek R1 and V3](/docs/llms/deepseek.html)\n- [Claude 3.7 Sonnet](/docs/llms/anthropic.html)\n- [OpenAI o3, o4-mini and GPT-4.1](/docs/llms/openai.html)\n```\n\n----------------------------------------\n\nTITLE: Ollama Model Settings Configuration\nDESCRIPTION: YAML configuration for Ollama model settings including context window size and behavioral parameters.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-28-deepseek-down.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- name: ollama/deepseek-v3\n  edit_format: diff\n  weak_model_name: null\n  use_repo_map: true\n  send_undo_reply: false\n  lazy: false\n  reminder: sys\n  examples_as_sys_msg: true\n  cache_control: false\n  caches_by_default: true\n  use_system_prompt: true\n  use_temperature: true\n  streaming: true\n  extra_params:\n    num_ctx: 8192 # How large a context window?\n```\n\n----------------------------------------\n\nTITLE: Displaying Aider Version and Configuration Information\nDESCRIPTION: This code snippet shows the output of Aider's startup announcement, which includes the version number, models in use, Git repository information, and token usage for the repo-map.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/help.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\nAider v0.37.1-dev\nModels: gpt-4o with diff edit format, weak model gpt-3.5-turbo\nGit repo: .git with 243 files\nRepo-map: using 1024 tokens\n```\n```\n\n----------------------------------------\n\nTITLE: Logging Analytics Without Reporting in Aider (Bash)\nDESCRIPTION: This command logs analytics data to a file without actually reporting it to Aider. It's useful for inspecting collected data without sending it.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/more/analytics.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naider --analytics-log filename.jsonl --no-analytics\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Settings\nDESCRIPTION: This snippet sets the default behavior for pushing to the current branch and enables color in the Git user interface.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/not-code.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n+ [push]\n+     default = current\n+ [color]\n+     ui = auto\n```\n\n----------------------------------------\n\nTITLE: Configuring Conventions in YAML Config\nDESCRIPTION: YAML configuration examples showing how to set up automatic loading of conventions files in Aider's config file.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/conventions.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# alone\nread: CONVENTIONS.md\n\n# multiple files\nread: [CONVENTIONS.md, anotherfile.txt]\n```\n\n----------------------------------------\n\nTITLE: Ollama Configuration for DeepSeek\nDESCRIPTION: Setup instructions for running DeepSeek V3 via Ollama, including model pulling and server configuration.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-28-deepseek-down.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# Pull the model\nollama pull deepseek-v3\n\n# Start your ollama server\nollama serve\n\n# In another terminal window...\nexport OLLAMA_API_BASE=http://127.0.0.1:11434 # Mac/Linux\nsetx   OLLAMA_API_BASE http://127.0.0.1:11434 # Windows, restart shell after setx\n\naider --model ollama/deepseek-v3\n```\n\n----------------------------------------\n\nTITLE: Initializing and Configuring Charts with JavaScript and Chart.js\nDESCRIPTION: Uses Chart.js to create and configure two charts: a bar chart showing Aider's percentage of new code by release, and a stacked bar chart showing lines of new code contributed by Aider and humans.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/blame.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\ndocument.addEventListener('DOMContentLoaded', function () {\n    var blameCtx = document.getElementById('blameChart').getContext('2d');\n    var linesCtx = document.getElementById('linesChart').getContext('2d');\n    \n    var labels = [{% for row in site.data.blame %}'{{ row.end_tag }}',{% endfor %}];\n    \n    var blameData = {\n        labels: labels,\n        datasets: [{\n            label: 'Aider\\'s percent of new code by release',\n            data: [{% for row in site.data.blame %}{ x: '{{ row.end_tag }}', y: {{ row.aider_percentage }}, lines: {{ row.aider_total }} },{% endfor %}],\n            backgroundColor: 'rgba(54, 162, 235, 0.8)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1\n        }]\n    };\n\n    var linesData = {\n        labels: labels,\n        datasets: [{\n            label: 'Aider',\n            data: [{% for row in site.data.blame %}{ x: '{{ row.end_tag }}', y: {{ row.aider_total }} },{% endfor %}],\n            backgroundColor: 'rgba(54, 162, 235, 0.8)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1\n        },\n        {\n            label: 'Human',\n            data: [{% for row in site.data.blame %}{ x: '{{ row.end_tag }}', y: {{ row.total_lines | minus: row.aider_total }} },{% endfor %}],\n            backgroundColor: 'rgba(200, 200, 200, 0.8)',\n            borderColor: 'rgba(200, 200, 200, 1)',\n            borderWidth: 1\n        }]\n    };\n\n    var blameChart = new Chart(blameCtx, {\n        type: 'bar',\n        data: blameData,\n        options: {\n            maintainAspectRatio: false,\n            scales: {\n                x: {\n                    type: 'category',\n                    title: {\n                        display: true,\n                        text: 'Version'\n                    },\n                    ticks: {\n                        maxRotation: 45,\n                        minRotation: 45\n                    }\n                },\n                y: {\n                    title: {\n                        display: true,\n                        text: 'Percent of new code'\n                    },\n                    beginAtZero: true\n                }\n            },\n            plugins: {\n                legend: {\n                    display: false\n                },\n                tooltip: {\n                    callbacks: {\n                        label: function(context) {\n                            var label = 'Aider\\'s contribution';\n                            var value = context.parsed.y || 0;\n                            var lines = context.raw.lines || 0;\n                            return `${label}: ${Math.round(value)}% (${lines} lines)`;\n                        }\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'Percent of new code written by aider, by release',\n                    font: {\n                        size: 16\n                    }\n                }\n            }\n        }\n    });\n\n    var linesChart = new Chart(linesCtx, {\n        type: 'bar',\n        data: linesData,\n        options: {\n            maintainAspectRatio: false,\n            scales: {\n                x: {\n                    type: 'category',\n                    stacked: true,\n                    title: {\n                        display: true,\n                        text: 'Version'\n                    },\n                    ticks: {\n                        maxRotation: 45,\n                        minRotation: 45\n                    }\n                },\n                y: {\n                    stacked: true,\n                    title: {\n                        display: true,\n                        text: 'Lines of new code'\n                    },\n                    beginAtZero: true\n                }\n            },\n            plugins: {\n                legend: {\n                    display: true,\n                    position: 'chartArea',\n                    reverse: true\n                },\n                tooltip: {\n                    callbacks: {\n                        label: function(context) {\n                            var label = context.dataset.label;\n                            var value = context.parsed.y || 0;\n                            return `${label}: ${value}`;\n                        }\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'Lines of new code, by release',\n                    font: {\n                        size: 16\n                    }\n                }\n            }\n        }\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Diff-Func Format Example in JSON\nDESCRIPTION: Example of the diff-func format that shows how code edits are represented using original and updated line pairs. The example demonstrates changing a print statement from 'hello' to 'goodbye'.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/benchmarks.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"explanation\": \"Changed hello to goodbye.\",\n    \"edits\": [\n        {\n            \"path\": \"demo.py\",\n            \"original_lines\": [\n                \"    print(\\\"hello\\\")\"\n            ],\n            \"updated_lines\": [\n                \"    print(\\\"goodbye\\\")\"\n            ],\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example Python Code with Comment\nDESCRIPTION: This is an example of basic Python code that includes a comment. It's used to demonstrate a scenario where GPT might omit the comment when generating a diff, highlighting the need for flexible patching.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/unified-diffs.md#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nimport sys\n\ndef main(args):\n    # show a greeting\n    print(\"Hello!\")\n    return\n\nmain(sys.argv[1:])\n```\n\n----------------------------------------\n\nTITLE: Disabling Analytics in Aider (Bash)\nDESCRIPTION: This command permanently disables analytics collection in Aider. It should be run once to opt out of analytics forever.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/more/analytics.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naider --analytics-disable\n```\n\n----------------------------------------\n\nTITLE: Displaying Aider Launch Information with Infinite Output Support\nDESCRIPTION: This snippet shows the launch information displayed by Aider when using a model that supports infinite output. It includes the version number, main model, and features like diff edit format, prompt cache, and infinite output.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/more/infinite-output.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAider v0.58.0\nMain model: claude-3-5-sonnet-20240620 with diff edit format, prompt cache, infinite output\n```\n\n----------------------------------------\n\nTITLE: Example Markdown Code Conventions\nDESCRIPTION: Sample markdown content showing basic code conventions for Python development, specifying HTTP library preference and type hint requirements.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/conventions.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- Prefer httpx over requests for making http requests.\n- Use types everywhere possible.\n```\n\n----------------------------------------\n\nTITLE: MacOS Voice Notification Example\nDESCRIPTION: Example of using MacOS text-to-speech for notifications.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/notifications.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naider --notifications-command \"say 'Aider is ready'\"\n```\n\n----------------------------------------\n\nTITLE: CSS for Recording Progress Bar Animation\nDESCRIPTION: This CSS defines the styling and animation for the progress bar used during voice recording. The animation provides a visual indication of the recording progress to the user.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/voice.md#2025-04-21_snippet_1\n\nLANGUAGE: CSS\nCODE:\n```\n\".recording-line > * {\\n    display: inline-block;\\n    vertical-align: middle;\\n}\\n#progress-bar {\\n    width: 100px;\\n    height: 20px;\\n    background-color: #333;\\n    margin-left: 10px;\\n}\\n#progress {\\n    height: 100%;\\n    background-color: #f0f0f0;\\n    animation: progress 3s infinite;\\n}\\n@keyframes progress {\\n    0% { width: 10%; }\\n    20% { width: 90%; }\\n    50% { width: 30%; }\\n    60% { width: 90%; }\\n    80% { width: 20%; }\\n    100% { width: 10%; }\\n\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Refactoring Leaderboard Chart with JavaScript\nDESCRIPTION: This JavaScript code initializes a chart for the refactoring leaderboard using Chart.js. It sets up the chart configuration, including data, labels, and styling options. The script also includes functionality for searching and filtering the leaderboard table.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/leaderboards/refactor.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{% assign data_source = refac_sorted %}\n{% assign pass_rate_field = \"pass_rate_1\" %}\n{% include leaderboard.js %}\n```\n\n----------------------------------------\n\nTITLE: Function-Based Whole File Edit Format Example for GPT Code Editing\nDESCRIPTION: Example of the 'whole-func' edit format using the function call API. This format returns the updated file content within a structured JSON object, including an explanation of the changes and the full content of the file.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-07-02-benchmarks.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"explanation\": \"Changed hello to goodbye.\",\n    \"files\": [\n        {\n            \"path\": \"demo.py\",\n            \"content\": \"def main():\\n    print(\\\"goodbye\\\")\\n\"\n        }\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies\nDESCRIPTION: This snippet outlines the Python package dependencies needed for the Aider AI project. Each line lists a package along with its specific version. The dependencies may come from various components of the application, ensuring that all necessary libraries are included for proper functionality.\nSOURCE: https://github.com/aider-ai/aider/blob/main/requirements/requirements-browser.txt#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\naltair==5.5.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\nattrs==25.3.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   jsonschema\n    #   referencing\nblinker==1.9.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\ncachetools==5.5.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\ncertifi==2025.1.31\n    # via\n    #   -c requirements/common-constraints.txt\n    #   requests\ncharset-normalizer==3.4.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   requests\nclick==8.1.8\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\ngitdb==4.0.12\n    # via\n    #   -c requirements/common-constraints.txt\n    #   gitpython\ngitpython==3.1.44\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\nidna==3.10\n    # via\n    #   -c requirements/common-constraints.txt\n    #   requests\njinja2==3.1.6\n    # via\n    #   -c requirements/common-constraints.txt\n    #   altair\n    #   pydeck\njsonschema==4.23.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   altair\njsonschema-specifications==2024.10.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   jsonschema\nmarkupsafe==3.0.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   jinja2\nnarwhals==1.34.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   altair\nnumpy==1.26.4\n    # via\n    #   -c requirements/common-constraints.txt\n    #   pandas\n    #   pydeck\n    #   streamlit\npackaging==24.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   altair\n    #   streamlit\npandas==2.2.3\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\npillow==11.1.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\nprotobuf==5.29.4\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\npyarrow==19.0.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\npydeck==0.9.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\npython-dateutil==2.9.0.post0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   pandas\npytz==2025.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   pandas\nreferencing==0.36.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   jsonschema\n    #   jsonschema-specifications\nrequests==2.32.3\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\nrpds-py==0.24.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   jsonschema\n    #   referencing\nsix==1.17.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   python-dateutil\nsmmap==5.0.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   gitdb\nstreamlit==1.44.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   -r requirements/requirements-browser.in\ntenacity==9.1.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\ntoml==0.10.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\ntornado==6.4.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   streamlit\ntyping-extensions==4.13.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   altair\n    #   referencing\n    #   streamlit\ntzdata==2025.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   pandas\nurllib3==2.4.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   requests\n```\n\n----------------------------------------\n\nTITLE: Installing Aider on Mac & Linux using curl\nDESCRIPTION: A one-liner bash command to install aider on Mac and Linux systems using curl. It downloads and executes an installation script from aider.chat.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -LsSf https://aider.chat/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Aider Help Command Chat Transcript - ENV File Configuration\nDESCRIPTION: Example chat transcript showing how to use the /help command to inquire about .env file configuration in Aider, demonstrating both global and repository-specific settings.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/troubleshooting/support.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> Aider v0.42.1-dev  \n> Models: claude-3-5-sonnet with diff edit format  \n> Repo-map: using 1024 tokens  \n> Use /help \\<question\\> to ask for help, run with --help to see cmd line args  \n\n#### /help is the .env file global or for a git repo?\n```\n\n----------------------------------------\n\nTITLE: Discord Integration with Apprise\nDESCRIPTION: Example of sending notifications to Discord using Apprise.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/notifications.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naider --notifications-command \"apprise -b 'Aider is ready' 'discord://your-discord-webhook-token'\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Token Limit Error in Aider AI (Markdown)\nDESCRIPTION: This code snippet shows an example of a token limit error message in Aider AI. It includes information about input, output, and total tokens, as well as suggestions for reducing output tokens.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/troubleshooting/token-limits.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\nModel gpt-3.5-turbo has hit a token limit!\n\nInput tokens: 768 of 16385\nOutput tokens: 4096 of 4096 -- exceeded output limit!\nTotal tokens: 4864 of 16385\n\nTo reduce output tokens:\n- Ask for smaller changes in each request.\n- Break your code into smaller source files.\n- Try using a stronger model like DeepSeek V3 or Sonnet that can return diffs.\n\nFor more info: https://aider.chat/docs/token-limits.html\n```\n```\n\n----------------------------------------\n\nTITLE: Styling 'aider' Label as Tab - HTML\nDESCRIPTION: This HTML snippet modifies the styling of the 'aider' label to make it appear as a tab on the blockquote, utilizing positioning and background color adjustments.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/chat-transcript-css.md#2025-04-21_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<style>\n      .main-content blockquote::before {\n        padding: 0.25rem 0.5rem;\n        background-color: #e0ecf4;\n        border-top-left-radius: 0.5rem;\n        border-top-right-radius: 0.5rem;\n      }\n    </style>\n```\n\n----------------------------------------\n\nTITLE: Displaying Git Blame Statistics Table in Markdown\nDESCRIPTION: A markdown table showing the breakdown of code written by Aider in the current codebase according to git blame. The table lists each file in the repository along with the number of lines attributed to Aider and the corresponding percentage.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-05-24-self-assembly.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| File | Lines | Percent |\n|---|---:|---:|\n|aider/args.py| 6 of 449 | 1.3% |\n|aider/coders/base_coder.py| 37 of 1354 | 2.7% |\n|aider/coders/editblock_coder.py| 14 of 507 | 2.8% |\n|aider/coders/editblock_func_coder.py| 6 of 141 | 4.3% |\n|aider/coders/udiff_coder.py| 2 of 421 | 0.5% |\n|aider/coders/wholefile_coder.py| 5 of 146 | 3.4% |\n|aider/coders/wholefile_func_coder.py| 4 of 134 | 3.0% |\n|aider/commands.py| 67 of 703 | 9.5% |\n|aider/diffs.py| 15 of 129 | 11.6% |\n|aider/gui.py| 2 of 533 | 0.4% |\n|aider/history.py| 19 of 124 | 15.3% |\n|aider/io.py| 55 of 368 | 14.9% |\n|aider/linter.py| 30 of 240 | 12.5% |\n|aider/main.py| 30 of 466 | 6.4% |\n|aider/mdstream.py| 3 of 122 | 2.5% |\n|aider/models.py| 22 of 549 | 4.0% |\n|aider/repo.py| 19 of 266 | 7.1% |\n|aider/repomap.py| 17 of 518 | 3.3% |\n|aider/scrape.py| 12 of 199 | 6.0% |\n|aider/versioncheck.py| 10 of 37 | 27.0% |\n|aider/voice.py| 9 of 104 | 8.7% |\n|benchmark/benchmark.py| 33 of 730 | 4.5% |\n|benchmark/over_time.py| 32 of 60 | 53.3% |\n|benchmark/swe_bench_lite.py| 40 of 71 | 56.3% |\n|scripts/blame.py| 55 of 212 | 25.9% |\n|scripts/versionbump.py| 96 of 123 | 78.0% |\n|setup.py| 11 of 47 | 23.4% |\n|tests/test_coder.py| 48 of 612 | 7.8% |\n|tests/test_commands.py| 135 of 588 | 23.0% |\n|tests/test_editblock.py| 23 of 403 | 5.7% |\n|tests/test_io.py| 30 of 65 | 46.2% |\n|tests/test_main.py| 13 of 239 | 5.4% |\n|tests/test_models.py| 6 of 28 | 21.4% |\n|tests/test_repo.py| 2 of 296 | 0.7% |\n|tests/test_repomap.py| 70 of 217 | 32.3% |\n|tests/test_udiff.py| 7 of 119 | 5.9% |\n|tests/test_wholefile.py| 37 of 321 | 11.5% |\n| **Total** | **1022 of 14219** | 7.2% |\n```\n\n----------------------------------------\n\nTITLE: Running Aider Full Docker Container\nDESCRIPTION: Commands to pull and run the full version of Aider in a Docker container with all optional extras included.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install/docker.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull paulgauthier/aider-full\ndocker run -it --user $(id -u):$(id -g) --volume $(pwd):/app paulgauthier/aider-full --openai-api-key $OPENAI_API_KEY [...other aider args...]\n```\n\n----------------------------------------\n\nTITLE: Sample Repository Map in Python\nDESCRIPTION: A sample of the repository map for aider, showing the structure and contents of main.py and io.py files. This map includes functions, variables, classes, and their signatures.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-05-25-ctags.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\naider/\n   ...\n   main.py:\n      function\n         main (args=None, input=None, output=None)\n      variable\n         status\n   ...\n   io.py:\n      class\n         FileContentCompleter\n         InputOutput\n      FileContentCompleter\n         member\n            __init__ (self, fnames, commands)\n            get_completions (self, document, complete_event)\n      InputOutput\n         member\n            __init__ (self, pretty, yes, input_history_file=None, chat_history_file=None, input=None, output=None)\n            ai_output (self, content)\n            append_chat_history (self, text, linebreak=False, blockquote=False)\n            confirm_ask (self, question, default=\"y\")\n            get_input (self, fnames, commands)\n            prompt_ask (self, question, default=None)\n            tool (self, *messages, log_only=False)\n            tool_error (self, message)\n   ...\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Aider with Pipx on Replit\nDESCRIPTION: Commands to install pipx and then run the aider-chat tool through pipx on Replit. This method avoids a common error with missing libstdc++.so.6 library that occurs when running aider directly after installation.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/replit-pipx.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install pipx\npipx run aider-chat ...normal aider args...\n```\n\n----------------------------------------\n\nTITLE: Pushbullet Integration with Apprise\nDESCRIPTION: Example of sending notifications to Pushbullet using Apprise.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/notifications.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naider --notifications-command \"apprise -b 'Aider is ready' 'pbul://your-pushbullet-access-token'\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Aider Version and Model Information\nDESCRIPTION: This snippet shows the output when running Aider, displaying the version number, the model being used, and the edit format.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/troubleshooting/edit-errors.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAider v0.50.2-dev\nModels: claude-3-5-sonnet-20240620 with ♾️ diff edit format\n```\n\n----------------------------------------\n\nTITLE: Styling Chart Containers with CSS\nDESCRIPTION: Applies CSS styles to the chart containers to set their position, width, and height.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/blame.md#2025-04-21_snippet_1\n\nLANGUAGE: CSS\nCODE:\n```\n.chart-container {\n    position: relative;\n    width: 100%;\n    height: 300px;\n}\n```\n\n----------------------------------------\n\nTITLE: Running Pre-commit Hooks Manually\nDESCRIPTION: This command allows manual execution of pre-commit hooks on all files in the repository.\nSOURCE: https://github.com/aider-ai/aider/blob/main/CONTRIBUTING.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\npre-commit run --all-files\n```\n\n----------------------------------------\n\nTITLE: Running Aider Core Docker Container\nDESCRIPTION: Commands to pull and run the core version of Aider in a Docker container. Maps the current directory to /app and uses host user permissions.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install/docker.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull paulgauthier/aider\ndocker run -it --user $(id -u):$(id -g) --volume $(pwd):/app paulgauthier/aider --openai-api-key $OPENAI_API_KEY [...other aider args...]\n```\n\n----------------------------------------\n\nTITLE: Updating the API Key in the Script\nDESCRIPTION: This snippet shows the process of updating the API key in the getdata.py script with a new valid API key, ensuring the script can authenticate correctly when accessing the API.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/census.md#2025-04-21_snippet_2\n\nLANGUAGE: Python\nCODE:\n```\nnew_file/getdata.py\n<<<<<<< ORIGINAL\napi_key = 'your_api_key'\n=======\napi_key = '4ae31ed2a0f0dd62609e51cd95deadbeefe7774f'\n>>>>>>> UPDATED\n```\n\n----------------------------------------\n\nTITLE: Error Correction Prompt for Failed Tests\nDESCRIPTION: The follow-up prompt sent to GPT when tests fail, including the test error output. This gives GPT a second chance to fix its implementation based on the actual test failures.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/benchmarks.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nSee the testing errors above.\nThe tests are correct.\nFix the code in <implementation file> to resolve the errors.\n```\n\n----------------------------------------\n\nTITLE: Displaying Dependency Conflict Error in Bash\nDESCRIPTION: This snippet shows an example of a dependency conflict error message that may occur when installing Aider with incompatible package versions.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/troubleshooting/imports.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naider-chat 0.23.0 requires somepackage==X.Y.Z, but you have somepackage U.W.V which is incompatible.\n```\n\n----------------------------------------\n\nTITLE: QwQ Chart Styling and Script Implementation\nDESCRIPTION: HTML canvas element setup with Chart.js integration for displaying QwQ-related data visualization.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-12-03-qwq.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<canvas id=\"qwqChart\" width=\"800\" height=\"500\" style=\"margin: 20px 0\"></canvas>\n\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n<script>\n{% include qwq-chart.js %}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Downloading ACS Data Using Python Requests\nDESCRIPTION: This code snippet demonstrates how to use the requests library in Python to download data from the American Community Survey (ACS) using the Census Bureau's API. It defines the API endpoint, sets parameters for the requested data, and processes the response in JSON format.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/census.md#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\nimport requests\n\n# Replace 'your_api_key' with your actual API key\napi_key = 'your_api_key'\n\n# Define the API endpoint and parameters\nurl = 'https://api.census.gov/data/2019/acs/acs5'\nparams = {\n    'get': 'NAME,B01001_001E',  # Variables to retrieve (NAME: Geographic area name, B01001_001E: Total population)\n    'for': 'state:*',  # Geographic area (all states)\n    'key': api_key\n}\n\n# Send the request and parse the response\nresponse = requests.get(url, params=params)\ndata = response.json()\n\n# Print the data\nfor row in data:\n    print(row)\n```\n\n----------------------------------------\n\nTITLE: Updating Command Line Arguments Documentation in README\nDESCRIPTION: Demonstrates changes to command line arguments in README.md, including additions and modifications of configuration options\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/update-docs.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `--input-history-file INPUT_HISTORY_FILE`: Specify the chat input history file (default: .aider.input.history). Override the default with the environment variable `AIDER_INPUT_HISTORY_FILE`.\n- `--chat-history-file CHAT_HISTORY_FILE`: Specify the chat history file (default: .aider.chat.history.md). Override the default with the environment variable `AIDER_CHAT_HISTORY_FILE`.\n- `--model MODEL`: Specify the model to use for the main chat (default: gpt-4). Override the default with the environment variable `AIDER_MODEL`.\n- `-3`: Use gpt-3.5-turbo model for the main chat (basically won't work). No environment variable override.\n- `--no-pretty`: Disable pretty, colorized output. Override the default with the environment variable `AIDER_PRETTY` (default: 1 for enabled, 0 for disabled).\n- `--apply FILE`: Apply the changes from the given file instead of running the chat (debug).\n- `--no-auto-commits`: Disable auto commit of changes. Override the default with the environment variable `AIDER_AUTO_COMMITS` (default: 1 for enabled, 0 for disabled).\n- `--show-diffs`: Show diffs when committing changes (default: False). Override the default with the environment variable `AIDER_SHOW_DIFFS` (default: 0 for False, 1 for True).\n- `--yes`: Always say yes to every confirmation (default: False).\n```\n\n----------------------------------------\n\nTITLE: Generating Interactive Leaderboard Table with HTML and Liquid\nDESCRIPTION: Creates a table to display LLM performance results on coding exercises. Includes controls for searching and view mode selection. Uses Liquid templating to populate table rows dynamically from site data.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/leaderboards/index.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<table style=\"width: 100%; max-width: 800px; margin: auto; border-collapse: collapse; box-shadow: 0 2px 4px rgba(0,0,0,0.1); font-size: 14px;\">\n  <thead style=\"background-color: #f2f2f2;\">\n    <tr>\n      <th style=\"padding: 8px; width: 40px; text-align: center; vertical-align: middle;\">\n        <input type=\"checkbox\" id=\"select-all-checkbox\" style=\"display: none; cursor: pointer; vertical-align: middle;\">\n      </th>\n      <th style=\"padding: 8px; text-align: left;\">Model</th>\n      <th style=\"padding: 8px; text-align: center; width: 25%\">Percent correct</th>\n      <th style=\"padding: 8px; text-align: center; width: 25%\">Cost</th>\n      <th style=\"padding: 8px; text-align: left;\" class=\"col-command\">Command</th>\n      <th style=\"padding: 8px; text-align: center; width: 10%\" class=\"col-conform\">Correct edit format</th>\n      <th style=\"padding: 8px; text-align: left; width: 10%\" class=\"col-edit-format\">Edit Format</th>\n    </tr>\n  </thead>\n  <tbody>\n    {% assign max_cost = 0 %}\n    {% for row in site.data.polyglot_leaderboard %}\n      {% if row.total_cost > max_cost %}\n        {% assign max_cost = row.total_cost %}\n      {% endif %}\n    {% endfor %}\n    {% if max_cost == 0 %}{% assign max_cost = 1 %}{% endif %}\n    {% assign edit_sorted = site.data.polyglot_leaderboard | sort: 'pass_rate_2' | reverse %}\n    {% for row in edit_sorted %}\n      {% assign row_index = forloop.index0 %}\n      <tr id=\"main-row-{{ row_index }}\">\n        <!-- Table row content -->\n      </tr>\n      <tr class=\"details-row\" id=\"details-{{ row_index }}\" style=\"display: none; background-color: #f9f9f9;\">\n        <!-- Details row content -->\n      </tr>\n    {% endfor %}\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Preparing Git Diff Output for Aider\nDESCRIPTION: Example of preparing git diff output outside of Aider and providing it as a file for Aider to read. This allows for more complex diff preparations.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/faq.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ git diff -C10 v1..v2 > v1-v2-changes.diff\n$ aider --read v1-v2-changes.diff\n```\n\n----------------------------------------\n\nTITLE: Diff Edit Format Example\nDESCRIPTION: An example of the 'diff' edit format where GPT specifies changes using original and updated code blocks. This format allows for targeted edits instead of returning the whole file.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/benchmarks.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nHere are the changes you requested to demo.py:\n\n```python\ndemo.py\n<<<<<<< ORIGINAL\n    print(\"hello\")\n=======\n    print(\"goodbye\")\n>>>>>>> UPDATED\n```\n```\n\n----------------------------------------\n\nTITLE: Creating SSH Host Entry\nDESCRIPTION: This snippet creates a Host entry 'my-server' which specifies a JumpHost and various connection parameters for SSH.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/not-code.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n+ Host my-server\n+     HostName 192.168.1.100\n+     User deploy\n+     Port 2222\n+     IdentityFile ~/.ssh/deploy_key\n+     ProxyJump bastion.example.com\n```\n\n----------------------------------------\n\nTITLE: Displaying Post Date in Markdown/Liquid\nDESCRIPTION: This snippet uses Liquid templating to conditionally display the post date if it exists. It formats the date using a specific pattern.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/benchmarks-0125.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% if page.date %}\n<p class=\"post-date\">{{ page.date | date: \"%B %d, %Y\" }}</p>\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Conditional Tree-Sitter Package Import\nDESCRIPTION: Specifies different tree-sitter package versions based on Python version compatibility. Uses version 0.23.2 for Python versions below 3.10 and version 0.24.0 for Python 3.10 and above.\nSOURCE: https://github.com/aider-ai/aider/blob/main/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: requirements.txt\nCODE:\n```\ntree-sitter==0.23.2; python_version < \"3.10\"\ntree-sitter==0.24.0; python_version >= \"3.10\"\n```\n\n----------------------------------------\n\nTITLE: Ctags JSON Output Format\nDESCRIPTION: Example of the JSON output produced by running ctags with --fields=+S --output-format=json flags on a Python source file.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/ctags.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"_type\": \"tag\",\n  \"name\": \"main\",\n  \"path\": \"aider/main.py\",\n  \"pattern\": \"/^def main(args=None, input=None, output=None):$/\",\n  \"kind\": \"function\",\n  \"signature\": \"(args=None, input=None, output=None)\"\n}\n{\n  \"_type\": \"tag\",\n  \"name\": \"status\",\n  \"path\": \"aider/main.py\",\n  \"pattern\": \"/^    status = main()$/\",\n  \"kind\": \"variable\"\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Chart.js for Benchmark Results Visualization\nDESCRIPTION: This JavaScript code initializes a Chart.js visualization for displaying benchmark results. It uses data from a Jekyll data file and includes configuration for chart appearance and interactivity.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-12-21-polyglot.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script src=\"https://unpkg.com/patternomaly/dist/patternomaly.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n<script>\n{% assign data_source = edit_sorted %}\n{% assign pass_rate_field = \"pass_rate_2\" %}\n{% assign highlight_model = \"o1-2024\" %}\n{% include leaderboard.js %}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Adding Markdown Installation Instructions\nDESCRIPTION: This snippet adds an installation section in a Markdown file with instructions for Homebrew and PyPI.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/not-code.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n+ ## Installation\n+ ```\n+ # Homebrew\n+ brew install cool-app-10k\n+ \n+ # PyPI\n+ pipx install cool-app-10k\n+ ```\n```\n\n----------------------------------------\n\nTITLE: Adding Bounce Animation to Dropdown Menu with CSS\nDESCRIPTION: This CSS code snippet adds a bounce animation to a dropdown menu. It defines a keyframe animation called `expand` that scales the dropdown menu vertically, creating a bounce effect when it expands. The `transform-origin` is set to `top` to ensure the scaling starts from the top of the element.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/css-exercises.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n\n.visible {\n  display: block;\n  animation: expand 0.3s ease-out;\n  transform-origin: top;\n}\n\n@keyframes expand {\n  0% {\n    transform: scaleY(0);\n  }\n  80% {\n    transform: scaleY(1.1);\n  }\n  100% {\n    transform: scaleY(1);\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Saving Download Script as getdata.py\nDESCRIPTION: This portion of the transcript indicates the process of saving the previously mentioned Python code snippet into a new file named getdata.py, enabling easy execution of the download script.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/census.md#2025-04-21_snippet_1\n\nLANGUAGE: Python\nCODE:\n```\nnew_file/getdata.py\n<<<<<<< ORIGINAL\n=======\nimport requests\n\n# Replace 'your_api_key' with your actual API key\napi_key = 'your_api_key'\n\n# Define the API endpoint and parameters\nurl = 'https://api.census.gov/data/2019/acs/acs5'\nparams = {\n    'get': 'NAME,B01001_001E',  # Variables to retrieve (NAME: Geographic area name, B01001_001E: Total population)\n    'for': 'state:*',  # Geographic area (all states)\n    'key': api_key\n}\n\n# Send the request and parse the response\nresponse = requests.get(url, params=params)\ndata = response.json()\n\n# Print the data\nfor row in data:\n    print(row)\n>>>>>>> UPDATED\n```\n\n----------------------------------------\n\nTITLE: Defining Metadata for LLM Code Editing Benchmark Page in Markdown\nDESCRIPTION: This snippet defines the metadata for a page about quantitative benchmarks of LLM code editing skill. It includes properties such as the highlight image path, navigation order, page description, and indicates that the page has child pages.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/leaderboards/index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nhighlight_image: /assets/leaderboard.jpg\nnav_order: 950\ndescription: Quantitative benchmarks of LLM code editing skill.\nhas_children: true\n---\n```\n\n----------------------------------------\n\nTITLE: Initializing Recording Parameters in JavaScript\nDESCRIPTION: Script block that sets up recording configuration parameters including the recording ID and source URL for playback purposes.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/recordings/dont-drop-original-read-files.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst recording_id = \"dont-drop-original-read-files\";\nconst recording_url = \"https://gist.githubusercontent.com/paul-gauthier/c2e7b2751925fb7bb47036cdd37ec40d/raw/08e62ab539e2b5d4b52c15c31d9a0d241377c17c/707583.cast\";\n```\n\n----------------------------------------\n\nTITLE: Repository Map Example in Python\nDESCRIPTION: Sample repository map showing the structure and symbols defined in main.py and io.py, including functions, classes, and their signatures.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/ctags.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\naider/\n   ...\n   main.py:\n      function\n         main (args=None, input=None, output=None)\n      variable\n         status\n   ...\n   io.py:\n      class\n         FileContentCompleter\n         InputOutput\n      FileContentCompleter\n         member\n            __init__ (self, fnames, commands)\n            get_completions (self, document, complete_event)\n      InputOutput\n         member\n            __init__ (self, pretty, yes, input_history_file=None, chat_history_file=None, input=None, output=None)\n            ai_output (self, content)\n            append_chat_history (self, text, linebreak=False, blockquote=False)\n            confirm_ask (self, question, default=\"y\")\n            get_input (self, fnames, commands)\n            prompt_ask (self, question, default=None)\n            tool (self, *messages, log_only=False)\n            tool_error (self, message)\n   ...\n```\n\n----------------------------------------\n\nTITLE: Customizing Graph Border Style in Matplotlib\nDESCRIPTION: Adds code to modify the graph border (spines) appearance by setting a light gray color (#DDDDDD) and reducing line width to 0.5. This creates a more subtle border effect around the plot.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-05-13-models-over-time.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfor spine in ax.spines.values():\n    spine.set_edgecolor('#DDDDDD')\n    spine.set_linewidth(0.5)\n\ncolors = ['red' if 'gpt-4' in model else 'green' if 'gpt-3.5' in model else 'blue' for model in models]\n```\n\n----------------------------------------\n\nTITLE: Setting VSCode Auto-Formatting Options\nDESCRIPTION: This snippet enables auto-formatting on save in VSCode and sets the default formatter to Prettier.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/not-code.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n+ \"editor.formatOnSave\": true,\n+ \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n```\n\n----------------------------------------\n\nTITLE: Basic Unified Diff Example in Python\nDESCRIPTION: Simple example showing a unified diff format for changing a greeting message from 'Hello!' to 'Goodbye!' in Python code.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-12-21-unified-diffs.md#2025-04-21_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n--- a/greeting.py\n+++ b/greeting.py\n@@ -1,5 +1,5 @@\n def main(args):\n     # show a greeting\n-    print(\"Hello!\")\n+    print(\"Goodbye!\")\n     return\n```\n\n----------------------------------------\n\nTITLE: Calculating Circle Area - JavaScript\nDESCRIPTION: The 'calculateCircleArea' function computes the area of a circle given its radius, using the formula πr².\nSOURCE: https://github.com/aider-ai/aider/blob/main/tests/fixtures/sample-code-base-repo-map.txt#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction calculateCircleArea(radius) {\n    return Math.PI * radius * radius;\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Header Configuration for Jekyll\nDESCRIPTION: Jekyll front matter configuration for the page, setting title, parent page, and navigation order parameters.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/leaderboards/by-release-date.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Scores by release date\nparent: Aider LLM Leaderboards\nnav_order: 200\n---\n```\n\n----------------------------------------\n\nTITLE: Generating Benchmark Statistics Report\nDESCRIPTION: Command for generating a yaml-based statistics report for a specific benchmarking run\nSOURCE: https://github.com/aider-ai/aider/blob/main/benchmark/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Generate stats for a specific benchmarking directory\n./benchmark/benchmark.py --stats tmp.benchmarks/YYYY-MM-DD-HH-MM-SS--a-helpful-name-for-this-run\n```\n\n----------------------------------------\n\nTITLE: Changing Paddle Size and Color in Python\nDESCRIPTION: This snippet increases the size of the paddles and changes their colors.  The paddle width is increased to 15 and the height to 80. The right paddle's color is set to blue during the instantiation in the Paddle class. The initial color is set based on x position of the paddle, so the right paddle will always be blue.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/pong.md#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nself.width = 15\nself.height = 80\nself.image = pygame.Surface((self.width, self.height))\nself.color = (255, 255, 255) if x < screen_width // 2 else (0, 0, 255)\nself.image.fill(self.color)\n```\n\n----------------------------------------\n\nTITLE: Increasing Ball Speed on Paddle Collision in Python\nDESCRIPTION: This snippet modifies the collide_with method in the Ball class to increase the ball's speed by 10% each time it collides with a paddle.  Both the x and y components of the ball's velocity are increased.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/pong.md#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef collide_with(self, paddle):\n    if self.rect.colliderect(paddle.rect):\n        self.dx = -self.dx * 1.1\n        self.dy *= 1.1\n```\n\n----------------------------------------\n\nTITLE: Python Function with Brace Character Example\nDESCRIPTION: Demonstrates how to use tagged delimiters to include code containing brace characters in chat messages. Shows a simple Python function that prints a string containing a closing brace.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/multi-line.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndef hello():\n    print(\"Hello}\")  # Note: contains a brace\n```\n\n----------------------------------------\n\nTITLE: Benchmark Report YAML Example\nDESCRIPTION: Sample YAML output showing key statistics and configuration details for a benchmark run\nSOURCE: https://github.com/aider-ai/aider/blob/main/benchmark/README.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- dirname: 2024-07-04-14-32-08--claude-3.5-sonnet-diff-continue\n  test_cases: 225\n  model: claude-3.5-sonnet\n  edit_format: diff\n  commit_hash: 35f21b5\n  pass_rate_1: 57.1\n  pass_rate_2: 77.4\n  percent_cases_well_formed: 99.2\n  error_outputs: 23\n  num_malformed_responses: 4\n  num_with_malformed_responses: 1\n  user_asks: 2\n  lazy_comments: 0\n  syntax_errors: 1\n  indentation_errors: 0\n  exhausted_context_windows: 0\n  test_timeouts: 1\n  command: aider --sonnet\n  date: 2024-07-04\n  versions: 0.42.1-dev\n  seconds_per_case: 17.6\n  total_cost: 3.6346\n```\n\n----------------------------------------\n\nTITLE: Reducing Ball Speed in Python\nDESCRIPTION: This snippet modifies the Ball class to reduce the initial speed of the ball by half. It achieves this by changing the multiplication factor for self.dx and self.dy from 4 to 2 during the ball's initialization, resulting in slower ball movement.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/pong.md#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nself.dx = random.choice([-1, 1]) * 2\nself.dy = random.choice([-1, 1]) * 2\n```\n\n----------------------------------------\n\nTITLE: Python Refactoring Example\nDESCRIPTION: Example demonstrating how to use multiple AI comments to coordinate a refactoring task\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/watch.md#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@app.route('/factorial/<int:n>')\ndef factorial(n):\n    if n < 0:\n        return jsonify(error=\"Factorial is not defined for negative numbers\"), 400\n\n    # AI: Refactor this code...\n\n    result = 1\n    for i in range(1, n + 1):\n        result *= i\n\n    # ... into to a compute_factorial() function. AI!\n\n    return jsonify(result=result)\n```\n\n----------------------------------------\n\nTITLE: Initializing Recording Configuration in JavaScript\nDESCRIPTION: JavaScript code that configures recording ID and URL parameters for a demo recording playback system\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/recordings/auto-accept-architect.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst recording_id = \"auto-accept-architect\";\nconst recording_url = \"https://gist.githubusercontent.com/paul-gauthier/e7383fbc29c9bb343ee6fb7ee5d77e15/raw/c2194334085304bb1c6bb80814d791704d9719b6/707774.cast\";\n```\n\n----------------------------------------\n\nTITLE: Function Call Edit Format Example\nDESCRIPTION: An example of the 'whole-func' format that uses OpenAI's function calling API to return updates. This format performed worse than plain text formats in the benchmarks.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/benchmarks.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"explanation\": \"Changed hello to goodbye.\",\n    \"files\": [\n        {\n            \"path\": \"demo.py\",\n            \"content\": \"def main():\\n    print(\\\"goodbye\\\")\\n\"\n        }\n}\n```\n\n----------------------------------------\n\nTITLE: Benchmarking Setup and Preparation\nDESCRIPTION: Bash commands for cloning repositories, creating benchmark directories, and preparing the docker container for benchmarking\nSOURCE: https://github.com/aider-ai/aider/blob/main/benchmark/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Clone the aider repo\ngit clone https://github.com/Aider-AI/aider.git\n\n# Create the scratch dir to hold benchmarking results inside the main aider dir:\ncd aider\nmkdir tmp.benchmarks\n\n# Clone the repo with the exercises\ngit clone https://github.com/Aider-AI/polyglot-benchmark tmp.benchmarks/polyglot-benchmark\n\n# Build the docker container\n./benchmark/docker_build.sh\n```\n\n----------------------------------------\n\nTITLE: Initializing Paddles/Ball and Game Loop Updates in Python\nDESCRIPTION: This code initializes the left and right paddles, along with the ball. The game loop handles user input for paddle movement using the 'w', 's', 'UP', and 'DOWN' keys. It also updates the ball position, checks for collisions with paddles, draws the game objects, and updates the display with a delay to control the game speed.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/pong.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n# Initialize paddles and ball\nleft_paddle = Paddle(10, screen_height // 2 - 30)\nright_paddle = Paddle(screen_width - 20, screen_height // 2 - 30)\nball = Ball()\n\n# Game loop\nrunning = True\nwhile running:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\n\n    # Handle user input\n    keys = pygame.key.get_pressed()\n    if keys[pygame.K_w]:\n        left_paddle.move(-5)\n    if keys[pygame.K_s]:\n        left_paddle.move(5)\n    if keys[pygame.K_UP]:\n        right_paddle.move(-5)\n    if keys[pygame.K_DOWN]:\n        right_paddle.move(5)\n\n    # Update game objects\n    ball.update()\n    ball.collide_with(left_paddle)\n    ball.collide_with(right_paddle)\n\n    # Draw game objects\n    screen.fill((0, 0, 0))\n    screen.blit(left_paddle.image, left_paddle.rect)\n    screen.blit(right_paddle.image, right_paddle.rect)\n    screen.blit(ball.image, ball.rect)\n\n    # Update the display\n    pygame.display.flip()\n    pygame.time.delay(16)\n```\n\n----------------------------------------\n\nTITLE: Configuration File Example\nDESCRIPTION: Example of configuring a specific file to always load in the .aider.conf.yml configuration file\nSOURCE: https://github.com/aider-ai/aider/blob/main/HISTORY.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nfile: CONVENTIONS.md\n```\n\n----------------------------------------\n\nTITLE: Displaying Linting Error with Context in Python\nDESCRIPTION: Example showing how aider displays a linting error (undefined variable 'num') within the context of the source code tree structure. The error occurs in LongNum class's expound method.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-05-22-swe-bench-lite.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\napp.py:23:36: F821 undefined name 'num'  \n\napp.py:  \n...⋮...  \n  6│class LongNum:  \n...⋮...  \n 19│    def expound(self, threshold):  \n 20│        number = self.basis  \n 21│        while number < threshold:  \n 22│            number *= self.factor  \n 23█        return num  \n 24│  \n 25│  \n...⋮...\n```\n\n----------------------------------------\n\nTITLE: Date Generation Script using Python and Git\nDESCRIPTION: A Python script that uses subprocess to get the last modified date of the privacy policy file from Git and formats it as a readable date string. The script executes a git log command and processes the timestamp to display the last update date.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/legal/privacy.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport subprocess\nimport datetime\n\nresult = subprocess.run(['git', 'log', '-1', '--format=%ct', 'aider/website/docs/legal/privacy.md'], capture_output=True, text=True)\nif result.returncode == 0:\n    timestamp = int(result.stdout.strip())\n    date = datetime.datetime.fromtimestamp(timestamp)\n    cog.out(f\"{date.strftime('%B %d, %Y.')}\")\n```\n\n----------------------------------------\n\nTITLE: Recording Player Configuration Script\nDESCRIPTION: JavaScript code that configures the recording player by setting the recording ID and URL for the tree-sitter-language-pack integration demonstration.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/recordings/tree-sitter-language-pack.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst recording_id = \"tree-sitter-language-pack\";\nconst recording_url = \"https://gist.githubusercontent.com/paul-gauthier/a990333449b09e2793088a45eb1587f4/raw/364124781cca282907ccdc7567cdfc588a9b438b/tmp.redacted.cast\";\n```\n\n----------------------------------------\n\nTITLE: Imperfect GPT-generated Diff\nDESCRIPTION: An example of a flawed diff that GPT might produce, missing the comment line and demonstrating the type of mistake aider aims to handle flexibly.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-12-21-unified-diffs.md#2025-04-21_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\n@@ ... @@\n-def main(args):\n-    print(\"Hello!\")\n-    return\n+def main(args):\n+    print(\"Goodbye!\")\n+    return\n```\n\n----------------------------------------\n\nTITLE: Final Instruction for Initial Implementation in Python Benchmarking\nDESCRIPTION: This instruction is added to the end of the prompt when aider sends the initial implementation file and Exercism instructions to GPT. It guides GPT to implement the function stubs while following specific constraints.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-07-02-benchmarks.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nUse the above instructions to modify the supplied files: <implementation file>\nKeep and implement the existing function or class stubs, they will be called from unit tests.\nOnly use standard python libraries, don't suggest installing any packages.\n```\n\n----------------------------------------\n\nTITLE: Unknown Model Context Window Warning Message\nDESCRIPTION: Warning message displayed when using an unknown model, indicating that aider will use default context window size and assume the model is free.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/model-warnings.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nModel foobar: Unknown context window size and costs, using sane defaults.\n```\n\n----------------------------------------\n\nTITLE: Checking Prime Number - JavaScript\nDESCRIPTION: The 'isPrime' function determines if a given number is prime by checking divisibility from 2 up to the square root of the number.\nSOURCE: https://github.com/aider-ai/aider/blob/main/tests/fixtures/sample-code-base-repo-map.txt#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction isPrime(number) {\n    if (number <= 1) return false;\n    for (let i = 2; i <= Math.sqrt(number); i++) {\n        if (number % i === 0) return false;\n    }\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Python Syntax Error Example\nDESCRIPTION: Example of a syntax error caused by incorrect string escaping in JSON-wrapped code\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-08-14-code-in-json.md#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nTraceback (most recent call last):\n  ...   \n  File \"bottle-song/bottle_song.py\", line 9\n    lyrics.append(f'There'll be {i - 1} green bottles hanging on the wall.')\n                                                                          ^\nSyntaxError: unterminated string literal (detected at line 9)\n```\n\n----------------------------------------\n\nTITLE: HTML Video Container for Codespaces Demo\nDESCRIPTION: HTML markup that embeds a video demonstration of installing aider in GitHub Codespaces, with a fallback link to the video file.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install/codespaces.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"video-container\">\n  <video controls poster=\"/assets/codespaces.jpg\">\n    <source src=\"/assets/codespaces.mp4\" type=\"video/mp4\">\n    <a href=\"/assets/codespaces.mp4\">Install aider in GitHub Codespaces</a>\n  </video>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Model Name Suggestion Error Message\nDESCRIPTION: Error message shown when a model name is misspelled, providing suggestions for similar correct model names.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/model-warnings.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nModel gpt-5o: Unknown context window size and costs, using sane defaults.\nDid you mean one of these?\n- gpt-4o\n```\n\n----------------------------------------\n\nTITLE: Liquid Template Date Formatting\nDESCRIPTION: Jekyll/Liquid template snippet for formatting and displaying a page's date in Month Day, Year format\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-11-06-benchmarks-1106.md#2025-04-21_snippet_0\n\nLANGUAGE: liquid\nCODE:\n```\n{% if page.date %}\n<p class=\"post-date\">{{ page.date | date: \"%B %d, %Y\" }}</p>\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Final Instruction for Test Error Resolution in Python Benchmarking\nDESCRIPTION: This instruction is added to the end of the prompt when sending the test errors to GPT after the first implementation attempt fails. It guides GPT to fix the code based on the test errors.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-07-02-benchmarks.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nSee the testing errors above.\nThe tests are correct.\nFix the code in <implementation file> to resolve the errors.\n```\n\n----------------------------------------\n\nTITLE: Calculating Factorial - JavaScript\nDESCRIPTION: The 'factorial' function calculates the factorial of a non-negative integer n using recursion.\nSOURCE: https://github.com/aider-ai/aider/blob/main/tests/fixtures/sample-code-base-repo-map.txt#2025-04-21_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction factorial(n) {\n    if (n === 0 || n === 1) return 1;\n    return n * factorial(n - 1);\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Leaderboard Table and Controls with CSS\nDESCRIPTION: Defines styles for the leaderboard table, including responsive design for different screen sizes, bar visualizations for metrics, and styling for control elements.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/leaderboards/index.md#2025-04-21_snippet_2\n\nLANGUAGE: CSS\nCODE:\n```\n<style>\n  #leaderboard-title {\n    margin-bottom: 20px;\n  }\n  tr.selected {\n    color: #0056b3;\n  }\n  table {\n    table-layout: fixed;\n  }\n  thead {\n    border-top: 1px solid #ddd;\n  }\n  td, th {\n    border: none;\n    word-wrap: break-word;\n    overflow-wrap: break-word;\n    vertical-align: middle;\n  }\n  tbody tr {\n    height: 50px;\n  }\n  td.col-command {\n    font-size: 12px;\n  }\n\n  @media screen and (max-width: 991px) {\n    th.col-conform, td.col-conform,\n    th.col-edit-format, td.col-edit-format {\n      display: none;\n    }\n    th:nth-child(3), td:nth-child(3),\n    th:nth-child(4), td:nth-child(4) {\n      width: 33% !important;\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    th.col-command, td.col-command {\n      display: none;\n    }\n  }\n\n  #controls-container {\n    margin-bottom: 20px;\n  }\n\n  #editSearchInput, #view-mode-select {\n    padding: 8px 12px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 14px;\n    height: 38px;\n    box-sizing: border-box;\n  }\n\n  .bar-cell {\n    position: relative;\n    padding: 8px;\n    overflow: hidden;\n  }\n  .cost-bar-cell {\n    background-image: none;\n  }\n  .percent-tick, .cost-tick {\n    position: absolute;\n    top: 50%;\n    transform: translateY(10px);\n    height: 8px;\n    width: 1px;\n    background-color: rgba(170, 170, 170, 0.5);\n    z-index: 2;\n  }\n  .bar-viz {\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    z-index: 1;\n    height: 36px;\n    border-radius: 0 2px 2px 0;\n  }\n  .cost-bar-cell:hover .bar-viz[style*=\"background-image\"] {\n    animation: stripe-animation 2s linear infinite;\n  }\n  @keyframes stripe-animation {\n    0% { background-position: 0 0; }\n    100% { background-position: 20px 0; }\n  }\n  .bar-cell span {\n     position: absolute;\n     left: 5px;\n     top: 50%;\n     transform: translateY(-50%);\n     z-index: 3;\n     background-color: rgba(255, 255, 255, 0.7);\n     padding: 0 4px;\n     border-radius: 3px;\n     font-size: 14px;\n  }\n  .toggle-details {\n    color: #888;\n    transition: color 0.2s;\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: CSS Styling for Responsive Video Container\nDESCRIPTION: CSS styles that create a responsive container for the video demonstration, maintaining the aspect ratio of 101.89% based on the video dimensions (1080/1060).\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/install/codespaces.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n<style>\n.video-container {\n  position: relative;\n  padding-bottom: 101.89%; /* 1080 / 1060 = 1.0189 */\n  height: 0;\n  overflow: hidden;\n}\n\n.video-container video {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n</style>\n```\n\n----------------------------------------\n\nTITLE: Example LLM Tool Response in JSON\nDESCRIPTION: Example of a structured JSON response containing code with escaped characters\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-08-14-code-in-json.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"explanation\": \"Here is the program you asked for which prints \\\"Hello\\\"\",\n    \"content\": \"def greeting():\\n    print(\\\"Hello\\\")\\n\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Flake8 Raw Linter Output\nDESCRIPTION: Example showing the basic output format from the flake8 Python linter, demonstrating line-number based error reporting.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-05-22-linting.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\napp.py:23:36: F821 undefined name 'num'\napp.py:41:16: F541 f-string is missing placeholders\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Hallucinated Function Calls in GPT-3.5 Responses\nDESCRIPTION: Shows an example of GPT-3.5 generating an invalid function call response, where it ignores the JSON schema and includes Python code in the arguments field.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-07-02-benchmarks.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n        \"function_call\": {\n          \"name\": \"python\",\n          \"arguments\": \"def main():\\n    print(\\\"hello\\\")\\n\"\n        },\n```\n\n----------------------------------------\n\nTITLE: Complex Unified Diff for Variable Renaming in Python\nDESCRIPTION: This snippet shows a more complex unified diff example, demonstrating how to rename a variable throughout a Python function using the diff format.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/unified-diffs.md#2025-04-21_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n@@ ... @@\n-def factorial(n):\n+def factorial(number):\n-    if n == 0:\n+    if number == 0:\n         return 1\n     else:\n-        return n * factorial(n-1)\n+        return number * factorial(number-1)\n```\n\n----------------------------------------\n\nTITLE: Autogenerated Python Package Dependencies\nDESCRIPTION: This snippet represents a list of Python package dependencies for development, autogenerated by the 'uv' utility via the 'pip compile' command. It specifies precise versions of packages required and their sources, and it is used to ensure consistent environments across different setups.\nSOURCE: https://github.com/aider-ai/aider/blob/main/requirements/requirements-dev.txt#2025-04-21_snippet_0\n\nLANGUAGE: requirements\nCODE:\n```\n# This file was autogenerated by uv via the following command:\\n#    uv pip compile --no-strip-extras --constraint=requirements/common-constraints.txt --output-file=requirements/requirements-dev.txt requirements/requirements-dev.in\\nbuild==1.2.2.post1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pip-tools\\ncachetools==5.5.2\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-auth\\ncertifi==2025.1.31\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   requests\\ncfgv==3.4.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pre-commit\\ncharset-normalizer==3.4.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   requests\\nclick==8.1.8\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pip-tools\\n    #   typer\\ncodespell==2.4.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\ncogapp==3.4.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\ncontourpy==1.3.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   matplotlib\\ncycler==0.12.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   matplotlib\\ndill==0.3.9\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   multiprocess\\n    #   pathos\\ndistlib==0.3.9\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   virtualenv\\nfilelock==3.18.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   virtualenv\\nfonttools==4.57.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   matplotlib\\ngoogle-api-core[grpc]==2.24.2\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-cloud-bigquery\\n    #   google-cloud-core\\ngoogle-auth==2.38.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-api-core\\n    #   google-cloud-bigquery\\n    #   google-cloud-core\\ngoogle-cloud-bigquery==3.31.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\ngoogle-cloud-core==2.4.3\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-cloud-bigquery\\ngoogle-crc32c==1.7.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-resumable-media\\ngoogle-resumable-media==2.7.2\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-cloud-bigquery\\ngoogleapis-common-protos==1.69.2\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-api-core\\n    #   grpcio-status\\ngrpcio==1.71.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-api-core\\n    #   grpcio-status\\ngrpcio-status==1.71.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-api-core\\nidentify==2.6.9\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pre-commit\\nidna==3.10\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   requests\\nimgcat==0.6.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\niniconfig==2.1.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pytest\\nkiwisolver==1.4.8\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   matplotlib\\nlox==0.13.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\nmarkdown-it-py==3.0.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   rich\\nmatplotlib==3.10.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\nmdurl==0.1.2\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   markdown-it-py\\nmultiprocess==0.70.17\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pathos\\nnodeenv==1.9.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pre-commit\\nnumpy==1.26.4\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   contourpy\\n    #   matplotlib\\n    #   pandas\\npackaging==24.2\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   build\\n    #   google-cloud-bigquery\\n    #   matplotlib\\n    #   pytest\\npandas==2.2.3\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\npathos==0.3.3\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   lox\\npillow==11.1.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   matplotlib\\npip==25.0.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pip-tools\\npip-tools==7.4.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\nplatformdirs==4.3.7\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   virtualenv\\npluggy==1.5.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pytest\\npox==0.3.5\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pathos\\nppft==1.7.6.9\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pathos\\npre-commit==4.2.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\nproto-plus==1.26.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-api-core\\nprotobuf==5.29.4\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-api-core\\n    #   googleapis-common-protos\\n    #   grpcio-status\\n    #   proto-plus\\npyasn1==0.6.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pyasn1-modules\\n    #   rsa\\npyasn1-modules==0.4.2\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-auth\\npygments==2.19.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   rich\\npyparsing==3.2.3\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   matplotlib\\npyproject-hooks==1.2.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   build\\n    #   pip-tools\\npytest==8.3.5\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\n    #   pytest-env\\npytest-env==1.1.5\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\npython-dateutil==2.9.0.post0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-cloud-bigquery\\n    #   matplotlib\\n    #   pandas\\npytz==2025.2\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pandas\\npyyaml==6.0.2\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pre-commit\\nrequests==2.32.3\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-api-core\\n    #   google-cloud-bigquery\\nrich==14.0.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   typer\\nrsa==4.9\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   google-auth\\nsemver==3.0.4\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\nsetuptools==78.1.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pip-tools\\nshellingham==1.5.4\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   typer\\nsix==1.17.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   python-dateutil\\ntyper==0.15.2\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\ntyping-extensions==4.13.2\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   typer\\ntzdata==2025.2\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pandas\\nurllib3==2.4.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   requests\\nuv==0.6.14\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   -r requirements/requirements-dev.in\\nvirtualenv==20.30.0\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pre-commit\\nwheel==0.45.1\\n    # via\\n    #   -c requirements/common-constraints.txt\\n    #   pip-tools\\n\n```\n\n----------------------------------------\n\nTITLE: Applying Additional Styles for Leaderboard Table\nDESCRIPTION: Defines additional CSS styles for the leaderboard table, including row highlighting and text wrapping.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-09-12-o1.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  tr.selected {\n    color: #0056b3;\n  }\n  table {\n    table-layout: fixed;\n  }\n  td, th {\n    word-wrap: break-word;\n    overflow-wrap: break-word;\n  }\n  td:nth-child(3), td:nth-child(4) {\n    font-size: 12px;\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Code Block Example\nDESCRIPTION: Example showing how markdown code blocks are formatted with triple backticks for code highlighting\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/faq.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nHere's some code:\n\n```\nprint(\"hello\")\n```\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Container Structure in HTML\nDESCRIPTION: Sets up the HTML structure for two chart containers using canvas elements.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/blame.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"chart-container\">\n    <canvas id=\"blameChart\" style=\"margin-top: 20px\"></canvas>\n</div>\n<div class=\"chart-container\">\n    <canvas id=\"linesChart\" style=\"margin-top: 20px\"></canvas>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Factorial Function Variable Renaming Diff\nDESCRIPTION: Unified diff example showing a variable rename from 'n' to 'number' in a recursive factorial function implementation.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-12-21-unified-diffs.md#2025-04-21_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n@@ ... @@\n-def factorial(n):\n+def factorial(number):\n-    if n == 0:\n+    if number == 0:\n         return 1\n     else:\n-        return n * factorial(n-1)\n+        return number * factorial(number-1)\n```\n\n----------------------------------------\n\nTITLE: JSON Code Edit Format Example\nDESCRIPTION: Example showing how code edits can be structured in JSON format with escaped strings\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-08-14-code-in-json.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"filename\": \"greeting.py\",\n    \"search\": \"def greeting():\\n    print(\\\"Hello\\\")\\n\"\n    \"replace\": \"def greeting():\\n    print(\\\"Goodbye\\\")\\n\"\n}\n```\n\n----------------------------------------\n\nTITLE: Including Recording Template in HTML/Markdown\nDESCRIPTION: Liquid template include statement that renders the recording component using the previously defined parameters.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/recordings/dont-drop-original-read-files.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{% include recording.md %}\n```\n\n----------------------------------------\n\nTITLE: Increasing Scatter Plot Dot Size in Matplotlib\nDESCRIPTION: Modifies the scatter plot to make dots larger by adding the s=100 parameter to the scatter function call. This increases the size of each plotted point for better visibility.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-05-13-models-over-time.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nax.scatter(dates, pass_rates, c=colors, alpha=0.5, s=100)\n```\n\n----------------------------------------\n\nTITLE: Multiple Files Configuration\nDESCRIPTION: Example of configuring multiple files to always load in the .aider.conf.yml configuration file\nSOURCE: https://github.com/aider-ai/aider/blob/main/HISTORY.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nfile: [file1, file2, file3]\n```\n\n----------------------------------------\n\nTITLE: Missing Environment Variables Error Message\nDESCRIPTION: Error message displayed when required Azure environment variables are not set, listing the missing variables needed for model operation.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/model-warnings.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nModel azure/gpt-4-turbo: Missing these environment variables:\n- AZURE_API_BASE\n- AZURE_API_VERSION\n- AZURE_API_KEY\n```\n\n----------------------------------------\n\nTITLE: Sample Edit Block Format in Python\nDESCRIPTION: Demonstrates the format of edit blocks used in aider chat transcripts to show code changes. Shows a simple example of changing a print statement from 'hello' to 'goodbye'.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/README.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nhello.py\n<<<<<<< ORIGINAL\nprint(\"hello\")\n=======\nprint(\"goodbye\")\n>>>>>>> UPDATED\n```\n\n----------------------------------------\n\nTITLE: High Level Factorial Function Diff\nDESCRIPTION: Example of a high-level unified diff showing complete function versions rather than line-by-line changes for better readability and reliability.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-12-21-unified-diffs.md#2025-04-21_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n@@ ... @@\n-def factorial(n):\n-    if n == 0:\n-        return 1\n-    else:\n-        return n * factorial(n-1)\n+def factorial(number):\n+    if number == 0:\n+        return 1\n+    else:\n+        return number * factorial(number-1)\n```\n\n----------------------------------------\n\nTITLE: Jekyll Template Conditional Date Display\nDESCRIPTION: A Liquid template snippet that conditionally displays a formatted date from the page metadata using Jekyll's templating system.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-11-06-benchmarks-speed-1106.md#2025-04-21_snippet_0\n\nLANGUAGE: liquid\nCODE:\n```\n{% if page.date %}\n<p class=\"post-date\">{{ page.date | date: \"%B %d, %Y\" }}</p>\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Markdown Content Structure\nDESCRIPTION: Markdown file containing navigation metadata and structure for documentation page about aider usage tips.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/tips.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nparent: Usage\nnav_order: 25\ndescription: Tips for AI pair programming with aider.\n---\n```\n\n----------------------------------------\n\nTITLE: Including Model Warnings Template in Markdown\nDESCRIPTION: Jekyll include statement that embeds model warnings content from an external markdown file into the current page.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/warnings.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% include model-warnings.md %}\n```\n\n----------------------------------------\n\nTITLE: Displaying Tip for Using Help Command in Markdown\nDESCRIPTION: This markdown snippet displays a tip for users on how to use the '/help' command in Aider. It includes a link to the support documentation for further assistance.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/help-tip.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{: .tip }\nUse `/help <question>` to \n[ask for help about using aider](/docs/troubleshooting/support.html),\ncustomizing settings, troubleshooting, using LLMs, etc.\n```\n\n----------------------------------------\n\nTITLE: Example Python Function with Comment\nDESCRIPTION: A simple Python function demonstrating the structure that GPT might imperfectly reproduce in a diff, including imports, comments, and a main function call.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-12-21-unified-diffs.md#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nimport sys\n\ndef main(args):\n    # show a greeting\n    print(\"Hello!\")\n    return\n\nmain(sys.argv[1:])\n```\n\n----------------------------------------\n\nTITLE: Markdown Release History\nDESCRIPTION: Release history notes in markdown format documenting version changes, new features, bug fixes, and improvements across multiple Aider releases.\nSOURCE: https://github.com/aider-ai/aider/blob/main/HISTORY.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Release history\n\n### main branch\n\n- Add support for `gemini-2.5-flash-preview-04-17` models.\n- Improved \"diff\" format for Gemini 2.5 Flash by accepting filenames provided on the same line as the opening fence.\n- Add new `udiff-simple` edit format, for Gemini 2.5 Pro.\n- Update default weak/editor models for Gemini 2.5 Pro models to use `gemini-2.5-flash-preview-04-17`.\n- Aider wrote 69% of the code in this release.\n```\n\n----------------------------------------\n\nTITLE: Improving Blockquote Style - CSS\nDESCRIPTION: This CSS snippet adjusts the style of blockquotes by adding padding, margins, and a left border. The updated styles enhance readability and aesthetics.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/chat-transcript-css.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.main-content blockquote{padding:0 1rem;margin-left:0;color:#819198;border-left:0.3rem solid #dce6f0}\n```\n\n----------------------------------------\n\nTITLE: Recording Include Template\nDESCRIPTION: Liquid template include statement that embeds the recording player component into the page.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/recordings/tree-sitter-language-pack.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{% include recording.md %}\n```\n\n----------------------------------------\n\nTITLE: Generating Aider Release History with Python Cog\nDESCRIPTION: A Python code snippet using the 'cog' tool to generate the main content of the release history page by copying the content from HISTORY.md file and removing the redundant header.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/HISTORY.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n# This page is a copy of HISTORY.md, adding the front matter above.\ntext = open(\"HISTORY.md\").read()\ntext = text.replace(\"# Release history\", \"\")\ncog.out(text)\n```\n\n----------------------------------------\n\nTITLE: Defining Python Dependencies for Playwright\nDESCRIPTION: This snippet lists the specific versions of Python packages required for the Playwright framework. It includes dependencies like greenlet, playwright, pyee, and typing-extensions, each indicating their source of inclusion through comments. This structure ensures that necessary packages are maintained at known versions for compatibility and stability in the project.\nSOURCE: https://github.com/aider-ai/aider/blob/main/requirements/requirements-playwright.txt#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\ngreenlet==3.1.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   playwright\nplaywright==1.51.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   -r requirements/requirements-playwright.in\npyee==12.1.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   playwright\ntyping-extensions==4.13.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   pyee\n```\n\n----------------------------------------\n\nTITLE: Jekyll Front Matter Configuration\nDESCRIPTION: YAML front matter block defining post metadata including title, excerpt, image, draft status and navigation settings.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-05-22-draft.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: A draft post.\nexcerpt: With a draft summary.\nhighlight_image: /assets/linting.jpg\ndraft: true\nnav_exclude: true\n---\n```\n\n----------------------------------------\n\nTITLE: Adding Rounded Borders to Blockquotes - HTML\nDESCRIPTION: This HTML snippet updates the blockquote style in index.html to include rounded borders and a new border color. It improves the visual appeal of the boxquote elements.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/chat-transcript-css.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<style>\n      .main-content blockquote {\n        border-left-color: #159957;\n        border: 0.3rem solid #dce6f0;\n        border-radius: 0.5rem;\n      }\n      .btn {\n        display: inline-block;\n        width: auto;\n      }\n      .btn + .btn {\n        margin-top: 0;\n      }\n    </style>\n```\n\n----------------------------------------\n\nTITLE: Lighter Background for Blockquote - HTML\nDESCRIPTION: This HTML snippet changes the blockquote background to a lighter shade while keeping existing border and padding styles, enhancing overall readability.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/chat-transcript-css.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<style>\n      .main-content blockquote {\n        border: 0.1rem solid #159957;\n        border-radius: 0.5rem;\n        background-color: #e0f2ef;\n      }\n    </style>\n```\n\n----------------------------------------\n\nTITLE: Styling Video Container in CSS\nDESCRIPTION: CSS styles for creating a responsive video container with specific aspect ratio and positioning.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-05-02-browser.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.video-container {\n  position: relative;\n  padding-bottom: 101.89%; /* 1080 / 1060 = 1.0189 */\n  height: 0;\n  overflow: hidden;\n}\n\n.video-container video {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Chart.js in HTML\nDESCRIPTION: Imports the Chart.js library for use in creating charts on the page.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-09-12-o1.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Padding Adjustment and Label Positioning - HTML\nDESCRIPTION: This HTML snippet modifies padding for the blockquote and adjusts the label position so it does not overlap with the border for improved aesthetics.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/chat-transcript-css.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<style>\n      .main-content blockquote {\n        padding: 1.5rem 1rem 1rem 1rem;\n        position: relative;\n      }\n      .main-content blockquote::before {\n        content: \"aider\";\n        display: inline-block;\n        position: absolute;\n        top: 0.5rem;\n        left: 1rem;\n        background-color: #e0f2ef;\n        padding: 0 0.5rem;\n        font-weight: bold;\n        color: #159957;\n      }\n    </style>\n```\n\n----------------------------------------\n\nTITLE: Padding Inside Blockquote - HTML\nDESCRIPTION: This HTML snippet adds padding inside the blockquote to improve content spacing and visual appeal. It retains all other existing styles.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/chat-transcript-css.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<style>\n      .main-content blockquote {\n        border: 0.1rem solid #159957;\n        border-radius: 0.5rem;\n        background-color: #e0f2ef;\n        padding: 1rem;\n      }\n    </style>\n```\n\n----------------------------------------\n\nTITLE: Displaying Post Date in Markdown\nDESCRIPTION: This snippet uses Liquid templating to conditionally display the post date if it exists. The date is formatted as Month Day, Year.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-01-25-benchmarks-0125.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% if page.date %}\n<p class=\"post-date\">{{ page.date | date: \"%B %d, %Y\" }}</p>\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Generating Random Number - JavaScript\nDESCRIPTION: The 'getRandomNumber' function generates a random integer within a specified range (min and max).\nSOURCE: https://github.com/aider-ai/aider/blob/main/tests/fixtures/sample-code-base-repo-map.txt#2025-04-21_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Leaderboard Graph with Liquid and HTML\nDESCRIPTION: Uses Liquid templating to sort data and includes a partial for rendering a leaderboard graph. The graph displays edit performance data for various models.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-09-12-o1.md#2025-04-21_snippet_1\n\nLANGUAGE: liquid\nCODE:\n```\n{% assign edit_sorted = site.data.o1_results | sort: 'pass_rate_2' | reverse %}\n{% include leaderboard_graph.html\n  chart_id=\"editChart\" \n  data=edit_sorted \n  row_prefix=\"edit-row\" \n  pass_rate_key=\"pass_rate_2\"\n%}\n```\n\n----------------------------------------\n\nTITLE: Changing Blockquote Colors to Shades of Blue - HTML\nDESCRIPTION: This HTML snippet transitions blockquote colors from green to varying shades of blue, selected to coordinate with the header gradient, enhancing the visual design.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/chat-transcript-css.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<style>\n      .main-content blockquote {\n        border: 0.1rem solid #155799;\n        background-color: #e0ecf4;\n        margin-top: 2rem;\n      }\n      .main-content blockquote::before {\n        content: \"aider\";\n        display: inline-block;\n        position: absolute;\n        padding: 0 0.5rem;\n        font-weight: bold;\n        color: #155799;\n      }\n    </style>\n```\n\n----------------------------------------\n\nTITLE: Liquid Date Formatting Template\nDESCRIPTION: Liquid template code for conditionally displaying a formatted date from the page front matter.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-05-22-draft.md#2025-04-21_snippet_1\n\nLANGUAGE: liquid\nCODE:\n```\n{% if page.date %}\n<p class=\"post-date\">{{ page.date | date: \"%B %d, %Y\" }}</p>\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Defining Garage Class - Python\nDESCRIPTION: The 'Garage' class manages a collection of Car objects, supporting operations to add, remove, and list cars in the garage.\nSOURCE: https://github.com/aider-ai/aider/blob/main/tests/fixtures/sample-code-base-repo-map.txt#2025-04-21_snippet_8\n\nLANGUAGE: Python\nCODE:\n```\nclass Garage:\n    def __init__(self):\n\n    def add_car(self, car):\n\n    def remove_car(self, car):\n\n    def list_cars(self):\n```\n\n----------------------------------------\n\nTITLE: Styling blockquote and h4 elements in HTML\nDESCRIPTION: This CSS snippet defines the styling for blockquote and h4 elements within the .main-content class. It adds a border, border-radius, background color, padding, position, and margin-top to these elements. The blockquote element also has a pseudo-element ::before to display the word \"aider\" in a box above the blockquote.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/chat-transcript-css.md#2025-04-21_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n\n    <style>\n      .main-content blockquote, .main-content h4 {\n        border: 0.1rem solid #155799;\n        border-radius: 0.5rem;\n        background-color: #e0ecf4;\n        padding: 1.25rem 0.75rem 0.75rem 0.75rem;\n        position: relative;\n        margin-top: 2rem;\n      }\n      .main-content blockquote::before {\n        content: \"aider\";\n        display: inline-block;\n        position: absolute;\n        top: -1rem;\n        left: 0.5;\n        padding: 0rem 0.5rem;\n        font-weight: bold;\n        color: #155799;\n        background-color: #e0ecf4;\n        border: 0.05rem solid #155799;\n        border-radius: 0.5rem;\n      }\n    </style>\n\n```\n\n----------------------------------------\n\nTITLE: Including Recording Template in HTML/Markdown\nDESCRIPTION: Template inclusion directive for rendering the recording player component\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/recordings/auto-accept-architect.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{% include recording.md %}\n```\n\n----------------------------------------\n\nTITLE: Including Model Warnings Content Block in Markdown\nDESCRIPTION: Includes a reusable markdown content block containing model warnings using Jekyll/Liquid include syntax.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/troubleshooting/warnings.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% include model-warnings.md %}\n```\n\n----------------------------------------\n\nTITLE: Removing Hello Endpoint\nDESCRIPTION: Demonstrates the removal of the previously implemented /hello endpoint from the Flask application.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/hello-world-flask.md#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Main Function - Python\nDESCRIPTION: The 'main' function serves as the entry point for the script, orchestrating the execution of class methods and functionality.\nSOURCE: https://github.com/aider-ai/aider/blob/main/tests/fixtures/sample-code-base-repo-map.txt#2025-04-21_snippet_9\n\nLANGUAGE: Python\nCODE:\n```\ndef main():\n```\n\n----------------------------------------\n\nTITLE: Implementing 2048 Game Scoring Logic in JavaScript\nDESCRIPTION: Explores the original scoring mechanism for tile merging in the 2048 game, where merged tiles generate a new tile value and update the game score\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/examples/2048-game.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nif (next && next.value === tile.value && !next.mergedFrom) {\n  var merged = new Tile(positions.next, tile.value * 2);\n  merged.mergedFrom = [tile, next];\n\n  self.grid.insertTile(merged);\n  self.grid.removeTile(tile);\n\n  // Converge the two tiles' positions\n  tile.updatePosition(positions.next);\n\n  // Update the score\n  self.score += merged.value;\n\n  // The mighty 2048 tile\n  if (merged.value === 2048) self.won = true;\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Python Dependencies\nDESCRIPTION: This snippet lists the required Python packages along with their versions for the Aider AI project. Each package entry specifies the version and the associated resources it derives from, ensuring proper package management and resolution of dependencies.\nSOURCE: https://github.com/aider-ai/aider/blob/main/requirements/requirements-help.txt#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\naiohappyeyeballs==2.6.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   aiohttp\naiohttp==3.11.16\n    # via\n    #   -c requirements/common-constraints.txt\n    #   huggingface-hub\n    #   llama-index-core\naiosignal==1.3.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   aiohttp\nannotated-types==0.7.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   pydantic\nanyio==4.9.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   httpx\nattrs==25.3.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   aiohttp\nbanks==2.1.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-core\ncertifi==2025.1.31\n    # via\n    #   -c requirements/common-constraints.txt\n    #   httpcore\n    #   httpx\n    #   requests\ncharset-normalizer==3.4.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   requests\nclick==8.1.8\n    # via\n    #   -c requirements/common-constraints.txt\n    #   nltk\ncolorama==0.4.6\n    # via\n    #   -c requirements/common-constraints.txt\n    #   griffe\ndataclasses-json==0.6.7\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-core\ndeprecated==1.2.18\n    # via\n    #   -c requirements/common-constraints.txt\n    #   banks\n    #   llama-index-core\ndirtyjson==1.0.8\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-core\nfilelock==3.18.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   huggingface-hub\n    #   torch\n    #   transformers\nfiletype==1.2.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-core\nfrozenlist==1.5.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   aiohttp\n    #   aiosignal\nfsspec==2025.3.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   huggingface-hub\n    #   llama-index-core\n    #   torch\ngreenlet==3.1.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   sqlalchemy\ngriffe==1.7.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   banks\nh11==0.14.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   httpcore\nhttpcore==1.0.8\n    # via\n    #   -c requirements/common-constraints.txt\n    #   httpx\nhttpx==0.28.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-core\nhuggingface-hub[inference]==0.30.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-embeddings-huggingface\n    #   sentence-transformers\n    #   tokenizers\n    #   transformers\nidna==3.10\n    # via\n    #   -c requirements/common-constraints.txt\n    #   anyio\n    #   httpx\n    #   requests\n    #   yarl\njinja2==3.1.6\n    # via\n    #   -c requirements/common-constraints.txt\n    #   banks\n    #   torch\njoblib==1.4.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   nltk\n    #   scikit-learn\nllama-index-core==0.12.26\n    # via\n    #   -c requirements/common-constraints.txt\n    #   -r requirements/requirements-help.in\n    #   llama-index-embeddings-huggingface\nllama-index-embeddings-huggingface==0.5.3\n    # via\n    #   -c requirements/common-constraints.txt\n    #   -r requirements/requirements-help.in\nmarkupsafe==3.0.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   jinja2\nmarshmallow==3.26.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   dataclasses-json\nmpmath==1.3.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   sympy\nmultidict==6.4.3\n    # via\n    #   -c requirements/common-constraints.txt\n    #   aiohttp\n    #   yarl\nmypy-extensions==1.0.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   typing-inspect\nnest-asyncio==1.6.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-core\nnetworkx==3.2.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-core\n    #   torch\nnltk==3.9.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-core\nnumpy==1.26.4\n    # via\n    #   -c requirements/common-constraints.txt\n    #   -r requirements/requirements-help.in\n    #   llama-index-core\n    #   scikit-learn\n    #   scipy\n    #   transformers\npackaging==24.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   huggingface-hub\n    #   marshmallow\n    #   transformers\npillow==11.1.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-core\n    #   sentence-transformers\nplatformdirs==4.3.7\n    # via\n    #   -c requirements/common-constraints.txt\n    #   banks\npropcache==0.3.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   aiohttp\n    #   yarl\npydantic==2.11.3\n    # via\n    #   -c requirements/common-constraints.txt\n    #   banks\n    #   llama-index-core\npydantic-core==2.33.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   pydantic\npyyaml==6.0.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   huggingface-hub\n    #   llama-index-core\n    #   transformers\nregex==2024.11.6\n    # via\n    #   -c requirements/common-constraints.txt\n    #   nltk\n    #   tiktoken\n    #   transformers\nrequests==2.32.3\n    # via\n    #   -c requirements/common-constraints.txt\n    #   huggingface-hub\n    #   llama-index-core\n    #   tiktoken\n    #   transformers\nsafetensors==0.5.3\n    # via\n    #   -c requirements/common-constraints.txt\n    #   transformers\nscikit-learn==1.6.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   sentence-transformers\nscipy==1.13.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   scikit-learn\n    #   sentence-transformers\nsentence-transformers==4.0.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-embeddings-huggingface\nsniffio==1.3.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   anyio\nsqlalchemy[asyncio]==2.0.40\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-core\nsympy==1.13.3\n    # via\n    #   -c requirements/common-constraints.txt\n    #   torch\ntenacity==9.1.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-core\nthreadpoolctl==3.6.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   scikit-learn\ntiktoken==0.9.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   llama-index-core\ntokenizers==0.21.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   transformers\ntorch==2.2.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   -r requirements/requirements-help.in\n    #   sentence-transformers\ntqdm==4.67.1\n    # via\n    #   -c requirements/common-constraints.txt\n    #   huggingface-hub\n    #   llama-index-core\n    #   nltk\n    #   sentence-transformers\n    #   transformers\ntransformers==4.51.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   sentence-transformers\ntyping-extensions==4.13.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   anyio\n    #   huggingface-hub\n    #   llama-index-core\n    #   pydantic\n    #   pydantic-core\n    #   sentence-transformers\n    #   sqlalchemy\n    #   torch\n    #   typing-inspect\n    #   typing-inspection\ntyping-inspect==0.9.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   dataclasses-json\n    #   llama-index-core\ntyping-inspection==0.4.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   pydantic\nurllib3==2.4.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   requests\nwrapt==1.17.2\n    # via\n    #   -c requirements/common-constraints.txt\n    #   deprecated\n    #   llama-index-core\nyarl==1.19.0\n    # via\n    #   -c requirements/common-constraints.txt\n    #   aiohttp\n```\n\n----------------------------------------\n\nTITLE: Factorial Function Implementation - Python\nDESCRIPTION: This snippet defines a recursive function to calculate the factorial of a number and includes an example usage.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/modes.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"\\ndef factorial(n):\\n    if n == 0 or n == 1:\\n        return 1\\n    else:\\n        return n * factorial(n - 1)\\n\\n# Example usage\\nprint(factorial(5))  # Output: 120\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Python Package Listing\nDESCRIPTION: This snippet lists Python packages along with their specific versions. Each package entry also includes information about which other packages depend on it. This dependency information is helpful for understanding the project's overall architecture and potential dependency conflicts.\nSOURCE: https://github.com/aider-ai/aider/blob/main/requirements/common-constraints.txt#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\n\"aiohappyeyeballs==2.6.1\n    # via aiohttp\naiohttp==3.11.16\n    # via\n    #   huggingface-hub\n    #   litellm\n    #   llama-index-core\naiosignal==1.3.2\n    # via aiohttp\naltair==5.5.0\n    # via streamlit\nannotated-types==0.7.0\n    # via pydantic\nanyio==4.9.0\n    # via\n    #   httpx\n    #   openai\n    #   watchfiles\nattrs==25.3.0\n    # via\n    #   aiohttp\n    #   jsonschema\n    #   referencing\nbackoff==2.2.1\n    # via\n    #   -r requirements/requirements.in\n    #   posthog\nbanks==2.1.1\n    # via llama-index-core\nbeautifulsoup4==4.13.3\n    # via -r requirements/requirements.in\nblinker==1.9.0\n    # via streamlit\nbuild==1.2.2.post1\n    # via pip-tools\ncachetools==5.5.2\n    # via\n    #   google-auth\n    #   streamlit\ncertifi==2025.1.31\n    # via\n    #   httpcore\n    #   httpx\n    #   requests\ncffi==1.17.1\n    # via\n    #   sounddevice\n    #   soundfile\ncfgv==3.4.0\n    # via pre-commit\ncharset-normalizer==3.4.1\n    # via requests\nclick==8.1.8\n    # via\n    #   litellm\n    #   nltk\n    #   pip-tools\n    #   streamlit\n    #   typer\ncodespell==2.4.1\n    # via -r requirements/requirements-dev.in\ncogapp==3.4.1\n    # via -r requirements/requirements-dev.in\ncolorama==0.4.6\n    # via griffe\nconfigargparse==1.7\n    # via -r requirements/requirements.in\ncontourpy==1.3.1\n    # via matplotlib\ncycler==0.12.1\n    # via matplotlib\ndataclasses-json==0.6.7\n    # via llama-index-core\ndeprecated==1.2.18\n    # via\n    #   banks\n    #   llama-index-core\ndiff-match-patch==20241021\n    # via -r requirements/requirements.in\ndill==0.3.9\n    # via\n    #   multiprocess\n    #   pathos\ndirtyjson==1.0.8\n    # via llama-index-core\ndiskcache==5.6.3\n    # via -r requirements/requirements.in\ndistlib==0.3.9\n    # via virtualenv\ndistro==1.9.0\n    # via\n    #   openai\n    #   posthog\nfilelock==3.18.0\n    # via\n    #   huggingface-hub\n    #   torch\n    #   transformers\n    #   virtualenv\nfiletype==1.2.0\n    # via llama-index-core\nflake8==7.2.0\n    # via -r requirements/requirements.in\nfonttools==4.57.0\n    # via matplotlib\nfrozenlist==1.5.0\n    # via\n    #   aiohttp\n    #   aiosignal\nfsspec==2025.3.2\n    # via\n    #   huggingface-hub\n    #   llama-index-core\n    #   torch\ngitdb==4.0.12\n    # via gitpython\ngitpython==3.1.44\n    # via\n    #   -r requirements/requirements.in\n    #   streamlit\ngoogle-api-core[grpc]==2.24.2\n    # via\n    #   google-cloud-bigquery\n    #   google-cloud-core\ngoogle-auth==2.38.0\n    # via\n    #   google-api-core\n    #   google-cloud-bigquery\n    #   google-cloud-core\ngoogle-cloud-bigquery==3.31.0\n    # via -r requirements/requirements-dev.in\ngoogle-cloud-core==2.4.3\n    # via google-cloud-bigquery\ngoogle-crc32c==1.7.1\n    # via google-resumable-media\ngoogle-resumable-media==2.7.2\n    # via google-cloud-bigquery\ngoogleapis-common-protos==1.69.2\n    # via\n    #   google-api-core\n    #   grpcio-status\ngreenlet==3.1.1\n    # via\n    #   playwright\n    #   sqlalchemy\ngrep-ast==0.8.1\n    # via -r requirements/requirements.in\ngriffe==1.7.2\n    # via banks\ngrpcio==1.71.0\n    # via\n    #   google-api-core\n    #   grpcio-status\ngrpcio-status==1.71.0\n    # via google-api-core\nh11==0.14.0\n    # via httpcore\nhttpcore==1.0.8\n    # via httpx\nhttpx==0.28.1\n    # via\n    #   litellm\n    #   llama-index-core\n    #   openai\nhuggingface-hub[inference]==0.30.2\n    # via\n    #   llama-index-embeddings-huggingface\n    #   sentence-transformers\n    #   tokenizers\n    #   transformers\nidentify==2.6.9\n    # via pre-commit\nidna==3.10\n    # via\n    #   anyio\n    #   httpx\n    #   requests\n    #   yarl\nimgcat==0.6.0\n    # via -r requirements/requirements-dev.in\nimportlib-metadata==7.2.1\n    # via\n    #   -r requirements/requirements.in\n    #   litellm\nimportlib-resources==6.5.2\n    # via -r requirements/requirements.in\niniconfig==2.1.0\n    # via pytest\njinja2==3.1.6\n    # via\n    #   altair\n    #   banks\n    #   litellm\n    #   pydeck\n    #   torch\njiter==0.9.0\n    # via openai\njoblib==1.4.2\n    # via\n    #   nltk\n    #   scikit-learn\njson5==0.12.0\n    # via -r requirements/requirements.in\njsonschema==4.23.0\n    # via\n    #   -r requirements/requirements.in\n    #   altair\n    #   litellm\njsonschema-specifications==2024.10.1\n    # via jsonschema\nkiwisolver==1.4.8\n    # via matplotlib\nlitellm==1.65.7\n    # via -r requirements/requirements.in\nllama-index-core==0.12.26\n    # via\n    #   -r requirements/requirements-help.in\n    #   llama-index-embeddings-huggingface\nllama-index-embeddings-huggingface==0.5.3\n    # via -r requirements/requirements-help.in\nlox==0.13.0\n    # via -r requirements/requirements-dev.in\nmarkdown-it-py==3.0.0\n    # via rich\nmarkupsafe==3.0.2\n    # via jinja2\nmarshmallow==3.26.1\n    # via dataclasses-json\nmatplotlib==3.10.1\n    # via -r requirements/requirements-dev.in\nmccabe==0.7.0\n    # via flake8\nmdurl==0.1.2\n    # via markdown-it-py\nmixpanel==4.10.1\n    # via -r requirements/requirements.in\nmonotonic==1.6\n    # via posthog\nmpmath==1.3.0\n    # via sympy\nmultidict==6.4.3\n    # via\n    #   aiohttp\n    #   yarl\nmultiprocess==0.70.17\n    # via pathos\nmypy-extensions==1.0.0\n    # via typing-inspect\nnarwhals==1.34.1\n    # via altair\nnest-asyncio==1.6.0\n    # via llama-index-core\nnetworkx==3.2.1\n    # via\n    #   -r requirements/requirements.in\n    #   llama-index-core\n    #   torch\nnltk==3.9.1\n    # via llama-index-core\nnodeenv==1.9.1\n    # via pre-commit\nnumpy==1.26.4\n    # via\n    #   -r requirements/requirements-help.in\n    #   contourpy\n    #   llama-index-core\n    #   matplotlib\n    #   pandas\n    #   pydeck\n    #   scikit-learn\n    #   scipy\n    #   soundfile\n    #   streamlit\n    #   transformers\nopenai==1.73.0\n    # via litellm\npackaging==24.2\n    # via\n    #   -r requirements/requirements.in\n    #   altair\n    #   build\n    #   google-cloud-bigquery\n    #   huggingface-hub\n    #   marshmallow\n    #   matplotlib\n    #   pytest\n    #   streamlit\n    #   transformers\npandas==2.2.3\n    # via\n    #   -r requirements/requirements-dev.in\n    #   streamlit\npathos==0.3.3\n    # via lox\npathspec==0.12.1\n    # via\n    #   -r requirements/requirements.in\n    #   grep-ast\npexpect==4.9.0\n    # via -r requirements/requirements.in\npillow==11.1.0\n    # via\n    #   -r requirements/requirements.in\n    #   llama-index-core\n    #   matplotlib\n    #   sentence-transformers\n    #   streamlit\npip==25.0.1\n    # via\n    #   -r requirements/requirements.in\n    #   pip-tools\npip-tools==7.4.1\n    # via -r requirements/requirements-dev.in\nplatformdirs==4.3.7\n    # via\n    #   banks\n    #   virtualenv\nplaywright==1.51.0\n    # via -r requirements/requirements-playwright.in\npluggy==1.5.0\n    # via pytest\nposthog==3.24.1\n    # via -r requirements/requirements.in\npox==0.3.5\n    # via pathos\nppft==1.7.6.9\n    # via pathos\npre-commit==4.2.0\n    # via -r requirements/requirements-dev.in\nprompt-toolkit==3.0.50\n    # via -r requirements/requirements.in\npropcache==0.3.1\n    # via\n    #   aiohttp\n    #   yarl\nproto-plus==1.26.1\n    # via google-api-core\nprotobuf==5.29.4\n    # via\n    #   google-api-core\n    #   googleapis-common-protos\n    #   grpcio-status\n    #   proto-plus\n    #   streamlit\npsutil==7.0.0\n    # via -r requirements/requirements.in\nptyprocess==0.7.0\n    # via pexpect\npyarrow==19.0.1\n    # via streamlit\npyasn1==0.6.1\n    # via\n    #   pyasn1-modules\n    #   rsa\npyasn1-modules==0.4.2\n    # via google-auth\npycodestyle==2.13.0\n    # via flake8\npycparser==2.22\n    # via cffi\npydantic==2.11.3\n    # via\n    #   banks\n    #   litellm\n    #   llama-index-core\n    #   openai\npydantic-core==2.33.1\n    # via pydantic\npydeck==0.9.1\n    # via streamlit\npydub==0.25.1\n    # via -r requirements/requirements.in\npyee==12.1.1\n    # via playwright\npyflakes==3.3.2\n    # via flake8\npygments==2.19.1\n    # via rich\npypandoc==1.15\n    # via -r requirements/requirements.in\npyparsing==3.2.3\n    # via matplotlib\npyperclip==1.9.0\n    # via -r requirements/requirements.in\npyproject-hooks==1.2.0\n    # via\n    #   build\n    #   pip-tools\npytest==8.3.5\n    # via\n    #   -r requirements/requirements-dev.in\n    #   pytest-env\npytest-env==1.1.5\n    # via -r requirements/requirements-dev.in\npython-dateutil==2.9.0.post0\n    # via\n    #   google-cloud-bigquery\n    #   matplotlib\n    #   pandas\n    #   posthog\npython-dotenv==1.1.0\n    # via litellm\npytz==2025.2\n    # via pandas\npyyaml==6.0.2\n    # via\n    #   -r requirements/requirements.in\n    #   huggingface-hub\n    #   llama-index-core\n    #   pre-commit\n    #   transformers\nreferencing==0.36.2\n    # via\n    #   jsonschema\n    #   jsonschema-specifications\nregex==2024.11.6\n    # via\n    #   nltk\n    #   tiktoken\n    #   transformers\nrequests==2.32.3\n    # via\n    #   google-api-core\n    #   google-cloud-bigquery\n    #   huggingface-hub\n    #   llama-index-core\n    #   mixpanel\n    #   posthog\n    #   streamlit\n    #   tiktoken\n    #   transformers\nrich==14.0.0\n    # via\n    #   -r requirements/requirements.in\n    #   typer\nrpds-py==0.24.0\n    # via\n    #   jsonschema\n    #   referencing\nrsa==4.9\n    # via google-auth\nsafetensors==0.5.3\n    # via transformers\nscikit-learn==1.6.1\n    # via sentence-transformers\nscipy==1.13.1\n    # via\n    #   -r requirements/requirements.in\n    #   scikit-learn\n    #   sentence-transformers\nsemver==3.0.4\n    # via -r requirements/requirements-dev.in\nsentence-transformers==4.0.2\n    # via llama-index-embeddings-huggingface\nsetuptools==78.1.0\n    # via pip-tools\nshellingham==1.5.4\n    # via typer\nsix==1.17.0\n    # via\n    #   mixpanel\n    #   posthog\n    #   python-dateutil\nsmmap==5.0.2\n    # via gitdb\nsniffio==1.3.1\n    # via\n    #   anyio\n    #   openai\nsocksio==1.0.0\n    # via -r requirements/requirements.in\nsounddevice==0.5.1\n    # via -r requirements/requirements.in\nsoundfile==0.13.1\n    # via -r requirements/requirements.in\"\n```\n\n----------------------------------------\n\nTITLE: Including Help Content Block in Markdown\nDESCRIPTION: Includes a reusable markdown content block containing help information using Jekyll/Liquid include syntax.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/troubleshooting/warnings.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{% include help.md %}\n```\n\n----------------------------------------\n\nTITLE: Search Functionality for QwQ Results Table\nDESCRIPTION: JavaScript event listener implementation for filtering table rows based on search input.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-12-03-qwq.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.getElementById('qwqSearchInput').addEventListener('keyup', function() {\n    var input = this.value.toLowerCase();\n    var rows = document.querySelectorAll('tbody tr');\n    \n    rows.forEach(function(row) {\n        var text = row.textContent.toLowerCase();\n        if(text.includes(input)) {\n            row.style.display = '';\n            row.classList.add('selected');\n        } else {\n            row.style.display = 'none';\n            row.classList.remove('selected');\n        }\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Conditional Page Date Display in Liquid/HTML\nDESCRIPTION: Template code to conditionally display a formatted date if the page has a date property.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-12-03-qwq.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n{% if page.date %}\n<p class=\"post-date\">{{ page.date | date: \"%B %d, %Y\" }}</p>\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Sorting and Displaying Screen Recording Pages with Jekyll Liquid Template\nDESCRIPTION: Jekyll/Liquid template code that sorts pages with parent 'Screen recordings' and displays them as a formatted list with titles, URLs and descriptions.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/recordings/index.md#2025-04-21_snippet_0\n\nLANGUAGE: liquid\nCODE:\n```\n{% assign sorted_pages = site.pages | where: \"parent\", \"Screen recordings\" | sort: \"nav_order\" %}\n{% for page in sorted_pages %}\n- [{{ page.title }}]({{ page.url | relative_url }}) - {{ page.description }}\n{% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Terminal Interface HTML Structure\nDESCRIPTION: HTML markup defining the structure of a terminal-style interface with macOS-like window controls, toast container, and keyboard shortcuts display.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/recording.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"page-container\">\n  <div class=\"toast-container\" id=\"toast-container\"></div>\n\n  <div class=\"macos-backdrop\">\n    <div class=\"terminal-container\">\n      <div class=\"terminal-header\">\n        <div class=\"terminal-buttons\">\n          <div class=\"terminal-button terminal-close\"></div>\n          <div class=\"terminal-button terminal-minimize\"></div>\n          <div class=\"terminal-button terminal-expand\"></div>\n        </div>\n        <div class=\"terminal-title\">aider</div>\n      </div>\n      <div id=\"demo\"></div>\n    </div>\n  </div>\n</div>\n\n<div class=\"keyboard-shortcuts\">\n  <kbd>Space</kbd> Play/pause —\n  <kbd>f</kbd> Fullscreen —\n  <kbd>←</kbd><kbd>→</kbd> ±5s\n</div>\n```\n\n----------------------------------------\n\nTITLE: Displaying Post Date in Markdown\nDESCRIPTION: This snippet uses Liquid templating to conditionally display the post date if it exists. The date is formatted as Month Day, Year.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2024-06-02-main-swe-bench.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% if page.date %}\n<p class=\"post-date\">{{ page.date | date: \"%B %d, %Y\" }}</p>\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: External Resource Links\nDESCRIPTION: Links to external Asciinema player CSS and JavaScript resources, along with includes for custom recording styles and scripts.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_includes/recording.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/assets/asciinema/asciinema-player.css\" />\n\n<style>\n{% include recording.css %}\n</style>\n\n<script src=\"/assets/asciinema/asciinema-player.min.js\"></script>\n<script>\n{% include recording.js %}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Recording Configuration Script\nDESCRIPTION: JavaScript code that configures the recording ID and URL for the screen recording player.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/recordings/model-accepts-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst recording_id = \"model-accepts-settings\";\nconst recording_url = \"https://gist.githubusercontent.com/paul-gauthier/66b1b5aa7136147702c98afc4987c0d4/raw/4b5c7ddf7e80db1ff4dfa78fe158bc000fc42e0e/accepts-settings.cast\";\n```\n\n----------------------------------------\n\nTITLE: Jekyll Post Date Formatting\nDESCRIPTION: A Liquid template expression that formats and displays a post date using Jekyll's date filter with a specific format string.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2023-11-06-benchmarks-speed-1106.md#2025-04-21_snippet_1\n\nLANGUAGE: liquid\nCODE:\n```\n{{ page.date | date: \"%b %-d, %Y\" }}\n```\n\n----------------------------------------\n\nTITLE: Recording Include Statement\nDESCRIPTION: Liquid template include statement to embed the recording player component.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/recordings/model-accepts-settings.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{% include recording.md %}\n```\n\n----------------------------------------\n\nTITLE: Applying Apache 2.0 License Boilerplate Notice\nDESCRIPTION: Standard boilerplate notice text for applying the Apache 2.0 license to a project. Includes placeholder fields for copyright year and owner information, along with the standard permissions and conditions text.\nSOURCE: https://github.com/aider-ai/aider/blob/main/LICENSE.txt#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: OpenRouter Provider Configuration Settings\nDESCRIPTION: YAML configuration for controlling which OpenRouter providers are used to serve the DeepSeek model, including provider order and fallback settings.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/_posts/2025-01-28-deepseek-down.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- name: openrouter/deepseek/deepseek-chat\n  extra_params:\n    extra_body:\n      provider:\n        # Only use these providers, in this order\n        order: [\"Novita\"]\n        # Don't fall back to other providers\n        allow_fallbacks: false\n```\n\n----------------------------------------\n\nTITLE: Installing Aider via Command Line\nDESCRIPTION: This snippet shows how to install Aider using a command line instruction. The actual installation command is not provided in the snippet, but is referenced to be included elsewhere in the document.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/llms/bedrock.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n{% include install.md %}\n```\n\n----------------------------------------\n\nTITLE: Styling Video Container CSS\nDESCRIPTION: CSS styles for creating a responsive video container with specific aspect ratio (66.34%) and positioning.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/usage/copypaste.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.video-container {\n  position: relative;\n  padding-bottom: 66.34%; /* 2160 / 3256 = 0.6634 */\n  height: 0;\n  overflow: hidden;\n}\n\n.video-container video {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n```\n\n----------------------------------------\n\nTITLE: Using Liquid Templates in Jekyll to Display Post Date\nDESCRIPTION: A Liquid template snippet that conditionally displays the post date from Jekyll page metadata, formatted using the date filter.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/benchmarks-speed-1106.md#2025-04-21_snippet_0\n\nLANGUAGE: liquid\nCODE:\n```\n{% if page.date %}\n<p class=\"post-date\">{{ page.date | date: \"%B %d, %Y\" }}</p>\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Rendering Jekyll Post Date with Liquid Template\nDESCRIPTION: A Liquid template code snippet that displays the post date from Jekyll page metadata using a specific date format pattern.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/benchmarks-speed-1106.md#2025-04-21_snippet_1\n\nLANGUAGE: liquid\nCODE:\n```\n{{ page.date | date: \"%b %-d, %Y\" }}\n```\n\n----------------------------------------\n\nTITLE: MacOS Editor Configurations\nDESCRIPTION: Common editor configurations for macOS including Vim, Emacs, VSCode, Sublime Text, and BBEdit with appropriate wait flags.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/config/editor.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport AIDER_EDITOR=vim\n```\n\nLANGUAGE: bash\nCODE:\n```\nexport AIDER_EDITOR=emacs\n```\n\nLANGUAGE: bash\nCODE:\n```\nexport AIDER_EDITOR=\"code --wait\"\n```\n\nLANGUAGE: bash\nCODE:\n```\nexport AIDER_EDITOR=\"subl --wait\"\n```\n\nLANGUAGE: bash\nCODE:\n```\nexport AIDER_EDITOR=\"bbedit --wait\"\n```\n\n----------------------------------------\n\nTITLE: Markdown Image Link\nDESCRIPTION: Markdown syntax for displaying and linking to an SVG image showing model performance over time.\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/docs/leaderboards/by-release-date.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[![connecting to many LLMs](/assets/models-over-time.svg)](https://aider.chat/assets/models-over-time.svg)\n```\n\n----------------------------------------\n\nTITLE: Test and Lint Commands - Aider v0.36.0\nDESCRIPTION: Examples of test and lint command configuration options for Aider\nSOURCE: https://github.com/aider-ai/aider/blob/main/aider/website/HISTORY.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n--lint-cmd\n--test-cmd\n--test\n/test\n/lint\n```"
  }
]
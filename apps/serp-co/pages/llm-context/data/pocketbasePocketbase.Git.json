[
  {
    "owner": "pocketbase",
    "repo": "pocketbase.git",
    "content": "TITLE: Initializing Basic PocketBase Go Application\nDESCRIPTION: Demonstrates how to create a minimal PocketBase application with a custom 'hello world' route. Includes server initialization and basic request handling.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"log\"\n\n    \"github.com/pocketbase/pocketbase\"\n    \"github.com/pocketbase/pocketbase/core\"\n)\n\nfunc main() {\n    app := pocketbase.New()\n\n    app.OnServe().BindFunc(func(se *core.ServeEvent) error {\n        // registers new \"GET /hello\" route\n        se.Router.GET(\"/hello\", func(re *core.RequestEvent) error {\n            return re.String(200, \"Hello world!\")\n        })\n\n        return se.Next()\n    })\n\n    if err := app.Start(); err != nil {\n        log.Fatal(err)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying PocketBase Records with Field Filtering in JavaScript\nDESCRIPTION: Demonstrates how to use the new fields parameter to limit the returned API fields when querying PocketBase records. This feature allows for more efficient data retrieval by specifying only the needed fields.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = await pb.collection(\"example\").getOne(\"RECORD_ID\", {\n  expand: \"items\",\n  fields: \"name,expand.items.name\",\n})\n```\n\n----------------------------------------\n\nTITLE: Realtime Subscription with Parameters - Dart\nDESCRIPTION: Example showing how to use expanded realtime subscriptions with filter, expand and fields parameters in Dart SDK v0.17.0.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\npb.collection(\"example\").subscribe(\"*\", (e) {\n    ...\n  },\n  expand: \"someRelField\",\n  filter: \"status = 'active'\",\n  fields: \"id,expand.someRelField.*:excerpt(100)\",\n)\n```\n\n----------------------------------------\n\nTITLE: Realtime Subscription with Parameters - JavaScript\nDESCRIPTION: Example showing how to use expanded realtime subscriptions with filter, expand and fields parameters in JavaScript SDK v0.20.0.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\npb.collection(\"example\").subscribe(\"*\", (e) => {\n  ...\n}, {\n  expand: \"someRelField\",\n  filter: \"status = 'active'\",\n  fields: \"id,expand.someRelField.*:excerpt(100)\",\n})\n```\n\n----------------------------------------\n\nTITLE: Finding Records with Filter and Params in Go\nDESCRIPTION: Shows how to use the updated Dao.FindRecordsByFilter() function with placeholder params for safe handling of untrusted user input.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_11\n\nLANGUAGE: go\nCODE:\n```\napp.Dao().FindRecordsByFilter(\"articles\", \"status={:status} && author={:author}\", \"-created\", 10, 0, dbx.Params{\n  \"status\": status,\n  \"author\": author,\n})\n```\n\n----------------------------------------\n\nTITLE: Registering JavaScript VM in Go\nDESCRIPTION: Code example showing how to register JavaScript app hooks as part of a custom Go build for dynamic scripting using the jsvm plugin.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_13\n\nLANGUAGE: go\nCODE:\n```\njsvm.MustRegister(app core.App, config jsvm.Config{})\n```\n\n----------------------------------------\n\nTITLE: Record Filtering and Access Methods in Go\nDESCRIPTION: Helper methods for finding records by filter conditions and checking record access permissions.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_15\n\nLANGUAGE: go\nCODE:\n```\napp.Dao().FindRecordsByFilter(\"posts\", \"title ~ 'lorem ipsum' && visible = true\", \"-created\", 10)\napp.Dao().FindFirstRecordByFilter(\"posts\", \"slug='test' && active=true\")\napp.Dao().CanAccessRecord(record, requestInfo, rule)\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Multi-Match Conditions in JavaScript\nDESCRIPTION: Illustrates how to use multi-match/match-all request data and collection multi-valued fields conditions in PocketBase v0.11.0. It shows both strict matching and 'at least one of' type conditions.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// for each someRelA.someRelB record require the \"status\" field to be \"active\"\nsomeRelA.someRelB.status = \"active\"\n\n// OR for \"at least one of\" condition\nsomeRelA.someRelB.status ?= \"active\"\n```\n\n----------------------------------------\n\nTITLE: Creating DateTime Objects with Timezone in JSVM\nDESCRIPTION: This JavaScript code demonstrates how to create DateTime objects with specific timezones using the JSVM DateTime constructor in PocketBase.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// the same as with CET offset: new DateTime(\"2025-10-26 03:00:00 +01:00\")\nnew DateTime(\"2025-10-26 03:00:00\", \"Europe/Amsterdam\") // 2025-10-26 02:00:00.000Z\n\n// the same as with CEST offset: new DateTime(\"2025-10-26 01:00:00 +02:00\")\nnew DateTime(\"2025-10-26 01:00:00\", \"Europe/Amsterdam\") // 2025-10-25 23:00:00.000Z\n```\n\n----------------------------------------\n\nTITLE: Querying Relation Fields in JavaScript\nDESCRIPTION: Demonstrates how to query @request.data.someRelField.* relation fields in PocketBase v0.11.0. This allows checking properties of related records in API rules.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// example submitted data: {\"someRel\": \"REL_RECORD_ID\"}\n@request.data.someRel.status = \"active\"\n```\n\n----------------------------------------\n\nTITLE: Using Security Crypto Functions in JSVM\nDESCRIPTION: Demonstrates the usage of newly added JSVM helper crypto primitives under the $security namespace.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_12\n\nLANGUAGE: js\nCODE:\n```\n$security.md5(text)\n$security.sha256(text)\n$security.sha512(text)\n```\n\n----------------------------------------\n\nTITLE: Querying Records with Excerpt Field Modifier in PocketBase - JavaScript\nDESCRIPTION: Demonstrates using the :excerpt field modifier to get a shortened plain text version of string values when listing records. The excerpt function takes a maximum length parameter and optionally a withEllipsis flag.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nawait pb.collection(\"example\").getList(1, 20, {\n  \"fields\": \"*,description:excerpt(100)\"\n})\n```\n\n----------------------------------------\n\nTITLE: Installing Latest JavaScript SDK for PocketBase\nDESCRIPTION: Command to install the latest version of the PocketBase JavaScript SDK using npm.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\nnpm install pocketbase@latest --save\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Body Field Modifiers in JavaScript\nDESCRIPTION: Shows how to use '+' and '-' modifiers for number, files, select and relation fields in PocketBase v0.11.0. These modifiers allow for incrementing numbers, adding/removing relation items, and deleting files.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  // oldValue + 2\n  \"someNumber+\": 2,\n\n  // oldValue + [\"id1\", \"id2\"] - [\"id3\"]\n  \"someRelation+\": [\"id1\", \"id2\"],\n  \"someRelation-\": [\"id3\"],\n\n  // delete single file by its name (file fields supports only the \"-\" modifier!)\n  \"someFile-\": \"filename.png\",\n}\n```\n\n----------------------------------------\n\nTITLE: File Field Upload Behavior in PocketBase\nDESCRIPTION: Demonstrates the new file upload behavior for multiple file fields, showing how to replace, prepend, or append files to existing values using different syntax patterns.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\"documents\": [file1, file2]  // => [file1_name, file2_name]\n\"+documents\": [file1, file2] // => [file1_name, file2_name, old1_name, old2_name]\n\"documents+\": [file1, file2] // => [old1_name, old2_name, file1_name, file2_name]\n```\n\n----------------------------------------\n\nTITLE: Registering Event Hooks in Go\nDESCRIPTION: New event hooks added to PocketBase for various system events including bootstrap, API errors, realtime connections, and record authentication operations.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_7\n\nLANGUAGE: go\nCODE:\n```\napp.OnBeforeBootstrap()\napp.OnAfterBootstrap()\napp.OnBeforeApiError()\napp.OnAfterApiError()\napp.OnRealtimeDisconnectRequest()\napp.OnRealtimeBeforeMessageSend()\napp.OnRealtimeAfterMessageSend()\napp.OnRecordBeforeRequestPasswordResetRequest()\napp.OnRecordAfterRequestPasswordResetRequest()\napp.OnRecordBeforeConfirmPasswordResetRequest()\napp.OnRecordAfterConfirmPasswordResetRequest()\napp.OnRecordBeforeRequestVerificationRequest()\napp.OnRecordAfterRequestVerificationRequest()\napp.OnRecordBeforeConfirmVerificationRequest()\napp.OnRecordAfterConfirmVerificationRequest()\napp.OnRecordBeforeRequestEmailChangeRequest()\napp.OnRecordAfterRequestEmailChangeRequest()\napp.OnRecordBeforeConfirmEmailChangeRequest()\napp.OnRecordAfterConfirmEmailChangeRequest()\n```\n\n----------------------------------------\n\nTITLE: New Record Helper Methods in Go\nDESCRIPTION: New helper methods added to the models.Record struct for auth collection operations. These methods allow for easier manipulation of record data related to authentication.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_15\n\nLANGUAGE: go\nCODE:\n```\nfunc (m *Record) Username() string\nfunc (m *Record) SetUsername(username string) error\nfunc (m *Record) Email() string\nfunc (m *Record) SetEmail(email string) error\nfunc (m *Record) EmailVisibility() bool\nfunc (m *Record) SetEmailVisibility(visible bool) error\nfunc (m *Record) IgnoreEmailVisibility(state bool)\nfunc (m *Record) Verified() bool\nfunc (m *Record) SetVerified(verified bool) error\nfunc (m *Record) TokenKey() string\nfunc (m *Record) SetTokenKey(key string) error\nfunc (m *Record) RefreshTokenKey() error\nfunc (m *Record) LastResetSentAt() types.DateTime\nfunc (m *Record) SetLastResetSentAt(dateTime types.DateTime) error\nfunc (m *Record) LastVerificationSentAt() types.DateTime\nfunc (m *Record) SetLastVerificationSentAt(dateTime types.DateTime) error\nfunc (m *Record) ValidatePassword(password string) bool\nfunc (m *Record) SetPassword(password string) error\n```\n\n----------------------------------------\n\nTITLE: Security Vulnerability Fix\nDESCRIPTION: Fixed OAuth2 email autolinking security vulnerability affecting systems with both OAuth2 and Password auth enabled.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n- ⚠️ Fixed a security vulnerability related to the OAuth2 email autolinking (thanks to @dalurness for reporting it).\n```\n\n----------------------------------------\n\nTITLE: OAuth2 POST Redirect Support\nDESCRIPTION: Added support for OAuth2 POST redirects with form_post response mode, particularly for Apple OAuth2 integration scopes.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- Added OAuth2 POST redirect support (in response_mode=form_post) to allow specifying scopes for the Apple OAuth2 integration.\n```\n\n----------------------------------------\n\nTITLE: Using :isset Modifier in JavaScript\nDESCRIPTION: Shows how to use the :isset modifier for static request data fields in PocketBase v0.11.0. This can be used to prevent changing certain fields.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// prevent changing the \"role\" field\n@request.data.role:isset = false\n```\n\n----------------------------------------\n\nTITLE: Updating StaticDirectoryHandler in PocketBase Go API\nDESCRIPTION: Describes the change in the second argument of the StaticDirectoryHandler function, which now enables or disables index.html forwarding for missing files, useful for Single Page Applications (SPAs).\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_18\n\nLANGUAGE: Go\nCODE:\n```\napis.StaticDirectoryHandler(fileSystem, enableIndexFallback)\n```\n\n----------------------------------------\n\nTITLE: Using :length Modifier in JavaScript\nDESCRIPTION: Demonstrates the use of :length modifier for arrayable request data and collection fields in PocketBase v0.11.0. This can be used to check the length of select, file, or relation fields.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// example submitted data: {\"someSelectField\": [\"val1\", \"val2\"]}\n@request.data.someSelectField:length = 2\n\n// check existing record field length\nsomeSelectField:length = 2\n```\n\n----------------------------------------\n\nTITLE: Using :each Modifier in JavaScript\nDESCRIPTION: Shows how to use the :each modifier for multi-select request data and collection fields in PocketBase v0.11.0. This allows applying a condition to each item in a multi-select field.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// check if all selected rows has \"pb_\" prefix\nroles:each ~ 'pb_%'\n```\n\n----------------------------------------\n\nTITLE: Using Raw Template Function in JSVM Templates - Template\nDESCRIPTION: Shows how to output raw/verbatim HTML content in JSVM templates using the global raw template function. This allows unescaped HTML to be rendered in the template output.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n{{.description|raw}}\n```\n\n----------------------------------------\n\nTITLE: Logger Implementation Changes\nDESCRIPTION: Examples of logging implementation changes for both Go and JavaScript using the new generalized logging system.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_6\n\nLANGUAGE: go\nCODE:\n```\napp.Logger().Info(\"Example message\", \"total\", 123, \"details\", \"lorem ipsum...\")\n\n// JS: https://pocketbase.io/docs/js-logging/\n$app.logger().info(\"Example message\", \"total\", 123, \"details\", \"lorem ipsum...\")\n```\n\n----------------------------------------\n\nTITLE: Running PocketBase Superuser Dashboard UI Development Commands\nDESCRIPTION: Commands for setting up and running the PocketBase Superuser dashboard UI during development. Includes commands for installing dependencies, starting a development server with hot reload, and generating a production-ready bundle.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/ui/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# install dependencies\nnpm install\n\n# start a dev server with hot reload at localhost:3000\nnpm run dev\n\n# or generate production ready bundle in dist/ directory\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Migration Registration in Go\nDESCRIPTION: Example of registering migrations including support for JavaScript migrations using the embedded JS interpreter.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nmigrationsDir := \"\" // default to \"pb_migrations\" (for js) and \"migrations\" (for go)\n\n// load js files if you want to allow loading external JavaScript migrations\njsvm.MustRegisterMigrations(app, &jsvm.MigrationsOptions{\n  Dir: migrationsDir,\n})\n\n// register the `migrate` command\nmigratecmd.MustRegister(app, app.RootCmd, &migratecmd.Options{\n  TemplateLang: migratecmd.TemplateLangJS, // or migratecmd.TemplateLangGo (default)\n  Dir:          migrationsDir,\n  Automigrate:  true,\n})\n```\n\n----------------------------------------\n\nTITLE: JavaScript Migration Example\nDESCRIPTION: Sample JavaScript migration file showing collection name update with up and down migration functions.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nmigrate((db) => {\n  // up\n  const dao = new Dao(db)\n  const collection = dao.findCollectionByNameOrId(\"lngf8rb3dqu86r3\")\n  collection.name = \"posts_new\"\n  return dao.saveCollection(collection)\n}, (db) => {\n  // down\n  const dao = new Dao(db)\n  const collection = dao.findCollectionByNameOrId(\"lngf8rb3dqu86r3\")\n  collection.name = \"posts_old\"\n  return dao.saveCollection(collection)\n})\n```\n\n----------------------------------------\n\nTITLE: Updating API Scenario Test for Create API Rule Failure in Go\nDESCRIPTION: This code snippet demonstrates how to update a Go API scenario test for checking a Create API rule failure after changes in the rule check order.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntests.ApiScenario{\n    Name:   \"Example test that checks a Create API rule failure\"\n    Method: http.MethodPost,\n    URL:    \"/api/collections/example/records\",\n    ...\n    // old:\n    ExpectedEvents:  map[string]int{\n        \"*\":                     0,\n        \"OnRecordCreateRequest\": 1,\n    },\n    // new:\n    ExpectedEvents:  map[string]int{\"*\": 0},\n}\n```\n\n----------------------------------------\n\nTITLE: Serving PocketBase with Custom Domain in Shell\nDESCRIPTION: Demonstrates the simplified serve command that accepts domain names as arguments, reducing manual setup for production deployments.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\n./pocketbase serve yourdomain.com\n```\n\n----------------------------------------\n\nTITLE: JavaScript JSVM Example\nDESCRIPTION: Example showing the migration from String.fromCharCode to the new toString helper function for handling multi-byte characters.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndecodeURIComponent(escape(String.fromCharCode(...bytes))) -> toString(bytes)\n```\n\n----------------------------------------\n\nTITLE: Creating PocketBase Admin Account via Command Line\nDESCRIPTION: Shows how to use the new 'pocketbase admin' command to create a new admin account from the command line. This is part of the new administrative console commands added in v0.16.0.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_17\n\nLANGUAGE: shell\nCODE:\n```\n./pocketbase admin create test@example.com 123456890\n```\n\n----------------------------------------\n\nTITLE: Updating PocketBase Admin Account Password via Command Line\nDESCRIPTION: Demonstrates how to change the password of an existing admin account using the 'pocketbase admin' command. This is another feature of the new administrative console commands.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_18\n\nLANGUAGE: shell\nCODE:\n```\n./pocketbase admin update test@example.com 0987654321\n```\n\n----------------------------------------\n\nTITLE: Deleting PocketBase Admin Account via Command Line\nDESCRIPTION: Shows how to delete an admin account using the 'pocketbase admin' command. This command allows for quick removal of admin accounts from the command line.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_19\n\nLANGUAGE: shell\nCODE:\n```\n./pocketbase admin delete test@example.com\n```\n\n----------------------------------------\n\nTITLE: Accessing Original Filename in Go\nDESCRIPTION: Example of accessing the original uploaded filename stored in file metadata using the filesystem interface.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nfs, _ := app.NewFilesystem()\ndefer fs.Close()\n\nattrs, _ := fs.Attributes(fikeKey)\nattrs.Metadata[\"original_name\"]\n```\n\n----------------------------------------\n\nTITLE: Installing Dart SDK for PocketBase\nDESCRIPTION: Commands to add the PocketBase Dart SDK to a Dart or Flutter project using pub.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\ndart pub add pocketbase:^0.5.0\n# or with Flutter:\nflutter pub add pocketbase:^0.5.0\n```\n\n----------------------------------------\n\nTITLE: ServeEvent Structure Definition in Go\nDESCRIPTION: Definition of the ServeEvent struct showing new fields for HTTP server configuration and certificate management.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_14\n\nLANGUAGE: go\nCODE:\n```\ntype ServeEvent struct {\n  App    App\n  Router *echo.Echo\n  // new fields\n  Server      *http.Server      // allows adjusting the HTTP server config (global timeouts, TLS options, etc.)\n  CertManager *autocert.Manager // allows adjusting the autocert options (cache dir, host policy, etc.)\n}\n```\n\n----------------------------------------\n\nTITLE: DAO Method Renaming\nDESCRIPTION: Code showing the renamed Dao logging methods as part of the logging system overhaul.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nDao.RequestQuery(...)      -> Dao.LogQuery(...)\nDao.FindRequestById(...)   -> Dao.FindLogById(...)\nDao.RequestsStats(...)     -> Dao.LogsStats(...)\nDao.DeleteOldRequests(...) -> Dao.DeleteOldLogs(...)\nDao.SaveRequest(...)       -> Dao.SaveLog(...)\n```\n\n----------------------------------------\n\nTITLE: Google OAuth2 User Info Response Changes\nDESCRIPTION: Demonstrates changes in the Google OAuth2 userinfo response structure, showing field mapping changes from v2 to v3.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\nmeta.rawUser.id             => meta.rawUser.sub\nmeta.rawUser.verified_email => meta.rawUser.email_verified\n```\n\n----------------------------------------\n\nTITLE: Updated Authentication Request Body for PocketBase API\nDESCRIPTION: Example of the new request body format for password authentication in PocketBase API. The 'email' field has been renamed to 'identity' to accommodate both username and email authentication.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\"identity\": \"usernameOrEmail\", \"password\": \"123456\"}\n```\n\n----------------------------------------\n\nTITLE: Updated Admin Authentication Request Body for PocketBase API\nDESCRIPTION: Example of the new request body format for admin password authentication in PocketBase API. The 'email' field has been renamed to 'identity'.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\"identity\": \"test@example.com\", \"password\": \"123456\"}\n```\n\n----------------------------------------\n\nTITLE: Updated Error Response Structure\nDESCRIPTION: Shows the new error response format where the top-level 'code' key has been renamed to 'status' for consistency with Go APIs, while maintaining the error field 'code' key.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"status\": 400, // <-- old: \"code\"\n    \"message\": \"Failed to create record.\",\n    \"data\": {\n        \"title\": {\n            \"code\": \"validation_required\",\n            \"message\": \"Missing required value.\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updated Auth Methods Response Structure\nDESCRIPTION: Illustrates the new authentication methods response format, including MFA, OTP, password, and OAuth2 configuration options.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"mfa\": {\n        \"duration\": 100,\n        \"enabled\": true\n    },\n    \"otp\": {\n        \"duration\": 0,\n        \"enabled\": false\n    },\n    \"password\": {\n        \"enabled\": true,\n        \"identityFields\": [\"email\", \"username\"]\n    },\n    \"oauth2\": {\n        \"enabled\": true,\n        \"providers\": [{\"name\": \"gitlab\", ...}, {\"name\": \"google\", ...}]\n    },\n    // old fields...\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Mailer Message Recipients in Go\nDESCRIPTION: Code example showing how to update mailer message recipients from the old format to the new format using mail.Address structs in v0.13.0.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nmessage := &mailer.Message{\n  ...\n\n  // (old) To: mail.Address{Address: \"to@example.com\"}\n  To: []mail.Address{{Address: \"to@example.com\", Name: \"Some optional name\"}},\n\n  // (old) Cc: []string{\"cc@example.com\"}\n  Cc: []mail.Address{{Address: \"cc@example.com\", Name: \"Some optional name\"}},\n\n  // (old) Bcc: []string{\"bcc@example.com\"}\n  Bcc: []mail.Address{{Address: \"bcc@example.com\", Name: \"Some optional name\"}},\n\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Record Unknown Data Methods in Go\nDESCRIPTION: New methods added to models.Record for handling serialized custom fields data. These methods allow for retrieving and controlling the inclusion of unknown data in the record.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_16\n\nLANGUAGE: go\nCODE:\n```\nfunc (m *Record) UnknownData() map[string]any\nfunc (m *Record) WithUnknownData(state bool)\n```\n\n----------------------------------------\n\nTITLE: AWS SDK Version Configuration in Go Module\nDESCRIPTION: Specifies required AWS SDK version dependencies in go.mod to maintain compatibility with non-AWS S3 providers that don't support the latest AWS Data integrity checks.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// go.mod\ngithub.com/aws/aws-sdk-go-v2 v1.36.1\ngithub.com/aws/aws-sdk-go-v2/config v1.28.10\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.51\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.17.48\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.72.2\n\n// after that run\ngo clean -modcache && go mod tidy\n```\n\n----------------------------------------\n\nTITLE: Migration Error Handling Notification\nDESCRIPTION: Reference to adding error checks in autogenerated Go migrations per issue #4448.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_16_22.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- Added error checks to the autogenerated Go migrations ([#4448](https://github.com/pocketbase/pocketbase/issues/4448)).\n```\n\n----------------------------------------\n\nTITLE: Starting Admin UI Development Server\nDESCRIPTION: Command to start Vite development server for Admin UI development.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Running Go Tests\nDESCRIPTION: Commands to run PocketBase's Go test suite using either direct go command or Make.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ngo test ./...\n\n# or using the Makefile\nmake test\n```\n\n----------------------------------------\n\nTITLE: Running Go Linter\nDESCRIPTION: Commands to run golangci-lint for code quality checks using either direct command or Make.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngolangci-lint run -c ./golangci.yml ./...\n\n# or using the Makefile\nmake lint\n```\n\n----------------------------------------\n\nTITLE: Cloning PocketBase Repository\nDESCRIPTION: Command to clone your forked PocketBase repository for local development.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/your_username/pocketbase.git\n```\n\n----------------------------------------\n\nTITLE: Deprecating PocketBase Components in Go\nDESCRIPTION: Lists the components that have been marked as deprecated and will be removed in PocketBase v0.9+. These include email authentication settings, user field type, and user options.\nSOURCE: https://github.com/pocketbase/pocketbase.git/blob/master/CHANGELOG_8_15.md#2025-04-22_snippet_17\n\nLANGUAGE: Go\nCODE:\n```\ncore.Settings.EmailAuth{}\ncore.EmailAuthConfig{}\nschema.FieldTypeUser\nschema.UserOptions{}\n```"
  }
]
[
  {
    "owner": "anthropics",
    "repo": "anthropic-sdk-typescript",
    "content": "TITLE: Basic Message Creation with Anthropic SDK\nDESCRIPTION: Example showing how to initialize the client and create a basic message using the Anthropic API with Claude model.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport Anthropic from '@anthropic-ai/sdk';\n\nconst client = new Anthropic({\n  apiKey: process.env['ANTHROPIC_API_KEY'], // This is the default and can be omitted\n});\n\nasync function main() {\n  const message = await client.messages.create({\n    max_tokens: 1024,\n    messages: [{ role: 'user', content: 'Hello, Claude' }],\n    model: 'claude-3-5-sonnet-latest',\n  });\n\n  console.log(message.content);\n}\n\nmain();\n```\n\n----------------------------------------\n\nTITLE: Streaming Messages with Anthropic SDK\nDESCRIPTION: Example demonstrating how to create and handle streaming responses using Server Sent Events (SSE).\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport Anthropic from '@anthropic-ai/sdk';\n\nconst client = new Anthropic();\n\nconst stream = await client.messages.create({\n  max_tokens: 1024,\n  messages: [{ role: 'user', content: 'Hello, Claude' }],\n  model: 'claude-3-5-sonnet-latest',\n  stream: true,\n});\nfor await (const messageStreamEvent of stream) {\n  console.log(messageStreamEvent.type);\n}\n```\n\n----------------------------------------\n\nTITLE: Streaming Helpers Implementation\nDESCRIPTION: Example demonstrating the use of streaming helpers for processing message streams with event handlers.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport Anthropic from '@anthropic-ai/sdk';\n\nconst anthropic = new Anthropic();\n\nasync function main() {\n  const stream = anthropic.messages\n    .stream({\n      model: 'claude-3-5-sonnet-latest',\n      max_tokens: 1024,\n      messages: [\n        {\n          role: 'user',\n          content: 'Say hello there!',\n        },\n      ],\n    })\n    .on('text', (text) => {\n      console.log(text);\n    });\n\n  const message = await stream.finalMessage();\n  console.log(message);\n}\n\nmain();\n```\n\n----------------------------------------\n\nTITLE: Create Message - TypeScript\nDESCRIPTION: Method to create a new message with beta features enabled, supporting various content types and tools.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/api.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nclient.beta.messages.create({ ...params }) -> BetaMessage\n```\n\n----------------------------------------\n\nTITLE: Installing Anthropic SDK via NPM\nDESCRIPTION: Command to install the Anthropic TypeScript SDK package using npm package manager.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @anthropic-ai/sdk\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript Types with Anthropic SDK\nDESCRIPTION: Example showing how to use TypeScript type definitions for request parameters and response fields.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport Anthropic from '@anthropic-ai/sdk';\n\nconst client = new Anthropic({\n  apiKey: process.env['ANTHROPIC_API_KEY'], // This is the default and can be omitted\n});\n\nasync function main() {\n  const params: Anthropic.MessageCreateParams = {\n    max_tokens: 1024,\n    messages: [{ role: 'user', content: 'Hello, Claude' }],\n    model: 'claude-3-5-sonnet-latest',\n  };\n  const message: Anthropic.Message = await client.messages.create(params);\n}\n\nmain();\n```\n\n----------------------------------------\n\nTITLE: Message Batch Operations - TypeScript\nDESCRIPTION: Methods for creating, retrieving, listing, deleting, and managing message batches with beta features enabled.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/api.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nclient.beta.messages.batches.create({ ...params }) -> BetaMessageBatch\n```\n\nLANGUAGE: typescript\nCODE:\n```\nclient.beta.messages.batches.retrieve(messageBatchId, { ...params }) -> BetaMessageBatch\n```\n\nLANGUAGE: typescript\nCODE:\n```\nclient.beta.messages.batches.list({ ...params }) -> BetaMessageBatchesPage\n```\n\nLANGUAGE: typescript\nCODE:\n```\nclient.beta.messages.batches.delete(messageBatchId, { ...params }) -> BetaDeletedMessageBatch\n```\n\nLANGUAGE: typescript\nCODE:\n```\nclient.beta.messages.batches.cancel(messageBatchId, { ...params }) -> BetaMessageBatch\n```\n\nLANGUAGE: typescript\nCODE:\n```\nclient.beta.messages.batches.results(messageBatchId, { ...params }) -> JSONLDecoder<BetaMessageBatchIndividualResponse>\n```\n\n----------------------------------------\n\nTITLE: Token Usage Tracking with Anthropic SDK\nDESCRIPTION: Example showing how to access token usage information from message responses.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst message = await client.messages.create(...)\nconsole.log(message.usage)\n// { input_tokens: 25, output_tokens: 13 }\n```\n\n----------------------------------------\n\nTITLE: List Available Models - TypeScript\nDESCRIPTION: Method to list all available models with beta features enabled, returning a paginated response of model information.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/api.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nclient.beta.models.list({ ...params }) -> BetaModelInfosPage\n```\n\n----------------------------------------\n\nTITLE: Error Handling with Anthropic SDK\nDESCRIPTION: Example demonstrating error handling for API requests including status codes and error types.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nasync function main() {\n  const message = await client.messages\n    .create({\n      max_tokens: 1024,\n      messages: [{ role: 'user', content: 'Hello, Claude' }],\n      model: 'claude-3-5-sonnet-latest',\n    })\n    .catch(async (err) => {\n      if (err instanceof Anthropic.APIError) {\n        console.log(err.status); // 400\n        console.log(err.name); // BadRequestError\n        console.log(err.headers); // {server: 'nginx', ...}\n      } else {\n        throw err;\n      }\n    });\n}\n\nmain();\n```\n\n----------------------------------------\n\nTITLE: Count Message Tokens - TypeScript\nDESCRIPTION: Method to count tokens in a message with beta features enabled.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/api.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nclient.beta.messages.countTokens({ ...params }) -> BetaMessageTokensCount\n```\n\n----------------------------------------\n\nTITLE: Creating Message Batches\nDESCRIPTION: Example showing how to create message batches using the beta Message Batches API.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nawait anthropic.beta.messages.batches.create({\n  requests: [\n    {\n      custom_id: 'my-first-request',\n      params: {\n        model: 'claude-3-5-sonnet-latest',\n        max_tokens: 1024,\n        messages: [{ role: 'user', content: 'Hello, world' }],\n      },\n    },\n    {\n      custom_id: 'my-second-request',\n      params: {\n        model: 'claude-3-5-sonnet-latest',\n        max_tokens: 1024,\n        messages: [{ role: 'user', content: 'Hi again, friend' }],\n      },\n    },\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Batch Results\nDESCRIPTION: Example showing how to retrieve and process results from a message batch.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst results = await anthropic.beta.messages.batches.results(batch_id);\nfor await (const entry of results) {\n  if (entry.result.type === 'succeeded') {\n    console.log(entry.result.message.content)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Auto-pagination with for-await Loop in Anthropic TypeScript SDK\nDESCRIPTION: Demonstrates how to fetch all beta message batches across multiple pages using the for-await loop syntax. This approach automatically handles pagination without manual intervention.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nasync function fetchAllBetaMessagesBatches(params) {\n  const allBetaMessagesBatches = [];\n  // Automatically fetches more pages as needed.\n  for await (const betaMessageBatch of client.beta.messages.batches.list({ limit: 20 })) {\n    allBetaMessagesBatches.push(betaMessageBatch);\n  }\n  return allBetaMessagesBatches;\n}\n```\n\n----------------------------------------\n\nTITLE: Manual Pagination with the Anthropic TypeScript SDK\nDESCRIPTION: Shows how to manually paginate through beta message batches by requesting one page at a time and using the provided convenience methods for navigation.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nlet page = await client.beta.messages.batches.list({ limit: 20 });\nfor (const betaMessageBatch of page.data) {\n  console.log(betaMessageBatch);\n}\n\n// Convenience methods are provided for manually paginating:\nwhile (page.hasNextPage()) {\n  page = await page.getNextPage();\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Raw Response Data in Anthropic API Requests\nDESCRIPTION: Shows two methods for accessing the raw Response object returned by fetch(): using .asResponse() to get only the raw response, or .withResponse() to get both the parsed data and raw response.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nconst client = new Anthropic();\n\nconst response = await client.messages\n  .create({\n    max_tokens: 1024,\n    messages: [{ role: 'user', content: 'Hello, Claude' }],\n    model: 'claude-3-5-sonnet-latest',\n  })\n  .asResponse();\nconsole.log(response.headers.get('X-My-Header'));\nconsole.log(response.statusText); // access the underlying Response object\n\nconst { data: message, response: raw } = await client.messages\n  .create({\n    max_tokens: 1024,\n    messages: [{ role: 'user', content: 'Hello, Claude' }],\n    model: 'claude-3-5-sonnet-latest',\n  })\n  .withResponse();\nconsole.log(raw.headers.get('X-My-Header'));\nconsole.log(message.content);\n```\n\n----------------------------------------\n\nTITLE: Retrieve Model Information - TypeScript\nDESCRIPTION: Method to retrieve information about a specific model using its ID with beta features enabled.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/api.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclient.beta.models.retrieve(modelId) -> BetaModelInfo\n```\n\n----------------------------------------\n\nTITLE: Initializing Message Stream in Anthropic TypeScript SDK\nDESCRIPTION: Creates a MessageStream instance for handling streaming responses from the Anthropic API. The stream method accepts options and returns a MessageStream object that provides event handling and message accumulation capabilities.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/helpers.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nanthropic.messages.stream({ … }, options?): MessageStream\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Anthropic Vertex SDK in JavaScript\nDESCRIPTION: Example code showing how to initialize the Anthropic Vertex client and send a message to Claude. The client reads required configuration from environment variables and uses Google Auth Library for authentication. This demonstrates creating a simple chat with Claude through Vertex AI.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/packages/vertex-sdk/README.md#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { AnthropicVertex } from '@anthropic-ai/vertex-sdk';\n\n// Reads from the `CLOUD_ML_REGION` & `ANTHROPIC_VERTEX_PROJECT_ID` environment variables.\n// Additionally goes through the standard `google-auth-library` flow.\nconst client = new AnthropicVertex();\n\nasync function main() {\n  const result = await client.messages.create({\n    messages: [\n      {\n        role: 'user',\n        content: 'Hey Claude!',\n      },\n    ],\n    model: 'claude-3-5-sonnet-v2@20241022',\n    max_tokens: 300,\n  });\n  console.log(JSON.stringify(result, null, 2));\n}\n\nmain();\n```\n\n----------------------------------------\n\nTITLE: Using Anthropic Bedrock Client\nDESCRIPTION: Example demonstrating how to initialize the Anthropic Bedrock client and send a message request. Requires AWS credentials to be configured either through ~/.aws/credentials file or environment variables.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/packages/bedrock-sdk/README.md#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { AnthropicBedrock } from '@anthropic-ai/bedrock-sdk';\n\n// Note: this assumes you have configured AWS credentials in a way\n// that the AWS Node SDK will recognise, typicaly a shared `~/.aws/credentials`\n// file or `AWS_ACCESS_KEY_ID` & `AWS_SECRET_ACCESS_KEY` environment variables.\n//\n// https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/setting-credentials-node.html\nconst client = new AnthropicBedrock();\n\nasync function main() {\n  const message = await client.messages.create({\n    model: 'anthropic.claude-3-5-sonnet-20241022-v2:0',\n    messages: [\n      {\n        role: 'user',\n        content: 'Hello!',\n      },\n    ],\n    max_tokens: 1024,\n  });\n  console.log(message);\n}\n\nmain();\n```\n\n----------------------------------------\n\nTITLE: Overriding Default Headers in Anthropic API Requests\nDESCRIPTION: Demonstrates how to override default headers like 'anthropic-version' on a per-request basis. This example shows setting a custom header value when creating a message.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport Anthropic from '@anthropic-ai/sdk';\n\nconst client = new Anthropic();\n\nconst message = await client.messages.create(\n  {\n    max_tokens: 1024,\n    messages: [{ role: 'user', content: 'Hello, Claude' }],\n    model: 'claude-3-5-sonnet-latest',\n  },\n  { headers: { 'anthropic-version': 'My-Custom-Value' } },\n);\n```\n\n----------------------------------------\n\nTITLE: Custom Fetch Client with Request/Response Logging in Anthropic SDK\nDESCRIPTION: Demonstrates how to provide a custom fetch function to log or modify requests and responses. This can be used for debugging or customizing the request/response cycle.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nimport { fetch } from 'undici'; // as one example\nimport Anthropic from '@anthropic-ai/sdk';\n\nconst client = new Anthropic({\n  fetch: async (url: RequestInfo, init?: RequestInit): Promise<Response> => {\n    console.log('About to make a request', url, init);\n    const response = await fetch(url, init);\n    console.log('Got response', response);\n    return response;\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Agents for Proxies in Anthropic SDK\nDESCRIPTION: Shows how to configure HTTP agents for proxy support, both globally for all requests and per individual request. This is useful for using the API behind a proxy.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nimport http from 'http';\nimport { HttpsProxyAgent } from 'https-proxy-agent';\n\n// Configure the default for all requests:\nconst client = new Anthropic({\n  httpAgent: new HttpsProxyAgent(process.env.PROXY_URL),\n});\n\n// Override per-request:\nawait client.messages.create(\n  {\n    max_tokens: 1024,\n    messages: [{ role: 'user', content: 'Hello, Claude' }],\n    model: 'claude-3-5-sonnet-latest',\n  },\n  {\n    httpAgent: new http.Agent({ keepAlive: false }),\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Using Undocumented Request Parameters in Anthropic SDK\nDESCRIPTION: Shows how to use TypeScript's // @ts-expect-error annotation to include undocumented parameters in API requests.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nclient.foo.create({\n  foo: 'my_param',\n  bar: 12,\n  // @ts-expect-error baz is not yet public\n  baz: 'undocumented option',\n});\n```\n\n----------------------------------------\n\nTITLE: Making Custom Requests to Undocumented Endpoints in Anthropic SDK\nDESCRIPTION: Demonstrates how to make requests to undocumented endpoints using HTTP verbs like client.post. This approach respects client options such as retries.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.post('/some/path', {\n  body: { some_prop: 'foo' },\n  query: { some_query_arg: 'bar' },\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Anthropic Vertex SDK via npm\nDESCRIPTION: Command for installing the Anthropic Vertex SDK package using npm. This package provides TypeScript/JavaScript access to Anthropic's models through Google Cloud's Vertex AI platform.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/packages/vertex-sdk/README.md#2025-04-12_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @anthropic-ai/vertex-sdk\n```\n\n----------------------------------------\n\nTITLE: Installing Anthropic Bedrock SDK\nDESCRIPTION: Command to install the Anthropic Bedrock SDK via npm package manager.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/packages/bedrock-sdk/README.md#2025-04-12_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @anthropic-ai/bedrock-sdk\n```\n\n----------------------------------------\n\nTITLE: Setting up the Anthropic TypeScript SDK environment\nDESCRIPTION: Commands to install dependencies and build the SDK. This process installs all required dependencies and builds output files to the 'dist/' directory.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ yarn\n$ yarn build\n```\n\n----------------------------------------\n\nTITLE: Installing Anthropic TypeScript SDK from Git\nDESCRIPTION: Command to install the SDK directly from the GitHub repository using npm. This allows using the latest version from the repository.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install git+ssh://git@github.com:anthropics/anthropic-sdk-typescript.git\n```\n\n----------------------------------------\n\nTITLE: Linking local Anthropic TypeScript SDK repository\nDESCRIPTION: Commands to clone the repository and link it locally using yarn or pnpm. This is useful for development or testing against a local copy of the SDK.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n# Clone\n$ git clone https://www.github.com/anthropics/anthropic-sdk-typescript\n$ cd anthropic-sdk-typescript\n\n# With yarn\n$ yarn link\n$ cd ../my-package\n$ yarn link @anthropic-ai/sdk\n\n# With pnpm\n$ pnpm link --global\n$ cd ../my-package\n$ pnpm link -—global @anthropic-ai/sdk\n```\n\n----------------------------------------\n\nTITLE: Running an example in the Anthropic TypeScript SDK\nDESCRIPTION: Commands to make an example file executable and run it using 'yarn tsn'. This allows testing of the example against the API.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ chmod +x examples/<your-example>.ts\n# run the example against your api\n$ yarn tsn -T examples/<your-example>.ts\n```\n\n----------------------------------------\n\nTITLE: Setting up mock server for Anthropic TypeScript SDK tests\nDESCRIPTION: Command to set up a mock server using Prism against the OpenAPI spec. This is required for running most tests in the SDK.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n$ npx prism mock path/to/your/openapi.yml\n```\n\n----------------------------------------\n\nTITLE: Running tests for Anthropic TypeScript SDK\nDESCRIPTION: Command to run the test suite for the Anthropic TypeScript SDK. This should be executed after setting up the mock server.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n$ yarn run test\n```\n\n----------------------------------------\n\nTITLE: Demonstrating dangerouslyAllowBrowser option in HTML\nDESCRIPTION: This code snippet shows the usage of the dangerouslyAllowBrowser option in HTML. It explains why enabling this option can be dangerous and when it might be acceptable to use it.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/README.md#2025-04-12_snippet_17\n\nLANGUAGE: html\nCODE:\n```\n<details>\n  <summary><b>More explanation</b></summary>\n  <h3>Why is this dangerous?</h3>\n  Enabling the <code>dangerouslyAllowBrowser</code> option can be dangerous because it exposes your secret API credentials in the client-side code. Web browsers are inherently less secure than server environments,\n  any user with access to the browser can potentially inspect, extract, and misuse these credentials. This could lead to unauthorized access using your credentials and potentially compromise sensitive data or functionality.\n  <h3>When might this not be dangerous?</h3>\n  In certain scenarios where enabling browser support might not pose significant risks:\n  <ul>\n    <li>Internal Tools: If the application is used solely within a controlled internal environment where the users are trusted, the risk of credential exposure can be mitigated.</li>\n    <li>Development or debugging purpose: Enabling this feature temporarily might be acceptable, provided the credentials are short-lived, aren't also used in production environments, or are frequently rotated.</li>\n  </ul>\n</details>\n```\n\n----------------------------------------\n\nTITLE: Importing Node.js Shim for Anthropic SDK\nDESCRIPTION: Example of manually importing the Node.js-specific shim for the Anthropic SDK when automatic resolution isn't working correctly.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/src/_shims/README.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport '@anthropic-ai/sdk/shims/node'\n```\n\n----------------------------------------\n\nTITLE: Importing Web Shim for Anthropic SDK\nDESCRIPTION: Example of manually importing the web-specific shim for the Anthropic SDK when automatic resolution isn't working correctly.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/src/_shims/README.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport '@anthropic-ai/sdk/shims/web'\n```\n\n----------------------------------------\n\nTITLE: Adding an example to the Anthropic TypeScript SDK\nDESCRIPTION: Template for adding a new example file to the 'examples/' directory. The shebang line allows the example to be run directly using 'yarn tsn'.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\n#!/usr/bin/env -S npm run tsn -T\n…\n```\n\n----------------------------------------\n\nTITLE: Linting Anthropic TypeScript SDK code\nDESCRIPTION: Command to run the linter on the Anthropic TypeScript SDK codebase. This uses eslint to check for code quality and style issues.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n$ yarn lint\n```\n\n----------------------------------------\n\nTITLE: Formatting and fixing lint issues in Anthropic TypeScript SDK\nDESCRIPTION: Command to automatically format the code and fix lint issues in the Anthropic TypeScript SDK. This uses prettier and eslint to ensure consistent code style.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n$ yarn fix\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entries\nDESCRIPTION: Structured changelog entries documenting version updates, breaking changes, and feature additions for the Anthropic TypeScript SDK.\nSOURCE: https://github.com/anthropics/anthropic-sdk-typescript/blob/main/packages/vertex-sdk/CHANGELOG.md#2025-04-12_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Documentation\n\n* update models in vertex examples ([#331](https://github.com/anthropics/anthropic-sdk-typescript/issues/331)) ([3d139b3](https://github.com/anthropics/anthropic-sdk-typescript/commit/3d139b374179ef5540a8e9436df06501c6ada6c5))\n\n## 0.2.1 (2024-03-06)\n\nFull Changelog: [vertex-sdk-v0.2.0...vertex-sdk-v0.2.1](https://github.com/anthropics/anthropic-sdk-typescript/compare/vertex-sdk-v0.2.0...vertex-sdk-v0.2.1)\n\n### Documentation\n\n* remove extraneous --save and yarn install instructions ([#323](https://github.com/anthropics/anthropic-sdk-typescript/issues/323)) ([775ecb9](https://github.com/anthropics/anthropic-sdk-typescript/commit/775ecb9ef3ab17e88dabc149faa0876cd6ab5f0b))\n\n## 0.2.0 (2024-02-13)\n\nFull Changelog: [vertex-sdk-v0.1.2...vertex-sdk-v0.2.0](https://github.com/anthropics/anthropic-sdk-typescript/compare/vertex-sdk-v0.1.2...vertex-sdk-v0.2.0)\n```"
  }
]
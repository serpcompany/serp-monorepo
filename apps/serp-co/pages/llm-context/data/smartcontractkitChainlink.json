[
  {
    "owner": "smartcontractkit",
    "repo": "chainlink",
    "content": "TITLE: Example Chainlink Node Configuration in TOML\nDESCRIPTION: A basic example of a Chainlink node configuration file, including log level setting and EVM chain configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nLog.Level = 'debug'\n\n[[EVM]]\nChainID = '1' # Required\n\n[[EVM.Nodes]]\nName = 'fake' # Required\nWSURL = 'wss://foo.bar/ws'\nHTTPURL = 'https://foo.bar' # Required\n```\n\n----------------------------------------\n\nTITLE: Basic Chainlink Secrets Configuration Example\nDESCRIPTION: A basic example of the TOML secrets configuration format showing database URL and keystore password settings. This provides a minimal configuration required for a Chainlink node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[Database]\nURL = 'postgresql://user:pass@localhost:5432/dbname?sslmode=disable' # Required\n\n[Password]\nKeystore = 'keystore_pass' # Required\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node Settings in TOML\nDESCRIPTION: TOML configuration file for Chainlink nodes with settings for transaction handling, gas estimation, block tracking, and Oracle Contract Reader (OCR) functionality. The file includes network-specific parameters for proper node operation.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_89\n\nLANGUAGE: toml\nCODE:\n```\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '30s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 wei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '100 wei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 60\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 300\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 6500000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring EVM.Workflow for Blockchain Interactions\nDESCRIPTION: Sets parameters for workflow-related transactions on EVM chains, including addresses and gas configurations. Controls how workflow contracts interact with the blockchain.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_250\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.Workflow]\nFromAddress = '0x2a3e23c6f242F5345320814aC8a1b4E58707D292' # Example\nForwarderAddress = '0x2a3e23c6f242F5345320814aC8a1b4E58707D292' # Example\nGasLimitDefault = 400_000 # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Chainlink Node Transaction Settings\nDESCRIPTION: Basic TOML configuration for Chainlink node transaction settings including transaction management, balance monitoring, gas estimation, head tracking, node pool settings, and Oracle Contract Reporting parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_131\n\nLANGUAGE: toml\nCODE:\n```\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '1 micro'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '1 micro'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 2\nPollInterval = '3s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring NodePool Settings for Blockchain Connectivity in TOML\nDESCRIPTION: This snippet defines NodePool configuration, which manages connections to blockchain nodes. It includes settings for polling intervals, node selection strategy, synchronization thresholds, and connection verification parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_114\n\nLANGUAGE: toml\nCODE:\n```\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Chainlink Node Settings in TOML\nDESCRIPTION: Basic configuration settings for a Chainlink node including transaction management, gas estimation, head tracking, and OCR parameters. This configuration includes various timeouts, thresholds, and operational parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_151\n\nLANGUAGE: toml\nCODE:\n```\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 100\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Global Configuration Settings in TOML\nDESCRIPTION: Global configuration options for a Chainlink node, including security settings, root directory, and shutdown grace period.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nInsecureFastScrypt = false # Default\nInsecurePPROFHeap = false # Default\nRootDir = '~/.chainlink' # Default\nShutdownGracePeriod = '5s' # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Mercury in TOML\nDESCRIPTION: Node configuration for Mercury in TOML format, including essential settings for OCR2, P2P networking, telemetry, and database connections. This configuration is crucial for proper functioning of Mercury feeds.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/Mercury.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\nRootDir = '$ROOT_DIR'\n\n[JobPipeline]\nMaxSuccessfulRuns = 0\n\n[Feature]\nUICSAKeys = true\nLogPoller = true\n\n[Log]\nLevel = 'info'\n\n[Log.File]\n< standard values >\n\n[WebServer]\n< standard values >\n\n[WebServer.TLS]\n< standard values >\n\n[[EVM]]\nChainID = '42161'\n\n[OCR]\nEnabled = false\n\n[P2P]\nTraceLogging = false\nPeerID = '$PEERID'\n\n[P2P.V2]\nEnabled = true\nDefaultBootstrappers = < mercury bootstrap nodes >\nAnnounceAddresses = ['$EXTERNAL_IP:$EXTERNAL_PORT']\nListenAddresses = ['0.0.0.0:$INTERNAL_PORT']\n\n[OCR2]\nEnabled = true\nKeyBundleID = '$KEY_BUNDLE_ID'\nCaptureEATelemetry = true\n\n[TelemetryIngress]\nUniConn = false\nSendInterval = '250ms'\nBufferSize = 300\nMaxBatchSize = 100\n\n[[TelemetryIngress.Endpoints]]\nNetwork = 'EVM'\nChainID = '42161'\nURL = '$TELEMETRY_ENDPOINT_URL'\nServerPubKey = '$TELEMETRY_PUB_KEY'\n\n[Database]\nMaxIdleConns = 100\nMaxOpenConns = 400\n\n[[EVM.Nodes]]\n< put RPC nodes here >\n```\n\n----------------------------------------\n\nTITLE: Configuring Node Pool in TOML for Chainlink Nodes\nDESCRIPTION: These settings define how the node interacts with a pool of Ethereum nodes. Parameters include polling intervals, selection modes, and synchronization thresholds that control how connections to the blockchain are managed.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_160\n\nLANGUAGE: toml\nCODE:\n```\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Gas Estimator Settings in TOML\nDESCRIPTION: Comprehensive gas estimation settings including price limits, bump parameters, and EIP1559 configurations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_195\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500_000\nLimitMax = 500_000\nLimitMultiplier = '1.0'\nLimitTransfer = 21_000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nBumpTxDepth = 16\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Arbitrum Mainnet (42161)\nDESCRIPTION: TOML configuration for Chainlink node operation on Arbitrum Mainnet (chain ID 42161). This configuration includes Arbitrum-specific gas estimation settings, transaction management parameters, and OCR automation with a high gas limit suitable for the L2 network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_129\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'arbitrum'\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0xf97f4df75117a78c1A5a0DBb814Af92458539FB4'\nLogBackfillBatchSize = 1000\nLogPollInterval = '1s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'Arbitrum'\nPriceDefault = '100 mwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '0'\nLimitDefault = 500000\nLimitMax = 1000000000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 5\nEIP1559DynamicFees = false\nFeeCapDefault = '1 micro'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 0\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'arbitrum'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 14500000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR (Off-Chain Reporting) in TOML for Chainlink Nodes\nDESCRIPTION: These settings configure the OCR protocol parameters including confirmation requirements, timeouts, and grace periods. They control how the node participates in the off-chain reporting protocol.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_161\n\nLANGUAGE: toml\nCODE:\n```\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n```\n\n----------------------------------------\n\nTITLE: Feature Toggle Configuration in TOML\nDESCRIPTION: Configuration for enabling or disabling various features of a Chainlink node, such as feeds manager, log poller, and CCIP.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[Feature]\nFeedsManager = true # Default\nLogPoller = false # Default\nUICSAKeys = false # Default\nCCIP = true # Default\nMultiFeedsManagers = false # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring EVM.Nodes for RPC Node Management\nDESCRIPTION: Sets up RPC node connections for EVM chains, including endpoints and usage parameters. Each node entry represents a connection to an Ethereum or EVM-compatible blockchain node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_242\n\nLANGUAGE: toml\nCODE:\n```\n[[EVM.Nodes]]\nName = 'foo' # Example\nWSURL = 'wss://web.socket/test' # Example\nHTTPURL = 'https://foo.web' # Example\nSendOnly = false # Default\nOrder = 100 # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Ethereum-compatible Networks\nDESCRIPTION: TOML configuration for Chainlink nodes on Ethereum-compatible networks. It includes settings for transaction management, gas estimation, head tracking, and OCR (Off-Chain Reporting).\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_132\n\nLANGUAGE: toml\nCODE:\n```\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '5 gwei'\nPriceMax = '500 gwei'\nPriceMin = '5 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '2 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 50\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 300\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring EVM.OCR Settings for Off-Chain Reporting\nDESCRIPTION: Sets various parameters for Off-Chain Reporting on EVM chains, including confirmation requirements, timeouts, and grace periods. These settings control the OCR protocol behavior.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_235\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.OCR]\nContractConfirmations = 4 # Default\nContractTransmitterTransmitTimeout = '10s' # Default\nDatabaseTimeout = '10s' # Default\nDeltaCOverride = \"168h\" # Default\nDeltaCJitterOverride = \"1h\" # Default\nObservationGracePeriod = '1s' # Default\n```\n\n----------------------------------------\n\nTITLE: Database Configuration in TOML\nDESCRIPTION: Database-related settings for a Chainlink node, including connection limits, query timeouts, and migration options.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[Database]\nDefaultIdleInTxSessionTimeout = '1h' # Default\nDefaultLockTimeout = '15s' # Default\nDefaultQueryTimeout = '10s' # Default\nLogQueries = false # Default\nMaxIdleConns = 10 # Default\nMaxOpenConns = 100 # Default\nMigrateOnStartup = true # Default\n```\n\n----------------------------------------\n\nTITLE: Database Configuration in TOML\nDESCRIPTION: Database connection configuration for Chainlink nodes. Includes the primary URL, backup URL for read replicas, and password complexity settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[Database]\nURL = \"postgresql://user:pass@localhost:5432/dbname?sslmode=disable\" # Example\nBackupURL = \"postgresql://user:pass@read-replica.example.com:5432/dbname?sslmode=disable\" # Example\nAllowSimplePasswords = false # Default\n```\n\n----------------------------------------\n\nTITLE: Default Chainlink Network Configuration\nDESCRIPTION: Basic configuration settings for a Chainlink network including transaction parameters, gas estimation, head tracking, and OCR settings\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_63\n\nLANGUAGE: toml\nCODE:\n```\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 5000\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '30 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '30 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '20 gwei'\nBumpPercent = 20\nBumpThreshold = 5\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starknet Chain in TOML\nDESCRIPTION: Defines a complete Starknet blockchain configuration including chain ID, feeder URL, and various operational timeouts. This section contains all parameters needed to interact with a Starknet network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_275\n\nLANGUAGE: toml\nCODE:\n```\n[[Starknet]]\nChainID = 'foobar' # Example\nFeederURL = 'http://feeder.url' # Example\nEnabled = true # Default\nOCR2CachePollPeriod = '5s' # Default\nOCR2CacheTTL = '1m' # Default\nRequestTimeout = '10s' # Default\nTxTimeout = '10s' # Default\nConfirmationPoll = '5s' # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring EVM.NodePool.Errors with Custom Regex Patterns\nDESCRIPTION: Advanced configuration for custom regex patterns to match against RPC error messages. Used by the node to properly categorize and handle different types of errors from the blockchain nodes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_219\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.NodePool.Errors]\nNonceTooLow = '(: |^)nonce too low' # Example\nNonceTooHigh = '(: |^)nonce too high' # Example\nReplacementTransactionUnderpriced = '(: |^)replacement transaction underpriced' # Example\nLimitReached = '(: |^)limit reached' # Example\nTransactionAlreadyInMempool = '(: |^)transaction already in mempool' # Example\nTerminallyUnderpriced = '(: |^)terminally underpriced' # Example\nInsufficientEth = '(: |^)insufficeint eth' # Example\nTxFeeExceedsCap = '(: |^)tx fee exceeds cap' # Example\nL2FeeTooLow = '(: |^)l2 fee too low' # Example\nL2FeeTooHigh = '(: |^)l2 fee too high' # Example\nL2Full = '(: |^)l2 full' # Example\nTransactionAlreadyMined = '(: |^)transaction already mined' # Example\nFatal = '(: |^)fatal' # Example\nServiceUnavailable = '(: |^)service unavailable' # Example\nTooManyResults = '(: |^)too many results' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR Settings in TOML\nDESCRIPTION: Defines settings for the OCR (Off-Chain Reporting) component, including contract confirmations, transmit timeout, and observation grace period.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_187\n\nLANGUAGE: toml\nCODE:\n```\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR2 Mercury Job in TOML\nDESCRIPTION: Detailed TOML configuration for an OCR2 Mercury job, including contract details, observation sources for multiple data providers, and plugin configuration for the Mercury server.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/Mercury.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\ntype = \"offchainreporting2\"\nschemaVersion = 1\nname = \"$feed_name\"\nforwardingAllowed = false\nmaxTaskDuration = \"1s\"\ncontractID = \"$verifier_contract_address\"\nfeedID = \"$feed_id\"\ncontractConfigTrackerPollInterval = \"15s\"\nocrKeyBundleID = \"$key_bundle_id\"\np2pv2Bootstrappers = [\n  \"$bootstrapper_address>\"\n]\nrelay = \"evm\"\npluginType = \"mercury\"\ntransmitterID = \"$csa_public_key\"\n\nobservationSource = \"\"\"\n  // ncfx\n\tds1_payload          [type=bridge name=\"ncfx\" timeout=\"50ms\" requestData=\"{\\\"data\\\":{\\\"endpoint\\\":\\\"crypto-lwba\\\",\\\"from\\\":\\\"ETH\\\",\\\"to\\\":\\\"USD\\\"}}\"]\n  ds1_median           [type=jsonparse path=\"data,mid\"]\n  ds1_bid              [type=jsonparse path=\"data,bid\"]\n  ds1_ask              [type=jsonparse path=\"data,ask\"]\n  \n  ds1_median_multiply  [type=multiply times=100000000]\n  ds1_bid_multiply     [type=multiply times=100000000]\n  ds1_ask_multiply     [type=multiply times=100000000]\n\n  // tiingo\n  ds2_payload          [type=bridge name=\"tiingo\" timeout=\"50ms\" requestData=\"{\\\"data\\\":{\\\"endpoint\\\":\\\"crypto-lwba\\\",\\\"from\\\":\\\"ETH\\\",\\\"to\\\":\\\"USD\\\"}}\"]\n  ds2_median           [type=jsonparse path=\"data,mid\"]\n  ds2_bid              [type=jsonparse path=\"data,bid\"]\n  ds2_ask              [type=jsonparse path=\"data,ask\"]\n\n  ds2_median_multiply  [type=multiply times=100000000]\n  ds2_bid_multiply     [type=multiply times=100000000]\n  ds2_ask_multiply     [type=multiply times=100000000]\n\n  // coinmetrics\n  ds3_payload          [type=bridge name=\"coinmetrics\" timeout=\"50ms\" requestData=\"{\\\"data\\\":{\\\"endpoint\\\":\\\"crypto-lwba\\\",\\\"from\\\":\\\"ETH\\\",\\\"to\\\":\\\"USD\\\"}}\"]\n  ds3_median           [type=jsonparse path=\"data,mid\"]\n  ds3_bid              [type=jsonparse path=\"data,bid\"]\n  ds3_ask              [type=jsonparse path=\"data,ask\"]\n\n  ds3_median_multiply  [type=multiply times=100000000]\n  ds3_bid_multiply     [type=multiply times=100000000]\n  ds3_ask_multiply     [type=multiply times=100000000]\n\n  ds1_payload -> ds1_median -> ds1_median_multiply -> benchmark_price\n  ds2_payload -> ds2_median -> ds2_median_multiply -> benchmark_price\n  ds3_payload -> ds3_median -> ds3_median_multiply -> benchmark_price\n\n  benchmark_price [type=median allowedFaults=2 index=0]\n\n  ds1_payload -> ds1_bid -> ds1_bid_multiply -> bid_price\n  ds2_payload -> ds2_bid -> ds2_bid_multiply -> bid_price\n  ds3_payload -> ds3_bid -> ds3_bid_multiply -> bid_price\n\n  bid_price [type=median allowedFaults=2 index=1]\n\n  ds1_payload -> ds1_ask -> ds1_ask_multiply -> ask_price\n  ds2_payload -> ds2_ask -> ds2_ask_multiply -> ask_price\n  ds3_payload -> ds3_ask -> ds3_ask_multiply -> ask_price\n\n  ask_price [type=median allowedFaults=2 index=2]\n\"\"\"\n\n[pluginConfig]\nserverURL = \"$mercury_server_url\"\nserverPubKey = \"$mercury_server_public_key\"\n\n[relayConfig]\nchainID = $evm_chain_id\nfromBlock = $from_block\n```\n\n----------------------------------------\n\nTITLE: Chainlink Base Configuration\nDESCRIPTION: Base configuration file containing core Chainlink node settings including transaction handling, gas estimation, head tracking and OCR parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_107\n\nLANGUAGE: toml\nCODE:\n```\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '20 gwei'\nPriceMax = '1 micro'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR and Workflow Parameters for Chainlink Nodes\nDESCRIPTION: This snippet defines basic configuration parameters for OCR (Off-Chain Reporting) and workflow settings used across Chainlink nodes. It sets the observation grace period and gas limits for OCR2 Automation and general workflows.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_62\n\nLANGUAGE: toml\nCODE:\n```\nObservationGracePeriod = '500ms'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring NodePool Parameters for Chainlink Node\nDESCRIPTION: Configuration settings for the NodePool component of a Chainlink node, which manages connections to blockchain nodes. It includes settings for polling intervals, selection mode, and block verification.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_80\n\nLANGUAGE: toml\nCODE:\n```\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n```\n\n----------------------------------------\n\nTITLE: Visualizing General Data Flow in Chainlink Components\nDESCRIPTION: This diagram provides a detailed overview of the data flow between various Chainlink components, including EVM chains, gas estimation, head tracking, transaction management, logging, and specific services like direct requests, functions, and keepers.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/core/DATA_FLOW.md#2025-04-21_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\n---\ntitle: Description of the general data flow.\n---\nflowchart TB\n    subgraph core/chains/evm\n        subgraph gas\n            subgraph BlockHistoryEstimator [BlockHistoryEstimator]\n                direction TB\n                BlockHistoryEstimator-mb>mb]\n                BlockHistoryEstimator-OnNewLongestChain([\"OnNewLongestChain()\"]) -- \"Deliver()\" --> BlockHistoryEstimator-mb \n                BlockHistoryEstimator-runLoop[\"runLoop()\"]  \n                BlockHistoryEstimator-mb -- \"Notify()\" --> BlockHistoryEstimator-runLoop  \n                BlockHistoryEstimator-mb -- \"Retrieve()\" --> BlockHistoryEstimator-runLoop  \n            end\n        end\n        subgraph headtracker-pkg [headtracker]\n            subgraph headBroadcaster \n                headBroadcaster-mailbox>mailbox]\n                headBroadcaster-BroadcastNewLongestChain([\"BroadcastNewLongestChain()\"]) -- \"Deliver()\" --> headBroadcaster-mailbox\n                headBroadcaster-mailbox -- \"Notify()\" --> headBroadcaster-run([\"run()\"])\n                headBroadcaster-run --> headBroadcaster-executeCallbacks([\"executeCallbacks()\"])\n                headBroadcaster-executeCallbacks -- \"Retrieve()\" ---> headBroadcaster-mailbox\n            end\n            subgraph HeadTrackable\n                trackable-OnNewLongestChain([\"OnNewLongestChain()\"])\n            end\n            headBroadcaster-executeCallbacks --> HeadTrackable\n            subgraph headtracker\n                direction TB \n                headtracker-backfillMB>backfillMB]\n                headtracker-broadcastMB{{\"broadcastMB (10)\"}}\n                headtracker-handleNewHead([\"handleNewHead()\"]) -- \"Deliver()\" --> headtracker-backfillMB\n                headtracker-handleNewHead([\"handleNewHead()\"]) -- \"Deliver()\" --> headtracker-broadcastMB\n                headtracker-backfillLoop([\"backfillLoop()\"])\n                headtracker-backfillMB -- \"Notify()\" --> headtracker-backfillLoop -- \"Retrieve()\" --> headtracker-backfillMB \n                headtracker-broadcastLoop([\"broadcastLoop()\"])\n                headtracker-broadcastMB -- \"Notify()\" --> headtracker-broadcastLoop\n                headtracker-broadcastLoop -- \"Retrieve()\" ---> headtracker-broadcastMB   \n                headtracker-broadcastLoop -- \"RetrieveLatestAndClear()\" --> headtracker-broadcastMB   \n            end\n            headtracker-broadcastLoop --> headBroadcaster-BroadcastNewLongestChain\n        end\n        subgraph txmgr\n            direction TB\n            subgraph EthConfirmer\n                EthConfirmer-mb>mb] \n                EthConfirmer-mb -- \"Notify()\" --> EthConfirmer-runLoop([\"runLoop\"]) -- \"Retrieve\" --> EthConfirmer-mb  \n            end\n            subgraph Txm [Txm]\n                Txm-OnNewLongestChain([\"OnNewLongestChain\"]) -- chHeads --> Txm-runLoop([\"runLoop()\"])\n                Txm-runLoop -- \"Deliver()\" --> EthConfirmer-mb \n            end\n        end\n        subgraph log [log]\n            subgraph broadcaster [broadcaster]\n                subgraph boradcaster-subs [\" \"]\n                    broadcaster-Register([\"Register()\"]) -- \"Deliver()\" --> broadcaster-changeSubscriberStatus[[changeSubscriberStatus]]\n                    broadcaster-onChangeSubscriberStatus([\"onChangeSubscriberStatus()\"]) -- \"Retrieve()\" --> broadcaster-changeSubscriberStatus\n                end\n                broadcaster-eventLoop([\"eventLoop()\"])\n                subgraph broadcaster-heads [\" \"]\n                    broadcaster-OnNewLongestChain([\"OnNewLongestChain()\"]) -- \"Deliver()\" --> broadcaster-newHeads>newHeads]\n                    broadcaster-onNewHeads([\"onNewHeads()\"]) -- \"RetrieveLatestAndClear()\" --> broadcaster-newHeads\n                end\n                broadcaster-changeSubscriberStatus -- \"Notify()\" --> broadcaster-eventLoop\n                broadcaster-newHeads -- \"Notify()\" --> broadcaster-eventLoop\n                broadcaster-eventLoop --> broadcaster-onChangeSubscriberStatus\n                broadcaster-eventLoop --> broadcaster-onNewHeads\n            end\n            broadcaster-onNewHeads([\"onNewHeads()\"]) ---> registrations-sendLogs([\"sendLogs()\"]) --> handler-sendLog([\"sendLog()\"])\n            subgraph Listener [Listener]\n                listener-HandleLog([\"HandleLog()\"])\n            end\n            handler-sendLog --> Listener\n        end\n    end\n    \n    subgraph services\n        subgraph directrequest [directrequest]\n            subgraph listener [listener]\n                direction TB\n                dr-mbOracleRequests[[mbOracleRequests]]\n                dr-mbOracleCancelRequests[[mbOracleCancelRequests]]\n                dr-HandleLog([\"HandleLog()\"]) \n                dr-HandleLog -- \"Deliver()\" --> dr-mbOracleRequests\n                dr-HandleLog -- \"Deliver()\" --> dr-mbOracleCancelRequests\n                dr-mbOracleRequests -- \"Notify()\" --> dr-processOracleRequests([\"processOracleRequests()\"])\n                dr-mbOracleCancelRequests -- \"Notify()\" --> dr-processCancelOracleRequests([\"processCancelOracleRequests()\"])  \n                dr-handleReceivedLogs([\"handleReceivedLogs()\"])\n                dr-processOracleRequests --> dr-handleReceivedLogs -- \"Retrieve()\" ---> dr-mbOracleRequests\n                dr-processCancelOracleRequests --> dr-handleReceivedLogs -- \"Retrieve()\" ---> dr-mbOracleCancelRequests\n            end\n        end\n        subgraph functions [functions]\n            subgraph FunctionsListener [FunctionsListener]\n                direction TB\n                functions-mbOracleEvents[[mbOracleEvents]]\n                functions-HandleLog([\"HandleLog()\"]) -- \"Deliver()\" --> functions-mbOracleEvents\n                functions-mbOracleEvents -- \"Notify()\" --> functions-processOracleEvents([\"processOracleEvents\"])\n                functions-processOracleEvents -- \"Retrieve()\" --> functions-mbOracleEvents\n            end\n        end\n        subgraph keeper [keeper]\n            subgraph UpkeepExecuter [UpkeepExecuter]\n                direction TB \n                UpkeepExecuter-mailbox>mailbox]\n                UpkeepExecuter-Start([\"Start()\"]) -- \"Deliver()\" --> UpkeepExecuter-mailbox\n                UpkeepExecuter-OnNewLongestChain([\"OnNewLongestChain()\"]) -- \"Deliver()\" --> UpkeepExecuter-mailbox\n                UpkeepExecuter-mailbox -- \"Notify()\" --> UpkeepExecuter-run([\"run()\"])\n                UpkeepExecuter-run --> UpkeepExecuter-processActiveUpkeeps([\"processActiveUpkeeps()\"]) -- \"Retrieve()\" ---> UpkeepExecuter-mailbox\n            end\n            subgraph RegistrySynchronizer [RegistrySynchronizer]\n                direction TB\n                RegistrySynchronizer-mbLogs{{\"mbLogs (5000)\"}}\n                RegistrySynchronizer-HandleLog([\"HandleLog()\"]) -- \"Deliver()\" --> RegistrySynchronizer-mbLogs\n                RegistrySynchronizer-mbLogs -- \"Notify()\" --> RegistrySynchronizer-run([\"run()\"])\n                RegistrySynchronizer-run --> RegistrySynchronizer-processLogs([\"processLogs()\"]) -- \"RetrieveAll()\" ---> RegistrySynchronizer-mbLogs \n            end\n        end\n        subgraph ocr [ocr]\n            subgraph OCRContractTracker [OCRContractTracker]\n                direction TB\n                OCRContractTracker-configsMB{{\"configsMB (100)\"}}\n                OCRContractTracker-HandleLog([\"HandleLog()\"]) -- \"Deliver()\" --> OCRContractTracker-configsMB\n                OCRContractTracker-configsMB -- \"Notify()\" --> OCRContractTracker-processLogs([\"processLogs()\"])\n                OCRContractTracker-processLogs -- \"Retrieve()\" --> OCRContractTracker-configsMB\n            end\n        end\n        subgraph promReporter [promReporter]\n            subgraph promreporter-type [promReporter]\n                direction TB\n                promReporter-newHeads>newHeads]\n                promReporter-OnNewLongestChain([\"OnNewLongestChain()\"]) -- \"Deliver()\" --> promReporter-newHeads\n                promReporter-newHeads -- \"Notify()\" --> promReporter-eventLoop([\"eventLoop()\"])\n                promReporter-eventLoop -- \"Retrieve()\" --> promReporter-newHeads\n            end\n        end\n        subgraph vrf [vrf]\n            subgraph listenerV1 [listenerV1]\n                direction TB\n                vrfv1-reqLogs[[reqLogs]]\n                vrfv1-HandleLog([\"HandleLog()\"]) -- \"Deliver()\" --> vrfv1-reqLogs\n                vrfv1-reqLogs -- \"Notify()\" --> vrfv1-runLogListener([\"runLogListener()\"])\n                vrfv1-runLogListener -- \"Retrieve()\" --> vrfv1-reqLogs\n            end\n            subgraph listenerV2 [listenerV2]\n                direction TB\n                vrfv2-reqLogs[[reqLogs]]\n                vrfv2-HandleLog([\"HandleLog()\"]) -- \"Deliver()\" --> vrfv2-reqLogs\n                vrfv2-reqLogs -- \"Notify()\" --> vrfv2-runLogListener([\"runLogListener()\"])\n                vrfv2-runLogListener -- \"Retrieve()\" --> vrfv2-reqLogs\n            end\n        end\n    end\n\n    HeadTrackable --> BlockHistoryEstimator\n    HeadTrackable --> broadcaster\n    HeadTrackable ---> Txm\n    HeadTrackable ---> UpkeepExecuter\n    HeadTrackable ---> promreporter-type\n    \n    Listener --> listener  \n    Listener --> FunctionsListener\n    Listener --> RegistrySynchronizer  \n    Listener --> OCRContractTracker  \n    Listener --> listenerV1  \n    Listener --> listenerV2  \n    \n    \n    classDef package fill:none,stroke-dasharray: 10\n```\n\n----------------------------------------\n\nTITLE: Configuring CCIP Network Settings in TOML\nDESCRIPTION: Example of configuring network settings for CCIP, including EVM networks and Anvil configurations. This snippet demonstrates how to set up multiple private chains with their respective parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/testconfig/README.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.Env.Network]\nselected_networks= ['PRIVATE-CHAIN-1', 'PRIVATE-CHAIN-2']\n\n[CCIP.Env.Network.EVMNetworks.PRIVATE-CHAIN-1]\nevm_name = 'private-chain-1'\nevm_chain_id = 2337\nevm_urls = ['wss://ignore-this-url.com']\nevm_http_urls = ['https://ignore-this-url.com']\nevm_keys = ['59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d']\nevm_simulated = true\nclient_implementation = 'Ethereum'\nevm_chainlink_transaction_limit = 5000\nevm_transaction_timeout = '3m'\nevm_minimum_confirmations = 1\nevm_gas_estimation_buffer = 1000\nevm_supports_eip1559 = true\nevm_default_gas_limit = 6000000\nevm_finality_depth = 400\n\n[CCIP.Env.Network.EVMNetworks.PRIVATE-CHAIN-2]\nevm_name = 'private-chain-2'\nevm_chain_id = 1337\nevm_urls = ['wss://ignore-this-url.com']\nevm_http_urls = ['https://ignore-this-url.com']\nevm_keys = ['ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80']\nevm_simulated = true\nclient_implementation = 'Ethereum'\nevm_chainlink_transaction_limit = 5000\nevm_transaction_timeout = '3m'\nevm_minimum_confirmations = 1\nevm_gas_estimation_buffer = 1000\nevm_supports_eip1559 = true\nevm_default_gas_limit = 6000000\nevm_finality_depth = 400\n\n[CCIP.Env.Network.AnvilConfigs.PRIVATE-CHAIN-1]\nblock_time = 1\n\n[CCIP.Env.Network.AnvilConfigs.PRIVATE-CHAIN-2]\nblock_time = 1\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Mantle Mainnet in TOML\nDESCRIPTION: TOML configuration for a Chainlink node operating on the Mantle Mainnet (chain ID 5000). It specifies network-specific parameters such as gas estimation, transaction handling, and OCR settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_121\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 1200\nFinalityTagEnabled = true\nLinkContractAddress = '0xfe36cF0B43aAe49fBc5cFC5c0AF22a623114E043'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '40m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '120 gwei'\nPriceMin = '1 gwei'\nLimitDefault = 80000000000\nLimitMax = 100000000000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '100 wei'\nBumpPercent = 20\nBumpThreshold = 60\nEIP1559DynamicFees = true\nFeeCapDefault = '120 gwei'\nTipCapDefault = '0'\nTipCapMin = '0'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 200\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nEIP1559FeeCapBufferBlocks = 0\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 1250\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Mode Mainnet (34443)\nDESCRIPTION: TOML configuration for Chainlink node operation on Mode Mainnet (chain ID 34443). This configuration sets up essential parameters for the optimismBedrock chain type, including gas estimation, transaction management, head tracking, and OCR settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_127\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 200\nFinalityTagEnabled = true\nLinkContractAddress = '0x183E3691EfF3524B2315D3703D94F922CbE51F54'\nLogBackfillBatchSize = 1000\nLogPollInterval = '15s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '120 gwei'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '100 wei'\nBumpPercent = 20\nBumpThreshold = 60\nEIP1559DynamicFees = true\nFeeCapDefault = '120 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 300\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 2\nPollInterval = '3s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Verifying Official Chainlink Docker Image (Bash)\nDESCRIPTION: Command to verify the authenticity of an official Chainlink Docker image using cosign. This ensures the image was built and signed by the official Chainlink GitHub Actions workflow.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncosign verify index.docker.io/smartcontract/chainlink:${tag} \\\n      --certificate-oidc-issuer https://token.actions.githubusercontent.com \\\n      --certificate-identity \"https://github.com/smartcontractkit/chainlink/.github/workflows/build-publish.yml@refs/tags/v${tag}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Oracle Contract Reader (OCR) in TOML\nDESCRIPTION: Settings for the Oracle Contract Reader component which manages off-chain reporting configuration. Parameters control contract confirmations, timeouts, and observation grace periods.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_73\n\nLANGUAGE: toml\nCODE:\n```\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPURL for HTTP Connection to EVM Node\nDESCRIPTION: Sets the HTTP URL for connecting to an EVM RPC node. Required for all nodes and used for most RPC calls, including transaction broadcasting.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_245\n\nLANGUAGE: toml\nCODE:\n```\nHTTPURL = 'https://foo.web' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Polygon Amoy in TOML\nDESCRIPTION: TOML configuration for a Chainlink node on Polygon Amoy testnet (chain ID 80002). Features EIP1559 dynamic fees enabled with specialized Link contract address and network-specific parameters for the Amoy environment.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_148\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 500\nFinalityTagEnabled = false\nLinkContractAddress = '0x0Fd9e8d3aF1aaee056EB9e802c3A762a667b1904'\nLogBackfillBatchSize = 1000\nLogPollInterval = '1s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 5\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '30s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 100\nRPCBlockQueryDelay = 10\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '12m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 5000\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '25 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '25 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '20 gwei'\nBumpPercent = 20\nBumpThreshold = 5\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 24\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 2000\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Gas Estimation and Block History Parameters in TOML\nDESCRIPTION: Configuration settings for gas estimation, including default pricing, limits, and block history parameters. These settings control how Chainlink handles transaction fee estimation and historical block data processing.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_90\n\nLANGUAGE: toml\nCODE:\n```\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n```\n\n----------------------------------------\n\nTITLE: Configuring Gas Estimation Settings for EVM Blockchain in TOML\nDESCRIPTION: This snippet contains gas estimation configuration settings for an EVM-compatible blockchain. It specifies fee-related parameters including EIP1559 dynamic fees settings, default fee cap, tip cap values, and block history configuration for gas price estimation.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_112\n\nLANGUAGE: toml\nCODE:\n```\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n```\n\n----------------------------------------\n\nTITLE: Configuring Base Chainlink Settings\nDESCRIPTION: Basic configuration snippet showing core OCR and workflow gas limit settings\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_164\n\nLANGUAGE: toml\nCODE:\n```\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Log File Settings for Chainlink Nodes in TOML\nDESCRIPTION: Specifies log file settings for Chainlink nodes. Controls log directory, maximum file size, retention period, and number of backups.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n[Log.File]\nDir = '/my/log/directory' # Example\nMaxSize = '5120mb' # Default\nMaxAgeDays = 0 # Default\nMaxBackups = 1 # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for BSC Testnet in TOML\nDESCRIPTION: This TOML configuration sets up a Chainlink node for the BSC Testnet. It includes settings for block processing, transaction management, gas estimation, and OCR functionality. Key features include a finality depth of 50 blocks, a minimum contract payment of 0.00001 LINK, and specific gas price settings for the BSC Testnet environment.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_61\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0x84b9B910527Ad5C03A9Ca831909E21e236EA7b06'\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '30s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 2\nFinalizedBlockOffset = 2\nNoNewFinalizedHeadsThreshold = '40s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '1 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 5\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 24\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = false\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '2s'\nDatabaseTimeout = '2s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\n```\n\n----------------------------------------\n\nTITLE: Configuring Klaytn Testnet Settings in TOML\nDESCRIPTION: Comprehensive configuration for Klaytn Testnet (1001) including block backfill settings, finality parameters, transaction management, gas estimation, and node pool settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_94\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 10\nFinalityTagEnabled = false\nLogBackfillBatchSize = 1000\nLogPollInterval = '15s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '30s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'SuggestedPrice'\nPriceDefault = '750 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 5\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Starting a Chainlink Node (Bash)\nDESCRIPTION: Command to start a Chainlink node using the CLI. This initializes the node and makes it ready to process jobs and interact with the blockchain.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nchainlink node start\n```\n\n----------------------------------------\n\nTITLE: Configuring Node Pool Management in TOML\nDESCRIPTION: Node pool settings for managing connections to blockchain nodes. These parameters control node selection, polling intervals, and synchronization thresholds to ensure reliable connections.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_92\n\nLANGUAGE: toml\nCODE:\n```\n[NodePool]\nPollFailureThreshold = 2\nPollInterval = '3s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n```\n\n----------------------------------------\n\nTITLE: Configuring WSURL for WebSocket Connection to EVM Node\nDESCRIPTION: Sets the WebSocket URL for connecting to an EVM RPC node. Required for primary nodes when using the log broadcaster to receive real-time blockchain events.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_244\n\nLANGUAGE: toml\nCODE:\n```\nWSURL = 'wss://web.socket/test' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring Ethereum Goerli (ChainID 5) Settings in TOML\nDESCRIPTION: This snippet contains the default configuration for Ethereum Goerli testnet (ChainID 5). It includes settings for block management, transactions, gas estimation, head tracking, and OCR (Off-Chain Reporting).\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_54\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = false\nLinkContractAddress = '0x326C977E6efc84E512bB9C30f76E30c160eD06FB'\nLogBackfillBatchSize = 1000\nLogPollInterval = '15s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.1 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 4\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 50\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Keystore Password Configuration\nDESCRIPTION: Password setting for the node's account keystore. This password protects the node's private keys.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\nKeystore = \"keystore_pass\" # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring Telemetry Ingress for Chainlink Nodes in TOML\nDESCRIPTION: Defines telemetry ingress settings for Chainlink nodes. Controls connection style, logging, buffer size, batch size, send interval, and timeout for telemetry data transmission.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[TelemetryIngress]\nUniConn = false # Default\nLogging = false # Default\nBufferSize = 100 # Default\nMaxBatchSize = 50 # Default\nSendInterval = '500ms' # Default\nSendTimeout = '10s' # Default\nUseBatchSend = true # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Base Mainnet in TOML\nDESCRIPTION: TOML configuration for a Chainlink node operating on the Base Mainnet (chain ID 8453). It defines network-specific settings for gas estimation, transaction handling, and OCR functionality optimized for the Base blockchain.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_124\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 200\nFinalityTagEnabled = true\nLinkContractAddress = '0x88Fb150BDc53A65fe94Dea0c9BA0a6dAf8C6e196'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '40s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '15m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '30s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 wei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '100 wei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 24\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 300\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 6500000\n\n[Workflow]\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Arbitrum Network\nDESCRIPTION: This snippet defines configuration settings for a Chainlink node on the Arbitrum network. It includes gas estimation parameters, head tracker settings, and OCR configurations specific to Arbitrum.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_180\n\nLANGUAGE: toml\nCODE:\n```\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'Arbitrum'\nPriceDefault = '100 mwei'\nPriceMax = '1 micro'\nPriceMin = '0'\nLimitDefault = 500000\nLimitMax = 1000000000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'arbitrum'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR and OCR2 Settings for Chainlink Node in TOML\nDESCRIPTION: This configuration snippet defines settings for Off-Chain Reporting (OCR) and OCR2, Chainlink's decentralized oracle protocol. It includes contract confirmations, timeouts, grace periods, and specific automation gas limits for OCR2.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_115\n\nLANGUAGE: toml\nCODE:\n```\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Polygon zkEVM Mainnet Settings in TOML\nDESCRIPTION: Configuration for Polygon zkEVM Mainnet (1101) with zero-knowledge EVM specific parameters. Includes transaction management with auto-purge, fee history mode for gas estimation, and high finality depth.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_96\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'zkevm'\nFinalityDepth = 500\nFinalityTagEnabled = false\nLinkContractAddress = '0xdB7A504CF869484dd6aC5FaF925c8386CBF7573D'\nLogBackfillBatchSize = 1000\nLogPollInterval = '30s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '6m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 100\nRPCBlockQueryDelay = 15\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '3m0s'\n\n[Transactions.AutoPurge]\nEnabled = true\nMinAttempts = 3\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '0'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 40\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '4s'\n\n[HeadTracker]\nHistoryDepth = 2000\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Job Pipeline in TOML\nDESCRIPTION: Job pipeline settings for external initiators, run duration limits and logging.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n[JobPipeline]\nExternalInitiatorsEnabled = false\nMaxRunDuration = '10m'\nMaxSuccessfulRuns = 10000\nReaperInterval = '1h'\nReaperThreshold = '24h'\nResultWriteQueueDepth = 100\nVerboseLogging = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Head Tracker Settings in TOML\nDESCRIPTION: Head tracker configuration for monitoring blockchain headers. These settings define how Chainlink nodes track new blocks, manage buffer size, and handle chain finality.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_91\n\nLANGUAGE: toml\nCODE:\n```\n[HeadTracker]\nHistoryDepth = 300\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Head Tracker in TOML for Chainlink Nodes\nDESCRIPTION: These settings control the head tracker component which monitors blockchain heads. Parameters include history depth, buffer size, and finality depth settings that determine how the node tracks and processes new blocks.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_159\n\nLANGUAGE: toml\nCODE:\n```\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n```\n\n----------------------------------------\n\nTITLE: Gas Bumping Configuration in TOML\nDESCRIPTION: Settings for controlling gas price bumping behavior when transactions are stuck in the mempool.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_199\n\nLANGUAGE: toml\nCODE:\n```\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nBumpTxDepth = 16\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR Settings for Chainlink in TOML\nDESCRIPTION: Comprehensive configuration for OCR including enabling the feature, setting timeouts, polling intervals, and various other parameters for OCR operation. This section applies only to off-chain reporting jobs.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_28\n\nLANGUAGE: toml\nCODE:\n```\n[OCR]\nEnabled = false # Default\nObservationTimeout = '5s' # Default\nBlockchainTimeout = '20s' # Default\nContractPollInterval = '1m' # Default\nContractSubscribeInterval = '2m' # Default\nDefaultTransactionQueueDepth = 1 # Default\nKeyBundleID = 'acdd42797a8b921b2910497badc5000600000000000000000000000000000000' # Example\nSimulateTransactions = false # Default\nTransmitterAddress = '0xa0788FC17B1dEe36f057c42B6F373A34B014687e' # Example\nCaptureEATelemetry = false # Default\nTraceLogging = false # Default\n```\n\n----------------------------------------\n\nTITLE: Setting EnforceRepeatableRead Flag for RPC Node Selection\nDESCRIPTION: Controls whether Chainlink Core should only use RPC nodes whose finalized block is within the acceptable range relative to the highest known finalized block. This helps ensure consistent blockchain state views.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_215\n\nLANGUAGE: toml\nCODE:\n```\nEnforceRepeatableRead = true # Default\n```\n\n----------------------------------------\n\nTITLE: Enabling VerboseLogging for Chainlink Job Pipeline in TOML\nDESCRIPTION: Enables detailed logging of pipeline execution steps, useful for debugging failed runs without relying on the UI or database. Can be disabled if it results in excessive log volume.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\nVerboseLogging = true # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Blast Mainnet Chain Settings in TOML\nDESCRIPTION: Configuration settings for Blast Mainnet (Chain ID 81457) which uses Optimism Bedrock. This includes settings for transaction handling, gas estimation with EIP1559 dynamic fees enabled, and chain-specific parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_152\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 200\nFinalityTagEnabled = true\nLinkContractAddress = '0x93202eC683288a9EA75BB829c6baCFb2BfeA9013'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '120 gwei'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '100 wei'\nBumpPercent = 20\nBumpThreshold = 60\nEIP1559DynamicFees = true\nFeeCapDefault = '120 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 300\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 4\nPollInterval = '4s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Ink Testnet\nDESCRIPTION: TOML configuration for a Chainlink node on the Ink testnet. It sets chain type to optimismBedrock, defines gas estimation parameters using FeeHistory mode, and other network-specific settings including the LINK contract address.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_173\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 3000\nFinalityTagEnabled = true\nLinkContractAddress = '0x3423C922911956b1Ccbc2b5d4f38216a6f4299b4'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '1h0m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 100\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '2s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Optimism Bedrock Chain Configuration\nDESCRIPTION: Default network configuration for Optimism Bedrock chain with settings for gas estimation, transaction management, block tracking and OCR parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_102\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 2000\nFinalityTagEnabled = true\nLinkContractAddress = '0xda40816f278Cd049c137F6612822D181065EBfB4'\n# ... more configuration\n```\n\n----------------------------------------\n\nTITLE: Configuring Keeper Functionality in Chainlink Node (TOML)\nDESCRIPTION: Sets up Keeper-related parameters including transaction queue depth, gas price buffers, grace period, and turn look back.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_39\n\nLANGUAGE: toml\nCODE:\n```\n[Keeper]\nDefaultTransactionQueueDepth = 1 # Default\nGasPriceBufferPercent = 20 # Default\nGasTipCapBufferPercent = 20 # Default\nBaseFeeBufferPercent = 20 # Default\nMaxGracePeriod = 100 # Default\nTurnLookBack = 1_000 # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic OCR Settings\nDESCRIPTION: Basic OCR configuration settings including transmitter address and telemetry options\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_29\n\nLANGUAGE: toml\nCODE:\n```\nTransmitterAddress = '0xa0788FC17B1dEe36f057c42B6F373A34B014687e'\nCaptureEATelemetry = false\nTraceLogging = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Gas Estimation Parameters in TOML for Chainlink Nodes\nDESCRIPTION: These TOML configuration settings define the gas price defaults, bump parameters, and EIP1559 settings for a Chainlink node. They control how the node estimates gas prices and manages transaction fees.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_156\n\nLANGUAGE: toml\nCODE:\n```\nBumpMin = '5 mwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Read Consistency in TOML\nDESCRIPTION: Sets the EnforceRepeatableRead flag to ensure database read consistency for multinode deployments. When enabled, this guarantees repeatable reads in database transactions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_263\n\nLANGUAGE: toml\nCODE:\n```\nEnforceRepeatableRead = true # Default\n```\n\n----------------------------------------\n\nTITLE: EIP-1559 Fee Settings in TOML\nDESCRIPTION: Configuration for EIP-1559 dynamic fee transactions including default fee cap and tip cap settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_200\n\nLANGUAGE: toml\nCODE:\n```\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Web Server Settings in TOML\nDESCRIPTION: Core web server configuration settings including bridge response URL, timeouts, ports, and cookie security.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\nBridgeResponseURL = 'https://my-chainlink-node.example.com:6688'\nHTTPWriteTimeout = '10s'\nHTTPPort = 6688\nSecureCookies = true\nSessionTimeout = '15m'\nSessionReaperExpiration = '240h'\nHTTPMaxSize = '32768b'\nStartTimeout = '15s'\nListenIP = '0.0.0.0'\n```\n\n----------------------------------------\n\nTITLE: Configuring HeadTracker Settings in TOML\nDESCRIPTION: Defines various settings for the HeadTracker component, including history depth, buffer size, sampling interval, and finality-related parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_185\n\nLANGUAGE: toml\nCODE:\n```\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring MaxRunDuration for Chainlink Job Pipeline in TOML\nDESCRIPTION: Sets the maximum time allowed for a single job run. If exceeded, the job will exit and be marked as errored. Setting to zero disables the time limit.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\nMaxRunDuration = '10m' # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Merlin Mainnet Chain Settings in TOML\nDESCRIPTION: Comprehensive configuration for the Merlin Mainnet (Chain ID 4200). This defines settings specific to a zkEVM chain type, with parameters for transaction management, auto-purging, gas estimation, and head tracking optimized for this network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_119\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'zkevm'\nFinalityDepth = 1000\nFinalityTagEnabled = false\nLogBackfillBatchSize = 1000\nLogPollInterval = '4s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 100\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '3m0s'\n\n[Transactions.AutoPurge]\nEnabled = true\nMinAttempts = 3\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 2000\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Bootstrap Job in TOML\nDESCRIPTION: TOML configuration for a bootstrap job in Mercury, specifying the relay type, schema version, contract details, and relay configuration including chain ID and starting block.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/Mercury.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\ntype = \"bootstrap\"\nrelay = \"evm\"\nschemaVersion = 1\nname = \"$feed_name\"\ncontractID = \"$verifier_contract_address\"\nfeedID = \"$feed_id\"\ncontractConfigTrackerPollInterval = \"15s\"\n\n[relayConfig]\nchainID = $evm_chain_id\nfromBlock = $from_block\n```\n\n----------------------------------------\n\nTITLE: Configuring Ethereum Mainnet (ChainID 1) Settings in TOML\nDESCRIPTION: This snippet contains the default configuration for Ethereum Mainnet (ChainID 1). It includes settings for block management, transactions, gas estimation, head tracking, and OCR (Off-Chain Reporting).\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_51\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0x514910771AF9Ca656af840dff83E8264EcF986CA'\nLogBackfillBatchSize = 1000\nLogPollInterval = '15s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.1 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nOperatorFactoryAddress = '0x3E64Cd889482443324F91bFA9c84fE72A511f48A'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '9m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 4\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 50\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 10500000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Optimism Mainnet (ChainID 10) Settings in TOML\nDESCRIPTION: This snippet contains the default configuration for Optimism Mainnet (ChainID 10). It includes settings specific to the Optimism Bedrock network, such as block management, transactions, and logging.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_55\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 200\nFinalityTagEnabled = true\nLinkContractAddress = '0x350a791Bfc2C21F9Ed5d10980Dad2e2638ffa7f6'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '40s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS Security in TOML\nDESCRIPTION: TLS security settings including certificate paths, ports and redirect options.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n[WebServer.TLS]\nCertPath = '~/.cl/certs'\nHost = 'tls-host'\nKeyPath = '/home/$USER/.chainlink/tls/server.key'\nHTTPSPort = 6689\nForceRedirect = false\nListenIP = '0.0.0.0'\n```\n\n----------------------------------------\n\nTITLE: Configuring EVM Transaction Settings in TOML\nDESCRIPTION: Core transaction management settings including queue limits, forwarding, and reaper configurations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_191\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h'\nReaperThreshold = '168h'\nResendAfterThreshold = '1m'\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Polygon Mumbai in TOML\nDESCRIPTION: TOML configuration for a Chainlink node on Polygon Mumbai testnet (chain ID 80001). Includes Link contract address and settings optimized for the Mumbai testnet environment with specific gas pricing and transaction parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_147\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 500\nFinalityTagEnabled = false\nLinkContractAddress = '0x326C977E6efc84E512bB9C30f76E30c160eD06FB'\nLogBackfillBatchSize = 1000\nLogPollInterval = '1s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 5\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '30s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 100\nRPCBlockQueryDelay = 10\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 5000\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '25 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '25 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '20 gwei'\nBumpPercent = 20\nBumpThreshold = 5\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 24\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 2000\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring HeadTracker Settings for Blockchain Node in TOML\nDESCRIPTION: This configuration snippet defines HeadTracker parameters for a blockchain node. HeadTracker is responsible for monitoring new blocks on the chain, with settings for history depth, buffer size, sampling interval, and finality handling.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_113\n\nLANGUAGE: toml\nCODE:\n```\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR and OCR2 Settings in TOML\nDESCRIPTION: Off-Chain Reporting configuration parameters. These settings control contract confirmations, transmit timeouts, and database interactions for OCR and OCR2 based oracle networks.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_93\n\nLANGUAGE: toml\nCODE:\n```\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Avalanche Fuji Testnet\nDESCRIPTION: TOML configuration for Chainlink nodes on Avalanche Fuji testnet (Chain ID 43113). It includes network-specific settings such as LinkContractAddress and gas estimation parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_133\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 10\nFinalityTagEnabled = true\nLinkContractAddress = '0x0b9d5D9136855f6FEc3c0993feE6E9CE8a297846'\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '30s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 2\nFinalizedBlockOffset = 2\nNoNewFinalizedHeadsThreshold = '1m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '1 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 24\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = false\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Deploying a full VRF Universe for VRF V2+\nDESCRIPTION: This Go command deploys a complete VRF environment on-chain, including BHS, Registered + Funded Coordinator, and Consumer. It sets up the LINK token, LINK-ETH feed, and funds the VRF V2+ subscription.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngo run . deploy-universe \\\n--link-address=$LINK \\\n--link-eth-feed=$LINK_ETH_FEED \\\n--subscription-balance=5000000000000000000 \\ #5 LINK\n--subscription-balance-native=1000000000000000000 \\ #1 ETH\n--uncompressed-pub-key=<VRF Uncompressed Public Key> \\\n--vrf-primary-node-sending-keys=\"<sending-key1-address,sending-key2-address>\" \\ #used to fund the keys and for sample VRF Job Spec generation\n--sending-key-funding-amount 100000000000000000 \\ #0.1 ETH, fund addresses specified in vrf-primary-node-sending-keys\n--batch-fulfillment-enabled false \\ #only used for sample VRF Job Spec generation\n--register-vrf-key-against-address=\"<eoa address>\" # from this address you can perform `coordinator.oracleWithdraw` to withdraw earned funds from rand request fulfilments\n```\n\n----------------------------------------\n\nTITLE: Loading TOML Configuration for Log Poller Tests in Go\nDESCRIPTION: Demonstrates how to load Log Poller test configuration from a TOML file instead of creating it programmatically. The code reads the config and sets up the events to emit for the test.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/LOG_POLLER.md#2025-04-21_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\n\tcfg, err := lp_helpers.ReadConfig(lp_helpers.DefaultConfigFilename)\n\trequire.NoError(t, err)\n\n\teventsToEmit := []abi.Event{}\n\tfor _, event := range lp_helpers.EmitterABI.Events {\n\t\teventsToEmit = append(eventsToEmit, event)\n\t}\n\n\tcfg.General.EventsToEmit = eventsToEmit\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Server Settings for Chainlink Nodes in TOML\nDESCRIPTION: Defines web server settings for Chainlink nodes. Controls authentication method, CORS settings, timeouts, ports, and security options.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n[WebServer]\nAuthenticationMethod = 'local' # Default\nAllowOrigins = 'http://localhost:3000,http://localhost:6688' # Default\nBridgeCacheTTL = '0s' # Default\nBridgeResponseURL = 'https://my-chainlink-node.example.com:6688' # Example\nHTTPWriteTimeout = '10s' # Default\nHTTPPort = 6688 # Default\nSecureCookies = true # Default\nSessionTimeout = '15m' # Default\nSessionReaperExpiration = '240h' # Default\nHTTPMaxSize = '32768b' # Default\nStartTimeout = '15s' # Default\nListenIP = '0.0.0.0' # Default\n```\n\n----------------------------------------\n\nTITLE: Base Network Configuration TOML\nDESCRIPTION: Base configuration file containing core network settings, gas estimation parameters, and OCR configuration details. Includes settings for transaction management, head tracking, and node pool operations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_56\n\nLANGUAGE: toml\nCODE:\n```\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '13m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '30s'\n\n[Transactions.AutoPurge]\nEnabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Lens Mainnet Chain in TOML\nDESCRIPTION: Complete configuration for the Lens Mainnet (zkSync) chain, specifying zkSync-specific parameters, gas estimation settings, and Oracle configurations. This defines how the node interacts with the zkSync L2 network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_79\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'zksync'\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0x2Ea38D6cDb6774992d4A62fe622f4405663729Dd'\nLogBackfillBatchSize = 1000\nLogPollInterval = '5s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '7m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 40\nBumpThreshold = 1\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '5s'\n\n[GasEstimator.DAOracle]\nOracleType = 'zksync'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\n```\n\n----------------------------------------\n\nTITLE: Configuring VerifyChainID Flag for Chain Validation\nDESCRIPTION: Controls whether Chainlink should verify that RPC node ChainIDs match the configured ChainID. This helps prevent cross-chain confusion and security issues.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_218\n\nLANGUAGE: toml\nCODE:\n```\nVerifyChainID = true # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring WeMix Testnet Chain Settings in TOML\nDESCRIPTION: This snippet defines configuration parameters for the WeMix Testnet (chain ID 1112). It includes settings for block processing, gas estimation, transaction handling, and Oracle Contract Reader (OCR) operations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_98\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'wemix'\nFinalityDepth = 10\nFinalityTagEnabled = true\nLinkContractAddress = '0x3580c7A817cCD41f7e02143BFa411D4EeAE78093'\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '30s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 2\nNoNewFinalizedHeadsThreshold = '40s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '100 gwei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = false\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Node Configuration Block in TOML\nDESCRIPTION: Example of a node configuration block that needs to be repeated for each node in a multi-node setup. This configuration enables LogPoller, OCR2, and P2P V2 features for a Chainlink node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n    [nodesets.node_specs.node]\n      image = \"localhost:5001/chainlink:112b9323-plugins-cron\"\n      user_config_overrides = \"\"\"\n      [Feature]\n\t\t\tLogPoller = true\n\n\t\t\t[OCR2]\n\t\t\tEnabled = true\n\t\t\tDatabaseTimeout = '1s'\n\n\t\t\t[P2P.V2]\n\t\t\tEnabled = true\n\t\t\tListenAddresses = ['0.0.0.0:5001']\n      \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring XLayer Mainnet Chain in TOML\nDESCRIPTION: Complete configuration for the XLayer Mainnet chain, including network parameters, transaction settings, gas estimation, and Oracle configurations. This defines how the Chainlink node interacts with the XLayer blockchain.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_76\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'xlayer'\nFinalityDepth = 500\nFinalityTagEnabled = false\nLinkContractAddress = '0x8aF9711B44695a5A081F25AB9903DDB73aCf8FA9'\nLogBackfillBatchSize = 1000\nLogPollInterval = '30s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '6m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 100\nRPCBlockQueryDelay = 15\nFinalizedBlockOffset = 2\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '3m0s'\n\n[Transactions.AutoPurge]\nEnabled = true\nMinAttempts = 3\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '100 mwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '100 mwei'\nBumpPercent = 40\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 12\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 2000\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Node Configuration File Format\nDESCRIPTION: Template for creating the nodes list configuration file. Contains boot node URL, login credentials, and node URLs with their respective authentication details. The bootstrap node must be listed first.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/functions/USAGE.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nboot_node_url login password\nnode0_url login0 password0\nnode1_url login1 password1\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Celo Mainnet (42220)\nDESCRIPTION: TOML configuration for Chainlink node operation on Celo Mainnet (chain ID 42220). This configuration sets up Celo-specific parameters with a high finality depth of 2750 blocks and a shorter transaction resend threshold of 30 seconds.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_130\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'celo'\nFinalityDepth = 2750\nFinalityTagEnabled = true\nLinkContractAddress = '0xd07294e6E917e07dfDcee882dd1e2565085C2ae0'\nLogBackfillBatchSize = 1000\nLogPollInterval = '1s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '1m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '45m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '30s'\n\n[Transactions.AutoPurge]\nEnabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Klaytn Mainnet in TOML\nDESCRIPTION: TOML configuration for a Chainlink node operating on the Klaytn Mainnet (chain ID 8217). It specifies network-specific parameters for gas estimation, transaction handling, and OCR settings tailored for the Klaytn blockchain.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_123\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 10\nFinalityTagEnabled = false\nLogBackfillBatchSize = 1000\nLogPollInterval = '15s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '30s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'SuggestedPrice'\nPriceDefault = '750 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 5\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Profiling Configuration Settings in TOML\nDESCRIPTION: Configuration settings for CPU, memory, block and mutex profiling rates along with memory and goroutine thresholds.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_42\n\nLANGUAGE: toml\nCODE:\n```\nCPUProfileRate = 1\nMemProfileRate = 1\nBlockProfileRate = 1\nMutexProfileFraction = 1\nMemThreshold = '4gb'\nGoroutineThreshold = 5000\n```\n\n----------------------------------------\n\nTITLE: Block History Estimator Configuration in TOML\nDESCRIPTION: Settings for the block history gas price estimator including batch size, history size, and percentile calculations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_203\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nEIP1559FeeCapBufferBlocks = 13\nTransactionPercentile = 60\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR2 Settings for Chainlink in TOML\nDESCRIPTION: Comprehensive configuration for OCR2 including enabling the feature, setting contract confirmations, timeouts, polling intervals, and various other parameters for OCR2 operation.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_27\n\nLANGUAGE: toml\nCODE:\n```\n[OCR2]\nEnabled = false # Default\nContractConfirmations = 3 # Default\nBlockchainTimeout = '20s' # Default\nContractPollInterval = '1m' # Default\nContractSubscribeInterval = '2m' # Default\nContractTransmitterTransmitTimeout = '10s' # Default\nDatabaseTimeout = '10s' # Default\nKeyBundleID = '7a5f66bbe6594259325bf2b4f5b1a9c900000000000000000000000000000000' # Example\nCaptureEATelemetry = false # Default\nCaptureAutomationCustomTelemetry = true # Default\nAllowNoBootstrappers = false # Default\nDefaultTransactionQueueDepth = 1 # Default\nSimulateTransactions = false # Default\nTraceLogging = false # Default\n```\n\n----------------------------------------\n\nTITLE: Arbitrum Sepolia Chain Configuration\nDESCRIPTION: Configuration for Chainlink node on Arbitrum Sepolia testnet with finality tag enabled\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_167\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'arbitrum'\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0xb1D4538B4571d411F07960EF2838Ce337FE1E80E'\nLogBackfillBatchSize = 1000\nLogPollInterval = '1s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'Arbitrum'\nPriceDefault = '100 mwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '0'\nLimitDefault = 500000\nLimitMax = 1000000000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 5\nEIP1559DynamicFees = false\nFeeCapDefault = '1 micro'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 0\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'arbitrum'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 14500000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Block Finalization Settings in TOML\nDESCRIPTION: Settings for block finalization offset and log broadcasting. Controls how the node handles finalized blocks and logging functionality.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_190\n\nLANGUAGE: toml\nCODE:\n```\nFinalizedBlockOffset = 0\nLogBroadcasterEnabled = true\nNoNewFinalizedHeadsThreshold = '0'\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Merlin Testnet\nDESCRIPTION: TOML configuration for a Chainlink node on the Merlin testnet. It sets chain type to zkevm, defines gas estimation parameters, and other network-specific settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_171\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'zkevm'\nFinalityDepth = 1000\nFinalityTagEnabled = false\nLogBackfillBatchSize = 1000\nLogPollInterval = '4s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 100\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '3m0s'\n\n[Transactions.AutoPurge]\nEnabled = true\nMinAttempts = 3\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 2000\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring NodePool Settings in TOML\nDESCRIPTION: Sets parameters for the NodePool component, including polling intervals, selection mode, sync threshold, and chain ID verification.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_186\n\nLANGUAGE: toml\nCODE:\n```\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n```\n\n----------------------------------------\n\nTITLE: Configuring GatewayConnector in Chainlink Node (TOML)\nDESCRIPTION: Sets up GatewayConnector configuration including chain ID, node address, DON ID, and various authentication parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_37\n\nLANGUAGE: toml\nCODE:\n```\n[Capabilities.GatewayConnector]\nChainIDForNodeKey = '11155111' # Example\nNodeAddress = '0x68902d681c28119f9b2531473a417088bf008e59' # Example\nDonID = 'example_don' # Example\nWSHandshakeTimeoutMillis = 1000 # Example\nAuthMinChallengeLen = 10 # Example\nAuthTimestampToleranceSec = 10 # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Hemi Testnet\nDESCRIPTION: TOML configuration for a Chainlink node on the Hemi testnet. It sets chain type to optimismBedrock, defines gas estimation parameters using FeeHistory mode, and other network-specific settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_172\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 50\nFinalityTagEnabled = true\nLogBackfillBatchSize = 1000\nLogPollInterval = '4s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = false\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '30m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '2m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 50\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = false\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '4s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Hedera Testnet Settings\nDESCRIPTION: TOML configuration for Hedera testnet with automated key creation and specific chain parameters. Includes detailed gas estimation settings and OCR2 automation configurations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_85\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'hedera'\nFinalityDepth = 10\n# ... rest of configuration\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Scroll Network\nDESCRIPTION: TOML configuration for a Chainlink node on the Scroll network. It sets chain type, finality depth, gas estimation parameters, and other Scroll-specific settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_170\n\nLANGUAGE: toml\nCODE:\n```\nChainType = 'scroll'\nFinalityDepth = 10\nFinalityTagEnabled = true\nLinkContractAddress = '0x548C6944cba02B9D1C0570102c89de64D258d3Ac'\nLogBackfillBatchSize = 1000\nLogPollInterval = '5s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = true\nDetectionApiUrl = 'https://venus.scroll.io'\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 wei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '1 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 24\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x5300000000000000000000000000000000000002'\n\n[HeadTracker]\nHistoryDepth = 50\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Peering V2 in Chainlink Node (TOML)\nDESCRIPTION: Sets up P2P V2 configuration including enable/disable, announce addresses, bootstrappers, and timing parameters for dialing and reconciliation.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_36\n\nLANGUAGE: toml\nCODE:\n```\n[Capabilities.Peering.V2]\nEnabled = false # Default\nAnnounceAddresses = ['1.2.3.4:9999', '[a52d:0:a88:1274::abcd]:1337'] # Example\nDefaultBootstrappers = ['12D3KooWMHMRLQkgPbFSYHwD3NBuwtS1AmxhvKVUrcfyaGDASR4U@1.2.3.4:9999', '12D3KooWM55u5Swtpw9r8aFLQHEtw7HR4t44GdNs654ej5gRs2Dh@example.com:1234'] # Example\nDeltaDial = '15s' # Default\nDeltaReconcile = '1m' # Default\nListenAddresses = ['1.2.3.4:9999', '[a52d:0:a88:1274::abcd]:1337'] # Example\n```\n\n----------------------------------------\n\nTITLE: Arbitrum Rinkeby Chain Configuration\nDESCRIPTION: Complete configuration for Chainlink node running on Arbitrum Rinkeby testnet. Includes gas estimation, OCR, transaction management and node pool settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_165\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'arbitrum'\nFinalityDepth = 50\nFinalityTagEnabled = false\nLinkContractAddress = '0x615fBe6372676474d9e6933d310469c9b68e9726'\nLogBackfillBatchSize = 1000\nLogPollInterval = '1s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'Arbitrum'\nPriceDefault = '100 mwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '0'\nLimitDefault = 500000\nLimitMax = 1000000000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 5\nEIP1559DynamicFees = false\nFeeCapDefault = '1 micro'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 0\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'arbitrum'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR Parameters for Chainlink Node\nDESCRIPTION: Settings for Off-Chain Reporting (OCR) in a Chainlink node, which handles aggregation of data from multiple oracle nodes. It includes timeouts, confirmation settings, and grace periods.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_81\n\nLANGUAGE: toml\nCODE:\n```\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n```\n\n----------------------------------------\n\nTITLE: Configuring Optimism Goerli Settings\nDESCRIPTION: TOML configuration for Optimism Goerli testnet with Bedrock-specific parameters. Includes custom finality depth and logging configurations for the Optimism network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_88\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 200\n# ... rest of configuration\n```\n\n----------------------------------------\n\nTITLE: Configuring CCIP Group Load Testing Parameters in TOML\nDESCRIPTION: Demonstrates the complete configuration for CCIP load testing including commit parameters, execution parameters, and off-ramp settings. Includes timing configurations, gas limits, and data size constraints.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/testconfig/README.md#2025-04-21_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.Groups.load]\nCommitInflightExpiry = '5m'\n\n[CCIP.Groups.load.CommitOCRParams]\nDeltaProgress = '2m'\nDeltaResend = '5s'\nDeltaRound = '75s'\nDeltaGrace = '5s'\nMaxDurationQuery = '100ms'\nMaxDurationObservation = '35s'\nMaxDurationReport = '10s'\nMaxDurationShouldAcceptFinalizedReport = '5s'\nMaxDurationShouldTransmitAcceptedReport = '10s'\n\n[CCIP.Groups.load.ExecOCRParams]\nDeltaProgress = '2m'\nDeltaResend = '5s'\nDeltaRound = '75s'\nDeltaGrace = '5s'\nMaxDurationQuery = '100ms'\nMaxDurationObservation = '35s'\nMaxDurationReport = '10s'\nMaxDurationShouldAcceptFinalizedReport = '5s'\nMaxDurationShouldTransmitAcceptedReport = '10s'\n\n[CCIP.Groups.load.OffRampConfig]\nBatchGasLimit = 11000000\nMaxDataBytes = 1000\nInflightExpiry = '5m'\nRootSnooze = '5m'\n```\n\n----------------------------------------\n\nTITLE: Running Compose with Custom RPC Node Configuration\nDESCRIPTION: Example of running the compose script with custom chain ID and RPC endpoints for Sepolia testnet instead of using the default devnet.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/docker/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nCHAIN_ID=11155111 WSURL=wss://eth.sepolia HTTPURL=https://eth.sepolia ./compose dev\n```\n\n----------------------------------------\n\nTITLE: Configuring Base Sepolia Testnet Settings in TOML\nDESCRIPTION: Configuration settings for Base Sepolia testnet (Chain ID 84532) using Optimism Bedrock. Includes the Link contract address and testnet-specific parameters with finality tag enabled but lower confirmation requirements.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_154\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 200\nFinalityTagEnabled = true\nLinkContractAddress = '0xE4aB69C077896252FAFBD49EFD26B5D171A32410'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '40s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '12m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '30s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 wei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '100 wei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 60\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 300\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 6500000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring EVM.OCR2.Automation Gas Settings\nDESCRIPTION: Sets gas limits for OCR2 Automation transactions. Controls how much gas is allocated for transmit transactions from automation jobs.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_248\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.OCR2.Automation]\nGasLimit = 5400000 # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring P2P V2 Network Settings\nDESCRIPTION: Advanced P2P V2 networking configuration including bootstrap nodes and address settings\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_31\n\nLANGUAGE: toml\nCODE:\n```\n[P2P.V2]\nEnabled = true\nAnnounceAddresses = ['1.2.3.4:9999', '[a52d:0:a88:1274::abcd]:1337']\nDefaultBootstrappers = ['12D3KooWMHMRLQkgPbFSYHwD3NBuwtS1AmxhvKVUrcfyaGDASR4U@1.2.3.4:9999', '12D3KooWM55u5Swtpw9r8aFLQHEtw7HR4t44GdNs654ej5gRs2Dh@example.com:1234']\nDeltaDial = '15s'\nDeltaReconcile = '1m'\nListenAddresses = ['1.2.3.4:9999', '[a52d:0:a88:1274::abcd]:1337']\n```\n\n----------------------------------------\n\nTITLE: Solana Chain Configuration\nDESCRIPTION: Comprehensive configuration for Solana chain including network settings, transaction parameters, and performance tuning\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_261\n\nLANGUAGE: toml\nCODE:\n```\n[[Solana]]\nChainID = 'mainnet'\nEnabled = false\nBlockTime = '500ms'\nBalancePollPeriod = '5s'\nConfirmPollPeriod = '500ms'\nOCR2CachePollPeriod = '1s'\nOCR2CacheTTL = '1m'\nTxTimeout = '1m'\nTxRetryTimeout = '10s'\nTxConfirmTimeout = '30s'\nTxExpirationRebroadcast = false\nTxRetentionTimeout = '0s'\nSkipPreflight = true\nCommitment = 'confirmed'\nMaxRetries = 0\nFeeEstimatorMode = 'fixed'\nComputeUnitPriceMax = 1000\nComputeUnitPriceMin = 0\nComputeUnitPriceDefault = 0\nFeeBumpPeriod = '3s'\nBlockHistoryPollPeriod = '5s'\nBlockHistorySize = 1\nBlockHistoryBatchLoadSize = 20\nComputeUnitLimitDefault = 200_000\nEstimateComputeUnitLimit = false\nLogPollerStartingLookback = '24h0m0s'\n```\n\n----------------------------------------\n\nTITLE: Ethereum Sepolia Configuration\nDESCRIPTION: Configuration for Ethereum Sepolia testnet (Chain ID: 11155111) with specific gas estimation and OCR settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_177\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0x779877A7B0D9E8603169DdbD7836e478b4624789'\n```\n\n----------------------------------------\n\nTITLE: Base Network Configuration Block\nDESCRIPTION: Core network configuration parameters including block management, logging, and chain-specific settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_175\n\nLANGUAGE: toml\nCODE:\n```\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '1h50m0s'\n```\n\n----------------------------------------\n\nTITLE: Mercury Credentials Configuration\nDESCRIPTION: Configuration for Mercury price feed service credentials, including username, password, and endpoint URLs for both current and legacy versions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n[Mercury.Credentials.Name]\nUsername = \"A-Mercury-Username\" # Example\nPassword = \"A-Mercury-Password\" # Example\nURL = \"https://example.com\" # Example\nLegacyURL = \"https://example.v1.com\" # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring Node Pool in TOML\nDESCRIPTION: Settings for the Node Pool component which manages connections to blockchain RPC providers. Controls polling intervals, node selection strategies, and synchronization thresholds.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_72\n\nLANGUAGE: toml\nCODE:\n```\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n```\n\n----------------------------------------\n\nTITLE: Configuring ZKsync Mainnet Settings\nDESCRIPTION: TOML configuration for ZKsync mainnet with production parameters and gas settings. Includes specific block tracking and OCR configurations for mainnet use.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_87\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'zksync'\nFinalityDepth = 10\n# ... rest of configuration\n```\n\n----------------------------------------\n\nTITLE: Configuring ServiceUnavailable Regex Pattern for RPC Availability\nDESCRIPTION: Sets a regex pattern to identify when an RPC service is unavailable. This helps the node recognize temporary outages and switch to alternative nodes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_233\n\nLANGUAGE: toml\nCODE:\n```\nServiceUnavailable = '(: |^)service unavailable' # Example\n```\n\n----------------------------------------\n\nTITLE: Launching and Testing OCR2Keeper Nodes\nDESCRIPTION: Command to launch OCR2Keeper nodes and run tests against them to verify functionality.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/README.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n./chaincli keeper launch-and-test\n```\n\n----------------------------------------\n\nTITLE: Configuring Core Testnet Chain Settings in TOML\nDESCRIPTION: This snippet defines configuration parameters for the Core Testnet (chain ID 1114). It includes settings for block processing, gas estimation, transaction handling, and Oracle Contract Reader (OCR) operations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_99\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 7\nFinalityTagEnabled = false\nLinkContractAddress = '0x6C475841d1D7871940E93579E5DBaE01634e17aA'\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '35 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Audit Logger for Chainlink Nodes in TOML\nDESCRIPTION: Sets up audit logging for Chainlink nodes. Controls enabling the logger, forwarding URL, JSON wrapper key, and custom headers for log forwarding.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n[AuditLogger]\nEnabled = false # Default\nForwardToUrl = 'http://localhost:9898' # Example\nJsonWrapperKey = 'event' # Example\nHeaders = ['Authorization: token', 'X-SomeOther-Header: value with spaces | and a bar+*'] # Example\n```\n\n----------------------------------------\n\nTITLE: Checking VRF V2+ Subscription Balance\nDESCRIPTION: This Go command checks the LINK balance of a VRF V2+ subscription using the specified coordinator address and subscription ID.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ngo run . sub-balance --coordinator-address $COORDINATOR --sub-id=$SUB_ID\n```\n\n----------------------------------------\n\nTITLE: Linea Sepolia Network Configuration\nDESCRIPTION: Configuration file for Chainlink node operation on Linea Sepolia testnet (Chain ID: 59141). Includes settings for gas estimation, transaction management, head tracking, OCR, and general node operation parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_142\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 900\nFinalityTagEnabled = false\nLinkContractAddress = '0xF64E6E064a71B45514691D397ad4204972cD6508'\n# ... [truncated for brevity]\n```\n\n----------------------------------------\n\nTITLE: Exporting Environment Variables for Load Testing Configuration\nDESCRIPTION: Sets up the required environment variables for load testing, including network selection, API keys, URLs, and logging configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/functions/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport SELECTED_NETWORKS=MUMBAI\nexport MUMBAI_KEYS=...\nexport MUMBAI_URLS=...\nexport LOKI_TOKEN=...\nexport LOKI_URL=...\n```\n\n----------------------------------------\n\nTITLE: Configuring Telemetry Ingress Endpoints for Chainlink Nodes in TOML\nDESCRIPTION: Specifies telemetry ingress endpoints for different networks. Includes network type, chain ID, server public key, and URL for sending telemetry data.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[[TelemetryIngress.Endpoints]] # Example\nNetwork = 'EVM' # Example\nChainID = '111551111' # Example\nServerPubKey = 'test-pub-key-111551111-evm' # Example\nURL = 'localhost-111551111-evm:9000' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring ZKsync Sepolia Settings\nDESCRIPTION: TOML configuration for ZKsync Sepolia network with ZK-specific parameters and gas estimation settings. Includes block history and fee history configurations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_86\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'zksync'\nFinalityDepth = 10\n# ... rest of configuration\n```\n\n----------------------------------------\n\nTITLE: Cosmos Node Configuration\nDESCRIPTION: Configuration for Cosmos blockchain nodes including node identification and Tendermint endpoint settings\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_260\n\nLANGUAGE: toml\nCODE:\n```\n[[Cosmos.Nodes]]\nName = 'primary'\nTendermintURL = 'http://tender.mint'\n```\n\n----------------------------------------\n\nTITLE: Setting OCR2 Automation Gas Limit for Chainlink Networks\nDESCRIPTION: Configures the gas limit for OCR2 Automation across multiple Chainlink networks. This setting is uniform across all networks in the configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_126\n\nLANGUAGE: toml\nCODE:\n```\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n```\n\n----------------------------------------\n\nTITLE: TOML Configuration for Live Testnet Testing\nDESCRIPTION: Example TOML configuration file for running tests against live testnets. It specifies the Chainlink image, target network (Polygon Mumbai), RPC endpoints, and wallet keys.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/README.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[ChainlinkImage]\nimage=\"your-image\"\nversion=\"your-version\"\n\n[Network]\nselected_networks=[\"polygon_mumbai\"]\n\n[Network.RpcHttpUrls]\npolygon_mumbai=[\"https://http.endpoint.com\"]\n\n[Network.RpcWsUrls]\npolygon_mumbai=[\"wss://ws.endpoint.com\"]\n\n[Network.WalletKeys]\npolygon_mumbai=[\"my_so_private_key\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Plume Mainnet Settings in TOML\nDESCRIPTION: Configuration settings for Plume Mainnet (Chain ID 98866). This configuration uses FeeHistory for gas estimation rather than BlockHistory and has specific settings for finality depth and thresholds appropriate for this network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_155\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = true\nLogBackfillBatchSize = 1000\nLogPollInterval = '5s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '10m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '13h0m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '20 gwei'\nPriceMax = '1 micro'\nPriceMin = '0'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\n```\n\n----------------------------------------\n\nTITLE: Configuring TransactionAlreadyInMempool Regex Pattern\nDESCRIPTION: Sets a regex pattern to identify errors for transactions already present in the mempool. This helps avoid duplicate transaction submissions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_224\n\nLANGUAGE: toml\nCODE:\n```\nTransactionAlreadyInMempool = '(: |^)transaction already in mempool' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR2 Automation Gas Limits in TOML\nDESCRIPTION: Specific gas limit settings for OCR2 Automation operations. This determines the maximum gas allowed for automation transactions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_74\n\nLANGUAGE: toml\nCODE:\n```\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Celo Testnet\nDESCRIPTION: TOML configuration for Chainlink nodes on Celo testnet (Chain ID 44787). It includes Celo-specific settings such as ChainType and gas estimation parameters optimized for Celo.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_135\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'celo'\nFinalityDepth = 2750\nFinalityTagEnabled = true\nLinkContractAddress = '0x32E08557B14FaD8908025619797221281D439071'\nLogBackfillBatchSize = 1000\nLogPollInterval = '1s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '1m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '45m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '30s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '1 micro'\nPriceMin = '5 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 200\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 300\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Mind Mainnet Chain in TOML\nDESCRIPTION: Complete configuration for the Mind Mainnet (Arbitrum) chain, including network parameters, Arbitrum-specific gas estimation settings, and Oracle configurations. This defines how the node interacts with the Arbitrum L2 network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_78\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'arbitrum'\nFinalityDepth = 50\nFinalityTagEnabled = true\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'Arbitrum'\nPriceDefault = '5 mwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '0'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'arbitrum'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Lens Sepolia (37111)\nDESCRIPTION: TOML configuration for Chainlink node operation on Lens Sepolia testnet (chain ID 37111). This configuration is tailored for the zksync chain type and includes specific settings for gas estimation, transaction management, and node pool error handling.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_128\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'zksync'\nFinalityDepth = 40\nFinalityTagEnabled = false\nLinkContractAddress = '0x7f1b9eE544f9ff9bB521Ab79c205d79C55250a36'\nLogBackfillBatchSize = 1000\nLogPollInterval = '5s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '10m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '7m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 40\nBumpThreshold = 1\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '5s'\n\n[GasEstimator.DAOracle]\nOracleType = 'zksync'\n\n[HeadTracker]\nHistoryDepth = 250\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[NodePool.Errors]\nTerminallyUnderpriced = '(?:: |^)(max fee per gas less than block base fee|virtual machine entered unexpected state. (?:P|p)lease contact developers and provide transaction details that caused this error. Error description: (?:The operator included transaction with an unacceptable gas price|Assertion error: Fair pubdata price too high))$'\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring AutoPprof in Chainlink Node (TOML)\nDESCRIPTION: Sets up automatic profiling service parameters including enable/disable, profile root, intervals, durations, and resource thresholds.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_41\n\nLANGUAGE: toml\nCODE:\n```\n[AutoPprof]\nEnabled = false # Default\nProfileRoot = 'prof/root' # Example\nPollInterval = '10s' # Default\nGatherDuration = '10s' # Default\nGatherTraceDuration = '5s' # Default\nMaxProfileSize = '100mb' # Default\nCPUProfileRate = 1 # Default\nMemProfileRate = 1 # Default\nBlockProfileRate = 1 # Default\nMutexProfileFraction = 1 # Default\nMemThreshold = '4gb' # Default\nGoroutineThreshold = 5000 # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring TooManyResults Regex Pattern for Query Limits\nDESCRIPTION: Sets a regex pattern to identify when eth_getLogs returns an error due to excessive results. This helps handle cases where query ranges need to be narrowed.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_234\n\nLANGUAGE: toml\nCODE:\n```\nTooManyResults = '(: |^)too many results' # Example\n```\n\n----------------------------------------\n\nTITLE: Simulated Network Configuration\nDESCRIPTION: Configuration for simulated blockchain network (chain ID 1337) with simplified gas settings and reduced timeouts for testing purposes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_103\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 10\nFinalityTagEnabled = false\nLogBackfillBatchSize = 1000\n# ... more configuration\n```\n\n----------------------------------------\n\nTITLE: Configuring Block History Gas Estimator in TOML for Chainlink Nodes\nDESCRIPTION: These settings control how the BlockHistory gas estimator operates, including batch size, history window, and transaction percentile calculations. They determine how historical block data is used for gas price estimation.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_157\n\nLANGUAGE: toml\nCODE:\n```\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n```\n\n----------------------------------------\n\nTITLE: Fixed Gas Price Configuration in TOML\nDESCRIPTION: Example configuration for forcing Chainlink node to use a fixed gas price by setting specific price parameters and disabling dynamic fee adjustment.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_197\n\nLANGUAGE: toml\nCODE:\n```\nEIP1559DynamicFees = false\nPriceMax = 100\nPriceMin = 100\nPriceDefault = 100\nBumpThreshold = 0\nMode = 'FixedPrice'\n```\n\n----------------------------------------\n\nTITLE: Hashkey Mainnet Configuration\nDESCRIPTION: Optimism Bedrock-specific configuration for Hashkey Mainnet including custom gas parameters and network settings\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_66\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0x71052BAe71C25C78E37fD12E5ff1101A71d9018F'\nLogBackfillBatchSize = 1000\nLogPollInterval = '15s'\nLogKeepBlocksDepth = 100000\n```\n\n----------------------------------------\n\nTITLE: Configuring HeadTracker Settings in TOML\nDESCRIPTION: Configuration for the head tracker which monitors new blocks on the chain.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_211\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.HeadTracker]\nHistoryDepth = 100 # Default\nMaxBufferSize = 3 # Default\nSamplingInterval = '1s' # Default\nFinalityTagBypass = true # Default\nMaxAllowedFinalityDepth = 10000 # Default\nPersistenceEnabled = true # Default\n```\n\n----------------------------------------\n\nTITLE: Starting Bootstrap Nodes\nDESCRIPTION: Command to launch bootstrap nodes which are required for the OCR2Keepers P2P network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/README.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n./chaincli bootstrap\n```\n\n----------------------------------------\n\nTITLE: Configuring Fantom Testnet Chain Settings in TOML\nDESCRIPTION: Comprehensive configuration for the Fantom Testnet (Chain ID 4002). This includes network-specific settings for block backfill, finality, logging, transaction management, and gas estimation tailored for the Fantom test network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_118\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = false\nLinkContractAddress = '0xfaFedb041c0DD4fA2Dc0d87a6B0979Ee6FA7af5F'\nLogBackfillBatchSize = 1000\nLogPollInterval = '1s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 2\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'SuggestedPrice'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 3800000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Flux Monitor Settings for Chainlink in TOML\nDESCRIPTION: Sets the default transaction queue depth and enables transaction simulation for Flux Monitor. The queue depth controls the 'DropOldestStrategy', with 0 using 'SendEvery' strategy instead.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_26\n\nLANGUAGE: toml\nCODE:\n```\n[FluxMonitor]\nDefaultTransactionQueueDepth = 1 # Default\nSimulateTransactions = false # Default\n```\n\n----------------------------------------\n\nTITLE: Arbitrum Goerli Chain Configuration\nDESCRIPTION: Configuration for Chainlink node on Arbitrum Goerli testnet with different gas limit settings for automation\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_166\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'arbitrum'\nFinalityDepth = 50\nFinalityTagEnabled = false\nLinkContractAddress = '0xd14838A68E8AFBAdE5efb411d5871ea0011AFd28'\nLogBackfillBatchSize = 1000\nLogPollInterval = '1s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'Arbitrum'\nPriceDefault = '100 mwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '0'\nLimitDefault = 500000\nLimitMax = 1000000000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 5\nEIP1559DynamicFees = false\nFeeCapDefault = '1 micro'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 0\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'arbitrum'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 14500000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Avalanche Mainnet\nDESCRIPTION: TOML configuration for Chainlink nodes on Avalanche mainnet (Chain ID 43114). It includes network-specific settings such as LinkContractAddress and gas estimation parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_134\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 10\nFinalityTagEnabled = true\nLinkContractAddress = '0x5947BB275c521040051D82396192181b413227A3'\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '30s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 2\nFinalizedBlockOffset = 2\nNoNewFinalizedHeadsThreshold = '1m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '1 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 24\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Setting up environment variables for VRF V2 testnet scripts\nDESCRIPTION: Exports necessary environment variables for configuring the VRF V2 testnet scripts, including Ethereum URL, chain ID, account key, and contract addresses.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nexport ETH_URL=<YOUR ETH URL>\nexport ETH_CHAIN_ID=<YOUR CHAIN ID>\nexport ACCOUNT_KEY=<YOUR PRIVATE KEY>\nexport LINK=<LINK ADDRESS>\nexport LINK_ETH_FEED=<ADDRESS OFF LINK/ETH FEED>\nexport COORDINATOR=<COORDINATOR ADDRESS>\nexport KEY_HASH=<KEY HASH>\nexport ORACLE_ADDRESS=<YOUR ORACLE NODE ADDRESS>\nexport PUB_KEY=<YOUR UNCOMPRESSED PUBLIC KEY>\n```\n\n----------------------------------------\n\nTITLE: Running VRF V2 Plus Setup Script\nDESCRIPTION: Command to execute the VRF V2 Plus setup script with configuration options specific to V2 Plus, including premium percentages and fee settings, which differs from V2 by not requiring certain parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/common/vrf/setup-envs/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngo run . \\\n--vrf-version=\"v2plus\" \\\n--vrf-primary-node-url=http://localhost:6610 \\\n--vrf-primary-creds-file <path_to_file_with_creds> \\\n--vrf-backup-node-url=http://localhost:6611 \\\n--vrf-bk-creds-file <path_to_file_with_creds> \\\n--bhs-node-url=http://localhost:6612 \\\n--bhs-creds-file <path_to_file_with_creds> \\\n--bhs-backup-node-url=http://localhost:6613 \\\n--bhs-bk-creds-file <path_to_file_with_creds> \\\n--bhf-node-url=http://localhost:6614 \\\n--bhf-creds-file <path_to_file_with_creds> \\\n--num-eth-keys=1 \\\n--num-vrf-keys=1 \\\n--num-bhs-sending-keys= 1 \\\n--num-bhf-sending-keys=1 \\\n--sending-key-funding-amount=\"1e17\" \\\n--deploy-contracts-and-create-jobs=\"true\" \\\n--subscription-balance=\"1e19\" \\\n--subscription-balance-native=\"1e18\" \\\n--batch-fulfillment-enabled=\"true\" \\\n--batch-fulfillment-gas-multiplier=1.1 \\\n--estimate-gas-multiplier=1.1 \\\n--poll-period=\"5s\" \\\n--request-timeout=\"30m0s\" \\\n--min-confs=3 \\\n--simulation-block=\"latest\" \\\n--proving-key-max-gas-price=\"1e12\" \\\n--flat-fee-native-ppm=500 \\\n--flat-fee-link-discount-ppm=100 \\\n--native-premium-percentage=1 \\\n--link-premium-percentage=1 \\\n--bhs-job-wait-blocks=30 \\\n--bhs-job-look-back-blocks=200 \\\n--bhs-job-poll-period=\"1s\" \\\n--bhs-job-run-timeout=\"1m\" \n```\n\n----------------------------------------\n\nTITLE: Setting SendOnly Flag for EVM Node Usage Limitation\nDESCRIPTION: When enabled, restricts an RPC node to only sending transactions without using it for other queries. Only requires HTTPURL and doesn't use WebSocket connection.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_246\n\nLANGUAGE: toml\nCODE:\n```\nSendOnly = false # Default\n```\n\n----------------------------------------\n\nTITLE: Ronin Saigon Network Configuration\nDESCRIPTION: Configuration specific to the Ronin Saigon network with additional parameters for block backfilling, finality, and link contract settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_108\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0x5bB50A6888ee6a67E22afFDFD9513be7740F1c15'\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n[...rest of configuration...]\n```\n\n----------------------------------------\n\nTITLE: Gas Limit Configuration in TOML\nDESCRIPTION: Default gas limit settings for various transaction types including transfer limits and estimation controls.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_198\n\nLANGUAGE: toml\nCODE:\n```\nLimitDefault = 500_000\nLimitMax = 500_000\nLimitMultiplier = '1.0'\nLimitTransfer = 21_000\nEstimateLimit = false\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Ethereum Connection\nDESCRIPTION: Environment variables needed to be set before executing VRF setup scripts, including Ethereum node URL, chain ID, and account key.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/common/vrf/setup-envs/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport ETH_URL=\nexport ETH_CHAIN_ID=\nexport ACCOUNT_KEY=\n```\n\n----------------------------------------\n\nTITLE: Shibarium Testnet Configuration\nDESCRIPTION: Configuration settings specific to Shibarium Testnet with modified gas estimation and transaction parameters\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_65\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0x44637eEfD71A090990f89faEC7022fc74B2969aD'\nLogBackfillBatchSize = 1000\nLogPollInterval = '1s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 5\nMinContractPayment = '0.00001 link'\n```\n\n----------------------------------------\n\nTITLE: Configuring KeySpecific Settings in TOML\nDESCRIPTION: Account-specific settings for gas price management.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_212\n\nLANGUAGE: toml\nCODE:\n```\n[[EVM.KeySpecific]]\nKey = '0x2a3e23c6f242F5345320814aC8a1b4E58707D292' # Example\nGasEstimator.PriceMax = '79 gwei' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Harmony Testnet\nDESCRIPTION: This snippet defines configuration settings for a Chainlink node on the Harmony Testnet. It includes specific gas estimation parameters, transaction settings, and OCR configurations for the Harmony test network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_183\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = false\nLinkContractAddress = '0x8b12Ac23BFe11cAb03a634C1F117D64a7f2cFD3e'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '30s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '5 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n```\n\n----------------------------------------\n\nTITLE: BSC Mainnet Configuration TOML\nDESCRIPTION: Binance Smart Chain mainnet (Chain ID 56) specific configuration with optimized gas parameters and network settings for BSC operations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_60\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0x404460C6A5EdE2D891e8297795264fDe62ADBB75'\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\n```\n\n----------------------------------------\n\nTITLE: Configuring Ethereum Rinkeby (ChainID 4) Settings in TOML\nDESCRIPTION: This snippet contains the default configuration for Ethereum Rinkeby testnet (ChainID 4). It includes settings for block management, transactions, gas estimation, head tracking, and OCR (Off-Chain Reporting).\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_53\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = false\nLinkContractAddress = '0x01BE23585060835E02B77ef475b0Cc51aA1e0709'\nLogBackfillBatchSize = 1000\nLogPollInterval = '15s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.1 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 4\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 50\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Polygon zkEVM Cardona Network Configuration\nDESCRIPTION: Configuration for Polygon zkEVM Cardona network with zkEVM-specific parameters and modified gas estimation settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_110\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'zkevm'\nFinalityDepth = 500\nFinalityTagEnabled = false\nLinkContractAddress = '0x5576815a38A3706f37bf815b261cCc7cCA77e975'\n[...rest of configuration...]\n```\n\n----------------------------------------\n\nTITLE: Scroll Sepolia Chain Configuration\nDESCRIPTION: Configuration for Chainlink node on Scroll Sepolia testnet with Scroll-specific gas oracle settings\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_168\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'scroll'\nFinalityDepth = 10\nFinalityTagEnabled = true\nLinkContractAddress = '0x231d45b53C905c3d6201318156BDC725c9c3B9B1'\nLogBackfillBatchSize = 1000\nLogPollInterval = '5s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = true\nDetectionApiUrl = 'https://sepolia-venus.scroll.io'\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 wei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '1 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 24\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x5300000000000000000000000000000000000002'\n\n[HeadTracker]\nHistoryDepth = 50\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Creating k3d Registry and Cluster for Testing\nDESCRIPTION: Creates a local k3d registry and Kubernetes cluster that will be used for running the smoke tests. The registry will store Docker images that the cluster can pull from.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nk3d registry create myregistry.localhost --port 5001\nk3d cluster create --registry-use k3d-myregistry.localhost:5001\n```\n\n----------------------------------------\n\nTITLE: Setting CCIP Network Configuration in TOML\nDESCRIPTION: Example TOML configuration for overriding default network settings to run tests on specific networks (Avalanche Fuji and Arbitrum Goerli).\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/README.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP]\n[CCIP.Env]\n[CCIP.Env.Network]\nselected_networks= ['AVALANCHE_FUJI', 'ARBITRUM_GOERLI']\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Locking for Chainlink Nodes in TOML\nDESCRIPTION: Sets up database locking settings for Chainlink nodes. Controls lease duration and refresh interval for database locks to prevent multiple instances from accessing the same database simultaneously.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[Database.Lock]\nEnabled = true # Default\nLeaseDuration = '10s' # Default\nLeaseRefreshInterval = '1s' # Default\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Workflow for Chainlink\nDESCRIPTION: This TOML snippet defines a YAML workflow for Chainlink. It includes triggers, consensus, and targets for a data feed workflow.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\ntype = \"workflow\"\nschemaVersion = 1\nname = \"my-df-workflow\"\nexternalJobID = \"my-df-workflow-f712hdf\"\nworkflow = \"\"\"\nname: \"my-df-workflow\"\nowner: '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'\ntriggers:\n - id: streams-trigger@1.0.0\n   config:\n     maxFrequencyMs: 5000\n     feedIds:\n       - '0x018bfe88407000400000000000000000'\nconsensus:\n - id: offchain_reporting@1.0.0\n   ref: ccip_feeds\n   inputs:\n     observations:\n       - $(trigger.outputs)\n   config:\n     report_id: '0001'\n     key_id: 'evm'\n     aggregation_method: data_feeds\n     aggregation_config:\n       allowedPartialStaleness: '0.5'\n       feeds:\n        '0x018bfe88407000400000000000000000':\n          deviation: '0.01'\n          heartbeat: 600\n     encoder: EVM\n     encoder_config:\n       abi: (bytes32 FeedID, uint224 Price, uint32 Timestamp)[] Reports\ntargets:\n  - id: write_geth-testnet@1.0.0\n    inputs:\n      signed_report: $(ccip_feeds.outputs)\n    config:\n      address: '0x24309990d635A6C5FF711503BfCb942dd25F96A0'\n      deltaStage: 10s\n      schedule: oneAtATime\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Building Local Chainlink Docker Image\nDESCRIPTION: Command to build a local copy of the Chainlink Docker image from the repository's root directory.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t chainlink:local -f ./core/chainlink.Dockerfile .\n```\n\n----------------------------------------\n\nTITLE: Ethereum Kovan Configuration TOML\nDESCRIPTION: Configuration specific to Ethereum's Kovan testnet (Chain ID 42) with appropriate gas settings and network parameters for testnet operations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_59\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = false\nLinkContractAddress = '0xa36085F69e2889c224210F603D836748e7dC0088'\nLogBackfillBatchSize = 1000\nLogPollInterval = '15s'\n```\n\n----------------------------------------\n\nTITLE: Configuring Chain ID Verification in TOML\nDESCRIPTION: Controls whether RPC client Chain IDs should be verified against the configured Chain ID. This helps prevent connecting to the wrong blockchain network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_265\n\nLANGUAGE: toml\nCODE:\n```\nVerifyChainID = true # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Price Boundaries in TOML\nDESCRIPTION: Defines maximum and minimum gas price settings for Chainlink node transactions. PriceMax sets an upper limit that will never be exceeded, while PriceMin sets the lower bound for legacy transactions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_196\n\nLANGUAGE: toml\nCODE:\n```\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\n```\n\n----------------------------------------\n\nTITLE: Configuring Worldchain Testnet Chain Settings in TOML\nDESCRIPTION: Comprehensive configuration for the Worldchain Testnet (Chain ID 4801). This configuration is specific to an Optimism Bedrock chain type and includes settings for gas estimation using FeeHistory mode with EIP1559 dynamic fees enabled.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_120\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 2500\nFinalityTagEnabled = true\nLinkContractAddress = '0xC82Ea35634BcE95C394B6BC00626f827bB0F4801'\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '1h30m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 100\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '4s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\n```\n\n----------------------------------------\n\nTITLE: RSK Mainnet Configuration TOML\nDESCRIPTION: Configuration file specific to RSK Mainnet (Chain ID 30) with custom gas parameters, block tracking settings, and network-specific timeouts.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_57\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = false\nLinkContractAddress = '0x14AdaE34beF7ca957Ce2dDe5ADD97ea050123827'\nLogBackfillBatchSize = 1000\nLogPollInterval = '30s'\n```\n\n----------------------------------------\n\nTITLE: Soneium Mainnet Configuration\nDESCRIPTION: Configuration for Soneium mainnet (chain ID 1868) with optimized settings for production use including gas estimation and block history tracking.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_104\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 200\nFinalityTagEnabled = true\nLinkContractAddress = '0x32D8F819C8080ae44375F8d383Ffd39FC642f3Ec'\n# ... more configuration\n```\n\n----------------------------------------\n\nTITLE: Configuring Cosmos Chain Connection Settings\nDESCRIPTION: Sets parameters for connecting to and interacting with Cosmos-based blockchains. Controls network identification, transaction handling, and polling intervals for Cosmos chains.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_254\n\nLANGUAGE: toml\nCODE:\n```\n[[Cosmos]]\nChainID = 'Malaga-420' # Example\nEnabled = true # Default\nBech32Prefix = 'wasm' # Default\nBlockRate = '6s' # Default\nBlocksUntilTxTimeout = 30 # Default\nConfirmPollPeriod = '1s' # Default\nFallbackGasPrice = '0.015' # Default\nGasToken = 'ucosm' # Default\nGasLimitMultiplier = '1.5' # Default\nMaxMsgsPerBatch = 100 # Default\nOCR2CachePollPeriod = '4s' # Default\nOCR2CacheTTL = '1m' # Default\nTxMsgTimeout = '10m' # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Bsquared Mainnet Chain in TOML\nDESCRIPTION: Complete configuration for the Bsquared Mainnet (Optimism Bedrock) chain, specifying network parameters, gas estimation settings, and Oracle configurations. This defines node behavior on the Optimism Bedrock-based network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_77\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 2000\nFinalityTagEnabled = true\nLinkContractAddress = '0x709229D9587886a1eDFeE6b5cE636E1D70d1cE39'\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '1h10m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 100\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '4s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Mantle Sepolia in TOML\nDESCRIPTION: TOML configuration for a Chainlink node operating on the Mantle Sepolia testnet (chain ID 5003). It defines network-specific settings for gas estimation, transaction handling, and OCR functionality.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_122\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 1200\nFinalityTagEnabled = true\nLinkContractAddress = '0x22bdEdEa0beBdD7CfFC95bA53826E55afFE9DE04'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '1h0m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '120 gwei'\nPriceMin = '1 gwei'\nLimitDefault = 80000000000\nLimitMax = 100000000000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '100 wei'\nBumpPercent = 20\nBumpThreshold = 60\nEIP1559DynamicFees = true\nFeeCapDefault = '120 gwei'\nTipCapDefault = '0'\nTipCapMin = '0'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 200\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nEIP1559FeeCapBufferBlocks = 0\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 1250\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Service Discovery for LOOP Plugins\nDESCRIPTION: Prometheus configuration snippet showing how to add service discovery for monitoring LOOP Plugin metrics. This configuration allows Prometheus to automatically discover and scrape metrics from active plugins.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/plugins/README.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n  job_name: 'chainlink_node'\n  ...\n  http_sd_configs:\n      - url: \"http://127.0.0.1:6688/discovery\"\n        refresh_interval: 30s\n```\n\n----------------------------------------\n\nTITLE: Displaying Chainlink Service Status Check Results\nDESCRIPTION: Status output showing health checks for Chainlink services across EVM, Solana, Mercury and core components. Each line shows a service path and its status (ok/!). Includes checks for blockchain connectivity, transaction management, pipeline operations, and monitoring services.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/web/testdata/body/health.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nok EVM.0\nok EVM.0.BalanceMonitor\nok EVM.0.HeadBroadcaster\nok EVM.0.HeadTracker\n!  EVM.0.HeadTracker.HeadListener\n\tListener is not connected\nok EVM.0.LogBroadcaster\nok EVM.0.Relayer\nok EVM.0.Txm\nok EVM.0.Txm.BlockHistoryEstimator\nok EVM.0.Txm.Broadcaster\nok EVM.0.Txm.Confirmer\nok EVM.0.Txm.Finalizer\nok EVM.0.Txm.WrappedEvmEstimator\nok HeadReporter\nok Heartbeat\nok JobSpawner\nok LLOTransmissionReaper\nok Mailbox.Monitor\nok Mercury.WSRPCPool\nok Mercury.WSRPCPool.CacheSet\nok PipelineORM\nok PipelineRunner\nok PipelineRunner.BridgeCache\nok RetirementReportCache\nok Solana.Bar.Chain\nok Solana.Bar.Chain.BalanceMonitor\nok Solana.Bar.Chain.Txm\nok Solana.Bar.Relayer\nok TelemetryManager\nok WorkflowStore\n```\n\n----------------------------------------\n\nTITLE: Corn Mainnet Configuration\nDESCRIPTION: Configuration for Corn Mainnet (Chain ID: 21000000) with Arbitrum-specific settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_179\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'arbitrum'\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0x7311DED199CC28D80E58e81e8589aa160199FCD2'\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Blast Sepolia Network\nDESCRIPTION: This snippet defines configuration settings for a Chainlink node on the Blast Sepolia network. It includes specific settings for Optimism Bedrock, gas estimation, and OCR configurations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_181\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 200\nFinalityTagEnabled = true\nLinkContractAddress = '0x02c359ebf98fc8BF793F970F9B8302bb373BdF32'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '120 gwei'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '100 wei'\nBumpPercent = 20\nBumpThreshold = 60\nEIP1559DynamicFees = true\nFeeCapDefault = '120 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 300\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 4\nPollInterval = '4s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Head Tracker in TOML\nDESCRIPTION: Settings for the Head Tracker component which monitors blockchain heads and manages the node's view of chain state. Controls history depth, buffer sizes, and finality parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_71\n\nLANGUAGE: toml\nCODE:\n```\n[HeadTracker]\nHistoryDepth = 2000\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring New Chainlink Cluster for CCIP in TOML\nDESCRIPTION: Example of configuring a new Chainlink cluster for CCIP testing. This includes settings for the number of nodes, memory and CPU allocation, database configuration, and node-specific parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/testconfig/README.md#2025-04-21_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.Env.NewCLCluster]\nNoOfNodes = 17\nNodeMemory = '12Gi'\nNodeCPU = '6'\nDBMemory = '10Gi'\nDBCPU = '2'\nDBStorageClass = 'gp3'\nPromPgExporter = true\nDBCapacity = '50Gi'\nIsStateful = true\nDBArgs = ['shared_buffers=2048MB', 'effective_cache_size=4096MB', 'work_mem=64MB']\n\n[CCIP.Env.NewCLCluster.Common]\nName = 'node1'      \nDBImage = 'postgres'\nDBTag = '13.12'\nCommonChainConfigTOML = \"\"\"\n[HeadTracker]\nHistoryDepth = 400\n\n[GasEstimator]\nPriceMax = '200 gwei'\nLimitDefault = 6000000\nFeeCapDefault = '200 gwei'\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Rate Limits\nDESCRIPTION: Rate limiting configuration for global and per-sender requests\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_32\n\nLANGUAGE: toml\nCODE:\n```\n[Capabilities.RateLimit]\nGlobalRPS = 200\nGlobalBurst = 200\nPerSenderRPS = 200\nPerSenderBurst = 200\n```\n\n----------------------------------------\n\nTITLE: Configuring Mercury Feed in JSON\nDESCRIPTION: Example configuration for a Mercury feed, including feed ID, chain ID, contract address, signers, transmitters, and various on-chain and off-chain parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/Mercury.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedId\": \"0x14e044f932bb959cc2aa8dc1ba110c09224e639aae00264c1ffc2a0830904a3c\",\n  \"chainId\": 42161,\n  \"contractAddress\": \"0x14e044f932bb959cc2aa8dc1ba110c09224e639a\",\n  \"configCount\": 1,\n  \"signers\": [\n    \"0x000....01\",\n    \"0x000....02\",\n    \"0x000....03\",\n    \"0x000....04\"\n    ],\n    \"transmitters\": [\n    \"0x000....11\",\n    \"0x000....12\",\n    \"0x000....13\",\n    \"0x000....14\"\n    ],\n    \"offchainConfig\": {\n      \"baseUSDFee\": \"0.1\",\n      \"deltaCertifiedCommitRequest\": \"1s\",\n      \"deltaGrace\": \"0s\",\n      \"deltaInitial\": \"600ms\",\n      \"deltaProgress\": \"2s\",\n      \"deltaResend\": \"10s\",\n      \"deltaRound\": \"250ms\",\n      \"deltaStage\": \"0s\",\n      \"expirationWindow\": \"86400\",\n      \"f\": 3,\n      \"maxDurationObservation\": \"250ms\",\n      \"maxDurationQuery\": \"50ms\",\n      \"maxDurationShouldAcceptAttestedReport\": \"50ms\",\n      \"maxDurationShouldTransmitAcceptedReport\": \"50ms\",\n      \"rMax\": \"25\",\n      \"s\": [\n        4\n      ]\n    },\n  \"offchainConfigVersion\": 30,\n  \"onchainConfig\": {\n    \"max\": \"99999999999999999999999999999\",\n    \"min\": \"1\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Randomness from VRF V2\nDESCRIPTION: Initiates a request for random words from the VRF V2 service using the consumer contract.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ngo run . eoa-request --consumer-address=$CONSUMER --sub-id=$SUB_ID --key-hash=$KEY_HASH --num-words 1 \n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Harmony Mainnet\nDESCRIPTION: This snippet defines configuration settings for a Chainlink node on the Harmony Mainnet. It includes specific gas estimation parameters, transaction settings, and OCR configurations for Harmony.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_182\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = false\nLinkContractAddress = '0x218532a12a389a4a92fC0C5Fb22901D1c19198aA'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '30s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '5 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring CheckInclusionBlocks Setting in TOML\nDESCRIPTION: Specifies the number of recent blocks to check for transaction propagation issues. Used to prevent unnecessary gas price bumping.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_206\n\nLANGUAGE: toml\nCODE:\n```\nCheckInclusionBlocks = 12 # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring CCIP Load Test Parameters\nDESCRIPTION: Configuration file settings for CCIP load tests, including Loki endpoint, message type weights, request frequency, load duration, and destination chains.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/ccip/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n# replace this with the loki endpoint of the crib stack or from running `devspace ingress-hosts`\nLokiEndpoint=https://find.this.in.crib.output\n# MessageTypeWeights corresponds with [data only, token only, message with data]\nMessageTypeWeights=[100,0,0]\n# all enabled destination chains will receive 1 incoming request per RequestFrequency for the duration of LoadDuration\nRequestFrequency=\"10s\"\nLoadDuration=\"1m\"\n# destination chain selectors to send messages to ie [3379446385462418246,909606746561742123, etc.]\nEnabledDestionationChains=[3379446385462418246]\n# Directory where we receive environment configuration from crib\nCribEnvDirectory=\"directory/to/crib/output\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Block Finality Depth in TOML\nDESCRIPTION: Sets the number of blocks required for transaction finality. This setting is not used when finality tags are enabled.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_268\n\nLANGUAGE: toml\nCODE:\n```\nFinalityDepth = 0 # Default\n```\n\n----------------------------------------\n\nTITLE: Mercury Protocol Configuration in TOML\nDESCRIPTION: Settings for Mercury protocol including verbose logging, cache configuration, TLS settings and transmitter options.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_47\n\nLANGUAGE: toml\nCODE:\n```\n[Mercury]\nVerboseLogging = false\n\n[Mercury.Cache]\nLatestReportTTL = \"1s\"\nMaxStaleAge = \"1h\"\nLatestReportDeadline = \"5s\"\n\n[Mercury.TLS]\nCertFile = \"/path/to/client/certs.pem\"\n\n[Mercury.Transmitter]\nProtocol = \"grpc\"\nTransmitQueueMaxSize = 250000\nTransmitTimeout = \"5s\"\nTransmitConcurrency = 100\nReaperFrequency = \"1h\"\nReaperMaxAge = \"48h\"\n```\n\n----------------------------------------\n\nTITLE: Proposing YAML Workflow Job in Go\nDESCRIPTION: This Go code snippet demonstrates how to create a job proposal for a YAML workflow and propose it using the Job Distributor (JD) in Chainlink.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_22\n\nLANGUAGE: go\nCODE:\n```\n// assume it contains above-mentioned workflow spec\nvar workflowSpec string\n\njob := &jobv1.ProposeJobRequest{\n\t\tNodeId: nodeID, // nodeID with which it registered itself in JD\n    Spec: workflowSpec}\n\ntimeout := time.Second * 60\nctx, cancel := context.WithTimeout(context.Background(), timeout)\ndefer cancel()\n_, err := offChainClient.ProposeJob(ctx, jobReq)\nif err != nil {\n  return errors.Wrapf(err, \"failed to propose job %s for node %s\", jobDesc.Flag, jobReq.NodeId)\n}\n```\n\n----------------------------------------\n\nTITLE: Setting ContractConfirmations for OCR on EVM Chains\nDESCRIPTION: Configures the number of block confirmations required before considering OCR contract interactions final. This affects the security and finality assumptions for OCR operations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_236\n\nLANGUAGE: toml\nCODE:\n```\nContractConfirmations = 4 # Default\n```\n\n----------------------------------------\n\nTITLE: Metis Sepolia Network Configuration\nDESCRIPTION: Configuration file for Chainlink node operation on Metis Sepolia network (Chain ID: 59902). Includes Optimism Bedrock-specific settings and custom gas estimation parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_144\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 10\nFinalityTagEnabled = true\nLinkContractAddress = '0x9870D6a0e05F867EAAe696e106741843F7fD116D'\n# ... [truncated for brevity]\n```\n\n----------------------------------------\n\nTITLE: Defining Node Configuration in TOML\nDESCRIPTION: Example of defining a node's base configuration in TOML format, including feature flags and OCR settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/testconfig/README.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[NodeConfig]\nBaseConfigTOML = \"\"\"\n[Feature]\nFeedsManager = true\nLogPoller = true\nUICSAKeys = true\n\n[OCR]\nEnabled = true\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Block History Gas Estimator in TOML\nDESCRIPTION: Settings for the BlockHistory gas estimation strategy which uses historical block data to determine optimal gas prices. Parameters control batch sizes, history depth, and percentile calculations for gas price determination.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_69\n\nLANGUAGE: toml\nCODE:\n```\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 12\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n```\n\n----------------------------------------\n\nTITLE: Setting GasLimit for OCR2 Automation Transactions\nDESCRIPTION: Configures the gas limit for transmit transactions from OCR2 automation jobs. This ensures automation transactions have sufficient gas to complete on-chain.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_249\n\nLANGUAGE: toml\nCODE:\n```\nGasLimit = 5400000 # Default\n```\n\n----------------------------------------\n\nTITLE: Creating a VRF V2 Subscription\nDESCRIPTION: Creates a new VRF V2 subscription using the specified coordinator address.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngo run . eoa-create-sub --coordinator-address=$COORDINATOR\n```\n\n----------------------------------------\n\nTITLE: Defining a New EVM Network in TOML Configuration\nDESCRIPTION: Example of how to define a new EVM network (Arbitrum Sepolia) in a test TOML file, including RPC endpoints, private keys, and various network parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[Network.EVMNetworks.ARBITRUM_SEPOLIA]\nevm_name = \"ARBITRUM_SEPOLIA\"\nevm_urls = [\"rpc ws endpoint\"]\nevm_http_urls = [\"rpc http endpoint\"]\nclient_implementation = \"Ethereum\"\nevm_keys = [\"private keys you want to use\"]\nevm_simulated = false\nevm_chainlink_transaction_limit = 5000\nevm_minimum_confirmations = 1\nevm_gas_estimation_buffer = 10000\nevm_supports_eip1559 = false\nevm_default_gas_limit = 6000000\n```\n\n----------------------------------------\n\nTITLE: Running VRFv2 Soak Test in Bash\nDESCRIPTION: This snippet demonstrates how to run a VRFv2 soak test using environment variables for Loki token and URL.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nexport LOKI_TOKEN=...\nexport LOKI_URL=...\n\ngo test -v -run TestVRFV2Load/vrfv2_soak_test\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Zircuit Sepolia\nDESCRIPTION: TOML configuration for Chainlink nodes on Zircuit Sepolia network (Chain ID 48899). It includes Zircuit-specific settings such as ChainType and gas estimation parameters optimized for Zircuit.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_136\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'zircuit'\nFinalityDepth = 1000\nFinalityTagEnabled = true\nLinkContractAddress = '0xDEE94506570cA186BC1e3516fCf4fd719C312cCD'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '40s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '40m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '30s'\n\n[Transactions.AutoPurge]\nEnabled = true\nThreshold = 90\nMinAttempts = 3\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 wei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '100 wei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 60\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\n```\n\n----------------------------------------\n\nTITLE: Running VRFv2Plus Load Tests\nDESCRIPTION: Commands to configure and execute VRFv2Plus load testing. Requires setting Loki credentials for logging.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/vrfv2plus/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport LOKI_TOKEN=...\nexport LOKI_URL=...\n\ngo test -v -run TestVRFV2PlusLoad/vrfv2plus_soak_test\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR2 Automation Gas Limit in TOML for Chainlink Nodes\nDESCRIPTION: This setting defines the gas limit specifically for OCR2 Automation operations. It determines the maximum amount of gas that can be used for automated transactions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_162\n\nLANGUAGE: toml\nCODE:\n```\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n```\n\n----------------------------------------\n\nTITLE: Configuring CCIP Message Profile Distribution in TOML\nDESCRIPTION: Example configuration for message profile distribution in load testing, showing how to set up different message types with varying frequencies and details including token transfers and data payloads.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/testconfig/README.md#2025-04-21_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.Groups.load.LoadProfile.MsgProfile]\nFrequencies = [4,12,3,1]\n\n[[CCIP.Groups.load.LoadProfile.MsgProfile.MsgDetails]]\nMsgType = 'Token'\nDestGasLimit = 0\nDataLength = 0\nNoOfTokens = 5\nAmountPerToken = 1\n\n[[CCIP.Groups.load.LoadProfile.MsgProfile.MsgDetails]]\nMsgType = 'DataWithToken'\nDestGasLimit = 500000\nDataLength = 5000\nNoOfTokens = 5\nAmountPerToken = 1\n\n[[CCIP.Groups.load.LoadProfile.MsgProfile.MsgDetails]]\nMsgType = 'Data'\nDestGasLimit = 800000\nDataLength = 10000\n\n[[CCIP.Groups.load.LoadProfile.MsgProfile.MsgDetails]]\nMsgType = 'Data'\nDestGasLimit = 2500000\nDataLength = 10000\n```\n\n----------------------------------------\n\nTITLE: Configuring BlockHistorySize Setting in TOML\nDESCRIPTION: Controls the number of past blocks to keep in memory for calculating percentile gas price.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_205\n\nLANGUAGE: toml\nCODE:\n```\nBlockHistorySize = 8 # Default\n```\n\n----------------------------------------\n\nTITLE: Treasure Testnet Configuration\nDESCRIPTION: Complete configuration for Treasure Testnet (Chain ID: 978658) with ZkSync specific settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_176\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'zksync'\nFinalityDepth = 50\nFinalityTagEnabled = true\nLogBackfillBatchSize = 1000\nLogPollInterval = '10s'\nLogKeepBlocksDepth = 100000\n```\n\n----------------------------------------\n\nTITLE: Setting Node Health Threshold for New Blocks in TOML\nDESCRIPTION: Defines the duration threshold before declaring a node unhealthy due to lack of new block headers. Used for monitoring node synchronization health.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_266\n\nLANGUAGE: toml\nCODE:\n```\nNodeNoNewHeadsThreshold = '10s' # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR2 Automation Gas Limit for Chainlink Node\nDESCRIPTION: Configuration for OCR2 Automation gas limit, which controls the maximum amount of gas that can be used for automated contract executions in the OCR2 system.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_82\n\nLANGUAGE: toml\nCODE:\n```\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n```\n\n----------------------------------------\n\nTITLE: Configuring FinalizedBlockPollInterval in TOML for Chainlink Node\nDESCRIPTION: Sets the polling interval for checking new finalized blocks from RPC nodes. This setting affects the pool_rpc_node_highest_finalized_block metric reporting. Setting to 0 disables polling.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_214\n\nLANGUAGE: toml\nCODE:\n```\nFinalizedBlockPollInterval = '5s' # Default\n```\n\n----------------------------------------\n\nTITLE: Linea Mainnet Network Configuration\nDESCRIPTION: Configuration file for Chainlink node operation on Linea Mainnet (Chain ID: 59144). Contains production settings for gas estimation, OCR parameters, and network-specific configurations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_143\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 300\nFinalityTagEnabled = false\nLinkContractAddress = '0xa18152629128738a5c081eb226335FEd4B9C95e9'\n# ... [truncated for brevity]\n```\n\n----------------------------------------\n\nTITLE: Sonic Mainnet Configuration\nDESCRIPTION: Specific configuration for Sonic Mainnet with customized transaction and gas parameters for the network\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_64\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 10\nFinalityTagEnabled = false\nLinkContractAddress = '0x71052BAe71C25C78E37fD12E5ff1101A71d9018F'\nLogBackfillBatchSize = 1000\nLogPollInterval = '1s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 5\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 100\nRPCBlockQueryDelay = 10\n```\n\n----------------------------------------\n\nTITLE: Deploying Grafana Dashboard for VRFv2 Load Tests\nDESCRIPTION: This snippet shows the process of setting up environment variables and running a Go script to deploy a Grafana dashboard for monitoring VRFv2 load tests. It includes variables for Grafana URL, token, data source, and dashboard details.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/vrfv2/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport GRAFANA_URL=...\nexport GRAFANA_TOKEN=...\nexport DATA_SOURCE_NAME=grafanacloud-logs\nexport DASHBOARD_FOLDER=LoadTests\nexport DASHBOARD_NAME=${JobTypeName, for example WaspVRFv2}\n\ngo run dashboard.go\n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow Default Gas Limit in TOML\nDESCRIPTION: This simple configuration snippet sets the default gas limit for workflow operations on the blockchain. This value influences the maximum amount of gas that can be consumed by default blockchain operations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_116\n\nLANGUAGE: toml\nCODE:\n```\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Database URL Configuration\nDESCRIPTION: Setting for the PostgreSQL URI to connect to the primary database. Chainlink nodes require Postgres versions >= 11.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\nURL = \"postgresql://user:pass@localhost:5432/dbname?sslmode=disable\" # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring Keeper Registry in Chainlink Node (TOML)\nDESCRIPTION: Defines Keeper Registry specific settings such as gas overheads, sync intervals, and queue sizes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_40\n\nLANGUAGE: toml\nCODE:\n```\n[Keeper.Registry]\nCheckGasOverhead = 200_000 # Default\nPerformGasOverhead = 300_000 # Default\nSyncInterval = '30m' # Default\nMaxPerformDataSize = 5_000 # Default\nSyncUpkeepQueueSize = 10 # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring General Logging for Chainlink Nodes in TOML\nDESCRIPTION: Defines general logging settings for Chainlink nodes. Controls log level, JSON console output, and Unix timestamp format.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n[Log]\nLevel = 'info' # Default\nJSONConsole = false # Default\nUnixTS = false # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Botanix Testnet Chain Settings in TOML\nDESCRIPTION: Comprehensive configuration for the Botanix Testnet (Chain ID 3636). This includes settings for block depth, logging, transaction management, gas estimation, and OCR parameters specific to this network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_117\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0x7311DED199CC28D80E58e81e8589aa160199FCD2'\nLogBackfillBatchSize = 1000\nLogPollInterval = '15s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 4\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 50\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = false\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Setting Finalized Blocks Health Threshold in TOML\nDESCRIPTION: Configures the duration to wait before declaring a node unhealthy due to no new finalized block headers. Helps monitor finality progression on the blockchain.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_267\n\nLANGUAGE: toml\nCODE:\n```\nNoNewFinalizedHeadsThreshold = '10s' # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Gas Estimation Default Values in TOML\nDESCRIPTION: Configuration settings for gas price and tip cap defaults. These values establish the baseline gas pricing strategy used by the Chainlink node when submitting transactions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_68\n\nLANGUAGE: toml\nCODE:\n```\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n```\n\n----------------------------------------\n\nTITLE: Setting Name for EVM RPC Node Identification\nDESCRIPTION: Sets a unique identifier for an RPC node within a chain configuration. This name is used in logs and metrics to identify the specific node connection.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_243\n\nLANGUAGE: toml\nCODE:\n```\nName = 'foo' # Example\n```\n\n----------------------------------------\n\nTITLE: Enabling Finality Tags in TOML\nDESCRIPTION: Controls whether to use finality tags for determining transaction finality. When enabled, the system uses blockchain-specific finality indicators instead of block depth.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_269\n\nLANGUAGE: toml\nCODE:\n```\nFinalityTagEnabled = true # Default\n```\n\n----------------------------------------\n\nTITLE: BOB Mainnet Network Configuration\nDESCRIPTION: Configuration file for Chainlink node operation on BOB Mainnet (Chain ID: 60808). Contains Optimism Bedrock-specific settings and production-ready parameters for node operation.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_145\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 3150\nFinalityTagEnabled = true\nLinkContractAddress = '0x5aB885CDa7216b163fb6F813DEC1E1532516c833'\n# ... [truncated for brevity]\n```\n\n----------------------------------------\n\nTITLE: Configuring Core Mainnet Chain Settings in TOML\nDESCRIPTION: This snippet defines configuration parameters for the Core Mainnet (chain ID 1116). It includes settings for block processing, gas estimation, transaction handling, and Oracle Contract Reader (OCR) operations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_100\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 27\nFinalityTagEnabled = false\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '30 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Threshold Key Share Configuration\nDESCRIPTION: Key share setting used by the threshold decryption OCR (Off-Chain Reporting) plugin for secure data processing.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\nThresholdKeyShare = \"A-Threshold-Decryption-Key-Share\" # Example\n```\n\n----------------------------------------\n\nTITLE: Combined Bootstrap and Launch-and-Test Command\nDESCRIPTION: Command that combines the bootstrap and launch-and-test steps into a single operation for a more streamlined deployment.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/README.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n./chaincli keeper launch-and-test --bootstrap\n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow Gas Limit for Chainlink Networks\nDESCRIPTION: Sets the default gas limit for workflow execution across multiple Chainlink networks. This configuration is consistent across all networks in the file.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_125\n\nLANGUAGE: toml\nCODE:\n```\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Combined Build and Run for Chainlink Smoke Tests\nDESCRIPTION: A comprehensive script that builds the Chainlink Docker image, tags it, pushes it to the registry, and runs the smoke tests in one command sequence. Includes debug logging.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncd ~/go/src/github.com/chainlink\nenv DOCKER_DEFAULT_PLATFORM=linux/amd64 docker buildx build --platform linux/amd64 -f ./core/chainlink.Dockerfile --build-arg ENVIRONMENT=release --build-arg COMMIT_SHA=$(git rev-parse HEAD) -t smartcontract/chainlink:develop-$(git rev-parse HEAD) .\nexport CHAINLINK_VERSION=develop-$(git rev-parse HEAD)\nexport TEST_LOG_LEVEL=\"debug\"\ndocker tag docker.io/smartcontract/chainlink:$CHAINLINK_VERSION k3d-myregistry.localhost:5001/docker.io/smartcontract/chainlink:$CHAINLINK_VERSION\ndocker push k3d-myregistry.localhost:5001/docker.io/smartcontract/chainlink:$CHAINLINK_VERSION\nexport CHAINLINK_IMAGE=k3d-myregistry.localhost:5001/docker.io/smartcontract/chainlink\nmake test_smoke_simulated args=\"--focus-file=auto_ocr_test.go\"\n```\n\n----------------------------------------\n\nTITLE: Configuring TransactionAlreadyMined Regex Pattern\nDESCRIPTION: Sets a regex pattern to identify when a transaction has already been mined. This helps prevent unnecessary resubmissions of transactions that are already on-chain.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_231\n\nLANGUAGE: toml\nCODE:\n```\nTransactionAlreadyMined = '(: |^)transaction already mined' # Example\n```\n\n----------------------------------------\n\nTITLE: RSK Testnet Configuration TOML\nDESCRIPTION: RSK Testnet (Chain ID 31) specific configuration with adjusted gas prices, confirmation settings, and network parameters for testing environments.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_58\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = false\nLinkContractAddress = '0x8bBbd80981FE76d44854D8DF305e8985c19f0e78'\nLogBackfillBatchSize = 1000\nLogPollInterval = '30s'\n```\n\n----------------------------------------\n\nTITLE: Deploying a full VRF Universe\nDESCRIPTION: Executes a Go script to deploy a complete VRF environment on-chain, including BHS, Registered + Funded Coordinator, and Consumer.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngo run . deploy-universe \\\n--subscription-balance=5000000000000000000 \\\n--uncompressed-pub-key=\"0xf3706e247a7b205c8a8bd25a6e8c4650474da496151371085d45beeead27e568c1a5e8330c7fa718f8a31226efbff6632ed6f8ed470b637aa9be2b948e9dcef6\" \\\n--batch-fulfillment-enabled false \\\n--register-vrf-key-against-address=\"0x23b5613fc04949F4A53d1cc8d6BCCD21ffc38C11\"\n```\n\n----------------------------------------\n\nTITLE: Setting DeltaCJitterOverride for OCR Timing Randomization\nDESCRIPTION: Advanced setting that adds randomness to the DeltaC parameter to prevent synchronization issues across nodes. This jitter range is added to DeltaCOverride values.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_240\n\nLANGUAGE: toml\nCODE:\n```\nDeltaCJitterOverride = \"1h\" # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Request Settings for Chainlink Job Pipeline in TOML\nDESCRIPTION: Sets the default timeout and maximum size for HTTP requests made by 'http' and 'bridge' adapters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n[JobPipeline.HTTPRequest]\nDefaultTimeout = '15s' # Default\nMaxSize = '32768' # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Hedera Mainnet Settings\nDESCRIPTION: TOML configuration for Hedera mainnet including chain parameters, gas settings, and OCR configuration. Specifies network-specific values like LinkContractAddress, transaction settings, and node pool parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_84\n\nLANGUAGE: toml\nCODE:\n```\nBlockBackfillSkip = false\nChainType = 'hedera'\nFinalityDepth = 10\nFinalityTagEnabled = false\nLinkContractAddress = '0x7Ce6bb2Cc2D3Fd45a974Da6a0F29236cb9513a98'\n# ... rest of configuration\n```\n\n----------------------------------------\n\nTITLE: Creating a VRF V2+ Subscription\nDESCRIPTION: This Go command creates a new VRF V2+ subscription using the specified coordinator address.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngo run . eoa-create-sub --coordinator-address=$COORDINATOR\n```\n\n----------------------------------------\n\nTITLE: Resolving Error from Transaction Hash\nDESCRIPTION: Example of resolving an error from a transaction hash using the CCIP revert reason decoder. This method requires NODE_URL and FROM_ADDRESS environment variables to be configured in the .env file to connect to an Ethereum node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/ccip/revert-reason/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n./ccip-revert-reason reason \"0x4e487b710000000000000\"\n2022/12/05 15:18:33 Using config file .env\nDecoded error: Assertion failure\nIf you access an array, bytesN or an array slice at an out-of-bounds or negative index (i.e. x[i] where i >= x.length or i < 0).%\n```\n\n----------------------------------------\n\nTITLE: Setting MaxSuccessfulRuns for Chainlink Job Pipeline in TOML\nDESCRIPTION: Caps the number of completed successful runs per pipeline spec in the database. Setting to zero optimizes performance by avoiding saving successful runs. The cap is not exact and may drift slightly.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\nMaxSuccessfulRuns = 10000 # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring NonceTooLow Regex Pattern for EVM Error Handling\nDESCRIPTION: Sets a regex pattern to identify nonce too low errors from EVM nodes. This helps the Chainlink node properly handle transaction sequence issues.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_220\n\nLANGUAGE: toml\nCODE:\n```\nNonceTooLow = '(: |^)nonce too low' # Example\n```\n\n----------------------------------------\n\nTITLE: Linea Goerli Configuration TOML\nDESCRIPTION: Testnet configuration for Linea Goerli (Chain ID 59140) with specific gas estimation and transaction settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_141\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 15\nFinalityTagEnabled = false\nLogBackfillBatchSize = 1000\nLogPollInterval = '15s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n```\n\n----------------------------------------\n\nTITLE: Configuring TerminallyUnderpriced Regex Pattern for EVM Error Handling\nDESCRIPTION: Sets a regex pattern to identify terminally underpriced transaction errors. This indicates the gas price is too low for the transaction to ever be accepted.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_225\n\nLANGUAGE: toml\nCODE:\n```\nTerminallyUnderpriced = '(: |^)terminally underpriced' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring Solana Node URL in TOML\nDESCRIPTION: Sets the HTTP(S) endpoint URL for connecting to a Solana node. This URL is used for all RPC communications with the specified node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_273\n\nLANGUAGE: toml\nCODE:\n```\nURL = 'http://solana.web' # Example\n```\n\n----------------------------------------\n\nTITLE: Deploying the VRFExternalSubOwnerExample consumer contract\nDESCRIPTION: Deploys the VRFExternalSubOwnerExample contract using a Go script, specifying the coordinator and LINK addresses.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngo run . eoa-consumer-deploy --coordinator-address=$COORDINATOR --link-address=$LINK\n```\n\n----------------------------------------\n\nTITLE: Job Type Gas Limits in TOML\nDESCRIPTION: Custom gas limit configurations for different types of Chainlink jobs including OCR, VRF, and Keeper jobs.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_202\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.GasEstimator.LimitJobType]\nOCR = 100_000\nOCR2 = 100_000\nDR = 100_000\nVRF = 100_000\nFM = 100_000\nKeeper = 100_000\n```\n\n----------------------------------------\n\nTITLE: Configuring CheckInclusionPercentile Setting in TOML\nDESCRIPTION: Controls the percentile threshold for transaction pricing in the inclusion check window to identify connectivity issues.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_207\n\nLANGUAGE: toml\nCODE:\n```\nCheckInclusionPercentile = 90 # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Transaction Auto-Purge Settings in TOML\nDESCRIPTION: Settings for automatically purging stuck transactions, particularly useful for ZK chains.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_192\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.Transactions.AutoPurge]\nEnabled = false\nDetectionApiUrl = 'https://example.api.io'\nThreshold = 5\nMinAttempts = 3\n```\n\n----------------------------------------\n\nTITLE: Configuring Transaction Manager V2 Settings in TOML\nDESCRIPTION: Advanced transaction manager settings including dual broadcast and custom URL configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_193\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.Transactions.TransactionManagerV2]\nEnabled = false\nBlockTime = '10s'\nCustomURL = 'https://example.api.io'\nDualBroadcast = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Metis Mainnet Settings in TOML\nDESCRIPTION: Configuration for Metis Mainnet (1088) with Optimism Bedrock chain type settings. Includes gas estimation parameters, head tracking, and other network-specific configurations for this L2 solution.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_95\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 10\nFinalityTagEnabled = true\nLinkContractAddress = '0xd2FE54D1E5F568eB710ba9d898Bf4bD02C7c0353'\nLogBackfillBatchSize = 1000\nLogPollInterval = '15s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'SuggestedPrice'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '0'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 0\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Running Random Request Test Command\nDESCRIPTION: Command to trigger a random number request to test the VRF setup, specifying consumer address, subscription ID, key hash, and other parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/common/vrf/setup-envs/README.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ngo run . eoa-load-test-request-with-metrics --consumer-address=<contract address> --sub-id=1 --key-hash=<keyhash> --request-confirmations <> --requests 1 --runs 1 --cb-gas-limit 1_000_000 \n```\n\n----------------------------------------\n\nTITLE: Decoding Ethereum Error Code String (Offline Method)\nDESCRIPTION: Example of decoding a specific Ethereum error code string using the CCIP revert reason decoder without requiring a node connection. This command uses the --from-error flag to process a hex error string directly.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/ccip/revert-reason/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./ccip-revert-reason reason --from-error \"0x4e487b710000000000000000000000000000000000000000000000000000000000000032\"\n2022/12/05 15:18:33 Using config file .env\nDecoded error: Assertion failure\nIf you access an array, bytesN or an array slice at an out-of-bounds or negative index (i.e. x[i] where i >= x.length or i < 0).%\n```\n\n----------------------------------------\n\nTITLE: Configuring ReplacementTransactionUnderpriced Regex Pattern\nDESCRIPTION: Sets a regex pattern to identify errors where a replacement transaction has insufficient gas price. This helps the node handle transaction replacement scenarios appropriately.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_222\n\nLANGUAGE: toml\nCODE:\n```\nReplacementTransactionUnderpriced = '(: |^)replacement transaction underpriced' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring L2FeeTooLow Regex Pattern for Layer 2 Error Handling\nDESCRIPTION: Sets a regex pattern to identify L2-specific fee too low errors. This is relevant for Layer 2 networks like Optimism or Arbitrum where fee structures differ from mainnet.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_228\n\nLANGUAGE: toml\nCODE:\n```\nL2FeeTooLow = '(: |^)l2 fee too low' # Example\n```\n\n----------------------------------------\n\nTITLE: Ronin Mainnet Configuration\nDESCRIPTION: Configuration for Ronin mainnet (chain ID 2020) with specific settings for the Ronin sidechain including finality depth and polling intervals.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_106\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = true\nLinkContractAddress = '0x3902228D6A3d2Dc44731fD9d45FeE6a61c722D0b'\n# ... more configuration\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR2 Automation Gas Limit in TOML\nDESCRIPTION: Sets the gas limit for OCR2 Automation to 5,400,000 units.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_188\n\nLANGUAGE: toml\nCODE:\n```\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Starknet Node in TOML\nDESCRIPTION: Defines a Starknet node configuration including name, URL, and optional API key. These settings determine how to connect to a specific Starknet node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_284\n\nLANGUAGE: toml\nCODE:\n```\n[[Starknet.Nodes]]\nName = 'primary' # Example\nURL = 'http://stark.node' # Example\nAPIKey = 'key' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring WeMix Mainnet Settings in TOML\nDESCRIPTION: Configuration for WeMix Mainnet (1111) with WeMix-specific chain type settings. Includes EIP1559 dynamic fees enabled, block history gas mode, and finalized block offsets.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_97\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'wemix'\nFinalityDepth = 10\nFinalityTagEnabled = true\nLinkContractAddress = '0x80f1FcdC96B55e459BF52b998aBBE2c364935d69'\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '30s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 2\nNoNewFinalizedHeadsThreshold = '40s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '100 gwei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\n```\n\n----------------------------------------\n\nTITLE: DA Oracle Configuration in TOML\nDESCRIPTION: Settings for Data Availability Oracle configuration including oracle type and address specifications.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_201\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\nCustomGasPriceCalldata = ''\n```\n\n----------------------------------------\n\nTITLE: Solana MultiNode Configuration\nDESCRIPTION: Settings for Solana multi-node operation including health monitoring, node selection, and synchronization parameters\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_262\n\nLANGUAGE: toml\nCODE:\n```\n[Solana.MultiNode]\nEnabled = false\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'PriorityLevel'\nSyncThreshold = 5\nNodeIsSyncingEnabled = false\nLeaseDuration = '1m0s'\nNewHeadsPollInterval = '10s'\nFinalizedBlockPollInterval = '10s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '10s'\nVerifyChainID = true\nNodeNoNewHeadsThreshold = '10s'\nNoNewFinalizedHeadsThreshold = '10s'\nFinalityDepth = 0\nFinalityTagEnabled = true\nFinalizedBlockOffset = 0\n```\n\n----------------------------------------\n\nTITLE: Optimism Sepolia Configuration\nDESCRIPTION: Optimism Sepolia testnet configuration (Chain ID: 11155420) with Bedrock-specific parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_178\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 200\nFinalityTagEnabled = true\nLinkContractAddress = '0xE4aB69C077896252FAFBD49EFD26B5D171A32410'\n```\n\n----------------------------------------\n\nTITLE: Running CCIP Smoke Tests with Custom Configuration\nDESCRIPTION: Make command to run CCIP smoke tests with custom override TOML and secrets configuration files using local Docker containers.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# mark the testimage as empty for running the tests in local docker containers\nmake test_smoke_ccip testimage=\"\" testname=TestSmokeCCIPForBidirectionalLane override_toml=\"<the toml file with overridden config string>\" secret_toml=\"<the toml file with secrets string>\"\n```\n\n----------------------------------------\n\nTITLE: Funding a VRF V2 Subscription\nDESCRIPTION: Funds the VRF V2 subscription with 10 LINK tokens using the specified coordinator and LINK addresses.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ngo run . eoa-fund-sub --coordinator-address $COORDINATOR --link-address=$LINK  --sub-id=$SUB_ID --amount=10000000000000000000 # 10e18 or 10 LINK\n```\n\n----------------------------------------\n\nTITLE: Configuring InsufficientEth Regex Pattern for EVM Error Handling\nDESCRIPTION: Sets a regex pattern to identify insufficient ETH balance errors. This helps the node handle cases where the sending account lacks funds for the transaction.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_226\n\nLANGUAGE: toml\nCODE:\n```\nInsufficientEth = '(: |^)insufficeint eth' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring L2Full Regex Pattern for Layer 2 Capacity Errors\nDESCRIPTION: Sets a regex pattern to identify when a Layer 2 network is at capacity. This helps handle temporary congestion on L2 networks by recognizing specific error messages.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_230\n\nLANGUAGE: toml\nCODE:\n```\nL2Full = '(: |^)l2 full' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring DeathDeclarationDelay for RPC Health Monitoring\nDESCRIPTION: Sets the minimum duration an RPC must be unhealthy before logging an error message. This reduces noise from temporary network issues while still excluding unhealthy nodes from request handling.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_216\n\nLANGUAGE: toml\nCODE:\n```\nDeathDeclarationDelay = '1m' # Default\n```\n\n----------------------------------------\n\nTITLE: Setting Default Gas Limit for Workflow in TOML\nDESCRIPTION: Defines the default gas limit for Workflow operations as 400,000 units.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_189\n\nLANGUAGE: toml\nCODE:\n```\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Starknet Node URL in TOML\nDESCRIPTION: Sets the base HTTP(S) endpoint URL for connecting to a Starknet node. This URL is used for all RPC communications with the specified node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_286\n\nLANGUAGE: toml\nCODE:\n```\nURL = 'http://stark.node' # Example\n```\n\n----------------------------------------\n\nTITLE: Setting ContractTransmitterTransmitTimeout for OCR Transactions\nDESCRIPTION: Sets the timeout duration for OCR contract transmissions. If a transmission takes longer than this value, it will be considered failed and may be retried.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_237\n\nLANGUAGE: toml\nCODE:\n```\nContractTransmitterTransmitTimeout = '10s' # Default\n```\n\n----------------------------------------\n\nTITLE: Database Backup Configuration in TOML\nDESCRIPTION: Settings for configuring automated database backups in a Chainlink node, including backup mode, directory, and frequency.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[Database.Backup]\nMode = 'none' # Default\nDir = 'test/backup/dir' # Example\nOnVersionUpgrade = true # Default\nFrequency = '1h' # Default\n```\n\n----------------------------------------\n\nTITLE: Database Listener Configuration in TOML\nDESCRIPTION: Advanced settings for the Postgres event listener in a Chainlink node, including reconnection intervals and fallback polling.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[Database.Listener]\nMaxReconnectDuration = '10m' # Default\nMinReconnectInterval = '1m' # Default\nFallbackPollInterval = '30s' # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Telemetry ResourceAttributes in TOML\nDESCRIPTION: Sets global metadata attributes to be included with all telemetry data in Chainlink. ResourceAttributes are key-value pairs that can be configured in the TOML configuration file.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_49\n\nLANGUAGE: toml\nCODE:\n```\n[Telemetry.ResourceAttributes]\nfoo = \"bar\" # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring P2P Network Settings\nDESCRIPTION: P2P networking configuration including buffer sizes and peer identification\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_30\n\nLANGUAGE: toml\nCODE:\n```\n[P2P]\nIncomingMessageBufferSize = 10\nOutgoingMessageBufferSize = 10\nPeerID = '12D3KooWMoejJznyDuEk5aX6GvbjaG12UzeornPCBNzMRqdwrFJw'\nTraceLogging = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Berachain Testnet in TOML\nDESCRIPTION: TOML configuration for a Chainlink node on Berachain Testnet (chain ID 80084). Uses FeeHistory gas estimation mode with EIP1559 dynamic fees and specific Link contract address for the Berachain testnet environment.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_149\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 10\nFinalityTagEnabled = false\nLinkContractAddress = '0x52CEEed7d3f8c6618e4aaD6c6e555320d0D83271'\nLogBackfillBatchSize = 1000\nLogPollInterval = '6s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '5m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 100\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Detailed Chaos Testing Configuration\nDESCRIPTION: Extended TOML configuration for full chaos suite testing, including namespace, dashboard UIDs, experiment intervals, and recovery periods. Configures various parameters for comprehensive chaos testing.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/ccip/README.md#2025-04-21_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.Chaos]\nNamespace = \"crib-ccip-chaos-tests\"\n# RPC, commit, exec dashboards, can be found here: https://grafana.ops.prod.cldev.sh/d/dde396ff-5d22-42fb-9e92-00845c17688c/load-ccipv2-exec-plugin-v2?orgId=1&editview=dashboard_json\nDashboardUIDs = [\"e08d9f98-a39a-4603-8b44-e9a2958330e4\", \"ed3d5742-57cb-440f-b432-65f229c124ec\", \"dde396ff-5d22-42fb-9e92-00845c17688c\"]\nWaitBeforeStart = \"30s\"\n# works only with Load.CCIP.ChaosMode = 2\n# Chaos experiment total duration (chaos + recovery)\nExperimentFullInterval = \"10m\"\n# Chaos time\nExperimentInjectionInterval = \"9m\"\n```\n\n----------------------------------------\n\nTITLE: Running SOAK Tests on Base Sepolia Staging\nDESCRIPTION: Example command for running SOAK performance tests against existing staging environment on Base Sepolia.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/docs/VRF.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run \"on-demand-vrfv2plus-performance-test.yml\" \\\n--ref develop \\\n-f=test_secrets_override_key=<your testsecrets id> \\\n-f test_config_override_path=integration-tests/testconfig/vrfv2plus/overrides/staging/base_sepolia_staging_test_config.toml \\\n-f performanceTestType=\"Soak\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR Contract Deployment in TOML\nDESCRIPTION: Specifies the number of OCR contracts to be deployed for both OCRv1 and OCRv2. This configuration determines how many contracts and corresponding jobs will be created on a node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/testconfig/README.md#2025-04-21_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n# OCRv1\n[OCR.Common]\nnumber_of_contracts=2\n\n- - - - - - - - - - - -\n\n# OCRv2\n[OCR2.Common]\nnumber_of_contracts=2\n```\n\n----------------------------------------\n\nTITLE: Configuring ResultWriteQueueDepth for Chainlink Job Pipeline in TOML\nDESCRIPTION: Controls the buffer size for asynchronous result writes. Subsequent writes are dropped when the buffer is full. Used for performance-critical jobs like OCR.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\nResultWriteQueueDepth = 100 # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow Default Gas Limit in TOML for Chainlink Nodes\nDESCRIPTION: This setting defines the default gas limit for workflow operations. It establishes the standard amount of gas allocated for executing workflow transactions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_163\n\nLANGUAGE: toml\nCODE:\n```\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring TraceLogging in Chainlink Node (TOML)\nDESCRIPTION: Enables trace level logging for the Chainlink node. This setting is disabled by default.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_35\n\nLANGUAGE: toml\nCODE:\n```\nTraceLogging = false # Default\n```\n\n----------------------------------------\n\nTITLE: Listing Chainlink Jobs (Bash)\nDESCRIPTION: Command to list all jobs currently configured on the Chainlink node using the CLI. This provides an overview of the node's active tasks.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nchainlink jobs list\n```\n\n----------------------------------------\n\nTITLE: Pyroscope Auth Token Configuration\nDESCRIPTION: API key setting for authenticating with the Pyroscope monitoring server.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\nAuthToken = \"pyroscope-token\" # Example\n```\n\n----------------------------------------\n\nTITLE: Setting ReaperThreshold for Chainlink Job Pipeline in TOML\nDESCRIPTION: Determines the age limit for job runs. Completed job runs older than this threshold will be automatically purged from the database.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\nReaperThreshold = '24h' # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow Default Gas Limit for Chainlink Node\nDESCRIPTION: Default gas limit setting for Chainlink workflows, which sets the maximum gas that can be used for standard operations if not otherwise specified.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_83\n\nLANGUAGE: toml\nCODE:\n```\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Configuring Base Goerli Testnet Settings in TOML\nDESCRIPTION: Configuration settings for Base Goerli testnet (Chain ID 84531) using Optimism Bedrock. This includes testnet-specific parameters with lower confirmation requirements and adjusted polling intervals suitable for testnet operations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_153\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 200\nFinalityTagEnabled = false\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 1\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '40s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '30s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 wei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '100 wei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 60\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 300\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 6500000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Debug Mercury Lookup Example\nDESCRIPTION: Example command for debugging an eligible log trigger upkeep using mercury lookup v0.3\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/DEBUGGING.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngo run main.go keeper debug 5591498142036749453487419299781783197030971023186134955311257372668222176389 0xdc6d0e547a5aa85fefa5b0f3a37e3493eafb5aeba8b5f3071ce53c9e9a539e9c 0\n```\n\n----------------------------------------\n\nTITLE: Debug Custom Logic Upkeep\nDESCRIPTION: Command to debug a custom logic upkeep with an optional block number parameter\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/DEBUGGING.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngo run main.go keeper debug UPKEEP_ID [BLOCK_NUMBER]\n```\n\n----------------------------------------\n\nTITLE: Database Backup URL Configuration\nDESCRIPTION: Setting for the backup database URL, recommended to be set to a read replica to avoid excessive load on the main database.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\nBackupURL = \"postgresql://user:pass@read-replica.example.com:5432/dbname?sslmode=disable\" # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Workflow Gas Limit in TOML\nDESCRIPTION: Default gas limit setting for workflow operations in the Chainlink node. This value is used when no specific gas limit is provided for a transaction.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_75\n\nLANGUAGE: toml\nCODE:\n```\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Registering Aptos Write Capability in Capabilities Registry Contract\nDESCRIPTION: This code snippet shows how to register the Aptos write capability in the Capabilities Registry contract. It appends the capability configuration to a list of capabilities.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_17\n\nLANGUAGE: go\nCODE:\n```\nif hasFlag(donTopology.Flags, WriteAptosCapability) {\n  capabilities = append(capabilities, keystone_changeset.DONCapabilityWithConfig{\n    Capability: kcr.CapabilitiesRegistryCapability{\n      LabelledName:   \"write_aptos-testnet\",          // <------- Ensure correct name (it might be dynamic and depend on things like chainID)\n      Version:        \"1.0.0\",                        // <------- Ensure correct version\n      CapabilityType: 3, // TARGET\n      ResponseType:   1, // OBSERVATION_IDENTICAL\n    },\n    Config: &capabilitiespb.CapabilityConfig{},\n  })\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Configuration for Reusable Test Environment\nDESCRIPTION: Example JSON configuration for setting up a reusable 3-node Chainlink cluster with mockserver and Geth. This configuration defines networks, containers, and their relationships.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/README.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"networks\": [\n    \"epic\"\n  ],\n  \"mockserver\": {\n    \"container_name\": \"mockserver\",\n    \"external_adapters_mock_urls\": [\n      \"/epico1\"\n    ]\n  },\n  \"geth\": {\n    \"container_name\": \"geth\"\n  },\n  \"nodes\": [\n    {\n      \"container_name\": \"cl-node-0\",\n      \"db_container_name\": \"cl-db-0\"\n    },\n    {\n      \"container_name\": \"cl-node-1\",\n      \"db_container_name\": \"cl-db-1\"\n    },\n    {\n      \"container_name\": \"cl-node-2\",\n      \"db_container_name\": \"cl-db-2\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring a Nodeset with Write-EVM Capability in TOML\nDESCRIPTION: Example TOML configuration for setting up a nodeset that only supports writing to an EVM chain. Includes nodeset type, capabilities specification, node count, and port configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\n[[nodesets]]\n  don_type = \"capabilities\"\n  name = \"capabilities\"\n  capabilities = [\"write-evm\"]\n  nodes = 5\n  override_mode = \"each\"\n  http_port_range_start = 10200\n\n  [nodesets.db]\n    image = \"postgres:12.0\"\n    port = 13100\n\n  [[nodesets.node_specs]]\n\n    [nodesets.node_specs.node]\n      image = \"some-CL-image\"\n      # Rest of the node configuration follows\n\n  # Additional nodes configuration follows\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Berachain Mainnet in TOML\nDESCRIPTION: Partial TOML configuration for a Chainlink node on Berachain Mainnet (chain ID 80094). Shows the beginning of the configuration with Link contract address and basic network settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_150\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 10\nFinalityTagEnabled = false\nLinkContractAddress = '0x52CEEed7d3f8c6618e4aaD6c6e555320d0D83271'\nLogBackfillBatchSize = 1000\nLogPollInterval = '6s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '5m0s'\n\n[Transactions]\n```\n\n----------------------------------------\n\nTITLE: Checking VRF V2 Subscription Balance\nDESCRIPTION: Retrieves the current LINK balance of the specified VRF V2 subscription.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ngo run . sub-balance --coordinator-address $COORDINATOR --sub-id=$SUB_ID\n```\n\n----------------------------------------\n\nTITLE: Configuring Looped Generator for Log Poller Tests in Go\nDESCRIPTION: Sets up a configuration for Log Poller tests using the 'looped' generator type, which iterates over contracts and emits events at random intervals. The configuration includes contract count, events per transaction, execution count, and wait time parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/LOG_POLLER.md#2025-04-21_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\n\tcfg := logpoller.Config{\n\t\tGeneral: &logpoller.General{\n\t\t\tGenerator:      logpoller.GeneratorType_Looped,\n\t\t\tContracts:      2,                              # number of test contracts to deploy\n\t\t\tEventsPerTx:    4,                              # number of events to emit in a single transaction\n\t\t\tUseFinalityTag: false,                          # if set to true then Log Poller will use finality tag returned by chain, when determining last finalised block (won't work on a simulated network, it requires eth2)\n\t\t},\n\t\tLoopedConfig: &logpoller.LoopedConfig{\n\t\t\tContractConfig: logpoller.ContractConfig{\n\t\t\t\tExecutionCount: 100,                        # number of times each contract will be called\n\t\t\t},\n\t\t\tFuzzConfig: logpoller.FuzzConfig{\n\t\t\t\tMinEmitWaitTimeMs: 200,                     # minimum number of milliseconds to wait before emitting events\n\t\t\t\tMaxEmitWaitTimeMs: 500,                     # maximum number of milliseconds to wait before emitting events\n\t\t\t},\n\t\t},\n\t}\n\n    eventsToEmit := []abi.Event{}\n\tfor _, event := range logpoller.EmitterABI.Events {     # modify that function to emit only logs you want\n\t\teventsToEmit = append(eventsToEmit, event)\n\t}\n\n\tcfg.General.EventsToEmit = eventsToEmit\n```\n\n----------------------------------------\n\nTITLE: XLayer Sepolia Configuration\nDESCRIPTION: XLayer-specific configuration for Sepolia testnet with custom transaction handling and gas estimation settings\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_67\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'xlayer'\nFinalityDepth = 500\nFinalityTagEnabled = false\nLinkContractAddress = '0x724593f6FCb0De4E6902d4C55D7C74DaA2AF0E55'\nLogBackfillBatchSize = 1000\nLogPollInterval = '30s'\nLogKeepBlocksDepth = 100000\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP Authentication in TOML\nDESCRIPTION: LDAP authentication configuration including server connection, session management, group mappings and token settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n[WebServer.LDAP]\nServerTLS = true\nSessionTimeout = '15m0s'\nQueryTimeout = '2m0s'\nBaseUserAttr = 'uid'\nBaseDN = 'dc=custom,dc=example,dc=com'\nUsersDN = 'ou=users'\nGroupsDN = 'ou=groups'\nActiveAttribute = ''\nActiveAttributeAllowedValue = ''\nAdminUserGroupCN = 'NodeAdmins'\nEditUserGroupCN = 'NodeEditors'\nRunUserGroupCN = 'NodeRunners'\nReadUserGroupCN = 'NodeReadOnly'\nUserApiTokenEnabled = false\nUserAPITokenDuration = '240h0m0s'\nUpstreamSyncInterval = '0s'\nUpstreamSyncRateLimit = '2m0s'\n```\n\n----------------------------------------\n\nTITLE: Zircuit Mainnet Configuration TOML\nDESCRIPTION: Complete configuration for Zircuit Mainnet (Chain ID 48900) including transaction settings, gas estimation, and network parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_138\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'zircuit'\nFinalityDepth = 1000\nFinalityTagEnabled = true\nLinkContractAddress = '0x5D6d033B4FbD2190D99D930719fAbAcB64d2439a'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '40s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '40m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '30s'\n\n[Transactions.AutoPurge]\nEnabled = true\nThreshold = 90\nMinAttempts = 3\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 wei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '100 wei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 24\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n```\n\n----------------------------------------\n\nTITLE: Debug Conditional Upkeep Example\nDESCRIPTION: Example command for debugging an ineligible conditional upkeep\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/DEBUGGING.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngo run main.go keeper debug 52635131310730056105456985154251306793887717546629785340977553840883117540096\n```\n\n----------------------------------------\n\nTITLE: Storing Multiple Blockhashes Beyond 256 Blocks with BatchBlockhashStore\nDESCRIPTION: This Go command stores multiple blockhashes beyond the 256 block limit using the storeVerifyHeader method of the BatchBlockhashStore contract.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ngo run . batch-bhs-storeVerify -batch-bhs-address $BATCH_BHS_ADDRESS -num-blocks 25 -start-block 10298739\n```\n\n----------------------------------------\n\nTITLE: Mercury Legacy URL Configuration\nDESCRIPTION: Base URL setting for accessing the legacy v0.2 Mercury price feed service.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\nLegacyURL = \"https://example.v1.com\" # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring BatchSize Setting in TOML\nDESCRIPTION: Sets the maximum number of blocks to fetch in one batch for the block history estimator. Defaults to EVM.RPCDefaultBatchSize if set to 0.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_204\n\nLANGUAGE: toml\nCODE:\n```\nBatchSize = 25 # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Message Details in TOML\nDESCRIPTION: Configuration for CCIP message details including message type, gas limits, data length and token amounts.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/testconfig/README.md#2025-04-21_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.Groups.smoke.MsgDetails]\nMsgType = 'DataWithToken' \nDestGasLimit = 100000\nDataLength = 1000\nNoOfTokens = 2\nAmountPerToken = 1\n```\n\n----------------------------------------\n\nTITLE: Configuring CLO Client for Production Environment in YAML\nDESCRIPTION: YAML configuration for the CLO (Chainlink Orchestrator) client in the production environment, specifying email, password, and base URL.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/deployment/keystone/README.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nEMAIL: \"your.name@smartcontract.com\"\nPASSWORD: 'XXXredacted'\nBASE_URL: \"https://gql.feeds-manager.main.prod.cldev.sh\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Blockchain with Anvil in TOML\nDESCRIPTION: TOML configuration for the default blockchain setup using Anvil. Sets a custom block mining speed after the initial deployment is complete to enable faster testing.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_27\n\nLANGUAGE: toml\nCODE:\n```\n[blockchain_a]\n  type = \"anvil\"\n  chain_id = \"1337\"\n\n[custom_anvil_miner]\n  block_speed_seconds = 5\n```\n\n----------------------------------------\n\nTITLE: Scroll Mainnet Chain Configuration\nDESCRIPTION: Partial configuration settings for Chainlink node on Scroll mainnet\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_169\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\n```\n\n----------------------------------------\n\nTITLE: Solidity State Diagram for CCIP Home Contract\nDESCRIPTION: A code comment from CCIPHome.sol explaining the state machine pattern used for CCIP's active/candidate deployment paradigm. The diagram shows possible states ([0,0], [0,1], [1,0], [1,1]) and allowed transitions between Init, Candidate, Active, and ActiveAndCandidate states.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/capabilities/ccip/launcher/README.md#2025-04-21_snippet_0\n\nLANGUAGE: solidity\nCODE:\n```\n/// @dev This contract is a state machine with the following states:\n/// - Init: The initial state of the contract, no config has been set, or all configs have been revoked.\n///   [0, 0]\n///\n/// - Candidate: A new config has been set, but it has not been promoted yet, or all active configs have been revoked.\n///   [0, 1]\n///\n/// - Active: A non-zero config has been promoted and is active, there is no candidate configured.\n///   [1, 0]\n///\n/// - ActiveAndCandidate: A non-zero config has been promoted and is active, and a new config has been set as candidate.\n///   [1, 1]\n///\n/// The following state transitions are allowed:\n/// - Init -> Candidate: setCandidate()\n/// - Candidate -> Active: promoteCandidateAndRevokeActive()\n/// - Candidate -> Candidate: setCandidate()\n/// - Candidate -> Init: revokeCandidate()\n/// - Active -> ActiveAndCandidate: setCandidate()\n/// - Active -> Init: promoteCandidateAndRevokeActive()\n/// - ActiveAndCandidate -> Active: promoteCandidateAndRevokeActive()\n/// - ActiveAndCandidate -> Active: revokeCandidate()\n/// - ActiveAndCandidate -> ActiveAndCandidate: setCandidate()\n///\n/// This means the following calls are not allowed at the following states:\n/// - Init: promoteCandidateAndRevokeActive(), as there is no config to promote.\n/// - Init: revokeCandidate(), as there is no config to revoke\n/// - Active: revokeCandidate(), as there is no candidate to revoke\n/// Note that we explicitly do allow promoteCandidateAndRevokeActive() to be called when there is an active config but\n/// no candidate config. This is the only way to remove the active config. The alternative would be to set some unusable\n/// config as candidate and promote that, but fully clearing it is cleaner.\n///\n///       ┌─────────────┐   setCandidate     ┌─────────────┐\n///       │             ├───────────────────►│             │ setCandidate\n///       │    Init     │   revokeCandidate  │  Candidate  │◄───────────┐\n///       │    [0,0]    │◄───────────────────┤    [0,1]    │────────────┘\n///       │             │  ┌─────────────────┤             │\n///       └─────────────┘  │  promote-       └─────────────┘\n///                  ▲     │  Candidate\n///        promote-  │     │\n///        Candidate │     │\n///                  │     │\n///       ┌──────────┴──┐  │  promote-       ┌─────────────┐\n///       │             │◄─┘  Candidate OR   │  Active &   │ setCandidate\n///       │    Active   │    revokeCandidate │  Candidate  │◄───────────┐\n///       │    [1,0]    │◄───────────────────┤    [1,1]    │────────────┘\n///       │             ├───────────────────►│             │\n///       └─────────────┘    setSecondary    └─────────────┘\n///\n```\n\n----------------------------------------\n\nTITLE: Enabling Starknet Chain in TOML\nDESCRIPTION: Controls whether this Starknet chain configuration is active and should be used by the system. When disabled, the system will not connect to or use this chain.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_278\n\nLANGUAGE: toml\nCODE:\n```\nEnabled = true # Default\n```\n\n----------------------------------------\n\nTITLE: Ink Mainnet Configuration TOML\nDESCRIPTION: Configuration for Ink Mainnet (Chain ID 57073) with Optimism Bedrock chain type settings and network parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_140\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 3000\nFinalityTagEnabled = true\nLinkContractAddress = '0x71052BAe71C25C78E37fD12E5ff1101A71d9018F'\nLogBackfillBatchSize = 1000\nLogPollInterval = '2s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '1h0m0s'\n```\n\n----------------------------------------\n\nTITLE: Running Tests from Local Machine with Kubernetes\nDESCRIPTION: Command to run tests from a local machine that are executed in a Kubernetes environment with custom configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nBASE64_CONFIG_OVERRIDE=$(cat ./testconfig/overrides.toml | base64) go test -v -timeout <max_test_timeout> -p 1 -run '<TestName>' ./<test_directory>\n```\n\n----------------------------------------\n\nTITLE: Setting up Private Key in Environment Configuration\nDESCRIPTION: Shows how to configure the private key in the .env file. The script requires this private key to sign messages on behalf of a user.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/gateway/client/README.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nPRIVATE_KEY=1a2b3c...\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image for Chainlink on Apple Silicon (Bash)\nDESCRIPTION: Command to build a Docker image for Chainlink on Apple Silicon (ARM64) architecture. This uses a specific Dockerfile located in the core directory.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker build . -t chainlink-develop:latest -f ./core/chainlink.Dockerfile\n```\n\n----------------------------------------\n\nTITLE: Configuring MFA Settings in TOML\nDESCRIPTION: Multi-Factor Authentication configuration using WebAuthn.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n[WebServer.MFA]\nRPID = 'localhost'\nRPOrigin = 'http://localhost:6688/'\n```\n\n----------------------------------------\n\nTITLE: Building Chainlink Node Docker Image from Source\nDESCRIPTION: TOML configuration for building a Chainlink node Docker image from the current branch. Specifies the Docker context and Dockerfile location.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_30\n\nLANGUAGE: toml\nCODE:\n```\n[[nodeset.node_specs]]\n  [nodeset.node_specs.node]\n  docker_ctx = \"../../..\"\n  docker_file = \"plugins/chainlink.Dockerfile\"\n```\n\n----------------------------------------\n\nTITLE: Development Security Settings in TOML\nDESCRIPTION: Insecure development configurations for web server, OCR mode, query depth limits and rate limiting.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_45\n\nLANGUAGE: toml\nCODE:\n```\n[Insecure]\nDevWebServer = false\nOCRDevelopmentMode = false\nInfiniteDepthQueries = false\nDisableRateLimiting = false\n```\n\n----------------------------------------\n\nTITLE: CCIP Deployment Configuration with Inline JSON\nDESCRIPTION: Defines CCIP deployment configuration with contract addresses and network details using inline JSON data for Arbitrum and Ethereum Mainnet.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/testconfig/README.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.Deployments]\nData = \"\"\"\n{\n    \"lane_configs\": {\n        \"Arbitrum Mainnet\": {\n            \"is_native_fee_token\": true,\n            \"fee_token\": \"0xf97f4df75117a78c1A5a0DBb814Af92458539FB4\",\n            \"bridge_tokens\": [\"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1\"],\n            \"bridge_tokens_pools\": [\"0x82aF49947D8a07e3bd95BD0d56f35241523fBab1\"],\n            \"arm\": \"0xe06b0e8c4bd455153e8794ad7Ea8Ff5A14B64E4b\",\n            \"router\": \"0x141fa059441E0ca23ce184B6A78bafD2A517DdE8\",\n            \"price_registry\": \"0x13015e4E6f839E1Aa1016DF521ea458ecA20438c\",\n            \"wrapped_native\": \"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1\",\n            \"src_contracts\": {\n                \"Ethereum Mainnet\": {\n                    \"on_ramp\": \"0xCe11020D56e5FDbfE46D9FC3021641FfbBB5AdEE\",\n                    \"deployed_at\": 11111111\n                }\n            },\n            \"dest_contracts\": {\n                \"Ethereum Mainnet\": {\n                    \"off_ramp\": \"0x542ba1902044069330e8c5b36A84EC503863722f\",\n                    \"commit_store\": \"0x060331fEdA35691e54876D957B4F9e3b8Cb47d20\",\n                    \"receiver_dapp\": \"0x1A2A69e3eB1382FE34Bc579AdD5Bae39e31d4A2c\"\n                }\n            }\n        },\n        \"Ethereum Mainnet\": {\n            \"is_native_fee_token\": true,\n            \"fee_token\": \"0x514910771AF9Ca656af840dff83E8264EcF986CA\",\n            \"bridge_tokens\": [\"0x8B63b3DE93431C0f756A493644d128134291fA1b\"],\n            \"bridge_tokens_pools\": [\"0x8B63b3DE93431C0f756A493644d128134291fA1b\"],\n            \"arm\": \"0x8B63b3DE93431C0f756A493644d128134291fA1b\",\n            \"router\": \"0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D\",\n            \"price_registry\": \"0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad\",\n            \"wrapped_native\": \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n            \"src_contracts\": {\n                \"Arbitrum Mainnet\": {\n                    \"on_ramp\": \"0x925228D7B82d883Dde340A55Fe8e6dA56244A22C\",\n                    \"deployed_at\": 11111111\n                }\n            },\n            \"dest_contracts\": {\n                \"Arbitrum Mainnet\": {\n                    \"off_ramp\": \"0xeFC4a18af59398FF23bfe7325F2401aD44286F4d\",\n                    \"commit_store\": \"0x9B2EEd6A1e16cB50Ed4c876D2dD69468B21b7749\",\n                    \"receiver_dapp\": \"0x1A2A69e3eB1382FE34Bc579AdD5Bae39e31d4A2c\"\n                }\n            }\n        }\n    }\n}\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Setting Starknet Request Timeout in TOML\nDESCRIPTION: Configures the timeout duration for RPC client requests to Starknet nodes. Requests that take longer than this duration will be cancelled and considered failed.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_281\n\nLANGUAGE: toml\nCODE:\n```\nRequestTimeout = '10s' # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring NodePool Settings in TOML\nDESCRIPTION: Settings for managing multiple RPC endpoints including node selection and health monitoring.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_213\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.NodePool]\nPollFailureThreshold = 5 # Default\nPollInterval = '10s' # Default\nSelectionMode = 'HighestHead' # Default\nSyncThreshold = 5 # Default\nLeaseDuration = '0s' # Default\nNodeIsSyncingEnabled = false # Default\nFinalizedBlockPollInterval = '5s' # Default\nEnforceRepeatableRead = true # Default\nDeathDeclarationDelay = '1m' # Default\nNewHeadsPollInterval = '0s' # Default\nVerifyChainID = true # Default\n```\n\n----------------------------------------\n\nTITLE: Threshold Service Configuration\nDESCRIPTION: Configuration for the threshold decryption service used by Chainlink nodes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\n[Threshold]\nThresholdKeyShare = \"A-Threshold-Decryption-Key-Share\" # Example\n```\n\n----------------------------------------\n\nTITLE: Setting DatabaseTimeout for OCR Database Operations\nDESCRIPTION: Configures the timeout for OCR-related database operations. If an operation exceeds this duration, it will be aborted to prevent blocking other critical processes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_238\n\nLANGUAGE: toml\nCODE:\n```\nDatabaseTimeout = '10s' # Default\n```\n\n----------------------------------------\n\nTITLE: Starting Multiple Chainlink Nodes for Testing\nDESCRIPTION: Command to initialize a Docker environment with multiple Chainlink nodes for testing. This sets up a private Ethereum network and necessary mock services for integration testing, with the ability to specify the number of nodes to deploy.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/docker/cmd/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngo run main.go start-nodes --node-count=10\n```\n\n----------------------------------------\n\nTITLE: Sonic Testnet Configuration TOML\nDESCRIPTION: Configuration settings for Sonic Testnet (Chain ID 57054) defining transaction parameters, gas estimation, and OCR settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_139\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 10\nFinalityTagEnabled = false\nLinkContractAddress = '0x61876F0429726D7777B46f663e1C9ab75d08Fc56'\nLogBackfillBatchSize = 1000\nLogPollInterval = '1s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 5\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 100\nRPCBlockQueryDelay = 10\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image for Chainlink Tests\nDESCRIPTION: Command to build a custom Docker image for testing Chainlink nodes, specifying the image name and tag.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake build_docker_image image=<your-image-name> tag=<your-tag>\n```\n\n----------------------------------------\n\nTITLE: Setting up Local Host Configuration for k3d Registry\nDESCRIPTION: Adds an entry to the hosts file to map the k3d registry to localhost, which is required for the k3d registry to work properly.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\necho '127.0.0.1 k3d-myregistry.localhost' | sudo tee -a /etc/hosts\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Chainlink Docker Image\nDESCRIPTION: Builds a Docker image of Chainlink, tags it with the current commit SHA, and pushes it to the local k3d registry. This prepares the Chainlink image for use in smoke tests.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncd ~/go/src/github.com/chainlink\nenv DOCKER_DEFAULT_PLATFORM=linux/amd64 docker buildx build --platform linux/amd64 -f ./core/chainlink.Dockerfile --build-arg ENVIRONMENT=release --build-arg COMMIT_SHA=$(git rev-parse HEAD) -t smartcontract/chainlink:develop-$(git rev-parse HEAD) .\nexport CHAINLINK_VERSION=develop-$(git rev-parse HEAD)\ndocker tag docker.io/smartcontract/chainlink:$CHAINLINK_VERSION k3d-myregistry.localhost:5001/docker.io/smartcontract/chainlink:$CHAINLINK_VERSION\ndocker push k3d-myregistry.localhost:5001/docker.io/smartcontract/chainlink:$CHAINLINK_VERSION\nexport CHAINLINK_IMAGE=k3d-myregistry.localhost:5001/docker.io/smartcontract/chainlink\n```\n\n----------------------------------------\n\nTITLE: Configuring Existing Chainlink Cluster for CCIP in TOML\nDESCRIPTION: Example of configuring connection details for an existing Chainlink cluster. This includes the cluster name, number of nodes, and individual node configurations with URLs and credentials.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/testconfig/README.md#2025-04-21_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.Env.ExistingCLCluster]\nName = 'crib-sample'\nNoOfNodes = 5\n\n[[CCIP.Env.ExistingCLCluster.NodeConfigs]]\nURL = 'https://crib-sample-demo-node1.main.stage.cldev.sh/'\nEmail = 'notreal@fakeemail.ch'\nPassword = 'fj293fbBnlQ!f9vNs'\nInternalIP = 'app-node-1'\n\n\n[[CCIP.Env.ExistingCLCluster.NodeConfigs]]\nURL = 'https://crib-sample-demo-node2.main.stage.cldev.sh/'\nEmail = 'notreal@fakeemail.ch'\nPassword = 'fj293fbBnlQ!f9vNs'\nInternalIP = 'app-node-2'\n\n[[CCIP.Env.ExistingCLCluster.NodeConfigs]]\nURL = 'https://crib-sample-demo-node3.main.stage.cldev.sh/'\nEmail = 'notreal@fakeemail.ch'\nPassword = 'fj293fbBnlQ!f9vNs'\nInternalIP = 'app-node-3'\n\n[[CCIP.Env.ExistingCLCluster.NodeConfigs]]\nURL = 'https://crib-ani-demo-node4.main.stage.cldev.sh/'\nEmail = 'notreal@fakeemail.ch'\nPassword = 'fj293fbBnlQ!f9vNs'\nInternalIP = 'app-node-4'\n\n[[CCIP.Env.ExistingCLCluster.NodeConfigs]]\nURL = 'https://crib-sample-demo-node5.main.stage.cldev.sh/'\nEmail = 'notreal@fakeemail.ch'\nPassword = 'fj293fbBnlQ!f9vNs'\nInternalIP = 'app-node-5'\n```\n\n----------------------------------------\n\nTITLE: Running OCR Tests in CI with GitHub Actions\nDESCRIPTION: Command to trigger OCR tests in CI using GitHub Actions. It allows specifying various parameters such as Chainlink version, test IDs, and configuration overrides.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/run-books/OCR.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run \"run-selected-e2e-tests.yml\" \\\n--ref <branch> \\\n-f chainlink_version=\"v<your.version>\" \\\n-f workflow_run_name=\"Any name\" \\\n-f test_ids=\"<test_ID>\" \\\n-f test_secrets_override_key=<your uploaded to GH secrets key> \\\n-f test_config_override_path=<path/to/product/override.toml which should be committed in `integration-tests/testconfig/ocr2/overrides` folder> \\\n-f with_existing_remote_runner_version=<remote-runner version>\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Image in TOML\nDESCRIPTION: Example of proper Docker image configuration in TOML for CRIB execution. Shows both incorrect usage with Dockerfile and correct usage with pre-built image.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n[nodesets.node_specs.node]\n  docker_ctx = \"../../../..\"\n  docker_file = \"plugins/chainlink.Dockerfile\"\n```\n\nLANGUAGE: toml\nCODE:\n```\n[nodesets.node_specs.node]\n  image = \"localhost:5001/chainlink:112b9323-plugins-cron\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Live Price Data Source in TOML\nDESCRIPTION: TOML configuration for setting up a live price data source for the Proof of Reserves workflow. Specifies the feed ID and URL endpoint for real-time reserve data.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_26\n\nLANGUAGE: toml\nCODE:\n```\n[price_provider]\n  # Without the 0x prefix!\n  feed_id = \"018bfe8840700040000000000000000000000000000000000000000000000000\"\n  url = \"api.real-time-reserves.verinumus.io/v1/chainlink/proof-of-reserves/TrueUSD\"\n```\n\n----------------------------------------\n\nTITLE: Setting Starknet OCR2 Cache Poll Period in TOML\nDESCRIPTION: Defines how frequently the system polls for updates to the OCR2 state cache for Starknet. This affects how quickly the system detects changes in the OCR2 state.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_279\n\nLANGUAGE: toml\nCODE:\n```\nOCR2CachePollPeriod = '5s' # Default\n```\n\n----------------------------------------\n\nTITLE: Setting Solana Node Send-Only Mode in TOML\nDESCRIPTION: Controls whether the node is used only for sending transactions but not for reading blockchain state. This is a multinode configuration option for load distribution.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_274\n\nLANGUAGE: toml\nCODE:\n```\nSendOnly = false # Default\n```\n\n----------------------------------------\n\nTITLE: Setting ForwarderAddress for Workflow Contract Interactions\nDESCRIPTION: Configures the address of the keystone forwarder contract on the blockchain. This contract helps manage and route workflow-related transactions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_252\n\nLANGUAGE: toml\nCODE:\n```\nForwarderAddress = '0x2a3e23c6f242F5345320814aC8a1b4E58707D292' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for Treasure Mainnet in TOML\nDESCRIPTION: TOML configuration for a Chainlink node on Treasure Mainnet (chain ID 61166). Specifies ZKSync chain type with settings for gas estimation, transactions, OCR, and other network-specific parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_146\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'zksync'\nFinalityDepth = 50\nFinalityTagEnabled = true\nLogBackfillBatchSize = 1000\nLogPollInterval = '10s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '5m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '25 mwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = false\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 8\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[GasEstimator.DAOracle]\nOracleType = 'zksync'\n\n[HeadTracker]\nHistoryDepth = 250\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: LDAP Server Configuration\nDESCRIPTION: Optional LDAP configuration for Chainlink's web server authentication. Includes server address and credentials for a read-only user.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[WebServer.LDAP]\nServerAddress = 'ldaps://127.0.0.1' # Example\nReadOnlyUserLogin = 'viewer@example.com' # Example\nReadOnlyUserPass = 'password' # Example\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Configuration Path\nDESCRIPTION: Command to set the environment variable that points to a custom test environment configuration file. This allows for test environment reuse.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport TEST_ENV_CONFIG_PATH=test_env.json\n```\n\n----------------------------------------\n\nTITLE: Deploying Keeper Registry\nDESCRIPTION: Command to deploy a new Keeper Registry contract which is the main entry point for OCR2Keepers functionality.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n./chaincli keeper registry deploy\n```\n\n----------------------------------------\n\nTITLE: Setting Order for EVM Node Priority Configuration\nDESCRIPTION: Sets the priority order for node selection in the RPC pool. Affects node selection based on the SelectionMode and acts as a tie-breaker for other selection modes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_247\n\nLANGUAGE: toml\nCODE:\n```\nOrder = 100 # Default\n```\n\n----------------------------------------\n\nTITLE: Running OCR Soak Tests in CI\nDESCRIPTION: Command to trigger OCR soak tests in CI using a specific GitHub Actions workflow. It allows specifying test parameters and configuration overrides.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/run-books/OCR.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run \"on-demand-ocr-soak-test.yml\" \\\n--ref <branch> \\\n-f chainlink_version=\"v<your.version>\" \\\n-f testToRun=\"soak/ocr_test.go:<TestName>\" \\\n-f test_secrets_override_key=<your uploaded to GH secrets key> \\\n-f test_config_override_path=<path/to/product/override.toml which should be committed in `integration-tests/testconfig/ocr2/overrides` folder> \\\n-f slackMemberID=\"YOUR_SLACK_MEMBER_ID\"\n```\n\n----------------------------------------\n\nTITLE: Running Full Development Environment\nDESCRIPTION: Command to start a full environment with two Chainlink nodes, two Postgres databases, and a devnet RPC node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/docker/README.md#2025-04-21_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n./compose up\n```\n\n----------------------------------------\n\nTITLE: Client Configuration in TOML for Redeployment\nDESCRIPTION: TOML configuration snippet for client and subscription settings. This can be commented out to automatically create a new client-subscription pair when contracts are redeployed.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/functions/README.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n# comment both client and sub to automatically create a new pair\nclient_addr = \"0x64a351fbAa61681A5a7e569Cc5A691150c4D73D2\"\nsubscription_id = 23\n```\n\n----------------------------------------\n\nTITLE: Fraxtal Testnet Network Configuration\nDESCRIPTION: Configuration for Fraxtal testnet with standard network parameters and BlockHistory gas estimation mode.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_111\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = true\nLogBackfillBatchSize = 1000\n[...rest of configuration...]\n```\n\n----------------------------------------\n\nTITLE: Configuring Fee History Cache in TOML for Chainlink Nodes\nDESCRIPTION: This setting defines the cache timeout for fee history data. It controls how long fee history information is cached before a refresh is required.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_158\n\nLANGUAGE: toml\nCODE:\n```\n[GasEstimator.FeeHistory]\nCacheTimeout = '4s'\n```\n\n----------------------------------------\n\nTITLE: Setting Starknet Node Name in TOML\nDESCRIPTION: Specifies a unique identifier for a Starknet node within a chain configuration. The name must be unique per chain to properly identify different nodes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_285\n\nLANGUAGE: toml\nCODE:\n```\nName = 'primary' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring ReaperInterval for Chainlink Job Pipeline in TOML\nDESCRIPTION: Controls how often the job pipeline reaper runs to delete completed jobs older than ReaperThreshold. Set to '0' to disable the periodic reaper.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\nReaperInterval = '1h' # Default\n```\n\n----------------------------------------\n\nTITLE: Reading Event Data from Ethereum Transactions in Go\nDESCRIPTION: Function demonstrating how to decode a transaction and extract specific event data from transaction logs using Seth client. It includes transaction execution, event topic matching, and log parsing.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_14\n\nLANGUAGE: go\nCODE:\n```\nfunc (v *EthereumVRFCoordinatorV2_5) CancelSubscription(subID *big.Int, to common.Address) (*seth.DecodedTransaction, *vrf_coordinator_v2_5.VRFCoordinatorV25SubscriptionCanceled, error) {\n // execute a transaction\n  tx, err := v.client.Decode(v.coordinator.CancelSubscription(v.client.NewTXOpts(), subID, to))\n  if err != nil {\n      return nil, nil, err\n  }\n  \n  // define the event you are looking for\n  var cancelEvent *vrf_coordinator_v2_5.VRFCoordinatorV25SubscriptionCanceled\n  // iterate over receipt logs until you find a topic that matches the event you are looking for\n  for _, log := range tx.Receipt.Logs {\n    for _, topic := range log.Topics {\n        if topic.Cmp(vrf_coordinator_v2_5.VRFCoordinatorV25SubscriptionCanceled{}.Topic()) == 0 {\n\t\t\t// use geth wrapper to parse the log to the event struct\n            cancelEvent, err = v.coordinator.ParseSubscriptionCanceled(*log)\n            if err != nil {\n                return nil, nil, fmt.Errorf(\"parsing SubscriptionCanceled log failed, err: %w\", err)\n            }\n\t\t}\n    }\n  }\n  return tx, cancelEvent, err\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Bsquared Testnet Chain Settings in TOML\nDESCRIPTION: This snippet defines configuration parameters for the Bsquared Testnet (chain ID 1123). It includes settings for block processing, gas estimation, transaction handling, and Oracle Contract Reader (OCR) operations, specifically tailored for an Optimism Bedrock-type chain.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_101\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 2000\nFinalityTagEnabled = true\nLinkContractAddress = '0x436a1907D9e6a65E6db73015F08f9C66F6B63E45'\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '1h10m0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'FeeHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 100\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 60\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '4s'\n\n[GasEstimator.DAOracle]\nOracleType = 'opstack'\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Visualizing Chainlink Project Module Dependencies with Mermaid Flowchart\nDESCRIPTION: This mermaid flowchart diagram illustrates the complex dependencies and relationships between various Chainlink project modules and repositories. It includes subgraphs for chains and products, and uses different styles to represent groups and outlines.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/go.md#2025-04-21_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\nflowchart LR\n  subgraph chains\n    chainlink-aptos\n    chainlink-cosmos\n    chainlink-evm\n    chainlink-solana\n    chainlink-starknet/relayer\n  end\n\n  subgraph products\n    chainlink-automation\n    chainlink-data-streams\n    chainlink-feeds\n    chainlink-functions\n    chainlink-vrf\n  end\n\n  classDef group stroke-dasharray:6,fill:none;\n  class chains,products group\n\n\tccip-owner-contracts --> chain-selectors\n\tclick ccip-owner-contracts href \"https://github.com/smartcontractkit/ccip-owner-contracts\"\n\tchain-selectors\n\tclick chain-selectors href \"https://github.com/smartcontractkit/chain-selectors\"\n\tchainlink-automation --> chainlink-common\n\tclick chainlink-automation href \"https://github.com/smartcontractkit/chainlink-automation\"\n\tchainlink-ccip --> chain-selectors\n\tchainlink-ccip --> chainlink-common\n\tchainlink-ccip --> chainlink-protos/rmn/v1.6/go\n\tclick chainlink-ccip href \"https://github.com/smartcontractkit/chainlink-ccip\"\n\tchainlink-ccip/chains/solana --> chainlink-ccip\n\tclick chainlink-ccip/chains/solana href \"https://github.com/smartcontractkit/chainlink-ccip\"\n\tchainlink-common --> grpc-proxy\n\tchainlink-common --> libocr\n\tclick chainlink-common href \"https://github.com/smartcontractkit/chainlink-common\"\n\tchainlink-common/pkg/monitoring\n\tclick chainlink-common/pkg/monitoring href \"https://github.com/smartcontractkit/chainlink-common\"\n\tchainlink-data-streams --> chainlink-common\n\tclick chainlink-data-streams href \"https://github.com/smartcontractkit/chainlink-data-streams\"\n\tchainlink-deployments-framework --> mcms\n\tclick chainlink-deployments-framework href \"https://github.com/smartcontractkit/chainlink-deployments-framework\"\n\tchainlink-evm --> chainlink-framework/capabilities\n\tchainlink-evm --> chainlink-framework/chains\n\tclick chainlink-evm href \"https://github.com/smartcontractkit/chainlink-evm\"\n\tchainlink-feeds --> chainlink-common\n\tclick chainlink-feeds href \"https://github.com/smartcontractkit/chainlink-feeds\"\n\tchainlink-framework/capabilities --> chainlink-common\n\tclick chainlink-framework/capabilities href \"https://github.com/smartcontractkit/chainlink-framework\"\n\tchainlink-framework/chains --> chainlink-framework/multinode\n\tclick chainlink-framework/chains href \"https://github.com/smartcontractkit/chainlink-framework\"\n\tchainlink-framework/multinode --> chainlink-common\n\tclick chainlink-framework/multinode href \"https://github.com/smartcontractkit/chainlink-framework\"\n\tchainlink-protos/job-distributor\n\tclick chainlink-protos/job-distributor href \"https://github.com/smartcontractkit/chainlink-protos\"\n\tchainlink-protos/orchestrator --> wsrpc\n\tclick chainlink-protos/orchestrator href \"https://github.com/smartcontractkit/chainlink-protos\"\n\tchainlink-protos/rmn/v1.6/go\n\tclick chainlink-protos/rmn/v1.6/go href \"https://github.com/smartcontractkit/chainlink-protos\"\n\tchainlink-protos/svr\n\tclick chainlink-protos/svr href \"https://github.com/smartcontractkit/chainlink-protos\"\n\tchainlink-solana --> chainlink-ccip/chains/solana\n\tchainlink-solana --> chainlink-common/pkg/monitoring\n\tchainlink-solana --> chainlink-framework/multinode\n\tclick chainlink-solana href \"https://github.com/smartcontractkit/chainlink-solana\"\n\tchainlink-testing-framework/framework\n\tclick chainlink-testing-framework/framework href \"https://github.com/smartcontractkit/chainlink-testing-framework\"\n\tchainlink-testing-framework/havoc --> chainlink-testing-framework/lib/grafana\n\tclick chainlink-testing-framework/havoc href \"https://github.com/smartcontractkit/chainlink-testing-framework\"\n\tchainlink-testing-framework/lib --> chainlink-testing-framework/parrot\n\tchainlink-testing-framework/lib --> chainlink-testing-framework/seth\n\tclick chainlink-testing-framework/lib href \"https://github.com/smartcontractkit/chainlink-testing-framework\"\n\tchainlink-testing-framework/lib/grafana\n\tclick chainlink-testing-framework/lib/grafana href \"https://github.com/smartcontractkit/chainlink-testing-framework\"\n\tchainlink-testing-framework/parrot\n\tclick chainlink-testing-framework/parrot href \"https://github.com/smartcontractkit/chainlink-testing-framework\"\n\tchainlink-testing-framework/sentinel --> chainlink-testing-framework/lib\n\tclick chainlink-testing-framework/sentinel href \"https://github.com/smartcontractkit/chainlink-testing-framework\"\n\tchainlink-testing-framework/seth\n\tclick chainlink-testing-framework/seth href \"https://github.com/smartcontractkit/chainlink-testing-framework\"\n\tchainlink-testing-framework/wasp --> chainlink-testing-framework/lib\n\tchainlink-testing-framework/wasp --> chainlink-testing-framework/lib/grafana\n\tclick chainlink-testing-framework/wasp href \"https://github.com/smartcontractkit/chainlink-testing-framework\"\n\tchainlink/core/scripts --> chainlink/deployment\n\tclick chainlink/core/scripts href \"https://github.com/smartcontractkit/chainlink\"\n\tchainlink/deployment --> ccip-owner-contracts\n\tchainlink/deployment --> chainlink-deployments-framework\n\tchainlink/deployment --> chainlink-protos/job-distributor\n\tchainlink/deployment --> chainlink-testing-framework/lib\n\tchainlink/deployment --> chainlink/v2\n\tclick chainlink/deployment href \"https://github.com/smartcontractkit/chainlink\"\n\tchainlink/integration-tests --> chainlink-testing-framework/havoc\n\tchainlink/integration-tests --> chainlink-testing-framework/sentinel\n\tchainlink/integration-tests --> chainlink-testing-framework/wasp\n\tchainlink/integration-tests --> chainlink/deployment\n\tclick chainlink/integration-tests href \"https://github.com/smartcontractkit/chainlink\"\n\tchainlink/load-tests --> chainlink/integration-tests\n\tclick chainlink/load-tests href \"https://github.com/smartcontractkit/chainlink\"\n\tchainlink/system-tests/lib --> chainlink/deployment\n\tclick chainlink/system-tests/lib href \"https://github.com/smartcontractkit/chainlink\"\n\tchainlink/system-tests/tests --> chainlink-testing-framework/wasp\n\tchainlink/system-tests/tests --> chainlink/system-tests/lib\n\tclick chainlink/system-tests/tests href \"https://github.com/smartcontractkit/chainlink\"\n\tchainlink/v2 --> chainlink-automation\n\tchainlink/v2 --> chainlink-data-streams\n\tchainlink/v2 --> chainlink-evm\n\tchainlink/v2 --> chainlink-feeds\n\tchainlink/v2 --> chainlink-protos/orchestrator\n\tchainlink/v2 --> chainlink-protos/svr\n\tchainlink/v2 --> chainlink-solana\n\tchainlink/v2 --> tdh2/go/ocr2/decryptionplugin\n\tclick chainlink/v2 href \"https://github.com/smartcontractkit/chainlink\"\n\tgrpc-proxy\n\tclick grpc-proxy href \"https://github.com/smartcontractkit/grpc-proxy\"\n\tlibocr\n\tclick libocr href \"https://github.com/smartcontractkit/libocr\"\n\tmcms --> chainlink-ccip/chains/solana\n\tmcms --> chainlink-testing-framework/framework\n\tclick mcms href \"https://github.com/smartcontractkit/mcms\"\n\ttdh2/go/ocr2/decryptionplugin --> libocr\n\ttdh2/go/ocr2/decryptionplugin --> tdh2/go/tdh2\n\tclick tdh2/go/ocr2/decryptionplugin href \"https://github.com/smartcontractkit/tdh2\"\n\ttdh2/go/tdh2\n\tclick tdh2/go/tdh2 href \"https://github.com/smartcontractkit/tdh2\"\n\twsrpc\n\tclick wsrpc href \"https://github.com/smartcontractkit/wsrpc\"\n\n\tsubgraph chainlink-repo[chainlink]\n\t\t chainlink/core/scripts\n\t\t chainlink/deployment\n\t\t chainlink/integration-tests\n\t\t chainlink/load-tests\n\t\t chainlink/system-tests/lib\n\t\t chainlink/system-tests/tests\n\t\t chainlink/v2\n\tend\n\tclick chainlink-repo href \"https://github.com/smartcontractkit/chainlink\"\n\n\tsubgraph chainlink-ccip-repo[chainlink-ccip]\n\t\t chainlink-ccip\n\t\t chainlink-ccip/chains/solana\n\tend\n\tclick chainlink-ccip-repo href \"https://github.com/smartcontractkit/chainlink-ccip\"\n\n\tsubgraph chainlink-common-repo[chainlink-common]\n\t\t chainlink-common\n\t\t chainlink-common/pkg/monitoring\n\tend\n\tclick chainlink-common-repo href \"https://github.com/smartcontractkit/chainlink-common\"\n\n\tsubgraph chainlink-framework-repo[chainlink-framework]\n\t\t chainlink-framework/capabilities\n\t\t chainlink-framework/chains\n\t\t chainlink-framework/multinode\n\tend\n\tclick chainlink-framework-repo href \"https://github.com/smartcontractkit/chainlink-framework\"\n\n\tsubgraph chainlink-protos-repo[chainlink-protos]\n\t\t chainlink-protos/job-distributor\n\t\t chainlink-protos/orchestrator\n\t\t chainlink-protos/rmn/v1.6/go\n\t\t chainlink-protos/svr\n\tend\n\tclick chainlink-protos-repo href \"https://github.com/smartcontractkit/chainlink-protos\"\n\n\tsubgraph chainlink-testing-framework-repo[chainlink-testing-framework]\n\t\t chainlink-testing-framework/framework\n\t\t chainlink-testing-framework/havoc\n\t\t chainlink-testing-framework/lib\n\t\t chainlink-testing-framework/lib/grafana\n\t\t chainlink-testing-framework/parrot\n\t\t chainlink-testing-framework/sentinel\n\t\t chainlink-testing-framework/seth\n\t\t chainlink-testing-framework/wasp\n\tend\n\tclick chainlink-testing-framework-repo href \"https://github.com/smartcontractkit/chainlink-testing-framework\"\n\n\tsubgraph tdh2-repo[tdh2]\n\t\t tdh2/go/ocr2/decryptionplugin\n\t\t tdh2/go/tdh2\n\tend\n\tclick tdh2-repo href \"https://github.com/smartcontractkit/tdh2\"\n\n\tclassDef outline stroke-dasharray:6,fill:none;\n\tclass chainlink-repo,chainlink-ccip-repo,chainlink-common-repo,chainlink-framework-repo,chainlink-protos-repo,chainlink-testing-framework-repo,tdh2-repo outline\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Make Command in Kubernetes\nDESCRIPTION: Example of using make commands to run Kubernetes-based tests with configuration overrides.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nBASE64_CONFIG_OVERRIDE=$(cat ./testconfig/overrides.toml | base64) make test_chaos_ocr/make test_soak_ocr2/test_node_migrations\n```\n\n----------------------------------------\n\nTITLE: Setting up environment variables for VRF V2+ deployment\nDESCRIPTION: This snippet sets up the necessary environment variables for deploying and interacting with the VRF V2+ contract. It includes the Ethereum URL, chain ID, account key, and various contract addresses.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nexport ETH_URL=<YOUR ETH URL>\nexport ETH_CHAIN_ID=<YOUR CHAIN ID>\nexport ACCOUNT_KEY=<YOUR PRIVATE KEY>\nexport LINK=<LINK ADDRESS>\nexport LINK_ETH_FEED=<ADDRESS OFF LINK/ETH FEED>\nexport COORDINATOR=<COORDINATOR ADDRESS>\nexport KEY_HASH=<KEY HASH>\nexport ORACLE_ADDRESS=<YOUR ORACLE NODE ADDRESS>\nexport PUB_KEY=<YOUR UNCOMPRESSED PUBLIC KEY>\n```\n\n----------------------------------------\n\nTITLE: Running OCR Tests in Docker\nDESCRIPTION: Command to run OCR tests in a Docker environment using Go. This command allows running different test suites by specifying the test file path.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/run-books/OCR.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo test -v -timeout <max_test_timeout> -p 1 <./path/to/_test.go file>\n```\n\n----------------------------------------\n\nTITLE: Running Single Node Development Environment\nDESCRIPTION: Command to start a development environment with one Chainlink node, a Postgres database, and a devnet RPC node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/docker/README.md#2025-04-21_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n./compose dev\n```\n\n----------------------------------------\n\nTITLE: Mercury URL Configuration\nDESCRIPTION: Base URL setting for accessing the current version of the Mercury price feed service.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\nURL = \"https://example.com\" # Example\n```\n\n----------------------------------------\n\nTITLE: Kroma Sepolia Network Configuration\nDESCRIPTION: Kroma Sepolia testnet configuration with chain-specific settings including higher finality depth and EIP1559 dynamic fees enabled.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_109\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'kroma'\nFinalityDepth = 400\nFinalityTagEnabled = true\nLinkContractAddress = '0xa75cCA5b404ec6F4BB6EC4853D177FE7057085c8'\n[...rest of configuration...]\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR Contract Reuse in TOML\nDESCRIPTION: Demonstrates how to reuse existing OCR contracts by specifying LINK token address, OCR contract addresses, and optional usage/configuration settings. Supports both OCRv1 and OCRv2.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/testconfig/README.md#2025-04-21_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# For OCRv1\n[OCR.Contracts]\nlink_token = \"0x88d1239894D9582f5849E5b5a964da9e5730f1E6\"\noffchain_aggregators = [\"0xc1ce3815d6e7f3705265c2577F1342344752A5Eb\"]\n\n# If [OCR.Contracts.Settings.<OCR aggregator address>] is not present, we assume it should be used and configured\n\n- - - - - - - - - - - - \n\n# For OCRv2\n[OCR2.Contracts]\nlink_token = \"0x88d1239894D9582f5849E5b5a964da9e5730f1E6\"\noffchain_aggregators = [\"0xc1ce3815d6e7f3705265c2577F1342344752A5Eb\"]\n\n# notice that this address needs to match the one in offchain_aggregators\n[OCR2.Contracts.Settings.\"0xc1ce3815d6e7f3705265c2577F1342344752A5Eb\"]\nuse = false # Default: true. Reuse existing OCR contracts?\nconfigure = false # Default: true. Configure existing OCR contracts?\n```\n\n----------------------------------------\n\nTITLE: Starting Chainlink Test Environment with CLI\nDESCRIPTION: Commands to set up environment variables and start a Chainlink cluster environment using the test_env.go CLI tool.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/docker/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Set required envs\nexport CHAINLINK_IMAGE=\"<chainlink_node_docker_image_path>\"\nexport CHAINLINK_VERSION=\"<chainlink_node_docker_image_version>\" \n# Stream logs to Loki\nexport LOKI_TOKEN=...\nexport LOKI_URL=https://${loki_host}/loki/api/v1/push\n\ncd ./integration-tests/docker/cmd\n\ngo run test_env.go start-env cl-cluster\n```\n\n----------------------------------------\n\nTITLE: Setting FromAddress for Workflow Transaction Source\nDESCRIPTION: Configures the Ethereum address used as the sender for workflow-related transactions. Must be a key controlled by the Chainlink node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_251\n\nLANGUAGE: toml\nCODE:\n```\nFromAddress = '0x2a3e23c6f242F5345320814aC8a1b4E58707D292' # Example\n```\n\n----------------------------------------\n\nTITLE: Viewing Compose Script Help Commands\nDESCRIPTION: Shows how to navigate to the docker directory and display the help menu for the compose script.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/docker/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncd tools/docker\n./compose help\n```\n\n----------------------------------------\n\nTITLE: Running a Single Test with Configuration Overrides\nDESCRIPTION: Command to run a single specific test with a timeout setting and configuration overrides from an overrides.toml file.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nBASE64_CONFIG_OVERRIDE=$(cat ./testconfig/overrides.toml | base64) go test -v -timeout 15m -run <\"TestNameToRun\"> ./<directory_name_with_tests>\n```\n\n----------------------------------------\n\nTITLE: Running VRF V2 Setup Script\nDESCRIPTION: Command to execute the VRF V2 setup script with various configuration options including node URLs, credential files, key quantities, funding amounts, and operational parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/common/vrf/setup-envs/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngo run . \\\n--vrf-version=\"v2\" \\\n--vrf-primary-node-url=http://localhost:6610 \\\n--vrf-primary-creds-file <path_to_file_with_creds> \\\n--vrf-backup-node-url=http://localhost:6611 \\\n--vrf-bk-creds-file <path_to_file_with_creds> \\\n--bhs-node-url=http://localhost:6612 \\\n--bhs-creds-file <path_to_file_with_creds> \\\n--bhs-backup-node-url=http://localhost:6613 \\\n--bhs-bk-creds-file <path_to_file_with_creds> \\\n--bhf-node-url=http://localhost:6614 \\\n--bhf-creds-file <path_to_file_with_creds> \\\n--num-eth-keys=1 \\\n--num-vrf-keys=1 \\\n--num-bhs-sending-keys= 1 \\\n--num-bhf-sending-keys=1 \\\n--sending-key-funding-amount=\"1e17\" \\\n--deploy-contracts-and-create-jobs=\"true\" \\\n--subscription-balance=\"1e19\" \\\n--subscription-balance-native=\"1e18\" \\\n--batch-fulfillment-enabled=\"true\" \\\n--batch-fulfillment-gas-multiplier=1.1 \\\n--estimate-gas-multiplier=1.1 \\\n--poll-period=\"5s\" \\\n--request-timeout=\"30m0s\" \\\n--reverts-pipeline-enabled=\"true\" \\\n--min-confs=3 \\\n--simulation-block=\"latest\" \\\n--bhs-job-wait-blocks=30 \\\n--bhs-job-look-back-blocks=200 \\\n--bhs-job-poll-period=\"1s\" \\\n--bhs-job-run-timeout=\"1m\" \\\n--register-vrf-key-against-address=<vrf key will be registered against this address \nin order to call oracleWithdraw from this address> \\\n--deploy-vrfv2-owner=\"true\" \\\n--use-test-coordinator=\"true\"\n```\n\n----------------------------------------\n\nTITLE: Setting Seth Tracing Level in TOML Configuration\nDESCRIPTION: Example configuration for enabling transaction tracing in Seth, set to trace all transactions regardless of whether they are reverted or not.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[Seth]\ntracing_level = \"all\" # trace all transactions regardless of whether they are reverted or not\n```\n\n----------------------------------------\n\nTITLE: OTEL Tracing Configuration in TOML\nDESCRIPTION: OpenTelemetry tracing settings including collector target, node identification, sampling and TLS configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_46\n\nLANGUAGE: toml\nCODE:\n```\n[Tracing]\nEnabled = false\nCollectorTarget = 'localhost:4317'\nNodeID = 'NodeID'\nSamplingRatio = 1.0\nMode = 'tls'\nTLSCertPath = '/path/to/cert.pem'\n```\n\n----------------------------------------\n\nTITLE: Configuring k3d Registry and Cluster for Local Testing\nDESCRIPTION: Sets up a local Docker registry and Kubernetes cluster using k3d. This configuration allows for local image hosting and Kubernetes-based testing without external dependencies.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nk3d registry create myregistry.localhost --port 5001\nk3d cluster create --registry-use k3d-myregistry.localhost:5001\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node Image in TOML\nDESCRIPTION: TOML configuration for specifying whether to use an existing Docker image or build one from the current branch for Chainlink node testing.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[nodesets.node_specs.node]\n  docker_ctx = \"../../../..\"\n  docker_file = \"plugins/chainlink.Dockerfile\"\n```\n\nLANGUAGE: toml\nCODE:\n```\n[nodesets.node_specs.node]\n  image = \"my-docker-image:my-tag\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Chainlink Node for BOB Testnet\nDESCRIPTION: Partial TOML configuration for a Chainlink node on the BOB testnet. It sets chain type to optimismBedrock and defines some basic network parameters including the LINK contract address.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_174\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 3150\nFinalityTagEnabled = true\nLinkContractAddress = '0xcd2AfB2933391E35e8682cbaaF75d9CA7339b183'\nLogBackfillBatchSize = 1000\nLogPollInterval = '3s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.00001 link'\n```\n\n----------------------------------------\n\nTITLE: Telemetry Configuration in TOML\nDESCRIPTION: OpenTelemetry settings for metrics, traces and logs collection including endpoint configuration and processing options.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_48\n\nLANGUAGE: toml\nCODE:\n```\n[Telemetry]\nEnabled = false\nEndpoint = 'example.com/collector'\nCACertFile = 'cert-file'\nInsecureConnection = false\nTraceSampleRatio = 0.01\nEmitterBatchProcessor = true\nEmitterExportTimeout = '1s'\nChipIngressEndpoint = ''\n```\n\n----------------------------------------\n\nTITLE: Running OCRv2 Basic Test Example\nDESCRIPTION: Specific example of running the OCRv2 Basic test with a 15-minute timeout and configuration overrides.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nBASE64_CONFIG_OVERRIDE=$(cat ./testconfig/overrides.toml | base64) go test -v -timeout 15m -run \"TestOCRv2Basic\" ./smoke\n```\n\n----------------------------------------\n\nTITLE: Deploying Grafana Dashboard for Monitoring\nDESCRIPTION: Script to deploy a Grafana dashboard for monitoring load test results. Sets up the connection to Grafana and configures the dashboard location and data source.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/functions/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nexport GRAFANA_URL=...\nexport GRAFANA_TOKEN=...\nexport DATA_SOURCE_NAME=...\nexport DASHBOARD_FOLDER=LoadTests\nexport DASHBOARD_NAME=FunctionsV1\n\ngo run dashboard.go\n```\n\n----------------------------------------\n\nTITLE: Visualizing Configuration Flow in Chainlink Node with Mermaid\nDESCRIPTION: This Mermaid flowchart depicts the configuration process for a Chainlink node, including the initialization of various config objects and the flow between different packages. It shows the decision points for TOML configuration and the relationships between different config types.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/services/chainlink/CONFIG.md#2025-04-21_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nflowchart LR\n\n    subgraph cmd\n    \n        subgraph cmd/app\n            NewApp([func NewApp])     \n        end\n    \n        cli>$ chainlink node start]\n        \n        RunNode([func Client.RunNode])\n        \n        NewApplication([func NewApplication])\n            \n        cli == 1. Before ==> NewApp\n        cli == 2. Action ==> RunNode\n        RunNode ==> NewApplication\n    \n    end\n    \n    toml{{TOML?}}    \n    \n    subgraph services/chainlink\n        \n        Config[[Config]]\n        \n        NewTOMLGeneralConfig([func NewTOMLGeneralConfig])\n        \n        generalConfig --o Config\n        \n        NewTOMLGeneralConfig --> generalConfig\n       \n    end\n    \n    subgraph config\n    \n        BasicConfig(BasicConfig)\n        \n        NewGeneralConfig([func NewGeneralConfig])\n        \n        generalConfig2[generalConfig]\n        \n        NewGeneralConfig --> generalConfig2\n    \n        subgraph config/v2\n        \n            Core[[Core]]\n        \n        end\n    \n    end\n    \n    Config --o Core\n    \n    NewApp ==> toml\n    toml == yes ==> NewTOMLGeneralConfig\n    toml == no ==> NewGeneralConfig\n    generalConfig -.-> BasicConfig\n    generalConfig2 -.-> BasicConfig\n    \n    \n    subgraph chains/evm\n    \n        LoadChainSet([func LoadChainSet])\n        tomlChain{{TOML?}}\n        LoadChainSet ==> tomlChain\n    \n        subgraph chains/evm/config  \n        \n            NewChainScopedConfig([func NewChainScopedConfig])\n        \n            ChainScopedOnlyConfig(ChainScopedOnlyConfig)\n            \n            chainScopedConfig\n            \n            NewChainScopedConfig --> chainScopedConfig\n            \n            chainScopedConfig -.-> ChainScopedOnlyConfig\n            \n            subgraph chains/evm/config/v2 \n            \n                NewTOMLChainScopedConfig([func NewTOMLChainScopedConfig])\n            \n                ChainScoped\n                \n                NewTOMLChainScopedConfig --> ChainScoped\n                \n                ChainScoped -.-> ChainScopedOnlyConfig\n                \n                EVMConfig[[EVMConfig]]\n                \n            end\n        \n        end\n        \n        tomlChain == no ==>NewChainScopedConfig\n        tomlChain == yes ==>NewTOMLChainScopedConfig\n        Config --o EVMConfig\n    end\n    \n    chainScopedConfig --o generalConfig\n    ChainScoped --o generalConfig2 \n    \n    NewApplication ==> LoadChainSet\n```\n\n----------------------------------------\n\nTITLE: Running VRF Tests Locally\nDESCRIPTION: Command for running VRF tests in a local development environment. Sets the test log level and uses base64-encoded configuration override to customize test parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/run-books/VRF.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd integration-tests\nTEST_LOG_LEVEL=debug \\\nBASE64_CONFIG_OVERRIDE=$(cat <full path to chain's test toml config> | base64) \\\ngo test -v -timeout 15m -run \"<regex for tests to run>\" ./smoke\n```\n\n----------------------------------------\n\nTITLE: Network Configuration with Fallback Values\nDESCRIPTION: TOML configuration example showing network setup with fallback gas values\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[[Seth.networks]]\nname = \"my_network\"\ntransaction_timeout = \"10m\"\ntransfer_gas_fee = 21_000\neip_1559_dynamic_fees = true\ngas_fee_cap = 122487901046\ngas_tip_cap = 1000000000\ngas_price_estimation_enabled = true\ngas_price_estimation_blocks = 100\ngas_price_estimation_tx_priority = \"standard\"\n```\n\n----------------------------------------\n\nTITLE: Cloning Seth Repository\nDESCRIPTION: Command to clone the Seth testing framework repository from GitHub\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/smartcontractkit/chainlink-testing-framework/tree/main/seth\n```\n\n----------------------------------------\n\nTITLE: Creating ETH and VRF Keys without Deployment\nDESCRIPTION: Command to create ETH and VRF keys on Chainlink nodes without deploying contracts or creating jobs, which is useful for initial setup before the full deployment.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/common/vrf/setup-envs/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngo run . \\\n--vrf-version=\"v2\" \\\n--vrf-primary-node-url=<url> \\\n--vrf-primary-creds-file <path_to_file_with_creds> \\\n--bhs-node-url=<url> \\\n--bhs-creds-file <path_to_file_with_creds> \\\n--num-eth-keys=3 \\\n--num-vrf-keys=1 \\\n--sending-key-funding-amount=\"1e17\" \\\n--deploy-contracts-and-create-jobs=\"false\" \n```\n\n----------------------------------------\n\nTITLE: Configuring Bech32Prefix for Cosmos Address Formatting\nDESCRIPTION: Sets the human-readable prefix for addresses on the Cosmos chain. This follows the Bech32 specification and varies by Cosmos-based blockchain (e.g., 'cosmos', 'osmo', 'wasm').\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_257\n\nLANGUAGE: toml\nCODE:\n```\nBech32Prefix = 'wasm' # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Seth Network for Arbitrum Sepolia\nDESCRIPTION: Example of how to define Seth-specific network configuration for Arbitrum Sepolia, including gas settings, transaction timeout, and other network-specific parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[[Seth.networks]]\nname = \"ARBITRUM_SEPOLIA\"\ntransaction_timeout = \"10m\"\ntransfer_gas_fee = 50_000\n# gas_limit = 15_000_000\n# legacy transactions fallback gas price\ngas_price = 200_000_000\n# EIP-1559 transactions fallback gas tip cap and fee cap\neip_1559_dynamic_fees = true\ngas_fee_cap = 400_000_000\ngas_tip_cap = 200_000_000\n# if set to true we will estimate gas for every transaction\ngas_price_estimation_enabled = true\n# how many last blocks to use, when estimating gas for a transaction\ngas_price_estimation_blocks = 100\n# priority of the transaction, can be \"fast\", \"standard\" or \"slow\" (the higher the priority, the higher adjustment factor will be used for gas estimation) [default: \"standard\"]\ngas_price_estimation_tx_priority = \"standard\"\n```\n\n----------------------------------------\n\nTITLE: Adding k3d Registry to Local Hosts File\nDESCRIPTION: Adds an entry to the hosts file to map the k3d registry hostname to localhost. This is required for the local registry to work correctly with the k3d cluster.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n# Added for k3d registry\n127.0.0.1 k3d-myregistry.localhost\n```\n\n----------------------------------------\n\nTITLE: Configuring cron Capability Binary Path in TOML\nDESCRIPTION: TOML configuration for specifying the path to the cron capability binary, which can be either included in the Chainlink node image or provided externally.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[workflow_config.dependencies]\n  # cron_capability_binary_path = \"./cron\"\n```\n\nLANGUAGE: toml\nCODE:\n```\n[workflow_config.dependencies]\n  cron_capability_binary_path = \"./some-folder/cron\"\n```\n\n----------------------------------------\n\nTITLE: Configuring TxFeeExceedsCap Regex Pattern for EVM Error Handling\nDESCRIPTION: Sets a regex pattern to identify errors where transaction fees exceed configured caps. This helps enforce gas price limits across the node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_227\n\nLANGUAGE: toml\nCODE:\n```\nTxFeeExceedsCap = '(: |^)tx fee exceeds cap' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring Manual Workflow Upload in TOML\nDESCRIPTION: This TOML configuration sets up the test environment for a manually uploaded workflow binary. It specifies the URLs for the binary and configuration files.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n[workflow_config]\n  use_cre_cli = true\n  should_compile_new_workflow = false\n\n  [workflow_config.compiled_config]\n    binary_url = \"<binary-url>\"\n    config_url = \"<config-url>\"\n```\n\n----------------------------------------\n\nTITLE: Defining Deployment Request and Response Structures in Go\nDESCRIPTION: Defines the structures for deployment requests and responses, including environment settings, DON capabilities, and OCR3 configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/deployment/keystone/README.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype DeployRequest struct {\n\tRegistryChainSel uint64\n\tEnv              *deployment.Environment\n\n\tDons       []DonCapabilities   // externally sourced based on the environment\n\tOCR3Config *OracleConfigSource // TODO: probably should be a map of don to config; but currently we only have one wf don therefore one config\n}\n\ntype DeployResponse struct {\n\tChangeset *deployment.ChangesetOutput\n\tDonInfos  map[string]capabilities_registry.CapabilitiesRegistryDONInfo\n}\n\nfunc Deploy(ctx context.Context, lggr logger.Logger, req DeployRequest) (*DeployResponse, error) \n```\n\n----------------------------------------\n\nTITLE: Requesting Randomness from VRF Consumer\nDESCRIPTION: Request random values from the VRF consumer contract using LINK token\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv1/README.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ngo run main.go ownerless-consumer-request --link-address=$LINK --consumer-address=$CONSUMER --key-hash=$KEY_HASH\n```\n\n----------------------------------------\n\nTITLE: Distributing Funds Between Static Keys\nDESCRIPTION: Command to distribute funds from root key to multiple static keys with specified buffer\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nSETH_KEYFILE_PATH=keyfile_my_network.toml SETH_ROOT_PRIVATE_KEY=ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 SETH_CONFIG_PATH=seth.toml go run cmd/seth/seth.go -n my_network keys fund -a 10 -b 1\n```\n\n----------------------------------------\n\nTITLE: Adding Mock Capability to Chainlink Dockerfile\nDESCRIPTION: Modifications to the Chainlink Dockerfile to include mock capabilities for testing. Creates a capabilities directory, copies the mock capability binary, and sets appropriate permissions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/LOAD_TEST_README.md#2025-04-21_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n+ # For testing in CRIB\n+ RUN mkdir /home/capabilities\n+ COPY ./plugins/amd64_mock /home/capabilities\n\n RUN if [ ${CHAINLINK_USER} != root ]; then \\\n   useradd --uid 14933 --create-home ${CHAINLINK_USER}; \\\n   fi\n\n+ RUN chown ${CHAINLINK_USER}:${CHAINLINK_USER} /home/capabilities\n+ RUN chown ${CHAINLINK_USER}:${CHAINLINK_USER} /home/capabilities/amd64_mock\n+ RUN chmod +x /home/capabilities/amd64_mock\n```\n\n----------------------------------------\n\nTITLE: Running P0 VRF Tests Against Existing Environment on Arbitrum Sepolia\nDESCRIPTION: Example command to run priority zero (P0) VRF tests against a staging environment on Arbitrum Sepolia network. Uses predefined test configuration and selectively runs a subset of tests.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/run-books/VRF.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run \"on-demand-vrfv2plus-smoke-tests.yml\" \\\n--ref develop \\\n-f=test_secrets_override_key=<your testsecrets id> \\\n-f test_config_override_path=integration-tests/testconfig/vrfv2plus/overrides/staging/arbitrum_sepolia_staging_test_config.toml \\\n-f test_suite=\"Selected Tests\" \n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow Registry\nDESCRIPTION: Workflow registry settings including contract address and size limits\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_33\n\nLANGUAGE: toml\nCODE:\n```\n[Capabilities.WorkflowRegistry]\nAddress = '0x0'\nNetworkID = 'evm'\nChainID = '1'\nMaxBinarySize = '20.00mb'\nMaxEncryptedSecretsSize = '26.40kb'\nMaxConfigSize = '50.00kb'\nSyncStrategy = 'event'\n```\n\n----------------------------------------\n\nTITLE: Configuring Balance Monitor Settings in TOML\nDESCRIPTION: Simple toggle for enabling balance monitoring across all keys.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_194\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.BalanceMonitor]\nEnabled = true\n```\n\n----------------------------------------\n\nTITLE: Setting Chainlink Image Environment Variable for Tests\nDESCRIPTION: Sets an environment variable that points to the Chainlink image in the local registry. This variable is used by the test framework to locate the image.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nexport CHAINLINK_IMAGE=k3d-myregistry.localhost:5001/docker.io/smartcontract/chainlink\n```\n\n----------------------------------------\n\nTITLE: Configuring Infrastructure Type in TOML\nDESCRIPTION: TOML configuration for specifying whether to use Docker or Kubernetes (CRIB) for test execution.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[infra]\n  # Choose either \"docker\" or \"crib\"\n  type = \"crib\"\n```\n\n----------------------------------------\n\nTITLE: Configuring FeeHistory Cache Settings in TOML\nDESCRIPTION: Sets the cache timeout for FeeHistory estimator with applied jitter.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_210\n\nLANGUAGE: toml\nCODE:\n```\n[EVM.GasEstimator.FeeHistory]\nCacheTimeout = '10s' # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring Solana Node Settings in TOML\nDESCRIPTION: Defines a Solana blockchain node configuration including its name, URL endpoint, and transaction handling mode. These settings determine how Chainlink connects to Solana networks.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_271\n\nLANGUAGE: toml\nCODE:\n```\n[[Solana.Nodes]]\nName = 'primary' # Example\nURL = 'http://solana.web' # Example\nSendOnly = false # Default\n```\n\n----------------------------------------\n\nTITLE: Running the Workflow Load Test with Mock Capabilities\nDESCRIPTION: Command for running the load test with all required environment variables. Includes configuration for observability, Grafana dashboards, Loki logging, test timeouts, and resource settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/LOAD_TEST_README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nCTF_CONFIGS=workflow-don-load-test-streams.toml DASHBOARD_FOLDER=LoadTests DASHBOARD_NAME=Wasp DATA_SOURCE_NAME=Loki GRAFANA_TOKEN=<YOUR_GRAFANA_TOKEN> GRAFANA_URL=http://localhost:3000 LOKI_URL=http://localhost:3030/loki/api/v1/push PRIVATE_KEY=ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 CHAINLINK_CLUSTER_VERSION=\"2.6.0-preview-1896-f6cd441\" LOAD_TEST=\"true\" go test -run TestLoad_Workflow_Streams_MockCapabilities -timeout 60m\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Logging for HTTP and RPC Clients\nDESCRIPTION: Environment variable configuration to enable debugging of HTTP and RPC clients during test execution.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport SETH_LOG_LEVEL=debug\nexport RESTY_DEBUG=true\n```\n\n----------------------------------------\n\nTITLE: Base Network Configuration TOML\nDESCRIPTION: Defines basic oracle and network tracking configuration parameters including Oracle address and OCR settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_137\n\nLANGUAGE: toml\nCODE:\n```\nOracleAddress = '0x420000000000000000000000000000000000000F'\n\n[HeadTracker]\nHistoryDepth = 2000\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 10\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 1\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 6500000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Running All Tests with CL 2.15.0 on Base Sepolia\nDESCRIPTION: Example command for running all tests with contract deployment and Chainlink nodes version 2.15.0 on Base Sepolia.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/docs/VRF.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run \"on-demand-vrfv2plus-smoke-tests.yml\" \\\n--ref develop \\\n-f=test_secrets_override_key=<your testsecrets id> \\\n-f test_config_override_path=integration-tests/testconfig/vrfv2plus/overrides/new_env/base_sepolia_new_env_test_config.toml \\\n-f test_suite=\"All Tests\" \\\n-f chainlink_version=\"2.15.0\" \n```\n\n----------------------------------------\n\nTITLE: Setting CRIB Infrastructure Configuration\nDESCRIPTION: TOML configuration for the CRIB environment, specifying the namespace, local folder location, and cloud provider for deploying the test infrastructure.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/LOAD_TEST_README.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[infra.crib]\nnamespace = \"crib-workflow-don-load-test\"\nfolder_location = \"/Users/ionita/crib/deployments/cre\"\nprovider = \"aws\"\n```\n\n----------------------------------------\n\nTITLE: Defining Common Chain Configuration in TOML\nDESCRIPTION: Example of defining common chain configuration for EVM chains, including gas estimator settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/testconfig/README.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\nCommonChainConfigTOML = \"\"\"\nAutoCreateKey = true\nFinalityDepth = 1\nMinContractPayment = 0\n\n[GasEstimator]\nPriceMax = '200 gwei'\nLimitDefault = 6000000\nFeeCapDefault = '200 gwei'\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Running VRF Tests Using On-Demand GitHub Workflows\nDESCRIPTION: Command to trigger VRF smoke tests via GitHub workflows. Allows configuration of test secrets, config path, test suite, and other parameters for customized test execution in CI environment.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/run-books/VRF.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run \"on-demand-vrfv2plus-smoke-tests.yml\" \\\n--ref develop \\\n-f=test_secrets_override_key=<your testsecrets id> \\\n-f test_config_override_path=<path to test toml config which should be in `integration-tests/testconfig/vrfv2plus/overrides` folder> \\\n-f test_suite=\"Selected Tests\" \\ # Optional, Options - \"All Tests\", \"Selected Tests\". Default is \"All Tests\". If \"Selected Tests\" is selected, then `test_list_regex` should be provided \n-f test_list_regex=\"<regex for tests to run>\" \\ # Optional, default is \"TestVRFv2Plus$/(Link_Billing|Native_Billing|Direct_Funding)|TestVRFV2PlusWithBHS\" which are P0 tests\n-f chainlink_version=\"<>\" # Optional, default is image created from develop branch. Not needed if you run tests against existing environment\n-f notify_user_id_on_failure=<your slack user id> # Optional, default is empty. If provided, will notify the user on slack if the tests fail\n```\n\n----------------------------------------\n\nTITLE: Pyroscope Server Configuration in TOML\nDESCRIPTION: Settings for Pyroscope profiling service including server address and environment configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_43\n\nLANGUAGE: toml\nCODE:\n```\n[Pyroscope]\nServerAddress = 'http://localhost:4040'\nEnvironment = 'mainnet'\n```\n\n----------------------------------------\n\nTITLE: Deploying the VRFExternalSubOwnerExample consumer contract\nDESCRIPTION: This Go command deploys the VRFExternalSubOwnerExample contract, which allows its owner to request random words from VRF V2+ if it is added as a consumer for a funded VRF subscription.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngo run . eoa-consumer-deploy --coordinator-address=$COORDINATOR --link-address=$LINK\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Connection and Preparing Test Database\nDESCRIPTION: Commands to set the database connection URL environment variable and initialize the test database using the make command. This configures the application to connect to the local PostgreSQL instance.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/ccip/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport CL_DATABASE_URL=\"postgresql://postgres:@localhost:5432/chainlink_test?sslmode=disable\"\nmake testdb\n```\n\n----------------------------------------\n\nTITLE: Database Setup for Testing\nDESCRIPTION: Script to set up the test database with appropriate permissions\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nmake setup-testdb\n```\n\n----------------------------------------\n\nTITLE: Configuring GasEstimator FeeHistory Cache in TOML\nDESCRIPTION: Sets the cache timeout for the GasEstimator's FeeHistory component to 10 seconds.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_184\n\nLANGUAGE: toml\nCODE:\n```\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n```\n\n----------------------------------------\n\nTITLE: Running OCR Tests in Kubernetes\nDESCRIPTION: Command to run OCR tests in a Kubernetes environment. It includes setting up environment variables for configuration overrides and specifying the test to run.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/run-books/OCR.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nBASE64_CONFIG_OVERRIDE=$(cat ./testconfig/overrides.toml | base64) go test -v -timeout <max_test_timeout> -p 1 -run '<TestName>' ./<test_directory>\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Testing\nDESCRIPTION: Environment variables needed for running VRF test scripts after the setup is complete, including Ethereum URL, chain ID, and account key.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/common/vrf/setup-envs/README.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nexport ETH_URL=\nexport ETH_CHAIN_ID=\nexport ACCOUNT_KEY=\n```\n\n----------------------------------------\n\nTITLE: Configuring Fee History Cache in TOML\nDESCRIPTION: Sets the cache timeout for fee history data which determines how frequently the node refreshes its gas fee information. This affects responsiveness to network gas price changes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_70\n\nLANGUAGE: toml\nCODE:\n```\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow Load in TOML Environment File\nDESCRIPTION: Configuration settings for the workflow load test, specifying the number of streams and jobs to create. These values determine the maximum possible load that can be generated.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/LOAD_TEST_README.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[workflow_load]\nstreams = 1000\njobs = 2\n```\n\n----------------------------------------\n\nTITLE: Gas Price Priority Selection in Seth\nDESCRIPTION: Code showing how gas price percentiles are selected based on transaction priority levels for EIP-1559 transactions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_16\n\nLANGUAGE: go\nCODE:\n```\n\t\tcase Priority_Fast:\n\t\t\tbaseFee = stats.GasPrice.Perc99\n\t\t\thistoricalGasTipCap = stats.TipCap.Perc99\n\t\tcase Priority_Standard:\n\t\t\tbaseFee = stats.GasPrice.Perc50\n\t\t\thistoricalGasTipCap = stats.TipCap.Perc50\n\t\tcase Priority_Slow:\n\t\t\tbaseFee = stats.GasPrice.Perc25\n\t\t\thistoricalGasTipCap = stats.TipCap.Perc25\n```\n\n----------------------------------------\n\nTITLE: Deploying BatchBlockhashStore Contract\nDESCRIPTION: Deploys a new BatchBlockhashStore contract instance, which acts as a proxy to the BlockhashStore contract.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ngo run . batch-bhs-deploy -bhs-address $BHS_ADDRESS\n```\n\n----------------------------------------\n\nTITLE: Database Password Complexity Setting\nDESCRIPTION: Configuration option to skip password complexity checks for database URLs. Default is false, meaning password complexity is enforced.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\nAllowSimplePasswords = false # Default\n```\n\n----------------------------------------\n\nTITLE: Setting DeltaCOverride for OCR Report Generation\nDESCRIPTION: Advanced setting that configures the maximum age of the latest report in the contract. If exceeded, the OCR protocol will generate a new report. This affects reporting frequency.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_239\n\nLANGUAGE: toml\nCODE:\n```\nDeltaCOverride = \"168h\" # Default\n```\n\n----------------------------------------\n\nTITLE: Connecting to the Development Container\nDESCRIPTION: Command to open a bash prompt in the container for interactive development.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/docker/README.md#2025-04-21_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n./compose connect\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations\nDESCRIPTION: Commands to load database environment and run migrations\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nsource .dbenv\nmake testdb\n```\n\n----------------------------------------\n\nTITLE: Chainlink CCIP Contracts Directory Structure\nDESCRIPTION: Displays the directory structure of the @chainlink/contracts-ccip package, showing the location of Solidity contracts and ABI json output files.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/release/ccip/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n@chainlink/contracts-ccip\n├── src # Solidity contracts\n│   └── v0.8\n└── abi # ABI json output\n    └── v0.8\n```\n\n----------------------------------------\n\nTITLE: Setting Starknet Chain ID in TOML\nDESCRIPTION: Specifies the Starknet blockchain network identifier. This is required to ensure the system connects to the correct Starknet network.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_276\n\nLANGUAGE: toml\nCODE:\n```\nChainID = 'foobar' # Example\n```\n\n----------------------------------------\n\nTITLE: Running SOAK Performance Tests on Base Sepolia\nDESCRIPTION: Example command to run SOAK performance tests against a staging environment on Base Sepolia. Uses predefined test configuration for extended performance evaluation.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/run-books/VRF.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run \"on-demand-vrfv2plus-performance-test.yml\" \\\n--ref develop \\\n-f=test_secrets_override_key=<your testsecrets id> \\\n-f test_config_override_path=integration-tests/testconfig/vrfv2plus/overrides/staging/base_sepolia_staging_test_config.toml \\\n-f performanceTestType=\"Soak\"\n```\n\n----------------------------------------\n\nTITLE: Funding a VRF V2+ Subscription\nDESCRIPTION: This Go command funds a VRF V2+ subscription with 10 LINK tokens using the specified coordinator address, LINK address, and subscription ID.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ngo run . eoa-fund-sub --coordinator-address $COORDINATOR --link-address=$LINK  --sub-id=$SUB_ID --amount=10000000000000000000 # 10e18 or 10 LINK\n```\n\n----------------------------------------\n\nTITLE: Configuring OCR Load Test Parameters in TOML\nDESCRIPTION: This TOML configuration file (overrides.toml) sets up parameters for the OCR load test. It specifies the CRIB namespace, network type, number of nodes, and Loki logging configuration including endpoint and authentication details.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/ocr/README.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[CRIB]\nnamespace = \"$your_crib_namespace_here\"\n# only Geth is supported right now\nnetwork_name = \"geth\"\nnodes = 5\n\n[Logging.Loki]\ntenant_id=\"promtail\"\nendpoint=\"...\"\nbasic_auth_secret=\"...\"\n```\n\n----------------------------------------\n\nTITLE: Checking Random Request Fulfillment\nDESCRIPTION: Command to check that a random number request was successfully fulfilled by reading metrics from the consumer contract.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/common/vrf/setup-envs/README.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ngo run . eoa-load-test-read-metrics --consumer-address=<contract address> \n```\n\n----------------------------------------\n\nTITLE: Setting Base64 Config Override for Mainnet Tests\nDESCRIPTION: Specific command example for running smoke tests on mainnet by encoding the mainnet configuration file to base64.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport BASE64_CONFIG_OVERRIDE=$(base64 -i ./testconfig/override/mainnet.toml)\n```\n\n----------------------------------------\n\nTITLE: Configuring Ethereum Ropsten (ChainID 3) Settings in TOML\nDESCRIPTION: This snippet contains the default configuration for Ethereum Ropsten testnet (ChainID 3). It includes settings for block management, transactions, gas estimation, head tracking, and OCR (Off-Chain Reporting).\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_52\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nFinalityDepth = 50\nFinalityTagEnabled = false\nLinkContractAddress = '0x20fE562d797A42Dcb3399062AE9546cd06f63280'\nLogBackfillBatchSize = 1000\nLogPollInterval = '15s'\nLogKeepBlocksDepth = 100000\nLogPrunePageSize = 0\nBackupLogPollerBlockDelay = 100\nMinIncomingConfirmations = 3\nMinContractPayment = '0.1 link'\nNonceAutoSync = true\nNoNewHeadsThreshold = '3m0s'\nLogBroadcasterEnabled = true\nRPCDefaultBatchSize = 250\nRPCBlockQueryDelay = 1\nFinalizedBlockOffset = 0\nNoNewFinalizedHeadsThreshold = '0s'\n\n[Transactions]\nEnabled = true\nForwardersEnabled = false\nMaxInFlight = 16\nMaxQueued = 250\nReaperInterval = '1h0m0s'\nReaperThreshold = '168h0m0s'\nResendAfterThreshold = '1m0s'\n\n[Transactions.AutoPurge]\nEnabled = false\n\n[Transactions.TransactionManagerV2]\nEnabled = false\n\n[BalanceMonitor]\nEnabled = true\n\n[GasEstimator]\nMode = 'BlockHistory'\nPriceDefault = '20 gwei'\nPriceMax = '115792089237316195423570985008687907853269984665.640564039457584007913129639935 tether'\nPriceMin = '1 gwei'\nLimitDefault = 500000\nLimitMax = 500000\nLimitMultiplier = '1'\nLimitTransfer = 21000\nEstimateLimit = false\nBumpMin = '5 gwei'\nBumpPercent = 20\nBumpThreshold = 3\nEIP1559DynamicFees = true\nFeeCapDefault = '100 gwei'\nTipCapDefault = '1 wei'\nTipCapMin = '1 wei'\n\n[GasEstimator.BlockHistory]\nBatchSize = 25\nBlockHistorySize = 4\nCheckInclusionBlocks = 12\nCheckInclusionPercentile = 90\nTransactionPercentile = 50\n\n[GasEstimator.FeeHistory]\nCacheTimeout = '10s'\n\n[HeadTracker]\nHistoryDepth = 100\nMaxBufferSize = 3\nSamplingInterval = '1s'\nMaxAllowedFinalityDepth = 10000\nFinalityTagBypass = true\nPersistenceEnabled = true\n\n[NodePool]\nPollFailureThreshold = 5\nPollInterval = '10s'\nSelectionMode = 'HighestHead'\nSyncThreshold = 5\nLeaseDuration = '0s'\nNodeIsSyncingEnabled = false\nFinalizedBlockPollInterval = '5s'\nEnforceRepeatableRead = true\nDeathDeclarationDelay = '1m0s'\nNewHeadsPollInterval = '0s'\nVerifyChainID = true\n\n[OCR]\nContractConfirmations = 4\nContractTransmitterTransmitTimeout = '10s'\nDatabaseTimeout = '10s'\nDeltaCOverride = '168h0m0s'\nDeltaCJitterOverride = '1h0m0s'\nObservationGracePeriod = '1s'\n\n[OCR2]\n[OCR2.Automation]\nGasLimit = 5400000\n\n[Workflow]\nGasLimitDefault = 400000\n```\n\n----------------------------------------\n\nTITLE: Deploying New VRF Consumer Contract\nDESCRIPTION: Deploy a new ownerless consumer contract using the coordinator and LINK addresses\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv1/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngo run main.go ownerless-consumer-deploy --coordinator-address=$COORDINATOR --link-address=$LINK\n```\n\n----------------------------------------\n\nTITLE: Static Keys Network Configuration\nDESCRIPTION: TOML configuration for setting up static wallet keys\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n[Network.WalletKeys]\narbitrum_sepolia=[\"first_key\",\"second_key\"]\n```\n\n----------------------------------------\n\nTITLE: Setting Node Death Declaration Delay in TOML\nDESCRIPTION: Configures the time duration to wait before declaring a node as dead in the network. This parameter helps prevent premature node failure declarations during temporary network issues.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_264\n\nLANGUAGE: toml\nCODE:\n```\nDeathDeclarationDelay = '10s' # Default\n```\n\n----------------------------------------\n\nTITLE: Deploying BatchBlockhashStore for VRF\nDESCRIPTION: This Go command deploys a BatchBlockhashStore contract, which acts as a proxy to the BlockhashStore contract for storing and fetching multiple blockhashes in a single transaction.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ngo run . batch-bhs-deploy -bhs-address $BHS_ADDRESS\n```\n\n----------------------------------------\n\nTITLE: Setting Up Timeouts for Log Poller Test Assertions in Go\nDESCRIPTION: Shows how to implement timeout-based assertions for Log Poller tests using Gomega's Eventually function. This pattern is used to wait for Chainlink nodes to have the expected log count with configurable timeout periods.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/LOG_POLLER.md#2025-04-21_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\n\tgom.Eventually(func(g gomega.Gomega) {\n\t\tlogCountMatches, err := ClNodesHaveExpectedLogCount(startBlock, endBlock int64, chainID *big.Int, expectedLogCount int, expectedFilters []ExpectedFilter, l zerolog.Logger, coreLogger core_logger.SugaredLogger, nodes *test_env.ClCluster) (bool, error) {\n\t\tif err != nil {\n\t\t\tl.Warn().Err(err).Msg(\"Error checking if CL nodes have expected log count. Retrying...\")\n\t\t}\n\t\tg.Expect(logCountMatches).To(gomega.BeTrue(), \"Not all CL nodes have expected log count\")\n\t}, \"1m\", \"30s\").Should(gomega.Succeed()) # 1m is the timeout for all nodes to have expected log count\n```\n\n----------------------------------------\n\nTITLE: Fetching Multiple Blockhashes with BatchBlockhashStore\nDESCRIPTION: This Go command fetches multiple blockhashes in a single transaction using the BatchBlockhashStore contract.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ngo run . batch-bhs-get -batch-bhs-address $BATCH_BHS_ADDRESS -block-numbers 10298742,10298741,10298740,10298739\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS for Local Chainlink Development (TOML)\nDESCRIPTION: TOML configuration snippet for disabling TLS and enabling the development web server for local Chainlink node development. This allows running the node without HTTPS for testing purposes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[WebServer]\nSecureCookies = false\nTLS.HTTPSPort = 0\n\n[Insecure]\nDevWebServer = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Mocked Price Data Source in TOML\nDESCRIPTION: TOML configuration for setting up a mock price data source that returns a sequence of predefined prices. Useful for testing without dependency on external APIs.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_29\n\nLANGUAGE: toml\nCODE:\n```\n[price_provider]\n  # Without the 0x prefix!\n  feed_id = \"018bfe8840700040000000000000000000000000000000000000000000000000\"\n\n  [price_provider.fake]\n    port = 8171\n    prices = [182.9, 162.71, 172.02]\n```\n\n----------------------------------------\n\nTITLE: Sentry Error Tracking Configuration in TOML\nDESCRIPTION: Sentry integration settings including debug mode, DSN, environment and release version configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_44\n\nLANGUAGE: toml\nCODE:\n```\n[Sentry]\nDebug = false\nDSN = 'sentry-dsn'\nEnvironment = 'my-custom-env'\nRelease = 'v1.2.3'\n```\n\n----------------------------------------\n\nTITLE: Backfilling Blockhashes in Backwards Mode\nDESCRIPTION: Stores a large range of blockhashes in reverse order, useful for backfilling historical data in the BatchBlockhashStore.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\ngo run . batch-bhs-backwards -batch-bhs-address $BATCH_BHS_ADDRESS -start-block 25814538 -end-block 25811350 -batch-size 50\n```\n\n----------------------------------------\n\nTITLE: Configuring CCIP Contract Versions in TOML\nDESCRIPTION: Specifies the versions of different CCIP contracts to be used in tests, including PriceRegistry, OffRamp, OnRamp, TokenPool, and CommitStore.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/testconfig/README.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.ContractVersions]\nPriceRegistry = \"1.2.0\"\nOffRamp = \"1.2.0\"\nOnRamp = \"1.2.0\"\nTokenPool = \"1.4.0\"\nCommitStore = \"1.2.0\"\n```\n\n----------------------------------------\n\nTITLE: Navigating to VRF Scripts Directory\nDESCRIPTION: Change directory to the VRF V1 scripts location\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv1/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncd <YOUR LOCAL CHAINLINK REPO>/core/scripts/vrfv1\n```\n\n----------------------------------------\n\nTITLE: Running Seth CLI for Fallback Values\nDESCRIPTION: Command to retrieve fallback gas prices using Seth CLI with configurable block count and tip percentage\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nSETH_CONFIG_PATH=seth.toml go run cmd/seth/seth.go -u https://RPC_TO_USE -b 10000 -tp 0.99\n```\n\n----------------------------------------\n\nTITLE: VRF Performance Test Execution\nDESCRIPTION: Command to run VRF v2 Plus performance tests using GitHub workflow with configurable test types (Smoke, Soak, Stress, Load).\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/docs/VRF.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run \"on-demand-vrfv2plus-performance-test.yml\" \\\n--ref develop \\\n-f=test_secrets_override_key=<your testsecrets id> \\\n-f test_config_override_path=<path to test toml config which should be in `integration-tests/testconfig/vrfv2plus/overrides` folder> \\\n-f performanceTestType=\"Smoke\" # Options - \"Smoke\", \"Soak\", \"Stress\", \"Load\".\n-f test_list_regex=\"<regex for tests to run>\" # Optional, default is \"TestVRFV2PlusPerformance\"\n```\n\n----------------------------------------\n\nTITLE: Running VRF Performance Tests\nDESCRIPTION: Command to trigger performance tests for VRF via GitHub workflows. Supports different performance test types (Smoke, Soak, Stress, Load) with customizable test configurations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/run-books/VRF.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run \"on-demand-vrfv2plus-performance-test.yml\" \\\n--ref develop \\\n-f=test_secrets_override_key=<your testsecrets id> \\\n-f test_config_override_path=<path to test toml config which should be in `integration-tests/testconfig/vrfv2plus/overrides` folder> \\\n-f performanceTestType=\"Smoke\" # Options - \"Smoke\", \"Soak\", \"Stress\", \"Load\".\n-f test_list_regex=\"<regex for tests to run>\" # Optional, default is \"TestVRFV2PlusPerformance\"\n```\n\n----------------------------------------\n\nTITLE: Running Log Poller Tests in Go\nDESCRIPTION: Shows the command for running a Log Poller test from the command line. The example includes setting a test timeout that should be adjusted according to the expected test duration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/LOG_POLLER.md#2025-04-21_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\n# run in the root folder of chainlink repo\ngo test -v -test.timeout=2700s -run TestLogPollerReplay integration-tests/smoke/log_poller_test.go\n```\n\n----------------------------------------\n\nTITLE: Configuring Token Settings in TOML\nDESCRIPTION: Example configuration for token settings including price updates, number of tokens per chain, and dynamic price intervals.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/testconfig/README.md#2025-04-21_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.Groups.load.TokenConfig]\nTimeoutForPriceUpdate = '15m'\nNoOfTokensPerChain = 60\nNoOfTokensWithDynamicPrice = 15\nDynamicPriceUpdateInterval ='15s'\nCCIPOwnerTokens = true\n```\n\n----------------------------------------\n\nTITLE: Configuring GatewayConnector Gateways in Chainlink Node (TOML)\nDESCRIPTION: Defines individual gateway configurations with ID and URL for the GatewayConnector.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_38\n\nLANGUAGE: toml\nCODE:\n```\n[[Capabilities.GatewayConnector.Gateways]]\nID = 'example_gateway' # Example\nURL = 'wss://localhost:8081/node' # Example\n```\n\n----------------------------------------\n\nTITLE: Exporting GOPATH and PATH for Chainlink Development (Bash)\nDESCRIPTION: Example commands for setting up the Go environment variables on macOS for Chainlink development. This configures the GOPATH and adds the Go binary directory to the system PATH.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=$GOPATH/bin:$PATH\nexport GOPATH=/Users/$USER/go\n```\n\n----------------------------------------\n\nTITLE: Non-Compliant OCR Contract Configurations in TOML\nDESCRIPTION: Illustrates incorrect configurations for OCR contract reuse that will fail validation or execution. These examples show scenarios where inconsistent settings are applied to multiple contracts.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/testconfig/README.md#2025-04-21_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# Non-compliant configurations\n[OCR.Contracts]\nlink_token = \"0x88d1239894D9582f5849E5b5a964da9e5730f1E6\"\noffchain_aggregators = [\"0xc1ce3815d6e7f3705265c2577F1342344752A5Eb\", \"0x2f4FA21fCd917C448C160caafEC874032F404c08\"]\n\n# Example 1: Setting `configure` to `false` for selected (not all) addresses will fail configuration validation\n[OCR.Contracts.Settings.\"0xc1ce3815d6e7f3705265c2577F1342344752A5Eb\"]\nconfigure = false\n\n# OR\n\n# Example 2: Setting `configure` to different values for the listed contracts will fail execution\n[OCR.Contracts.Settings.\"0xc1ce3815d6e7f3705265c2577F1342344752A5Eb\"]\nconfigure = false\n\n[OCR.Contracts.Settings.\"0x2f4FA21fCd917C448C160caafEC874032F404c08\"]\nconfigure = true\n\n# OR\n\n# Example 3: Setting `use` to different values for the listed contracts will fail execution\n[OCR.Contracts.Settings.\"0xc1ce3815d6e7f3705265c2577F1342344752A5Eb\"]\nuse = false\n\n[OCR.Contracts.Settings.\"0x2f4FA21fCd917C448C160caafEC874032F404c08\"]\nuse = true\n```\n\n----------------------------------------\n\nTITLE: Setting Up VRFv2 Environment in Go\nDESCRIPTION: Function signature for setting up a VRFv2 environment in Go. It demonstrates the use of custom interfaces and types for configuration, and returns various contract and node data.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/testconfig/README.md#2025-04-21_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nfunc SetupVRFV2Environment(\n    env *test_env.CLClusterTestEnv,\n    nodesToCreate []vrfcommon.VRFNodeType,\n    vrfv2TestConfig types.VRFv2TestConfig, // implementation of interface used as a parameter\n    useVRFOwner bool,\n    useTestCoordinator bool,\n    linkToken contracts.LinkToken,\n    mockNativeLINKFeed contracts.MockETHLINKFeed,\n    registerProvingKeyAgainstAddress string,\n    numberOfTxKeysToCreate int,\n    numberOfConsumers int,\n    numberOfSubToCreate int,\n    l zerolog.Logger,\n) (*vrfcommon.VRFContracts, []uint64, *vrfcommon.VRFKeyData, map[vrfcommon.VRFNodeType]*vrfcommon.VRFNode, error) { <setup logic> }\n```\n\n----------------------------------------\n\nTITLE: Configuring LimitReached Regex Pattern for EVM Error Handling\nDESCRIPTION: Sets a regex pattern to identify limit reached errors from EVM nodes. This helps the Chainlink node handle rate limiting or capacity issues from RPC providers.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_223\n\nLANGUAGE: toml\nCODE:\n```\nLimitReached = '(: |^)limit reached' # Example\n```\n\n----------------------------------------\n\nTITLE: Fallback Gas Price Output Example\nDESCRIPTION: Example output showing fallback gas prices from Seth CLI\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n 5:08PM INF Fallback prices for TOML config:\ngas_price = 121487901046\ngas_tip_cap = 1000000000\ngas_fee_cap = 122487901046\n```\n\n----------------------------------------\n\nTITLE: Running VRFv2 Load Tests in Go\nDESCRIPTION: This snippet demonstrates how to set up environment variables for Loki logging and execute a VRFv2 soak test using Go's testing framework.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/vrfv2/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport LOKI_TOKEN=...\nexport LOKI_URL=...\n\ngo test -v -run TestVRFV2Load/vrfv2_soak_test\n```\n\n----------------------------------------\n\nTITLE: Running OCR Load and Volume Tests in Go\nDESCRIPTION: These Go test commands execute the OCR load and volume tests. They use the verbose flag for detailed output and specify the test functions to run.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/ocr/README.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\ngo test -v -run TestOCRLoad\n```\n\nLANGUAGE: go\nCODE:\n```\ngo test -v -run TestOCRVolume\n```\n\n----------------------------------------\n\nTITLE: Local VRF Test Execution\nDESCRIPTION: Command for running VRF tests locally with debug logging and custom configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/docs/VRF.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd integration-tests\nTEST_LOG_LEVEL=debug \\\nBASE64_CONFIG_OVERRIDE=$(cat <full path to chain's test toml config> | base64) \\\ngo test -v -timeout 15m -run \"<regex for tests to run>\" ./smoke\n```\n\n----------------------------------------\n\nTITLE: Running OCR Migration Tests in Docker\nDESCRIPTION: Command to run OCR migration tests in a Docker environment. It sets up configuration overrides and executes the tests using Go or Make.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/run-books/OCR.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nBASE64_CONFIG_OVERRIDE=$(cat ./testconfig/overrides.toml | base64) go test -v -p 1 ./smoke/<product>_test.go\n```\n\nLANGUAGE: bash\nCODE:\n```\nBASE64_CONFIG_OVERRIDE=$(cat ./testconfig/overrides.toml | base64) make test_node_migrations_verbose\n```\n\n----------------------------------------\n\nTITLE: Executing VRF Tests via GitHub Workflow\nDESCRIPTION: Command to run VRF v2 Plus smoke tests using GitHub workflow. Allows configuration of test secrets, config paths, test suites, and specific test patterns.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/docs/VRF.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run \"on-demand-vrfv2plus-smoke-tests.yml\" \\\n--ref develop \\\n-f=test_secrets_override_key=<your testsecrets id> \\\n-f test_config_override_path=<path to test toml config which should be in `integration-tests/testconfig/vrfv2plus/overrides` folder> \\\n-f test_suite=\"Selected Tests\" \\ # Optional, Options - \"All Tests\", \"Selected Tests\". Default is \"All Tests\". If \"Selected Tests\" is selected, then `test_list_regex` should be provided \n-f test_list_regex=\"<regex for tests to run>\" \\ # Optional, default is \"TestVRFv2Plus$/(Link_Billing|Native_Billing|Direct_Funding)|TestVRFV2PlusWithBHS\" which are P0 tests\n-f chainlink_version=\"<>\" # Optional, default is image created from develop branch. Not needed if you run tests against existing environment\n-f notify_user_id_on_failure=<your slack user id> # Optional, default is empty. If provided, will notify the user on slack if the tests fail\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Local CCIP Testing\nDESCRIPTION: Environment variables configuration for running CCIP tests locally using kind as the provider. Specifies the Docker image, namespace, and provider settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/ccip/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nDEVSPACE_IMAGE= <found in ECR>\nDEVSPACE_IMAGE_TAG= <found in ECR>\n\nDEVSPACE_NAMESPACE=crib-local\nPROVIDER=kind\n```\n\n----------------------------------------\n\nTITLE: Running Go Tests\nDESCRIPTION: Command to run all Go tests in the project\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ngo test ./...\n```\n\n----------------------------------------\n\nTITLE: Running All VRF Tests with Specific Chainlink Version on Base Sepolia\nDESCRIPTION: Example command to run all VRF tests on Base Sepolia, deploying contracts and Chainlink nodes with version 2.15.0. Creates a new test environment for comprehensive testing.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/run-books/VRF.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run \"on-demand-vrfv2plus-smoke-tests.yml\" \\\n--ref develop \\\n-f=test_secrets_override_key=<your testsecrets id> \\\n-f test_config_override_path=integration-tests/testconfig/vrfv2plus/overrides/new_env/base_sepolia_new_env_test_config.toml \\\n-f test_suite=\"All Tests\" \\\n-f chainlink_version=\"2.15.0\" \n```\n\n----------------------------------------\n\nTITLE: Setting Enabled Flag for Cosmos Chain Activation\nDESCRIPTION: Controls whether the Cosmos chain configuration is active. When true, the Chainlink node will connect to and interact with this Cosmos chain.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_256\n\nLANGUAGE: toml\nCODE:\n```\nEnabled = true # Default\n```\n\n----------------------------------------\n\nTITLE: Checking Specific Modules with Plugout (Bash)\nDESCRIPTION: Demonstrates how to use Plugout to check specific modules by providing their module URIs. This example checks the chainlink-data-streams and chainlink-feeds modules.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/plugout/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngo run ./tools/plugout/ --module github.com/smartcontractkit/chainlink-data-streams --module github.com/smartcontractkit/chainlink-feeds\n```\n\n----------------------------------------\n\nTITLE: Defining Chain-Specific Configuration in TOML\nDESCRIPTION: Example of defining chain-specific configuration for Arbitrum Goerli testnet.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/testconfig/README.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[NodeConfig.ChainConfigTOMLByChainID]\n421613 = \"\"\"\n[GasEstimator]\nPriceMax = '400 gwei'\nLimitDefault = 100000000\nFeeCapDefault = '200 gwei'\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Overrides on Live Testnet\nDESCRIPTION: Command to run a specific test against a live testnet using the configured overrides.toml file. This executes the test with the settings specified in the configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngo test -v -run ${TestName}\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster Mode in TOML\nDESCRIPTION: This snippet provides a TOML configuration for cluster mode (k8s) in the overrides.toml file, including namespace, image, and test settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/README.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[WaspAutoBuild]\nnamespace = \"wasp\"\nupdate_image = true\nrepo_image_version_uri = \"${staging_ecr_registry}/wasp-tests:wb-core\"\ntest_binary_name = \"ocr.test\"\ntest_name = \"TestOCRLoad\"\ntest_timeout = \"24h\"\nwasp_log_level = \"debug\"\nwasp_jobs = \"1\"\nkeep_jobs = true\n```\n\n----------------------------------------\n\nTITLE: Deploying Contracts and Creating Jobs with Existing Keys\nDESCRIPTION: Command to deploy VRF contracts and create jobs when the Chainlink nodes already have the required ETH and VRF keys, specifying contract addresses and operational parameters.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/common/vrf/setup-envs/README.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngo run . \\\n--vrf-version=\"v2\" \\\n--vrf-primary-node-url=<url> \\\n--vrf-primary-creds-file <path_to_file_with_creds> \\\n--bhs-node-url=<url> \\\n--bhs-creds-file <path_to_file_with_creds> \\\n--num-eth-keys=3 \\\n--num-vrf-keys=1 \\\n--sending-key-funding-amount=\"1e17\" \\\n--deploy-contracts-and-create-jobs=\"true\" \\\n--subscription-balance=\"1e19\" \\\n--subscription-balance-native=\"1e18\" \\\n--batch-fulfillment-enabled=\"true\" \\\n--min-confs=3 \\\n--register-vrf-key-against-address=\"<eoa address>\" \\\n--deploy-vrfv2-owner=\"true\" \\\n--link-address \"<link address>\" \\\n--link-eth-feed \"<link eth feed address>\" \n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable for Local Testing in Shell\nDESCRIPTION: This command sets the K8S_STAGING_INGRESS_SUFFIX environment variable for local testing. It uses the 'op' command to read a secret value from a secure storage.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/ocr/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nexport K8S_STAGING_INGRESS_SUFFIX=$(op read op://CRIB/secrets/K8S_STAGING_INGRESS_SUFFIX)\n```\n\n----------------------------------------\n\nTITLE: Running OCR Tests with Make Command\nDESCRIPTION: Example of using a make command to run Oracle Contract Request (OCR) product tests with scripts.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake test_smoke_product product=\"ocr\" ./scripts/run_product_tests\n```\n\n----------------------------------------\n\nTITLE: Executing CCIP Load Test\nDESCRIPTION: Commands to run the CCIP load test with a specified timeout. Uses Go test command to execute the TestCCIPLoad_RPS test in the integration-tests directory.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/ccip/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nexport TIMEOUT=6h\ngo test -run ^TestCCIPLoad_RPS$ ./integration-tests/load/ccip -v -timeout $TIMEOUT`\n```\n\n----------------------------------------\n\nTITLE: Setting Starknet Confirmation Poll Interval in TOML\nDESCRIPTION: Defines how frequently the system checks for transaction inclusion on the Starknet blockchain. This affects how quickly transaction confirmations are detected.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_283\n\nLANGUAGE: toml\nCODE:\n```\nConfirmationPoll = '5s' # Default\n```\n\n----------------------------------------\n\nTITLE: Updating Go Modules\nDESCRIPTION: Command to run go mod tidy on all three modules\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nmake gomodtidy\n```\n\n----------------------------------------\n\nTITLE: Running P0 Tests on Arbitrum Sepolia Staging\nDESCRIPTION: Example command for running P0 tests against an existing environment on Arbitrum Sepolia staging.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/docs/VRF.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run \"on-demand-vrfv2plus-smoke-tests.yml\" \\\n--ref develop \\\n-f=test_secrets_override_key=<your testsecrets id> \\\n-f test_config_override_path=integration-tests/testconfig/vrfv2plus/overrides/staging/arbitrum_sepolia_staging_test_config.toml \\\n-f test_suite=\"Selected Tests\" \n```\n\n----------------------------------------\n\nTITLE: Starting CRE Environment with CLI\nDESCRIPTION: Command for starting the Chainlink Runtime Environment using the CLI with topology selection, wait timeout, and extra port allowances. Includes example with simplified topology.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nctf cre env start [flags]\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd cmd\ngo run main.go env start -t simplified -w 5m -e 8080,8081\n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow Limits\nDESCRIPTION: Global and per-owner workflow registration limits\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_34\n\nLANGUAGE: toml\nCODE:\n```\n[Workflows.Limits]\nGlobal = 200\nPerOwner = 200\n```\n\n----------------------------------------\n\nTITLE: Running Plugout in Check Mode (Bash)\nDESCRIPTION: Executes the Plugout tool in check mode to verify if all plugin versions in YAML files match their corresponding versions in go.mod. It reports mismatches without making changes and exits with code 1 if discrepancies are found.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/plugout/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo run ./tools/plugout/\n```\n\n----------------------------------------\n\nTITLE: Cleaning Docker System Storage\nDESCRIPTION: Command to clean up unused Docker resources to free disk space.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/docker/README.md#2025-04-21_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ndocker system prune\n```\n\n----------------------------------------\n\nTITLE: Filtering Keeper Node Logs\nDESCRIPTION: Command to filter log output to only show specific entries from the OCR2Keepers plugin across all nodes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/README.md#2025-04-21_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\n./chaincli keeper logs --grep keepers-plugin\n```\n\n----------------------------------------\n\nTITLE: Configuring Full Chaos Suite Mode\nDESCRIPTION: TOML configuration to enable the full chaos suite for CCIP testing. Sets chaos mode to 2 for comprehensive chaos testing.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/ccip/README.md#2025-04-21_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[Load.CCIP.Load]\n# 0 - no chaos, 1 - rpc latency, 2 - full chaos suite\nChaosMode = 2\n```\n\n----------------------------------------\n\nTITLE: Verifying Keeper Registry Contract\nDESCRIPTION: Command to verify the deployed Keeper Registry contract on block explorers (supports Ethereum, Optimism, and Arbitrum).\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/README.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n./chaincli keeper registry verify <contract-addr> <constructor-args>\n```\n\n----------------------------------------\n\nTITLE: Running Functions Load Tests for HTTP Payloads\nDESCRIPTION: Commands to execute soak and stress tests for Functions with HTTP payloads. These tests validate the system's performance under stable and peak load conditions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/functions/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngo test -v -run TestFunctionsLoad/mumbai_functions_soak_test_http\ngo test -v -run TestFunctionsLoad/mumbai_functions_stress_test_http\ngo test -v -run TestFunctionsLoad/mumbai_functions_soak_test_only_secrets\ngo test -v -run TestFunctionsLoad/mumbai_functions_stress_test_only_secrets\ngo test -v -run TestFunctionsLoad/mumbai_functions_soak_test_real\ngo test -v -run TestFunctionsLoad/mumbai_functions_stress_test_real\n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow for Test Uploads in TOML\nDESCRIPTION: This TOML configuration snippet sets up the test environment to compile and upload a new workflow binary. It specifies the use of CRE CLI and the location of the workflow folder.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n[workflow_config]\n  use_cre_cli = true\n  should_compile_new_workflow = true\n  workflow_folder_location = \"path-to-folder-with-main.go-of-your-workflow\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Starknet Transaction Timeout in TOML\nDESCRIPTION: Sets the maximum time allowed for sending transactions to Starknet RPC endpoints. Transactions taking longer than this duration will be considered failed.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_282\n\nLANGUAGE: toml\nCODE:\n```\nTxTimeout = '10s' # Default\n```\n\n----------------------------------------\n\nTITLE: Setting Foundry Profile for Functions Testing\nDESCRIPTION: Sets the Foundry environment profile to 'functions' which configures the testing environment with appropriate settings for testing the Functions module.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/functions/tests/v1_X/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport FOUNDRY_PROFILE=functions\n```\n\n----------------------------------------\n\nTITLE: Running Parallelized Go Tests for Chainlink Core\nDESCRIPTION: Explains how to run parallelized Go tests for Chainlink Core, with a note on adjusting parallelization to fit available computing resources.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngo test -p 4 ./...\n```\n\n----------------------------------------\n\nTITLE: Defining Aptos Write Capability Job Spec in Go\nDESCRIPTION: This snippet demonstrates how to define a job spec for the Aptos write capability. It creates a job spec string and proposes the job to a node using the ProposeJob function.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_16\n\nLANGUAGE: go\nCODE:\n```\nif hasFlag(flags, WriteAptosCapability) {\n  aptosJobSpec := fmt.Sprintf(`\n    type = \"standardcapabilities\"\n    schemaVersion = 1\n    externalJobID = \"%s\"\n    name = \"aptos-write-capability\"\n    command = \"/home/capabilities/%s\"             # <-------- location of the capability binary within the container\n    config = \"\"\n  `,\n    uuid.NewString(),\n    \"aptos_linux_amd64\")\n\n  aptosJobRequest := &jobv1.ProposeJobRequest{\n    NodeId: node.NodeID,\n    Spec:   aptosJobSpec,\n  }\n\n  _, aptosErr := ctfEnv.Offchain.ProposeJob(context.Background(), aptosJobRequest)\n  if aptosErr != nil {\n    errCh <- errors.Wrapf(aptosErr, \"failed to propose Aptos write job for node %s\", node.NodeID)\n    return\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Documentation Generation Command\nDESCRIPTION: This command, executed from the root of the repository, generates the configuration documentation.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/config/docs/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmake config-docs\n```\n\n----------------------------------------\n\nTITLE: Building Custom CCIP Docker Image\nDESCRIPTION: Make command to build a custom Chainlink CCIP Docker image for testing, allowing specification of image name and tag.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmake build_ccip_image image=chainlink-ccip tag=latest-dev # please choose the image and tag name as per your choice\n```\n\n----------------------------------------\n\nTITLE: Running Gateway Load Tests\nDESCRIPTION: Commands to execute soak tests for the S4 Gateway's secrets listing and setting functionality, evaluating system performance under sustained load.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/functions/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngo test -v -run TestGatewayLoad/gateway_secrets_list_soak_test\ngo test -v -run TestGatewayLoad/gateway_secrets_set_soak_test\n```\n\n----------------------------------------\n\nTITLE: LDAP Read-Only User Login Configuration\nDESCRIPTION: Username configuration for the read-only LDAP user that will be used to authenticate LDAP queries.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\nReadOnlyUserLogin = 'viewer@example.com' # Example\n```\n\n----------------------------------------\n\nTITLE: Viewing Keeper Node Logs\nDESCRIPTION: Command to stream logs from the running OCR2Keeper node containers to the local terminal.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/README.md#2025-04-21_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\n./chaincli keeper logs\n```\n\n----------------------------------------\n\nTITLE: Checking Custom Plugin File with Plugout (Bash)\nDESCRIPTION: Shows how to use Plugout to check a custom plugin file by specifying its path. This example checks the plugins.custom.yaml file.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/plugout/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngo run ./tools/plugout/ --plugin-file ./plugins/plugins.custom.yaml\n```\n\n----------------------------------------\n\nTITLE: Running Focused Smoke Tests for Chainlink\nDESCRIPTION: Executes smoke tests with a focus on a specific test file. This command allows targeting particular functionality during testing rather than running the full test suite.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\nmake test_smoke_simulated args=\"--focus-file=keeper_test.go\"\n```\n\n----------------------------------------\n\nTITLE: Creating Workflow Configuration in Go\nDESCRIPTION: This Go code snippet demonstrates how to create a temporary file for workflow configuration and populate it with necessary data for a Proof of Reserves workflow.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_19\n\nLANGUAGE: go\nCODE:\n```\nconfigFile, err := os.CreateTemp(\"\", \"config.json\")\nrequire.NoError(t, err, \"failed to create workflow config file\")\n\nworkflowConfig := PoRWorkflowConfig{\n  FeedID:          feedID,\n  URL:             \"https://api.real-time-reserves.verinumus.io/v1/chainlink/proof-of-reserves/TrueUSD\",\n  ConsumerAddress: feedsConsumerAddress.Hex(),\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Starknet OCR2 Cache TTL in TOML\nDESCRIPTION: Sets the time-to-live duration for the OCR2 cache in Starknet integration. After this duration, cached data is considered stale and will be refreshed.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_280\n\nLANGUAGE: toml\nCODE:\n```\nOCR2CacheTTL = '1m' # Default\n```\n\n----------------------------------------\n\nTITLE: Generating Code Coverage Reports for Functions\nDESCRIPTION: Creates a code coverage report using Foundry's forge coverage tool with the IR minimum flag. Requires proper configuration in foundry.toml to focus on the relevant contracts.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/functions/tests/v1_X/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nforge coverage --ir-minimum\n```\n\n----------------------------------------\n\nTITLE: Capability Flag Definition in Go\nDESCRIPTION: Go code for defining capability flags including a new Aptos capability.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_15\n\nLANGUAGE: go\nCODE:\n```\nconst (\n\tOCR3Capability          CapabilityFlag = \"ocr3\"\n\tCronCapability          CapabilityFlag = \"cron\"\n\tCustomComputeCapability CapabilityFlag = \"custom-compute\"\n\tWriteEVMCapability      CapabilityFlag = \"write-evm\"\n  WriteAptosCapability    CapabilityFlag = \"write-aptos\"               // <------------ New entry\n\n\t// Add more capabilities as needed\n)\n```\n\nLANGUAGE: go\nCODE:\n```\nif hasFlag(flags, WriteAptosCapability) {\n  writeAptosConfig := fmt.Sprintf(`\n    # Required for initializing the capability\n    [Aptos.Workflow]\n    # Configuration parameters\n    param_1 = \"%s\"\n    `,\n    \"some value\",\n  )\n  workerNodeConfig += writeAptosConfig\n}\n```\n\n----------------------------------------\n\nTITLE: Adjusting Gas Price Based on Congestion in Go\nDESCRIPTION: This snippet shows how gas price is adjusted based on network congestion levels. It applies a percentage increase to the base gas price, ranging from 10% for low congestion to 40% for very high congestion.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_18\n\nLANGUAGE: go\nCODE:\n```\ncase Congestion_Low:\n\treturn 1.10, nil\ncase Congestion_Medium:\n\treturn 1.20, nil\ncase Congestion_High:\n\treturn 1.30, nil\ncase Congestion_VeryHigh:\n\treturn 1.40, nil\n```\n\n----------------------------------------\n\nTITLE: Configuring TableName Settings in TOML\nDESCRIPTION: This snippet shows a TOML table configuration for 'TableName' with two fields: 'Bar' and 'TrickyField'. It includes example values and default settings for the table that holds settings for a specific purpose.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/config/docs/testdata/example.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[TableName]\nBar = 10 # Example\nTrickyField = true # Default\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Debugging Commands\nDESCRIPTION: Commands for checking pod status and logs in Kubernetes cluster.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs <POD_NAME>\n```\n\n----------------------------------------\n\nTITLE: Setting ChainID for Cosmos Network Identification\nDESCRIPTION: Configures the Chain ID for a Cosmos blockchain connection. This mandatory setting identifies the specific Cosmos chain being connected to.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_255\n\nLANGUAGE: toml\nCODE:\n```\nChainID = 'Malaga-420' # Example\n```\n\n----------------------------------------\n\nTITLE: Executing Gateway Client Command Example\nDESCRIPTION: Demonstrates how to run the script with command line arguments to connect to a functions gateway, specifying the gateway URL, DON ID, method, and message ID.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/gateway/client/README.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ngo run . -gateway_url https://01.functions-gateway.chain.link -don_id fun-avalanche-mainnet-2 -method secrets_list -message_id 123\n```\n\n----------------------------------------\n\nTITLE: Importing Chainlink CCIP Contracts in Solidity\nDESCRIPTION: Demonstrates how to import Chainlink CCIP contracts in a Solidity file. This example shows the import statement for the CCIPReceiver contract from the package.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/release/ccip/README.md#2025-04-21_snippet_2\n\nLANGUAGE: solidity\nCODE:\n```\nimport '@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol';\n```\n\n----------------------------------------\n\nTITLE: Fetching Multiple Blockhashes\nDESCRIPTION: Retrieves multiple blockhashes in a single transaction using the BatchBlockhashStore contract.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ngo run . batch-bhs-get -batch-bhs-address $BATCH_BHS_ADDRESS -block-numbers 10298742,10298741,10298740,10298739\n```\n\n----------------------------------------\n\nTITLE: Starting PostgreSQL Container with Docker for Chainlink Testing\nDESCRIPTION: Command to start a PostgreSQL 14 container with specific configuration for Chainlink tests. Sets up persistence via volume mounting and exposes the database on port 5432.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/ccip/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d --rm --name chainlink-postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_HOST_AUTH_METHOD=trust -v $HOME/chainlink-pg-data/:/var/lib/postgresql/data -p 5432:5432 postgres:14 postgres -N 500 -B 1024MB\n```\n\n----------------------------------------\n\nTITLE: Running Batch BHS Backwards Mode in Go\nDESCRIPTION: This command demonstrates how to execute the Batch BHS backwards mode script. It specifies the batch BHS address, start block, end block, and batch size for storing block hashes in reverse chronological order.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_12\n\nLANGUAGE: go\nCODE:\n```\ngo run . batch-bhs-backwards -batch-bhs-address $BATCH_BHS_ADDRESS -start-block 25814538 -end-block 25811350 -batch-size 50\n```\n\n----------------------------------------\n\nTITLE: Setting GasLimitDefault for Workflow Transactions\nDESCRIPTION: Sets the default gas limit for workflow-related transactions. This ensures sufficient gas is allocated for contract interactions to complete successfully.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_253\n\nLANGUAGE: toml\nCODE:\n```\nGasLimitDefault = 400_000 # Default\n```\n\n----------------------------------------\n\nTITLE: L2EP Test File Structure Convention\nDESCRIPTION: Hierarchical structure of L2EP test files, showing the organization with a base contract inherited from L2EPTest and multiple child contracts containing test functions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/l2ep/README.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nTestFile.t.sol\n  |\n  |--- Base Contract (inherits L2EPTest contract)\n       |\n       |--- Child Contract 1 (inherits base contract)\n       |     |\n       |     |--- Test Function\n       |     |\n       |     |--- ... \n       |\n       |\n       |--- Child Contract 2 (inherits base contract)\n       |     |\n       |     |--- Test Function\n       |     |\n       |     |--- ... \n       |\n       |\n       ...\n```\n\n----------------------------------------\n\nTITLE: Job Distributor Image Configuration\nDESCRIPTION: TOML configuration for Job Distributor image with tag specification requirements.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n[jd]\n  image = \"jd-test-1:my-awesome-tag\"\n```\n\nLANGUAGE: toml\nCODE:\n```\n[jd]\n  image = \"jd-test-1\"  # This will fail\n```\n\n----------------------------------------\n\nTITLE: Setting Default FieldName in TOML\nDESCRIPTION: This snippet demonstrates a global TOML configuration for 'FieldName' with a default string value of 'foo'. Every field must be documented with a comment that begins with the field name.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/config/docs/testdata/example.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nFieldName = 'foo' # Default\n```\n\n----------------------------------------\n\nTITLE: Running gomod-local-update in Shell\nDESCRIPTION: Shows how to run the gomod-local-update command from the root of a go module directory.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/gomod-local-update/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngomod-local-update\n```\n\n----------------------------------------\n\nTITLE: Configuring EIP1559FeeCapBufferBlocks Setting in TOML\nDESCRIPTION: Advanced setting that controls buffer blocks for current base fee in EIP-1559 transactions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_208\n\nLANGUAGE: toml\nCODE:\n```\nEIP1559FeeCapBufferBlocks = 13 # Example\n```\n\n----------------------------------------\n\nTITLE: Devspace Deployment Commands\nDESCRIPTION: Commands for deploying various components using devspace in a local Kubernetes environment.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nCHAIN_ID=<CHAIN_ID> devspace run deploy-custom-geth-chain\n```\n\nLANGUAGE: bash\nCODE:\n```\ndevspace run deploy-jd\n```\n\nLANGUAGE: bash\nCODE:\n```\nDON_TYPE=<type of don> DON_NODE_COUNT=<number of worker nodes> DON_BOOT_NODE_COUNT=<number of bootstrap nodes> devspace run deploy-don\n```\n\n----------------------------------------\n\nTITLE: Visualizing StartStopOnce State Machine with Mermaid Diagram\nDESCRIPTION: This Mermaid diagram illustrates the state transitions of the StartStopOnce component. It shows the flow from Unstarted through Starting and Started states, to Stopping and final states including Stopped, StartFailed, and StopFailed.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/utils/README.md#2025-04-21_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nstateDiagram-v2\n    [*] --> Unstarted\n    Unstarted --> Starting : StartOnce()\n    Starting --> StartFailed\n    Starting --> Started\n    Started --> Stopping : StopOnce()\n    Stopping --> Stopped\n    Stopping --> StopFailed\n    StartFailed --> [*]\n    Stopped --> [*]\n    StopFailed --> [*]\n```\n\n----------------------------------------\n\nTITLE: Viewing Generated Chainlink Docker Image Reference\nDESCRIPTION: Example output showing the Docker image reference after building the Chainlink image with plugins. This reference is used to configure the test environment.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/LOAD_TEST_README.md#2025-04-21_snippet_1\n\nLANGUAGE: dockerfile\nCODE:\n```\npushing manifest for ***.dkr.ecr.***.amazonaws.com/chainlink:f2addca86d976ffe0e11f36e60d3b91afcc0b44f-plugins@sha256:e21cdbeb35c81707dbf267fff19b25b6ea8148a5b1e7679bd3ae450586e82e13\n```\n\n----------------------------------------\n\nTITLE: Running L2EP Foundry Tests\nDESCRIPTION: Shell commands for running Foundry tests for the L2EP contracts. Includes commands for running all tests or specific tests by path or contract name.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/l2ep/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n# Assuming you are currently in the /chainlink directory\ncd ./contracts\n```\n\nLANGUAGE: sh\nCODE:\n```\nFOUNDRY_PROFILE=l2ep forge test -vvv\n```\n\nLANGUAGE: sh\nCODE:\n```\nFOUNDRY_PROFILE=l2ep forge test -vvv --match-path ./src/v0.8/l2ep/test/v1_0_0/scroll/ScrollSequencerUptimeFeed.t.sol\n```\n\nLANGUAGE: sh\nCODE:\n```\nFOUNDRY_PROFILE=l2ep forge test -vvv --match-contract ScrollSequencerUptimeFeed\n```\n\nLANGUAGE: sh\nCODE:\n```\n# Export foundry profile\nexport FOUNDRY_PROFILE=l2ep\n\n# Run all tests\nforge test -vvv\n\n# Run all tests and generate a gas snapshot\nmake snapshot\n```\n\nLANGUAGE: sh\nCODE:\n```\nforge coverage\n```\n\n----------------------------------------\n\nTITLE: Running Smoke Tests with Go Test Command\nDESCRIPTION: Basic command to run a specific smoke test using the Go test framework. The TestName parameter should be replaced with the actual test name you want to run.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo test -v -run ${TestName}\n```\n\n----------------------------------------\n\nTITLE: Setting ObservationGracePeriod for OCR Timing\nDESCRIPTION: Configures the grace period for observations in the OCR protocol. This affects how long the protocol waits for observations from oracles before proceeding with aggregation.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_241\n\nLANGUAGE: toml\nCODE:\n```\nObservationGracePeriod = '1s' # Default\n```\n\n----------------------------------------\n\nTITLE: Organizing Test Cases with Success and Revert Groups in Solidity\nDESCRIPTION: Demonstrates how to structure tests within each test contract by grouping success cases first, followed by revert cases with a clear comment separator.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/ccip/test/README.md#2025-04-21_snippet_2\n\nLANGUAGE: solidity\nCODE:\n```\ncontract SomeOffRamp_firstFunction {\n  function testZeroValueSuccess() public {\n    ...\n  }\n\n    ...\n\n\n  // Reverts\n\n  function testOwnerReverts() public {\n    // test that an ownable function reverts when not called by the owner\n    ...\n  }\n\n  ...\n\n}\n```\n\n----------------------------------------\n\nTITLE: Forcing Database Creation\nDESCRIPTION: Commands to force database creation when encountering access conflicts\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nsource .dbenv\nmake testdb-force\n```\n\n----------------------------------------\n\nTITLE: Installing Chainlink Core in Go\nDESCRIPTION: Demonstrates how to build and install the Chainlink Core binary, renaming it from 'core' to 'chainlink' and placing it in the Go path.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo build -o $GOPATH/bin/chainlink .\n```\n\n----------------------------------------\n\nTITLE: Visual Studio Code Launch Configuration for Capability Test\nDESCRIPTION: JSON configuration for launching the Capability Test in Visual Studio Code, including environment variables and test arguments.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"Launch Capability Test\",\n  \"type\": \"go\",\n  \"request\": \"launch\",\n  \"mode\": \"test\",\n  \"program\": \"${workspaceFolder}/system-tests/tests/smoke/cre\",\n  \"env\": {\n    \"CTF_CONFIGS\": \"environment-one-don.toml\",\n    \"PRIVATE_KEY\": \"ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\",\n    \"GIST_WRITE_TOKEN\": \"xxxx\"\n  },\n  \"args\": [\n    \"-test.run\",\n    \"TestCRE_OCR3_PoR_Workflow_SingleDon_MockedPrice\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing gomod-local-update Go Tool\nDESCRIPTION: Demonstrates how to install the gomod-local-update tool using the go install command. The binary will be placed in the $GOPATH/bin directory.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/gomod-local-update/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngo install ./tools/gomod-local-update/cmd/gomod-local-update\n```\n\n----------------------------------------\n\nTITLE: Configuring Starknet Feeder URL in TOML\nDESCRIPTION: Sets the URL for the Starknet feeder service that provides transaction metadata not available through the standard RPC. This is required for complete transaction information.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_277\n\nLANGUAGE: toml\nCODE:\n```\nFeederURL = 'http://feeder.url' # Example\n```\n\n----------------------------------------\n\nTITLE: Incomplete Node Configuration in TOML\nDESCRIPTION: Example of an incomplete nodeset configuration where the number of nodespecs does not match the node count. This configuration is invalid as the number of nodespecs must equal the node count.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\n[[nodesets]]\n  nodes = 5\n  override_mode = \"each\"\n\n  [[nodesets.node_specs]]\n\n    [nodesets.node_specs.node]\n      image = \"localhost:5001/chainlink:112b9323-plugins-cron\"\n      user_config_overrides = \"\"\"\n      [Feature]\n\t\t\tLogPoller = true\n\n\t\t\t[OCR2]\n\t\t\tEnabled = true\n\t\t\tDatabaseTimeout = '1s'\n\n\t\t\t[P2P.V2]\n\t\t\tEnabled = true\n\t\t\tListenAddresses = ['0.0.0.0:5001']\n      \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Viewing Service Logs\nDESCRIPTION: Commands to view logs for specific services or all services in the Docker Compose setup.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/docker/README.md#2025-04-21_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n./compose logs node # shows the logs of the node service\n```\n\nLANGUAGE: sh\nCODE:\n```\n./compose logs # shows the combined logs of all running services\n```\n\n----------------------------------------\n\nTITLE: Organizing Test Files by Contract Function in Solidity\nDESCRIPTION: Shows how to structure a test file with separate test contracts for each function in the original contract, following the recommended Foundry testing pattern.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/ccip/test/README.md#2025-04-21_snippet_1\n\nLANGUAGE: solidity\nCODE:\n```\ncontract SomeOffRamp_constructor {\n  // constructor state setup tests here\n}\n\ncontract SomeOffRamp_firstFunction {\n  // first function tests here\n}\n\ncontract SomeOffRamp_theNextFunction {\n  // tests here too...\n}\n\ncontract SomeOffRamp_anInternalFunction {\n  // This function will require a helper contract to expose it.\n}\n```\n\n----------------------------------------\n\nTITLE: Running Smoke Tests for Chainlink\nDESCRIPTION: Executes the smoke tests with a focus on a specific test file. This command runs the tests in a simulated environment using the previously built and pushed Chainlink image.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncd ~/go/src/github.com/chainlink\nmake test_smoke_simulated args=\"--focus-file=auto_ocr_test.go\"\n```\n\n----------------------------------------\n\nTITLE: Setting NewHeadsPollInterval for Block Polling\nDESCRIPTION: Defines the interval for polling new blocks using HTTP client instead of WebSocket subscription. Setting to 0 disables HTTP polling in favor of WebSocket feeds.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_217\n\nLANGUAGE: toml\nCODE:\n```\nNewHeadsPollInterval = '0s' # Default\n```\n\n----------------------------------------\n\nTITLE: Requesting Randomness from VRF V2+\nDESCRIPTION: This Go command requests random words from the VRF V2+ service using the specified consumer address, subscription ID, and key hash.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ngo run . eoa-request --consumer-address=$CONSUMER --sub-id=$SUB_ID --key-hash=$KEY_HASH --num-words 1\n```\n\n----------------------------------------\n\nTITLE: Encoding TOML Config to Base64 for Environment Variable\nDESCRIPTION: Command to encode a TOML configuration file to base64 and set it as an environment variable for test configuration override.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport BASE64_CONFIG_OVERRIDE=$(base64 -i <path-to-override-toml-file>)\n```\n\n----------------------------------------\n\nTITLE: Configuring CRIB Team Input in TOML\nDESCRIPTION: TOML configuration for providing cost attribution details when using AWS with CRIB.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[infra.crib.team_input]\nteam = \"your team\"\nproduct = \"name of the product you are working on\"\ncost_center = \"crib\"\ncomponent = \"crib\"\n```\n\n----------------------------------------\n\nTITLE: Setting Base64 Config Override for Go Test\nDESCRIPTION: Example of how to set the BASE64_CONFIG_OVERRIDE environment variable for running Go tests with custom configurations.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/testconfig/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nBASE64_CONFIG_OVERRIDE=$(cat ./testconfig/overrides.toml | base64) go test <test args>\n```\n\n----------------------------------------\n\nTITLE: Basic Chain Configuration Settings\nDESCRIPTION: Core configuration parameters for blockchain interaction including transaction timeout, gas settings, and polling periods\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_259\n\nLANGUAGE: toml\nCODE:\n```\nBlocksUntilTxTimeout = 30\nConfirmPollPeriod = '1s'\nFallbackGasPrice = '0.015'\nGasToken = 'ucosm'\nGasLimitMultiplier = '1.5'\nMaxMsgsPerBatch = 100\nOCR2CachePollPeriod = '4s'\nOCR2CacheTTL = '1m'\nTxMsgTimeout = '10m'\n```\n\n----------------------------------------\n\nTITLE: Base64 Keyfile Configuration\nDESCRIPTION: TOML configuration for using base64-encoded keyfile from environment variable\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n[Seth]\nkeyfile_source = \"base64_env\"\n```\n\n----------------------------------------\n\nTITLE: Configuring WASP Generator for Log Poller Tests in Go\nDESCRIPTION: Sets up a configuration for Log Poller tests using the WASP generator, which provides more sophisticated load testing capabilities. This config specifies RPS (requests per second), duration, and timeouts for load generation.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/LOG_POLLER.md#2025-04-21_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\n\tcfg := logpoller.Config{\n\t\tGeneral: &logpoller.General{\n\t\t\tGenerator:      logpoller.GeneratorType_Looped,\n\t\t\tContracts:      2,\n\t\t\tEventsPerTx:    4,\n\t\t\tUseFinalityTag: false,\n\t\t},\n\t\tWasp: &logpoller.WaspConfig{\n\t\t\tLoad: &logpoller.Load{\n\t\t\t\tRPS:                   10,                                              # requests per second\n\t\t\t\tLPS:                   0,                                               # logs per second \n\t\t\t\tRateLimitUnitDuration: models.MustNewDuration(5 * time.Minutes),        # for how long the load should be limited (ramp-up period)\n\t\t\t\tDuration:              models.MustNewDuration(5 * time.Minutes),        # how long to generate the load for\n\t\t\t\tCallTimeout:           models.MustNewDuration(5 * time.Minutes),        # how long to wait for a single call to finish\n\t\t\t},\n\t\t},\n\t}\n\n    eventsToEmit := []abi.Event{}\n\tfor _, event := range logpoller.EmitterABI.Events {\n\t\teventsToEmit = append(eventsToEmit, event)\n\t}\n\n\tcfg.General.EventsToEmit = eventsToEmit\n```\n\n----------------------------------------\n\nTITLE: Using Local Chainlink Testing Framework in Integration Tests\nDESCRIPTION: Configures the Go module to use a local copy of the chainlink-testing-framework instead of the remote version. This allows testing local changes in both repositories together.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ngo mod edit -replace github.com/smartcontractkit/chainlink-testing-framework=~/go/src/github.com/chainlink-testing-framework\n```\n\n----------------------------------------\n\nTITLE: Visualizing Chainlink Automation Contract Delegation Chain with Mermaid\nDESCRIPTION: A Mermaid diagram visualizing the delegatecall chain from the Master contract to multiple Logic contracts. It shows how the system uses delegatecall to maintain state context while expanding code capacity through multiple contracts.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/automation/v2_1/README.md#2025-04-21_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph LR\n  Master -- delegatecall --> la[Logic A]\n  la -- delegatecall --> lb[Logic B]\n  lb -. delegatecall .-> lx[Logic X]\n```\n\n----------------------------------------\n\nTITLE: Running Specific Functions Test Files\nDESCRIPTION: Executes a specific test file for Functions with verbose output using the Forge testing framework. The command requires specifying the path to the target test file.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/functions/tests/v1_X/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nforge test -vvv --mp src/v0.8/functions/tests/v1_X/[File Name].t.sol\n```\n\n----------------------------------------\n\nTITLE: Configuring TransactionPercentile Setting in TOML\nDESCRIPTION: Specifies the percentile for gas price selection from block history. Must be between 0-100.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_209\n\nLANGUAGE: toml\nCODE:\n```\nTransactionPercentile = 60 # Default\n```\n\n----------------------------------------\n\nTITLE: Storing Multiple Blockhashes with BatchBlockhashStore\nDESCRIPTION: This Go command stores multiple blockhashes in a single transaction using the BatchBlockhashStore contract.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\ngo run . batch-bhs-store -batch-bhs-address $BATCH_BHS_ADDRESS -block-numbers 10298742,10298741,10298740,10298739\n```\n\n----------------------------------------\n\nTITLE: Git Command to Ignore Changes to Secrets File\nDESCRIPTION: Git command to prevent tracking changes to the secrets file, ensuring sensitive information doesn't get committed to the repository.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit update-index --skip-worktree <path-to-secrets-file>\n```\n\n----------------------------------------\n\nTITLE: Configuring Rate Limiting in TOML\nDESCRIPTION: Rate limiting settings for authenticated and unauthenticated API requests.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n[WebServer.RateLimit]\nAuthenticated = 1000\nAuthenticatedPeriod = '1m'\nUnauthenticated = 5\nUnauthenticatedPeriod = '20s'\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Logs for Troubleshooting\nDESCRIPTION: Sets the WASP log level to debug for more verbose logging output during test execution, which helps in troubleshooting issues.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/functions/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport WASP_LOG_LEVEL=debug\n```\n\n----------------------------------------\n\nTITLE: Configuring Advanced TrickyField in TOML\nDESCRIPTION: This snippet shows the configuration for 'TrickyField', an advanced setting within the 'TableName' table. It includes a default value and is marked as an advanced option that should only be changed by users who understand its implications.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/config/docs/testdata/example.md#2025-04-21_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\nTrickyField = true # Default\n```\n\n----------------------------------------\n\nTITLE: Configuring CRIB Settings in TOML\nDESCRIPTION: TOML configuration for CRIB-specific settings, including namespace, folder location, and provider selection.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[infra.crib]\n  namespace = \"crib-local\"\n  folder_location = \"$(pwd of crib repository)/deployments/cre\"\n  # Choose either \"aws\" or \"kind\"\n  provider = \"kind\"\n```\n\n----------------------------------------\n\nTITLE: Test Output Log with Pass/Fail Status\nDESCRIPTION: Test execution log showing hierarchical test results with pass/fail status. Shows test case names prefixed with 'ok' for passed tests and '!' for failed tests, along with associated error messages for failures.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/web/testdata/health.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nok foo\n!  foo.bar\n\texample error message\nok foo.bar.1\nok foo.bar.1.A\nok foo.bar.1.B\n!  foo.bar.2\n\terror:\n\tthis is a multi-line error:\n\tnew line:\n\toriginal error\n!  foo.bar.2.A\n\tfailure!\nok foo.bar.2.B\nok foo.baz\n```\n\n----------------------------------------\n\nTITLE: Accessing Container Logs Directly with Docker\nDESCRIPTION: Commands to list Docker containers and view logs directly using the Docker CLI when compose logs are hidden.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/docker/README.md#2025-04-21_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\n# List docker instances\ndocker ps\n# CONTAINER ID        IMAGE                     COMMAND                  CREATED             STATUS              PORTS                                                                                                 NAMES\n# 41410c9d79d8        smartcontract/chainlink   \"chainlink node star…\"   2 minutes ago       Up 2 minutes        0.0.0.0:6688->6688/tcp                                                                                                chainlink-node\n# f7e657e101d8        smartcontract/devnet      \"/bin/parity --confi…\"   47 hours ago        Up 2 minutes        5001/tcp, 8080/tcp, 8082-8083/tcp, 8180/tcp, 8546/tcp, 30303/tcp, 0.0.0.0:8545->8545/tcp, 30303/udp   parity\n\n# Follow logs using name of container\ndocker logs -f chainlink-node\n```\n\n----------------------------------------\n\nTITLE: Visualizing Contract Delegation Flow with Mermaid\nDESCRIPTION: This diagram illustrates the delegation flow between the root contract and multiple logic contracts using Mermaid graph syntax. It shows how the root contract delegates calls to Logic A, which then delegates to Logic B, and so on.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/automation/README.md#2025-04-21_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph LR\n  Root -- delegatecall --> la[Logic A]\n  la -- delegatecall --> lb[Logic B]\n  lb -. delegatecall .-> lx[Logic Z]\n```\n\n----------------------------------------\n\nTITLE: Running Plugout in Update Mode (Bash)\nDESCRIPTION: Runs the Plugout tool in update mode to automatically update the gitRef values in plugin YAML files to match go.mod versions. This command modifies the YAML files to ensure consistency with go.mod.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/plugout/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngo run ./tools/plugout/ --update\n```\n\n----------------------------------------\n\nTITLE: Storing Multiple Blockhashes\nDESCRIPTION: Stores multiple blockhashes in a single transaction using the BatchBlockhashStore contract.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\ngo run . batch-bhs-store -batch-bhs-address $BATCH_BHS_ADDRESS -block-numbers 10298742,10298741,10298740,10298739\n```\n\n----------------------------------------\n\nTITLE: Ephemeral Keys Configuration\nDESCRIPTION: TOML configuration for setting up ephemeral keys in Seth\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[Seth]\nephemeral_addresses_number = 10\n```\n\n----------------------------------------\n\nTITLE: Pulling Docker Registry Image for CRIB\nDESCRIPTION: Bash command for manually downloading the Docker registry image required when using the 'kind' provider in CRIB.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull registry:2\n```\n\n----------------------------------------\n\nTITLE: Deploying Grafana Dashboard\nDESCRIPTION: Commands to deploy a Grafana dashboard for monitoring load tests. Requires Grafana credentials and configuration parameters including data source and dashboard details.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/vrfv2plus/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport GRAFANA_URL=...\nexport GRAFANA_TOKEN=...\nexport DATA_SOURCE_NAME=grafanacloud-logs\nexport DASHBOARD_FOLDER=LoadTests\nexport DASHBOARD_NAME=${JobTypeName, for example WaspVRFv2Plus}\n\ngo run dashboard.go\n```\n\n----------------------------------------\n\nTITLE: Defining Required Bar Setting in TOML\nDESCRIPTION: This snippet shows a required TOML configuration setting for 'Bar' with a value of 7.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/config/docs/testdata/example.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nBar = 7 # Required\n```\n\n----------------------------------------\n\nTITLE: Setting Finalized Block Offset in TOML\nDESCRIPTION: Configures an offset from the finalized block to use when utilizing finality tags. This allows for additional safety margin when considering blocks as finalized.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_270\n\nLANGUAGE: toml\nCODE:\n```\nFinalizedBlockOffset = 0 # Default\n```\n\n----------------------------------------\n\nTITLE: Running All Tests in a Test Suite with Config Overrides\nDESCRIPTION: Command to run all tests in a specific product test suite with custom configuration overrides from an overrides.toml file.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nBASE64_CONFIG_OVERRIDE=$(cat ./testconfig/overrides.toml | base64) go test -v -p 1 ./smoke/<product>_test.go\n```\n\n----------------------------------------\n\nTITLE: Running CCIP Revert Reason CLI Help Command\nDESCRIPTION: Command to display all available CLI commands for the CCIP revert reason decoder tool.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/ccip/revert-reason/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo run main.go --help\n```\n\n----------------------------------------\n\nTITLE: Installing Operator UI Assets with Go Script\nDESCRIPTION: This script downloads and installs the specified tag of Operator UI from the external repository into the Chainlink node's web assets directory. The script takes one argument: the path from the current directory to the root of the repository.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/operator_ui/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# The argument is the path from the this directory to the root of the repository \ngo run ./install.go .. \n```\n\n----------------------------------------\n\nTITLE: Generating Mocks for Data Streams Testing in Chainlink\nDESCRIPTION: Command for generating contract wrapper mocks using the llo-feeds Foundry profile. This is used after adding mock contracts to the test directory and registering them in the compile script.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/deployment/data-streams/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake FOUNDRY_PROFILE=llo-feeds wrappers\n```\n\n----------------------------------------\n\nTITLE: Storing and Verifying Multiple Blockhashes\nDESCRIPTION: Stores and verifies multiple blockhashes, potentially further back than 256 blocks, using the BatchBlockhashStore contract.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ngo run . batch-bhs-storeVerify -batch-bhs-address $BATCH_BHS_ADDRESS -num-blocks 25 -start-block 10298739\n```\n\n----------------------------------------\n\nTITLE: Loading Smart Contracts with Seth ContractLoader\nDESCRIPTION: Example showing how to load a smart contract using Seth's ContractLoader helper struct, which automatically manages ABI caching for transaction decoding.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_15\n\nLANGUAGE: go\nCODE:\n```\nfunc LoadOffchainAggregator(client *seth.Client, contractAddress common.Address) (offchainaggregator.OffchainAggregator, error) {\n\t// initialize contract loader with the generic type of the Geth contract wrapper\n\tloader := seth.NewContractLoader[offchainaggregator.OffchainAggregator](client)\n\t// call load function with contract name, address, ABI getter function and Geth wrapper constructor function\n\tocr, err := loader.LoadContract(\"OffChainAggregator\", contractAddress, offchainaggregator.OffchainAggregatorMetaData.GetAbi, offchainaggregator.NewOffchainAggregator)\n\tif err != nil {\n\t\treturn EthereumOffchainAggregator{}, fmt.Errorf(\"failed to instantiate OCR instance: %w\", err)\n\t}\n }\n```\n\n----------------------------------------\n\nTITLE: Specifying Solidity Version for Custom Revert Reasons\nDESCRIPTION: This code snippet demonstrates how to specify the Solidity version in a smart contract to ensure support for custom revert reasons. It uses version 0.8.4 or higher, which is required for detailed error messages.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_19\n\nLANGUAGE: solidity\nCODE:\n```\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n```\n\n----------------------------------------\n\nTITLE: Configuring RPC Latency Chaos Test\nDESCRIPTION: TOML configuration for running CCIP chaos tests with realistic RPC latency. Sets chaos mode to 1 and configures latency and jitter values.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/ccip/README.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[Load.CCIP.Load]\n# 0 - no chaos, 1 - rpc latency, 2 - full chaos suite\nChaosMode = 1\n\n# works only with Load.CCIP.ChaosMode = 1\nRPCLatency = \"400ms\"\nRPCJitter = \"50ms\"\n```\n\n----------------------------------------\n\nTITLE: Setting Node Environment Variables in Go\nDESCRIPTION: Example of programmatically setting environment variables for a Dockerized test using Go.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/testconfig/README.md#2025-04-21_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nenvs := map[string]string{\n    \"CL_LOOPP_HOSTNAME\": \"hostname\",\n}\n\nnodeEnvVars := test_env.WithNodeEnvVars(envs)\n\ntestEnv, err := test_env.NewCLTestEnvBuilder().\n    WithTestInstance(t).\n    WithTestConfig(&config).\n    WithPrivateEthereumNetwork(privateNetwork.EthereumNetworkConfig).\n    WithMockAdapter().\n    WithCLNodes(clNodeCount).\n    WithCLNodeOptions(nodeEnvVars).\n    WithFunding(big.NewFloat(.1)).\n    WithStandardCleanup().\n    WithSeth().\n    Build()\n```\n\n----------------------------------------\n\nTITLE: Soneium Sepolia Configuration\nDESCRIPTION: Configuration for Soneium testnet on Sepolia (chain ID 1946) with settings optimized for testing and development environments.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_105\n\nLANGUAGE: toml\nCODE:\n```\nAutoCreateKey = true\nBlockBackfillDepth = 10\nBlockBackfillSkip = false\nChainType = 'optimismBedrock'\nFinalityDepth = 200\nFinalityTagEnabled = true\nLinkContractAddress = '0x7ea13478Ea3961A0e8b538cb05a9DF0477c79Cd2'\n# ... more configuration\n```\n\n----------------------------------------\n\nTITLE: Running CCIP Smoke Tests with Default Configuration\nDESCRIPTION: Make command to run CCIP smoke tests with default TOML settings, requiring only the secrets configuration file.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/README.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmake test_smoke_ccip_default testname=TestSmokeCCIPForBidirectionalLane secret_toml=\"<the toml file with secrets string>\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Dashboard in Bash\nDESCRIPTION: This snippet shows how to deploy a dashboard using environment variables for Grafana configuration and running a Go script.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nexport GRAFANA_URL=...\nexport GRAFANA_TOKEN=...\nexport DATA_SOURCE_NAME=grafanacloud-logs\nexport DASHBOARD_FOLDER=LoadTests\nexport DASHBOARD_NAME=${JobTypeName, for example WaspVRFv2}\n\ngo run dashboard.go\n```\n\n----------------------------------------\n\nTITLE: Debug Log Trigger Upkeep\nDESCRIPTION: Command to debug a log trigger upkeep using transaction hash and log index\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/DEBUGGING.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngo run main.go keeper debug UPKEEP_ID TX_HASH LOG_INDEX\n```\n\n----------------------------------------\n\nTITLE: Gas Price Adjustment Factor Calculation\nDESCRIPTION: Function showing how gas price adjustment factors are calculated based on transaction priority levels.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_17\n\nLANGUAGE: go\nCODE:\n```\n\tcase Priority_Fast:\n\t\treturn 1.2\n\tcase Priority_Standard:\n\t\treturn 1.0\n\tcase Priority_Slow:\n\t\treturn 0.8\n```\n\n----------------------------------------\n\nTITLE: Creating Environment File\nDESCRIPTION: Command to create a .env file from the example template for debugging configuration\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/DEBUGGING.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.debugging.example .env\n```\n\n----------------------------------------\n\nTITLE: Cleaning Docker Compose Resources\nDESCRIPTION: Command to remove all containers, volumes, and networks created by the compose setup.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/docker/README.md#2025-04-21_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n./compose clean\n```\n\n----------------------------------------\n\nTITLE: Configuring PoR Workflow Source Code Location in TOML\nDESCRIPTION: TOML configuration for specifying the location of the Proof of Reserves (PoR) workflow source code repository.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[workflow_config]\nworkflow_folder_location = \"/Users/my-user/repositories/proof-of-reserves-workflow-e2e-test\"\n```\n\n----------------------------------------\n\nTITLE: Executing Load Test with Chaos\nDESCRIPTION: Command to run the CCIP load test with chaos testing enabled. Specifies a longer timeout due to the extended duration of chaos tests.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/ccip/README.md#2025-04-21_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ngo test -run ^TestCCIPLoad_RPS$ -v -timeout 12h\n```\n\n----------------------------------------\n\nTITLE: Work-in-Progress Parameters for Existing VRF Contracts\nDESCRIPTION: Work-in-progress parameters that will eventually allow using existing BHS, Coordinator, and Batch addresses but are not currently functional.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/common/vrf/setup-envs/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n   --bhs-address <address> \\\n   --batch-bhs-address <address> \\\n   --coordinator-address <address> \\\n   --batch-coordinator-address <address> \n```\n\n----------------------------------------\n\nTITLE: Defining Chainlink Changeset Function Type\nDESCRIPTION: Defines the core changeset function type that describes changes to be applied to an environment. The function takes an Environment and configuration interface as inputs and returns a ChangesetOutput and potential error.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/deployment/README.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype ChangeSet func(e Environment, config interface{}) (ChangesetOutput, error)\n```\n\n----------------------------------------\n\nTITLE: Building Job Distributor Docker Image\nDESCRIPTION: Bash command for building the Job Distributor Docker image locally, which is required for running tests.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t job-distributor:0.9.0 -f e2e/Dockerfile.e2e .\n```\n\n----------------------------------------\n\nTITLE: Configuring NonceTooHigh Regex Pattern for EVM Error Handling\nDESCRIPTION: Sets a regex pattern to identify nonce too high errors from EVM nodes. This helps the Chainlink node handle cases where transaction sequence is ahead of what the blockchain expects.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_221\n\nLANGUAGE: toml\nCODE:\n```\nNonceTooHigh = '(: |^)nonce too high' # Example\n```\n\n----------------------------------------\n\nTITLE: Defining Test-Specific Configurations in TOML\nDESCRIPTION: Examples of defining test-specific configurations for different products and test types.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/testconfig/README.md#2025-04-21_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[TestLogPollerManyFiltersFinalityTag.LogPoller.General]\ncontracts = 300\n\n[Soak.VRFv2.Common]\ncancel_subs_after_test_run = true\n\n[Load.OCR2]\n[Load.OCR2.Common]\neth_funds = 3\n```\n\n----------------------------------------\n\nTITLE: Creating CSV Structure for CCIP Message Batch Execution in Python\nDESCRIPTION: Example CSV format for the batchrun.py script showing the required structure with message IDs and transaction hashes. The CSV should have a header row followed by data rows with message ID and transaction hash pairs.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/ccip/manual-execution/batch_runner/README.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n\"message_id\",\"transaction_hash\"\n0x1e221l7db3f193d19353d42e1bcece771e7edar57149a7f30afd31r8aa783e9a,0x03c88qfd30ar54f36a353262a67362838r52029a47h2a31141a0430bda937ba2\n0x1e221l7db3f193d19353d42e1bcece771e7edar57149a7f30afd31r8aa783e9a,0x03c88qfd30ar54f36a353262a67362838r52029a47h2a31141a0430bda937ba2\n0x1e221l7db3f193d19353d42e1bcece771e7edar57149a7f30afd31r8aa783e9a,0x03c88qfd30ar54f36a353262a67362838r52029a47h2a31141a0430bda937ba2\n0x1e221l7db3f193d19353d42e1bcece771e7edar57149a7f30afd31r8aa783e9a,0x03c88qfd30ar54f36a353262a67362838r52029a47h2a31141a0430bda937ba2\n```\n\n----------------------------------------\n\nTITLE: Setting BlockRate for Cosmos Block Time Estimation\nDESCRIPTION: Configures the estimated average time between blocks on the Cosmos chain. This helps the node calculate timeouts and polling intervals appropriately.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_258\n\nLANGUAGE: toml\nCODE:\n```\nBlockRate = '6s' # Default\n```\n\n----------------------------------------\n\nTITLE: Modifying Docker Compose Build Options\nDESCRIPTION: Environment variable to use default Docker Compose build configuration to reduce resource usage.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/docker/README.md#2025-04-21_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nexport DOCKER_COMPOSE_BUILD_OPTS=\"\"\n```\n\n----------------------------------------\n\nTITLE: Ethereum Key Specific Gas Configuration\nDESCRIPTION: TOML configuration example for specifying maximum gas price for a specific Ethereum key, which needs to be updated in infrastructure deployment scripts.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/common/vrf/setup-envs/README.md#2025-04-21_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n[[EVM.KeySpecific]]\nKey = '<eth key address>'\nGasEstimator.PriceMax = '30 gwei'\n```\n\n----------------------------------------\n\nTITLE: VRF Password Configuration\nDESCRIPTION: Password setting for the VRF (Verifiable Random Function) keys used by the Chainlink node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\nVRF = \"VRF_pass\" # Example\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up CRE Resources\nDESCRIPTION: Command for manually cleaning up resources if the environment encounters unexpected errors during startup. Removes all containers with the 'ctf' label and their associated volumes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\nctf d rm\n```\n\n----------------------------------------\n\nTITLE: Configuring L2FeeTooHigh Regex Pattern for Layer 2 Error Handling\nDESCRIPTION: Sets a regex pattern to identify L2-specific fee too high errors. This helps handle cases where calculated fees exceed limits on Layer 2 networks.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_229\n\nLANGUAGE: toml\nCODE:\n```\nL2FeeTooHigh = '(: |^)l2 fee too high' # Example\n```\n\n----------------------------------------\n\nTITLE: Configuring gomod-local-update Command Line Flags in Shell\nDESCRIPTION: Lists the optional command line flags for the gomod-local-update tool, including organization name, repository name, git remote, branch trunk, and dry run option.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/gomod-local-update/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nOptional:\n  -org-name       Organization name (default: smartcontractkit)\n  -repo-name      Repository name (default: chainlink)\n  -repo-remote    Git remote to use (default: origin)\n  -branch-trunk   Branch to get SHA from (default: develop)\n  -dry-run        Preview changes without applying them (default: false)\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for VRF Consumer\nDESCRIPTION: Export required environment variables including ETH endpoint, chain ID, private key, LINK address, coordinator address and key hash for interacting with VRF consumer\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv1/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nexport ETH_URL=<YOUR ETH URL>\nexport ETH_CHAIN_ID=<YOUR CHAIN ID>\nexport ACCOUNT_KEY=<YOUR PRIVATE KEY>\nexport LINK=<LINK ADDRESS>\nexport COORDINATOR=<COORDINATOR ADDRESS>\nexport KEY_HASH=<KEY HASH>\n```\n\n----------------------------------------\n\nTITLE: Extracting and Formatting New Slither Issues in Markdown\nDESCRIPTION: Instructions for comparing two Slither reports, identifying new issues, and formatting them as a markdown document with proper headings, bullet points, and links to the problematic code.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/scripts/ci/prompt-difference.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**New Issues**\n\nProvide a bullet point summary of new issues that were introduced in the second report. If a given issue is not present in first report, but is present in the second one, it is considered a new issue. If the count for given issue type is higher in the second report than in the first one, it is considered a new issue.\nFor each issue include original description text from the report together with severity level, issue ID, line number and a link to problematic line in the code.\nGroup the issues by their type, which is defined as Heading 2 (##).\n\nOutput your response starting from**New Issues** in escaped, markdown text that can be sent as http body to API. Do not wrap output in code blocks.\nExtract the name of the file from the first line of the report and title the new report with it in a following way: \"# Slither's new issues in: <file_name>\"\n\nRemember that it might be possible that second report does not introduce any new issues. In such case, provide an empty report.\n```\n\n----------------------------------------\n\nTITLE: Returning Funds to Root Key\nDESCRIPTION: Command to return all funds from static keys back to the root key\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nKEYFILE_PATH=keyfile_my_network.toml ROOT_PRIVATE_KEY=ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 SETH_CONFIG_PATH=seth.toml go run cmd/seth/seth.go -n my_network keys return\n```\n\n----------------------------------------\n\nTITLE: Configuring Fatal Regex Pattern for Critical RPC Errors\nDESCRIPTION: Sets a regex pattern to identify fatal errors from RPC nodes. This helps the node recognize critical failures that require immediate attention.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_232\n\nLANGUAGE: toml\nCODE:\n```\nFatal = '(: |^)fatal' # Example\n```\n\n----------------------------------------\n\nTITLE: Node Configuration TOML\nDESCRIPTION: TOML configuration for node capabilities setup.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n[[nodeset.node_specs]]\n\n    [nodeset.node_specs.node]\n      # it's best if you don't use this directive in TOML and instead copy your capability using Go code, like we do for cron\n      capabilities = [\"./aptos_linux_amd64\"]\n```\n\n----------------------------------------\n\nTITLE: Using gomod-local-update with gomods in Shell\nDESCRIPTION: Demonstrates how to use gomod-local-update in combination with the gomods tool for updating and tidying go modules.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/gomod-local-update/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngomods -w gomod-local-update\ngomods tidy\n```\n\n----------------------------------------\n\nTITLE: Setting Bar Example Value in TOML\nDESCRIPTION: This snippet demonstrates setting an example value for the 'Bar' field within the 'TableName' table. As Bar doesn't have a default value, an example must be included.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/config/docs/testdata/example.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\nBar = 10 # Example\n```\n\n----------------------------------------\n\nTITLE: Setting Starknet Node API Key in TOML\nDESCRIPTION: Configures an API key for authenticating with Starknet nodes. This is optional and only required for specific RPC providers like Nethermind.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_287\n\nLANGUAGE: toml\nCODE:\n```\nAPIKey = 'key' # Example\n```\n\n----------------------------------------\n\nTITLE: Updating Multiple Plugin Files with Plugout (Bash)\nDESCRIPTION: Illustrates how to use Plugout to update plugin references in multiple files simultaneously. This command updates both public and private plugin YAML files.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/plugout/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngo run ./tools/plugout/ --update --plugin-file ./plugins/plugins.public.yaml --plugin-file ./plugins/plugins.private.yaml\n```\n\n----------------------------------------\n\nTITLE: Building Chainlink Node Docker Image with Coverage\nDESCRIPTION: Docker command to build Chainlink Node image with coverage flag enabled for test coverage collection.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/docker/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ndocker buildx build --platform linux/arm64 . -t localhost/chainlink-local:develop -f ./core/chainlink.Dockerfile --build-arg GO_COVER_FLAG=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging for Coverage Report\nDESCRIPTION: TOML configuration to enable HTML coverage report generation in the overrides.toml file.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/docker/README.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[Logging]\nshow_html_coverage_report=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Slow Block Production in Anvil\nDESCRIPTION: TOML configuration for setting up a slower block production speed in Anvil using Docker command parameters. The -b flag controls the block production speed in seconds.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_28\n\nLANGUAGE: toml\nCODE:\n```\n[blockchain_a]\n  chain_id = \"1337\"\n  docker_cmd_params = [\"-b\", \"5\"]\n  type = \"anvil\"\n```\n\n----------------------------------------\n\nTITLE: Adding a Consumer to VRF V2+ Subscription\nDESCRIPTION: This Go command adds a consumer contract to a VRF V2+ subscription, authorizing it to use the subscription for randomness requests.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2plus/testnet/README.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ngo run . eoa-add-sub-consumer --coordinator-address $COORDINATOR --sub-id=$SUB_ID --consumer-address=$CONSUMER\n```\n\n----------------------------------------\n\nTITLE: Cloning Chainlink Repository\nDESCRIPTION: Command to clone the Chainlink repository and navigate to the debugging script directory\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/DEBUGGING.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/smartcontractkit/chainlink.git && cd chainlink/core/scripts/chaincli\n```\n\n----------------------------------------\n\nTITLE: Visualizing Delegatecall Chain in Chainlink Automation Contracts\nDESCRIPTION: This diagram illustrates the delegatecall chain between the Master contract and multiple Logic contracts in Chainlink's automation system. It shows how function calls are passed through the contracts, always executing in the context of the Master contract.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/automation/v2_2/README.md#2025-04-21_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph LR\n  Master -- delegatecall --> la[Logic A]\n  la -- delegatecall --> lb[Logic B]\n  lb -. delegatecall .-> lx[Logic X]\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Network Secrets\nDESCRIPTION: Pattern for environment variables needed to configure network connections for testing. These variables specify wallet keys and RPC endpoints for different networks.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/deployment/environment/devenv/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nE2E_TEST_<networkName>_WALLET_KEY_<sequence_number>\\nE2E_TEST_<networkName>_RPC_HTTP_URL_<sequence_number>\\nE2E_TEST_<networkName>_RPC_WS_URL_<sequence_number>\n```\n\n----------------------------------------\n\nTITLE: EVM Head Tracker Connection Error\nDESCRIPTION: Error message indicating that the HeadListener component, which is responsible for tracking blockchain heads in the EVM system, has lost or failed to establish its connection.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/web/testdata/body/health-failing.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n!  EVM.0.HeadTracker.HeadListener\n\tListener is not connected\n```\n\n----------------------------------------\n\nTITLE: Configuring CLO Client for Staging Environment in YAML\nDESCRIPTION: YAML configuration for the CLO (Chainlink Orchestrator) client in the staging environment, specifying email, password, and base URL.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/deployment/keystone/README.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nEMAIL: \"your.name@smartcontract.com\"\nPASSWORD: 'XXXredacted'\nBASE_URL: \"https://gql.feeds-manager.main.stage.cldev.sh\"\n```\n\n----------------------------------------\n\nTITLE: Example of Source Contract Structure in Solidity\nDESCRIPTION: Demonstrates the structure of a sample contract called 'SomeOffRamp' that would need testing, showing a constructor and public/internal functions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/ccip/test/README.md#2025-04-21_snippet_0\n\nLANGUAGE: solidity\nCODE:\n```\ncontract SomeOffRamp {\n\n  constructor() {\n    ... set some state\n  }\n\n  function firstFunction() public {\n    ...\n  }\n\n  function theNextFunction() public {\n    ...\n  }\n\n  function _anInternalFunction() internal {\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Consumer to VRF V2 Subscription\nDESCRIPTION: Authorizes the consumer contract to use the VRF V2 subscription by adding it as a consumer.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv2/testnet/README.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ngo run . eoa-add-sub-consumer --coordinator-address $COORDINATOR --sub-id=$SUB_ID --consumer-address=$CONSUMER\n```\n\n----------------------------------------\n\nTITLE: Adding Keyfile to GitHub Actions Secrets\nDESCRIPTION: Command to add base64-encoded keyfile to GitHub Actions secrets\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ngh secret set SETH_MY_NETWORK_KEYFILE_BASE64 -b $(cat keyfile_my_network.toml | base64)\n```\n\n----------------------------------------\n\nTITLE: Generating Static Assets\nDESCRIPTION: Command to generate and compile static assets for the project\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nmake generate\n```\n\n----------------------------------------\n\nTITLE: Password Configuration\nDESCRIPTION: Password settings for different components of the Chainlink node, including keystore and VRF keys.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n[Password]\nKeystore = \"keystore_pass\" # Example\nVRF = \"VRF_pass\" # Example\n```\n\n----------------------------------------\n\nTITLE: Visualizing Smartcontractkit Go Module Dependencies with Mermaid\nDESCRIPTION: This Mermaid flowchart illustrates the complex dependencies between various Go modules in the Smartcontractkit project. It shows connections between chains, products, and different repositories, highlighting the project's structure and interdependencies.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/go.md#2025-04-21_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nflowchart LR\n  subgraph chains\n    chainlink-aptos\n    chainlink-cosmos\n    chainlink-evm\n    chainlink-solana\n    chainlink-starknet/relayer\n  end\n\n  subgraph products\n    chainlink-automation\n    chainlink-data-streams\n    chainlink-feeds\n    chainlink-functions\n    chainlink-vrf\n  end\n\n  classDef group stroke-dasharray:6,fill:none;\n  class chains,products group\n\n\tchain-selectors\n\tclick chain-selectors href \"https://github.com/smartcontractkit/chain-selectors\"\n\tchainlink-automation --> chainlink-common\n\tclick chainlink-automation href \"https://github.com/smartcontractkit/chainlink-automation\"\n\tchainlink-ccip --> chain-selectors\n\tchainlink-ccip --> chainlink-common\n\tchainlink-ccip --> chainlink-protos/rmn/v1.6/go\n\tclick chainlink-ccip href \"https://github.com/smartcontractkit/chainlink-ccip\"\n\tchainlink-ccip/chains/solana --> chainlink-ccip\n\tclick chainlink-ccip/chains/solana href \"https://github.com/smartcontractkit/chainlink-ccip\"\n\tchainlink-common --> grpc-proxy\n\tchainlink-common --> libocr\n\tclick chainlink-common href \"https://github.com/smartcontractkit/chainlink-common\"\n\tchainlink-common/pkg/monitoring\n\tclick chainlink-common/pkg/monitoring href \"https://github.com/smartcontractkit/chainlink-common\"\n\tchainlink-data-streams --> chainlink-common\n\tclick chainlink-data-streams href \"https://github.com/smartcontractkit/chainlink-data-streams\"\n\tchainlink-evm --> chainlink-framework/capabilities\n\tchainlink-evm --> chainlink-framework/chains\n\tclick chainlink-evm href \"https://github.com/smartcontractkit/chainlink-evm\"\n\tchainlink-feeds --> chainlink-common\n\tclick chainlink-feeds href \"https://github.com/smartcontractkit/chainlink-feeds\"\n\tchainlink-framework/capabilities --> chainlink-common\n\tclick chainlink-framework/capabilities href \"https://github.com/smartcontractkit/chainlink-framework\"\n\tchainlink-framework/chains --> chainlink-framework/multinode\n\tclick chainlink-framework/chains href \"https://github.com/smartcontractkit/chainlink-framework\"\n\tchainlink-framework/multinode --> chainlink-common\n\tclick chainlink-framework/multinode href \"https://github.com/smartcontractkit/chainlink-framework\"\n\tchainlink-protos/orchestrator --> wsrpc\n\tclick chainlink-protos/orchestrator href \"https://github.com/smartcontractkit/chainlink-protos\"\n\tchainlink-protos/rmn/v1.6/go\n\tclick chainlink-protos/rmn/v1.6/go href \"https://github.com/smartcontractkit/chainlink-protos\"\n\tchainlink-protos/svr\n\tclick chainlink-protos/svr href \"https://github.com/smartcontractkit/chainlink-protos\"\n\tchainlink-solana --> chainlink-ccip/chains/solana\n\tchainlink-solana --> chainlink-common/pkg/monitoring\n\tchainlink-solana --> chainlink-framework/multinode\n\tclick chainlink-solana href \"https://github.com/smartcontractkit/chainlink-solana\"\n\tchainlink/v2 --> chainlink-automation\n\tchainlink/v2 --> chainlink-data-streams\n\tchainlink/v2 --> chainlink-evm\n\tchainlink/v2 --> chainlink-feeds\n\tchainlink/v2 --> chainlink-protos/orchestrator\n\tchainlink/v2 --> chainlink-protos/svr\n\tchainlink/v2 --> chainlink-solana\n\tchainlink/v2 --> tdh2/go/ocr2/decryptionplugin\n\tclick chainlink/v2 href \"https://github.com/smartcontractkit/chainlink\"\n\tgrpc-proxy\n\tclick grpc-proxy href \"https://github.com/smartcontractkit/grpc-proxy\"\n\tlibocr\n\tclick libocr href \"https://github.com/smartcontractkit/libocr\"\n\ttdh2/go/ocr2/decryptionplugin --> libocr\n\ttdh2/go/ocr2/decryptionplugin --> tdh2/go/tdh2\n\tclick tdh2/go/ocr2/decryptionplugin href \"https://github.com/smartcontractkit/tdh2\"\n\ttdh2/go/tdh2\n\tclick tdh2/go/tdh2 href \"https://github.com/smartcontractkit/tdh2\"\n\twsrpc\n\tclick wsrpc href \"https://github.com/smartcontractkit/wsrpc\"\n\n\tsubgraph chainlink-ccip-repo[chainlink-ccip]\n\t\t chainlink-ccip\n\t\t chainlink-ccip/chains/solana\n\tend\n\tclick chainlink-ccip-repo href \"https://github.com/smartcontractkit/chainlink-ccip\"\n\n\tsubgraph chainlink-common-repo[chainlink-common]\n\t\t chainlink-common\n\t\t chainlink-common/pkg/monitoring\n\tend\n\tclick chainlink-common-repo href \"https://github.com/smartcontractkit/chainlink-common\"\n\n\tsubgraph chainlink-framework-repo[chainlink-framework]\n\t\t chainlink-framework/capabilities\n\t\t chainlink-framework/chains\n\t\t chainlink-framework/multinode\n\tend\n\tclick chainlink-framework-repo href \"https://github.com/smartcontractkit/chainlink-framework\"\n\n\tsubgraph chainlink-protos-repo[chainlink-protos]\n\t\t chainlink-protos/orchestrator\n\t\t chainlink-protos/rmn/v1.6/go\n\t\t chainlink-protos/svr\n\tend\n\tclick chainlink-protos-repo href \"https://github.com/smartcontractkit/chainlink-protos\"\n\n\tsubgraph tdh2-repo[tdh2]\n\t\t tdh2/go/ocr2/decryptionplugin\n\t\t tdh2/go/tdh2\n\tend\n\tclick tdh2-repo href \"https://github.com/smartcontractkit/tdh2\"\n\n\tclassDef outline stroke-dasharray:6,fill:none;\n\tclass chainlink-ccip-repo,chainlink-common-repo,chainlink-framework-repo,chainlink-protos-repo,tdh2-repo outline\n```\n\n----------------------------------------\n\nTITLE: Mercury Password Configuration\nDESCRIPTION: Password setting for basic authentication with the Mercury price feed endpoint.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\nPassword = \"A-Mercury-Password\" # Example\n```\n\n----------------------------------------\n\nTITLE: Setting Individual ResourceAttribute in TOML\nDESCRIPTION: Example of setting a single resource attribute named 'foo'. This demonstrates the syntax for adding a specific telemetry attribute that will be included with all telemetry data.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_50\n\nLANGUAGE: toml\nCODE:\n```\nfoo = \"bar\" # Example\n```\n\n----------------------------------------\n\nTITLE: Mercury Username Configuration\nDESCRIPTION: Username setting for basic authentication with the Mercury price feed endpoint.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\nUsername = \"A-Mercury-Username\" # Example\n```\n\n----------------------------------------\n\nTITLE: Copying CCIP Release Files\nDESCRIPTION: Command to copy CCIP files from the release directory to the contracts directory for release preparation. Includes a note about reverting changes using git checkout.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/release/ccip/NOTES.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# To undo the copy, run `git checkout -- package.json README.md`\npnpm copy:ccip-files\n```\n\n----------------------------------------\n\nTITLE: Building Chaincli Tool\nDESCRIPTION: Command to build the chaincli tool which is used for deploying and managing Keeper Registry and OCR2Keepers nodes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Setting Solana Node Name in TOML\nDESCRIPTION: Specifies a unique identifier for a Solana node within a chain configuration. The name must be unique per chain to properly identify different nodes.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/CONFIG.md#2025-04-21_snippet_272\n\nLANGUAGE: toml\nCODE:\n```\nName = 'primary' # Example\n```\n\n----------------------------------------\n\nTITLE: Prometheus Monitoring Configuration\nDESCRIPTION: Configuration for Prometheus metrics integration, including the authentication token.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n[Prometheus]\nAuthToken = \"prometheus-token\" # Example\n```\n\n----------------------------------------\n\nTITLE: Building Chainlink Docker Image with Platform Specification\nDESCRIPTION: Builds a Docker image from the Chainlink repository with specific platform targeting. This command is used as part of the test setup process to create a compatible image for the k3d environment.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nenv DOCKER_DEFAULT_PLATFORM=linux/amd64 docker buildx build --platform linux/amd64 -f ./core/chainlink.Dockerfile --build-arg ENVIRONMENT=release --build-arg COMMIT_SHA=$(git rev-parse HEAD) -t smartcontract/chainlink:develop-$(git rev-parse HEAD) .\n```\n\n----------------------------------------\n\nTITLE: Pyroscope Monitoring Configuration\nDESCRIPTION: Configuration for Pyroscope monitoring service integration, including the authentication token.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n[Pyroscope]\nAuthToken = \"pyroscope-token\" # Example\n```\n\n----------------------------------------\n\nTITLE: Prometheus Auth Token Configuration\nDESCRIPTION: Authorization key setting for the Prometheus metrics endpoint, used to secure access to the node's metrics.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\nAuthToken = \"prometheus-token\" # Example\n```\n\n----------------------------------------\n\nTITLE: LDAP Read-Only User Password Configuration\nDESCRIPTION: Password configuration for the read-only LDAP user account.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\nReadOnlyUserPass = 'password' # Example\n```\n\n----------------------------------------\n\nTITLE: Creating CCIP Changeset\nDESCRIPTION: Command to create a new changeset for CCIP contract changes, to be executed from the contracts directory.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/release/ccip/NOTES.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npnpm changeset:ccip\n```\n\n----------------------------------------\n\nTITLE: Logging into Chainlink Admin CLI (Bash)\nDESCRIPTION: Command to log into the Chainlink admin CLI. This authentication is required to perform administrative tasks on the Chainlink node.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nchainlink admin login\n```\n\n----------------------------------------\n\nTITLE: LDAP Server Address Configuration\nDESCRIPTION: Configuration for the LDAP server address using the ldaps protocol.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/SECRETS.md#2025-04-21_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\nServerAddress = 'ldaps://127.0.0.1' # Example\n```\n\n----------------------------------------\n\nTITLE: Restricted SQL Command in Chainlink Migrations\nDESCRIPTION: This snippet highlights a SQL command that cannot be used in Chainlink migrations due to potential lack of superuser privileges for Node operators.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/store/migrate/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCREATE EXTENSION\n```\n\n----------------------------------------\n\nTITLE: Installing Mockery\nDESCRIPTION: Command to install the correct version of mockery for generating mocks\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nmake mockery\n```\n\n----------------------------------------\n\nTITLE: Enabling Observability Tools with Compose\nDESCRIPTION: Command to run the compose setup with observability services (Grafana, Prometheus, and Alertmanager) enabled.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/docker/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nWITH_OBSERVABILITY=true ./compose up\n```\n\n----------------------------------------\n\nTITLE: Initializing and Deploying CRIB Environment with DevSpace\nDESCRIPTION: Commands to initialize CRIB and deploy a local development environment with simulated OCRv1 core. This sets up the testing infrastructure needed for Chainlink testing.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/crib/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nDEVSPACE_NAMESPACE=crib-oh-my-crib crib init\ndevspace deploy --debug --profile local-dev-simulated-core-ocr1\n```\n\n----------------------------------------\n\nTITLE: Running Go Tests for Chainlink Core\nDESCRIPTION: Shows how to run Go tests for the Chainlink Core project, with an option to limit parallelization to control resource usage.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# A higher parallel number can speed up tests at the expense of more RAM.\ngo test -p 1 ./...\n```\n\n----------------------------------------\n\nTITLE: Installing Chainlink CCIP Contracts via Package Managers\nDESCRIPTION: Commands to install the Chainlink CCIP contracts package using pnpm or npm package managers. This step is necessary to use the CCIP contracts in a project.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/release/ccip/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# via pnpm\n$ pnpm add @chainlink/contracts-ccip\n# via npm\n$ npm install @chainlink/contracts-ccip --save\n```\n\n----------------------------------------\n\nTITLE: Viewing Available Commands in Chainlink QA Tool\nDESCRIPTION: Command to display all available commands in the coreqa Chainlink QA tool. This command prints the help menu showing all possible operations that can be performed with the tool.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/docker/cmd/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo run main.go --help\n```\n\n----------------------------------------\n\nTITLE: Installing Node Version Manager (NVM) for Chainlink Development (Bash)\nDESCRIPTION: Example command for installing a specific version of Node.js using NVM (Node Version Manager) for Chainlink development. This allows easy switching between Node.js versions.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnvm install $NODE_VERSION && nvm use $NODE_VERSION\n```\n\n----------------------------------------\n\nTITLE: Generating Configuration Documentation using Go\nDESCRIPTION: This snippet shows how the CONFIG.md file is generated from the core.toml and chains-*.toml files using the config.GenerateDocs() function in the docs/main.go file.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/config/docs/README.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nconfig.GenerateDocs()\n```\n\n----------------------------------------\n\nTITLE: Regenerating GraphQL Client Implementation using Task\nDESCRIPTION: Command to regenerate the GraphQL client implementation after adding new queries or mutations to genqlient.graphql file using the Taskfile system.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/deployment/environment/web/sdk/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ task generate\n```\n\n----------------------------------------\n\nTITLE: Running CCIP Batching Test\nDESCRIPTION: Go test command to run the CCIP Batching test with verbose output. The command specifically targets the Test_CCIPBatching test case and ensures a fresh run by setting count to 1.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/ccip/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngo test -count 1 -v -run \"Test_CCIPBatching\" .\n```\n\n----------------------------------------\n\nTITLE: Configuring CCIP Logging in TOML\nDESCRIPTION: Example of configuring logging settings for CCIP tests, including log targets, producer settings, and Grafana dashboard details.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/testconfig/README.md#2025-04-21_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.Env.Logging]\ntest_log_collect = false\n\n[CCIP.Env.Logging.LogStream]\nlog_targets = [\"file\"]\nlog_producer_timeout = \"10s\"\nlog_producer_retry_limit = 10\n\n[CCIP.Env.Logging.Loki]\ntenant_id = \"...\"\nendpoint = \"https://loki....\"\n\n[CCIP.Env.Logging.Grafana]\nbase_url = \"https://grafana..../\"\ndashboard_url = \"/d/6vjVx-1V8/ccip-long-running-tests\"\n```\n\n----------------------------------------\n\nTITLE: Creating VRF Key using Chainlink Dev Tools\nDESCRIPTION: Command to create a new VRF key using the Chainlink development tools. The command generates an encrypted secret key stored in vrfkey.json with a password specified in a separate file. Note: This uses a 'weak key period' flag which should only be used in development environments.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/tools/clroot/00README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./tools/bin/cldev local vrf \\\n   createWeakKeyPeriodYesIReallyKnowWhatIAmDoingAndDoNotCareAboutThisKeyMaterialFallingIntoTheWrongHandsExclamationPointExclamationPointExclamationPointExclamationPointIAmAMasochistExclamationPointExclamationPointExclamationPointExclamationPointExclamationPoint \\\n   -f ./tools/clroot/vrfkey.json -p ./tools/clroot/password.txt\n```\n\n----------------------------------------\n\nTITLE: Ethereum ABI-Encoded Contract Data in Hexadecimal Format\nDESCRIPTION: This represents a raw hexadecimal encoding of Ethereum contract data, following the Ethereum ABI encoding rules. The data shows a sequence of 32-byte words that encode parameters for a smart contract function call or event.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/services/ocr2/plugins/ocr2keeper/evmregistry/v21/fixtures/expected_encoded_report.txt#2025-04-21_snippet_0\n\nLANGUAGE: hexadecimal\nCODE:\n```\n00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000ca0aaaaaaaan```\n\n----------------------------------------\n\nTITLE: Using Existing Chainlink Node Docker Image\nDESCRIPTION: TOML configuration for using an existing Chainlink node Docker image instead of building from source. This needs to be applied to all node entries in the test configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_31\n\nLANGUAGE: toml\nCODE:\n```\n[[nodeset.node_specs]]\n  [nodeset.node_specs.node]\n  image = \"image-you-want-to-use\"\n```\n\n----------------------------------------\n\nTITLE: Optional Parameters for Existing LINK Contracts\nDESCRIPTION: Optional parameters that can be passed to the setup script when you want to use existing LINK contract addresses rather than deploying new ones.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/common/vrf/setup-envs/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n   --link-address <address> \\\n   --link-eth-feed <address> \\\n```\n\n----------------------------------------\n\nTITLE: Deploying CRIB for OCR1 Load Testing in Shell\nDESCRIPTION: This command deploys CRIB with a specific profile for local development simulated core OCR1 testing. It uses the devspace tool with debug mode enabled and skips the build process.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/load/ocr/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndevspace deploy --debug --profile local-dev-simulated-core-ocr1 --skip-build\n```\n\n----------------------------------------\n\nTITLE: Pushing Chainlink Docker Image to Local Registry\nDESCRIPTION: Pushes the tagged Chainlink Docker image to the local k3d registry. This makes the image available for the k3d cluster to pull when running tests.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\ndocker push k3d-myregistry.localhost:5001/docker.io/smartcontract/chainlink:$CHAINLINK_VERSION\n```\n\n----------------------------------------\n\nTITLE: Configuring and Running CRIB Chaos Tests\nDESCRIPTION: Shell commands to set environment variables and run chaos tests for CRIB deployment. Includes configuration for namespace, network type, node count, and optional debug settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/crib/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nexport CRIB_NAMESPACE=crib-oh-my-crib\nexport CRIB_NETWORK=geth # only \"geth\" is supported for now\nexport CRIB_NODES=5 # min 5 nodes\n#export SETH_LOG_LEVEL=debug # these two can be enabled to debug connection issues\n#export RESTY_DEBUG=true\n#export TEST_PERSISTENCE=true # to run the chaos test\nexport GAP_URL=https://localhost:8080/primary # only applicable in CI, unset the var to connect locally\ngo test -v -run TestCRIBChaos\n```\n\n----------------------------------------\n\nTITLE: Markdown Community Resources List\nDESCRIPTION: A markdown document containing badges and links to community resources, developer tools, and multilingual presentations for the Chainlink project. Includes social media links, developer repositories, and official documentation sources.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/COMMUNITY.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Community\n\n[![Discord](https://img.shields.io/discord/592041321326182401?style=flat-square&logo=discord)](https://discordapp.com/invite/aSK4zew)\n[![Subreddit subscribers](https://img.shields.io/reddit/subreddit-subscribers/Chainlink?logo=reddit&style=flat-square)](https://www.reddit.com/r/Chainlink/)\n[![Twitter Follow](https://img.shields.io/twitter/follow/chainlink?logo=twitter&style=flat-square)](https://twitter.com/chainlink)\n[![Telegram](https://img.shields.io/badge/Telegram-Follow-blue?style=flat-square&logo=telegram)](https://t.me/chainlinkofficial)\n[![YouTube Channel](https://img.shields.io/badge/YouTube-Subscribe-red?style=flat-square&logo=youtube)](https://www.youtube.com/chainlinkofficial)\n[![WeChat](https://img.shields.io/badge/WeChat-Follow-green?style=flat-square&logo=wechat)](https://blog.chain.link/chainlink-chinese-communities/)\n[![Sina Weibol](https://img.shields.io/badge/Weibo-Follow-red?style=flat-square&logo=sina-weibo)](https://weibo.com/chainlinkofficial)\n\nIn addition to the Chainlink community resources in the badges above, here is a\ncultivated list of other community related resources.\n\n## Developer Resources\n\n### Repositories\n\n- [@chainlink/box] - Truffle box\n- [@chainlink/external-adapter-js] - Chainlink external adapter repo\n- [awesome-chainlink] - Awesome projects built with Chainlink\n- [Chainlink Documentation](https://github.com/smartcontractkit/documentation/) - Our open source documentation site\n\n### Platforms and Services\n\n- [Gitcoin] - Hackathons, bounties, and grants\n\n## Presentations\n\n- Connecting Smart Contracts to any/all Off-chain Contract Events,\n  Privacy Preserving Computations and On-chain Reference Data by Sergey Nazarov\n  - [Devcon5](https://chain.link/presentations/devcon5.pdf)\n  - [English](https://chain.link/presentations/english.pdf)\n  - [Chinese](https://chain.link/presentations/chinese.pdf)\n  - [Korean](https://chain.link/presentations/korean.pdf)\n  - [Japanese](https://chain.link/presentations/japanese.pdf)\n\n[awesome chainlink]: https://github.com/JohannEid/awesome-chainlink\n[devvon5]: https://chain.link/presentations/devcon5.pdf\n[external-adapter-js]: https://github.com/smartcontractkit/external-adapters-js\n[gitcoin]: https://gitcoin.co/\n```\n\n----------------------------------------\n\nTITLE: Configuring CCIP Environment Connection and TTL in TOML\nDESCRIPTION: Example of specifying the Kubernetes namespace to connect to and setting a time-to-live (TTL) for the namespace in CCIP environment configuration.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/testconfig/README.md#2025-04-21_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.Env]\nEnvToConnect=\"load-ccip-c8972\"\nTTL = \"11h\"\n```\n\n----------------------------------------\n\nTITLE: Tagging Chainlink Docker Image for Local Registry\nDESCRIPTION: Tags the built Chainlink Docker image with the local registry address. This ensures the image can be pushed to and pulled from the local k3d registry.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/smoke/QuickStart.md#2025-04-21_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ndocker tag docker.io/smartcontract/chainlink:$CHAINLINK_VERSION k3d-myregistry.localhost:5001/docker.io/smartcontract/chainlink:$CHAINLINK_VERSION\n```\n\n----------------------------------------\n\nTITLE: L2EP Project Directory Structure\nDESCRIPTION: Overview of the Layer 2 Emergency Protocol folder structure, showing the main directories for source code and tests.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/l2ep/README.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n.\n├─/dev (stores the latest source code for L2EP)\n├─/test (stores the Foundry tests for L2EP)\n```\n\n----------------------------------------\n\nTITLE: Docker Registry and Hosts Setup Commands\nDESCRIPTION: Bash commands for setting up Docker registry and adding host entries for local Kubernetes setup.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull registry:2\n```\n\nLANGUAGE: bash\nCODE:\n```\n127.0.0.1 crib-local-geth-1337-http.main.stage.cldev.sh\n127.0.0.1 crib-local-geth-1337-ws.main.stage.cldev.sh\n```\n\nLANGUAGE: bash\nCODE:\n```\n127.0.0.1 crib-local-job-distributor-grpc.main.stage.cldev.sh\n```\n\nLANGUAGE: bash\nCODE:\n```\n127.0.0.1 crib-local-workflow-bt-0.main.stage.cldev.sh\n127.0.0.1 crib-local-workflow-0.main.stage.cldev.sh\n127.0.0.1 crib-local-workflow-1.main.stage.cldev.sh\n127.0.0.1 crib-local-workflow-2.main.stage.cldev.sh\n```\n\n----------------------------------------\n\nTITLE: Markdown Report Format Instructions\nDESCRIPTION: Specifications for how to format the confidence level report using markdown syntax\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/scripts/ci/prompt-validation.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Confidence level\n### <rating>\nScale: 1 (missing all new issues) to 5 (all new issues present)\n```\n\n----------------------------------------\n\nTITLE: Setting Migration Test Configurations\nDESCRIPTION: Example of setting configurations for migration tests, including environment variables and TOML settings.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/testconfig/README.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nE2E_TEST_CHAINLINK_UPGRADE_IMAGE=\"public.ecr.aws/chainlink/chainlink\"\n```\n\nLANGUAGE: toml\nCODE:\n```\n[ChainlinkUpgradeImage]\nversion=\"2.17.0-beta0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\nBASE64_CONFIG_OVERRIDE=$(cat ./testconfig/overrides.toml | base64) go test -v -p 1 ./smoke/<product>_test.go\n```\n\n----------------------------------------\n\nTITLE: Go Module Dependencies Diagram\nDESCRIPTION: Mermaid flowchart showing the relationship between Chainlink Go modules\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/README.md#2025-04-21_snippet_14\n\nLANGUAGE: mermaid\nCODE:\n```\nflowchart RL\n    github.com/smartcontractkit/chainlink/v2\n    github.com/smartcontractkit/chainlink/integration-tests --> github.com/smartcontractkit/chainlink/v2\n    github.com/smartcontractkit/chainlink/core/scripts --> github.com/smartcontractkit/chainlink/v2\n```\n\n----------------------------------------\n\nTITLE: Setting Consumer Contract Address\nDESCRIPTION: Export the VRF consumer contract address for use in subsequent commands\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/vrfv1/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nexport CONSUMER=<YOUR CONSUMER ADDRESS>\n```\n\n----------------------------------------\n\nTITLE: CCIP Deployment Configuration with External File\nDESCRIPTION: Configures CCIP deployment by referencing an external JSON file containing deployment data.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/ccip-tests/testconfig/README.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[CCIP.Deployments]\nDataFile = '<path/to/deployment.json>'\n```\n\n----------------------------------------\n\nTITLE: Visualizing Mailbox Types and Package Structure in Chainlink\nDESCRIPTION: This diagram illustrates the different types of mailboxes used in Chainlink and provides a general structure of how mailboxes are implemented within packages.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/docs/core/DATA_FLOW.md#2025-04-21_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\n---\ntitle: Description of pkg/utils/mailbox/mailbox.go from the chainlink-common repository.\n---\nflowchart\n    subgraph Legend\n        style Legend fill:none \n        subgraph mailboxes [Types of Mailboxes]\n            style mailboxes fill:none \n            single>single]\n            custom{{\"custom ('capacity')\"}}\n            high[[\"high capacity (100,000)\"]]\n        end\n        subgraph package\n            style package fill:none,stroke-dasharray: 6\n            subgraph type   \n                direction LR\n                from>from] -- \"Retrieve()\" --> method([\"method()\"]) -- \"Deliver()\" --> to[[to]]\n            end\n        end\n    end\n```\n\n----------------------------------------\n\nTITLE: Navigating to the Chaincli Directory\nDESCRIPTION: Command to change directory to chaincli from the project root, where the scripts for deploying and testing OCR2Keepers are located.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncd core/scripts/chaincli\n```\n\n----------------------------------------\n\nTITLE: Running All Functions Tests with Foundry\nDESCRIPTION: Executes all test files for the Functions module with verbose output (-vvv) using the Forge testing framework.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/functions/tests/v1_X/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nforge test -vvv\n```\n\n----------------------------------------\n\nTITLE: Stopping CRE Environment with CLI\nDESCRIPTION: Command for stopping the Chainlink Runtime Environment using the CLI. This command stops the local environment gracefully.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/system-tests/tests/smoke/cre/guidelines.md#2025-04-21_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\ncd cmd\ngo run main.go env stop\n```\n\n----------------------------------------\n\nTITLE: Debug Log Trigger Mismatch Example\nDESCRIPTION: Example command for debugging an ineligible log trigger upkeep with mismatched configuration\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/scripts/chaincli/DEBUGGING.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngo run main.go keeper debug 5591498142036749453487419299781783197030971023186134955311257372668222176389 0xc0686ae85d2a7a976ef46df6c613517b9fd46f23340ac583be4e44f5c8b7a186 1\n```\n\n----------------------------------------\n\nTITLE: Configuring Seth for Automation Load Tests in TOML\nDESCRIPTION: Example showing how to override the default ephemeral addresses count specifically for Automation Load tests, increasing it from 10 to 100.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/integration-tests/README_SETH.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[Load.Seth]\nephemeral_addresses_number = 100\n```\n\n----------------------------------------\n\nTITLE: Defining a Hardcoded Password in Plaintext\nDESCRIPTION: This snippet contains a plaintext password string 'thisisawrongpassword'. Hard-coding credentials in source code is generally considered a security risk and should be avoided in production code.\nSOURCE: https://github.com/smartcontractkit/chainlink/blob/develop/core/internal/fixtures/incorrect_password.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nthisisawrongpassword\n```"
  }
]
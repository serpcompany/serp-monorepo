[
  {
    "owner": "typicode",
    "repo": "husky",
    "content": "TITLE: Creating a Prettier Pre-commit Hook\nDESCRIPTION: Example shell script for a Husky pre-commit hook that runs Prettier on staged files and updates the Git index. This provides a basic linting workflow without external dependencies.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/get-started.md#2025-04-21_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\n# .husky/pre-commit\nprettier $(git diff --cached --name-only --diff-filter=ACMR | sed 's| |\\\\ |g') --write --ignore-unknown\ngit update-index --again\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Pre-commit Hook for Code Formatting\nDESCRIPTION: Example of a pre-commit hook script that uses Prettier to format staged files before committing. This simple two-line shell script doesn't require external dependencies beyond Prettier.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/es/get-started.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n# .husky/pre-commit\nprettier $(git diff --cached --name-only --diff-filter=ACMR | sed 's| |\\\\ |g') --write --ignore-unknown\ngit update-index --again\n```\n\n----------------------------------------\n\nTITLE: Adding a New Git Hook with Husky\nDESCRIPTION: Demonstrates how to create a new Git hook file using a simple shell command. This example adds a pre-commit hook that runs npm test.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/how-to.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\necho \"npm test\" > .husky/pre-commit\n```\n\n----------------------------------------\n\nTITLE: Creating a pre-commit Hook for Different Package Managers\nDESCRIPTION: Shows how to create a pre-commit hook file for different package managers, including npm, pnpm, yarn, and bun.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/how-to.md#2025-04-21_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\n# .husky/pre-commit\nnpm test\n```\n\nLANGUAGE: shell\nCODE:\n```\n# .husky/pre-commit\npnpm test\n```\n\nLANGUAGE: shell\nCODE:\n```\n# .husky/pre-commit\nyarn test\n```\n\nLANGUAGE: shell\nCODE:\n```\n# .husky/pre-commit\nbun test\n```\n\n----------------------------------------\n\nTITLE: Installing Husky with npm\nDESCRIPTION: Command to install Husky as a development dependency using npm package manager.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/get-started.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --save-dev husky\n```\n\n----------------------------------------\n\nTITLE: Manual Husky Setup in package.json\nDESCRIPTION: Demonstrates how to manually set up Husky in package.json for different package managers, including npm, pnpm, yarn, and bun.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/how-to.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"prepare\": \"husky\"\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"postinstall\": \"husky\",\n    \"prepack\": \"pinst --disable\",\n    \"postpack\": \"pinst --enable\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Husky with npm\nDESCRIPTION: Command to initialize Husky using npm. This creates a pre-commit script in the .husky directory and updates the prepare script in package.json.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/get-started.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnpx husky init\n```\n\n----------------------------------------\n\nTITLE: Initializing Husky Configuration\nDESCRIPTION: Commands to initialize Husky in a project using different package managers. This creates a pre-commit script in the .husky/ directory and updates the prepare script in package.json.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/es/get-started.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpx husky init\n```\n\nLANGUAGE: shell\nCODE:\n```\npnpm exec husky init\n```\n\nLANGUAGE: shell\nCODE:\n```\n# Debido a advertencias específicas y diferencias con otros administradores de paquetes,\n# consulte la sección Cómo hacerlo.\n```\n\nLANGUAGE: shell\nCODE:\n```\nbunx husky init\n```\n\n----------------------------------------\n\nTITLE: Configuring commit-msg hook with commitlint in Husky v9 (Shell)\nDESCRIPTION: This snippet demonstrates how to configure a commit-msg hook in Husky v9 using a shell script. It runs commitlint with the $1 parameter instead of HUSKY_GIT_PARAMS.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/migrate-from-v4.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncommitlint --edit $1\n```\n\n----------------------------------------\n\nTITLE: Configuring pre-commit hook in Husky v9 (Shell)\nDESCRIPTION: This snippet demonstrates how to configure a pre-commit hook in Husky v9 using a shell script. It runs npm test and npm run foo commands on separate lines.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/migrate-from-v4.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# .husky/pre-commit\n# Note that you can now have commands on multiple lines\nnpm test\nnpm run foo\n```\n\n----------------------------------------\n\nTITLE: Testing Husky Git Hook\nDESCRIPTION: Command to test the Husky pre-commit hook. When you commit, the test script configured in the hook will execute.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/get-started.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ngit commit -m \"Keep calm and commit\"\n# test script will run every time you commit\n```\n\n----------------------------------------\n\nTITLE: Skipping Git Hooks for a Single Command\nDESCRIPTION: Shows how to skip Git hooks for a single command using the -n/--no-verify flag or by temporarily setting the HUSKY environment variable.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/how-to.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit commit -m \"...\" -n # Skips Git hooks\n```\n\nLANGUAGE: shell\nCODE:\n```\nHUSKY=0 git ... # Temporarily disables all Git hooks\ngit ... # Hooks will run again\n```\n\n----------------------------------------\n\nTITLE: Configuring pre-commit hook with Jest in Husky v9 (Shell)\nDESCRIPTION: This snippet demonstrates how to configure a pre-commit hook in Husky v9 using a shell script. It runs the Jest testing framework directly.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/migrate-from-v4.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\njest\n```\n\n----------------------------------------\n\nTITLE: Testing Husky Git Hooks\nDESCRIPTION: Example of how to test if Husky hooks are working correctly by making a commit. The pre-commit script will execute each time a commit is made.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/es/get-started.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit commit -m \"Keep calm and commit\"\n# El script de prueba se ejecutará cada vez que realices un commit\n```\n\n----------------------------------------\n\nTITLE: Setting Up Non-shell Hooks with Husky\nDESCRIPTION: Shows how to set up hooks that require a scripting language other than shell, using NodeJS as an example.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/how-to.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nnode .husky/pre-commit.js\n```\n\n----------------------------------------\n\nTITLE: Disabling Husky in GitHub Actions\nDESCRIPTION: Demonstrates how to disable Husky in a CI environment like GitHub Actions by setting the HUSKY environment variable.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/how-to.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# https://docs.github.com/en/actions/learn-github-actions/variables\nenv:\n  HUSKY: 0\n```\n\n----------------------------------------\n\nTITLE: Installing Husky with pnpm\nDESCRIPTION: Command to install Husky as a development dependency using pnpm package manager.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/get-started.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npnpm add --save-dev husky\n```\n\n----------------------------------------\n\nTITLE: Initializing Husky with pnpm\nDESCRIPTION: Command to initialize Husky using pnpm. This creates a pre-commit script in the .husky directory and updates the prepare script in package.json.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/get-started.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\npnpm exec husky init\n```\n\n----------------------------------------\n\nTITLE: Initializing Husky with bun\nDESCRIPTION: Command to initialize Husky using bun. This creates a pre-commit script in the .husky directory and updates the prepare script in package.json.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/get-started.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nbunx husky init\n```\n\n----------------------------------------\n\nTITLE: Modifying package.json for CI-friendly Husky Installation\nDESCRIPTION: Shows how to modify the prepare script in package.json to prevent Husky installation failures in CI environments where devDependencies are not installed.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/how-to.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n// package.json\n\"prepare\": \"husky || true\"\n```\n\n----------------------------------------\n\nTITLE: Installing Husky with yarn\nDESCRIPTION: Commands to install Husky as a development dependency using yarn package manager, with an optional step for pinst installation for non-private packages.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/get-started.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn add --dev husky\n# Add pinst ONLY if your package is not private\nyarn add --dev pinst\n```\n\n----------------------------------------\n\nTITLE: Installing Husky with bun\nDESCRIPTION: Command to install Husky as a development dependency using bun package manager.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/get-started.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nbun add --dev husky\n```\n\n----------------------------------------\n\nTITLE: Installing Husky with Package Managers\nDESCRIPTION: Instructions for installing Husky as a development dependency using different package managers (npm, pnpm, yarn, bun). Note that when using yarn with a non-private package, pinst should be added as well.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/es/get-started.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --save-dev husky\n```\n\nLANGUAGE: shell\nCODE:\n```\npnpm add --save-dev husky\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn add --dev husky\n# Agregue pinst SÓLO si su paquete no es privado\nyarn add --dev pinst\n```\n\nLANGUAGE: shell\nCODE:\n```\nbun add --dev husky\n```\n\n----------------------------------------\n\nTITLE: Configuring Husky for Projects Not in Git Root Directory\nDESCRIPTION: Demonstrates how to set up Husky when the project is not in the Git root directory by modifying the prepare script and hook scripts.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/how-to.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n\"prepare\": \"cd .. && husky frontend/.husky\"\n```\n\nLANGUAGE: shell\nCODE:\n```\n# frontend/.husky/pre-commit\ncd frontend\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Configuring pre-commit hook in Husky v4 (JSON)\nDESCRIPTION: This snippet shows how to configure a pre-commit hook in Husky v4 using package.json. It runs npm test and npm run foo commands.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/migrate-from-v4.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hooks\": {\n    \"pre-commit\": \"npm test && npm run foo\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating Pre-commit Hook Configuration\nDESCRIPTION: Shows the difference between v4 and v9 pre-commit hook configuration, demonstrating how to migrate from package.json to a standalone shell script.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/zh/migrate-from-v4.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n// package.json\n{\n  \"hooks\": {\n    \"pre-commit\": \"npm test && npm run foo\"\n  }\n}\n```\n\nLANGUAGE: shell\nCODE:\n```\n# .husky/pre-commit\n# 提示，你现在可以在多行中输入命令\nnpm test\nnpm run foo\n```\n\n----------------------------------------\n\nTITLE: Creating a Dynamic Husky Installation Script\nDESCRIPTION: Provides a JavaScript script to dynamically import and run Husky, skipping installation in production and CI environments.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/how-to.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Skip Husky install in production and CI\nif (process.env.NODE_ENV === 'production' || process.env.CI === 'true') {\n  process.exit(0)\n}\nconst husky = (await import('husky')).default\nconsole.log(husky())\n```\n\n----------------------------------------\n\nTITLE: Using Bash in Husky Hook Scripts\nDESCRIPTION: Demonstrates how to use Bash in Husky hook scripts for teams that don't use Windows, ensuring POSIX compliance.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/how-to.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n# .husky/pre-commit\n\nbash << EOF\n# Put your bash script inside\n# ...\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring pre-commit hook with Jest in Husky v4 (JSON)\nDESCRIPTION: This snippet shows how to configure a pre-commit hook in Husky v4 using .huskyrc.json file. It runs the Jest testing framework.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/migrate-from-v4.md#2025-04-21_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n{\n  \"hooks\": {\n    \"pre-commit\": \"jest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Node Version Managers for GUI Compatibility\nDESCRIPTION: Shows how to set up Husky to work with Node version managers in GUI environments by sourcing the version manager initialization script.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/how-to.md#2025-04-21_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\n# ~/.config/husky/init.sh\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm\n```\n\n----------------------------------------\n\nTITLE: Local Binary Execution Changes\nDESCRIPTION: Demonstrates how to migrate from direct binary execution to using package manager commands for local dependencies.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/zh/migrate-from-v4.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"hooks\": {\n    \"pre-commit\": \"jest\"\n  }\n}\n```\n\nLANGUAGE: shell\nCODE:\n```\n# ...\nnpx --no jest\n# 或者\nyarn jest\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Parameter Changes\nDESCRIPTION: Shows the migration from HUSKY_GIT_PARAMS environment variable to native Git parameters in commit message hooks.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/zh/migrate-from-v4.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"hooks\": {\n    \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n  }\n}\n```\n\nLANGUAGE: shell\nCODE:\n```\n# ...\nnpx --no -- commitlint --edit $1\n# 或者\nyarn commitlint --edit $1\n```\n\n----------------------------------------\n\nTITLE: Configuring commit-msg hook with commitlint in Husky v4 (JSON)\nDESCRIPTION: This snippet shows how to configure a commit-msg hook in Husky v4 using .huskyrc.json file. It runs commitlint with the HUSKY_GIT_PARAMS environment variable.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/migrate-from-v4.md#2025-04-21_snippet_4\n\nLANGUAGE: js\nCODE:\n```\n{\n  \"hooks\": {\n    \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Windows Compatibility Script for Git Hooks with Yarn\nDESCRIPTION: This script creates a workaround for running Yarn commands in Git hooks on Windows 10 with Git Bash, solving the 'stdin is not a tty' error by detecting if winpty is available and redirecting stdin from /dev/tty.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/troubleshoot.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncommand_exists () {\n  command -v \"$1\" >/dev/null 2>&1\n}\n\n# Workaround for Windows 10, Git Bash, and Yarn\nif command_exists winpty && test -t 1; then\n  exec < /dev/tty\nfi\n```\n\n----------------------------------------\n\nTITLE: Sourcing the Windows Compatibility Script in Git Hooks\nDESCRIPTION: This example shows how to source the common.sh compatibility script in a pre-commit hook before running Yarn commands, implementing the workaround for Windows systems.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/troubleshoot.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# .husky/pre-commit\n. .husky/common.sh\n\nyarn ...\n```\n\n----------------------------------------\n\nTITLE: Creating a Common Shell Script for Windows Compatibility\nDESCRIPTION: This shell script provides a solution for Windows users experiencing issues with Git hooks failing due to 'stdin is not a tty' errors. It checks for the existence of winpty and adjusts input handling accordingly.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/zh/troubleshoot.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncommand_exists () {\n  command -v \"$1\" >/dev/null 2>&1\n}\n\n# Windows 10、Git Bash 和 Yarn 的解决方案\nif command_exists winpty && test -t 1; then\n  exec < /dev/tty\nfi\n```\n\n----------------------------------------\n\nTITLE: Implementing Windows Compatibility in Husky Pre-commit Hook\nDESCRIPTION: This snippet demonstrates how to use the common shell script in a Husky pre-commit hook to ensure compatibility with Windows systems when running Yarn commands.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/zh/troubleshoot.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n. \"$(dirname -- \"$0\")/common.sh\"\n\nyarn ...\n```\n\n----------------------------------------\n\nTITLE: Creando script común para solucionar problemas de Yarn en Windows\nDESCRIPTION: Este script shell crea una solución alternativa para problemas con Yarn en Windows usando Git Bash. Verifica si existe el comando 'winpty' y ajusta la entrada si es necesario.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/es/troubleshoot.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncommand_exists () {\n  command -v \"$1\" >/dev/null 2>&1\n}\n\n# Solución alternativa (Workaround) para Windows 10, Git Bash, and Yarn\nif command_exists winpty && test -t 1; then\n  exec < /dev/tty\nfi\n```\n\n----------------------------------------\n\nTITLE: Importando script común en ganchos de Husky\nDESCRIPTION: Este snippet muestra cómo importar el script común creado anteriormente en un gancho pre-commit de Husky, permitiendo ejecutar comandos de Yarn correctamente en Windows.\nSOURCE: https://github.com/typicode/husky/blob/main/docs/es/troubleshoot.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# .husky/pre-commit\n. .husky/common.sh\n\nyarn ...\n```"
  }
]
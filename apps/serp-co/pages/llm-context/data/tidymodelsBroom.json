[
  {
    "owner": "tidymodels",
    "repo": "broom",
    "content": "TITLE: Using tidy() Function with Linear Model\nDESCRIPTION: Example demonstrating the tidy() function to extract model coefficients and statistics from a linear regression model fit to the trees dataset.\nSOURCE: https://github.com/tidymodels/broom/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nlibrary(broom)\n\nfit <- lm(Volume ~ Girth + Height, trees)\ntidy(fit)\n```\n\n----------------------------------------\n\nTITLE: Using glance() Function for Model Statistics\nDESCRIPTION: Example showing how to use glance() to get model-level statistics and goodness of fit measures from a linear model.\nSOURCE: https://github.com/tidymodels/broom/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nglance(fit)\n```\n\n----------------------------------------\n\nTITLE: Basic R Code Example from Changelog\nDESCRIPTION: Example showing how to use broom with dplyr's rowwise operations to apply tidying functions across grouped data\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_13\n\nLANGUAGE: R\nCODE:\n```\nregressions <- mtcars %>% group_by(cyl) %>% do(mod = lm(mpg ~ wt, .))\nregressions %>% tidy(mod)\nregressions %>% augment(mod)\n```\n\n----------------------------------------\n\nTITLE: Using augment() Function to Add Model Information\nDESCRIPTION: Example demonstrating augment() to add model predictions, residuals and other observation-level information to the original dataset.\nSOURCE: https://github.com/tidymodels/broom/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\naugment(fit, data = trees)\n```\n\n----------------------------------------\n\nTITLE: Replacing tidy() with quick=TRUE using base R\nDESCRIPTION: Example of how to replicate the functionality of tidy() with quick=TRUE argument using base R functions stats::coef() and tibble::enframe()\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\nstats::coef() %>% tibble::enframe()\n```\n\n----------------------------------------\n\nTITLE: Adding interval Argument to R's augment Methods\nDESCRIPTION: Code mention describing the addition of an interval argument to some augment methods for confidence, prediction, and credible intervals, with columns consistently labeled .lower and .upper. This was implemented across commits #908 and #925.\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\nOne of the more major improvements in this release is the addition of the `interval` argument to some `augment` methods for confidence, prediction, and credible intervals. These columns will be consistently labeled `.lower` and `.upper`! (`#908` by `@grantmcdermott`, `#925` by `@bwiernik`)\n```\n\n----------------------------------------\n\nTITLE: Extracting Model Coefficients with Confidence Intervals in R\nDESCRIPTION: This snippet demonstrates the use of tidy() function to extract model coefficients and confidence intervals from a linear regression model. It produces a warning about NaNs being generated during the confidence interval calculation.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-lm.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\ntd_rd <- tidy(fit_rd, conf.int = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Using variable names in tidy.kmeans() output\nDESCRIPTION: tidy.kmeans() now uses input variable names in output by default, with option to revert to old behavior\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_10\n\nLANGUAGE: R\nCODE:\n```\ntidy.kmeans(model)  # Uses input variable names\ntidy.kmeans(model, col.names = NULL)  # Reverts to old behavior\n```\n\n----------------------------------------\n\nTITLE: Setting robust option in tidy.felm()\nDESCRIPTION: New robust argument added to tidy.felm() method to support robust and cluster standard errors\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_8\n\nLANGUAGE: R\nCODE:\n```\ntidy.felm(model, robust = TRUE)  # Returns robust standard errors\n```\n\n----------------------------------------\n\nTITLE: Installing Broom Package in R\nDESCRIPTION: Code examples showing different ways to install the broom package - either as part of tidymodels or standalone, including development version installation.\nSOURCE: https://github.com/tidymodels/broom/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n# we recommend installing the entire tidyverse \n# modeling set, which includes broom:\ninstall.packages(\"tidymodels\")\n\n# alternatively, to install just broom:\ninstall.packages(\"broom\")\n\n# to get the development version from GitHub:\ninstall.packages(\"pak\")\npak::pak(\"tidymodels/broom\")\n```\n\n----------------------------------------\n\nTITLE: Returning factor predictions in augment.polr()\nDESCRIPTION: Change in augment.polr() to return factor class predictions in .fitted column instead of numeric\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_9\n\nLANGUAGE: R\nCODE:\n```\naugment.polr(model)  # .fitted column now contains factor predictions\n```\n\n----------------------------------------\n\nTITLE: Adding exponentiate Argument to R's tidy.negbin Function\nDESCRIPTION: Code mention adding an exponentiate argument to the tidy.negbin() function. This enhancement was implemented in commit #1011 by user ddsjoberg.\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n* Added `exponentiate` argument to `tidy.negbin()` tidier (`#1011` by `@ddsjoberg`)\n```\n\n----------------------------------------\n\nTITLE: Adding exponentiate Argument to R's tidy.gam Function\nDESCRIPTION: Code mention adding an exponentiate argument to the tidy.gam() function, which can be applied to parametric terms. This enhancement was implemented in commit #1013 by user ddsjoberg.\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n* Added `exponentiate` argument to `tidy.gam()` tidier applicable for parametric terms (`#1013` by `@ddsjoberg`)\n```\n\n----------------------------------------\n\nTITLE: Tidying ergm model with confidence intervals and exponentiation\nDESCRIPTION: Creates a tidy data frame of ergm model coefficients with confidence intervals and exponentiated values. Triggers a warning when exponentiation is applied to coefficients from a model without a log or logit link.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/ergm.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ntde <- tidy(gest, conf.int = TRUE, exponentiate = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Tidying a second ergm model with confidence intervals and exponentiation\nDESCRIPTION: Similar to the first example, this creates a tidy data frame from a different ergm model (gest2) with confidence intervals and exponentiated coefficients. Also generates a warning about exponentiation with non-log/logit link.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/ergm.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\ntd2 <- tidy(gest2, conf.int = TRUE, exponentiate = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Getting model statistics with glance() for an ergm model\nDESCRIPTION: Retrieves model-level statistics for an ergm object using glance(), requesting deviance and MCMC-related statistics. Generates a message indicating MCMC columns will be omitted since the model wasn't fitted using MCMC.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/ergm.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\ngl3 <- glance(gest, deviance = TRUE, mcmc = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Tidying a geeglm model with exponentiated coefficients in R\nDESCRIPTION: This code tidies a generalized estimating equation model (geeglm object) with exponentiated coefficients but without confidence intervals. A warning is generated because exponentiation was requested on a model that doesn't use a log or logit link function.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/geepack.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ntd2 <- tidy(fit, conf.int = FALSE, exponentiate = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Augmenting Linear Model with Fitted Values and Confidence Intervals in R\nDESCRIPTION: This snippet shows how to use the augment() function to add fitted values, residuals, and confidence intervals to the original dataset. It demonstrates that the 'level' argument is not supported and will be ignored, producing a warning.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-lm.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\naugment(fit, newdata = mtcars, interval = \"confidence\", level = 0.95)\n```\n\n----------------------------------------\n\nTITLE: Tidying oneway.test Results with Multiple Parameters in R\nDESCRIPTION: This snippet demonstrates using the tidy() function from the broom package on an oneway.test object (ot). The function generates a message about handling multiple parameters by naming the columns num.df and den.df.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-htest.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ntd <- tidy(ot)\n```\n\n----------------------------------------\n\nTITLE: Extracting Model Summary Statistics from oneway.test with glance() in R\nDESCRIPTION: This snippet shows the glance() function being used on an oneway.test object (ot). Similar to tidy(), it generates a message about handling multiple parameters by naming them num.df and den.df.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-htest.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\ngl <- glance(ot)\n```\n\n----------------------------------------\n\nTITLE: Tidying VAR Model Results with Confidence Intervals in R\nDESCRIPTION: This code uses the tidy() function from the broom package to create a tidy representation of VAR model results. It attempts to include confidence intervals, but a warning is generated indicating that confidence intervals are not supported for VAR objects.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/vars.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\n.res <- tidy(fit, conf.int = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Returning F-statistics in tidy.ivreg()\nDESCRIPTION: F-statistics for weak instruments now returned through tidy.ivreg() with instruments=TRUE argument\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_11\n\nLANGUAGE: R\nCODE:\n```\ntidy.ivreg(model, instruments = TRUE)  # Returns F-statistics for weak instruments\n```\n\n----------------------------------------\n\nTITLE: Tidying polr Model with P-values in R\nDESCRIPTION: Example showing the tidy function being called on a polr model fit with p-values requested. The message indicates that p-values cannot be calculated when categorical variables have more than two levels.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/mass-polr.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n.res <- tidy(fit, p.values = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Testing tidy Method on loess_anova Object in R\nDESCRIPTION: This code tests the tidy function on a loess_anova object. It captures the result of applying tidy() to a loess_anova object, which generates a warning about an unrecognized column name 'ENP' in the ANOVA output.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-anova.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n.res <- tidy(loess_anova)\n```\n\n----------------------------------------\n\nTITLE: Preserving Original Observation Order in R's augment.rqs Function\nDESCRIPTION: Code mention addressing an issue with preserving the original observations order in the augment.rqs function. The fix ensures that the function preserves the original data.frame names when the input data.frame only has one column.\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* Addressed issue with the ordering of original observations in `augment.rqs`. Now function preserves the original `data.frame` names also when the input `data.frame` only has one column (`#1052` by `@ilapros`).\n```\n\n----------------------------------------\n\nTITLE: Correcting Confidence Interval in R's tidy.crr Function\nDESCRIPTION: Code mention fixing a bug where the confidence interval in tidy.crr() was not correctly calculated. The issue was that the conf.level parameter was previously ignored, and this commit corrects that behavior.\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* Corrected the confidence interval in `tidy.crr()`. The `tidy.crr(conf.level=)` argument was previously ignored (`#1068` by `@ddsjoberg`).\n```\n\n----------------------------------------\n\nTITLE: Fixing Warning in R's tidy.rma Function for Multiple Degrees of Freedom\nDESCRIPTION: Code mention addressing a warning in tidy.rma function when x$ddf has length greater than 1. This fix was implemented in commit #1064 by user wviechtb.\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* Addressed warning from `tidy.rma` when `x$ddf` has length greater than 1 (`#1064` by `@wviechtb`).\n```\n\n----------------------------------------\n\nTITLE: Renaming factanal output columns in augment()\nDESCRIPTION: Change in column naming convention for augment.factanal() output, replacing 'factor1', 'factor2' with '.fs1', '.fs2', etc.\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_7\n\nLANGUAGE: R\nCODE:\n```\naugment.factanal()  # Now returns columns .fs1, .fs2, ... instead of factor1, factor2, ...\n```\n\n----------------------------------------\n\nTITLE: Requesting Confidence Intervals in tidy.gam\nDESCRIPTION: Tests the tidy function on a gam object with confidence intervals requested, which generates an informative message indicating that confidence intervals are only available for parametric terms.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/mgcv.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n.res <- tidy(x, conf.int = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Requesting Both Confidence Intervals and Exponentiated Coefficients in tidy.gam\nDESCRIPTION: Tests the tidy function on a gam object with both confidence intervals and exponentiation requested, which generates two informative messages about the limitations of these features for non-parametric terms.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/mgcv.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n.res <- tidy(x, conf.int = TRUE, exponentiate = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Testing tidy.felm() function with cluster standard errors in R\nDESCRIPTION: This snippet tests the tidy.felm() function requesting clustered standard errors. It shows that when clustered SEs weren't calculated in the original model, the function warns and reverts to default SEs.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/lfe.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\n.res <- tidy.felm(fit, se.type = \"cluster\")\n```\n\n----------------------------------------\n\nTITLE: Requesting Exponentiated Coefficients in tidy.gam\nDESCRIPTION: Tests the tidy function on a gam object with exponentiation requested, which generates an informative message indicating that exponentiating coefficients is only available for parametric terms.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/mgcv.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n.res <- tidy(x, exponentiate = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Testing Tidy Method Exponentiate Warning\nDESCRIPTION: Verifies that the tidy() method properly warns when the exponentiate argument is used with unsupported model types while still returning expected tibble output.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/utilities.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\ntidy(mod, exponentiate = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Warning when Tidying t-test Results with Unnamed Parameters in R\nDESCRIPTION: This snippet shows tidy() being used on a t-test object (tt), which generates a warning about multiple unnamed parameters being dropped from the result. This demonstrates how broom handles incomplete parameter information.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-htest.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\n.res <- tidy(tt)\n```\n\n----------------------------------------\n\nTITLE: Testing Subclassed Model Warnings\nDESCRIPTION: Verifies proper warning generation for subclassed glm models when using tidy() method.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/utilities.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\nwarn_on_subclass(x, \"tidy\")\nwarn_on_subclass(x, \"tidy\")\n```\n\n----------------------------------------\n\nTITLE: Testing Augment Method Newdata Warning\nDESCRIPTION: Tests the augment() method's handling of unsupported newdata argument for kmeans objects, ensuring appropriate warning message is generated.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/utilities.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n.res <- augment(mod, data = mtcars, newdata = mtcars)\n```\n\n----------------------------------------\n\nTITLE: Testing tidy() function with deprecated robust argument for felm objects in R\nDESCRIPTION: This snippet tests the tidy() function on a felm object, using the deprecated 'robust' argument. It demonstrates that the function now warns about the deprecation and suggests using 'se.type' instead.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/lfe.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\n.res <- tidy(fit, robust = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Error Handling for tidy() with Incompatible Mediate Object in R\nDESCRIPTION: This code snippet attempts to use the tidy() function on a psych_mediate object, which results in an error. The error message clearly states that there is no tidy method for objects of class <mediate> from the psych package, and suggests that the tidy.mediate() method is intended for <mediate> objects from the mediation package.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/mediation.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\ntidy(psych_mediate)\n```\n\n----------------------------------------\n\nTITLE: Testing GLM Tidier with stanreg Output\nDESCRIPTION: Tests the tidy() function's error handling when receiving stanreg input from the rstanarm package. Verifies that an informative error is thrown directing users to broom.mixed.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-glm.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n.res <- tidy(gfit)\n```\n\n----------------------------------------\n\nTITLE: Testing GLM Tidier with glm2 Output\nDESCRIPTION: Tests the tidy() function's warning behavior when receiving glm.fit2 input from the glm2 package. Verifies that an informative warning is issued about maintenance status.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-glm.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n.res <- tidy(gfit)\n```\n\n----------------------------------------\n\nTITLE: Testing Error Message for Deprecated augment.glmRob Method in R\nDESCRIPTION: This code snippet demonstrates the error message that occurs when trying to use the deprecated augment.glmRob function. The error informs users that the method has been deprecated because the robust package lacks necessary functionality, and suggests using the augment method for glmrob objects from the robustbase package instead.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/robust-glmrob.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\naugment(x)\n```\n\n----------------------------------------\n\nTITLE: Error Handling for tidy.mjoint Function in R\nDESCRIPTION: Demonstrates error handling when an invalid boot_se parameter is passed to tidy() function for mjoint model fits. Shows that boot_se must be a bootSE object.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/joineRML.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ntidy(mjoint_fit, boot_se = \"cat\")\n```\n\n----------------------------------------\n\nTITLE: Testing Ellipsis Argument Warnings in R's Broom Package\nDESCRIPTION: Tests the check_ellipses() function's handling of unsupported arguments, verifying appropriate warning messages are generated when unsupported parameters are passed.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/utilities.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ncheck_ellipses(\"exponentiate\", \"tidy\", \"boop\", exponentiate = TRUE)\ncheck_ellipses(\"exponentiate\", \"tidy\", \"boop\", exponentiate = TRUE, quick = FALSE)\n```\n\n----------------------------------------\n\nTITLE: Error Handling for augment.mjoint Function in R\nDESCRIPTION: Shows error handling when NULL data is passed to augment() function for mjoint model fits. Indicates that data argument must be explicitly specified.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/joineRML.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\naugment(mjoint_fit, data = NULL)\n```\n\n----------------------------------------\n\nTITLE: Testing glance() Method for Various Data Types in R\nDESCRIPTION: These snippets test the glance() function with different basic R data types: logical, numeric, integer, and character. Each test demonstrates the error message for unsupported types.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/null-and-default.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nglance(TRUE)\n```\n\nLANGUAGE: R\nCODE:\n```\nglance(1)\n```\n\nLANGUAGE: R\nCODE:\n```\nglance(1L)\n```\n\nLANGUAGE: R\nCODE:\n```\nglance(\"a\")\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling for tidy.prcomp in R\nDESCRIPTION: This code tests the error handling of the tidy function when applied to a prcomp object (pc) with multiple matrices (\"d\" and \"u\") specified. The function should throw an error indicating that only a single matrix can be tidied at once.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-prcomp.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ntidy(pc, matrix = c(\"d\", \"u\"))\n```\n\n----------------------------------------\n\nTITLE: Handling Missing Data Parameter in augment() Function\nDESCRIPTION: Example showing the error thrown by augment() function when called with a speedlm model fit object without specifying the required 'data' argument or refitting with 'fitted=TRUE'.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/speedglm-speedlm.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\naugment(fit3)\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Error Handling in glance.tbl_df Function for Tibbles in R\nDESCRIPTION: This code snippet illustrates the error message produced when attempting to use the glance.tbl_df function on a tibble object. It shows that the function provides a helpful error message suggesting an alternative function (tibble::glimpse()) that might be more appropriate for tibbles.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/data-frame.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nglance.tbl_df(tibble::tibble(x = 1))\n```\n\n----------------------------------------\n\nTITLE: Augmenting Mclust Model with Incorrect Input in R\nDESCRIPTION: This code snippet attempts to use the augment() function from the broom package on an Mclust model fit. It results in an error because the input data is not in the correct format (a data frame or matrix).\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/mclust.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\naugment(fit, 1:10)\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Error with matrix covariates in augment() for quantreg models\nDESCRIPTION: This snippet shows how using matrix covariates with augment() now results in an error due to stricter tibble requirements in broom 0.5.0.\nSOURCE: https://github.com/tidymodels/broom/blob/main/NEWS.md#2025-04-21_snippet_12\n\nLANGUAGE: R\nCODE:\n```\nlibrary(broom)\nlibrary(quantreg)\n\nfit <- rq(stack.loss ~ stack.x, tau = .5)\nbroom::augment(fit)\n#> Error: Column `stack.x` must be a 1d atomic vector or a list\n```\n\n----------------------------------------\n\nTITLE: Handling glance() Error with Multiple Tau Values in R\nDESCRIPTION: Shows the error message when attempting to use glance() function on an rqs object (quantile regression model with multiple tau values). The error suggests using a purrr map()-based workflow with individual rq models instead.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/quantreg-rqs.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nglance(fit)\n```\n\n----------------------------------------\n\nTITLE: Testing Invalid Input Handling in tidy_svd R Function\nDESCRIPTION: Test case that verifies error handling when invalid input (character vector instead of matrix) is passed to tidy_svd function. Expects an informative error message.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/list-svd.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ntidy_svd(matrix = c(\"u\", \"v\"))\n```\n\n----------------------------------------\n\nTITLE: Testing glance() function for felm objects with multiple responses in R\nDESCRIPTION: This snippet tests the glance() function on a felm object with multiple responses. It shows that the function raises an error for such models, indicating they are not supported.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/lfe.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nglance(fit_multi)\n```\n\n----------------------------------------\n\nTITLE: Testing as_glance_tibble Validation\nDESCRIPTION: Tests error handling in as_glance_tibble() when column types don't match provided data.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/utilities.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nas_glance_tibble(x = 1, y = 1, na_types = \"rrr\")\n```\n\n----------------------------------------\n\nTITLE: Testing as_augment_tibble Error Handling\nDESCRIPTION: Verifies that as_augment_tibble() properly handles and reports errors for unnamed matrices.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/utilities.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\nas_augment_tibble(m)\n```\n\n----------------------------------------\n\nTITLE: Calling augment() on drc Models Without Required Arguments\nDESCRIPTION: Examples demonstrating the error messages when calling the augment() function on drc models without providing either the 'data' or 'newdata' arguments. Both examples show the same error message indicating that one of these arguments must be specified.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/drc.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\naugment(mod)\n```\n\nLANGUAGE: r\nCODE:\n```\naugment(mod2)\n```\n\n----------------------------------------\n\nTITLE: Testing tidy() Method for Unsupported Object Types in R\nDESCRIPTION: This snippet tests the tidy() function with a raw object, which is not supported. It demonstrates the error message format for unsupported object types.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/null-and-default.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\ntd <- tidy(raw(1))\n```\n\n----------------------------------------\n\nTITLE: Testing augment() with fenegbin Estimator\nDESCRIPTION: Demonstrates the error message when attempting to use augment() with a fixest model created using fenegbin(). The error properly indicates that augment() only supports models from feols(), feglm(), or femlm().\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/fixest.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\naugment(res_fenegbin)\n```\n\n----------------------------------------\n\nTITLE: Testing glance() Method for Custom Class Objects in R\nDESCRIPTION: This snippet tests the glance() function with a custom class object 'foo/bar'. It shows the error message format for unsupported custom classes.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/null-and-default.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nglance(x)\n```\n\n----------------------------------------\n\nTITLE: Error when Augmenting Wilcoxon Test Results in R\nDESCRIPTION: This snippet shows the error generated when attempting to use augment() on a Wilcoxon test object (wt). Like with the t-test, augment.htest() is only implemented for chi-squared tests.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-htest.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\naugment(wt)\n```\n\n----------------------------------------\n\nTITLE: Testing augment() Method for Various Data Types in R\nDESCRIPTION: These snippets test the augment() function with different basic R data types: logical, numeric, integer, and character. Each test shows the error message for unsupported types.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/null-and-default.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\naugment(TRUE)\n```\n\nLANGUAGE: R\nCODE:\n```\naugment(1)\n```\n\nLANGUAGE: R\nCODE:\n```\naugment(1L)\n```\n\nLANGUAGE: R\nCODE:\n```\naugment(\"a\")\n```\n\n----------------------------------------\n\nTITLE: Testing augment failure with factanal object without scores in R\nDESCRIPTION: This code tests that the augment() function correctly raises an error when trying to augment a factanal object that was fit with scores='none'. The error message clearly indicates that these objects cannot be augmented.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-factanal.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\naugment(fit_none)\n```\n\n----------------------------------------\n\nTITLE: Testing augment() Method for Custom Class Objects in R\nDESCRIPTION: This snippet tests the augment() function with a custom class object 'foo/bar'. It demonstrates the error message format for unsupported custom classes.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/null-and-default.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\naugment(x)\n```\n\n----------------------------------------\n\nTITLE: Glancing Multi-State Survfit Object in R\nDESCRIPTION: This snippet tries to apply the glance() function to a multi-state survfit object (fit2), which is not supported and generates an error message.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/survival-survfit.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nglance(fit2)\n```\n\n----------------------------------------\n\nTITLE: Handling Unsupported List with glance() in R\nDESCRIPTION: This snippet shows the error handling when using the glance() function from the broom package on an unsupported list object. Similar to tidy(), it provides a specific error message indicating that the list type is not recognized for glancing.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/list.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nglance(nl)\n```\n\n----------------------------------------\n\nTITLE: Glancing Multi-Strata Survfit Object in R\nDESCRIPTION: This snippet attempts to use the glance() function on a multi-strata survfit object (sfit), which is not supported and results in an error.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/survival-survfit.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nglance(sfit)\n```\n\n----------------------------------------\n\nTITLE: Tidying XYZ List with Incorrect Element Lengths in R\nDESCRIPTION: This snippet tests the tidy() function on another xyz list with mismatched dimensions. It expects the same error message as the previous test.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/list-xyz.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\ntidy(c)\n```\n\n----------------------------------------\n\nTITLE: Attempting to Use augment() with speedglm Object in R\nDESCRIPTION: This code snippet demonstrates an attempt to use the augment() function on a speedglm object named 'fit'. The operation results in an error because there is no augment() method implemented for objects of class speedglm/speedlm.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/speedglm-speedglm.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\naugment(fit)\n```\n\n----------------------------------------\n\nTITLE: Tidying XYZ List with Non-Matrix Z Element in R\nDESCRIPTION: This snippet tests the tidy() function on an xyz list where the z element is not a matrix. It expects an error message indicating that z must be a matrix.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/list-xyz.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\ntidy(d)\n```\n\n----------------------------------------\n\nTITLE: Handling Unsupported List with tidy() in R\nDESCRIPTION: This snippet demonstrates the error thrown when attempting to use the tidy() function from the broom package on an unsupported list object. It shows that the function recognizes when a list cannot be tidied and provides a clear error message.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/list.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\ntidy(nl)\n```\n\n----------------------------------------\n\nTITLE: Error when Augmenting t-test Results in R\nDESCRIPTION: This snippet demonstrates an error when trying to use augment() on a t-test object (tt). The error indicates that augment.htest() is only defined for chi-squared hypothesis tests, not for t-tests.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-htest.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\naugment(tt)\n```\n\n----------------------------------------\n\nTITLE: Tidying XYZ List with Mismatched Dimensions in R\nDESCRIPTION: This snippet tests the tidy() function on an xyz list where the dimensions of x, y, and z do not match. It expects an error message indicating the mismatch.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/list-xyz.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\ntidy(b)\n```\n\n----------------------------------------\n\nTITLE: Error when Augmenting Correlation Test Results in R\nDESCRIPTION: This snippet demonstrates the error when using augment() on a correlation test object (ct). The error is consistent with the previous examples, indicating augment.htest() only works with chi-squared tests.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/stats-htest.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\naugment(ct)\n```\n\n----------------------------------------\n\nTITLE: Testing augment() function for felm objects with multiple responses in R\nDESCRIPTION: This snippet tests the augment() function on a felm object with multiple responses. Similar to glance(), it demonstrates that augment() also raises an error for felm models with multiple responses.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/lfe.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\naugment(fit_multi)\n```\n\n----------------------------------------\n\nTITLE: Testing augment() with fenegbin Estimator and Data Frame\nDESCRIPTION: Shows the error when calling augment() with a fenegbin model and providing a data frame. The function correctly rejects the operation with an informative error message about supported model types.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/fixest.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\naugment(res_fenegbin, df)\n```\n\n----------------------------------------\n\nTITLE: Testing augment() with feNmlm Estimator\nDESCRIPTION: Demonstrates the error message when attempting to use augment() with a fixest model created using feNmlm(). The error correctly states that this estimator type is not supported by augment().\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/fixest.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\naugment(res_feNmlm, df)\n```\n\n----------------------------------------\n\nTITLE: Testing augment() with fepois Estimator\nDESCRIPTION: Shows the error when calling augment() with a fepois model. The function properly rejects the operation and provides a clear error message about which fixest model types are supported.\nSOURCE: https://github.com/tidymodels/broom/blob/main/tests/testthat/_snaps/fixest.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\naugment(res_fepois, df)\n```"
  }
]
[
  {
    "owner": "davidjerleke",
    "repo": "embla-carousel",
    "content": "TITLE: Integrating Autoplay Plugin with Embla Carousel in React\nDESCRIPTION: Example of how to add the Autoplay plugin to an Embla Carousel in React. Shows how to pass plugins as the second argument to useEmblaCarousel within an array.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/react.mdx#2025-04-20_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\nimport React, { useEffect } from 'react'\nimport useEmblaCarousel from 'embla-carousel-react'\nimport Autoplay from 'embla-carousel-autoplay'\n\nexport function EmblaCarousel() {\n  const [emblaRef] = useEmblaCarousel({ loop: false }, [Autoplay()])\n\n  return (\n    <div className=\"embla\" ref={emblaRef}>\n      <div className=\"embla__container\">\n        <div className=\"embla__slide\">Slide 1</div>\n        <div className=\"embla__slide\">Slide 2</div>\n        <div className=\"embla__slide\">Slide 3</div>\n      </div>\n    </div>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel in React\nDESCRIPTION: Example of using TypeScript with Embla Carousel in React, showing how to type options as props.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_16\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport useEmblaCarousel from 'embla-carousel-react'\n\ntype PropType = {\n  options?: EmblaOptionsType\n}\n\nexport function EmblaCarousel(props: PropType) {\n  const [emblaRef, emblaApi] = useEmblaCarousel(props.options)\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Identifying Visible Slides in Embla Carousel\nDESCRIPTION: The slidesInView method returns an array of slide indexes that are currently visible in the carousel viewport. It respects the inViewThreshold option.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nslidesInView(): number[]\n```\n\n----------------------------------------\n\nTITLE: Adding Event Listeners to Embla Carousel in React\nDESCRIPTION: This React implementation shows how to use the useEmblaCarousel hook to initialize a carousel and add an event listener. It uses useCallback and useEffect hooks to properly manage the event listener subscription when the component mounts.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useCallback, useEffect } from 'react'\nimport useEmblaCarousel from 'embla-carousel-react'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = useEmblaCarousel()\n\n  const logSlidesInView = useCallback((emblaApi) => {\n    console.log(emblaApi.slidesInView())\n  }, [])\n\n  useEffect(() => {\n    if (emblaApi) emblaApi.on('slidesInView', logSlidesInView)\n  }, [emblaApi, logSlidesInView])\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Events in Embla Carousel\nDESCRIPTION: The on method subscribes to an Embla-specific event with a callback. Event listeners persist until the carousel is destroyed or the event is removed.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\non(event: EmblaEventType, callback: (emblaApi: EmblaCarouselType, eventName: EmblaEventType) => void): void\n```\n\n----------------------------------------\n\nTITLE: Accessing the Embla Carousel API in React\nDESCRIPTION: Example of using useEffect to access the Embla Carousel API after component initialization. Shows how to use the second return value from useEmblaCarousel to interact with carousel methods.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/react.mdx#2025-04-20_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport React, { useEffect } from 'react'\nimport useEmblaCarousel from 'embla-carousel-react'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = useEmblaCarousel({ loop: false })\n\n  useEffect(() => {\n    if (emblaApi) {\n      console.log(emblaApi.slideNodes()) // Access API\n    }\n  }, [emblaApi])\n\n  return (\n    <div className=\"embla\" ref={emblaRef}>\n      <div className=\"embla__container\">\n        <div className=\"embla__slide\">Slide 1</div>\n        <div className=\"embla__slide\">Slide 2</div>\n        <div className=\"embla__slide\">Slide 3</div>\n      </div>\n    </div>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Embla Carousel Vue Component Structure\nDESCRIPTION: Demonstrates the minimal setup required for an Embla Carousel in a Vue component, including the script setup, template structure, and use of emblaCarouselVue function.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/vue.mdx#2025-04-20_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\n  import emblaCarouselVue from 'embla-carousel-vue'\n\n  const [emblaRef] = emblaCarouselVue()\n</script>\n\n<template>\n  <div class=\"embla\" ref=\"emblaRef\">\n    <div class=\"embla__container\">\n      <div class=\"embla__slide\">Slide 1</div>\n      <div class=\"embla__slide\">Slide 2</div>\n      <div class=\"embla__slide\">Slide 3</div>\n    </div>\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel Plugins in React\nDESCRIPTION: This React component example shows how to use TypeScript with Embla Carousel plugins. It imports the EmblaPluginType and uses it to type the plugins prop.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react'\nimport { EmblaPluginType } from 'embla-carousel'\nimport useEmblaCarousel from 'embla-carousel-react'\nimport Autoplay from 'embla-carousel-autoplay'\n\ntype PropType = {\n  plugins?: EmblaPluginType[]\n}\n\nexport function EmblaCarousel(props) {\n  const [emblaRef, emblaApi] = useEmblaCarousel({ loop: true }, props.plugins)\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Event Listeners to Embla Carousel in Vanilla JavaScript\nDESCRIPTION: This code demonstrates how to initialize an Embla Carousel and subscribe to the 'slidesInView' event using vanilla JavaScript. It selects a carousel element, initializes it, and adds an event listener that logs slides in view when triggered.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport EmblaCarousel from 'embla-carousel'\n\nconst emblaNode = document.querySelector('.embla')\nconst emblaApi = EmblaCarousel(emblaNode)\n\nfunction logSlidesInView(emblaApi) {\n  console.log(emblaApi.slidesInView())\n}\n\nemblaApi.on('slidesInView', logSlidesInView)\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel in Svelte\nDESCRIPTION: Shows how to use TypeScript with Embla Carousel in a Svelte component, including importing the EmblaCarouselType and using it to type the emblaApi variable and callback functions.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import { EmblaCarouselType } from 'embla-carousel'\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n\n  let emblaApi: EmblaCarouselType\n\n  function logSlidesInView(emblaApi: EmblaCarouselType): void {\n    console.log(emblaApi.slidesInView())\n  }\n\n  function onInit(event: CustomEvent<EmblaCarouselType>): void {\n    emblaApi = event.detail\n    emblaApi.on('slidesInView', logSlidesInView)\n  }\n</script>\n\n<div class=\"embla\" use:emblaCarouselSvelte onemblaInit=\"{onInit}\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Calculating Scroll Progress in Embla Carousel\nDESCRIPTION: The scrollProgress method returns a number between 0 and 1 representing how far the carousel has scrolled of its total scrollable length. This can be useful for creating scroll progress indicators.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nscrollProgress(): number\n```\n\n----------------------------------------\n\nTITLE: Initializing Embla Carousel with JavaScript\nDESCRIPTION: Demonstrates how to initialize the Embla Carousel by selecting the container element, setting options, and accessing the API.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/cdn.mdx#2025-04-20_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/javascript\">\n  const emblaNode = document.querySelector('.embla')\n  const options = { loop: false }\n  const emblaApi = EmblaCarousel(emblaNode, options)\n\n  console.log(emblaApi.slideNodes()) // Access API\n</script>\n```\n\n----------------------------------------\n\nTITLE: Basic Embla Carousel React Component Structure\nDESCRIPTION: Minimal setup for an Embla Carousel React component using the useEmblaCarousel hook. Demonstrates the required overflow wrapper and scroll container structure.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/react.mdx#2025-04-20_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport React from 'react'\nimport useEmblaCarousel from 'embla-carousel-react'\n\nexport function EmblaCarousel() {\n  const [emblaRef] = useEmblaCarousel()\n\n  return (\n    <div className=\"embla\" ref={emblaRef}>\n      <div className=\"embla__container\">\n        <div className=\"embla__slide\">Slide 1</div>\n        <div className=\"embla__slide\">Slide 2</div>\n        <div className=\"embla__slide\">Slide 3</div>\n      </div>\n    </div>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TypeScript Types for Embla Carousel Options\nDESCRIPTION: Type definitions for Embla Carousel configuration options including active state, alignment, axis, breakpoints, container selection, scroll containment, direction, drag behavior, duration, looping, and event handling.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\ninterface EmblaOptionsType {\n  active: boolean;  // Default: true\n  align: string | ((viewSize: number, snapSize: number, index: number) => number);  // Default: 'center'\n  axis: string;  // Default: 'x'\n  breakpoints: EmblaOptionsType;  // Default: {}\n  container: string | HTMLElement | null;  // Default: null\n  containScroll: false | string;  // Default: 'trimSnaps'\n  direction: string;  // Default: 'ltr'\n  dragFree: boolean;  // Default: false\n  dragThreshold: number;  // Default: 10\n  duration: number;  // Default: 25\n  inViewThreshold: IntersectionObserverInit['threshold'];  // Default: 0\n  loop: boolean;  // Default: false\n  skipSnaps: boolean;  // Default: false\n  slides: string | HTMLElement[] | NodeListOf<HTMLElement> | null;  // Default: null\n  slidesToScroll: string | number;  // Default: 1\n  startIndex: number;  // Default: 0\n  watchDrag: boolean | ((emblaApi: EmblaCarouselType, event: MouseEvent | TouchEvent) => boolean | void);  // Default: true\n  watchFocus: boolean | ((emblaApi: EmblaCarouselType, event: FocusEvent) => boolean | void);  // Default: true\n  watchResize: boolean | ((emblaApi: EmblaCarouselType, entries: ResizeObserverEntry[]) => boolean | void);  // Default: true\n}\n```\n\n----------------------------------------\n\nTITLE: Calling Embla Carousel Methods in Vanilla JavaScript\nDESCRIPTION: Demonstrates how to initialize an Embla Carousel instance and call the slideNodes method in vanilla JavaScript.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport EmblaCarousel from 'embla-carousel'\n\nconst emblaNode = document.querySelector('.embla')\nconst emblaApi = EmblaCarousel(emblaNode)\n\nconsole.log(emblaApi.slideNodes())\n```\n\n----------------------------------------\n\nTITLE: Adding Event Listeners to Embla Carousel in Svelte\nDESCRIPTION: This Svelte implementation shows how to initialize an Embla Carousel and add an event listener. It uses the onemblaInit event to capture the carousel API when it's initialized, then adds the event listener to monitor slides in view.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n\n  let emblaApi\n\n  function logSlidesInView(emblaApi) {\n    console.log(emblaApi.slidesInView())\n  }\n\n  function onInit(event) {\n    emblaApi = event.detail\n    emblaApi.on('slidesInView', logSlidesInView)\n  }\n</script>\n\n<div class=\"embla\" use:emblaCarouselSvelte onemblaInit=\"{onInit}\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Using EmblaEventType in React with TypeScript\nDESCRIPTION: Example of importing and using the EmblaEventType in a React component with TypeScript. This demonstrates how to set up event listeners with the useEmblaCarousel hook and proper TypeScript typing.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nimport React, { useCallback } from 'react'\nimport { EmblaCarouselType, EmblaEventType } from 'embla-carousel'\nimport useEmblaCarousel from 'embla-carousel-react'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = useEmblaCarousel()\n\n  const logEmblaEvent = useCallback(\n    (emblaApi: EmblaCarouselType, eventName: EmblaEventType) => {\n      console.log(`Embla just triggered ${eventName}!`)\n    },\n    []\n  )\n\n  useEffect(() => {\n    if (emblaApi) emblaApi.on('slidesInView', logEmblaEvent)\n  }, [emblaApi, logEmblaEvent])\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel in Svelte\nDESCRIPTION: Example of using TypeScript with Embla Carousel in Svelte, showing how to type options.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_19\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import { EmblaOptionsType } from 'embla-carousel'\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n\n  let options: EmblaOptionsType = { loop: true }\n</script>\n\n<div class=\"embla\" use:emblaCarouselSvelte=\"{{ options }}\">...</div>\n```\n\n----------------------------------------\n\nTITLE: React Component Implementation\nDESCRIPTION: React component implementation using useEmblaCarousel hook with previous and next button functionality.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/previous-and-next-buttons.md#2025-04-20_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nimport React, { useCallback } from 'react'\nimport useEmblaCarousel from 'embla-carousel-react'\n\nexport const EmblaCarousel = () => {\n  const [emblaRef, emblaApi] = useEmblaCarousel()\n\n  const scrollPrev = useCallback(() => {\n    if (emblaApi) emblaApi.scrollPrev()\n  }, [emblaApi])\n\n  const scrollNext = useCallback(() => {\n    if (emblaApi) emblaApi.scrollNext()\n  }, [emblaApi])\n\n  return (\n    <div className=\"embla\">\n      <div className=\"embla__viewport\" ref={emblaRef}>\n        <div className=\"embla__container\">\n          <div className=\"embla__slide\">Slide 1</div>\n          <div className=\"embla__slide\">Slide 2</div>\n          <div className=\"embla__slide\">Slide 3</div>\n        </div>\n      </div>\n      <button className=\"embla__prev\" onClick={scrollPrev}>\n        Prev\n      </button>\n      <button className=\"embla__next\" onClick={scrollNext}>\n        Next\n      </button>\n    </div>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Internal Engine in Embla Carousel\nDESCRIPTION: The internalEngine method exposes almost all internal functionality used by Embla. It's useful for creating plugins but should be used with caution.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\ninternalEngine(): EmblaEngineType\n```\n\n----------------------------------------\n\nTITLE: Adding Event Listeners to Embla Carousel Autoplay Plugin in React\nDESCRIPTION: This React component example shows how to add an event listener to the Embla Carousel Autoplay plugin. It uses the useEmblaCarousel hook to initialize the carousel and sets up the event listener in a useEffect hook.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useEffect, useCallback } from 'react'\nimport useEmblaCarousel from 'embla-carousel-react'\nimport Autoplay from 'embla-carousel-autoplay'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = useEmblaCarousel({ loop: true }, [Autoplay()])\n\n  const logPluginEvent = useCallback((emblaApi, eventName) => {\n    console.log(`Autoplay just triggered ${eventName}!`)\n  }, [])\n\n  useEffect(() => {\n    if (emblaApi) emblaApi.on('autoplay:stop', logPluginEvent)\n  }, [emblaApi, logPluginEvent])\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel in Vue\nDESCRIPTION: Example of using TypeScript with Embla Carousel in Vue, showing how to type options.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_17\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\n  import { EmblaOptionsType } from 'embla-carousel'\n  import emblaCarouselVue from 'embla-carousel-vue'\n\n  const options: EmblaOptionsType = { loop: true }\n  const [emblaRef] = emblaCarouselVue(options)\n\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Vanilla JavaScript Implementation\nDESCRIPTION: Complete JavaScript implementation showing node selection and event listener setup for navigation buttons.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/previous-and-next-buttons.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport EmblaCarousel from 'embla-carousel'\n\n// Grab wrapper nodes\nconst rootNode = document.querySelector('.embla')\nconst viewportNode = rootNode.querySelector('.embla__viewport')\n\n// Grab button nodes\nconst prevButtonNode = rootNode.querySelector('.embla__prev')\nconst nextButtonNode = rootNode.querySelector('.embla__next')\n\n// Initialize the carousel\nconst embla = EmblaCarousel(viewportNode)\n\n// Add click listeners\nprevButtonNode.addEventListener('click', embla.scrollPrev, false)\nnextButtonNode.addEventListener('click', embla.scrollNext, false)\n```\n\n----------------------------------------\n\nTITLE: Adding Embla Carousel Plugins in Svelte\nDESCRIPTION: Example showing how to add plugins to an Embla Carousel in Svelte, specifically the Autoplay plugin.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/svelte.mdx#2025-04-20_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n  import Autoplay from 'embla-carousel-autoplay'\n\n  let options = { loop: false }\n  let plugins = [Autoplay()]\n</script>\n\n<div class=\"embla\" use:emblaCarouselSvelte=\"{{ options, plugins }}\">\n  <div class=\"embla__container\">\n    <div class=\"embla__slide\">Slide 1</div>\n    <div class=\"embla__slide\">Slide 2</div>\n    <div class=\"embla__slide\">Slide 3</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using EmblaEventType in Solid.js with TypeScript\nDESCRIPTION: Example of importing and using the EmblaEventType in a Solid.js component with TypeScript. This demonstrates how to set up event listeners with the createEmblaCarousel function and proper TypeScript typing.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_13\n\nLANGUAGE: jsx\nCODE:\n```\nimport { onMount } from 'solid-js'\nimport { EmblaCarouselType, EmblaEventType } from 'embla-carousel'\nimport createEmblaCarousel from 'embla-carousel-solid'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = createEmblaCarousel()\n\n  function logEmblaEvent(\n    emblaApi: EmblaCarouselType,\n    eventName: EmblaEventType\n  ): void {\n    console.log(`Embla just triggered ${eventName}!`)\n  }\n\n  onMount(() => {\n    const api = emblaApi()\n    if (api) api.on('slidesInView', logEmblaEvent)\n  })\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel in Vanilla JS\nDESCRIPTION: Example of using TypeScript with Embla Carousel in Vanilla JavaScript, showing how to type options.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nimport EmblaCarousel, { EmblaOptionsType } from 'embla-carousel'\n\nconst emblaNode = document.querySelector('.embla')\nconst options: EmblaOptionsType = { loop: true }\nconst emblaApi = EmblaCarousel(emblaNode, options)\n```\n\n----------------------------------------\n\nTITLE: Implementing Embla Carousel with Autoplay Plugin\nDESCRIPTION: Example of how to integrate the Autoplay plugin into an Embla Carousel Solid.js component.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/solid.mdx#2025-04-20_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\nimport createEmblaCarousel from 'embla-carousel-solid'\nimport Autoplay from 'embla-carousel-autoplay'\n\nexport function EmblaCarousel() {\n  const [emblaRef] = createEmblaCarousel(\n    () => ({ loop: true }),\n    () => [AutoPlay()]\n  )\n\n  return (\n    <div class=\"embla\" ref={emblaRef}>\n      <div class=\"embla__container\">\n        <div class=\"embla__slide\">Slide 1</div>\n        <div class=\"embla__slide\">Slide 2</div>\n        <div class=\"embla__slide\">Slide 3</div>\n      </div>\n    </div>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Using EmblaEventType in Vue with TypeScript\nDESCRIPTION: Example of importing and using the EmblaEventType in a Vue component with TypeScript. This demonstrates how to set up event listeners with the emblaCarouselVue function and proper TypeScript typing.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\n  import { onMounted } from 'vue'\n  import { EmblaCarouselType, EmblaEventType } from 'embla-carousel'\n  import emblaCarouselVue from 'embla-carousel-vue'\n\n  const [emblaRef] = emblaCarouselVue()\n\n  function logEmblaEvent(\n    emblaApi: EmblaCarouselType,\n    eventName: EmblaEventType\n  ): void {\n    console.log(`Embla just triggered ${eventName}!`)\n  }\n\n  onMounted(() => {\n    if (emblaApi.value) emblaApi.value.on('slidesInView', logEmblaEvent)\n  })\n\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Using EmblaEventType in Svelte with TypeScript\nDESCRIPTION: Example of importing and using the EmblaEventType in a Svelte component with TypeScript. This demonstrates how to set up event listeners with the emblaCarouselSvelte directive and proper TypeScript typing.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import { EmblaCarouselType, EmblaEventType } from 'embla-carousel'\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n\n  let emblaApi: EmblaCarouselType\n\n  function logEmblaEvent(\n    emblaApi: EmblaCarouselType,\n    eventName: EmblaEventType\n  ): void {\n    console.log(`Embla just triggered ${eventName}!`)\n  }\n\n  function onInit(event: CustomEvent<EmblaCarouselType>): void {\n    emblaApi = event.detail\n    emblaApi.on('slidesInView', logEmblaEvent)\n  }\n</script>\n\n<div class=\"embla\" use:emblaCarouselSvelte onemblaInit=\"{onInit}\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel Plugins in Vanilla JavaScript\nDESCRIPTION: This TypeScript example demonstrates how to use the EmblaPluginType from the core Embla Carousel package when initializing the carousel with plugins in Vanilla JavaScript.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nimport EmblaCarousel, { EmblaPluginType } from 'embla-carousel'\nimport Autoplay from 'embla-carousel-autoplay'\n\nconst emblaNode = document.querySelector('.embla')\nconst plugins: EmblaPluginType[] = [Autoplay()]\nconst emblaApi = EmblaCarousel(emblaNode, { loop: true }, plugins)\n```\n\n----------------------------------------\n\nTITLE: Changing Options After Initialization in Vue\nDESCRIPTION: Example of changing carousel options after initialization using reactive references in Vue.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\n  import emblaCarouselVue from 'embla-carousel-vue'\n\n  const options = ref({ loop: true })\n  const [emblaRef, emblaApi] = emblaCarouselVue(options)\n\n  function toggleLoop() {\n    options.value = {\n      ...options.value,\n      loop: !options.value.loop\n    }\n  }\n\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Calling Embla Carousel Methods in React\nDESCRIPTION: Shows how to initialize an Embla Carousel instance and call the slideNodes method in a React component using the useEmblaCarousel hook.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useEffect } from 'react'\nimport useEmblaCarousel from 'embla-carousel-react'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = useEmblaCarousel()\n\n  useEffect(() => {\n    if (emblaApi) console.log(emblaApi.slideNodes())\n  }, [emblaApi])\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel Plugins in Svelte\nDESCRIPTION: This Svelte component example shows how to use TypeScript with Embla Carousel plugins. It imports the EmblaPluginType and uses it to type the plugins array.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import { EmblaPluginType } from 'embla-carousel'\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n  import Autoplay from 'embla-carousel-autoplay'\n\n  let emblaApi\n  let plugins: EmblaPluginType[] = [Autoplay()]\n</script>\n\n<div class=\"embla\" use:emblaCarouselSvelte=\"{{ plugins }}\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Using EmblaEventType in Vanilla JavaScript with TypeScript\nDESCRIPTION: Example of importing and using the EmblaEventType from the core package with vanilla JavaScript. This demonstrates how to set up event listeners with proper TypeScript typing.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nimport EmblaCarousel, {\n  EmblaCarouselType,\n  EmblaEventType\n} from 'embla-carousel'\n\nconst emblaNode = document.querySelector('.embla')\nconst emblaApi = EmblaCarousel(emblaNode)\n\nfunction logEmblaEvent(\n  emblaApi: EmblaCarouselType,\n  eventName: EmblaEventType\n): void {\n  console.log(`Embla just triggered ${eventName}!`)\n}\n\nemblaApi.on('slidesInView', logEmblaEvent)\n```\n\n----------------------------------------\n\nTITLE: Configuring Vertical Slide Container with CSS Grid\nDESCRIPTION: This snippet shows how to modify the CSS Grid container to create a vertical carousel. It changes the grid-auto-flow to row, sets the height of each slide, and specifies a container height.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-container.md#2025-04-20_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n.embla__container {\n  display: grid;\n  grid-auto-flow: row;\n  grid-auto-rows: 80%; /* Each slide covers 80% of the viewport */\n  height: 200px;\n}\n```\n\n----------------------------------------\n\nTITLE: Styling the Embla Carousel with CSS\nDESCRIPTION: Essential CSS styles for making the Embla Carousel work correctly. Includes styling for the overflow wrapper, container, and slides.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/react.mdx#2025-04-20_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.embla {\n  overflow: hidden;\n}\n.embla__container {\n  display: flex;\n}\n.embla__slide {\n  flex: 0 0 100%;\n  min-width: 0;\n}\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel in React\nDESCRIPTION: Shows how to use TypeScript with Embla Carousel in a React component, including importing the EmblaCarouselType and using it to type a callback function.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nimport React, { useCallback } from 'react'\nimport { EmblaCarouselType } from 'embla-carousel'\nimport useEmblaCarousel from 'embla-carousel-react'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = useEmblaCarousel()\n\n  const logSlidesInView = useCallback((emblaApi: EmblaCarouselType) => {\n    console.log(emblaApi.slidesInView())\n  }, [])\n\n  useEffect(() => {\n    if (emblaApi) emblaApi.on('slidesInView', logSlidesInView)\n  }, [emblaApi, logSlidesInView])\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Embla Carousel API\nDESCRIPTION: Example of how to access and use the Embla Carousel API in a Solid.js component using onMount hook.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/solid.mdx#2025-04-20_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { onMount } from 'solid-js'\nimport createEmblaCarousel from 'embla-carousel-solid'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = createEmblaCarousel(() => ({ loop: true }))\n\n  onMount(() => {\n    const api = emblaApi()\n    if (api) {\n      console.log(api.slideNodes()) // Access API\n    }\n  })\n\n  return (\n    <div class=\"embla\" ref={emblaRef}>\n      <div class=\"embla__container\">\n        <div class=\"embla__slide\">Slide 1</div>\n        <div class=\"embla__slide\">Slide 2</div>\n        <div class=\"embla__slide\">Slide 3</div>\n      </div>\n    </div>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Responsive Slide Gaps with Media Queries in Embla Carousel\nDESCRIPTION: Implements responsive gap sizes that change based on viewport width. Default gap is 10px, increasing to 20px at the 768px breakpoint for improved spacing on larger screens.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-gaps.md#2025-04-20_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide {\n  margin-right: 10px; /* Default slide gap */\n}\n@media (min-width: 768px) {\n  .embla__slide {\n    margin-right: 20px; /* Breakpoint SM gap */\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Merging Multiple Breakpoint Options in Embla Carousel\nDESCRIPTION: This JavaScript snippet shows how multiple matching breakpoint options are merged in Embla Carousel, with options from larger breakpoints overriding those from smaller ones.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/breakpoints.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n  loop: false, // --> 419px screens and down will apply { loop: false }\n  breakpoints: {\n    '(min-width: 420px)': { align: 'start' }, // --> 420px screens and up will apply { align: 'start', loop: false }\n    '(min-width: 768px)': { loop: true } // --> 768px screens and up will apply { align: 'start', loop: true }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel in Solid\nDESCRIPTION: Demonstrates how to use TypeScript with Embla Carousel in a Solid component, including importing the EmblaCarouselType and using it to type a callback function.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\nimport { onMount } from 'solid-js'\nimport { EmblaCarouselType } from 'embla-carousel'\nimport createEmblaCarousel from 'embla-carousel-solid'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = createEmblaCarousel()\n\n  function logSlidesInView(emblaApi: EmblaCarouselType): void {\n    console.log(emblaApi.slidesInView())\n  }\n\n  onMount(() => {\n    const api = emblaApi()\n    if (api) api.on('slidesInView', logSlidesInView)\n  })\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Embla Carousel API in Vue\nDESCRIPTION: Example of how to access the Embla Carousel API within a Vue component using the onMounted lifecycle hook.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/vue.mdx#2025-04-20_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\n  import { onMounted } from 'vue'\n  import emblaCarouselVue from 'embla-carousel-vue'\n\n  const [emblaRef, emblaApi] = emblaCarouselVue({ loop: false })\n\n  onMounted(() => {\n    if (emblaApi.value) {\n      console.log(emblaApi.value.slideNodes()) // Access API\n    }\n  })\n</script>\n\n<template>\n  <div class=\"embla\" ref=\"emblaRef\">\n    <div class=\"embla__container\">\n      <div class=\"embla__slide\">Slide 1</div>\n      <div class=\"embla__slide\">Slide 2</div>\n      <div class=\"embla__slide\">Slide 3</div>\n    </div>\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Initializing Embla Carousel with the Autoplay Plugin\nDESCRIPTION: Demonstrates how to initialize the Embla Carousel with the Autoplay plugin by adding it to the plugins array.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/cdn.mdx#2025-04-20_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/javascript\">\n  const emblaNode = document.querySelector('.embla')\n  const options = { loop: false }\n  const plugins = [EmblaCarouselAutoplay()]\n  const emblaApi = EmblaCarousel(emblaNode, options, plugins)\n</script>\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel in Vanilla JavaScript\nDESCRIPTION: Demonstrates how to use TypeScript with Embla Carousel in vanilla JavaScript, including importing the EmblaCarouselType and using it to type a callback function.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport EmblaCarousel, { EmblaCarouselType } from 'embla-carousel'\n\nconst emblaNode = document.querySelector('.embla')\nconst emblaApi = EmblaCarousel(emblaNode)\n\nfunction logSlidesInView(emblaApi: EmblaCarouselType): void {\n  console.log(emblaApi.slidesInView())\n}\n\nemblaApi.on('slidesInView', logSlidesInView)\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel Plugins in Vue\nDESCRIPTION: This Vue component setup demonstrates how to use TypeScript with Embla Carousel plugins. It imports the EmblaPluginType and uses it to type the plugins array.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\n  import { EmblaPluginType } from 'embla-carousel'\n  import emblaCarouselVue from 'embla-carousel-vue'\n  import Autoplay from 'embla-carousel-autoplay'\n\n  const plugins: EmblaPluginType[] = [Autoplay()]\n  const [emblaRef] = emblaCarouselVue({ loop: true }, plugins)\n\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Accessing Embla Carousel API in Svelte\nDESCRIPTION: Example showing how to access the Embla Carousel API by capturing the emblaInit event and storing the carousel instance.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/svelte.mdx#2025-04-20_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n\n  let emblaApi\n  let options = { loop: false }\n\n  function onInit(event) {\n    emblaApi = event.detail\n    console.log(emblaApi.slideNodes()) // Access API\n  }\n</script>\n\n<div\n  class=\"embla\"\n  use:emblaCarouselSvelte=\"{{ options }}\"\n  onemblaInit=\"{onInit}\"\n>\n  <div class=\"embla__container\">\n    <div class=\"embla__slide\">Slide 1</div>\n    <div class=\"embla__slide\">Slide 2</div>\n    <div class=\"embla__slide\">Slide 3</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Wheel Gestures Plugin\nDESCRIPTION: Demonstrates how to import and initialize the Wheel Gestures plugin with Embla Carousel. The plugin can be configured with optional parameters for customization.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/wheel-gestures.mdx#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport EmblaCarousel from 'embla-carousel'\nimport { WheelGesturesPlugin } from 'embla-carousel-wheel-gestures'\n\nconst embla = EmblaCarousel(emblaRoot, { loop: false }, [WheelGesturesPlugin()]) // Add plugin\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel in Vue\nDESCRIPTION: Illustrates how to use TypeScript with Embla Carousel in a Vue component, including importing the EmblaCarouselType and using it to type a callback function.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\n  import { onMounted } from 'vue'\n  import { EmblaCarouselType } from 'embla-carousel'\n  import emblaCarouselVue from 'embla-carousel-vue'\n\n  const [emblaRef] = emblaCarouselVue()\n\n  function logSlidesInView(emblaApi: EmblaCarouselType): void {\n    console.log(emblaApi.slidesInView())\n  }\n\n  onMounted(() => {\n    if (emblaApi.value) emblaApi.value.on('slidesInView', logSlidesInView)\n  })\n\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Setting Loop Option with Constructor in React\nDESCRIPTION: Example of setting the loop option to true using constructor options in React.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport useEmblaCarousel from 'embla-carousel-react'\n\nexport function EmblaCarousel() {\n  const [emblaRef] = useEmblaCarousel({ loop: true })\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel in Solid\nDESCRIPTION: Example of using TypeScript with Embla Carousel in Solid, showing how to type options.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_18\n\nLANGUAGE: tsx\nCODE:\n```\nimport { EmblaOptionsType } from 'embla-carousel'\nimport createEmblaCarousel from 'embla-carousel-solid'\n\ntype PropType = {\n  options?: EmblaOptionsType\n}\n\nexport function EmblaCarousel(props) {\n  const [emblaRef] = createEmblaCarousel(props.options)\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Horizontal Slide Container with Flexbox in CSS\nDESCRIPTION: This snippet shows how to use flexbox to create a horizontal slide container for Embla Carousel. It sets the display property to flex, which stacks the slides horizontally.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-container.md#2025-04-20_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.embla__container {\n  display: flex;\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Event Listeners to Embla Carousel Autoplay Plugin in Vue\nDESCRIPTION: This Vue component setup demonstrates how to add an event listener to the Embla Carousel Autoplay plugin. It uses the emblaCarouselVue function to create the carousel and sets up the event listener in the onMounted hook.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\n  import { onMounted } from 'vue'\n  import emblaCarouselVue from 'embla-carousel-vue'\n  import Autoplay from 'embla-carousel-autoplay'\n\n  const [emblaRef, emblaApi] = emblaCarouselVue({ loop: true }, [Autoplay()])\n\n  function logPluginEvent(emblaApi, eventName) {\n    console.log(`Autoplay just triggered ${eventName}!`)\n  }\n\n  onMounted(() => {\n    if (emblaApi.value) emblaApi.value.on('autoplay:stop', logPluginEvent)\n  })\n\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Adding Event Listeners to Embla Carousel in Vue\nDESCRIPTION: This Vue implementation shows how to initialize an Embla Carousel and add an event listener using the Vue Composition API. It uses onMounted to ensure the event listener is added after the component is mounted and the carousel is initialized.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\n  import { onMounted } from 'vue'\n  import emblaCarouselVue from 'embla-carousel-vue'\n\n  const [emblaRef, emblaApi] = emblaCarouselVue()\n\n  function logSlidesInView(emblaApi) {\n    console.log(emblaApi.slidesInView())\n  }\n\n  onMounted(() => {\n    if (emblaApi.value) emblaApi.value.on('slidesInView', logSlidesInView)\n  })\n\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript with Embla Carousel Plugins in Solid\nDESCRIPTION: This Solid component example demonstrates how to use TypeScript with Embla Carousel plugins. It imports the EmblaPluginType and uses it to type the plugins prop.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_14\n\nLANGUAGE: tsx\nCODE:\n```\nimport { EmblaPluginType } from 'embla-carousel'\nimport createEmblaCarousel from 'embla-carousel-solid'\nimport Autoplay from 'embla-carousel-autoplay'\n\ntype PropType = {\n  plugins?: EmblaPluginType[]\n}\n\nexport function EmblaCarousel(props) {\n  const [emblaRef, emblaApi] = createEmblaCarousel(\n    () => ({ loop: true }),\n    props.plugins\n  )\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adjusting Embla Carousel Container Alignment in CSS\nDESCRIPTION: This CSS snippet ensures that each slide's height is determined by its content by aligning items to the flex-start of the container.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/auto-height.mdx#2025-04-20_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n.embla__container {\n  display: flex;\n  align-items: flex-start; /* Add this */\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Slide Gaps with CSS Grid in Embla Carousel\nDESCRIPTION: Uses CSS Grid's column-gap property to create consistent 20px spacing between slides. This approach is useful when the carousel container is already using CSS Grid layout.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-gaps.md#2025-04-20_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.embla__container {\n  grid-column-gap: 20px;\n}\n```\n\n----------------------------------------\n\nTITLE: Calling Embla Carousel Methods in Vue\nDESCRIPTION: Illustrates how to initialize an Embla Carousel instance and call the slideNodes method in a Vue component using the emblaCarouselVue function.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\n  import { onMounted } from 'vue'\n  import emblaCarouselVue from 'embla-carousel-vue'\n\n  const [emblaRef, emblaApi] = emblaCarouselVue()\n\n  onMounted(() => {\n    if (emblaApi.value) console.log(emblaApi.value.slideNodes())\n  })\n\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Defining watchSlides Option Type in TypeScript\nDESCRIPTION: Specifies the type definition for the watchSlides option in Embla Carousel. It can be a boolean or a function that takes EmblaCarouselType and MutationRecord[] as parameters and returns a boolean or void.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\nboolean | (emblaApi: EmblaCarouselType, mutations: MutationRecord[]) => boolean | void\n```\n\n----------------------------------------\n\nTITLE: Complete HTML Structure with Navigation Buttons\nDESCRIPTION: Final HTML structure including previous and next navigation buttons placed outside the viewport wrapper.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/previous-and-next-buttons.md#2025-04-20_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"embla\">\n  <div class=\"embla__viewport\">\n    <div class=\"embla__container\">\n      <div class=\"embla__slide\">Slide 1</div>\n      <div class=\"embla__slide\">Slide 2</div>\n      <div class=\"embla__slide\">Slide 3</div>\n    </div>\n  </div>\n  <button class=\"embla__prev\">Prev</button>\n  <button class=\"embla__next\">Next</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Embla Carousel Options with Fade Plugin (Minimal)\nDESCRIPTION: Minimal configuration for the Fade plugin that relies on the default align center setting and only disables containScroll. Achieves the same result as the full configuration.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/fade.mdx#2025-04-20_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst options = {\n  containScroll: false\n}\n```\n\n----------------------------------------\n\nTITLE: Calling Embla Carousel Methods in Svelte\nDESCRIPTION: Shows how to initialize an Embla Carousel instance and call the slideNodes method in a Svelte component using the emblaCarouselSvelte function.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n\n  let emblaApi\n\n  function onInit(event) {\n    emblaApi = event.detail\n    console.log(emblaApi.slideNodes())\n  }\n</script>\n\n<div class=\"embla\" use:emblaCarouselSvelte onemblaInit=\"{onInit}\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Calling Embla Carousel Methods in Solid\nDESCRIPTION: Demonstrates how to initialize an Embla Carousel instance and call the slideNodes method in a Solid component using the createEmblaCarousel function.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { onMount } from 'solid-js'\nimport createEmblaCarousel from 'embla-carousel-solid'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = createEmblaCarousel()\n\n  onMount(() => {\n    const api = emblaApi()\n    if (api) console.log(api.slideNodes())\n  })\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Styling the Embla Carousel with CSS\nDESCRIPTION: Applies the necessary CSS styles to make the carousel work properly, including overflow handling, flex display for the container, and slide sizing.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/cdn.mdx#2025-04-20_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.embla {\n  overflow: hidden;\n}\n.embla__container {\n  display: flex;\n}\n.embla__slide {\n  flex: 0 0 100%;\n  min-width: 0;\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Embla Carousel Component Structure\nDESCRIPTION: Minimal setup for creating an Embla Carousel component in Solid.js, demonstrating the required overflow wrapper and scroll container structure.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/solid.mdx#2025-04-20_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport createEmblaCarousel from 'embla-carousel-solid'\n\nexport function EmblaCarousel() {\n  const [emblaRef] = createEmblaCarousel()\n\n  return (\n    <div class=\"embla\" ref={emblaRef}>\n      <div class=\"embla__container\">\n        <div class=\"embla__slide\">Slide 1</div>\n        <div class=\"embla__slide\">Slide 2</div>\n        <div class=\"embla__slide\">Slide 3</div>\n      </div>\n    </div>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Vue Component Implementation\nDESCRIPTION: Vue component implementation using embla-carousel-vue with previous and next button functionality.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/previous-and-next-buttons.md#2025-04-20_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\n  import emblaCarouselVue from 'embla-carousel-vue'\n\n  const [emblaRef, emblaApi] = emblaCarouselVue()\n\n  function scrollNext() {\n    emblaApi.value?.scrollNext()\n  }\n\n  function scrollPrev() {\n    emblaApi.value?.scrollPrev()\n  }\n</script>\n\n<template>\n  <div class=\"embla\">\n    <div class=\"embla__viewport\" ref=\"emblaRef\">\n      <div class=\"embla__container\">\n        <div class=\"embla__slide\">Slide 1</div>\n        <div class=\"embla__slide\">Slide 2</div>\n        <div class=\"embla__slide\">Slide 3</div>\n      </div>\n    </div>\n    <button class=\"embla__prev\" @click=\"scrollPrev\">Prev</button>\n    <button class=\"embla__next\" @click=\"scrollNext\">Next</button>\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Changing Options After Initialization in Solid\nDESCRIPTION: Example of changing carousel options after initialization using signals in Solid.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_13\n\nLANGUAGE: jsx\nCODE:\n```\nimport { createSignal } from 'solid-js'\nimport createEmblaCarousel from 'embla-carousel-solid'\n\nexport function EmblaCarousel() {\n  const [options, setOptions] = createSignal({ loop: true })\n  const [emblaRef] = createEmblaCarousel(() => options())\n\n  function toggleLoop() {\n    setOptions((currentOptions) => ({\n      ...currentOptions,\n      loop: !currentOptions.loop\n    }))\n  }\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Styling the Embla Carousel\nDESCRIPTION: Essential CSS styles for the carousel wrapper, container, and slides to enable proper scrolling and layout.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/solid.mdx#2025-04-20_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.embla {\n  overflow: hidden;\n}\n.embla__container {\n  display: flex;\n}\n.embla__slide {\n  flex: 0 0 100%;\n  min-width: 0;\n}\n```\n\n----------------------------------------\n\nTITLE: Changing Options After Initialization in React\nDESCRIPTION: Example of changing carousel options after initialization using React state in React.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_11\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useState, useCallback } from 'react'\nimport useEmblaCarousel from 'embla-carousel-react'\n\nexport function EmblaCarousel() {\n  const [options, setOptions] = useState({ loop: true })\n  const [emblaRef, emblaApi] = useEmblaCarousel(options)\n\n  const toggleLoop = useCallback(() => {\n    setOptions((currentOptions) => ({\n      ...currentOptions,\n      loop: !currentOptions.loop\n    }))\n  }, [])\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Event Listeners to Embla Carousel Autoplay Plugin in Solid\nDESCRIPTION: This Solid component example demonstrates how to add an event listener to the Embla Carousel Autoplay plugin. It uses the createEmblaCarousel function to initialize the carousel and sets up the event listener in the onMount hook.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\nimport { onMount } from 'solid-js'\nimport createEmblaCarousel from 'embla-carousel-solid'\nimport Autoplay from 'embla-carousel-autoplay'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = createEmblaCarousel(\n    () => ({ loop: true }),\n    () => [AutoPlay()]\n  )\n\n  function logPluginEvent(emblaApi, eventName) {\n    console.log(`Autoplay just triggered ${eventName}!`)\n  }\n\n  onMount(() => {\n    const api = emblaApi()\n    if (api) api.on('autoplay:stop', logPluginEvent)\n  })\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Autoplay Plugin in Vanilla JavaScript\nDESCRIPTION: Example showing how to add the Autoplay plugin to Embla Carousel using vanilla JavaScript.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport EmblaCarousel from 'embla-carousel'\nimport Autoplay from 'embla-carousel-autoplay'\n\nconst emblaNode = document.querySelector('.embla')\nconst embla = EmblaCarousel(emblaNode, { loop: true }, [Autoplay()])\n```\n\n----------------------------------------\n\nTITLE: Setting Pixel-Based Slide Size with CSS\nDESCRIPTION: Shows how to set a fixed pixel-based slide size using CSS flexbox properties.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-sizes.md#2025-04-20_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide {\n  flex: 0 0 200px; /* Slide covers 200px of the viewport */\n  min-width: 0;\n}\n```\n\n----------------------------------------\n\nTITLE: Using Global Options in Vanilla JS\nDESCRIPTION: Example of setting global options for all carousels in Vanilla JavaScript.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport EmblaCarousel from 'embla-carousel'\n\nEmblaCarousel.globalOptions = { loop: true }\n\nconst emblaNode = document.querySelector('.embla')\nconst emblaApi = EmblaCarousel(emblaNode, { align: 'start' })\n```\n\n----------------------------------------\n\nTITLE: Adding Event Listeners to Embla Carousel Autoplay Plugin in Svelte\nDESCRIPTION: This Svelte component example shows how to add an event listener to the Embla Carousel Autoplay plugin. It uses the emblaCarouselSvelte action to create the carousel and sets up the event listener in the onInit function.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n  import Autoplay from 'embla-carousel-autoplay'\n\n  let emblaApi\n  let plugins = [Autoplay()]\n\n  function logPluginEvent(emblaApi, eventName) {\n    console.log(`Autoplay just triggered ${eventName}!`)\n  }\n\n  function onInit(event) {\n    emblaApi = event.detail\n    emblaApi.on('autoplay:stop', logPluginEvent)\n  }\n</script>\n\n<div\n  class=\"embla\"\n  use:emblaCarouselSvelte=\"{{ plugins }}\"\n  onemblaInit=\"{onInit}\"\n>\n  ...\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Autoplay Plugin to Embla Carousel in Vue\nDESCRIPTION: Example of how to add the Autoplay plugin to an Embla Carousel Vue component.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/vue.mdx#2025-04-20_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\n  import emblaCarouselVue from 'embla-carousel-vue'\n  import Autoplay from 'embla-carousel-autoplay'\n\n  const [emblaRef] = emblaCarouselVue({ loop: false }, [Autoplay()])\n</script>\n\n<template>\n  <div class=\"embla\" ref=\"emblaRef\">\n    <div class=\"embla__container\">\n      <div class=\"embla__slide\">Slide 1</div>\n      <div class=\"embla__slide\">Slide 2</div>\n      <div class=\"embla__slide\">Slide 3</div>\n    </div>\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Styling Embla Carousel in Vue\nDESCRIPTION: CSS styles for the basic Embla Carousel structure, including the overflow wrapper, container, and slides.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/vue.mdx#2025-04-20_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<style scoped>\n  .embla {\n    overflow: hidden;\n  }\n  .embla__container {\n    display: flex;\n  }\n  .embla__slide {\n    flex: 0 0 100%;\n    min-width: 0;\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: Removing Event Listeners from Embla Carousel in Vue\nDESCRIPTION: This Vue implementation demonstrates how to create a self-removing event listener with Embla Carousel. The event handler logs slides in view and then immediately removes itself from the carousel's event system.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\n  import { onMounted } from 'vue'\n  import emblaCarouselVue from 'embla-carousel-vue'\n\n  const [emblaRef, emblaApi] = emblaCarouselVue()\n\n  function logSlidesInViewOnce(emblaApi) {\n    console.log(emblaApi.slidesInView())\n    emblaApi.off('slidesInView', logSlidesInViewOnce)\n  }\n\n  onMounted(() => {\n    if (emblaApi.value) emblaApi.value.on('slidesInView', logSlidesInViewOnce)\n  })\n\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Removing Event Listeners from Embla Carousel in React\nDESCRIPTION: This React implementation shows how to create a self-removing event listener. It uses useCallback to maintain a stable function reference and implements a pattern where the event handler removes itself after executing.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useCallback, useEffect } from 'react'\nimport useEmblaCarousel from 'embla-carousel-react'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = useEmblaCarousel()\n\n  const logSlidesInViewOnce = useCallback((emblaApi) => {\n    console.log(emblaApi.slidesInView())\n    emblaApi.off('slidesInView', logSlidesInViewOnce)\n  }, [])\n\n  useEffect(() => {\n    if (emblaApi) emblaApi.on('slidesInView', logSlidesInViewOnce)\n  }, [emblaApi, logSlidesInViewOnce])\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Autoplay Plugin Options\nDESCRIPTION: Examples of configuring plugin options in various frameworks including global options setting.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport EmblaCarousel from 'embla-carousel'\nimport Autoplay from 'embla-carousel-autoplay'\n\nAutoplay.globalOptions = { delay: 4000 }\n\nconst emblaNode = document.querySelector('.embla')\nconst embla = EmblaCarousel(emblaNode, { loop: true }, [Autoplay()])\n```\n\n----------------------------------------\n\nTITLE: Creating Bidirectional Slide Gaps in Embla Carousel\nDESCRIPTION: Sets different margin values on both sides of carousel slides, creating asymmetric spacing with 20px on the right and 10px on the left of each slide.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-gaps.md#2025-04-20_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide {\n  margin-right: 20px;\n  margin-left: 10px;\n}\n```\n\n----------------------------------------\n\nTITLE: Identifying Non-Visible Slides in Embla Carousel\nDESCRIPTION: The slidesNotInView method returns an array of slide indexes that are currently not visible in the carousel viewport. It respects the inViewThreshold option.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nslidesNotInView(): number[]\n```\n\n----------------------------------------\n\nTITLE: Removing Event Listeners from Embla Carousel in SolidJS\nDESCRIPTION: This SolidJS implementation shows how to create a self-removing event listener with Embla Carousel. The event handler removes itself after the first execution using the off() method.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\nimport { onMount } from 'solid-js'\nimport createEmblaCarousel from 'embla-carousel-solid'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = createEmblaCarousel()\n\n  function logSlidesInViewOnce(emblaApi) {\n    console.log(emblaApi.slidesInView())\n    emblaApi.off('slidesInView', logSlidesInViewOnce)\n  }\n\n  onMount(() => {\n    const api = emblaApi()\n    if (api) api.on('slidesInView', logSlidesInViewOnce)\n  })\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Event Listeners to Embla Carousel Autoplay Plugin in Vanilla JavaScript\nDESCRIPTION: This snippet demonstrates how to add an event listener to the Embla Carousel Autoplay plugin using Vanilla JavaScript. It initializes the carousel with the Autoplay plugin and sets up a listener for the 'autoplay:stop' event.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport EmblaCarousel from 'embla-carousel'\nimport Autoplay from 'embla-carousel-autoplay'\n\nconst emblaNode = document.querySelector('.embla')\nconst emblaApi = EmblaCarousel(emblaNode, { loop: true }, [Autoplay()])\n\nfunction logPluginEvent(emblaApi, eventName) {\n  console.log(`Autoplay just triggered ${eventName}!`)\n}\n\nemblaApi.on('autoplay:stop', logPluginEvent)\n```\n\n----------------------------------------\n\nTITLE: Basic Embla Carousel Component Structure in Svelte\nDESCRIPTION: Minimal Svelte component setup for Embla Carousel, importing the action and applying it to the carousel container.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/svelte.mdx#2025-04-20_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n</script>\n\n<div class=\"embla\" use:emblaCarouselSvelte>\n  <div class=\"embla__container\">\n    <div class=\"embla__slide\">Slide 1</div>\n    <div class=\"embla__slide\">Slide 2</div>\n    <div class=\"embla__slide\">Slide 3</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Changing Options After Initialization in Svelte\nDESCRIPTION: Example of changing carousel options after initialization in Svelte with reactive assignments.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n\n  let options = { loop: true }\n\n  function toggleLoop() {\n    options = {\n      ...options,\n      loop: !options.loop\n    }\n  }\n</script>\n\n<div class=\"embla\" use:emblaCarouselSvelte=\"{{ options }}\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Removing Event Listeners from Embla Carousel in Svelte\nDESCRIPTION: This Svelte implementation demonstrates how to create a self-removing event listener. It defines a function that logs slides in view and then removes itself from the carousel's event system after being triggered once.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n\n  let emblaApi\n\n  function logSlidesInViewOnce(emblaApi) {\n    console.log(emblaApi.slidesInView())\n    emblaApi.off('slidesInView', logSlidesInViewOnce)\n  }\n\n  function onInit(event) {\n    emblaApi = event.detail\n    emblaApi.on('slidesInView', logSlidesInViewOnce)\n  }\n</script>\n\n<div class=\"embla\" use:emblaCarouselSvelte onemblaInit=\"{onInit}\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Unsubscribing from Events in Embla Carousel\nDESCRIPTION: The off method unsubscribes from an Embla-specific event. It requires the same callback reference used when subscribing to the event.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\noff(event: EmblaEventType, callback: (emblaApi: EmblaCarouselType, eventName: EmblaEventType) => void): void\n```\n\n----------------------------------------\n\nTITLE: Emitting Events in Embla Carousel\nDESCRIPTION: The emit method emits an Embla event. This doesn't trigger any internal Embla functionality and is used for custom event handling.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\nemit(event: EmblaEventType): void\n```\n\n----------------------------------------\n\nTITLE: Using Global Options in React\nDESCRIPTION: Example of setting global options for all carousels in React.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nimport useEmblaCarousel from 'embla-carousel-react'\n\nuseEmblaCarousel.globalOptions = { loop: true }\n\nexport function EmblaCarousel() {\n  const [emblaRef] = useEmblaCarousel({ align: 'start' })\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Event Listeners to Embla Carousel in SolidJS\nDESCRIPTION: This SolidJS implementation demonstrates how to initialize an Embla Carousel and add an event listener. It uses the onMount lifecycle hook to ensure the event listener is added after the component is mounted and the carousel API is available.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { onMount } from 'solid-js'\nimport createEmblaCarousel from 'embla-carousel-solid'\n\nexport function EmblaCarousel() {\n  const [emblaRef, emblaApi] = createEmblaCarousel()\n\n  function logSlidesInView(emblaApi) {\n    console.log(emblaApi.slidesInView())\n  }\n\n  onMount(() => {\n    const api = emblaApi()\n    if (api) api.on('slidesInView', logSlidesInView)\n  })\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Autoplay Plugin in React\nDESCRIPTION: Example showing how to add the Autoplay plugin to Embla Carousel in a React component.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport useEmblaCarousel from 'embla-carousel-react'\nimport Autoplay from 'embla-carousel-autoplay'\n\nexport function EmblaCarousel() {\n  const [emblaRef] = useEmblaCarousel({ loop: true }, [Autoplay()])\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Using Global Options in Solid\nDESCRIPTION: Example of setting global options for all carousels in Solid.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\nimport createEmblaCarousel from 'embla-carousel-solid'\n\ncreateEmblaCarousel.globalOptions = { loop: true }\n\nexport function EmblaCarousel() {\n  const [emblaRef] = createEmblaCarousel(() => ({ align: 'start' }))\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Conflicting Breakpoint Options in Embla Carousel\nDESCRIPTION: This JavaScript snippet illustrates how conflicting breakpoint options are resolved in Embla Carousel. The last matching breakpoint option takes precedence.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/breakpoints.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n  loop: false,\n  breakpoints: {\n    '(min-width: 768px)': { loop: true },\n    '(min-width: 420px)': { loop: false } // This will override the (min-width: 768px) breakpoint loop option\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Fade Plugin via NPM\nDESCRIPTION: Installs the Embla Carousel Fade plugin using NPM package manager and saves it to your project dependencies.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/fade.mdx#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-fade --save\n```\n\n----------------------------------------\n\nTITLE: Implementing Variable Slide Sizes with CSS\nDESCRIPTION: Example of setting different sizes for individual slides using CSS nth-child selectors.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-sizes.md#2025-04-20_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide:nth-child(1) {\n  flex: 0 0 30%; /* Slide covers 30% of the viewport */\n  min-width: 0;\n}\n.embla__slide:nth-child(2) {\n  flex: 0 0 60%; /* Slide covers 60% of the viewport */\n  min-width: 0;\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Selected Scroll Snap Index in Embla Carousel\nDESCRIPTION: The selectedScrollSnap method returns the index of the currently selected snap point in the carousel. It takes no parameters and returns a number.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nselectedScrollSnap(): number\n```\n\n----------------------------------------\n\nTITLE: Using Global Options in Svelte\nDESCRIPTION: Example of setting global options for all carousels in Svelte.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n\n  emblaCarouselSvelte.globalOptions = { loop: true }\n\n  let options = { align: 'start' }\n</script>\n\n<div class=\"embla\" use:emblaCarouselSvelte=\"{{ options }}\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Auto Height Plugin for Embla Carousel using NPM\nDESCRIPTION: This command installs the Auto Height plugin for Embla Carousel using NPM and saves it to the project dependencies.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/auto-height.mdx#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-auto-height --save\n```\n\n----------------------------------------\n\nTITLE: Styling Embla Carousel in Svelte\nDESCRIPTION: CSS styles for the carousel in a Svelte component, defining overflow handling, flex layout for the container, and slide sizing.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/svelte.mdx#2025-04-20_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  .embla {\n    overflow: hidden;\n  }\n  .embla__container {\n    display: flex;\n  }\n  .embla__slide {\n    flex: 0 0 100%;\n    min-width: 0;\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: Getting Previous Scroll Snap Index in Embla Carousel\nDESCRIPTION: The previousScrollSnap method returns the index of the previously selected snap point in the carousel. It takes no parameters and returns a number.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\npreviousScrollSnap(): number\n```\n\n----------------------------------------\n\nTITLE: Using Global Options in Vue\nDESCRIPTION: Example of setting global options for all carousels in Vue.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\n  import emblaCarouselVue from 'embla-carousel-vue'\n\n  emblaCarouselVue.globalOptions = { loop: true }\n\n  const [emblaRef] = emblaCarouselVue({ align: 'start' })\n\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing Auto Scroll Plugin via NPM for Embla Carousel\nDESCRIPTION: This command installs the Auto Scroll plugin for Embla Carousel using NPM and saves it to the project dependencies.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/auto-scroll.mdx#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-auto-scroll --save\n```\n\n----------------------------------------\n\nTITLE: Setting Breakpoint-Specific Options in Embla Carousel\nDESCRIPTION: This JavaScript snippet demonstrates how to use the breakpoints option to apply different carousel settings based on screen width. It sets the carousel to be inactive for screens wider than 768px.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/breakpoints.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n  active: true,\n  breakpoints: {\n    '(min-width: 768px)': { active: false }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Obtaining Scroll Snap List in Embla Carousel\nDESCRIPTION: The scrollSnapList method returns an array of numbers representing all snap point positions in the carousel. Each position indicates how far the carousel needs to progress to reach that position.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nscrollSnapList(): number[]\n```\n\n----------------------------------------\n\nTITLE: Setting Loop Option with Constructor in Solid\nDESCRIPTION: Example of setting the loop option to true using constructor options in Solid.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport createEmblaCarousel from 'embla-carousel-solid'\n\nexport function EmblaCarousel() {\n  const [emblaRef] = createEmblaCarousel(() => ({ loop: true }))\n\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Class Names Plugin via NPM for Embla Carousel\nDESCRIPTION: This snippet demonstrates how to install the Class Names plugin for Embla Carousel using NPM. It adds the plugin to the project's dependencies.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/class-names.mdx#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-class-names --save\n```\n\n----------------------------------------\n\nTITLE: Setting Fixed Slide Size with CSS Flexbox\nDESCRIPTION: Demonstrates how to set a fixed slide size covering 50% of the viewport using CSS flexbox properties.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-sizes.md#2025-04-20_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide {\n  flex: 0 0 50%; /* Slide covers 50% of the viewport */\n  min-width: 0;\n}\n```\n\n----------------------------------------\n\nTITLE: Reinitializing Embla Carousel\nDESCRIPTION: The reInit method allows for a hard reset of the carousel after initialization. It can be used to change options and plugins. Options are merged, while plugins are replaced.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nreInit(options?: EmblaOptionsType, plugins?: EmblaPluginType[]): void\n```\n\n----------------------------------------\n\nTITLE: Setting Loop Option with Constructor in Svelte\nDESCRIPTION: Example of setting the loop option to true using constructor options in Svelte.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import emblaCarouselSvelte from 'embla-carousel-svelte'\n\n  let options = { loop: true }\n</script>\n\n<div class=\"embla\" use:emblaCarouselSvelte=\"{{ options }}\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay with NPM\nDESCRIPTION: Installs the Embla Carousel Autoplay plugin using NPM package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/autoplay.mdx#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-autoplay --save\n```\n\n----------------------------------------\n\nTITLE: Simplified Breakpoint Options in Embla Carousel\nDESCRIPTION: This JavaScript snippet shows a simplified version of setting breakpoint-specific options, omitting the default active state and only specifying the change for larger screens.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/breakpoints.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n  breakpoints: {\n    '(min-width: 768px)': { active: false }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Plugins in Embla Carousel\nDESCRIPTION: The plugins method returns an object with key-value pairs where keys are plugin names and values are plugin APIs.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\nplugins(): EmblaPluginsType\n```\n\n----------------------------------------\n\nTITLE: Setting Slide Size with Flexbox in CSS\nDESCRIPTION: This snippet shows how to declare slide sizes using the flex property in a flexbox container. It sets each slide to cover 80% of the viewport.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-container.md#2025-04-20_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide {\n  flex: 0 0 80%; /* Slide covers 80% of the viewport */\n}\n```\n\n----------------------------------------\n\nTITLE: Including Embla Carousel Autoplay Plugin via CDN\nDESCRIPTION: Adds the Autoplay plugin script to your HTML page using a CDN link.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/cdn.mdx#2025-04-20_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/embla-carousel/embla-carousel.umd.js\"></script>\n<script src=\"https://unpkg.com/embla-carousel-autoplay/embla-carousel-autoplay.umd.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Adding Height Transition to Embla Carousel Container in CSS\nDESCRIPTION: This CSS snippet adds a smooth height transition to the Embla Carousel container. Note that transitioning height may impact performance due to reflow.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/auto-height.mdx#2025-04-20_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.embla__container {\n  transition: height 0.2s;\n}\n```\n\n----------------------------------------\n\nTITLE: Destroying Embla Carousel Instance\nDESCRIPTION: The destroy method permanently destroys the carousel instance. It's intended as a cleanup measure when the carousel is no longer needed.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/methods.mdx#2025-04-20_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\ndestroy(): void\n```\n\n----------------------------------------\n\nTITLE: Configuring Vertical Slide Container with Flexbox in CSS\nDESCRIPTION: This snippet demonstrates how to modify the flexbox container to create a vertical carousel. It changes the flex-direction to column and specifies a height for the container.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-container.md#2025-04-20_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.embla__container {\n  display: flex;\n  flex-direction: column;\n  height: 200px;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Fade Plugin via CDN\nDESCRIPTION: Adds the Embla Carousel Fade plugin to your project using a CDN link. This approach is suitable for direct inclusion in HTML files without a build process.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/fade.mdx#2025-04-20_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/embla-carousel-fade/embla-carousel-fade.umd.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Initializing Embla Carousel with JavaScript\nDESCRIPTION: JavaScript code showing how to initialize the carousel by selecting the root node.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/previous-and-next-buttons.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst emblaNode = document.querySelector('.embla') // Root node\nconst embla = EmblaCarousel(emblaNode) // Passed to the initializer here\n```\n\n----------------------------------------\n\nTITLE: Setting Loop Option with Constructor in Vanilla JS\nDESCRIPTION: Example of setting the loop option to true using constructor options in Vanilla JavaScript.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport EmblaCarousel from 'embla-carousel'\n\nconst emblaNode = document.querySelector('.embla')\nconst emblaApi = EmblaCarousel(emblaNode, { loop: true })\n```\n\n----------------------------------------\n\nTITLE: Content-Adaptive Slide Sizing with CSS\nDESCRIPTION: Configuration for slides that adapt to their content size while respecting viewport constraints.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-sizes.md#2025-04-20_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide {\n  flex: 0 0 auto; /* Adapt slide size to its content */\n  min-width: 0;\n  max-width: 100%; /* Prevent from growing larger than viewport */\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Wheel Gestures Plugin via CDN\nDESCRIPTION: Adds the Wheel Gestures plugin to your project using a CDN script tag.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/wheel-gestures.mdx#2025-04-20_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/embla-carousel-wheel-gestures/dist/embla-carousel-wheel-gestures.umd.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Horizontal Slide Container with CSS Grid\nDESCRIPTION: This snippet demonstrates how to use CSS Grid to create a horizontal slide container. It sets up a grid with auto-flow in columns and specifies each slide to cover 80% of the viewport.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-container.md#2025-04-20_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.embla__container {\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 80%; /* Each slide covers 80% of the viewport */\n}\n```\n\n----------------------------------------\n\nTITLE: Changing Options After Initialization in Vanilla JS\nDESCRIPTION: Example of changing carousel options after initialization using the reInit method in Vanilla JavaScript.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nimport EmblaCarousel from 'embla-carousel'\n\nconst emblaNode = document.querySelector('.embla')\nconst emblaApi = EmblaCarousel(emblaNode, { loop: true })\n\nemblaApi.reInit({ loop: false })\n```\n\n----------------------------------------\n\nTITLE: Changing Slide Sizes with CSS Media Queries in Embla Carousel\nDESCRIPTION: This CSS snippet demonstrates how to adjust slide sizes for different screen widths using media queries. It sets the default slide to cover 100% of the viewport and changes it to 50% for screens wider than 768px.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/breakpoints.md#2025-04-20_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide {\n  flex: 0 0 100%; /* Default slide covers 100% of the viewport */\n}\n@media (min-width: 768px) {\n  .embla__slide {\n    flex: 0 0 50%; /* Breakpoint SM slide covers 50% of the viewport */\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Loop Option with Constructor in Vue\nDESCRIPTION: Example of setting the loop option to true using constructor options in Vue.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/options.mdx#2025-04-20_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\n  import emblaCarouselVue from 'embla-carousel-vue'\n\n  const [emblaRef] = emblaCarouselVue({ loop: true })\n\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Removing Event Listeners from Embla Carousel in Vanilla JavaScript\nDESCRIPTION: This code demonstrates how to remove an event listener from an Embla Carousel using vanilla JavaScript. It creates a one-time event handler that automatically removes itself after execution using the off() method.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/events.mdx#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport EmblaCarousel from 'embla-carousel'\n\nconst emblaNode = document.querySelector('.embla')\nconst emblaApi = EmblaCarousel(emblaNode)\n\nfunction logSlidesInViewOnce(emblaApi) {\n  console.log(emblaApi.slidesInView())\n  emblaApi.off('slidesInView', logSlidesInViewOnce)\n}\n\nemblaApi.on('slidesInView', logSlidesInViewOnce)\n```\n\n----------------------------------------\n\nTITLE: Adjusting Slide Gaps with CSS Media Queries in Embla Carousel\nDESCRIPTION: This CSS snippet shows how to change slide gap sizes for different screen widths using media queries. It sets a default gap of 10px and increases it to 20px for screens wider than 768px.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/breakpoints.md#2025-04-20_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide {\n  margin-right: 10px; /* Default slide gap */\n}\n@media (min-width: 768px) {\n  .embla__slide {\n    margin-right: 20px; /* Breakpoint SM gap */\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Class Names Plugin via Yarn for Embla Carousel\nDESCRIPTION: This snippet shows how to install the Class Names plugin for Embla Carousel using Yarn. It adds the plugin to the project's dependencies.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/class-names.mdx#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-class-names\n```\n\n----------------------------------------\n\nTITLE: Responsive Slide Sizes with Media Queries\nDESCRIPTION: Implementation of responsive slide sizes using CSS media queries for different viewport widths.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-sizes.md#2025-04-20_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide {\n  flex: 0 0 100%; /* Default slide covers 100% of the viewport */\n  min-width: 0;\n}\n@media (min-width: 768px) {\n  .embla__slide {\n    flex: 0 0 50%; /* Breakpoint SM slide covers 50% of the viewport */\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: RTL-Compatible Slide Gaps using Inline Margins in Embla Carousel\nDESCRIPTION: Uses margin-inline-end and margin-inline-start to create slide gaps that automatically adjust for RTL languages. Creates 20px space after each slide and 10px space before each slide.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-gaps.md#2025-04-20_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide {\n  margin-inline-end: 20px; /* Space after the slide */\n  margin-inline-start: 10px; /* Space before the slide */\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Fade Plugin via Yarn\nDESCRIPTION: Installs the Embla Carousel Fade plugin using Yarn package manager and adds it to your project dependencies.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/fade.mdx#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-fade\n```\n\n----------------------------------------\n\nTITLE: Adding Basic Slide Gaps with CSS Margins in Embla Carousel\nDESCRIPTION: Sets a 20px right margin on carousel slides to create consistent spacing between slides. This is the simplest approach to creating slide gaps in an Embla Carousel.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-gaps.md#2025-04-20_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide {\n  margin-right: 20px;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Variable Slide Gaps in Embla Carousel\nDESCRIPTION: Applies different margin sizes to specific slides based on their position, creating a variable gap effect. The first slide has a 10px right margin, while the second slide has 20px right and 10px left margins.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/slide-gaps.md#2025-04-20_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n.embla__slide:nth-child(1) {\n  margin-right: 10px;\n}\n.embla__slide:nth-child(2) {\n  margin-right: 20px;\n  margin-left: 10px;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel for Svelte with npm\nDESCRIPTION: Command to install the Embla Carousel Svelte package using npm.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/svelte.mdx#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-svelte --save\n```\n\n----------------------------------------\n\nTITLE: Importing Embla Carousel Components in JSX\nDESCRIPTION: This code snippet demonstrates the import statements for various Embla Carousel components, including basic examples, plugin examples, tween examples, and miscellaneous examples.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/examples/predefined.mdx#2025-04-20_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\nimport { Default } from 'components/Examples/Basic/Default'\nimport { Loop } from 'components/Examples/Basic/Loop'\nimport { RightToLeft } from 'components/Examples/Basic/RightToLeft'\nimport { SlidesToScroll } from 'components/Examples/Basic/SlidesToScroll'\nimport { DragFree } from 'components/Examples/Basic/DragFree'\nimport { Align } from 'components/Examples/Basic/Align'\nimport { VariableWidths } from 'components/Examples/Basic/VariableWidths'\nimport { YAxis } from 'components/Examples/Basic/YAxis'\nimport { SlidesPerView } from 'components/Examples/Basic/SlidesPerView'\nimport { Thumbs } from 'components/Examples/Basic/Thumbs'\n\nimport { Autoplay } from 'components/Examples/Plugins/Autoplay'\nimport { AutoScroll } from 'components/Examples/Plugins/AutoScroll'\nimport { AutoHeight } from 'components/Examples/Plugins/AutoHeight'\nimport { Fade } from 'components/Examples/Plugins/Fade'\nimport { ClassNames } from 'components/Examples/Plugins/ClassNames'\n\nimport { Parallax } from 'components/Examples/Tween/Parallax'\nimport { Scale } from 'components/Examples/Tween/Scale'\nimport { Opacity } from 'components/Examples/Tween/Opacity'\n\nimport { Progress } from 'components/Examples/Miscellaneous/Progress'\nimport { LazyLoad } from 'components/Examples/Miscellaneous/LazyLoad'\nimport { InfiniteScroll } from 'components/Examples/Miscellaneous/InfiniteScroll'\nimport { IosPicker } from 'components/Examples/Miscellaneous/IosPicker'\n```\n\n----------------------------------------\n\nTITLE: Configuring Embla Carousel Options with Fade Plugin (Full)\nDESCRIPTION: Recommended configuration options when using the Fade plugin with slides less than 100% of viewport width. Sets align to center and disables containScroll for optimal user experience.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/fade.mdx#2025-04-20_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst options = {\n  align: 'center',\n  containScroll: false\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel for Svelte with yarn\nDESCRIPTION: Command to install the Embla Carousel Svelte package using yarn.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/svelte.mdx#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-svelte\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel for React using npm\nDESCRIPTION: Command for installing the Embla Carousel React package using npm package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/react.mdx#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-react --save\n```\n\n----------------------------------------\n\nTITLE: Creating Basic HTML Structure for Embla Carousel\nDESCRIPTION: Sets up the required HTML structure for an Embla Carousel with an overflow wrapper, scroll container, and three slides.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/cdn.mdx#2025-04-20_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"embla\">\n  <div class=\"embla__container\">\n    <div class=\"embla__slide\">Slide 1</div>\n    <div class=\"embla__slide\">Slide 2</div>\n    <div class=\"embla__slide\">Slide 3</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay Plugin with npm\nDESCRIPTION: Command to install the Embla Carousel Autoplay plugin using npm.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/svelte.mdx#2025-04-20_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-autoplay --save\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay Plugin with npm\nDESCRIPTION: Command for installing the Embla Carousel Autoplay plugin using npm package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/react.mdx#2025-04-20_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-autoplay --save\n```\n\n----------------------------------------\n\nTITLE: Enhanced HTML Structure with Viewport Wrapper\nDESCRIPTION: Modified HTML structure with viewport wrapper to properly handle button placement and events.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/previous-and-next-buttons.md#2025-04-20_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"embla\">\n  <div class=\"embla__viewport\">\n    <div class=\"embla__container\">\n      <div class=\"embla__slide\">Slide 1</div>\n      <div class=\"embla__slide\">Slide 2</div>\n      <div class=\"embla__slide\">Slide 3</div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Structure for Embla Carousel\nDESCRIPTION: Initial HTML structure showing the basic carousel setup with root and container elements.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/guides/previous-and-next-buttons.md#2025-04-20_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"embla\">\n  <div class=\"embla__container\">\n    <div class=\"embla__slide\">Slide 1</div>\n    <div class=\"embla__slide\">Slide 2</div>\n    <div class=\"embla__slide\">Slide 3</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay Plugin with NPM\nDESCRIPTION: Command to install the Embla Carousel Autoplay plugin using NPM package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/solid.mdx#2025-04-20_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-autoplay --save\n```\n\n----------------------------------------\n\nTITLE: Installing Auto Height Plugin via CDN for Embla Carousel in HTML\nDESCRIPTION: This snippet shows how to include the Auto Height plugin for Embla Carousel using a CDN link in an HTML file.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/auto-height.mdx#2025-04-20_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/embla-carousel-auto-height/embla-carousel-auto-height.umd.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay Plugin with Yarn\nDESCRIPTION: Command to install the Embla Carousel Autoplay plugin using Yarn package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/solid.mdx#2025-04-20_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-autoplay\n```\n\n----------------------------------------\n\nTITLE: Installing Auto Scroll Plugin via CDN for Embla Carousel\nDESCRIPTION: This snippet shows how to include the Auto Scroll plugin for Embla Carousel using a CDN link. It loads the UMD version of the plugin script.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/auto-scroll.mdx#2025-04-20_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/embla-carousel-auto-scroll/embla-carousel-auto-scroll.umd.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel for React using yarn\nDESCRIPTION: Command for installing the Embla Carousel React package using yarn package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/react.mdx#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-react\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay Plugin via CDN\nDESCRIPTION: Instructions for including the Autoplay plugin via CDN using a script tag.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/embla-carousel-autoplay/embla-carousel-autoplay.umd.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay via CDN\nDESCRIPTION: Includes the Embla Carousel Autoplay plugin in your HTML project using the CDN link.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/autoplay.mdx#2025-04-20_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/embla-carousel-autoplay/embla-carousel-autoplay.umd.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Vue Package\nDESCRIPTION: Commands for installing the Embla Carousel Vue package using npm or yarn package managers.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/vue.mdx#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-vue --save\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-vue\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay Plugin via Yarn\nDESCRIPTION: Command for installing the Autoplay plugin using Yarn package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-autoplay\n```\n\n----------------------------------------\n\nTITLE: Installing Wheel Gestures Plugin via Yarn\nDESCRIPTION: Installs the Wheel Gestures plugin using Yarn package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/wheel-gestures.mdx#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-wheel-gestures\n```\n\n----------------------------------------\n\nTITLE: Including Embla Carousel via CDN in HTML\nDESCRIPTION: Adds the Embla Carousel script to your HTML page using a CDN link from unpkg.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/cdn.mdx#2025-04-20_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/embla-carousel/embla-carousel.umd.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Adding MDX Frontmatter for Documentation Pages in Embla Carousel\nDESCRIPTION: Example of the required YAML frontmatter structure for MDX documentation files in the Embla Carousel docs. This structure includes title, description, order, and last updated date which is necessary for proper documentation page rendering.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/CONTRIBUTING.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: [Page title here]\ndescription: [Page description here].\norder: [Page order here (a number)]\ndate: [Page last updated date (e.g. 2023-12-20)]\n---\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay Plugin with yarn\nDESCRIPTION: Command for installing the Embla Carousel Autoplay plugin using yarn package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/react.mdx#2025-04-20_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-autoplay\n```\n\n----------------------------------------\n\nTITLE: Contributor Images HTML Grid\nDESCRIPTION: A grid of contributor profile images linking to their GitHub profiles, displayed with consistent sizing and styling.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/README.md#2025-04-20_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<img src=\"https://avatars2.githubusercontent.com/u/9245477?s=120&v=4\" title=\"LucasMariniFalbo\" width=\"50\" height=\"50\" style=\"max-width: 100%\" />\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay Plugin with yarn\nDESCRIPTION: Command to install the Embla Carousel Autoplay plugin using yarn.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/svelte.mdx#2025-04-20_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-autoplay\n```\n\n----------------------------------------\n\nTITLE: Open Source License HTML\nDESCRIPTION: A centered section displaying the MIT license information and copyright details for Embla Carousel.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/README.md#2025-04-20_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<h2 align=\"center\">Open Source</h2>\n\n<p align=\"center\">\n  Embla is <a href=\"https://github.com/davidjerleke/embla-carousel/blob/master/LICENSE\">MIT licensed</a> 💖.<br><br>\n  <sup>Embla Carousel - Copyright © 2019-present.</sup><br />\n  <sup>Package created by David Jerleke.</sup>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel with Yarn\nDESCRIPTION: Command to install the Embla Carousel Solid.js package using Yarn package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/solid.mdx#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-solid\n```\n\n----------------------------------------\n\nTITLE: Displaying HTML Contributors and Acknowledgments Section\nDESCRIPTION: HTML markup for displaying contributor avatars, special thanks section, and open source licensing information for Embla Carousel project. Includes GitHub avatar images, contributor links, and project credits.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel/README.md#2025-04-20_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<img src=\"https://avatars2.githubusercontent.com/u/9245477?s=120&v=4\" title=\"LucasMariniFalbo\" width=\"50\" height=\"50\" style=\"max-width: 100%\" />\n```\n\n----------------------------------------\n\nTITLE: Special Thanks Section HTML\nDESCRIPTION: A centered section listing special contributors and their specific contributions to the Embla Carousel project.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/README.md#2025-04-20_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<div align=\"center\">\n  <strong>\n    <h2 align=\"center\">Special Thanks</h2>\n  </strong>\n  <p align=\"center\">\n    <sup>\n      <a href=\"https://github.com/gunnarx2\">gunnarx2</a> - React wrapper <a href=\"https://www.embla-carousel.com/get-started/react/\">useEmblaCarousel</a>.\n    </sup>\n  </p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Wheel Gestures Plugin via NPM\nDESCRIPTION: Installs the Wheel Gestures plugin using NPM package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/wheel-gestures.mdx#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-wheel-gestures --save\n```\n\n----------------------------------------\n\nTITLE: HTML Contributors and Acknowledgments Section\nDESCRIPTION: HTML markup for displaying contributor avatars, special thanks section, and project licensing information. Includes profile links, avatar images, and acknowledgments for various framework implementations and contributions.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-auto-height/README.md#2025-04-20_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<div align=\"center\">\n  <strong>\n    <h2 align=\"center\">Special Thanks</h2>\n  </strong>\n  <p align=\"center\">\n    <sup>\n      <a href=\"https://github.com/gunnarx2\">gunnarx2</a> - React wrapper <a href=\"https://www.embla-carousel.com/get-started/react/\">useEmblaCarousel</a>.\n    </sup>\n    <br>\n    <sup>\n      <a href=\"https://github.com/LiamMartens\">LiamMartens</a> - Solid wrapper <a href=\"https://www.embla-carousel.com/get-started/solid/\">createEmblaCarousel</a>.\n    </sup>\n    <!-- Additional acknowledgments omitted for brevity -->\n  </p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: HTML Badge Links Structure\nDESCRIPTION: HTML structure for displaying various package status badges including NPM version, build status, code style and bundle size.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-auto-height/README.md#2025-04-20_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n    <a href=\"https://opensource.org/licenses/MIT\"><img src=\"https://img.shields.io/npm/l/embla-carousel?color=%238ab4f8\"></a>\n    <a href=\"https://www.npmjs.com/package/embla-carousel-auto-height\"><img src=\"https://img.shields.io/npm/v/embla-carousel-auto-height.svg?color=%23c1a8e2\"></a>\n    <a href=\"https://github.com/davidjerleke/embla-carousel/actions?query=workflow%3A%22Continuous+Integration%22\"><img src=\"https://img.shields.io/github/actions/workflow/status/davidjerleke/embla-carousel/cd.yml?color=%238ab4f8\"></a>\n    <a href=\"https://prettier.io\"><img src=\"https://img.shields.io/badge/code_style-prettier-ff69b4.svg?color=%23c1a8e2\"></a>\n    <a href=\"https://bundlephobia.com/result?p=embla-carousel-auto-height@latest\"><img src=\"https://img.shields.io/bundlephobia/minzip/embla-carousel-auto-height?color=%238ab4f8&label=gzip%20size\"></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay with Yarn\nDESCRIPTION: Installs the Embla Carousel Autoplay plugin using Yarn package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/autoplay.mdx#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-autoplay\n```\n\n----------------------------------------\n\nTITLE: React Core Production License Header\nDESCRIPTION: MIT license header for the React core production minified JavaScript file. Indicates copyright ownership by Facebook, Inc. and its affiliates, with the full license text available in the LICENSE file in the root directory.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/docs/framework-3ccdb2e8d48ba5dee700.js.LICENSE.txt#2025-04-20_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for Contributors and Acknowledgments\nDESCRIPTION: HTML markup displaying contributor avatars, special thanks section, open source information, and BrowserStack acknowledgment for the Embla Carousel project.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-autoplay/README.md#2025-04-20_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div align=\"center\">\n  <strong>\n    <h2 align=\"center\">Special Thanks</h2>\n  </strong>\n  <p align=\"center\">\n    <sup>\n      <a href=\"https://github.com/gunnarx2\">gunnarx2</a> - React wrapper <a href=\"https://www.embla-carousel.com/get-started/react/\">useEmblaCarousel</a>.\n    </sup>\n    <!-- Additional acknowledgments -->\n  </p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay Plugin\nDESCRIPTION: Commands for installing the Embla Carousel Autoplay plugin using npm or yarn package managers.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/vue.mdx#2025-04-20_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-autoplay --save\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-autoplay\n```\n\n----------------------------------------\n\nTITLE: React Scheduler Production License Header\nDESCRIPTION: MIT license header for the React Scheduler production minified JavaScript file. Indicates copyright ownership by Facebook, Inc. and its affiliates, with the full license text available in the LICENSE file in the root directory.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/docs/framework-3ccdb2e8d48ba5dee700.js.LICENSE.txt#2025-04-20_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n```\n\n----------------------------------------\n\nTITLE: Initializing Prism Library Header Documentation\nDESCRIPTION: JSDoc header comment block defining Prism as a lightweight, robust syntax highlighting library. Specifies MIT license, author information and marks the code as a public namespace.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/docs/commons-d24640b863d52a02fd98.js.LICENSE.txt#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel with NPM\nDESCRIPTION: Command to install the Embla Carousel Solid.js package using NPM package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/get-started/solid.mdx#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-solid --save\n```\n\n----------------------------------------\n\nTITLE: Installing Auto Scroll Plugin via Yarn for Embla Carousel\nDESCRIPTION: This command installs the Auto Scroll plugin for Embla Carousel using Yarn and adds it to the project dependencies.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/auto-scroll.mdx#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-auto-scroll\n```\n\n----------------------------------------\n\nTITLE: Installing Auto Height Plugin for Embla Carousel using Yarn\nDESCRIPTION: This command installs the Auto Height plugin for Embla Carousel using Yarn and adds it to the project dependencies.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/auto-height.mdx#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn add embla-carousel-auto-height\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for Project Documentation\nDESCRIPTION: HTML markup defining the structure and layout of the Embla Carousel project documentation, including badges, logos, and contributor information.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-svelte/README.md#2025-04-20_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div align=\"center\">\n  <p align=\"center\">\n    <a href=\"https://www.embla-carousel.com/\"><img width=\"100\" height=\"100\" src=\"https://www.embla-carousel.com/embla-logo.svg\" alt=\"Embla Carousel\">\n    </a>\n  </p>\n  <!-- Additional HTML content omitted for brevity -->\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Embla Carousel Autoplay Plugin via NPM\nDESCRIPTION: Command for installing the Autoplay plugin using NPM package manager.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/api/plugins.mdx#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install embla-carousel-autoplay --save\n```\n\n----------------------------------------\n\nTITLE: Installing Class Names Plugin via CDN for Embla Carousel\nDESCRIPTION: This snippet shows how to include the Class Names plugin for Embla Carousel using a CDN link. It loads the UMD version of the plugin script.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/plugins/class-names.mdx#2025-04-20_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/embla-carousel-class-names/embla-carousel-class-names.umd.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Rendering Embla Carousel Components in JSX\nDESCRIPTION: This code snippet shows how various Embla Carousel components are rendered within the JSX structure, including basic, plugin, tween, and miscellaneous examples.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/examples/predefined.mdx#2025-04-20_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<Default />\n\n<Loop />\n\n<RightToLeft />\n\n<SlidesToScroll />\n\n<DragFree />\n\n<Align />\n\n<VariableWidths />\n\n<YAxis />\n\n<SlidesPerView />\n\n<Thumbs />\n\n<Autoplay />\n\n<AutoScroll />\n\n<AutoHeight />\n\n<Fade />\n\n<ClassNames />\n\n<Parallax />\n\n<Scale />\n\n<Opacity />\n\n<Progress />\n\n<LazyLoad />\n\n<InfiniteScroll />\n\n<IosPicker loop={false} />\n\n<IosPicker loop={true} />\n```\n\n----------------------------------------\n\nTITLE: React Component Imports for Carousel Generator\nDESCRIPTION: Import statements for various React components used in the carousel generator interface, including framework settings, basic settings, slides settings, alignment settings, navigation settings, plugins, and preview components.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-docs/src/content/pages/examples/generator.mdx#2025-04-20_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { URLS } from 'consts/urls'\nimport { LinkButtonPrimaryOutlined } from 'components/Link/LinkButton'\n\nimport { CarouselGeneratorFrameworkSettings } from 'components/CarouselGenerator/CarouselGeneratorFrameworkSettings'\nimport { CarouselGeneratorBasicSettings } from 'components/CarouselGenerator/CarouselGeneratorBasicSettings'\nimport { CarouselGeneratorSlidesSettings } from 'components/CarouselGenerator/CarouselGeneratorSlidesSettings'\nimport { CarouselGeneratorAlignmentSettings } from 'components/CarouselGenerator/CarouselGeneratorAlignmentSettings'\nimport { CarouselGeneratorNavigationSettings } from 'components/CarouselGenerator/CarouselGeneratorNavigationSettings'\nimport { CarouselGeneratorPlugins } from 'components/CarouselGenerator/CarouselGeneratorPlugins'\n\nimport { CarouselGeneratorPreview } from 'components/CarouselGenerator/CarouselGeneratorPreview'\n```\n\n----------------------------------------\n\nTITLE: Displaying HTML Contributor Grid and Special Thanks Section\nDESCRIPTION: HTML markup for displaying a grid of contributor avatars, special thanks section, and project attribution including MIT license information and BrowserStack acknowledgment.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-reactive-utils/README.md#2025-04-20_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div align=\"center\">\n  <strong>\n    <h2 align=\"center\">Special Thanks</h2>\n  </strong>\n  <p align=\"center\">\n    <sup>\n      <a href=\"https://github.com/gunnarx2\">gunnarx2</a> - React wrapper <a href=\"https://www.embla-carousel.com/get-started/react/\">useEmblaCarousel</a>.\n    </sup>\n    <br>\n    <sup>\n      <a href=\"https://github.com/LiamMartens\">LiamMartens</a> - Solid wrapper <a href=\"https://www.embla-carousel.com/get-started/solid/\">createEmblaCarousel</a>.\n    </sup>\n    <br>\n    <sup>\n      <a href=\"https://github.com/donaldxdonald\">donaldxdonald</a>, <a href=\"https://github.com/zip-fa\">zip-fa</a>, <a href=\"https://github.com/JeanMeche\">JeanMeche</a> - Angular wrapper <a href=\"https://github.com/donaldxdonald/embla-carousel-angular?tab=readme-ov-file#installation\">EmblaCarouselDirective</a>.\n    </sup>\n    <br>\n    <sup>\n      <a href=\"https://github.com/xiel\">xiel</a> - Plugin <a href=\"https://github.com/xiel/embla-carousel-wheel-gestures\">Embla Carousel Wheel Gestures</a>.\n    </sup>\n    <br>\n    <sup>\n      <a href=\"https://github.com/zaaakher\">zaaakher</a> - Contributing <a href=\"https://github.com/davidjerleke/embla-carousel/blob/master/CONTRIBUTING.md\">guidelines</a>.\n    </sup>\n    <br>\n    <sup>\n      <a href=\"https://github.com/sarussss\">sarussss</a> - Answering questions.\n    </sup>\n  </p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for Contributors and Acknowledgments\nDESCRIPTION: HTML markup displaying contributor avatars, special thanks section with wrapper implementations, and open source licensing information.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-fade/README.md#2025-04-20_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<img src=\"https://avatars2.githubusercontent.com/u/9245477?s=120&v=4\" title=\"LucasMariniFalbo\" width=\"50\" height=\"50\" style=\"max-width: 100%\" />\n<div align=\"center\">\n  <strong>\n    <h2 align=\"center\">Special Thanks</h2>\n  </strong>\n  <p align=\"center\">\n    <sup>\n      <a href=\"https://github.com/gunnarx2\">gunnarx2</a> - React wrapper <a href=\"https://www.embla-carousel.com/get-started/react/\">useEmblaCarousel</a>.\n    </sup>\n    <!-- Additional acknowledgments -->\n  </p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Displaying HTML Contributors Grid\nDESCRIPTION: HTML markup for displaying a grid of contributor avatars with links to their GitHub profiles. Also includes sections for special thanks, open source license information, and BrowserStack acknowledgment.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/packages/embla-carousel-svelte/README.md#2025-04-20_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://github.com/LucasMariniFalbo\">\n      <img src=\"https://avatars2.githubusercontent.com/u/9245477?s=120&v=4\" title=\"LucasMariniFalbo\" width=\"50\" height=\"50\" style=\"max-width: 100%\" />\n    </a>\n```\n\n----------------------------------------\n\nTITLE: Licensing Header for React DOM Server Current Build\nDESCRIPTION: This code snippet contains the licensing header for the current production build of React DOM Server for browsers. It specifies the copyright holder and license type.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/docs/b39e4a2e6aee6d0387bae6e06fda13164eac1ca8-672fd78c16cfef272d79.js.LICENSE.txt#2025-04-20_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * @license React\n * react-dom-server.browser.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n```\n\n----------------------------------------\n\nTITLE: Licensing Header for React DOM Server Legacy Build\nDESCRIPTION: This code snippet contains the licensing header for the legacy production build of React DOM Server for browsers. It specifies the copyright holder and license type.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/docs/b39e4a2e6aee6d0387bae6e06fda13164eac1ca8-672fd78c16cfef272d79.js.LICENSE.txt#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * @license React\n * react-dom-server-legacy.browser.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n```\n\n----------------------------------------\n\nTITLE: React DOM Production License Header\nDESCRIPTION: MIT license header for the React DOM production minified JavaScript file. Indicates copyright ownership by Facebook, Inc. and its affiliates, with the full license text available in the LICENSE file in the root directory.\nSOURCE: https://github.com/davidjerleke/embla-carousel/blob/master/docs/framework-3ccdb2e8d48ba5dee700.js.LICENSE.txt#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n```"
  }
]
[
  {
    "owner": "facebook",
    "repo": "facebook-nodejs-business-sdk",
    "content": "TITLE: Initializing and Enabling Debug Mode for Facebook Ads API in JavaScript\nDESCRIPTION: This snippet demonstrates how to initialize the Facebook Ads API and enable debug mode. It requires a valid access token and uses the facebook-nodejs-business-sdk package.\nSOURCE: https://github.com/facebook/facebook-nodejs-business-sdk/blob/main/README.md#2025-04-17_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst adsSdk = require('facebook-nodejs-business-sdk');\nconst accessToken = '<VALID_ACCESS_TOKEN>';\nconst api = adsSdk.FacebookAdsApi.init(accessToken);\napi.setDebug(true);\n```\n\n----------------------------------------\n\nTITLE: Initializing Facebook Ads API\nDESCRIPTION: Initialize the Facebook Ads API with an access token to begin making API requests.\nSOURCE: https://github.com/facebook/facebook-nodejs-business-sdk/blob/main/README.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst adsSdk = require('facebook-nodejs-business-sdk');\nconst accessToken = '<VALID_ACCESS_TOKEN>';\nconst api = adsSdk.FacebookAdsApi.init(accessToken);\n```\n\n----------------------------------------\n\nTITLE: Instantiating Facebook Ad Account Object\nDESCRIPTION: Example of creating an Ad Account object and accessing its properties.\nSOURCE: https://github.com/facebook/facebook-nodejs-business-sdk/blob/main/README.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst adsSdk = require('facebook-nodejs-business-sdk');\nconst AdAccount = adsSdk.AdAccount;\nconst account = new AdAccount('act_<AD_ACCOUNT_ID>');\nconsole.log(account.id)\n```\n\n----------------------------------------\n\nTITLE: Creating Campaign with Fields\nDESCRIPTION: Demonstrates creating a campaign using field enums and handling promises.\nSOURCE: https://github.com/facebook/facebook-nodejs-business-sdk/blob/main/README.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst adsSdk = require('facebook-nodejs-business-sdk');\nconst accessToken = '<VALID_ACCESS_TOKEN>';\nconst api = adsSdk.FacebookAdsApi.init(accessToken);\nconst AdAccount = adsSdk.AdAccount;\nconst Campaign = adsSdk.Campaign;\nconst account = new AdAccount('act_<AD_ACCOUNT_ID>');\n\nconsole.log(account.id)\naccount\n  .createCampaign(\n    [Campaign.Fields.Id],\n    {\n      [Campaign.Fields.name]: 'Page likes campaign',\n      [Campaign.Fields.status]: Campaign.Status.paused,\n      [Campaign.Fields.objective]: Campaign.Objective.page_likes\n    }\n  )\n  .then((result) => {\n  })\n  .catch((error) => {\n  });\n```\n\n----------------------------------------\n\nTITLE: Async Iteration of Campaigns\nDESCRIPTION: Shows how to iterate through all campaigns using async/await and cursor pagination.\nSOURCE: https://github.com/facebook/facebook-nodejs-business-sdk/blob/main/README.md#2025-04-17_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst adsSdk = require('facebook-nodejs-ads-sdk');\nconst accessToken = '<VALID_ACCESS_TOKEN>';\nconst api = adsSdk.FacebookAdsApi.init(accessToken);\nconst AdAccount = adsSdk.AdAccount;\nconst account = new AdAccount('act_<AD_ACCOUNT_ID>');\n\nvoid async function () {\n    let campaigns = await account.getCampaigns([Campaign.Fields.name], {limit: 20});\n    campaigns.forEach(c => console.log(c.name));\n    while (campaigns.hasNext()) {\n        campaigns = await campaigns.next();\n        campaigns.forEach(c => console.log(c.name));\n    }\n}();\n```\n\n----------------------------------------\n\nTITLE: Reading Ad Account Data\nDESCRIPTION: Example of reading specific fields from an Ad Account using the read method.\nSOURCE: https://github.com/facebook/facebook-nodejs-business-sdk/blob/main/README.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst adsSdk = require('facebook-nodejs-business-sdk');\nconst accessToken = '<VALID_ACCESS_TOKEN>';\nconst api = adsSdk.FacebookAdsApi.init(accessToken);\nconst AdAccount = adsSdk.AdAccount;\nconst account = new AdAccount('act_<AD_ACCOUNT_ID>');\naccount\n  .read([AdAccount.Fields.name, AdAccount.Fields.age])\n  .then((account) => {\n    console.log(account);\n  })\n  .catch((error) => {\n  });\n```\n\n----------------------------------------\n\nTITLE: Handling Pagination with Cursors\nDESCRIPTION: Example of using cursor-based pagination to iterate through campaign data.\nSOURCE: https://github.com/facebook/facebook-nodejs-business-sdk/blob/main/README.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst adsSdk = require('facebook-nodejs-business-sdk');\nconst accessToken = '<VALID_ACCESS_TOKEN>';\nconst api = adsSdk.FacebookAdsApi.init(accessToken);\nconst AdAccount = adsSdk.AdAccount;\nconst Campaign = adsSdk.Campaign;\nconst account = new AdAccount('act_<AD_ACCOUNT_ID>');\naccount.getCampaigns([Campaign.Fields.name], { limit: 2 })\n.then((campaigns) => {\n  if (campaigns.length >= 2 && campaigns.hasNext()) {\n    return campaigns.next();\n  } else {\n    Promise.reject(\n      new Error('campaigns length < 2 or not enough campaigns')\n    );\n  }\n})\n.then((campaigns) => {\n  if (campaigns.hasNext() && campaigns.hasPrevious()) {\n    return campaigns.previous();\n  } else {\n    Promise.reject(\n      new Error('previous or next is not true')\n    );\n  }\n  return campaigns.previous();\n})\n.catch((error) => {\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Campaign Data\nDESCRIPTION: Shows how to update existing campaign properties using the update method.\nSOURCE: https://github.com/facebook/facebook-nodejs-business-sdk/blob/main/README.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst adsSdk = require('facebook-nodejs-business-sdk');\nconst accessToken = '<VALID_ACCESS_TOKEN>';\nconst api = adsSdk.FacebookAdsApi.init(accessToken);\nconst Campaign = adsSdk.Campaign;\nconst campaignId = <CAMPAIGN_ID>;\nnew Campaign(campaignId, {\n  [Campaign.Fields.id]: campaign.id,\n  [Campaign.Fields.name]: 'Campaign - Updated' })\n  .update();\n```\n\n----------------------------------------\n\nTITLE: Deleting Campaign\nDESCRIPTION: Demonstrates how to delete an existing campaign.\nSOURCE: https://github.com/facebook/facebook-nodejs-business-sdk/blob/main/README.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst adsSdk = require('facebook-nodejs-business-sdk');\nconst accessToken = '<VALID_ACCESS_TOKEN>';\nconst api = adsSdk.FacebookAdsApi.init(accessToken);\nconst Campaign = adsSdk.Campaign;\nconst campaignId = <CAMPAIGN_ID>;\nnew Campaign(campaignId).delete();\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with NPM and Bower\nDESCRIPTION: Commands to install the required dependencies using NPM and Bower package managers.\nSOURCE: https://github.com/facebook/facebook-nodejs-business-sdk/blob/main/README.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nbower install\n```"
  }
]
[
  {
    "owner": "twilio",
    "repo": "twilio-php",
    "content": "TITLE: Sending SMS with Twilio PHP SDK\nDESCRIPTION: Example showing how to send an SMS message using Twilio's REST API with PHP SDK. Requires account SID and auth token from Twilio console.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire __DIR__ . '/vendor/autoload.php';\n\n$sid = \"ACXXXXXX\";\n$token = \"YYYYYY\";\n$client = new Twilio\\Rest\\Client($sid, $token);\n\n$client->messages->create(\n    '+15558675309',\n    [\n        'from' => '+15017250604',\n        'body' => \"Hey Jenny! Good luck on the bar exam!\"\n    ]\n);\n```\n\n----------------------------------------\n\nTITLE: Making Voice Calls with Twilio PHP SDK\nDESCRIPTION: Example demonstrating how to initiate a voice call using Twilio's REST API with hold music URL.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$sid = \"ACXXXXXX\";\n$token = \"YYYYYY\";\n\n$client = new Twilio\\Rest\\Client($sid, $token);\n\n$call = $client->calls->create(\n    '8881231234',\n    '9991231234',\n    [\n        'url' => 'https://twimlets.com/holdmusic?Bucket=com.twilio.music.ambient'\n    ]\n);\n```\n\n----------------------------------------\n\nTITLE: Generating TwiML with Twilio PHP SDK\nDESCRIPTION: Example showing how to generate TwiML responses for voice calls using the VoiceResponse class.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/README.md#2025-04-21_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$response = new Twilio\\TwiML\\VoiceResponse();\n$response->say('Hello');\n$response->play('https://api.twilio.com/cowbell.mp3', ['loop' => 5]);\nprint $response;\n```\n\n----------------------------------------\n\nTITLE: Iterating Through Records with Twilio PHP SDK\nDESCRIPTION: Examples of different methods to iterate through Twilio records including read, stream and page methods.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/README.md#2025-04-21_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once '/path/to/vendor/autoload.php';\n\n$sid = \"ACXXXXXX\";\n$token = \"YYYYYY\";\n$client = new Twilio\\Rest\\Client($sid, $token);\n\n$limit = 5;\n$pageSize = 2;\n\n$messageList = $client->messages->read([], $limit);\nforeach ($messageList as $msg) {\n    print($msg->sid);\n}\n\n$messageStream = $client->messages->stream([], $limit, $pageSize);\nforeach ($messageStream as $msg) {\n    print($msg->sid);\n}\n\n$messagePage = $client->messages->page([], $pageSize);\n$nextPageData = $messagePage->nextPage();\nforeach ($messagePage as $msg) {\n    print($msg->sid);\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Twilio Client and Handling ConfigurationException in PHP\nDESCRIPTION: This snippet demonstrates how to initialize a Twilio client and handle a ConfigurationException that may occur due to incorrect credentials. It also shows how to make a call to the Twilio API after successful initialization.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/README.md#2025-04-21_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once('/path/to/twilio-php/Services/Twilio.php');\n\nuse Twilio\\Exceptions\\ConfigurationException;\nuse Twilio\\Rest\\Client;\n\n$sid = \"ACXXXXXX\";\n$token = \"YYYYYY\";\n\n// Attempt to create a new Client, but your credentials may contain a typo\ntry {\n    $client = new Twilio\\Rest\\Client($sid, $token);\n} catch (ConfigurationException $e) {\n    // You can `catch` the exception, and perform any recovery method of your choice\n    print $e->getCode();\n}\n\n$call = $client->account->calls\n    ->get(\"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\n\nprint $call->to;\n```\n\n----------------------------------------\n\nTITLE: Complete Example Using Twilio with Custom Proxy Client in PHP\nDESCRIPTION: Full implementation showing how to load environment variables, create a custom HTTP client that supports proxy connections, and use it with the Twilio client to send an SMS message. This example brings together all the components for a working solution.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/advanced-examples/custom-http-client.md#2025-04-21_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// Update the path below to your autoload.php,\n// see https://getcomposer.org/doc/01-basic-usage.md\nrequire_once \"./vendor/autoload.php\";\nrequire_once \"./MyRequestClass.php\";\n\n$dotenv = new Dotenv\\Dotenv(__DIR__);\n$dotenv->load();\n\nuse Twilio\\Rest\\Client;\n\n// Your Account Sid and Auth Token from twilio.com/console\n$sid = getenv('ACCOUNT_SID');\n$token = getenv('AUTH_TOKEN');\n$proxy = getenv('PROXY');\n\n$httpClient = new MyRequestClass($proxy);\n$twilio = new Client($sid, $token, null, null, $httpClient);\n\n$message = $twilio->messages\n    ->create(\n        \"+15558675310\",\n        array(\n            'body' => \"Hey there!\",\n            'from' => \"+15017122661\"\n        )\n    );\n\nprint(\"Message SID: {$message->sid}\");\n```\n\n----------------------------------------\n\nTITLE: Using Custom HTTP Client with Twilio in PHP\nDESCRIPTION: Example showing how to create and use a custom HTTP client with the Twilio SDK to send an SMS message. The custom client is passed to the Twilio client constructor.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/advanced-examples/custom-http-client.md#2025-04-21_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// Update the path below to your autoload.php,\n// see https://getcomposer.org/doc/01-basic-usage.md\nrequire_once \"./vendor/autoload.php\";\nrequire_once \"./MyRequestClass.php\";\n\n$dotenv = new Dotenv\\Dotenv(__DIR__);\n$dotenv->load();\n\nuse Twilio\\Rest\\Client;\n\n// Your Account Sid and Auth Token from twilio.com/console\n$sid = getenv('ACCOUNT_SID');\n$token = getenv('AUTH_TOKEN');\n$proxy = getenv('PROXY');\n\n$httpClient = new MyRequestClass($proxy);\n$twilio = new Client($sid, $token, null, null, $httpClient);\n\n$message = $twilio->messages\n    ->create(\n        \"+15558675310\",\n        array(\n            'body' => \"Hey there!\",\n            'from' => \"+15017122661\"\n        )\n    );\n\nprint(\"Message SID: {$message->sid}\");\n```\n\n----------------------------------------\n\nTITLE: Retrieving Call Information with Twilio PHP SDK\nDESCRIPTION: Example showing how to fetch details of an existing call using its SID.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once '/path/to/vendor/autoload.php';\n\n$sid = \"ACXXXXXX\";\n$token = \"YYYYYY\";\n$client = new Twilio\\Rest\\Client($sid, $token);\n\n$call = $client->calls(\"CA42ed11f93dc08b952027ffbc406d0868\")->fetch();\nprint $call->to;\n```\n\n----------------------------------------\n\nTITLE: Debugging API Requests with Twilio PHP Client\nDESCRIPTION: This snippet demonstrates how to access and print details about the last request and response when using the Twilio PHP client. It shows creating a message and then accessing various properties of the request and response objects for debugging purposes.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/README.md#2025-04-21_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$sid = \"ACXXXXXX\";\n$token = \"YYYYYY\";\n\n$client = new Twilio\\Rest\\Client($sid, $token);\n$message = $client->messages->create(\n    '+15558675309',\n    [\n        'from' => '+15017250604',\n        'body' => \"Hey Jenny! Good luck on the bar exam!\"\n    ]\n);\n\n// Print the message's SID\nprint $message->sid;\n\n// Print details about the last request\nprint $client->lastRequest->method;\nprint $client->lastRequest->url;\nprint $client->lastRequest->auth;\nprint $client->lastRequest->params;\nprint $client->lastRequest->headers;\nprint $client->lastRequest->data;\n\n// Print details about the last response\nprint $client->lastResponse->statusCode;\nprint $client->lastResponse->body;\n```\n\n----------------------------------------\n\nTITLE: Handling TwimlException when Building TwiML in PHP\nDESCRIPTION: This example shows how to handle a TwimlException that may occur when building TwiML (Twilio Markup Language) responses. It demonstrates creating a conference call TwiML and catching any resulting exceptions.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/README.md#2025-04-21_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once './vendor/autoload.php';\nuse Twilio\\Twiml;\n\ntry {\n    $response = new Twiml();\n    $dial = $response->dial();\n    $dial->conference('Room 1234');\n    print $response;\n} catch (TwimlException $e) {\n    print $e->getCode();\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Twilio Client Usage in PHP\nDESCRIPTION: A basic example showing how to create a Twilio client instance and send an SMS message using the default HTTP client implementation.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/advanced-examples/custom-http-client.md#2025-04-21_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$twilio = new Client($sid, $token);\n\n$message = $twilio->messages\n    ->create(\n        \"+15558675310\",\n        array(\n            'body' => \"Hey there!\",\n            'from' => \"+15017122661\"\n        )\n    );\n```\n\n----------------------------------------\n\nTITLE: Handling TwilioException for API Errors in PHP\nDESCRIPTION: This snippet demonstrates how to handle a TwilioException, which is commonly used for API errors. It shows how to catch the exception when making a call to the Twilio API.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/README.md#2025-04-21_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once('/path/to/twilio-php/Services/Twilio.php');\n\nuse Twilio\\Exceptions\\TwilioException;\n\n$sid = \"ACXXXXXX\";\n$token = \"YYYYYY\";\n$client = new Twilio\\Rest\\Client($sid, $token);\n\ntry {\n    $call = $client->account->calls\n        ->get(\"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\n} catch (TwilioException $e) {\n    print $e->getCode();\n}\n\nprint $call->to;\n```\n\n----------------------------------------\n\nTITLE: Custom HTTP Client Implementation for Proxy Support in PHP\nDESCRIPTION: A complete implementation of a custom HTTP client class that extends Twilio's CurlClient to add proxy server support. The class configures cURL options to route requests through a specified proxy server.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/advanced-examples/custom-http-client.md#2025-04-21_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Http\\CurlClient;\nuse Twilio\\Http\\Response;\n\nclass MyRequestClass extends CurlClient\n{\n    protected $http = null;\n    protected $proxy = null;\n\n\n    /**\n     * MyRequestClass constructor.\n     * @param $proxy Proxy Server\n     * @param $cainfo CA Info for the proxy\n     */\n    public function __construct($proxy = null, $cainfo = null)\n    {\n        $this->proxy = $proxy;\n        $this->cainfo = $cainfo;\n        $this->http = new CurlClient();\n    }\n\n    public function request(\n        $method,\n        $url,\n        $params = array(), $data = array(), $headers = array(), $user = null, $password = null, $timeout = null): Response\n    {\n        // Here you can change the URL, headers and other request parameters\n        $options = $this->options(\n            $method,\n            $url,\n            $params,\n            $data,\n            $headers,\n            $user,\n            $password,\n            $timeout\n        );\n\n        $curl = curl_init($url);\n        curl_setopt_array($curl, $options);\n        if (!empty($this->proxy))\n            curl_setopt($curl, CURLOPT_PROXY, $this->proxy);\n\n        if (!empty($this->cainfo))\n            curl_setopt($curl, CURLOPT_CAINFO, $this->cainfo);\n        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_HEADER, true);\n        curl_setopt($curl, CURLOPT_HTTPPROXYTUNNEL, true);\n        $response = curl_exec($curl);\n\n        $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE);\n        $headerSize = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n        $head = substr($response, 0, $headerSize);\n        $body = substr($response, $headerSize);\n\n        $responseHeaders = array();\n        $headerLines = preg_split(\"/\\r?\\n/\", $head);\n        foreach ($headerLines as $line) {\n            if (!preg_match(\"/:/\", $line))\n                continue;\n            list($key, $value) = explode(':', $line, 2);\n            $responseHeaders[trim($key)] = trim($value);\n        }\n\n        curl_close($curl);\n\n        if (isset($buffer) && is_resource($buffer)) {\n            fclose($buffer);\n        }\n        return new Response($statusCode, $body, $responseHeaders);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Calls with Options Factory in Twilio PHP SDK v5.1.0+\nDESCRIPTION: Example showing how to create outbound calls using the Options Factory method introduced in Twilio PHP SDK version 5.1.0. This approach provides better documentation for optional parameters.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_20\n\nLANGUAGE: PHP\nCODE:\n```\n// Options Factory\n$client->calls->create(\n    '+14155551234',\n    '+14155557890',\n    CallOptions::create(\n        Values::NONE,\n        'AP123',\n        'POST'\n    )\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Calls with Options Builder in Twilio PHP SDK v5.1.0+\nDESCRIPTION: Example showing how to create outbound calls using the Options Builder method introduced in Twilio PHP SDK version 5.1.0. This approach uses setter methods for a more fluent interface when specifying optional parameters.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_21\n\nLANGUAGE: PHP\nCODE:\n```\n// Options Builder\n$client->calls->create(\n    '+14155551234',\n    '+14155557890',\n    CallOptions::create()->setApplicationSid('AP123')\n                         ->setMethod('POST')\n);\n```\n\n----------------------------------------\n\nTITLE: Installing Twilio SDK via Composer\nDESCRIPTION: Command to install the Twilio PHP SDK using Composer package manager.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncomposer require twilio/sdk\n```\n\n----------------------------------------\n\nTITLE: Initializing CurlClient and Handling EnvironmentException in PHP\nDESCRIPTION: This example shows how to initialize a CurlClient for Twilio and handle an EnvironmentException that may occur if curl is not installed on the system. It demonstrates setting options for the curl client.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/README.md#2025-04-21_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once('/path/to/twilio-php/Services/Twilio.php');\n\nuse Twilio\\Exceptions\\TwilioException;\nuse Twilio\\Http\\CurlClient;\n\n$sid = \"ACXXXXXX\";\n$token = \"YYYYYY\";\n$client = new Twilio\\Rest\\Client($sid, $token);\n\ntry {\n    $client = new CurlClient();\n\n    $client->options(\n        'GET',\n        'http://api.twilio.com',\n        array(),\n        array(),\n        array(),\n        $sid,\n        $token\n    );\n} catch (EnvironmentException $e) {\n    print $e->getCode();\n}\n\nprint $call->to;\n```\n\n----------------------------------------\n\nTITLE: Creating Taskrouter Workflow with Twilio PHP SDK 5.2.x\nDESCRIPTION: This snippet shows how to create a Taskrouter workflow using Twilio PHP SDK version 5.2.x. It initializes a Twilio client and creates a new workflow with a name, configuration JSON, and an array of options including the assignment callback URL.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_25\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->taskrouter->workspaces('WS123')->workflows->create(\n    'My New Workflow',\n    '{...}',\n    array(\n        'assignmentCallbackUrl' => 'http://assignment-callback-url.com',\n    )\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Calls with Original Method in Twilio PHP SDK v5.0.x\nDESCRIPTION: Example showing how to create outbound calls using the original method in Twilio PHP SDK version 5.0.x. This approach uses an associative array to pass optional parameters.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_19\n\nLANGUAGE: PHP\nCODE:\n```\n$client = new Client();\n\n// Original Way (5.0.x)\n$client->calls->create(\n    '+14155551234',\n    '+14155557890',\n    array(\n        'applicationSid' => 'AP123',\n        'method' => 'POST',\n    )\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Guzzle HTTP Client in PHP SDK\nDESCRIPTION: Added Guzzle HTTP client integration through PR #547 to improve HTTP request handling in the Twilio PHP SDK.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_12\n\nLANGUAGE: PHP\nCODE:\n```\nAdded Guzzle HTTP client via PR #547\n```\n\n----------------------------------------\n\nTITLE: Initializing Twilio Client in PHP\nDESCRIPTION: Demonstrates how to initialize the Twilio client with account credentials. This is typically done at the start of a PHP script using Twilio.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_11\n\nLANGUAGE: PHP\nCODE:\n```\n$sid = 'ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';\n$token = 'your_auth_token';\n$client = new Twilio\\Rest\\Client($sid, $token);\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration for Twilio and Proxy\nDESCRIPTION: A sample .env file containing configuration for Twilio account credentials and proxy server settings. This file is loaded by the application to configure the Twilio client and proxy connection.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/advanced-examples/custom-http-client.md#2025-04-21_snippet_3\n\nLANGUAGE: env\nCODE:\n```\nACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nAUTH_TOKEN= your_auth_token\n\nPROXY=127.0.0.1:8888\n```\n\n----------------------------------------\n\nTITLE: Installing Twilio PHP SDK via Composer\nDESCRIPTION: Shows how to install the Twilio PHP SDK using Composer. This is typically done in a PHP project's root directory.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_10\n\nLANGUAGE: Shell\nCODE:\n```\ncomposer require twilio/sdk\n```\n\n----------------------------------------\n\nTITLE: Converting Booleans to Strings in TwiML Generation for PHP\nDESCRIPTION: This update ensures that boolean values passed as TwiML attributes are correctly converted to string representations 'true' and 'false', instead of incorrect values 1 and empty string.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_23\n\nLANGUAGE: PHP\nCODE:\n```\ntranscribe=\"true\"\n```\n\n----------------------------------------\n\nTITLE: Transitioning from Old to New TwiML Client Format\nDESCRIPTION: Example showing the breaking change in the TwiML Client noun usage where the optional 'name' field was renamed to 'identity', requiring a format transition in Ruby applications.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_16\n\nLANGUAGE: PHP\nCODE:\n```\n// Old format\ndial.client ''\ndial.client 'alice'\n\n// New format\ndial.client\ndial.client(identity: alice)\n```\n\n----------------------------------------\n\nTITLE: Reading Chat Messages with Options Array in PHP 5.6.x\nDESCRIPTION: Shows how to read Chat messages in version 5.6.x where the first parameter is now an options array for filtering.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->chat->messages->read(array(), 10); // limit to 10 messages\n$client->chat->messages->read(array(\n    \"order\" => \"asc\"\n), 10); // limit to 10 messages and filter by order\n```\n\n----------------------------------------\n\nTITLE: Creating Taskrouter Workflow with Twilio PHP SDK 5.1.x\nDESCRIPTION: This snippet demonstrates how to create a Taskrouter workflow using Twilio PHP SDK version 5.1.x. It initializes a Twilio client and creates a new workflow with a name, configuration JSON, and assignment callback URL.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_24\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->taskrouter->workspaces('WS123')->workflows->create(\n    'My New Workflow',\n    '{...}',\n    'http://assignment-callback-url.com'\n);\n```\n\n----------------------------------------\n\nTITLE: Fetching Taskrouter TaskQueue Statistics in PHP (5.4.x)\nDESCRIPTION: Example of retrieving statistics for Taskrouter TaskQueues in Twilio PHP library version 5.4.x. This version uses getStatistics() method for both single and all task queues.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_18\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n\n// Get statistics for a single task queue\n$taskQueue = $client->taskrouter->v1->workspaces('WS123')->taskQueues('WQ123')->fetch();\n$taskQueueStatistics = $taskQueue->getStatistics();\n\n// Get statistics for all task queues\n$client->taskrouter->v1->workspaces('WS123')->taskQueues->getStatistics();\n```\n\n----------------------------------------\n\nTITLE: Using Authy Entities with Optional Parameters in PHP 6.3.x\nDESCRIPTION: Demonstrates how to read Authy entities after the breaking change in 6.3.x where optional header parameters were added, requiring an empty array as the first argument.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<? \nuse Twilio\\Rest\\Client;\n$twilio = new Client();\n\n$entities = $twilio->authy->v1->services(\"ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n                              ->entities\n                              ->read([], 20);\n```\n\n----------------------------------------\n\nTITLE: Fetching Taskrouter TaskQueue Statistics in PHP (5.5.x)\nDESCRIPTION: Example of retrieving statistics for Taskrouter TaskQueues in Twilio PHP library version 5.5.x. This version uses getTaskQueueStatistics() for single and getTaskQueuesStatistics() for all task queues.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_19\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n\n// Get statistics for a single task queue\n$taskQueue = $client->taskrouter->v1->workspaces('WS123')->taskQueues('WQ123')->fetch();\n$taskQueueStatistics = $taskQueue->getTaskQueueStatistics();\n\n// Get statistics for all task queues\n$client->taskrouter->v1->workspaces('WS123')->taskQueues->getTaskQueuesStatistics();\n```\n\n----------------------------------------\n\nTITLE: Adding incoming.allow to AccessToken VoiceGrant\nDESCRIPTION: Example showing how to add the incoming.allow parameter to an AccessToken VoiceGrant, as mentioned in PR #468.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_18\n\nLANGUAGE: PHP\nCODE:\n```\n// Adding incoming.allow to AccessToken VoiceGrant\n$voiceGrant = new VoiceGrant();\n$voiceGrant->setIncomingAllow(true);\n$token->addGrant($voiceGrant);\n```\n\n----------------------------------------\n\nTITLE: Updating Taskrouter Activity in PHP (5.5.x)\nDESCRIPTION: Example of updating a Taskrouter Activity in Twilio PHP library version 5.5.x. This version uses an array to specify parameters, making friendlyName and available optional.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->taskrouter->v1->workspaces('WS123')->activities('WA123')->update(array('friendlyName' => 'new friendly name'));\n$client->taskrouter->v1->workspaces('WS123')->activities->create('new friendly name', array('available' => true));\n$client->taskrouter->v1->workspaces('WS123')->tasks->create(array(\n    'attributes' => 'attributes',\n    'workflowSid' => 'WW123',\n    'timeout' => 10\n));\n```\n\n----------------------------------------\n\nTITLE: Creating Chat Messages with Required Body Parameter in PHP 5.1x.x\nDESCRIPTION: Shows how to create Chat messages in version 5.1x.x where the body parameter was still required as a direct argument.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->chat->v2->service('IS123')->channel('CH123')->message->create(\"this is the body\");\n```\n\n----------------------------------------\n\nTITLE: Creating Chat Messages with Non-Required Body Parameter in PHP 5.15.x\nDESCRIPTION: Demonstrates how to create Chat messages in version 5.15.x where the body parameter is no longer required to support media in messages.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->chat->v2->service('IS123')->channel('CH123')->message->create(array(\"body\"=>\"this is the body\"));\n```\n\n----------------------------------------\n\nTITLE: Docker Local Testing Workflow\nDESCRIPTION: Step-by-step commands for setting up and running tests in a Docker environment with a specified PHP version.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CONTRIBUTING.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/twilio/twilio-php.git\\ncd twilio-php\\nmake install\\nmake docker-dev-build VERSION=7.4-rc\\nmake docker-dev-test VERSION=7.4-rc\n```\n\n----------------------------------------\n\nTITLE: Reading Chat Members and Channels with Options in PHP 5.5.x\nDESCRIPTION: Demonstrates how to read Chat members and channels in version 5.5.x with the new options array parameter.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->chat->v1->services('IS123')->channels('CH123')->members->read(array(), 10);\n$client->chat->v1->services('IS123')->channels->read(array(), 10);\n$client->chat->v1->services('IS123')->channels('CH123')->members->read(array('type' => 'public'), 10);\n```\n\n----------------------------------------\n\nTITLE: Creating Queues in PHP (5.4.x)\nDESCRIPTION: Example of creating a queue in Twilio PHP library version 5.4.x. This version uses an array to specify the friendlyName parameter.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_22\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->api->v2010->accounts('AC123')->queues('QU123')->create(array('friendlyName' => 'Test'));\n```\n\n----------------------------------------\n\nTITLE: Using DateTime Objects for Usage Records in PHP 5.5.x\nDESCRIPTION: Demonstrates how to use DateTime objects for date filtering in version 5.5.x, instead of string dates and inequality filters that were removed.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$startDate = new DateTime(\"now\", new DateTimeZone(\"America/Los_Angeles\"));\n$endDate = clone $startDate;\n$endDate->add(new DateInterval(\"P2D\")); // Add 2 days\n\n$client = new Client();\n$client->usage->records->read(array(\n    \"StartDate\" => $startDate,\n    \"EndDate\" => $endDate\n));\n\n// Passing strings will still work\n$client->usage->records->read(array(\n    \"StartDate\" => \"1999-09-07\" // OK\n));\n```\n\n----------------------------------------\n\nTITLE: Updating MMS Message Body in PHP (5.4.x)\nDESCRIPTION: Example of updating an MMS message body in Twilio PHP library version 5.4.x. This version uses an array to specify the body parameter.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_20\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->api->v2010->accounts('AC123')->messages('MM123')->update(array('body' => ''));\n```\n\n----------------------------------------\n\nTITLE: Updating Chat Message Body in PHP 5.5.x\nDESCRIPTION: Demonstrates how to update a Chat message body in version 5.5.x where the body parameter is now part of an options array.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->chat->v1->services('IS123')->channels('CH123')->messages('IM123')->update(array('body' => 'new body'));\n```\n\n----------------------------------------\n\nTITLE: Adding HTTP Logging for PHP\nDESCRIPTION: A GitHub pull request reference showing the addition of HTTP logging functionality to the Twilio PHP SDK.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n**Library - Feature**\n- [PR #667](https://github.com/twilio/twilio-php/pull/667): add http logging for php. Thanks to [@JenniferMah](https://github.com/JenniferMah)!\n```\n\n----------------------------------------\n\nTITLE: Updating MMS Message Body in PHP (5.5.x)\nDESCRIPTION: Example of updating an MMS message body in Twilio PHP library version 5.5.x. This version requires passing the body directly as a parameter.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_21\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->api->v2010->accounts('AC123')->messages('MM123')->update('');\n```\n\n----------------------------------------\n\nTITLE: Property Documentation Updates in PHP SDK\nDESCRIPTION: Updates to property documentation formatting and type hints in the PHP SDK codebase through multiple PRs (#545, #544, #512, #499).\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_13\n\nLANGUAGE: PHP\nCODE:\n```\n// Updated property doc format from:\nproperty type propertyName\n\n// To:\nproperty type $propertyName\n```\n\n----------------------------------------\n\nTITLE: Updating Taskrouter Activity in PHP (5.4.x)\nDESCRIPTION: Example of updating a Taskrouter Activity in Twilio PHP library version 5.4.x. This version requires specifying the friendly name directly as a parameter.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_16\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->taskrouter->v1->workspaces('WS123')->activities('WA123')->update('new friendly name');\n$client->taskrouter->v1->workspaces('WS123')->activities->create('new friendly name', true);\n$client->taskrouter->v1->workspaces('WS123')->tasks->create('attributes', 'WW123', array('timeout' => 10));\n```\n\n----------------------------------------\n\nTITLE: Updating PHP Dependencies for PHP8 Support\nDESCRIPTION: A GitHub pull request reference showing that Travis tests were added for PHP8 compatibility in the Twilio PHP SDK.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n**Library - Chore**\n- [PR #684](https://github.com/twilio/twilio-php/pull/684): Travis test for PHP8. Thanks to [@ibpavlov](https://github.com/ibpavlov)!\n```\n\n----------------------------------------\n\nTITLE: Adding Region Support to Access Token\nDESCRIPTION: A GitHub pull request reference showing the addition of region support to access tokens in the Twilio PHP SDK.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n**Library - Feature**\n- [PR #669](https://github.com/twilio/twilio-php/pull/669): Add region to access token. Thanks to [@ryan-rowland](https://github.com/ryan-rowland)!\n```\n\n----------------------------------------\n\nTITLE: Composer Require Command Example\nDESCRIPTION: Example of the composer require command mentioned in PR #511 for installing the Twilio PHP SDK.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require twilio/sdk\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Claims to ClientToken\nDESCRIPTION: Method to specify custom claims when creating a ClientToken, as referenced in PR #469.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_17\n\nLANGUAGE: PHP\nCODE:\n```\n// Example of adding custom claims to ClientToken\n$token = new ClientToken($accountSid, $authToken);\n$token->addClaim('custom_claim', 'custom_value');\n```\n\n----------------------------------------\n\nTITLE: Accessing Sandbox Resource in PHP 5.5.x\nDESCRIPTION: Demonstrates accessing the now-removed Sandbox resource in version 5.5.x. This is no longer supported in version 5.6.x and later.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->api->v2010->sandbox->read();\n```\n\n----------------------------------------\n\nTITLE: Configuring ISO8601 Date Conversion in PHP\nDESCRIPTION: This code sets the offset to +0000 when converting dates to ISO8601 format in PHP.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nuse offset +0000 for iso8601 conversion\n```\n\n----------------------------------------\n\nTITLE: Identifying Generated Code Headers\nDESCRIPTION: Examples of code headers that indicate whether a file is generated automatically. Files with these headers require different approaches when reporting issues or making changes.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n\"\"\"\\nThis code was generated by\\n\\ / _    _  _|   _  _\\n | (_)\\\\/(_)(_|\\\\/| |(/_  v1.0.0\\n      /       /\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Accessing API Accounts in PHP 5.5.x\nDESCRIPTION: Shows how to access Twilio Accounts in version 5.5.x before the accounts property was changed to reference the Accounts subdomain.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n// Access api.twilio.com/2010-04-01/Accounts\n$client->accounts->read();\n```\n\n----------------------------------------\n\nTITLE: Alternative Generated Code Header Format\nDESCRIPTION: Another header format indicating generated code that requires changes to be made in the twilio-oai-generator repository rather than directly in the file.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n * This code was generated by\\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\\\ | |___ |__/ |__|  | |  | |__/\\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\\\| |___ |  \\\\ |  |  | |__| |  \\\\\n```\n\n----------------------------------------\n\nTITLE: Accessing API Accounts in PHP 5.6.x\nDESCRIPTION: Shows how to access Twilio Accounts in version 5.6.x where the accounts property on Client references the Accounts subdomain.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n// Access accounts.twilio.com/v1\n$client->accounts;\n// Access new PublicKeys resource\n$client->accounts->credentials->publicKey->read();\n\n// Access api.twilio.com/2010-04-01/Accounts\n$client->api->v2010->accounts->read();\n```\n\n----------------------------------------\n\nTITLE: Creating a New Git Branch for Changes\nDESCRIPTION: Git command to create a new branch for working on fixes or features before submitting a pull request.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout -b my-fix-branch main\n```\n\n----------------------------------------\n\nTITLE: Committing Changes to Repository\nDESCRIPTION: Git command for committing changes with the option to automatically add and remove edited files.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CONTRIBUTING.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngit commit -a\n```\n\n----------------------------------------\n\nTITLE: Pushing Local Branch to GitHub\nDESCRIPTION: Git command to push your local branch to GitHub in preparation for creating a pull request.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CONTRIBUTING.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ngit push origin my-fix-branch\n```\n\n----------------------------------------\n\nTITLE: Managing PHPdox Installation in PHP Project\nDESCRIPTION: This command installs and removes the PHPdox tool as required for the PHP project.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\ninstall and remove phpdox as required\n```\n\n----------------------------------------\n\nTITLE: Updating Resource Subresource in PHP for Twilio SDK\nDESCRIPTION: This snippet refers to the addition of an 'addSubresource' method in the 'Services/Twilio/Resource.php' file. It's part of the SDK's internal structure for handling Twilio API resources.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_22\n\nLANGUAGE: PHP\nCODE:\n```\naddSubresource\n```\n\n----------------------------------------\n\nTITLE: Reading Chat Messages in PHP 5.5.x\nDESCRIPTION: Shows how to read Chat messages in version 5.5.x before the options array was added as the first parameter.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->chat->messages->read(10); // limit to 10 messages\n```\n\n----------------------------------------\n\nTITLE: Reading Chat Members and Channels in PHP 5.4.x\nDESCRIPTION: Shows how to read Chat members and channels in version 5.4.x before the options array parameter was introduced.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->chat->v1->services('IS123')->channels('CH123')->members->read(10);\n$client->chat->v1->services('IS123')->channels->read(10);\n```\n\n----------------------------------------\n\nTITLE: Using Authy Entities in PHP 6.2.x (Pre-Optional Parameters)\nDESCRIPTION: Shows how to read Authy entities in version 6.2.x before the breaking change that introduced optional parameters.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<? \nuse Twilio\\Rest\\Client;\n$twilio = new Client();\n\n$entities = $twilio->authy->v1->services(\"ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n                              ->entities\n                              ->read(20);\n```\n\n----------------------------------------\n\nTITLE: Filtering Usage Records in PHP 5.4.x\nDESCRIPTION: Shows how usage records were filtered in version 5.4.x using string dates and inequality filters that are no longer supported.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->usage->records->read(array(\n    \"StartDate\" => \"1999-09-07\",\n    \"EndDate<\" => \"2000-01-01\"      // Allowed but would have had no effect.\n));\n```\n\n----------------------------------------\n\nTITLE: Creating Queues in PHP (5.5.x)\nDESCRIPTION: Example of creating a queue in Twilio PHP library version 5.5.x. This version requires passing the friendlyName directly as a parameter.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_23\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->api->v2010->accounts('AC123')->queues('QU123')->create('Test', array());\n```\n\n----------------------------------------\n\nTITLE: Updating Chat Channel Type in PHP 5.5.x (No Longer Supported)\nDESCRIPTION: Shows an attempt to update a Chat channel type in version 5.5.x, which is no longer supported to align with the public API.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->chat->v1->services('IS123')->channels('CH123')->update(array('type'=>'public'));\n```\n\n----------------------------------------\n\nTITLE: TwiML Boolean and Integer Type Updates\nDESCRIPTION: Switched boolean and integer to using primitive types in doc tags for improved type accuracy in TwiML documentation.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_14\n\nLANGUAGE: PHP\nCODE:\n```\n// Updated from:\n@var Boolean paramName\n@var Integer paramName\n\n// To:\n@var bool paramName\n@var int paramName\n```\n\n----------------------------------------\n\nTITLE: Removing Final Keyword from RequestValidator\nDESCRIPTION: A GitHub pull request reference showing the removal of the 'final' keyword from the RequestValidator class declaration to allow inheritance.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n**Library - Feature**\n- [PR #664](https://github.com/twilio/twilio-php/pull/664): Remove final from RequestValidator declaration. Thanks to [@hdimitrov1](https://github.com/hdimitrov1)!\n```\n\n----------------------------------------\n\nTITLE: Fixing Version Shortcut Syntax\nDESCRIPTION: A GitHub pull request reference showing a fix for the shortcut syntax for non-GA versions in the Twilio PHP SDK.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n**Library - Fix**\n- [PR #675](https://github.com/twilio/twilio-php/pull/675): shortcut syntax for new non-GA versions. Thanks to [@eshanholtz](https://github.com/eshanholtz)!\n```\n\n----------------------------------------\n\nTITLE: Installing Twilio PHP Library Dependencies\nDESCRIPTION: This snippet shows a command to install the documentation dependencies for the Twilio PHP library in a separate step.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\ninstall docs dependencies in separate step\n```\n\n----------------------------------------\n\nTITLE: Version Identifiers in PHP SDK\nDESCRIPTION: Version numbers showing changes in the Twilio PHP library, including breaking changes and new features.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n[2024-06-06] Version 8.1.1\n[2024-05-24] Version 8.1.0\n[2024-04-18] Version 8.0.1\n[2024-04-04] Version 8.0.0\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Issue in Twilio PHP SDK\nDESCRIPTION: This placeholder is for users to insert a PHP code snippet that demonstrates the issue they are experiencing with the Twilio PHP SDK. The code should be relevant to reproducing the reported problem.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/ISSUE_TEMPLATE.md#2025-04-21_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n# paste code here\n```\n\n----------------------------------------\n\nTITLE: Exception or Log Output for Twilio PHP SDK Issue\nDESCRIPTION: This section is for users to include any relevant exception messages or log output related to the issue they are reporting with the Twilio PHP SDK. This information helps in diagnosing the problem.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/ISSUE_TEMPLATE.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n# paste exception/log here\n```\n\n----------------------------------------\n\nTITLE: Running Test Suite Locally\nDESCRIPTION: Make command to run the full test suite to ensure all tests pass before submitting changes.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CONTRIBUTING.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmake test\n```\n\n----------------------------------------\n\nTITLE: Pull Request References in PHP SDK\nDESCRIPTION: GitHub pull request references documenting specific changes and contributions to the codebase.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/CHANGES.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n[PR #807](https://github.com/twilio/twilio-php/pull/807)\n[PR #805](https://github.com/twilio/twilio-php/pull/805)\n[PR #803](https://github.com/twilio/twilio-php/pull/803)\n```\n\n----------------------------------------\n\nTITLE: PR Title Format Example in Markdown\nDESCRIPTION: Demonstrates the expected format for pull request titles, including type categorization and breaking change notation.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/PULL_REQUEST_TEMPLATE.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<type>[!]: <description>\nWhere <type> is one of: docs, chore, feat, fix, test, misc.\nAdd a '!' after the type for breaking changes (e.g. feat!: new breaking feature).\n```\n\n----------------------------------------\n\nTITLE: Issue Linking Example in Markdown\nDESCRIPTION: Shows how to properly link issues that the PR resolves, which will auto-link and close them when the PR is merged.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/PULL_REQUEST_TEMPLATE.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nFixes #1\nCloses #2\n```\n\n----------------------------------------\n\nTITLE: Updating Chat Message Body in PHP 5.4.x\nDESCRIPTION: Shows how to update a Chat message body in version 5.4.x where the body parameter was required as a direct argument.\nSOURCE: https://github.com/twilio/twilio-php/blob/main/UPGRADE.md#2025-04-21_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Twilio\\Rest\\Client;\n\n$client = new Client();\n$client->chat->v1->services('IS123')->channels('CH123')->messages('IM123')->update('new body', array());\n```"
  }
]
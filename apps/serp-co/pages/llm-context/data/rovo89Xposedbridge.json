[
  {
    "owner": "rovo89",
    "repo": "xposedbridge",
    "content": "TITLE: Creating XModuleResources Instance\nDESCRIPTION: The `XModuleResources` class, extending `android.content.res.Resources`, offers functionality for resource manipulation within an Xposed module.  The `createInstance` method is used to instantiate `XModuleResources` enabling modules to access resources. Dependencies: `android.content.res.Resources`,  `java.lang.String`. The output is an instance of the `XModuleResources` class.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public class XModuleResources extends android.content.res.Resources {\n    method public static android.content.res.XModuleResources createInstance(java.lang.String, android.content.res.XResources);\n    method public android.content.res.XResForwarder fwd(int);\n  }\n\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Base Method Hook Class (Java)\nDESCRIPTION: Defines the abstract `XC_MethodHook` class, extending `XCallback`. Subclasses override `beforeHookedMethod` and/or `afterHookedMethod` to run code before and after the execution of a hooked method. The `MethodHookParam` provides access to method arguments, `this` object, and allows modification of the result or throwable.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract class XC_MethodHook extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_MethodHook();\n    ctor public XC_MethodHook(int);\n    method protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_MethodHook.MethodHookParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    method public java.lang.Object getResult();\n    method public java.lang.Object getResultOrThrowable() throws java.lang.Throwable;\n    method public java.lang.Throwable getThrowable();\n    method public boolean hasThrowable();\n    method public void setResult(java.lang.Object);\n    method public void setThrowable(java.lang.Throwable);\n    field public java.lang.Object[] args;\n    field public java.lang.reflect.Member method;\n    field public java.lang.Object thisObject;\n  }\n\n  public class XC_MethodHook.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.XC_MethodHook getCallback();\n    method public java.lang.reflect.Member getHookedMethod();\n    method public void unhook();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Reflection and Hooking Utilities for Xposed Framework in Java\nDESCRIPTION: This snippet defines the XposedHelpers final class that contains static utility methods for dynamic class and member resolution, method invocation, hooking methods, and managing additional fields using reflection in Android apps. It includes methods for finding classes, methods, constructors, and fields either by exact or flexible parameter matching, as well as invoking both instance and static methods. The class handles primitive and object fields setters/getters and manages additional instance/static fields which enable extending existing objects or classes at runtime. Dependencies include Java reflection APIs and the Android resource system. The methods accept inputs such as class references, method names, parameter type arrays, and objects to perform various operations and return dynamically discovered or manipulated objects or primitives. Exception handling relates to IO and reflection errors. This class is foundational for interacting with Android internals dynamically via Xposed.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_036.txt#_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic final class XposedHelpers {\n    method public static byte[] assetAsByteArray(android.content.res.Resources, java.lang.String) throws java.io.IOException;\n    method public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Object...);\n    method public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\n    method public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n    method public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\n    method public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n    method public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\n    method public static java.lang.Class<?> findClass(java.lang.String, java.lang.ClassLoader);\n    method public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>...);\n    method public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Object...);\n    method public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object[]);\n    method public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Class<?>...);\n    method public static java.lang.reflect.Field findField(java.lang.Class<?>, java.lang.String);\n    method public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\n    method public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n    method public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object[]);\n    method public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n    method public static java.lang.reflect.Method findMethodExact(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\n    method public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\n    method public static java.lang.reflect.Method[] findMethodsByExactParameters(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>...);\n    method public static java.lang.Object getAdditionalInstanceField(java.lang.Object, java.lang.String);\n    method public static java.lang.Object getAdditionalStaticField(java.lang.Object, java.lang.String);\n    method public static java.lang.Object getAdditionalStaticField(java.lang.Class<?>, java.lang.String);\n    method public static boolean getBooleanField(java.lang.Object, java.lang.String);\n    method public static byte getByteField(java.lang.Object, java.lang.String);\n    method public static char getCharField(java.lang.Object, java.lang.String);\n    method public static java.lang.Class<?>[] getClassesAsArray(java.lang.Class<?>...);\n    method public static double getDoubleField(java.lang.Object, java.lang.String);\n    method public static float getFloatField(java.lang.Object, java.lang.String);\n    method public static int getIntField(java.lang.Object, java.lang.String);\n    method public static long getLongField(java.lang.Object, java.lang.String);\n    method public static java.lang.String getMD5Sum(java.lang.String) throws java.io.IOException;\n    method public static java.lang.Object getObjectField(java.lang.Object, java.lang.String);\n    method public static java.lang.Class<?>[] getParameterTypes(java.lang.Object...);\n    method public static short getShortField(java.lang.Object, java.lang.String);\n    method public static boolean getStaticBooleanField(java.lang.Class<?>, java.lang.String);\n    method public static byte getStaticByteField(java.lang.Class<?>, java.lang.String);\n    method public static char getStaticCharField(java.lang.Class<?>, java.lang.String);\n    method public static double getStaticDoubleField(java.lang.Class<?>, java.lang.String);\n    method public static float getStaticFloatField(java.lang.Class<?>, java.lang.String);\n    method public static int getStaticIntField(java.lang.Class<?>, java.lang.String);\n    method public static long getStaticLongField(java.lang.Class<?>, java.lang.String);\n    method public static java.lang.Object getStaticObjectField(java.lang.Class<?>, java.lang.String);\n    method public static short getStaticShortField(java.lang.Class<?>, java.lang.String);\n    method public static java.lang.Object getSurroundingThis(java.lang.Object);\n    method public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Object...);\n    method public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object...);\n    method public static java.lang.Object removeAdditionalInstanceField(java.lang.Object, java.lang.String);\n    method public static java.lang.Object removeAdditionalStaticField(java.lang.Object, java.lang.String);\n    method public static java.lang.Object removeAdditionalStaticField(java.lang.Class<?>, java.lang.String);\n    method public static java.lang.Object setAdditionalInstanceField(java.lang.Object, java.lang.String, java.lang.Object);\n    method public static java.lang.Object setAdditionalStaticField(java.lang.Object, java.lang.String, java.lang.Object);\n    method public static java.lang.Object setAdditionalStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object);\n    method public static void setBooleanField(java.lang.Object, java.lang.String, boolean);\n    method public static void setByteField(java.lang.Object, java.lang.String, byte);\n    method public static void setCharField(java.lang.Object, java.lang.String, char);\n    method public static void setDoubleField(java.lang.Object, java.lang.String, double);\n    method public static void setFloatField(java.lang.Object, java.lang.String, float);\n    method public static void setIntField(java.lang.Object, java.lang.String, int);\n    method public static void setLongField(java.lang.Object, java.lang.String, long);\n    method public static void setObjectField(java.lang.Object, java.lang.String, java.lang.Object);\n    method public static void setShortField(java.lang.Object, java.lang.String, short);\n    method public static void setStaticBooleanField(java.lang.Class<?>, java.lang.String, boolean);\n    method public static void setStaticByteField(java.lang.Class<?>, java.lang.String, byte);\n    method public static void setStaticCharField(java.lang.Class<?>, java.lang.String, char);\n    method public static void setStaticDoubleField(java.lang.Class<?>, java.lang.String, double);\n    method public static void setStaticFloatField(java.lang.Class<?>, java.lang.String, float);\n    method public static void setStaticIntField(java.lang.Class<?>, java.lang.String, int);\n    method public static void setStaticLongField(java.lang.Class<?>, java.lang.String, long);\n    method public static void setStaticObjectField(java.lang.Class<?>, java.lang.String, java.lang.Object);\n    method public static void setStaticShortField(java.lang.Class<?>, java.lang.String, short);\n  }\n```\n\n----------------------------------------\n\nTITLE: Interface for Unhooking in XposedBridge\nDESCRIPTION: Defines the `IXUnhook` interface which has a single method called `unhook`. It's designed to provide a standard way for unhooking methods that are hooked using Xposed. Implementations would provide the logic to remove a previously applied hook.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_13\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract interface IXUnhook {\n    method public abstract void unhook();\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining XCallback Class in Xposed API (Java)\nDESCRIPTION: Defines an abstract base class `XCallback` for all Xposed callback implementations. It manages callback priority and serves as the root for specific hook callback types.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_28\n\nLANGUAGE: java\nCODE:\n```\npublic abstract class XCallback { }\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodHook Class and Nested Classes in Java\nDESCRIPTION: Defines the abstract `XC_MethodHook` class and its nested classes `MethodHookParam` and `Unhook`. `XC_MethodHook` is the base class for creating method hooks, allowing code execution before and after the original method. `MethodHookParam` encapsulates parameters passed to the hook callbacks (like arguments, `this` object, method reference), and `Unhook` provides a way to remove the hook.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_7\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract class XC_MethodHook extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_MethodHook();\n    ctor public XC_MethodHook(int);\n    method protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_MethodHook.MethodHookParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    method public java.lang.Object getResult();\n    method public java.lang.Object getResultOrThrowable() throws java.lang.Throwable;\n    method public java.lang.Throwable getThrowable();\n    method public boolean hasThrowable();\n    method public void setResult(java.lang.Object);\n    method public void setThrowable(java.lang.Throwable);\n    field public java.lang.Object[] args;\n    field public java.lang.reflect.Member method;\n    field public java.lang.Object thisObject;\n  }\n\n  public class XC_MethodHook.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.XC_MethodHook getCallback();\n    method public java.lang.reflect.Member getHookedMethod();\n    method public void unhook();\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: XposedBridge Core API for method/callback hooking in Java\nDESCRIPTION: The XposedBridge class provides the core functionality of the Xposed framework, with methods for hooking Java methods, constructors, package loading, and resource initialization. It also includes utilities for logging and invoking original methods.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_039.txt#_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\n  public final class XposedBridge {\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?>, de.robv.android.xposed.XC_MethodHook);\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?>, java.lang.String, de.robv.android.xposed.XC_MethodHook);\n    method public static de.robv.android.xposed.callbacks.XC_InitPackageResources.Unhook hookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n    method public static de.robv.android.xposed.callbacks.XC_LoadPackage.Unhook hookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n    method public static de.robv.android.xposed.XC_MethodHook.Unhook hookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    method public static java.lang.Object invokeOriginalMethod(java.lang.reflect.Member, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException, java.lang.NullPointerException;\n    method public static synchronized void log(java.lang.String);\n    method public static synchronized void log(java.lang.Throwable);\n    method public static void unhookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n    method public static void unhookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n    method public static void unhookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    field public static final java.lang.ClassLoader BOOTCLASSLOADER;\n  }\n```\n\n----------------------------------------\n\nTITLE: XposedBridge Hooking Utilities\nDESCRIPTION: This class is the core of the Xposed framework, containing methods to hook methods and manage package resources.  `hookAllConstructors` hooks all constructors of a given class. `hookAllMethods` hooks all methods of a specific name in a class. `hookInitPackageResources` and `hookLoadPackage` register callbacks for the respective lifecycle events.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_060.txt#_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?>, de.robv.android.xposed.XC_MethodHook);\nmethod public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?>, java.lang.String, de.robv.android.xposed.XC_MethodHook);\nmethod public static de.robv.android.xposed.callbacks.XC_InitPackageResources.Unhook hookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\nmethod public static de.robv.android.xposed.callbacks.XC_LoadPackage.Unhook hookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n```\n\n----------------------------------------\n\nTITLE: Reflection Helper Methods in XposedHelpers Class - Java\nDESCRIPTION: This class provides numerous static methods to perform reflection operations such as finding classes, methods, constructors, and fields by names or signatures and invoking methods or accessing fields dynamically. It supports getting and setting both instance and static fields of various primitive and object types. Additionally, it allows adding or removing extra fields dynamically on classes or instances. Dependencies include standard Java reflection APIs and Android resource classes. The methods handle exceptions and are designed to simplify common reflection tasks within the Xposed framework.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_039.txt#_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\npublic final class XposedHelpers {\n  public static byte[] assetAsByteArray(android.content.res.Resources, java.lang.String) throws java.io.IOException;\n  public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Object...);\n  public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\n  public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n  public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\n  public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n  public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\n  public static java.lang.Class<?> findClass(java.lang.String, java.lang.ClassLoader);\n  public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>...);\n  public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Object...);\n  public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object[]);\n  public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Class<?>...);\n  public static java.lang.reflect.Field findField(java.lang.Class<?>, java.lang.String);\n  public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\n  public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n  public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object[]);\n  public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n  public static java.lang.reflect.Method findMethodExact(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\n  public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\n  public static java.lang.reflect.Method[] findMethodsByExactParameters(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>...);\n  public static java.lang.Object getAdditionalInstanceField(java.lang.Object, java.lang.String);\n  public static java.lang.Object getAdditionalStaticField(java.lang.Object, java.lang.String);\n  public static java.lang.Object getAdditionalStaticField(java.lang.Class<?>, java.lang.String);\n  public static boolean getBooleanField(java.lang.Object, java.lang.String);\n  public static byte getByteField(java.lang.Object, java.lang.String);\n  public static char getCharField(java.lang.Object, java.lang.String);\n  public static java.lang.Class<?>[] getClassesAsArray(java.lang.Class<?>...);\n  public static double getDoubleField(java.lang.Object, java.lang.String);\n  public static float getFloatField(java.lang.Object, java.lang.String);\n  public static int getIntField(java.lang.Object, java.lang.String);\n  public static long getLongField(java.lang.Object, java.lang.String);\n  public static java.lang.String getMD5Sum(java.lang.String) throws java.io.IOException;\n  public static java.lang.Object getObjectField(java.lang.Object, java.lang.String);\n  public static java.lang.Class<?>[] getParameterTypes(java.lang.Object...);\n  public static short getShortField(java.lang.Object, java.lang.String);\n  public static boolean getStaticBooleanField(java.lang.Class<?>, java.lang.String);\n  public static byte getStaticByteField(java.lang.Class<?>, java.lang.String);\n  public static char getStaticCharField(java.lang.Class<?>, java.lang.String);\n  public static double getStaticDoubleField(java.lang.Class<?>, java.lang.String);\n  public static float getStaticFloatField(java.lang.Class<?>, java.lang.String);\n  public static int getStaticIntField(java.lang.Class<?>, java.lang.String);\n  public static long getStaticLongField(java.lang.Class<?>, java.lang.String);\n  public static java.lang.Object getStaticObjectField(java.lang.Class<?>, java.lang.String);\n  public static short getStaticShortField(java.lang.Class<?>, java.lang.String);\n  public static java.lang.Object getSurroundingThis(java.lang.Object);\n  public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Object...);\n  public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object...);\n  public static java.lang.Object removeAdditionalInstanceField(java.lang.Object, java.lang.String);\n  public static java.lang.Object removeAdditionalStaticField(java.lang.Object, java.lang.String);\n  public static java.lang.Object removeAdditionalStaticField(java.lang.Class<?>, java.lang.String);\n  public static java.lang.Object setAdditionalInstanceField(java.lang.Object, java.lang.String, java.lang.Object);\n  public static java.lang.Object setAdditionalStaticField(java.lang.Object, java.lang.String, java.lang.Object);\n  public static java.lang.Object setAdditionalStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object);\n  public static void setBooleanField(java.lang.Object, java.lang.String, boolean);\n  public static void setByteField(java.lang.Object, java.lang.String, byte);\n  public static void setCharField(java.lang.Object, java.lang.String, char);\n  public static void setDoubleField(java.lang.Object, java.lang.String, double);\n  public static void setFloatField(java.lang.Object, java.lang.String, float);\n  public static void setIntField(java.lang.Object, java.lang.String, int);\n  public static void setLongField(java.lang.Object, java.lang.String, long);\n  public static void setObjectField(java.lang.Object, java.lang.String, java.lang.Object);\n  public static void setShortField(java.lang.Object, java.lang.String, short);\n  public static void setStaticBooleanField(java.lang.Class<?>, java.lang.String, boolean);\n  public static void setStaticByteField(java.lang.Class<?>, java.lang.String, byte);\n  public static void setStaticCharField(java.lang.Class<?>, java.lang.String, char);\n  public static void setStaticDoubleField(java.lang.Class<?>, java.lang.String, double);\n  public static void setStaticFloatField(java.lang.Class<?>, java.lang.String, float);\n  public static void setStaticIntField(java.lang.Class<?>, java.lang.String, int);\n  public static void setStaticLongField(java.lang.Class<?>, java.lang.String, long);\n  public static void setStaticObjectField(java.lang.Class<?>, java.lang.String, java.lang.Object);\n  public static void setStaticShortField(java.lang.Class<?>, java.lang.String, short);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XposedHook Interfaces\nDESCRIPTION: This code defines interfaces that Xposed modules can implement to hook into specific stages of the Android system's lifecycle. These include `IXposedHookCmdInit`, `IXposedHookInitPackageResources`, `IXposedHookLoadPackage`, and `IXposedHookZygoteInit`. These interfaces define methods that the Xposed framework calls at various stages. Dependencies: de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam etc.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract deprecated interface IXposedHookCmdInit {\n    method public abstract void initCmdApp(de.robv.android.xposed.IXposedHookCmdInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookCmdInit.StartupParam {\n    field public java.lang.String modulePath;\n    field public java.lang.String startClassName;\n  }\n\n  public abstract interface IXposedHookInitPackageResources {\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookLoadPackage {\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookZygoteInit {\n    method public abstract void initZygote(de.robv.android.xposed.IXposedHookZygoteInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookZygoteInit.StartupParam {\n    field public java.lang.String modulePath;\n  }\n\n```\n\n----------------------------------------\n\nTITLE: Defining XposedBridge Class\nDESCRIPTION: Defines the `XposedBridge` class, which provides the main entry point for Xposed modules.  It includes methods for hooking methods and constructors, invoking original methods, logging information, and accessing the boot classloader. This class contains core functionalities to interact with Xposed framework.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_7\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XposedBridge {\n    method public static int getXposedVersion();\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?>, de.robv.android.xposed.XC_MethodHook);\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?>, java.lang.String, de.robv.android.xposed.XC_MethodHook);\n    method public static de.robv.android.xposed.XC_MethodHook.Unhook hookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    method public static java.lang.Object invokeOriginalMethod(java.lang.reflect.Member, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException, java.lang.NullPointerException;\n    method public static synchronized void log(java.lang.String);\n    method public static synchronized void log(java.lang.Throwable);\n    method public static deprecated void unhookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    field public static final java.lang.ClassLoader BOOTCLASSLOADER;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining hasDirectFileAccess Method in Xposed BaseService (Java)\nDESCRIPTION: Defines a public method `hasDirectFileAccess` in `BaseService`. This method indicates whether the service implementation has direct access to the file system (e.g., running as root) or relies on a different mechanism.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_46\n\nLANGUAGE: java\nCODE:\n```\nmethod public boolean hasDirectFileAccess();\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodReplacement Class in Java\nDESCRIPTION: Defines the abstract `XC_MethodReplacement` class, which extends `XC_MethodHook`. This class simplifies replacing the entire implementation of a hooked method. Developers implement the `replaceHookedMethod` abstract method to define the replacement logic. Static helper methods and constants like `returnConstant` and `DO_NOTHING` are provided for common replacement scenarios.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_8\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract class XC_MethodReplacement extends de.robv.android.xposed.XC_MethodHook {\n    ctor public XC_MethodReplacement();\n    ctor public XC_MethodReplacement(int);\n    method protected abstract java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(java.lang.Object);\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(int, java.lang.Object);\n    field public static final de.robv.android.xposed.XC_MethodReplacement DO_NOTHING;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Definition in Java\nDESCRIPTION: The XposedHelpers class provides utility methods for reflection-based operations in Xposed modules. It includes methods for finding and hooking methods, accessing and modifying fields, creating instances, and manipulating class loaders.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_000.txt#_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic final class XposedHelpers {\n  // Methods for reflection operations\n  // Field access, method invocation, class finding, etc.\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Hook Interfaces\nDESCRIPTION: Defines the interfaces `IXposedHookInitPackageResources`, `IXposedHookLoadPackage`, and `IXposedHookZygoteInit` that Xposed modules must implement to hook into various stages of the application initialization process. These interfaces allow modules to initialize resources, load packages, and initialize during Zygote startup.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookInitPackageResources {\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookLoadPackage {\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookZygoteInit {\n    method public abstract void initZygote(de.robv.android.xposed.IXposedHookZygoteInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookZygoteInit.StartupParam {\n    field public java.lang.String modulePath;\n    field public boolean startsSystemServer;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodHook and Related Classes\nDESCRIPTION: Defines the `XC_MethodHook` class and its inner classes (`MethodHookParam`, `Unhook`), which provide the core mechanism for hooking methods in Android. `XC_MethodHook` allows executing code before and after a hooked method. `MethodHookParam` provides access to the method's arguments, `this` object, and return value. `Unhook` provides a way to remove the hook.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract class XC_MethodHook extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_MethodHook();\n    ctor public XC_MethodHook(int);\n    method protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_MethodHook.MethodHookParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    method public java.lang.Object getResult();\n    method public java.lang.Object getResultOrThrowable() throws java.lang.Throwable;\n    method public java.lang.Throwable getThrowable();\n    method public boolean hasThrowable();\n    method public void setResult(java.lang.Object);\n    method public void setThrowable(java.lang.Throwable);\n    field public java.lang.Object[] args;\n    field public java.lang.reflect.Member method;\n    field public java.lang.Object thisObject;\n  }\n\n  public class XC_MethodHook.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.XC_MethodHook getCallback();\n    method public java.lang.reflect.Member getHookedMethod();\n    method public void unhook();\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Hooking a Method with XposedBridge\nDESCRIPTION: The `hookMethod` method of the `XposedBridge` class enables hooking a specific method in an Android application or framework class.  It takes a `java.lang.reflect.Member` object that represents the method to hook and an `XC_MethodHook` instance that contains the hook logic. The `XC_MethodHook` provides `beforeHookedMethod` and `afterHookedMethod` methods that allow developers to modify the behavior of the original method. This method returns an `XC_MethodHook.Unhook` object used for unhooking the method later.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_051.txt#_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook hookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n```\n\n----------------------------------------\n\nTITLE: Xposed Bridge Core Class (Java)\nDESCRIPTION: The central static class for interacting with the Xposed framework runtime. It provides essential methods for hooking methods and constructors (`hookMethod`, `hookAllMethods`, `hookAllConstructors`), registering lifecycle callbacks (`hookLoadPackage`, `hookInitPackageResources`), unhooking callbacks, logging messages and exceptions, and invoking the original implementation of a hooked method (`invokeOriginalMethod`).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XposedBridge {\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?>, de.robv.android.xposed.XC_MethodHook);\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?>, java.lang.String, de.robv.android.xposed.XC_MethodHook);\n    method public static de.robv.android.xposed.callbacks.XC_InitPackageResources.Unhook hookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n    method public static de.robv.android.xposed.callbacks.XC_LoadPackage.Unhook hookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n    method public static de.robv.android.xposed.XC_MethodHook.Unhook hookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    method public static java.lang.Object invokeOriginalMethod(java.lang.reflect.Member, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException, java.lang.NullPointerException;\n    method public static synchronized void log(java.lang.String);\n    method public static synchronized void log(java.lang.Throwable);\n    method public static void unhookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n    method public static void unhookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n    method public static void unhookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    field public static final java.lang.ClassLoader BOOTCLASSLOADER;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XposedHelpers Utility Class Methods (Java Signatures)\nDESCRIPTION: Lists the static methods available in the `XposedHelpers` utility class. These methods facilitate common Xposed module development tasks like reflection (finding classes, methods, constructors, fields), method/constructor hooking (`findAndHookMethod`, `findAndHookConstructor`), accessing/modifying instance and static fields (e.g., `getIntField`, `setStaticObjectField`), invoking methods (`callMethod`, `callStaticMethod`), managing additional dynamic fields associated with objects/classes, and handling resources.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_9\n\nLANGUAGE: Java Signature\nCODE:\n```\nmethod public static byte[] assetAsByteArray(android.content.res.Resources, java.lang.String) throws java.io.IOException;\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\nmethod public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\nmethod public static int decrementMethodDepth(java.lang.String);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookConstructor(java.lang.Class<?>, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookConstructor(java.lang.String, java.lang.ClassLoader, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Class<?> findClass(java.lang.String, java.lang.ClassLoader);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object[]);\nmethod public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.String, java.lang.ClassLoader, java.lang.Object...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Field findField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.reflect.Field findFirstFieldByExactType(java.lang.Class<?>, java.lang.Class<?>);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object[]);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Method[] findMethodsByExactParameters(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.Object getAdditionalInstanceField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object getAdditionalStaticField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object getAdditionalStaticField(java.lang.Class<?>, java.lang.String);\nmethod public static boolean getBooleanField(java.lang.Object, java.lang.String);\nmethod public static byte getByteField(java.lang.Object, java.lang.String);\nmethod public static char getCharField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Class<?>[] getClassesAsArray(java.lang.Class<?>...);\nmethod public static double getDoubleField(java.lang.Object, java.lang.String);\nmethod public static float getFloatField(java.lang.Object, java.lang.String);\nmethod public static int getIntField(java.lang.Object, java.lang.String);\nmethod public static long getLongField(java.lang.Object, java.lang.String);\nmethod public static java.lang.String getMD5Sum(java.lang.String) throws java.io.IOException;\nmethod public static int getMethodDepth(java.lang.String);\nmethod public static java.lang.Object getObjectField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Class<?>[] getParameterTypes(java.lang.Object...);\nmethod public static short getShortField(java.lang.Object, java.lang.String);\nmethod public static boolean getStaticBooleanField(java.lang.Class<?>, java.lang.String);\nmethod public static byte getStaticByteField(java.lang.Class<?>, java.lang.String);\nmethod public static char getStaticCharField(java.lang.Class<?>, java.lang.String);\nmethod public static double getStaticDoubleField(java.lang.Class<?>, java.lang.String);\nmethod public static float getStaticFloatField(java.lang.Class<?>, java.lang.String);\nmethod public static int getStaticIntField(java.lang.Class<?>, java.lang.String);\nmethod public static long getStaticLongField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.Object getStaticObjectField(java.lang.Class<?>, java.lang.String);\nmethod public static short getStaticShortField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.Object getSurroundingThis(java.lang.Object);\nmethod public static int incrementMethodDepth(java.lang.String);\nmethod public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object...);\nmethod public static java.lang.Object removeAdditionalInstanceField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object removeAdditionalStaticField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object removeAdditionalStaticField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.Object setAdditionalInstanceField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static java.lang.Object setAdditionalStaticField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static java.lang.Object setAdditionalStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object);\nmethod public static void setBooleanField(java.lang.Object, java.lang.String, boolean);\nmethod public static void setByteField(java.lang.Object, java.lang.String, byte);\nmethod public static void setCharField(java.lang.Object, java.lang.String, char);\nmethod public static void setDoubleField(java.lang.Object, java.lang.String, double);\nmethod public static void setFloatField(java.lang.Object, java.lang.String, float);\nmethod public static void setIntField(java.lang.Object, java.lang.String, int);\nmethod public static void setLongField(java.lang.Object, java.lang.String, long);\nmethod public static void setObjectField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static void setShortField(java.lang.Object, java.lang.String, short);\nmethod public static void setStaticBooleanField(java.lang.Class<?>, java.lang.String, boolean);\nmethod public static void setStaticByteField(java.lang.Class<?>, java.lang.String, byte);\nmethod public static void setStaticCharField(java.lang.Class<?>, java.lang.String, char);\nmethod public static void setStaticDoubleField(java.lang.Class<?>, java.lang.String, double);\nmethod public static void setStaticFloatField(java.lang.Class<?>, java.lang.String, float);\nmethod public static void setStaticIntField(java.lang.Class<?>, java.lang.String, int);\nmethod public static void setStaticLongField(java.lang.Class<?>, java.lang.String, long);\nmethod public static void setStaticObjectField(java.lang.Class<?>, java.lang.String, java.lang.Object);\nmethod public static void setStaticShortField(java.lang.Class<?>, java.lang.String, short);\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodHook\nDESCRIPTION: The `XC_MethodHook` class is an abstract class that modules extend to hook methods in other applications. This class defines `beforeHookedMethod` and `afterHookedMethod`, which are called before and after the original method execution respectively.  It also provides the `MethodHookParam` class, which contains method arguments, the instance, and the result. The method provides options to set and retrieve information from this method, and is fundamental to Xposed. Dependencies: de.robv.android.xposed.callbacks.XCallback etc. The output is various manipulation on methods.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\n  public abstract class XC_MethodHook extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_MethodHook();\n    ctor public XC_MethodHook(int);\n    method protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_MethodHook.MethodHookParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    method public java.lang.Object getResult();\n    method public java.lang.Object getResultOrThrowable() throws java.lang.Throwable;\n    method public java.lang.Throwable getThrowable();\n    method public boolean hasThrowable();\n    method public void setResult(java.lang.Object);\n    method public void setThrowable(java.lang.Throwable);\n    field public java.lang.Object[] args;\n    field public java.lang.reflect.Member method;\n    field public java.lang.Object thisObject;\n  }\n\n  public class XC_MethodHook.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.XC_MethodHook getCallback();\n    method public java.lang.reflect.Member getHookedMethod();\n    method public void unhook();\n  }\n\n```\n\n----------------------------------------\n\nTITLE: Xposed Framework Hooking Interfaces (Java)\nDESCRIPTION: Defines the core callback interfaces that Xposed modules must implement to hook into different stages of the Android system and application lifecycle. Includes interfaces for Zygote initialization (`IXposedHookZygoteInit`), package loading (`IXposedHookLoadPackage`), package resource initialization (`IXposedHookInitPackageResources`), and command-line application initialization (`IXposedHookCmdInit`), along with their respective parameter classes.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookCmdInit {\n    method public abstract void initCmdApp(de.robv.android.xposed.IXposedHookCmdInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookCmdInit.StartupParam {\n    field public java.lang.String modulePath;\n    field public java.lang.String startClassName;\n  }\n\n  public abstract interface IXposedHookInitPackageResources {\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookLoadPackage {\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookZygoteInit {\n    method public abstract void initZygote(de.robv.android.xposed.IXposedHookZygoteInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookZygoteInit.StartupParam {\n    field public java.lang.String modulePath;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodReplacement Abstract Class (Java API)\nDESCRIPTION: Defines the abstract class `XC_MethodReplacement` extending `XC_MethodHook` within `de.robv.android.xposed`. Subclasses implement `replaceHookedMethod` to completely replace the execution logic of a hooked method. It provides static factory methods `returnConstant` for simple replacements and a `DO_NOTHING` constant.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_17\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract class XC_MethodReplacement extends de.robv.android.xposed.XC_MethodHook {\n    ctor public XC_MethodReplacement();\n    ctor public XC_MethodReplacement(int);\n    method protected abstract java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(java.lang.Object);\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(int, java.lang.Object);\n    field public static final de.robv.android.xposed.XC_MethodReplacement DO_NOTHING;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: XC_InitPackageResources Abstract Class in Java\nDESCRIPTION: Abstract class for hooking into the resource initialization of packages. It allows Xposed modules to intercept and modify resources as they're being loaded into a package.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_000.txt#_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_InitPackageResources extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_InitPackageResources();\n  ctor public XC_InitPackageResources(int);\n  method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n}\n```\n\n----------------------------------------\n\nTITLE: Overview of de.robv.android.xposed.XposedHelpers utility class\nDESCRIPTION: Provides static methods for reflection, class loading, field access, method invocation, and field modification, facilitating dynamic hooking and manipulation of classes and objects during runtime in Android. Methods include finding classes/methods/fields, creating new instances, and setting or getting field values.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\npublic static byte[] assetAsByteArray(android.content.res.Resources, java.lang.String) throws java.io.IOException;\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static int decrementMethodDepth(java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookConstructor(java.lang.Class<?>, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookConstructor(java.lang.String, java.lang.ClassLoader, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Class<?> findClass(java.lang.String, java.lang.ClassLoader);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object[]);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.String, java.lang.ClassLoader, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Class<?>...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Field findField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Field findFirstFieldByExactType(java.lang.Class<?>, java.lang.Class<?>);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object[]);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Method findMethodExact(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.reflect.Method[] findMethodsByExactParameters(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object getAdditionalInstanceField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object getAdditionalStaticField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object getAdditionalStaticField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static boolean getBooleanField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static byte getByteField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static char getCharField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Class<?>[] getClassesAsArray(java.lang.Class<?>...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static double getDoubleField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static float getFloatField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static int getIntField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static long getLongField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.String getMD5Sum(java.lang.String) throws java.io.IOException;\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static int getMethodDepth(java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object getObjectField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Class<?>[] getParameterTypes(java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static short getShortField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static boolean getStaticBooleanField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static byte getStaticByteField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static char getStaticCharField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static double getStaticDoubleField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static float getStaticFloatField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static int getStaticIntField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static long getStaticLongField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object getStaticObjectField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static short getStaticShortField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object getSurroundingThis(java.lang.Object);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static int incrementMethodDepth(java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object removeAdditionalInstanceField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object removeAdditionalStaticField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object removeAdditionalStaticField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object setAdditionalInstanceField(java.lang.Object, java.lang.String, java.lang.Object);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object setAdditionalStaticField(java.lang.Object, java.lang.String, java.lang.Object);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static java.lang.Object setAdditionalStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setBooleanField(java.lang.Object, java.lang.String, boolean);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setByteField(java.lang.Object, java.lang.String, byte);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setCharField(java.lang.Object, java.lang.String, char);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setDoubleField(java.lang.Object, java.lang.String, double);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setFloatField(java.lang.Object, java.lang.String, float);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setIntField(java.lang.Object, java.lang.String, int);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setLongField(java.lang.Object, java.lang.String, long);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setObjectField(java.lang.Object, java.lang.String, java.lang.Object);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setShortField(java.lang.Object, java.lang.String, short);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setStaticBooleanField(java.lang.Class<?>, java.lang.String, boolean);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setStaticByteField(java.lang.Class<?>, java.lang.String, byte);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setStaticCharField(java.lang.Class<?>, java.lang.String, char);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setStaticDoubleField(java.lang.Class<?>, java.lang.String, double);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setStaticFloatField(java.lang.Class<?>, java.lang.String, float);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setStaticIntField(java.lang.Class<?>, java.lang.String, int);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setStaticLongField(java.lang.Class<?>, java.lang.String, long);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setStaticObjectField(java.lang.Class<?>, java.lang.String, java.lang.Object);\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static void setStaticShortField(java.lang.Class<?>, java.lang.String, short);\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage Callback Handler - Java\nDESCRIPTION: This abstract class is the primary entry point for modules hooking the package loading process in Xposed. Developers extend this class and implement the handleLoadPackage method to execute logic when an application package is loaded.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_19\n\nLANGUAGE: Java\nCODE:\n```\n  public abstract class XC_LoadPackage extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_LoadPackage();\n    ctor public XC_LoadPackage(int);\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining XposedBridge Class (Java API)\nDESCRIPTION: Defines the final `XposedBridge` class within `de.robv.android.xposed`. This central class provides static methods for the core Xposed functionality, including retrieving the framework version (`getXposedVersion`), hooking constructors (`hookAllConstructors`), hooking methods (`hookAllMethods`), and registering callbacks for package loading (`hookLoadPackage`) and resource initialization (`hookInitPackageResources`).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_19\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XposedBridge {\n    method public static int getXposedVersion();\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?>, de.robv.android.xposed.XC_MethodHook);\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?>, java.lang.String, de.robv.android.xposed.XC_MethodHook);\n    method public static de.robv.android.xposed.callbacks.XC_InitPackageResources.Unhook hookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n    method public static de.robv.android.xposed.callbacks.XC_LoadPackage.Unhook hookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Documentation of XposedHelpers Utility Class and Method Hooking Algorithms\nDESCRIPTION: This snippet details the static methods in XposedHelpers used for reflection, class loading, field/method access, and hooking mechanisms within the Xposed framework. These methods facilitate dynamic method invocation, class retrieval, and hooking of constructors or methods to modify runtime behavior of applications. Usage relies on Java reflection and Xposed API dependencies.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\npublic static byte[] assetAsByteArray(android.content.res.Resources, java.lang.String) throws java.io.IOException;\npublic static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Object...);\npublic static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\npublic static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\npublic static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\npublic static int decrementMethodDepth(java.lang.String);\npublic static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookConstructor(java.lang.Class<?>, java.lang.Object...);\npublic static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookConstructor(java.lang.String, java.lang.ClassLoader, java.lang.Object...);\npublic static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\npublic static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\npublic static java.lang.Class<?> findClass(java.lang.String, java.lang.ClassLoader);\npublic static java.lang.Class<?> findClassIfExists(java.lang.String, java.lang.ClassLoader);\npublic static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>...);\npublic static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Object...);\npublic static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object[]);\npublic static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Object...);\npublic static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.String, java.lang.ClassLoader, java.lang.Object...);\npublic static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Class<?>...);\npublic static java.lang.reflect.Constructor<?> findConstructorExactIfExists(java.lang.Class<?>, java.lang.Object...);\npublic static java.lang.reflect.Constructor<?> findConstructorExactIfExists(java.lang.String, java.lang.ClassLoader, java.lang.Object...);\npublic static java.lang.reflect.Field findField(java.lang.Class<?>, java.lang.String);\npublic static java.lang.reflect.Field findFieldIfExists(java.lang.Class<?>, java.lang.String);\npublic static java.lang.reflect.Field findFirstFieldByExactType(java.lang.Class<?>, java.lang.Class<?>);\npublic static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\npublic static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Object...);\npublic static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object[]);\npublic static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Object...);\npublic static java.lang.reflect.Method findMethodExact(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\npublic static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\npublic static java.lang.reflect.Method findMethodExactIfExists(java.lang.Class<?>, java.lang.String, java.lang.Object...);\npublic static java.lang.reflect.Method findMethodExactIfExists(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\npublic static java.lang.reflect.Method[] findMethodsByExactParameters(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>...);\npublic static java.lang.Object getAdditionalInstanceField(java.lang.Object, java.lang.String);\npublic static java.lang.Object getAdditionalStaticField(java.lang.Object, java.lang.String);\npublic static java.lang.Object getAdditionalStaticField(java.lang.Class<?>, java.lang.String);\npublic static boolean getBooleanField(java.lang.Object, java.lang.String);\npublic static byte getByteField(java.lang.Object, java.lang.String);\npublic static char getCharField(java.lang.Object, java.lang.String);\npublic static java.lang.Class<?>[] getClassesAsArray(java.lang.Class<?>...);\npublic static double getDoubleField(java.lang.Object, java.lang.String);\npublic static float getFloatField(java.lang.Object, java.lang.String);\npublic static int getIntField(java.lang.Object, java.lang.String);\npublic static long getLongField(java.lang.Object, java.lang.String);\npublic static java.lang.String getMD5Sum(java.lang.String) throws java.io.IOException;\npublic static int getMethodDepth(java.lang.String);\npublic static java.lang.Object getObjectField(java.lang.Object, java.lang.String);\npublic static java.lang.Class<?>[] getParameterTypes(java.lang.Object...);\npublic static short getShortField(java.lang.Object, java.lang.String);\npublic static boolean getStaticBooleanField(java.lang.Class<?>, java.lang.String);\npublic static byte getStaticByteField(java.lang.Class<?>, java.lang.String);\npublic static char getStaticCharField(java.lang.Class<?>, java.lang.String);\npublic static double getStaticDoubleField(java.lang.Class<?>, java.lang.String);\npublic static float getStaticFloatField(java.lang.Class<?>, java.lang.String);\npublic static int getStaticIntField(java.lang.Class<?>, java.lang.String);\npublic static long getStaticLongField(java.lang.Class<?>, java.lang.String);\npublic static java.lang.Object getStaticObjectField(java.lang.Class<?>, java.lang.String);\npublic static short getStaticShortField(java.lang.Class<?>, java.lang.String);\npublic static java.lang.Object getSurroundingThis(java.lang.Object);\npublic static int incrementMethodDepth(java.lang.String);\npublic static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Object...);\npublic static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object...);\npublic static java.lang.Object removeAdditionalInstanceField(java.lang.Object, java.lang.String);\npublic static java.lang.Object removeAdditionalStaticField(java.lang.Object, java.lang.String);\npublic static java.lang.Object removeAdditionalStaticField(java.lang.Class<?>, java.lang.String);\npublic static java.lang.Object setAdditionalInstanceField(java.lang.Object, java.lang.String, java.lang.Object);\npublic static java.lang.Object setAdditionalStaticField(java.lang.Object, java.lang.String, java.lang.Object);\npublic static java.lang.Object setAdditionalStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object);\npublic static void setBooleanField(java.lang.Object, java.lang.String, boolean);\npublic static void setByteField(java.lang.Object, java.lang.String, byte);\npublic static void setCharField(java.lang.Object, java.lang.String, char);\npublic static void setDoubleField(java.lang.Object, java.lang.String, double);\npublic static void setFloatField(java.lang.Object, java.lang.String, float);\npublic static void setIntField(java.lang.Object, java.lang.String, int);\npublic static void setLongField(java.lang.Object, java.lang.String, long);\npublic static void setObjectField(java.lang.Object, java.lang.String, java.lang.Object);\npublic static void setShortField(java.lang.Object, java.lang.String, short);\npublic static void setStaticBooleanField(java.lang.Class<?>, java.lang.String, boolean);\npublic static void setStaticByteField(java.lang.Class<?>, java.lang.String, byte);\npublic static void setStaticCharField(java.lang.Class<?>, java.lang.String, char);\npublic static void setStaticDoubleField(java.lang.Class<?>, java.lang.String, double);\npublic static void setStaticFloatField(java.lang.Class<?>, java.lang.String, float);\npublic static void setStaticIntField(java.lang.Class<?>, java.lang.String, int);\npublic static void setStaticLongField(java.lang.Class<?>, java.lang.String, long);\npublic static void setStaticObjectField(java.lang.Class<?>, java.lang.String, java.lang.Object);\npublic static void setStaticShortField(java.lang.Class<?>, java.lang.String, short);\n```\n\n----------------------------------------\n\nTITLE: Hooking Methods with XposedBridge\nDESCRIPTION: Provides methods to hook and modify application behavior. `XposedBridge` is the central class for interacting with the Xposed framework.  It provides static methods like `hookMethod`, `hookAllMethods`, and `hookAllConstructors` to hook methods, and `invokeOriginalMethod` to call the original method implementation after hooks.  It includes methods for hooking init package resources and load package events.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_053.txt#_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XposedBridge {\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?>, de.robv.android.xposed.XC_MethodHook);\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?>, java.lang.String, de.robv.android.xposed.XC_MethodHook);\n    method public static de.robv.android.xposed.callbacks.XC_InitPackageResources.Unhook hookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n    method public static de.robv.android.xposed.callbacks.XC_LoadPackage.Unhook hookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n    method public static de.robv.android.xposed.XC_MethodHook.Unhook hookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    method public static java.lang.Object invokeOriginalMethod(java.lang.reflect.Member, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException, java.lang.NullPointerException;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: XC_LayoutInflated Parameter and Unhook Classes in Java\nDESCRIPTION: Support classes for the XC_LayoutInflated callback. LayoutInflatedParam provides access to the inflated view and resource information, while Unhook allows removing the hook when it's no longer needed.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_000.txt#_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XC_LayoutInflated.LayoutInflatedParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public android.content.res.XResources res;\n  field public android.content.res.XResources.ResourceNames resNames;\n  field public java.lang.String variant;\n  field public android.view.View view;\n}\n\npublic class XC_LayoutInflated.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n  method public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\n  method public int getId();\n  method public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations\nDESCRIPTION: This section contains method declarations within the `XposedHelpers` class. These methods provide utilities for Android application modification and reflection, including operations for calling methods, finding and hooking methods, accessing fields, and instantiating objects. Each method signature indicates the parameter types and return types. They serve as building blocks for Xposed modules to interact with other Android applications.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static byte[] assetAsByteArray(android.content.res.Resources, java.lang.String) throws java.io.IOException;\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Resources Management Class (Java)\nDESCRIPTION: Defines the core `XResources` class extending `android.content.res.Resources`. Provides methods to add resources, hook layout inflation (`hookLayout`, `hookSystemWideLayout`), replace resource values (`setReplacement`, `setSystemWideReplacement`), and manage resource IDs. This is central to modifying application or system resources via Xposed.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public class XResources extends android.content.res.Resources {\n    method public int addResource(android.content.res.Resources, int);\n    method public static int getFakeResId(java.lang.String);\n    method public static int getFakeResId(android.content.res.Resources, int);\n    method public java.lang.String getPackageName();\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public void setReplacement(int, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(int, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void unhookLayout(java.lang.String, int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: XposedBridge Core Methods\nDESCRIPTION: Core methods of the XposedBridge class for logging, hooking, and unhooking operations. Provides the foundation for Xposed module development.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_053.txt#_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static synchronized void log(java.lang.String);\nmethod public static synchronized void log(java.lang.Throwable);\nmethod public static void unhookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\nmethod public static void unhookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\nmethod public static void unhookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\nfield public static final java.lang.ClassLoader BOOTCLASSLOADER;\nfield public static int XPOSED_BRIDGE_VERSION;\n```\n\n----------------------------------------\n\nTITLE: XResources Class Methods\nDESCRIPTION: This defines a set of methods in the `XResources` class, extending the standard `Resources` class. These methods offer functionality for adding, retrieving, and replacing resources within an Xposed module, including methods for hooking layout inflations and setting resource replacements, both globally and for specific resources. Prerequisites are an Xposed framework environment. Outputs are various resources and manipulations on the resources. Dependencies: `android.content.res.Resources`, `de.robv.android.xposed.callbacks.XC_LayoutInflated` etc.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n  public class XResources extends android.content.res.Resources {\n    method public int addResource(android.content.res.Resources, int);\n    method public static int getFakeResId(java.lang.String);\n    method public static int getFakeResId(android.content.res.Resources, int);\n    method public java.lang.String getPackageName();\n    method public static java.lang.String getPackageNameDuringConstruction();\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public void setReplacement(int, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(int, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void unhookLayout(java.lang.String, int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining XposedBridge API in Java\nDESCRIPTION: Defines the central `XposedBridge` class within the `de.robv.android.xposed` package. This final class provides static methods that are the main entry points for using the Xposed framework: hooking methods and constructors (`hookMethod`, `hookAllMethods`, `hookAllConstructors`), logging messages and exceptions (`log`), invoking the original implementation of hooked methods (`invokeOriginalMethod`), and retrieving the framework version.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_15\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XposedBridge {\n    method public static int getXposedVersion();\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?>, de.robv.android.xposed.XC_MethodHook);\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?>, java.lang.String, de.robv.android.xposed.XC_MethodHook);\n    method public static de.robv.android.xposed.XC_MethodHook.Unhook hookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    method public static java.lang.Object invokeOriginalMethod(java.lang.reflect.Member, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException, java.lang.NullPointerException;\n    method public static synchronized void log(java.lang.String);\n    method public static synchronized void log(java.lang.Throwable);\n    method public static deprecated void unhookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    field public static final java.lang.ClassLoader BOOTCLASSLOADER;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XposedBridge Class in Java\nDESCRIPTION: Defines the main `XposedBridge` class, the central entry point for the Xposed Framework API. This final class provides static methods essential for Xposed module development, including methods to hook constructors (`hookAllConstructors`), methods (`hookAllMethods`, `hookMethod`), invoke the original hooked method (`invokeOriginalMethod`), log messages and exceptions, and retrieve the framework version.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_10\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XposedBridge {\n    method public static int getXposedVersion();\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?>, de.robv.android.xposed.XC_MethodHook);\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?>, java.lang.String, de.robv.android.xposed.XC_MethodHook);\n    method public static de.robv.android.xposed.XC_MethodHook.Unhook hookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    method public static java.lang.Object invokeOriginalMethod(java.lang.reflect.Member, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException, java.lang.NullPointerException;\n    method public static synchronized void log(java.lang.String);\n    method public static synchronized void log(java.lang.Throwable);\n    method public static deprecated void unhookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    field public static final java.lang.ClassLoader BOOTCLASSLOADER;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Method Call in XposedHelpers\nDESCRIPTION: This set of methods provides the functionality to call methods on objects reflectively. `callMethod` allows calling a method on an object, taking the object, method name and optional parameters as input.  It offers overloadings to specify parameter types.  It also enables calling static methods using `callStaticMethod`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Object...);\n    method public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\n    method public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n    method public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\n```\n\n----------------------------------------\n\nTITLE: Reflection-Based Helper Methods in XposedHelpers - Java\nDESCRIPTION: Provides a comprehensive set of static utility methods to facilitate method hooking, method/constructor/field lookups, instance and static field manipulation, and dynamic method invocation using Java reflection. Methods include calling instance and static methods with flexible parameter types, finding constructors and methods by exact or best match signatures, accessing or modifying primitive and object fields, and managing additional instance/static fields dynamically. It also offers utilities to obtain class loaders, parameter types, and to create new instances via constructors. Some methods throw IOException or use variable argument lists for flexibility.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_060.txt#_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static byte[] assetAsByteArray(android.content.res.Resources, java.lang.String) throws java.io.IOException;\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\nmethod public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookConstructor(java.lang.Class<?>, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookConstructor(java.lang.String, java.lang.ClassLoader, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Class<?> findClass(java.lang.String, java.lang.ClassLoader);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object[]);\nmethod public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.String, java.lang.ClassLoader, java.lang.Object...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Field findField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.reflect.Field findFirstFieldByExactType(java.lang.Class<?>, java.lang.Class<?>);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object[]);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Method[] findMethodsByExactParameters(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.Object getAdditionalInstanceField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object getAdditionalStaticField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object getAdditionalStaticField(java.lang.Class<?>, java.lang.String);\nmethod public static boolean getBooleanField(java.lang.Object, java.lang.String);\nmethod public static byte getByteField(java.lang.Object, java.lang.String);\nmethod public static char getCharField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Class<?>[] getClassesAsArray(java.lang.Class<?>...);\nmethod public static double getDoubleField(java.lang.Object, java.lang.String);\nmethod public static float getFloatField(java.lang.Object, java.lang.String);\nmethod public static int getIntField(java.lang.Object, java.lang.String);\nmethod public static long getLongField(java.lang.Object, java.lang.String);\nmethod public static java.lang.String getMD5Sum(java.lang.String) throws java.io.IOException;\nmethod public static java.lang.Object getObjectField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Class<?>[] getParameterTypes(java.lang.Object...);\nmethod public static short getShortField(java.lang.Object, java.lang.String);\nmethod public static boolean getStaticBooleanField(java.lang.Class<?>, java.lang.String);\nmethod public static byte getStaticByteField(java.lang.Class<?>, java.lang.String);\nmethod public static char getStaticCharField(java.lang.Class<?>, java.lang.String);\nmethod public static double getStaticDoubleField(java.lang.Class<?>, java.lang.String);\nmethod public static float getStaticFloatField(java.lang.Class<?>, java.lang.String);\nmethod public static int getStaticIntField(java.lang.Class<?>, java.lang.String);\nmethod public static long getStaticLongField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.Object getStaticObjectField(java.lang.Class<?>, java.lang.String);\nmethod public static short getStaticShortField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.Object getSurroundingThis(java.lang.Object);\nmethod public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object...);\nmethod public static java.lang.Object removeAdditionalInstanceField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object removeAdditionalStaticField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object removeAdditionalStaticField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.Object setAdditionalInstanceField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static java.lang.Object setAdditionalStaticField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static java.lang.Object setAdditionalStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object);\nmethod public static void setBooleanField(java.lang.Object, java.lang.String, boolean);\nmethod public static void setByteField(java.lang.Object, java.lang.String, byte);\nmethod public static void setCharField(java.lang.Object, java.lang.String, char);\nmethod public static void setDoubleField(java.lang.Object, java.lang.String, double);\nmethod public static void setFloatField(java.lang.Object, java.lang.String, float);\nmethod public static void setIntField(java.lang.Object, java.lang.String, int);\nmethod public static void setLongField(java.lang.Object, java.lang.String, long);\nmethod public static void setObjectField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static void setShortField(java.lang.Object, java.lang.String, short);\nmethod public static void setStaticBooleanField(java.lang.Class<?>, java.lang.String, boolean);\nmethod public static void setStaticByteField(java.lang.Class<?>, java.lang.String, byte);\nmethod public static void setStaticCharField(java.lang.Class<?>, java.lang.String, char);\nmethod public static void setStaticDoubleField(java.lang.Class<?>, java.lang.String, double);\nmethod public static void setStaticFloatField(java.lang.Class<?>, java.lang.String, float);\nmethod public static void setStaticIntField(java.lang.Class<?>, java.lang.String, int);\nmethod public static void setStaticLongField(java.lang.Class<?>, java.lang.String, long);\nmethod public static void setStaticObjectField(java.lang.Class<?>, java.lang.String, java.lang.Object);\nmethod public static void setStaticShortField(java.lang.Class<?>, java.lang.String, short);\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodReplacement\nDESCRIPTION: The `XC_MethodReplacement` class, inheriting from `XC_MethodHook`, allows modules to completely replace the original method's implementation. Modules extend this class and override the `replaceHookedMethod` method to provide the replacement logic.  Dependencies: `XC_MethodHook`. The output is various results on methods.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\n  public abstract class XC_MethodReplacement extends de.robv.android.xposed.XC_MethodHook {\n    ctor public XC_MethodReplacement();\n    ctor public XC_MethodReplacement(int);\n    method protected abstract java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(java.lang.Object);\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(int, java.lang.Object);\n    field public static final de.robv.android.xposed.XC_MethodReplacement DO_NOTHING;\n  }\n```\n\n----------------------------------------\n\nTITLE: Registering and Managing Method Hooks on Classes with Java\nDESCRIPTION: XposedBridge exposes static methods to effortlessly hook all constructors or methods of a Java class and register callbacks for package and resource initialization events. Inputs are target classes, method names, and callback instances; outputs are sets of Unhook objects or Unhook handles, enabling further management of registered hooks. Designed for developers building Xposed modules to instrument Android internals at runtime.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\npublic final class XposedBridge {\n  public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?> clazz, de.robv.android.xposed.XC_MethodHook callback);\n  public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?> clazz, java.lang.String methodName, de.robv.android.xposed.XC_MethodHook callback);\n  public static de.robv.android.xposed.callbacks.XC_InitPackageResources.Unhook hookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources callback);\n  public static de.robv.android.xposed.callbacks.XC_LoadPackage.Unhook hookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage callback);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Finding Methods in XposedHelpers\nDESCRIPTION: These methods enable retrieving methods from a class, facilitating method hooking and modification.  `findMethodBestMatch` and `findMethodExact` allow searching methods by name and parameter types.  `findMethodsByExactParameters` allows locating methods based on exact parameter types.  These are fundamental for method interception.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\n    method public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n    method public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\n    method public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n    method public static java.lang.reflect.Method findMethodExact(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\n    method public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\n    method public static java.lang.reflect.Method[] findMethodsByExactParameters(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>...);\n```\n\n----------------------------------------\n\nTITLE: Xposed Callback Interfaces and Abstract Classes for Package and Resource Events in Java\nDESCRIPTION: This snippet defines key abstract callback classes and interfaces within the de.robv.android.xposed.callbacks package for handling Android package and resource lifecycle events via the Xposed framework. It includes interfaces like IXUnhook for unhooking callbacks and abstract classes like XC_InitPackageResources, XC_LayoutInflated, and XC_LoadPackage for handling package resources initialization, layout inflation, and package loading respectively. Each callback class defines abstract handle methods and nested parameter classes providing relevant context fields such as package names, resources, views, and resource variants. Accompanying Unhook classes implement IXUnhook to allow deregistration of callbacks. These components are structured to enable robust hooking mechanisms with clear lifecycle integration points.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_036.txt#_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract interface IXUnhook {\n    method public abstract void unhook();\n  }\n\npublic abstract class XC_InitPackageResources extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_InitPackageResources();\n    ctor public XC_InitPackageResources(int);\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\npublic static final class XC_InitPackageResources.InitPackageResourcesParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    field public java.lang.String packageName;\n    field public android.content.res.XResources res;\n  }\n\npublic class XC_InitPackageResources.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_InitPackageResources getCallback();\n    method public void unhook();\n  }\n\npublic abstract class XC_LayoutInflated extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_LayoutInflated();\n    ctor public XC_LayoutInflated(int);\n    method public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n  }\n\npublic static final class XC_LayoutInflated.LayoutInflatedParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    field public android.content.res.XResources res;\n    field public android.content.res.XResources.ResourceNames resNames;\n    field public java.lang.String variant;\n    field public android.view.View view;\n  }\n\npublic class XC_LayoutInflated.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\n    method public int getId();\n    method public void unhook();\n  }\n\npublic abstract class XC_LoadPackage extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_LoadPackage();\n    ctor public XC_LoadPackage(int);\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n```\n\n----------------------------------------\n\nTITLE: Finding Fields in XposedHelpers\nDESCRIPTION: These methods are used for finding fields of classes, allowing access to private and public fields.  `findField` finds a field by class and name. `findFirstFieldByExactType` allows finding a field of a given type. These methods are foundational for accessing and modifying data.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Field findField(java.lang.Class<?>, java.lang.String);\n    method public static java.lang.reflect.Field findFirstFieldByExactType(java.lang.Class<?>, java.lang.Class<?>);\n```\n\n----------------------------------------\n\nTITLE: Hooking Load Package in XposedBridge\nDESCRIPTION: The `hookLoadPackage` method in `XposedBridge` enables the hooking of the package loading process. It receives an `XC_LoadPackage` instance. This allows modules to intercept the loading of packages within the Android system. The return value is an `XC_LoadPackage.Unhook`, which allows the hook to be removed. Modules use this to perform various actions like class loading changes during the package's initialization.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_051.txt#_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static de.robv.android.xposed.callbacks.XC_LoadPackage.Unhook hookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n```\n\n----------------------------------------\n\nTITLE: Defining the Core Xposed Bridge Class (Java)\nDESCRIPTION: Defines the central `XposedBridge` final class. Provides static utility methods for the Xposed framework, including hooking methods (`hookMethod`, `hookAllMethods`, `hookAllConstructors`), registering lifecycle hooks (`hookLoadPackage`, `hookInitPackageResources`), logging (`log`), invoking the original implementation of hooked methods (`invokeOriginalMethod`), and unhooking.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_13\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XposedBridge {\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?>, de.robv.android.xposed.XC_MethodHook);\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?>, java.lang.String, de.robv.android.xposed.XC_MethodHook);\n    method public static de.robv.android.xposed.callbacks.XC_InitPackageResources.Unhook hookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n    method public static de.robv.android.xposed.callbacks.XC_LoadPackage.Unhook hookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n    method public static de.robv.android.xposed.XC_MethodHook.Unhook hookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    method public static java.lang.Object invokeOriginalMethod(java.lang.reflect.Member, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException, java.lang.NullPointerException;\n    method public static synchronized void log(java.lang.String);\n    method public static synchronized void log(java.lang.Throwable);\n    method public static void unhookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n    method public static void unhookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n    method public static void unhookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    field public static final java.lang.ClassLoader BOOTCLASSLOADER;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - findMethodExact Overloads\nDESCRIPTION: These methods declare overloads for the `findMethodExact` function. This function locates methods based on an exact match of the method name and parameter types. These are crucial for reliably accessing methods in other applications, particularly in cases where exact signature matches are required.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_18\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\n```\n\n----------------------------------------\n\nTITLE: XC_LayoutInflated Class Definition and Methods\nDESCRIPTION: Defines the abstract class `XC_LayoutInflated`, which is used to intercept and modify layout inflation events. It extends `XCallback`. This allows Xposed modules to modify layouts at runtime by extending and implementing the `handleLayoutInflated` method, giving modules the ability to modify the inflated `View` hierarchy.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_29\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LayoutInflated extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_LayoutInflated();\n  ctor public XC_LayoutInflated(int);\n  method public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n}\n```\n\n----------------------------------------\n\nTITLE: Xposed Module Interfaces and Hooks\nDESCRIPTION: Defines core interfaces for Xposed modules and provides classes for hooking methods and modifying their behavior. Includes interfaces for initializing modules (`IXposedHookInitPackageResources`, `IXposedHookLoadPackage`, `IXposedHookZygoteInit`, and `IXposedHookCmdInit`). It also includes classes such as `XC_MethodHook`, `XC_MethodReplacement`, and `XC_MethodHook.MethodHookParam` to allow for flexible method interception and modification.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_053.txt#_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract deprecated interface IXposedHookCmdInit {\n    method public abstract void initCmdApp(de.robv.android.xposed.IXposedHookCmdInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookCmdInit.StartupParam {\n    field public java.lang.String modulePath;\n    field public java.lang.String startClassName;\n  }\n\n  public abstract interface IXposedHookInitPackageResources {\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookLoadPackage {\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookZygoteInit {\n    method public abstract void initZygote(de.robv.android.xposed.IXposedHookZygoteInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookZygoteInit.StartupParam {\n    field public java.lang.String modulePath;\n  }\n\n  public abstract class XC_MethodHook extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_MethodHook();\n    ctor public XC_MethodHook(int);\n    method protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_MethodHook.MethodHookParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    method public java.lang.Object getResult();\n    method public java.lang.Object getResultOrThrowable() throws java.lang.Throwable;\n    method public java.lang.Throwable getThrowable();\n    method public boolean hasThrowable();\n    method public void setResult(java.lang.Object);\n    method public void setThrowable(java.lang.Throwable);\n    field public java.lang.Object[] args;\n    field public java.lang.reflect.Member method;\n    field public java.lang.Object thisObject;\n  }\n\n  public class XC_MethodHook.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.XC_MethodHook getCallback();\n    method public java.lang.reflect.Member getHookedMethod();\n    method public void unhook();\n  }\n\n  public abstract class XC_MethodReplacement extends de.robv.android.xposed.XC_MethodHook {\n    ctor public XC_MethodReplacement();\n    ctor public XC_MethodReplacement(int);\n    method protected abstract java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(java.lang.Object);\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(int, java.lang.Object);\n    field public static final de.robv.android.xposed.XC_MethodReplacement DO_NOTHING;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Package Load Hook Interface (Java)\nDESCRIPTION: Defines the `IXposedHookLoadPackage` interface. Modules implement `handleLoadPackage` to perform actions, typically hooking methods using `XposedHelpers` or `XposedBridge`, when an application package is loaded into memory. Details like package name and class loader are provided via `LoadPackageParam`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookLoadPackage {\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining classLoader Field in Xposed LoadPackageParam (Java)\nDESCRIPTION: Defines a public field `classLoader` of type `java.lang.ClassLoader` within the `XC_LoadPackage.LoadPackageParam` class. This field provides access to the ClassLoader used to load the target package's classes, useful for finding and hooking specific classes.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_24\n\nLANGUAGE: java\nCODE:\n```\nfield public java.lang.ClassLoader classLoader;\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodHook.MethodHookParam Class (Java API)\nDESCRIPTION: Defines the final static inner class `XC_MethodHook.MethodHookParam` extending `XCallback.Param` within `de.robv.android.xposed`. This class encapsulates the state of a hooked method call, providing access to the method (`method`), instance (`thisObject`), arguments (`args`), result, and throwable. It allows modification of the result or throwable.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_15\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public static final class XC_MethodHook.MethodHookParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    method public java.lang.Object getResult();\n    method public java.lang.Object getResultOrThrowable() throws java.lang.Throwable;\n    method public java.lang.Throwable getThrowable();\n    method public boolean hasThrowable();\n    method public void setResult(java.lang.Object);\n    method public void setThrowable(java.lang.Throwable);\n    field public java.lang.Object[] args;\n    field public java.lang.reflect.Member method;\n    field public java.lang.Object thisObject;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining getFileSize Method in Xposed BaseService (Java)\nDESCRIPTION: Defines a public method `getFileSize` in `BaseService`. It returns the size of the file at the specified path in bytes as a long. May throw `IOException` if the file cannot be accessed.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_45\n\nLANGUAGE: java\nCODE:\n```\nmethod public long getFileSize(java.lang.String) throws java.io.IOException;\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - callStaticMethod Overloads\nDESCRIPTION: These two methods declare overloads for calling static methods within the `XposedHelpers` class. These overloads accept varying parameter types and argument counts. They allow Xposed modules to invoke static methods safely and accurately.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - callMethod Overloads\nDESCRIPTION: These two methods declare overloads for the `callMethod` function in `XposedHelpers`. These methods allow for calling methods on objects with varying argument lists and/or specifying the parameter types. This allows for flexibility and type safety in method calls during Xposed module execution.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage Callback and Related Classes (Java)\nDESCRIPTION: Defines the abstract `XC_LoadPackage` callback interface used in Xposed modules to hook into package loading events. It includes the abstract `handleLoadPackage` method, the `LoadPackageParam` inner class holding package details (ApplicationInfo, ClassLoader, package/process name), and the `Unhook` interface for removing the callback.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_051.txt#_snippet_9\n\nLANGUAGE: java\nCODE:\n```\npublic abstract class XC_LoadPackage extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_LoadPackage();\n    ctor public XC_LoadPackage(int);\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_LoadPackage.LoadPackageParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    field public android.content.pm.ApplicationInfo appInfo;\n    field public java.lang.ClassLoader classLoader;\n    field public boolean isFirstApplication;\n    field public java.lang.String packageName;\n    field public java.lang.String processName;\n  }\n\n  public class XC_LoadPackage.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_LoadPackage getCallback();\n    method public void unhook();\n  }\n```\n\n----------------------------------------\n\nTITLE: Handling Android Package Loading Callback in Xposed Using Java\nDESCRIPTION: This abstract class models a callback invoked when a package is loaded in the Xposed framework. The handleLoadPackage method receives a LoadPackageParam instance containing the application information, class loader, package and process names, and a flag indicating if it is the first application process. The Unhook inner class manages callback lifecycle and unregistration. This setup allows developers to manipulate package class loading at runtime.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_22\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LoadPackage extends de.robv.android.xposed.callbacks.XCallback {\n    public XC_LoadPackage();\n    public XC_LoadPackage(int);\n    public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n}\n\npublic static final class XC_LoadPackage.LoadPackageParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    public android.content.pm.ApplicationInfo appInfo;\n    public java.lang.ClassLoader classLoader;\n    public boolean isFirstApplication;\n    public java.lang.String packageName;\n    public java.lang.String processName;\n}\n\npublic class XC_LoadPackage.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    public de.robv.android.xposed.callbacks.XC_LoadPackage getCallback();\n    public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Package Load Callback and Parameters in Java for Xposed Framework\nDESCRIPTION: This abstract class XC_LoadPackage extends XCallback and includes abstract method handleLoadPackage designed to capture Android package load events. The associated LoadPackageParam class carries context such as ApplicationInfo, ClassLoader, package and process names, and a Boolean indicating if it is the first application. This facilitates module developers to hook into package loading with dependency on android.content.pm.ApplicationInfo and ClassLoader. The method takes LoadPackageParam as input and can throw Throwable on errors.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_22\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LoadPackage extends de.robv.android.xposed.callbacks.XCallback {\nctor public XC_LoadPackage();\nctor public XC_LoadPackage(int);\nmethod public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n}\n\npublic static final class XC_LoadPackage.LoadPackageParam extends de.robv.android.xposed.callbacks.XCallback.Param {\nfield public android.content.pm.ApplicationInfo appInfo;\nfield public java.lang.ClassLoader classLoader;\nfield public boolean isFirstApplication;\nfield public java.lang.String packageName;\nfield public java.lang.String processName;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LayoutInflated Callback Class Stub in Java\nDESCRIPTION: Defines the abstract `XC_LayoutInflated` class stub, extending `XCallback`. This class is intended for Xposed modules to hook into the layout inflation process, allowing modification of layouts after they are inflated but before they are returned to the caller. Constructors allow specifying priority.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_19\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LayoutInflated extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_LayoutInflated();\n  ctor public XC_LayoutInflated(int);\n}\n```\n\n----------------------------------------\n\nTITLE: Using XSharedPreferences\nDESCRIPTION: The `XSharedPreferences` class extends `android.content.SharedPreferences` and provides a way for Xposed modules to read preferences that are stored in a specific file. It enables modules to safely manage and access persistent settings.  Dependencies:  `android.content.SharedPreferences`, `java.io.File`, `java.lang.String`. The output is various configurations of shared preferences.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\n  public final class XSharedPreferences implements android.content.SharedPreferences {\n    ctor public XSharedPreferences(java.io.File);\n    ctor public XSharedPreferences(java.lang.String);\n    ctor public XSharedPreferences(java.lang.String, java.lang.String);\n    method public boolean contains(java.lang.String);\n    method public deprecated android.content.SharedPreferences.Editor edit();\n    method public java.util.Map<java.lang.String, ?> getAll();\n    method public boolean getBoolean(java.lang.String, boolean);\n    method public float getFloat(java.lang.String, float);\n    method public int getInt(java.lang.String, int);\n    method public long getLong(java.lang.String, long);\n    method public java.lang.String getString(java.lang.String, java.lang.String);\n    method public java.util.Set<java.lang.String> getStringSet(java.lang.String, java.util.Set<java.lang.String>);\n    method public boolean makeWorldReadable();\n    method public deprecated void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n    method public void reload();\n    method public deprecated void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n  }\n```\n\n----------------------------------------\n\nTITLE: XSharedPreferences for Shared Preferences Access\nDESCRIPTION: This class provides an alternative to the standard Android `SharedPreferences`, allowing modules to access and modify shared preferences. It provides methods to check if a file has changed, reload preferences, and retrieve preference values in various data types (boolean, float, int, long, String, and String set).  It also offers deprecated edit and register/unregister methods for compatibility.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_060.txt#_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\nctor public XSharedPreferences(java.io.File);\nctor public XSharedPreferences(java.lang.String);\nctor public XSharedPreferences(java.lang.String, java.lang.String);\nmethod public boolean contains(java.lang.String);\nmethod public deprecated android.content.SharedPreferences.Editor edit();\nmethod public java.util.Map<java.lang.String, ?> getAll();\nmethod public boolean getBoolean(java.lang.String, boolean);\nmethod public java.io.File getFile();\nmethod public float getFloat(java.lang.String, float);\nmethod public int getInt(java.lang.String, int);\nmethod public long getLong(java.lang.String, long);\nmethod public java.lang.String getString(java.lang.String, java.lang.String);\nmethod public java.util.Set<java.lang.String> getStringSet(java.lang.String, java.util.Set<java.lang.String>);\nmethod public synchronized boolean hasFileChanged();\nmethod public boolean makeWorldReadable();\nmethod public deprecated void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\nmethod public synchronized void reload();\nmethod public deprecated void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n```\n\n----------------------------------------\n\nTITLE: Defining XC_InitPackageResources Class\nDESCRIPTION: This snippet defines the abstract class `XC_InitPackageResources`, extending `de.robv.android.xposed.callbacks.XCallback`.  It includes constructors and an abstract method `handleInitPackageResources`. This callback allows modifications to resources of a package upon initialization.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_17\n\nLANGUAGE: Java\nCODE:\n```\nctor public XC_InitPackageResources();\nctor public XC_InitPackageResources(int);\nmethod public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n```\n\n----------------------------------------\n\nTITLE: Defining IXposedHookLoadPackage Interface (Java API)\nDESCRIPTION: Defines the abstract interface `IXposedHookLoadPackage` within `de.robv.android.xposed`. Implementations define the `handleLoadPackage` method to hook the loading of Android packages.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookLoadPackage {\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XCallback Base Class and Param Helper in Java\nDESCRIPTION: Defines the abstract base class XCallback for all Xposed callbacks, including priority constants (DEFAULT, HIGHEST, LOWEST) and a priority field. Also defines the abstract inner class XCallback.Param, which serves as a base for passing parameters to callbacks and provides methods for managing extra data via a Bundle.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_14\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed.callbacks;\n\npublic abstract class XCallback {\n  ctor public deprecated XCallback();\n  field public static final int PRIORITY_DEFAULT = 50; // 0x32\n  field public static final int PRIORITY_HIGHEST = 10000; // 0x2710\n  field public static final int PRIORITY_LOWEST = -10000; // 0xffffd8f0\n  field public final int priority;\n}\n\npublic static abstract class XCallback.Param {\n  ctor protected deprecated XCallback.Param();\n  method public synchronized android.os.Bundle getExtra();\n  method public java.lang.Object getObjectExtra(java.lang.String);\n  method public void setObjectExtra(java.lang.String, java.lang.Object);\n}\n```\n\n----------------------------------------\n\nTITLE: Xposed Hooking Interfaces and Classes in Java\nDESCRIPTION: Defines the core interfaces and classes for Xposed modules to hook into different stages of Android app execution. Includes interfaces for Zygote initialization, package loading, resource initialization, and command-line app initialization.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookCmdInit {\n    method public abstract void initCmdApp(de.robv.android.xposed.IXposedHookCmdInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookCmdInit.StartupParam {\n    field public java.lang.String modulePath;\n    field public java.lang.String startClassName;\n  }\n\n  public abstract interface IXposedHookInitPackageResources {\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookLoadPackage {\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookZygoteInit {\n    method public abstract void initZygote(de.robv.android.xposed.IXposedHookZygoteInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookZygoteInit.StartupParam {\n    field public java.lang.String modulePath;\n  }\n\n  public abstract class XC_MethodHook extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_MethodHook();\n    ctor public XC_MethodHook(int);\n    method protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_MethodHook.MethodHookParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    method public java.lang.Object getResult();\n    method public java.lang.Object getResultOrThrowable() throws java.lang.Throwable;\n    method public java.lang.Throwable getThrowable();\n    method public boolean hasThrowable();\n    method public void setResult(java.lang.Object);\n    method public void setThrowable(java.lang.Throwable);\n    field public java.lang.Object[] args;\n    field public java.lang.reflect.Member method;\n    field public java.lang.Object thisObject;\n  }\n\n  public class XC_MethodHook.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.XC_MethodHook getCallback();\n    method public java.lang.reflect.Member getHookedMethod();\n    method public void unhook();\n  }\n\n  public abstract class XC_MethodReplacement extends de.robv.android.xposed.XC_MethodHook {\n    ctor public XC_MethodReplacement();\n    ctor public XC_MethodReplacement(int);\n    method protected abstract java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(java.lang.Object);\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(int, java.lang.Object);\n    field public static final de.robv.android.xposed.XC_MethodReplacement DO_NOTHING;\n  }\n\n  public final class XSharedPreferences implements android.content.SharedPreferences {\n    ctor public XSharedPreferences(java.io.File);\n    ctor public XSharedPreferences(java.lang.String);\n    ctor public XSharedPreferences(java.lang.String, java.lang.String);\n    method public boolean contains(java.lang.String);\n    method public deprecated android.content.SharedPreferences.Editor edit();\n    method public java.util.Map<java.lang.String, ?> getAll();\n    method public boolean getBoolean(java.lang.String, boolean);\n    method public float getFloat(java.lang.String, float);\n    method public int getInt(java.lang.String, int);\n    method public long getLong(java.lang.String, long);\n    method public java.lang.String getString(java.lang.String, java.lang.String);\n    method public java.util.Set<java.lang.String> getStringSet(java.lang.String, java.util.Set<java.lang.String>);\n    method public boolean makeWorldReadable();\n    method public deprecated void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n    method public void reload();\n    method public deprecated void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n  }\n\n  public final class XposedBridge {\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?>, de.robv.android.xposed.XC_MethodHook);\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?>, java.lang.String, de.robv.android.xposed.XC_MethodHook);\n    method public static de.robv.android.xposed.callbacks.XC_InitPackageResources.Unhook hookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n    method public static de.robv.android.xposed.callbacks.XC_LoadPackage.Unhook hookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n    method public static de.robv.android.xposed.XC_MethodHook.Unhook hookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    method public static java.lang.Object invokeOriginalMethod(java.lang.reflect.Member, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException, java.lang.NullPointerException;\n    method public static synchronized void log(java.lang.String);\n    method public static synchronized void log(java.lang.Throwable);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage Class\nDESCRIPTION: This snippet defines the abstract class `XC_LoadPackage`, extending `de.robv.android.xposed.callbacks.XCallback`.  It includes constructors and an abstract method `handleLoadPackage`.  This class represents a callback that gets executed when an application package is loaded.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_23\n\nLANGUAGE: Java\nCODE:\n```\nctor public XC_LoadPackage();\nctor public XC_LoadPackage(int);\nmethod public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n```\n\n----------------------------------------\n\nTITLE: Abstract XCallback Base Class and Parameter Container in Java\nDESCRIPTION: The XCallback class serves as a base abstract class for defining prioritized callbacks within the framework, providing priority constant fields and a final priority field. The static nested Param class encapsulates callback parameter data, including management of extra data via android.os.Bundle and object extras retrieval and storage. This base class is crucial for uniform callback handling and extensibility across various Xposed callback implementations.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_23\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XCallback {\n    @Deprecated\n    public XCallback();\n    public static final int PRIORITY_DEFAULT = 50; // 0x32\n    public static final int PRIORITY_HIGHEST = 10000; // 0x2710\n    public static final int PRIORITY_LOWEST = -10000; // 0xffffd8f0\n    public final int priority;\n}\n\npublic static abstract class XCallback.Param {\n    @Deprecated\n    protected XCallback.Param();\n    public synchronized android.os.Bundle getExtra();\n    public java.lang.Object getObjectExtra(java.lang.String key);\n    public void setObjectExtra(java.lang.String key, java.lang.Object value);\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Package Load Unhook in Java for Xposed Framework\nDESCRIPTION: This snippet shows the XC_LoadPackage.Unhook class that implements IXUnhook interface for unhooking package load related callbacks. It provides methods to retrieve the callback instance and unhook it, allowing dynamic control over loaded package hooks within Xposed. There are no parameters, and it depends on interfaces defined under de.robv.android.xposed.callbacks.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_23\n\nLANGUAGE: Java\nCODE:\n```\npublic class XC_LoadPackage.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\nmethod public de.robv.android.xposed.callbacks.XC_LoadPackage getCallback();\nmethod public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - findConstructorBestMatch Overloads\nDESCRIPTION: These methods overload the `findConstructorBestMatch` function in `XposedHelpers`. It finds constructors of a class using a best match strategy, matching based on provided parameter types and arguments. This simplifies the process of identifying and accessing constructors of existing classes, especially when parameter types are not exactly known at compile time.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_13\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>...);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object[]);\n```\n\n----------------------------------------\n\nTITLE: Finding Classes and Constructors in XposedHelpers\nDESCRIPTION: The `findClass` method allows retrieving a class by its name and class loader. The `findConstructorBestMatch` methods find constructors based on parameter types and use. These methods facilitate the reflective access needed to interact with targeted applications' code. They are crucial for hooking methods.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Class<?> findClass(java.lang.String, java.lang.ClassLoader);\n    method public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>...);\n    method public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Object...);\n    method public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object...);\n    method public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Class<?>...);\n```\n\n----------------------------------------\n\nTITLE: Defining statFile Method in Xposed BaseService (Java)\nDESCRIPTION: Defines an abstract public method `statFile` in `BaseService`. Implementations must provide file status information (like size and modification time) without necessarily reading the content. Returns a `de.robv.android.xposed.services.FileResult`. May throw `IOException`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_50\n\nLANGUAGE: java\nCODE:\n```\nmethod public abstract de.robv.android.xposed.services.FileResult statFile(java.lang.String) throws java.io.IOException;\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LayoutInflated Callback Class in Java\nDESCRIPTION: Defines an abstract callback class `XC_LayoutInflated` extending `de.robv.android.xposed.callbacks.XCallback`. It provides constructors and an abstract method `handleLayoutInflated` to be implemented by modules for handling layout inflation events. This class is intended to be subclassed by Xposed modules.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_13\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LayoutInflated extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_LayoutInflated();\n  ctor public XC_LayoutInflated(int);\n  method public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - findClass methods\nDESCRIPTION: These methods define utilities for finding classes using their name and a class loader. This is necessary for hooking and modifying the behavior of classes within other applications.  It allows the Xposed module to locate a specific class for further operations such as method hooking or field access.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_12\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Class<?> findClass(java.lang.String, java.lang.ClassLoader);\n```\n\n----------------------------------------\n\nTITLE: Defining XposedHelpers Reflection Utilities in Java\nDESCRIPTION: Declares a comprehensive set of static helper methods within the `XposedHelpers` class to simplify Java reflection tasks, commonly needed in Xposed modules. Includes methods for finding classes, constructors, methods, and fields; calling static and instance methods; getting and setting field values (including static and instance, primitive and object types); creating new instances; managing additional fields associated with objects/classes; and hooking methods/constructors directly.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_13\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static byte[] assetAsByteArray(android.content.res.Resources, java.lang.String) throws java.io.IOException;\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\nmethod public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookConstructor(java.lang.Class<?>, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookConstructor(java.lang.String, java.lang.ClassLoader, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Class<?> findClass(java.lang.String, java.lang.ClassLoader);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object[]);\nmethod public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.String, java.lang.ClassLoader, java.lang.Object...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Field findField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.reflect.Field findFirstFieldByExactType(java.lang.Class<?>, java.lang.Class<?>);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object[]);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Method[] findMethodsByExactParameters(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.Object getAdditionalInstanceField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object getAdditionalStaticField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object getAdditionalStaticField(java.lang.Class<?>, java.lang.String);\nmethod public static boolean getBooleanField(java.lang.Object, java.lang.String);\nmethod public static byte getByteField(java.lang.Object, java.lang.String);\nmethod public static char getCharField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Class<?>[] getClassesAsArray(java.lang.Class<?>...);\nmethod public static double getDoubleField(java.lang.Object, java.lang.String);\nmethod public static float getFloatField(java.lang.Object, java.lang.String);\nmethod public static int getIntField(java.lang.Object, java.lang.String);\nmethod public static long getLongField(java.lang.Object, java.lang.String);\nmethod public static java.lang.String getMD5Sum(java.lang.String) throws java.io.IOException;\nmethod public static java.lang.Object getObjectField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Class<?>[] getParameterTypes(java.lang.Object...);\nmethod public static short getShortField(java.lang.Object, java.lang.String);\nmethod public static boolean getStaticBooleanField(java.lang.Class<?>, java.lang.String);\nmethod public static byte getStaticByteField(java.lang.Class<?>, java.lang.String);\nmethod public static char getStaticCharField(java.lang.Class<?>, java.lang.String);\nmethod public static double getStaticDoubleField(java.lang.Class<?>, java.lang.String);\nmethod public static float getStaticFloatField(java.lang.Class<?>, java.lang.String);\nmethod public static int getStaticIntField(java.lang.Class<?>, java.lang.String);\nmethod public static long getStaticLongField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.Object getStaticObjectField(java.lang.Class<?>, java.lang.String);\nmethod public static short getStaticShortField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.Object getSurroundingThis(java.lang.Object);\nmethod public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object...);\nmethod public static java.lang.Object removeAdditionalInstanceField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object removeAdditionalStaticField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object removeAdditionalStaticField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.Object setAdditionalInstanceField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static java.lang.Object setAdditionalStaticField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static java.lang.Object setAdditionalStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object);\nmethod public static void setBooleanField(java.lang.Object, java.lang.String, boolean);\nmethod public static void setByteField(java.lang.Object, java.lang.String, byte);\nmethod public static void setCharField(java.lang.Object, java.lang.String, char);\nmethod public static void setDoubleField(java.lang.Object, java.lang.String, double);\nmethod public static void setFloatField(java.lang.Object, java.lang.String, float);\nmethod public static void setIntField(java.lang.Object, java.lang.String, int);\nmethod public static void setLongField(java.lang.Object, java.lang.String, long);\nmethod public static void setObjectField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static void setShortField(java.lang.Object, java.lang.String, short);\nmethod public static void setStaticBooleanField(java.lang.Class<?>, java.lang.String, boolean);\nmethod public static void setStaticByteField(java.lang.Class<?>, java.lang.String, byte);\nmethod public static void setStaticCharField(java.lang.Class<?>, java.lang.String, char);\nmethod public static void setStaticDoubleField(java.lang.Class<?>, java.lang.String, double);\nmethod public static void setStaticFloatField(java.lang.Class<?>, java.lang.String, float);\nmethod public static void setStaticIntField(java.lang.Class<?>, java.lang.String, int);\nmethod public static void setStaticLongField(java.lang.Class<?>, java.lang.String, long);\nmethod public static void setStaticObjectField(java.lang.Class<?>, java.lang.String, java.lang.Object);\nmethod public static void setStaticShortField(java.lang.Class<?>, java.lang.String, short);\n```\n\n----------------------------------------\n\nTITLE: Unhooking Methods in XposedBridge\nDESCRIPTION: Defines methods for unhooking previously hooked methods. These methods take different parameters depending on the type of hook to remove, like package resources or method hooks using reflection. The `unhook` methods are used to remove hooks previously established, allowing for dynamic modification of Android application behavior.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void unhookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n    method public static void unhookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n    method public static void unhookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n```\n\n----------------------------------------\n\nTITLE: Defining AndroidAppHelper Class\nDESCRIPTION: Defines the `AndroidAppHelper` class, which provides static methods for accessing information about the current application, such as its name, package name, and shared preferences. It allows Xposed modules to obtain runtime information about the target application.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage android.app {\n\n  public final class AndroidAppHelper {\n    method public static android.app.Application currentApplication();\n    method public static android.content.pm.ApplicationInfo currentApplicationInfo();\n    method public static java.lang.String currentPackageName();\n    method public static java.lang.String currentProcessName();\n    method public static deprecated android.content.SharedPreferences getDefaultSharedPreferencesForPackage(java.lang.String);\n    method public static deprecated android.content.SharedPreferences getSharedPreferencesForPackage(java.lang.String, java.lang.String, int);\n    method public static deprecated void reloadSharedPreferencesIfNeeded(android.content.SharedPreferences);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Hook Interfaces in Java\nDESCRIPTION: Defines several core interfaces within the `de.robv.android.xposed` package used for hooking specific Android initialization phases. `IXposedHookInitPackageResources` allows modification during resource initialization, `IXposedHookLoadPackage` hooks the loading of an app package, and `IXposedHookZygoteInit` allows code execution during the Zygote process startup.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookInitPackageResources {\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookLoadPackage {\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookZygoteInit {\n    method public abstract void initZygote(de.robv.android.xposed.IXposedHookZygoteInit.StartupParam) throws java.lang.Throwable;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Zygote Init Hook Interface (Java)\nDESCRIPTION: Defines the `IXposedHookZygoteInit` interface. Modules implement `initZygote` to execute code very early during the Android system startup (Zygote process initialization). It receives the module path via the nested `StartupParam` class and allows for system-wide modifications.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookZygoteInit {\n    method public abstract void initZygote(de.robv.android.xposed.IXposedHookZygoteInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookZygoteInit.StartupParam {\n    field public java.lang.String modulePath;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Providing Android Application Context Helpers with Java\nDESCRIPTION: Defines the AndroidAppHelper final class, offering static methods to access the current Application, ApplicationInfo, package name, process name, and shared preferences for a package. Dependencies include the Android platform and XposedBridge integration. Inputs are contextually the running application, and outputs include Application instances, package names, and SharedPreferences objects. Some methods are marked deprecated and may be replaced in future versions.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic final class AndroidAppHelper {\n  public static android.app.Application currentApplication();\n  public static android.content.pm.ApplicationInfo currentApplicationInfo();\n  public static java.lang.String currentPackageName();\n  public static java.lang.String currentProcessName();\n  @Deprecated public static android.content.SharedPreferences getDefaultSharedPreferencesForPackage(java.lang.String pkg);\n  @Deprecated public static android.content.SharedPreferences getSharedPreferencesForPackage(java.lang.String pkg, java.lang.String prefName, int mode);\n  @Deprecated public static void reloadSharedPreferencesIfNeeded(android.content.SharedPreferences prefs);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AndroidAppHelper Class (Java API)\nDESCRIPTION: Defines the final `AndroidAppHelper` class within the `android.app` package. This class provides static utility methods to retrieve the current application context (`currentApplication`), application info (`currentApplicationInfo`), package name (`currentPackageName`), process name (`currentProcessName`), and deprecated methods for accessing SharedPreferences.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage android.app {\n\n  public final class AndroidAppHelper {\n    method public static android.app.Application currentApplication();\n    method public static android.content.pm.ApplicationInfo currentApplicationInfo();\n    method public static java.lang.String currentPackageName();\n    method public static java.lang.String currentProcessName();\n    method public static deprecated android.content.SharedPreferences getDefaultSharedPreferencesForPackage(java.lang.String);\n    method public static deprecated android.content.SharedPreferences getSharedPreferencesForPackage(java.lang.String, java.lang.String, int);\n    method public static deprecated void reloadSharedPreferencesIfNeeded(android.content.SharedPreferences);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Hooking Methods in XposedHelpers\nDESCRIPTION: These methods hook methods within the target application, enabling modification of their behavior.  `findAndHookMethod` allows specifying the class, method name and hook.  This provides a way to intercept and alter existing method calls, providing a way to dynamically patch apps.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n    method public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\n```\n\n----------------------------------------\n\nTITLE: Implementing Abstract Class XCallback.Param for Passing Callback Parameters in Java\nDESCRIPTION: This abstract static class XCallback.Param provides mechanisms to attach and retrieve additional information in the form of key-value pairs associated with a callback parameter. It features deprecated protected constructor, and two methods: getObjectExtra to retrieve an object by key, and setObjectExtra to store an object by key. This facilitates extensible passing of data within callback parameters.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_000.txt#_snippet_11\n\nLANGUAGE: java\nCODE:\n```\npublic static abstract class XCallback.Param {\n    ctor protected deprecated XCallback.Param();\n    method public java.lang.Object getObjectExtra(java.lang.String);\n    method public void setObjectExtra(java.lang.String, java.lang.Object);\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining IXposedHookInitPackageResources Interface (Java API)\nDESCRIPTION: Defines the abstract interface `IXposedHookInitPackageResources` within `de.robv.android.xposed`. Implementations define the `handleInitPackageResources` method to hook the initialization of package resources.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookInitPackageResources {\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodHook.Unhook Class (Java API)\nDESCRIPTION: Defines the inner class `XC_MethodHook.Unhook` implementing `IXUnhook` within `de.robv.android.xposed`. An instance of this class represents an active method hook and provides the `unhook` method to remove it. It also allows retrieving the original callback and the hooked method.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_16\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public class XC_MethodHook.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.XC_MethodHook getCallback();\n    method public java.lang.reflect.Member getHookedMethod();\n    method public void unhook();\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Callbacks for Resource Initialization in Xposed\nDESCRIPTION: Defines an abstract class `XC_InitPackageResources` and a nested class `InitPackageResourcesParam`. This provides functionality for modifying resources during the initialization phase of an app.  `InitPackageResourcesParam` carries details needed to modify the app's resources.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_14\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_InitPackageResources extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_InitPackageResources();\n    ctor public XC_InitPackageResources(int);\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_InitPackageResources.InitPackageResourcesParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    field public java.lang.String packageName;\n    field public android.content.res.XResources res;\n  }\n```\n\n----------------------------------------\n\nTITLE: Xposed Method Replacement Class (Java)\nDESCRIPTION: An extension of `XC_MethodHook` specifically designed to completely replace the implementation of a hooked method. It provides an abstract `replaceHookedMethod` to define the new logic and static helpers like `returnConstant` for common replacement scenarios.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract class XC_MethodReplacement extends de.robv.android.xposed.XC_MethodHook {\n    ctor public XC_MethodReplacement();\n    ctor public XC_MethodReplacement(int);\n    method protected abstract java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(java.lang.Object);\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(int, java.lang.Object);\n    field public static final de.robv.android.xposed.XC_MethodReplacement DO_NOTHING;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Method Hooking Framework\nDESCRIPTION: This code defines the core classes for hooking methods in Xposed. `XC_MethodHook` is an abstract class for hooking methods, providing `beforeHookedMethod` and `afterHookedMethod` callbacks. `XC_MethodHook.MethodHookParam` holds the method's parameters and results. `XC_MethodHook.Unhook` allows unhooking methods, and `XC_MethodReplacement` extends `XC_MethodHook` for replacing methods.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_060.txt#_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\nctor public XC_MethodHook();\nctor public XC_MethodHook(int);\nmethod protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\nmethod protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public java.lang.Object getResult();\nmethod public java.lang.Object getResultOrThrowable() throws java.lang.Throwable;\nmethod public java.lang.Throwable getThrowable();\nmethod public boolean hasThrowable();\nmethod public void setResult(java.lang.Object);\nmethod public void setThrowable(java.lang.Throwable);\nfield public java.lang.Object[] args;\nfield public java.lang.reflect.Member method;\nfield public java.lang.Object thisObject;\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public de.robv.android.xposed.XC_MethodHook getCallback();\nmethod public java.lang.reflect.Member getHookedMethod();\nmethod public void unhook();\n```\n\nLANGUAGE: Java\nCODE:\n```\nctor public XC_MethodReplacement();\nctor public XC_MethodReplacement(int);\nmethod protected abstract java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\nmethod public static de.robv.android.xposed.XC_MethodReplacement returnConstant(java.lang.Object);\nmethod public static de.robv.android.xposed.XC_MethodReplacement returnConstant(int, java.lang.Object);\nfield public static final de.robv.android.xposed.XC_MethodReplacement DO_NOTHING;\n```\n\n----------------------------------------\n\nTITLE: Abstract BaseService and FileResult Classes for File Operations in Xposed - Java\nDESCRIPTION: This snippet defines the BaseService abstract class and FileResult utility class within the de.robv.android.xposed.services package. BaseService provides abstract and concrete methods to check file access permissions, existence, and retrieve file input streams, modification times, and sizes. It also exposes mode constants like F_OK, R_OK, W_OK, and X_OK for access checking. The FileResult class encapsulates file content bytes, modification time, file size, and an InputStream for flexible reading operations. These classes form the foundation for secure, abstracted file operations supporting Xposed services. All file I/O methods are declared to throw IOException, reflecting required error handling.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_19\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class BaseService {\n  method public abstract boolean checkFileAccess(java.lang.String, int);\n  method public boolean checkFileExists(java.lang.String);\n  method public java.io.InputStream getFileInputStream(java.lang.String) throws java.io.IOException;\n  method public de.robv.android.xposed.services.FileResult getFileInputStream(java.lang.String, long, long) throws java.io.IOException;\n  method public long getFileModificationTime(java.lang.String) throws java.io.IOException;\n  method public long getFileSize(java.lang.String) throws java.io.IOException;\n  method public boolean hasDirectFileAccess();\n  method public abstract byte[] readFile(java.lang.String) throws java.io.IOException;\n  method public abstract de.robv.android.xposed.services.FileResult readFile(java.lang.String, long, long) throws java.io.IOException;\n  method public abstract de.robv.android.xposed.services.FileResult readFile(java.lang.String, int, int, long, long) throws java.io.IOException;\n  method public abstract de.robv.android.xposed.services.FileResult statFile(java.lang.String) throws java.io.IOException;\n  field public static final int F_OK = 0; // 0x0\n  field public static final int R_OK = 4; // 0x4\n  field public static final int W_OK = 2; // 0x2\n  field public static final int X_OK = 1; // 0x1\n}\n\npublic final class FileResult {\n  field public final byte[] content;\n  field public final long mtime;\n  field public final long size;\n  field public final java.io.InputStream stream;\n}\n```\n\n----------------------------------------\n\nTITLE: XposedBridge Utility Methods\nDESCRIPTION: The `XposedBridge` class contains static utility methods for interacting with the Xposed framework. It includes methods for hooking methods, constructors, and package resources.  It provides functionalities to invoke original methods and log messages. Prerequisites: Requires an Xposed environment. Dependencies: `java.lang.reflect.Member`, `de.robv.android.xposed.XC_MethodHook`, `de.robv.android.xposed.callbacks.XC_InitPackageResources` etc. The output is various results on method hooks.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\n  public final class XposedBridge {\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?>, de.robv.android.xposed.XC_MethodHook);\n    method public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?>, java.lang.String, de.robv.android.xposed.XC_MethodHook);\n    method public static de.robv.android.xposed.callbacks.XC_InitPackageResources.Unhook hookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n    method public static de.robv.android.xposed.callbacks.XC_LoadPackage.Unhook hookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n    method public static de.robv.android.xposed.XC_MethodHook.Unhook hookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n    method public static java.lang.Object invokeOriginalMethod(java.lang.reflect.Member, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException, java.lang.NullPointerException;\n    method public static synchronized void log(java.lang.String);\n  }\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - findField method\nDESCRIPTION: This method allows the Xposed module to locate fields within a given class. It takes the class and the field name as parameters. This functionality is essential to obtain and modify the values of fields within other applications by their name.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_15\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Field findField(java.lang.Class<?>, java.lang.String);\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LayoutInflated Callback Interface in Java\nDESCRIPTION: Defines the abstract class XC_LayoutInflated, extending XCallback. Modules implement handleLayoutInflated to modify views after layout inflation. Includes inner classes LayoutInflatedParam containing layout details (XResources, ResourceNames, variant, View) and Unhook for removing the callback, which also provides the layout ID.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_12\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed.callbacks;\n\npublic abstract class XC_LayoutInflated extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_LayoutInflated();\n  ctor public XC_LayoutInflated(int);\n  method public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n}\n\npublic static final class XC_LayoutInflated.LayoutInflatedParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public android.content.res.XResources res;\n  field public android.content.res.XResources.ResourceNames resNames;\n  field public java.lang.String variant;\n  field public android.view.View view;\n}\n\npublic class XC_LayoutInflated.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n  method public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\n  method public int getId();\n  method public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - findAndHookMethod Overloads\nDESCRIPTION: These methods define overloads of the `findAndHookMethod` function. This is likely used to hook into existing methods of classes in other applications. Different overloads provide flexible ways to specify the target method by class name, class loader, and method signature. It uses the `XC_MethodHook.Unhook` class for managing hooks.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage.LoadPackageParam Class - Java\nDESCRIPTION: This static final class holds parameters passed to the handleLoadPackage method of an XC_LoadPackage callback. It provides essential information about the loaded package, such as its name, process, application info, and class loader.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_20\n\nLANGUAGE: Java\nCODE:\n```\n  public static final class XC_LoadPackage.LoadPackageParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    field public android.content.pm.ApplicationInfo appInfo;\n    field public java.lang.ClassLoader classLoader;\n    field public boolean isFirstApplication;\n    field public java.lang.String packageName;\n    field public java.lang.String processName;\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage.LoadPackageParam Class in Xposed API (Java)\nDESCRIPTION: Defines a static final nested class `LoadPackageParam` within `XC_LoadPackage`, extending `XCallback.Param`. Instances of this class are passed to the `handleLoadPackage` method, providing details about the package being loaded.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_22\n\nLANGUAGE: java\nCODE:\n```\npublic static final class XC_LoadPackage.LoadPackageParam extends de.robv.android.xposed.callbacks.XCallback.Param { }\n```\n\n----------------------------------------\n\nTITLE: Accessing Application Information in Xposed\nDESCRIPTION: This snippet shows methods used to access information about the current application such as application instance, application info, package name and process name within the Xposed environment. These are useful for module initialization and targeting specific applications or processes for hooking.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_060.txt#_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static android.app.Application currentApplication();\nmethod public static android.content.pm.ApplicationInfo currentApplicationInfo();\nmethod public static java.lang.String currentPackageName();\nmethod public static java.lang.String currentProcessName();\n```\n\n----------------------------------------\n\nTITLE: Defining XCallback Base Class and Param Inner Class (Java)\nDESCRIPTION: Defines the abstract base class `XCallback` for all Xposed callbacks, establishing priority constants (`PRIORITY_DEFAULT`, `PRIORITY_HIGHEST`, `PRIORITY_LOWEST`) and a `priority` field. It also defines the abstract static inner class `XCallback.Param` as a base for callback parameters, providing methods (`getExtra`, `getObjectExtra`, `setObjectExtra`) to manage associated data via an `android.os.Bundle`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_051.txt#_snippet_10\n\nLANGUAGE: java\nCODE:\n```\npublic abstract class XCallback {\n    ctor public deprecated XCallback();\n    field public static final int PRIORITY_DEFAULT = 50; // 0x32\n    field public static final int PRIORITY_HIGHEST = 10000; // 0x2710\n    field public static final int PRIORITY_LOWEST = -10000; // 0xffffd8f0\n    field public final int priority;\n  }\n\n  public static abstract class XCallback.Param {\n    ctor protected deprecated XCallback.Param();\n    method public synchronized android.os.Bundle getExtra();\n    method public java.lang.Object getObjectExtra(java.lang.String);\n    method public void setObjectExtra(java.lang.String, java.lang.Object);\n  }\n```\n\n----------------------------------------\n\nTITLE: Method Hooking Classes for Xposed Framework in Java\nDESCRIPTION: Classes for hooking methods in Android applications, including XC_MethodHook for intercepting method calls before and after execution, and XC_MethodReplacement for completely replacing method implementations.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_039.txt#_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n  public abstract class XC_MethodHook extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_MethodHook();\n    ctor public XC_MethodHook(int);\n    method protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_MethodHook.MethodHookParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    method public java.lang.Object getResult();\n    method public java.lang.Object getResultOrThrowable() throws java.lang.Throwable;\n    method public java.lang.Throwable getThrowable();\n    method public boolean hasThrowable();\n    method public void setResult(java.lang.Object);\n    method public void setThrowable(java.lang.Throwable);\n    field public java.lang.Object[] args;\n    field public java.lang.reflect.Member method;\n    field public java.lang.Object thisObject;\n  }\n\n  public class XC_MethodHook.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.XC_MethodHook getCallback();\n    method public java.lang.reflect.Member getHookedMethod();\n    method public void unhook();\n  }\n\n  public abstract class XC_MethodReplacement extends de.robv.android.xposed.XC_MethodHook {\n    ctor public XC_MethodReplacement();\n    ctor public XC_MethodReplacement(int);\n    method protected abstract java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(java.lang.Object);\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(int, java.lang.Object);\n    field public static final de.robv.android.xposed.XC_MethodReplacement DO_NOTHING;\n  }\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - findFirstFieldByExactType method\nDESCRIPTION: This method allows Xposed to identify fields by their exact type, searching within a class. This is helpful for quickly locating fields when the name may be unknown but the type is. It returns the first field matching the specified type.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_16\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Field findFirstFieldByExactType(java.lang.Class<?>, java.lang.Class<?>);\n```\n\n----------------------------------------\n\nTITLE: Defining Base XCallback.Param Class - Java\nDESCRIPTION: The base class for all parameter objects passed to Xposed callback methods. It provides methods to store and retrieve arbitrary extra data associated with the callback invocation using a Bundle or key-value pairs.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_23\n\nLANGUAGE: Java\nCODE:\n```\n  public static abstract class XCallback.Param {\n    ctor protected deprecated XCallback.Param();\n    method public synchronized android.os.Bundle getExtra();\n    method public java.lang.Object getObjectExtra(java.lang.String);\n    method public void setObjectExtra(java.lang.String, java.lang.Object);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XCallback Abstract Class in Java\nDESCRIPTION: The base abstract class for all Xposed framework callbacks. It defines a priority property that influences the order in which multiple callbacks for the same event are executed, along with standard priority constants.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_039.txt#_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XCallback {\n    ctor public deprecated XCallback();\n    field public static final int PRIORITY_DEFAULT = 50; // 0x32\n    field public static final int PRIORITY_HIGHEST = 10000; // 0x2710\n    field public static final int PRIORITY_LOWEST = -10000; // 0xffffd8f0\n    field public final int priority;\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining Package Load Callback Classes in Xposed - Java\nDESCRIPTION: This snippet defines abstract callback classes for handling Android package loading within the Xposed framework. XC_LoadPackage extends XCallback and implements the IXposedHookLoadPackage interface, serving as a base for package load event hooks. The nested LoadPackageParam class contains detailed parameters such as application info, class loader, package and process names, and a flag indicating the first application instance. Dependencies are on Android's package manager and Java class loading frameworks. Inputs provide context on the loading package enabling runtime hooking and modifications during app start.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_17\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LoadPackage extends de.robv.android.xposed.callbacks.XCallback implements de.robv.android.xposed.IXposedHookLoadPackage {\n}\n\npublic static final class XC_LoadPackage.LoadPackageParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public android.content.pm.ApplicationInfo appInfo;\n  field public java.lang.ClassLoader classLoader;\n  field public boolean isFirstApplication;\n  field public java.lang.String packageName;\n  field public java.lang.String processName;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage Callback Interface in Java\nDESCRIPTION: Defines the abstract class XC_LoadPackage, extending XCallback. Modules implement handleLoadPackage to perform actions when an application package is loaded. Includes inner classes LoadPackageParam providing package details (ApplicationInfo, ClassLoader, isFirstApplication, packageName, processName) and Unhook for removing the callback.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_13\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed.callbacks;\n\npublic abstract class XC_LoadPackage extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_LoadPackage();\n  ctor public XC_LoadPackage(int);\n  method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n}\n\npublic static final class XC_LoadPackage.LoadPackageParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public android.content.pm.ApplicationInfo appInfo;\n  field public java.lang.ClassLoader classLoader;\n  field public boolean isFirstApplication;\n  field public java.lang.String packageName;\n  field public java.lang.String processName;\n}\n\npublic class XC_LoadPackage.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n  method public de.robv.android.xposed.callbacks.XC_LoadPackage getCallback();\n  method public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IXposedHook Interfaces in Java\nDESCRIPTION: Defines core interfaces within the `de.robv.android.xposed` package used by Xposed modules to hook into specific Android lifecycle events: `IXposedHookInitPackageResources` for resource initialization, `IXposedHookLoadPackage` for package loading, and `IXposedHookZygoteInit` for early Zygote process initialization.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_7\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookInitPackageResources {\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookLoadPackage {\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookZygoteInit {\n    method public abstract void initZygote(de.robv.android.xposed.IXposedHookZygoteInit.StartupParam) throws java.lang.Throwable;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Android Application Helper Class (Java)\nDESCRIPTION: Provides static utility methods to access information about the current Android application context, such as the Application object, ApplicationInfo, package name, process name, and methods for accessing SharedPreferences (though some are deprecated).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage android.app {\n\n  public final class AndroidAppHelper {\n    method public static android.app.Application currentApplication();\n    method public static android.content.pm.ApplicationInfo currentApplicationInfo();\n    method public static java.lang.String currentPackageName();\n    method public static java.lang.String currentProcessName();\n    method public static deprecated android.content.SharedPreferences getDefaultSharedPreferencesForPackage(java.lang.String);\n    method public static deprecated android.content.SharedPreferences getSharedPreferencesForPackage(java.lang.String, java.lang.String, int);\n    method public static deprecated void reloadSharedPreferencesIfNeeded(android.content.SharedPreferences);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - get...Field Methods\nDESCRIPTION: These methods are used to retrieve field values from objects, with methods for different primitive data types (`boolean`, `byte`, `char`, `double`, `float`, `int`, `long`, `short`, `Object`). These functions enable Xposed modules to safely access and retrieve the contents of fields within target applications.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_21\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static boolean getBooleanField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static byte getByteField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static char getCharField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static double getDoubleField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static float getFloatField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static int getIntField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static long getLongField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.String getMD5Sum(java.lang.String) throws java.io.IOException;\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object getObjectField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Class<?>[] getParameterTypes(java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static short getShortField(java.lang.Object, java.lang.String);\n```\n\n----------------------------------------\n\nTITLE: Defining XCallback.Param Abstract Class in Java\nDESCRIPTION: An abstract base class representing the parameters passed to an `XCallback`. It provides generic methods for storing and retrieving extra data associated with the callback execution, allowing modules to pass custom information.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_039.txt#_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\npublic static abstract class XCallback.Param {\n    ctor protected deprecated XCallback.Param();\n    method public synchronized android.os.Bundle getExtra();\n    method public java.lang.Object getObjectExtra(java.lang.String);\n    method public void setObjectExtra(java.lang.String, java.lang.Object);\n  }\n```\n\n----------------------------------------\n\nTITLE: Manipulating Resources in Xposed\nDESCRIPTION: This code segment shows how Xposed modules can manipulate resources.  It defines classes like `XModuleResources`, `XResForwarder`, and `XResources` for resource manipulation, including methods for creating instances, forwarding resources, adding resources, and replacing resources in a system-wide manner. It also includes helper classes like `DimensionReplacement` and `DrawableLoader` for specialized resource modifications.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_053.txt#_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public class XModuleResources extends android.content.res.Resources {\n    method public static android.content.res.XModuleResources createInstance(java.lang.String, android.content.res.XResources);\n    method public android.content.res.XResForwarder fwd(int);\n  }\n\n  public class XResForwarder {\n    ctor public XResForwarder(android.content.res.Resources, int);\n    method public int getId();\n    method public android.content.res.Resources getResources();\n  }\n\n  public class XResources extends android.content.res.Resources {\n    method public int addResource(android.content.res.Resources, int);\n    method public static int getFakeResId(java.lang.String);\n    method public static int getFakeResId(android.content.res.Resources, int);\n    method public java.lang.String getPackageName();\n    method public static java.lang.String getPackageNameDuringConstruction();\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public void setReplacement(int, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(int, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void unhookLayout(java.lang.String, int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n  }\n\n  public static class XResources.DimensionReplacement {\n    ctor public XResources.DimensionReplacement(float, int);\n    method public float getDimension(android.util.DisplayMetrics);\n    method public int getDimensionPixelOffset(android.util.DisplayMetrics);\n    method public int getDimensionPixelSize(android.util.DisplayMetrics);\n  }\n\n  public static abstract class XResources.DrawableLoader {\n    ctor public XResources.DrawableLoader();\n    method public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.XResources, int) throws java.lang.Throwable;\n    method public android.graphics.drawable.Drawable newDrawableForDensity(android.content.res.XResources, int, int) throws java.lang.Throwable;\n  }\n\n  public static class XResources.ResourceNames {\n    method public boolean equals(java.lang.String, java.lang.String, java.lang.String, int);\n    field public final java.lang.String fullName;\n    field public final int id;\n    field public final int id;\n    field public final java.lang.String name;\n    field public final java.lang.String pkg;\n    field public final java.lang.String type;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Base Xposed Callback Class and Parameter Container - Java\nDESCRIPTION: This snippet provides foundational classes for callback management in the Xposed framework. XCallback defines priorities for hook execution and holds a priority value to influence callback ordering. The nested XCallback.Param class offers synchronous access to additional metadata through Android Bundles and supports storing and retrieving custom objects by key. These classes are prerequisites for implementing specific callbacks and managing related extra information.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_18\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XCallback {\n  ctor public deprecated XCallback();\n  field public static final int PRIORITY_DEFAULT = 50; // 0x32\n  field public static final int PRIORITY_HIGHEST = 10000; // 0x2710\n  field public static final int PRIORITY_LOWEST = -10000; // 0xffffd8f0\n  field public final int priority;\n}\n\npublic static abstract class XCallback.Param {\n  ctor protected deprecated XCallback.Param();\n  method public synchronized android.os.Bundle getExtra();\n  method public java.lang.Object getObjectExtra(java.lang.String);\n  method public void setObjectExtra(java.lang.String, java.lang.Object);\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Current Application Info in Android\nDESCRIPTION: The `AndroidAppHelper` class provides utility methods to access information about the currently running Android application. Specifically, `currentApplicationInfo()` returns the `ApplicationInfo` object. This can be used to retrieve package name, application label, and other related details about the current application. It is useful when developing Xposed modules that need to operate based on the context of the running application.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_051.txt#_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static android.content.pm.ApplicationInfo currentApplicationInfo();\n```\n\n----------------------------------------\n\nTITLE: Defining Layout Inflation Callback Classes in Xposed - Java\nDESCRIPTION: This snippet contains abstract classes and supporting structures to handle the layout inflation event within the Xposed framework. XC_LayoutInflated is an abstract callback class requiring implementation of the handleLayoutInflated method, which provides contextual information about the inflated view via the nested LayoutInflatedParam class. The LayoutInflatedParam encapsulates resources, variant, and the inflated view object. The Unhook class allows deregistering the callback. Dependencies include the Xposed callback package and Android content and view frameworks. Inputs include context and inflated views; outputs are controlled via callback execution. This structure enables hooking UI inflation in Android apps to alter UI behavior dynamically.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_16\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LayoutInflated extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_LayoutInflated();\n  ctor public XC_LayoutInflated(int);\n  method public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n}\n\npublic static final class XC_LayoutInflated.LayoutInflatedParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public android.content.res.XResources res;\n  field public android.content.res.XResources.ResourceNames resNames;\n  field public java.lang.String variant;\n  field public android.view.View view;\n}\n\npublic class XC_LayoutInflated.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n  method public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\n  method public int getId();\n  method public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Xposed Resource Handling Classes (Java)\nDESCRIPTION: Defines classes for managing and modifying Android resources within the Xposed framework. `XModuleResources` represents resources within an Xposed module, `XResForwarder` aids in resource redirection, and `XResources` provides extensive capabilities for hooking layouts, replacing resources system-wide or per-package, and managing resource names and drawable loading.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage android.content.res {\n\n  public class XModuleResources extends android.content.res.Resources {\n    method public static android.content.res.XModuleResources createInstance(java.lang.String, android.content.res.XResources);\n    method public android.content.res.XResForwarder fwd(int);\n  }\n\n  public class XResForwarder {\n    ctor public XResForwarder(android.content.res.Resources, int);\n    method public int getId();\n    method public android.content.res.Resources getResources();\n  }\n\n  public class XResources extends android.content.res.Resources {\n    method public int addResource(android.content.res.Resources, int);\n    method public static int getFakeResId(java.lang.String);\n    method public static int getFakeResId(android.content.res.Resources, int);\n    method public java.lang.String getPackageName();\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public void setReplacement(int, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(int, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void unhookLayout(java.lang.String, int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n  }\n\n  public static abstract class XResources.DrawableLoader {\n    ctor public XResources.DrawableLoader();\n    method public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.XResources, int) throws java.lang.Throwable;\n    method public android.graphics.drawable.Drawable newDrawableForDensity(android.content.res.XResources, int, int) throws java.lang.Throwable;\n  }\n\n  public static class XResources.ResourceNames {\n    method public boolean equals(java.lang.String, java.lang.String, java.lang.String, int);\n    field public final java.lang.String fullName;\n    field public final int id;\n    field public final java.lang.String name;\n    field public final java.lang.String pkg;\n    field public final java.lang.String type;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodHook Abstract Class (Java API)\nDESCRIPTION: Defines the abstract class `XC_MethodHook` extending `XCallback` within `de.robv.android.xposed`. Subclasses implement `beforeHookedMethod` and/or `afterHookedMethod` to execute code before or after a hooked method runs. It provides constructors for default or specific priority.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_14\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract class XC_MethodHook extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_MethodHook();\n    ctor public XC_MethodHook(int);\n    method protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - getStatic...Field Methods\nDESCRIPTION: These methods are used to retrieve static field values, mirroring the `get...Field` methods. They cater to various primitive types and objects, allowing access to static fields of other applications. These are crucial for modifying and accessing static data.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_22\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static boolean getStaticBooleanField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static byte getStaticByteField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static char getStaticCharField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static double getStaticDoubleField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static float getStaticFloatField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static int getStaticIntField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static long getStaticLongField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object getStaticObjectField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static short getStaticShortField(java.lang.Class<?>, java.lang.String);\n```\n\n----------------------------------------\n\nTITLE: Defining XposedHelpers Methods\nDESCRIPTION: This snippet defines various methods within the `XposedHelpers` class. These methods provide utility functions for finding and hooking methods, calling methods, finding classes, and getting/setting fields. They are essential for manipulating the behavior of other applications.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_15\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static byte[] assetAsByteArray(android.content.res.Resources, java.lang.String) throws java.io.IOException;\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\nmethod public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Class<?> findClass(java.lang.String, java.lang.ClassLoader);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object[]);\nmethod public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Field findField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object[]);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Method[] findMethodsByExactParameters(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.Object getAdditionalInstanceField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object getAdditionalStaticField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object getAdditionalStaticField(java.lang.Class<?>, java.lang.String);\nmethod public static boolean getBooleanField(java.lang.Object, java.lang.String);\nmethod public static byte getByteField(java.lang.Object, java.lang.String);\nmethod public static char getCharField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Class<?>[] getClassesAsArray(java.lang.Class<?>...);\nmethod public static double getDoubleField(java.lang.Object, java.lang.String);\nmethod public static float getFloatField(java.lang.Object, java.lang.String);\nmethod public static int getIntField(java.lang.Object, java.lang.String);\nmethod public static long getLongField(java.lang.Object, java.lang.String);\nmethod public static java.lang.String getMD5Sum(java.lang.String) throws java.io.IOException;\nmethod public static java.lang.Object getObjectField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Class<?>[] getParameterTypes(java.lang.Object...);\nmethod public static short getShortField(java.lang.Object, java.lang.String);\nmethod public static boolean getStaticBooleanField(java.lang.Class<?>, java.lang.String);\nmethod public static byte getStaticByteField(java.lang.Class<?>, java.lang.String);\nmethod public static char getStaticCharField(java.lang.Class<?>, java.lang.String);\nmethod public static double getStaticDoubleField(java.lang.Class<?>, java.lang.String);\nmethod public static float getStaticFloatField(java.lang.Class<?>, java.lang.String);\nmethod public static int getStaticIntField(java.lang.Class<?>, java.lang.String);\nmethod public static long getStaticLongField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.Object getStaticObjectField(java.lang.Class<?>, java.lang.String);\nmethod public static short getStaticShortField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.Object getSurroundingThis(java.lang.Object);\nmethod public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object...);\nmethod public static java.lang.Object removeAdditionalInstanceField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object removeAdditionalStaticField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object removeAdditionalStaticField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.Object setAdditionalInstanceField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static java.lang.Object setAdditionalStaticField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static java.lang.Object setAdditionalStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object);\nmethod public static void setBooleanField(java.lang.Object, java.lang.String, boolean);\nmethod public static void setByteField(java.lang.Object, java.lang.String, byte);\nmethod public static void setCharField(java.lang.Object, java.lang.String, char);\nmethod public static void setDoubleField(java.lang.Object, java.lang.String, double);\nmethod public static void setFloatField(java.lang.Object, java.lang.String, float);\nmethod public static void setIntField(java.lang.Object, java.lang.String, int);\nmethod public static void setLongField(java.lang.Object, java.lang.String, long);\nmethod public static void setObjectField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static void setShortField(java.lang.Object, java.lang.String, short);\nmethod public static void setStaticBooleanField(java.lang.Class<?>, java.lang.String, boolean);\nmethod public static void setStaticByteField(java.lang.Class<?>, java.lang.String, byte);\nmethod public static void setStaticCharField(java.lang.Class<?>, java.lang.String, char);\nmethod public static void setStaticDoubleField(java.lang.Class<?>, java.lang.String, double);\nmethod public static void setStaticFloatField(java.lang.Class<?>, java.lang.String, float);\nmethod public static void setStaticIntField(java.lang.Class<?>, java.lang.String, int);\nmethod public static void setStaticLongField(java.lang.Class<?>, java.lang.String, long);\nmethod public static void setStaticObjectField(java.lang.Class<?>, java.lang.String, java.lang.Object);\nmethod public static void setStaticShortField(java.lang.Class<?>, java.lang.String, short);\n```\n\n----------------------------------------\n\nTITLE: Defining XC_InitPackageResources.InitPackageResourcesParam Fields (Java Signatures)\nDESCRIPTION: Defines the static final nested class `InitPackageResourcesParam` within `XC_InitPackageResources`. It extends `XCallback.Param` and encapsulates parameters passed to the `handleInitPackageResources` callback method, specifically the target `packageName` and the `XResources` object (`res`) allowing resource modification.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_14\n\nLANGUAGE: Java Signature\nCODE:\n```\nfield public java.lang.String packageName;\nfield public android.content.res.XResources res;\n```\n\n----------------------------------------\n\nTITLE: Managing Method Hooks, Replacements, and Unhooks with Java\nDESCRIPTION: Defines abstract and final classes for hooking, intercepting, and replacing Java methods at runtime using Xposed. XC_MethodHook/Replacement provides before/after hooks to inspect or alter method calls, while XC_MethodHook.Unhook allows removing a hook. Inputs are MethodHookParam (carrying method context and arguments), and outputs can be altered method results or side effects. Requires reflection and is tightly integrated with the Xposed runtime; improper use may affect app or system stability.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_MethodHook extends de.robv.android.xposed.callbacks.XCallback {\n  protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam param) throws java.lang.Throwable;\n  protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam param) throws java.lang.Throwable;\n}\n\npublic static final class XC_MethodHook.MethodHookParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  public java.lang.Object getResult();\n  public java.lang.Object getResultOrThrowable() throws java.lang.Throwable;\n  public java.lang.Throwable getThrowable();\n  public boolean hasThrowable();\n  public void setResult(java.lang.Object obj);\n  public void setThrowable(java.lang.Throwable throwable);\n  public java.lang.Object[] args;\n  public java.lang.reflect.Member method;\n  public java.lang.Object thisObject;\n}\n\npublic class XC_MethodHook.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n  public de.robv.android.xposed.XC_MethodHook getCallback();\n  public java.lang.reflect.Member getHookedMethod();\n  public void unhook();\n}\n\npublic abstract class XC_MethodReplacement extends de.robv.android.xposed.XC_MethodHook {\n  protected abstract java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam param) throws java.lang.Throwable;\n  public static de.robv.android.xposed.XC_MethodReplacement returnConstant(java.lang.Object constant);\n  public static de.robv.android.xposed.XC_MethodReplacement returnConstant(int priority, java.lang.Object constant);\n  public static final de.robv.android.xposed.XC_MethodReplacement DO_NOTHING;\n}\n\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Error Types - Java\nDESCRIPTION: Declares static final error subclasses extending java.lang.Error for specific Xposed related errors, including ClassNotFoundError and InvocationTargetError. These are used to represent specific exceptional conditions encountered during class loading or method invocation within the Xposed Framework.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_060.txt#_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XposedHelpers.ClassNotFoundError extends java.lang.Error {\n}\n\npublic static final class XposedHelpers.InvocationTargetError extends java.lang.Error {\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - getAdditional...Field Methods\nDESCRIPTION: These methods, `getAdditionalInstanceField`, `getAdditionalStaticField`, retrieve values from 'additional' fields in objects. Additional fields refer to fields added dynamically. These methods provide mechanisms for storing and retrieving data associated with instances and classes within the context of the Xposed module.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_20\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object getAdditionalInstanceField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object getAdditionalStaticField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object getAdditionalStaticField(java.lang.Class<?>, java.lang.String);\n```\n\n----------------------------------------\n\nTITLE: Overview of de.robv.android.xposedbridge methods and fields\nDESCRIPTION: Contains static methods and fields used for dynamic method hooking, unhooking, invocation, and logging within the Xposed framework. Key methods enable hooking methods, invoking original methods, logging messages or exceptions, and managing hooks for package resources.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook hookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object invokeOriginalMethod(java.lang.reflect.Member, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException, java.lang.NullPointerException;\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static synchronized void log(java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static synchronized void log(java.lang.Throwable);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void unhookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void unhookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void unhookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\n```\n\nLANGUAGE: Java\nCODE:\n```\nfield public static final java.lang.ClassLoader BOOTCLASSLOADER;\n```\n\nLANGUAGE: Java\nCODE:\n```\nfield public static int XPOSED_BRIDGE_VERSION;\n```\n\n----------------------------------------\n\nTITLE: Defining XResources Class and Nested Classes in Java\nDESCRIPTION: Defines the `XResources` class extending `android.content.res.Resources`, along with its nested classes `DimensionReplacement`, `DrawableLoader`, and `ResourceNames`. This class is central to Xposed's resource hooking capabilities, offering methods to add resources, hook layout inflation, replace resource values (system-wide or per-instance), and retrieve resource identifiers.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage android.content.res {\n\n  public class XResources extends android.content.res.Resources {\n    method public int addResource(android.content.res.Resources, int);\n    method public static int getFakeResId(java.lang.String);\n    method public static int getFakeResId(android.content.res.Resources, int);\n    method public java.lang.String getPackageName();\n    method public static java.lang.String getPackageNameDuringConstruction();\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public deprecated de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static deprecated de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public void setReplacement(int, java.lang.Object);\n    method public deprecated void setReplacement(java.lang.String, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(int, java.lang.Object);\n    method public static deprecated void setSystemWideReplacement(java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n  }\n\n  public static class XResources.DimensionReplacement {\n    ctor public XResources.DimensionReplacement(float, int);\n    method public float getDimension(android.util.DisplayMetrics);\n    method public int getDimensionPixelOffset(android.util.DisplayMetrics);\n    method public int getDimensionPixelSize(android.util.DisplayMetrics);\n  }\n\n  public static abstract class XResources.DrawableLoader {\n    ctor public XResources.DrawableLoader();\n    method public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.XResources, int) throws java.lang.Throwable;\n    method public android.graphics.drawable.Drawable newDrawableForDensity(android.content.res.XResources, int, int) throws java.lang.Throwable;\n  }\n\n  public static class XResources.ResourceNames {\n    method public boolean equals(java.lang.String, java.lang.String, java.lang.String, int);\n    field public final java.lang.String fullName;\n    field public final int id;\n    field public final java.lang.String name;\n    field public final java.lang.String pkg;\n    field public final java.lang.String type;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Package Resource Initialization in Xposed\nDESCRIPTION: The `hookInitPackageResources` method in `XposedBridge` provides a mechanism to hook the initialization of package resources. It accepts an instance of `XC_InitPackageResources`, allowing modules to modify resources during the initialization phase of a package. The return is an `XC_InitPackageResources.Unhook` used to remove the hook. It's essential for modules that require altering resource values.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_051.txt#_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static de.robv.android.xposed.callbacks.XC_InitPackageResources.Unhook hookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Command-Line Init Hook Interface (Java)\nDESCRIPTION: Defines the `IXposedHookCmdInit` interface in `de.robv.android.xposed`. Modules implement `initCmdApp` to execute code when a command-line application starts, receiving startup parameters (module path, start class name) via the nested `StartupParam` class.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookCmdInit {\n    method public abstract void initCmdApp(de.robv.android.xposed.IXposedHookCmdInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookCmdInit.StartupParam {\n    field public java.lang.String modulePath;\n    field public java.lang.String startClassName;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: XResources.DrawableLoader Class\nDESCRIPTION: The `DrawableLoader` class is an abstract base class for loading drawables in the Xposed framework.  Modules can extend it to provide custom drawable loading logic. The abstract `newDrawable` method must be implemented to create a new drawable instance. Dependencies:  `android.graphics.drawable.Drawable`. The output is the new drawables.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\n  public static abstract class XResources.DrawableLoader {\n    ctor public XResources.DrawableLoader();\n    method public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.XResources, int) throws java.lang.Throwable;\n    method public android.graphics.drawable.Drawable newDrawableForDensity(android.content.res.XResources, int, int) throws java.lang.Throwable;\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Package Resource Init Hook Interface (Java)\nDESCRIPTION: Defines the `IXposedHookInitPackageResources` interface. Modules implement `handleInitPackageResources` to modify resources (`InitPackageResourcesParam.res`, which is an instance of `XResources`) just after they are loaded for a specific package but before the package code starts executing.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookInitPackageResources {\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - Miscellaneous methods\nDESCRIPTION: This collection of methods encompasses a range of utilities. They include `getSurroundingThis`, `newInstance`, which is overloaded to create new instances of classes,  methods related to additional fields, and setter methods for various data types, both for instance and static fields. These functions are key in how the module interacts with Android applications.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_23\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object getSurroundingThis(java.lang.Object);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object removeAdditionalInstanceField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object removeAdditionalStaticField(java.lang.Object, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object removeAdditionalStaticField(java.lang.Class<?>, java.lang.String);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object setAdditionalInstanceField(java.lang.Object, java.lang.String, java.lang.Object);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object setAdditionalStaticField(java.lang.Object, java.lang.String, java.lang.Object);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object setAdditionalStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setBooleanField(java.lang.Object, java.lang.String, boolean);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setByteField(java.lang.Object, java.lang.String, byte);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setCharField(java.lang.Object, java.lang.String, char);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setDoubleField(java.lang.Object, java.lang.String, double);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setFloatField(java.lang.Object, java.lang.String, float);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setIntField(java.lang.Object, java.lang.String, int);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setLongField(java.lang.Object, java.lang.String, long);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setObjectField(java.lang.Object, java.lang.String, java.lang.Object);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setShortField(java.lang.Object, java.lang.String, short);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setStaticBooleanField(java.lang.Class<?>, java.lang.String, boolean);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setStaticByteField(java.lang.Class<?>, java.lang.String, byte);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setStaticCharField(java.lang.Class<?>, java.lang.String, char);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setStaticDoubleField(java.lang.Class<?>, java.lang.String, double);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setStaticFloatField(java.lang.Class<?>, java.lang.String, float);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setStaticIntField(java.lang.Class<?>, java.lang.String, int);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setStaticLongField(java.lang.Class<?>, java.lang.String, long);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setStaticObjectField(java.lang.Class<?>, java.lang.String, java.lang.Object);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static void setStaticShortField(java.lang.Class<?>, java.lang.String, short);\n```\n\n----------------------------------------\n\nTITLE: Defining XResources.DrawableLoader Abstract Class (Java API)\nDESCRIPTION: Defines the static abstract inner class `XResources.DrawableLoader` within `android.content.res`. Subclasses implement `newDrawable` to provide custom logic for loading drawable resources via `XResources`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public static abstract class XResources.DrawableLoader {\n    ctor public XResources.DrawableLoader();\n    method public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.XResources, int) throws java.lang.Throwable;\n    method public android.graphics.drawable.Drawable newDrawableForDensity(android.content.res.XResources, int, int) throws java.lang.Throwable;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XResources API in Java\nDESCRIPTION: Defines the `XResources` class within the `android.content.res` package, extending `android.content.res.Resources`. This is a core class for resource hooking and replacement in Xposed, providing methods to add resources, get fake resource IDs, hook layout inflation (`hookLayout`, `hookSystemWideLayout`), and replace resource values (`setReplacement`, `setSystemWideReplacement`).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage android.content.res {\n\n  public class XResources extends android.content.res.Resources {\n    method public int addResource(android.content.res.Resources, int);\n    method public static int getFakeResId(java.lang.String);\n    method public static int getFakeResId(android.content.res.Resources, int);\n    method public java.lang.String getPackageName();\n    method public static java.lang.String getPackageNameDuringConstruction();\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public deprecated de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static deprecated de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public void setReplacement(int, java.lang.Object);\n    method public deprecated void setReplacement(java.lang.String, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(int, java.lang.Object);\n    method public static deprecated void setSystemWideReplacement(java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Resource Forwarder Class (Java)\nDESCRIPTION: Defines the `XResForwarder` class in `android.content.res`. Holds a reference to a `Resources` object and a resource ID, likely used to redirect resource lookups within the Xposed resource handling mechanism provided by `XResources`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public class XResForwarder {\n    ctor public XResForwarder(android.content.res.Resources, int);\n    method public int getId();\n    method public android.content.res.Resources getResources();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Hooking all Methods with XposedBridge\nDESCRIPTION: The `hookAllMethods` method of `XposedBridge` allows hooking all methods with a specific name within a class. The method requires a class object, the method name, and an instance of `XC_MethodHook`. This enables developers to intercept a large number of methods at once. The return type is a `Set<XC_MethodHook.Unhook>` containing unhook objects that enable removal of the hook later.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_051.txt#_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllMethods(java.lang.Class<?>, java.lang.String, de.robv.android.xposed.XC_MethodHook);\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage Callback Class in Java\nDESCRIPTION: Defines an abstract callback class `XC_LoadPackage` extending `de.robv.android.xposed.callbacks.XCallback` and implementing `de.robv.android.xposed.IXposedHookLoadPackage`. This serves as the primary entry point for Xposed modules to hook into the loading process of Android packages.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_16\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LoadPackage extends de.robv.android.xposed.callbacks.XCallback implements de.robv.android.xposed.IXposedHookLoadPackage {\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SELinuxHelper API in Java\nDESCRIPTION: Defines the `SELinuxHelper` class within the `de.robv.android.xposed` package. This final class provides static utility methods for interacting with SELinux, allowing checks for its enabled/enforced status, retrieving the current context, and accessing the AppDataFileService.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_9\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class SELinuxHelper {\n    method public static de.robv.android.xposed.services.BaseService getAppDataFileService();\n    method public static java.lang.String getContext();\n    method public static boolean isSELinuxEnabled();\n    method public static boolean isSELinuxEnforced();\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Logging with XposedBridge\nDESCRIPTION: The `log` method in `XposedBridge` provides a mechanism for logging messages or exceptions from an Xposed module.  It allows developers to insert debugging output to the Xposed log, providing valuable information during development and debugging of Xposed modules. The method is synchronized to ensure thread safety. Input parameters can be `String` or `Throwable`. This is essential for understanding the execution flow and troubleshooting problems in Xposed modules.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_051.txt#_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static synchronized void log(java.lang.String);\nmethod public static synchronized void log(java.lang.Throwable);\n```\n\n----------------------------------------\n\nTITLE: Defining XposedHelpers.ClassNotFoundError Error (Java Signature)\nDESCRIPTION: Declares the static final nested error class `ClassNotFoundError` within `XposedHelpers`, extending `java.lang.Error`. This error is typically thrown by `XposedHelpers` methods when a requested class cannot be found using the specified class loader and name.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_10\n\nLANGUAGE: Java Signature\nCODE:\n```\npublic static final class XposedHelpers.ClassNotFoundError extends java.lang.Error {\n}\n```\n\n----------------------------------------\n\nTITLE: Resource Manipulation in Xposed\nDESCRIPTION: The `XModuleResources`, `XResForwarder`, and `XResources` classes are used to manipulate Android resources.  `XModuleResources` is a resource wrapper, while `XResForwarder` forwards resource requests.  `XResources` allows for adding resources, getting resource IDs, hooking layouts, and setting resource replacements. The `DimensionReplacement` class facilitates dimension value modification. The `XResources.DrawableLoader` and `XResources.ResourceNames` classes provide additional resource-related functionality.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_060.txt#_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static android.content.res.XModuleResources createInstance(java.lang.String, android.content.res.XResources);\nmethod public android.content.res.XResForwarder fwd(int);\n```\n\nLANGUAGE: Java\nCODE:\n```\nctor public XResForwarder(android.content.res.Resources, int);\nmethod public int getId();\nmethod public android.content.res.Resources getResources();\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public int addResource(android.content.res.Resources, int);\nmethod public static int getFakeResId(java.lang.String);\nmethod public static int getFakeResId(android.content.res.Resources, int);\nmethod public java.lang.String getPackageName();\nmethod public static java.lang.String getPackageNameDuringConstruction();\nmethod public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\nmethod public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\nmethod public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\nmethod public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\nmethod public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\nmethod public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\nmethod public void setReplacement(int, java.lang.Object);\nmethod public void setReplacement(java.lang.String, java.lang.Object);\nmethod public void setReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\nmethod public static void setSystemWideReplacement(int, java.lang.Object);\nmethod public static void setSystemWideReplacement(java.lang.String, java.lang.Object);\nmethod public static void setSystemWideReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\nmethod public static void unhookLayout(java.lang.String, int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n```\n\nLANGUAGE: Java\nCODE:\n```\nctor public XResources.DimensionReplacement(float, int);\nmethod public float getDimension(android.util.DisplayMetrics);\nmethod public int getDimensionPixelOffset(android.util.DisplayMetrics);\nmethod public int getDimensionPixelSize(android.util.DisplayMetrics);\n```\n\nLANGUAGE: Java\nCODE:\n```\nctor public XResources.DrawableLoader();\nmethod public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.XResources, int) throws java.lang.Throwable;\nmethod public android.graphics.drawable.Drawable newDrawableForDensity(android.content.res.XResources, int, int) throws java.lang.Throwable;\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public boolean equals(java.lang.String, java.lang.String, java.lang.String, int);\nfield public final java.lang.String fullName;\nfield public final int id;\nfield public final java.lang.String name;\nfield public final java.lang.String pkg;\nfield public final java.lang.String type;\n```\n\n----------------------------------------\n\nTITLE: XSharedPreferences for accessing module preferences in Java\nDESCRIPTION: The XSharedPreferences class implements the Android SharedPreferences interface for reading preference files from other packages. It provides methods for retrieving various types of preferences and supports making preference files world-readable.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_039.txt#_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\n  public final class XSharedPreferences implements android.content.SharedPreferences {\n    ctor public XSharedPreferences(java.io.File);\n    ctor public XSharedPreferences(java.lang.String);\n    ctor public XSharedPreferences(java.lang.String, java.lang.String);\n    method public boolean contains(java.lang.String);\n    method public deprecated android.content.SharedPreferences.Editor edit();\n    method public java.util.Map<java.lang.String, ?> getAll();\n    method public boolean getBoolean(java.lang.String, boolean);\n    method public float getFloat(java.lang.String, float);\n    method public int getInt(java.lang.String, int);\n    method public long getLong(java.lang.String, long);\n    method public java.lang.String getString(java.lang.String, java.lang.String);\n    method public java.util.Set<java.lang.String> getStringSet(java.lang.String, java.util.Set<java.lang.String>);\n    method public boolean makeWorldReadable();\n    method public deprecated void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n    method public void reload();\n    method public deprecated void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining XModuleResources and Related Classes\nDESCRIPTION: Defines the `XModuleResources`, `XResForwarder`, and `XResources` classes for managing and replacing application resources. It provides methods for creating resource instances, forwarding resource IDs, and hooking layouts within the application.  It includes methods for setting resource replacements, both system-wide and application-specific, enabling Xposed modules to modify the UI and other resources.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage android.content.res {\n\n  public class XModuleResources extends android.content.res.Resources {\n    method public static android.content.res.XModuleResources createInstance(java.lang.String, android.content.res.XResources);\n    method public android.content.res.XResForwarder fwd(int);\n  }\n\n  public class XResForwarder {\n    ctor public XResForwarder(android.content.res.Resources, int);\n    method public int getId();\n    method public android.content.res.Resources getResources();\n  }\n\n  public class XResources extends android.content.res.Resources {\n    method public int addResource(android.content.res.Resources, int);\n    method public static int getFakeResId(java.lang.String);\n    method public static int getFakeResId(android.content.res.Resources, int);\n    method public java.lang.String getPackageName();\n    method public static java.lang.String getPackageNameDuringConstruction();\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public deprecated de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static deprecated de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public void setReplacement(int, java.lang.Object);\n    method public deprecated void setReplacement(java.lang.String, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(int, java.lang.Object);\n    method public static deprecated void setSystemWideReplacement(java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n  }\n\n  public static class XResources.DimensionReplacement {\n    ctor public XResources.DimensionReplacement(float, int);\n    method public float getDimension(android.util.DisplayMetrics);\n    method public int getDimensionPixelOffset(android.util.DisplayMetrics);\n    method public int getDimensionPixelSize(android.util.DisplayMetrics);\n  }\n\n  public static abstract class XResources.DrawableLoader {\n    ctor public XResources.DrawableLoader();\n    method public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.XResources, int) throws java.lang.Throwable;\n    method public android.graphics.drawable.Drawable newDrawableForDensity(android.content.res.XResources, int, int) throws java.lang.Throwable;\n  }\n\n  public static class XResources.ResourceNames {\n    method public boolean equals(java.lang.String, java.lang.String, java.lang.String, int);\n    field public final java.lang.String fullName;\n    field public final int id;\n    field public final java.lang.String name;\n    field public final java.lang.String pkg;\n    field public final java.lang.String type;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XResources.DimensionReplacement API in Java\nDESCRIPTION: Defines the nested static class `XResources.DimensionReplacement` within `android.content.res.XResources`. This class is used as a replacement object for dimension resources, providing methods to calculate the dimension value based on display metrics.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage android.content.res {\n\n  public static class XResources.DimensionReplacement {\n    ctor public XResources.DimensionReplacement(float, int);\n    method public float getDimension(android.util.DisplayMetrics);\n    method public int getDimensionPixelOffset(android.util.DisplayMetrics);\n    method public int getDimensionPixelSize(android.util.DisplayMetrics);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IXposedHookZygoteInit.StartupParam Class in Java\nDESCRIPTION: Defines the nested `StartupParam` class within `IXposedHookZygoteInit`. This class provides parameters to the `initZygote` hook method, including the path to the Xposed module and a boolean indicating if the system server is being started.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public static final class IXposedHookZygoteInit.StartupParam {\n    field public java.lang.String modulePath;\n    field public boolean startsSystemServer;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Extending and Forwarding Android Resources with Java\nDESCRIPTION: Implements XModuleResources, XResForwarder, and XResources classes to allow dynamic creation, forwarding, interception, and replacement of Android resources at runtime. Key features include resource ID forwarding, replacement, and hooking into layout inflation events. Dependencies are Android's Resources framework, Xposed callbacks, and proper resource IDs. Inputs often involve resource package names, IDs, and callback handlers; outputs are modified or wrapped Resources. Resource replacement and hooking require knowledge of resource management limitations.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npublic class XModuleResources extends android.content.res.Resources {\n  public static XModuleResources createInstance(java.lang.String modulePath, android.content.res.XResources orig);\n  public XResForwarder fwd(int id);\n}\n\npublic class XResForwarder {\n  public XResForwarder(android.content.res.Resources res, int id);\n  public int getId();\n  public android.content.res.Resources getResources();\n}\n\npublic class XResources extends android.content.res.Resources {\n  public int addResource(android.content.res.Resources res, int id);\n  public static int getFakeResId(java.lang.String fullName);\n  public static int getFakeResId(android.content.res.Resources res, int id);\n  public java.lang.String getPackageName();\n  public static java.lang.String getPackageNameDuringConstruction();\n  public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(int id, de.robv.android.xposed.callbacks.XC_LayoutInflated callback);\n  public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String pkg, de.robv.android.xposed.callbacks.XC_LayoutInflated callback);\n  public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String pkg, java.lang.String type, java.lang.String name, de.robv.android.xposed.callbacks.XC_LayoutInflated callback);\n  public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(int id, de.robv.android.xposed.callbacks.XC_LayoutInflated callback);\n  public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String pkg, de.robv.android.xposed.callbacks.XC_LayoutInflated callback);\n  public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String pkg, java.lang.String type, java.lang.String name, de.robv.android.xposed.callbacks.XC_LayoutInflated callback);\n  public void setReplacement(int id, java.lang.Object res);\n  public void setReplacement(java.lang.String fullName, java.lang.Object res);\n  public void setReplacement(java.lang.String pkg, java.lang.String type, java.lang.String name, java.lang.Object res);\n  public static void setSystemWideReplacement(int id, java.lang.Object res);\n  public static void setSystemWideReplacement(java.lang.String fullName, java.lang.Object res);\n  public static void setSystemWideReplacement(java.lang.String pkg, java.lang.String type, java.lang.String name, java.lang.Object res);\n  public static void unhookLayout(java.lang.String pkg, int id, de.robv.android.xposed.callbacks.XC_LayoutInflated callback);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodHook.Unhook API in Java\nDESCRIPTION: Defines the nested class `XC_MethodHook.Unhook` within `de.robv.android.xposed.XC_MethodHook`, implementing `IXUnhook`. Objects of this class represent an active method hook and provide a method (`unhook`) to remove it, along with accessors for the callback and the hooked method.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_12\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public class XC_MethodHook.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.XC_MethodHook getCallback();\n    method public java.lang.reflect.Member getHookedMethod();\n    method public void unhook();\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AndroidAppHelper Class in Java\nDESCRIPTION: Defines the `AndroidAppHelper` class within the `android.app` package. This final class provides static utility methods to retrieve information about the current application context, such as the Application object, ApplicationInfo, package name, process name, and access to SharedPreferences (though some methods are deprecated).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage android.app {\n\n  public final class AndroidAppHelper {\n    method public static android.app.Application currentApplication();\n    method public static android.content.pm.ApplicationInfo currentApplicationInfo();\n    method public static java.lang.String currentPackageName();\n    method public static java.lang.String currentProcessName();\n    method public static deprecated android.content.SharedPreferences getDefaultSharedPreferencesForPackage(java.lang.String);\n    method public static deprecated android.content.SharedPreferences getSharedPreferencesForPackage(java.lang.String, java.lang.String, int);\n    method public static deprecated void reloadSharedPreferencesIfNeeded(android.content.SharedPreferences);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: XC_LoadPackage.LoadPackageParam Class in Java\nDESCRIPTION: Parameter class for the XC_LoadPackage callback. It provides information about the loaded package, including its class loader, application info, and a flag indicating if this is the first application being loaded.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_000.txt#_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XC_LoadPackage.LoadPackageParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public android.content.pm.ApplicationInfo appInfo;\n  field public java.lang.ClassLoader classLoader;\n  field public boolean isFirstApplication;\n}\n```\n\n----------------------------------------\n\nTITLE: Unhook class for LayoutInflation in Xposed\nDESCRIPTION: This class provides unhook capabilities for layout inflation callbacks, enabling cleanup and removal of the hooks. It extends functionality related to layout changes for the specific context of `XC_LayoutInflated` and its callbacks.  This class allows to remove the callbacks.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_17\n\nLANGUAGE: Java\nCODE:\n```\npublic class XC_LayoutInflated.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\n    method public void unhook();\n  }\n```\n\n----------------------------------------\n\nTITLE: Xposed Method Hooking Classes (Java)\nDESCRIPTION: Provides the classes necessary for hooking Java methods. `XC_MethodHook` is the base class for defining code to run before and/or after a method executes. `XC_MethodHook.MethodHookParam` encapsulates the state of a hooked method call (arguments, `this` object, result/exception). `XC_MethodHook.Unhook` allows removing a previously applied hook.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract class XC_MethodHook extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_MethodHook();\n    ctor public XC_MethodHook(int);\n    method protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_MethodHook.MethodHookParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    method public java.lang.Object getResult();\n    method public java.lang.Object getResultOrThrowable() throws java.lang.Throwable;\n    method public java.lang.Throwable getThrowable();\n    method public boolean hasThrowable();\n    method public void setResult(java.lang.Object);\n    method public void setThrowable(java.lang.Throwable);\n    field public java.lang.Object[] args;\n    field public java.lang.reflect.Member method;\n    field public java.lang.Object thisObject;\n  }\n\n  public class XC_MethodHook.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.XC_MethodHook getCallback();\n    method public java.lang.reflect.Member getHookedMethod();\n    method public void unhook();\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Android App Helper Class API for Xposed Framework in Java\nDESCRIPTION: Defines utility methods to access the current application context, package information, and shared preferences. Contains deprecated methods for preferences handling, indicating this API has evolved over time.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage android.app {\n\n  public final class AndroidAppHelper {\n    method public static android.app.Application currentApplication();\n    method public static android.content.pm.ApplicationInfo currentApplicationInfo();\n    method public static java.lang.String currentPackageName();\n    method public static java.lang.String currentProcessName();\n    method public static deprecated android.content.SharedPreferences getDefaultSharedPreferencesForPackage(java.lang.String);\n    method public static deprecated android.content.SharedPreferences getSharedPreferencesForPackage(java.lang.String, java.lang.String, int);\n    method public static deprecated void reloadSharedPreferencesIfNeeded(android.content.SharedPreferences);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Hooking All Constructors in XposedBridge\nDESCRIPTION: The `hookAllConstructors` method within the `XposedBridge` class enables hooking all constructors of a given class. It takes the class object and an `XC_MethodHook` instance. The `XC_MethodHook` contains the hooks and can implement logic to modify the constructor's behavior. The method returns a set of `XC_MethodHook.Unhook` objects which are used to remove the hooks later if needed. This can be useful for intercepting object initialization.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_051.txt#_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.util.Set<de.robv.android.xposed.XC_MethodHook.Unhook> hookAllConstructors(java.lang.Class<?>, de.robv.android.xposed.XC_MethodHook);\n```\n\n----------------------------------------\n\nTITLE: XposedBridge Resource Classes API for Android resource modification in Java\nDESCRIPTION: The android.content.res package contains classes for modifying Android resources at runtime, including XModuleResources, XResForwarder, and XResources. These classes allow for resource replacement, hooking layouts, and managing custom resources.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_039.txt#_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public class XModuleResources extends android.content.res.Resources {\n    method public static android.content.res.XModuleResources createInstance(java.lang.String, android.content.res.XResources);\n    method public android.content.res.XResForwarder fwd(int);\n  }\n\n  public class XResForwarder {\n    ctor public XResForwarder(android.content.res.Resources, int);\n    method public int getId();\n    method public android.content.res.Resources getResources();\n  }\n\n  public class XResources extends android.content.res.Resources {\n    method public int addResource(android.content.res.Resources, int);\n    method public static int getFakeResId(java.lang.String);\n    method public static int getFakeResId(android.content.res.Resources, int);\n    method public java.lang.String getPackageName();\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public void setReplacement(int, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(int, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void unhookLayout(java.lang.String, int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n  }\n\n  public static abstract class XResources.DrawableLoader {\n    ctor public XResources.DrawableLoader();\n    method public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.XResources, int) throws java.lang.Throwable;\n    method public android.graphics.drawable.Drawable newDrawableForDensity(android.content.res.XResources, int, int) throws java.lang.Throwable;\n  }\n\n  public static class XResources.ResourceNames {\n    method public boolean equals(java.lang.String, java.lang.String, java.lang.String, int);\n    field public final java.lang.String fullName;\n    field public final int id;\n    field public final java.lang.String name;\n    field public final java.lang.String pkg;\n    field public final java.lang.String type;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XResources Class (Java API)\nDESCRIPTION: Defines the `XResources` class extending `android.content.res.Resources` within the `android.content.res` package. It provides methods for adding resources, getting fake resource IDs, hooking layout inflation (`hookLayout`, `hookSystemWideLayout`), and replacing resource values (`setReplacement`, `setSystemWideReplacement`).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public class XResources extends android.content.res.Resources {\n    method public int addResource(android.content.res.Resources, int);\n    method public static int getFakeResId(java.lang.String);\n    method public static int getFakeResId(android.content.res.Resources, int);\n    method public java.lang.String getPackageName();\n    method public static java.lang.String getPackageNameDuringConstruction();\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public void setReplacement(int, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(int, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void unhookLayout(java.lang.String, int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Documentation of XposedHelpers Exception Classes and Callback Interface\nDESCRIPTION: This snippet explains the purpose of custom error classes for class not found and invocation target errors, enhancing error handling during reflection and hooking operations. It also describes the IXUnhook interface used for managing hook lifecycle, including retrieving callbacks and unhooking procedures, which are essential for maintaining runtime modifications.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_12\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XposedHelpers.ClassNotFoundError extends java.lang.Error {\n}\n\npublic static final class XposedHelpers.InvocationTargetError extends java.lang.Error {\n}\n}\n\npackage de.robv.android.xposed.callbacks {\n\npublic abstract interface IXUnhook {\n  method public abstract T getCallback();\n  method public abstract void unhook();\n}\n\npublic abstract class XC_InitPackageResources extends de.robv.android.xposed.callbacks.XCallback implements de.robv.android.xposed.IXposedHookInitPackageResources {\n}\n\npublic static final class XC_InitPackageResources.InitPackageResourcesParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public java.lang.String packageName;\n  field public android.content.res.XResources res;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XSharedPreferences Class in Java\nDESCRIPTION: Defines the `XSharedPreferences` class implementing `android.content.SharedPreferences`. This class provides a way for Xposed modules to read SharedPreferences of other applications, potentially bypassing file permission restrictions by making the preference file world-readable. It includes standard SharedPreferences methods and specific methods for reloading and checking file changes.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_9\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XSharedPreferences implements android.content.SharedPreferences {\n    ctor public XSharedPreferences(java.io.File);\n    ctor public XSharedPreferences(java.lang.String);\n    ctor public XSharedPreferences(java.lang.String, java.lang.String);\n    method public boolean contains(java.lang.String);\n    method public deprecated android.content.SharedPreferences.Editor edit();\n    method public java.util.Map<java.lang.String, ?> getAll();\n    method public boolean getBoolean(java.lang.String, boolean);\n    method public java.io.File getFile();\n    method public float getFloat(java.lang.String, float);\n    method public int getInt(java.lang.String, int);\n    method public long getLong(java.lang.String, long);\n    method public java.lang.String getString(java.lang.String, java.lang.String);\n    method public java.util.Set<java.lang.String> getStringSet(java.lang.String, java.util.Set<java.lang.String>);\n    method public synchronized boolean hasFileChanged();\n    method public boolean makeWorldReadable();\n    method public deprecated void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n    method public synchronized void reload();\n    method public deprecated void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage.Unhook Class - Java\nDESCRIPTION: Represents an object returned when a hook is successfully registered for the package loading callback. Implementing the IXUnhook interface, it allows the hook to be later removed by calling its unhook() method.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_21\n\nLANGUAGE: Java\nCODE:\n```\n  public class XC_LoadPackage.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_LoadPackage getCallback();\n    method public void unhook();\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage.Unhook Class in Java\nDESCRIPTION: Represents an object returned when hooking into a package loading process via `XC_LoadPackage`. It provides a method to unhook the previously registered callback.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_039.txt#_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\npublic class XC_LoadPackage.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_LoadPackage getCallback();\n    method public void unhook();\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining XposedBridge Core Methods and Fields in Java\nDESCRIPTION: Declares core static methods and fields for the Xposed framework's bridge. Includes methods for logging, hooking/unhooking methods (`unhookMethod`) and package lifecycle events (`unhookInitPackageResources`, `unhookLoadPackage`), and constants like `BOOTCLASSLOADER` and `XPOSED_BRIDGE_VERSION`. These are fundamental entry points for Xposed module interaction.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_12\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static synchronized void log(java.lang.Throwable);\nmethod public static void unhookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\nmethod public static void unhookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\nmethod public static void unhookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\nfield public static final java.lang.ClassLoader BOOTCLASSLOADER;\nfield public static int XPOSED_BRIDGE_VERSION;\n```\n\n----------------------------------------\n\nTITLE: Xposed Shared Preferences Access (Java)\nDESCRIPTION: Implements the `SharedPreferences` interface to allow Xposed modules to read preference files of the hooked application, potentially bypassing standard Android security restrictions. It provides methods for getting various preference types, checking for keys, reloading data, and making the underlying file world-readable (use with caution). Note that listener registration/unregistration methods are deprecated.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XSharedPreferences implements android.content.SharedPreferences {\n    ctor public XSharedPreferences(java.io.File);\n    ctor public XSharedPreferences(java.lang.String);\n    ctor public XSharedPreferences(java.lang.String, java.lang.String);\n    method public boolean contains(java.lang.String);\n    method public deprecated android.content.SharedPreferences.Editor edit();\n    method public java.util.Map<java.lang.String, ?> getAll();\n    method public boolean getBoolean(java.lang.String, boolean);\n    method public float getFloat(java.lang.String, float);\n    method public int getInt(java.lang.String, int);\n    method public long getLong(java.lang.String, long);\n    method public java.lang.String getString(java.lang.String, java.lang.String);\n    method public java.util.Set<java.lang.String> getStringSet(java.lang.String, java.util.Set<java.lang.String>);\n    method public boolean makeWorldReadable();\n    method public deprecated void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n    method public void reload();\n    method public deprecated void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SELinuxHelper Class (Java API)\nDESCRIPTION: Defines the final `SELinuxHelper` class within `de.robv.android.xposed`. This class provides static utility methods for interacting with SELinux, such as checking its status (`isSELinuxEnabled`, `isSELinuxEnforced`), getting the current context (`getContext`), and accessing the app data file service.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_13\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class SELinuxHelper {\n    method public static de.robv.android.xposed.services.BaseService getAppDataFileService();\n    method public static java.lang.String getContext();\n    method public static boolean isSELinuxEnabled();\n    method public static boolean isSELinuxEnforced();\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XSharedPreferences Class (Java API)\nDESCRIPTION: Defines the final `XSharedPreferences` class implementing `android.content.SharedPreferences` within `de.robv.android.xposed`. It allows Xposed modules to read preferences from other packages, offering constructors based on file path or package name. It includes methods for retrieving various preference types, checking for changes (`hasFileChanged`, `reload`), and making the underlying file world-readable.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_18\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XSharedPreferences implements android.content.SharedPreferences {\n    ctor public XSharedPreferences(java.io.File);\n    ctor public XSharedPreferences(java.lang.String);\n    ctor public XSharedPreferences(java.lang.String, java.lang.String);\n    method public boolean contains(java.lang.String);\n    method public deprecated android.content.SharedPreferences.Editor edit();\n    method public java.util.Map<java.lang.String, ?> getAll();\n    method public boolean getBoolean(java.lang.String, boolean);\n    method public java.io.File getFile();\n    method public float getFloat(java.lang.String, float);\n    method public int getInt(java.lang.String, int);\n    method public long getLong(java.lang.String, long);\n    method public java.lang.String getString(java.lang.String, java.lang.String);\n    method public java.util.Set<java.lang.String> getStringSet(java.lang.String, java.util.Set<java.lang.String>);\n    method public synchronized boolean hasFileChanged();\n    method public boolean makeWorldReadable();\n    method public deprecated void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n    method public synchronized void reload();\n    method public deprecated void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Abstract Param Class for Callback Data in XposedBridge (Java)\nDESCRIPTION: This snippet introduces the abstract static XCallback.Param class, providing a (deprecated) constructor and methods for storing and retrieving extra key-value object pairs associated with a callback event's context. It is meant to be extended or used by Xposed modules to pass additional data with callback invocations. The class relies on Java object types and requires the Xposed framework. Inputs are string keys and corresponding objects; outputs are retrieval of those objects. Usage is limited to the Xposed callback infrastructure.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_27\n\nLANGUAGE: Java\nCODE:\n```\npublic static abstract class XCallback.Param {\n    ctor protected deprecated XCallback.Param();\n    method public java.lang.Object getObjectExtra(java.lang.String);\n    method public void setObjectExtra(java.lang.String, java.lang.Object);\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining Package Resource Initialization Callback in Java\nDESCRIPTION: This abstract callback interface defines the handleInitPackageResources method triggered during the initialization of package resources in the Xposed framework. The nested InitPackageResourcesParam class holds the package name and associated resource object, providing context to the callback. The Unhook class facilitates deregistration of these callbacks by implementing IXUnhook. This setup depends on the Xposed callback architecture and Android resource handling classes.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_20\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n}\n\npublic static final class XC_InitPackageResources.InitPackageResourcesParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    public java.lang.String packageName;\n    public android.content.res.XResources res;\n}\n\npublic class XC_InitPackageResources.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    public de.robv.android.xposed.callbacks.XC_InitPackageResources getCallback();\n    public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Bridge Version Field\nDESCRIPTION: This snippet defines a static integer field `XPOSED_BRIDGE_VERSION` within the `XposedBridge` class. This field likely stores the version number of the Xposed Bridge framework. It is declared as public and static to be accessible throughout the framework.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_14\n\nLANGUAGE: Java\nCODE:\n```\nfield public static int XPOSED_BRIDGE_VERSION;\n```\n\n----------------------------------------\n\nTITLE: Defining XSharedPreferences API in Java\nDESCRIPTION: Defines the `XSharedPreferences` class within the `de.robv.android.xposed` package, implementing `android.content.SharedPreferences`. This class allows Xposed modules to read SharedPreferences from other packages, automatically handling file permission changes and reloading when the underlying file is modified. Note that writing via `edit()` and change listeners are deprecated/unsupported.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_14\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XSharedPreferences implements android.content.SharedPreferences {\n    ctor public XSharedPreferences(java.io.File);\n    ctor public XSharedPreferences(java.lang.String);\n    ctor public XSharedPreferences(java.lang.String, java.lang.String);\n    method public boolean contains(java.lang.String);\n    method public deprecated android.content.SharedPreferences.Editor edit();\n    method public java.util.Map<java.lang.String, ?> getAll();\n    method public boolean getBoolean(java.lang.String, boolean);\n    method public java.io.File getFile();\n    method public float getFloat(java.lang.String, float);\n    method public int getInt(java.lang.String, int);\n    method public long getLong(java.lang.String, long);\n    method public java.lang.String getString(java.lang.String, java.lang.String);\n    method public java.util.Set<java.lang.String> getStringSet(java.lang.String, java.util.Set<java.lang.String>);\n    method public synchronized boolean hasFileChanged();\n    method public boolean makeWorldReadable();\n    method public deprecated void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n    method public synchronized void reload();\n    method public deprecated void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining getObjectExtra Method in Xposed XCallback.Param (Java)\nDESCRIPTION: Defines a public method `getObjectExtra` in the `XCallback.Param` class. It retrieves an object previously stored using `setObjectExtra` with the given key. Returns `null` if the key is not found or the value is not an Object.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_37\n\nLANGUAGE: java\nCODE:\n```\nmethod public java.lang.Object getObjectExtra(java.lang.String);\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodReplacement Class\nDESCRIPTION: Defines the `XC_MethodReplacement` class, a subclass of `XC_MethodHook`, which allows replacing a method's implementation entirely.  It provides static helper methods for returning a constant value as the replacement.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract class XC_MethodReplacement extends de.robv.android.xposed.XC_MethodHook {\n    ctor public XC_MethodReplacement();\n    ctor public XC_MethodReplacement(int);\n    method protected abstract java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(java.lang.Object);\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(int, java.lang.Object);\n    field public static final de.robv.android.xposed.XC_MethodReplacement DO_NOTHING;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XSharedPreferences Class\nDESCRIPTION: Defines the `XSharedPreferences` class, which provides access to shared preferences data for Xposed modules. It allows reading and writing shared preferences without directly accessing the application's context, providing a safer and more controlled way to modify application settings. It also includes a method to reload preferences when the file changes.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XSharedPreferences implements android.content.SharedPreferences {\n    ctor public XSharedPreferences(java.io.File);\n    ctor public XSharedPreferences(java.lang.String);\n    ctor public XSharedPreferences(java.lang.String, java.lang.String);\n    method public boolean contains(java.lang.String);\n    method public deprecated android.content.SharedPreferences.Editor edit();\n    method public java.util.Map<java.lang.String, ?> getAll();\n    method public boolean getBoolean(java.lang.String, boolean);\n    method public java.io.File getFile();\n    method public float getFloat(java.lang.String, float);\n    method public int getInt(java.lang.String, int);\n    method public long getLong(java.lang.String, long);\n    method public java.lang.String getString(java.lang.String, java.lang.String);\n    method public java.util.Set<java.lang.String> getStringSet(java.lang.String, java.util.Set<java.lang.String>);\n    method public synchronized boolean hasFileChanged();\n    method public boolean makeWorldReadable();\n    method public deprecated void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n    method public synchronized void reload();\n    method public deprecated void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: XC_InitPackageResources.InitPackageResourcesParam Class Definition\nDESCRIPTION: Defines the nested class `XC_InitPackageResources.InitPackageResourcesParam`, which extends `XCallback.Param`.  This class encapsulates the parameters passed to the `handleInitPackageResources` method of `XC_InitPackageResources`. It contains the package name and a reference to the `XResources` object which allows modifications to the resources.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_27\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XC_InitPackageResources.InitPackageResourcesParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public java.lang.String packageName;\n  field public android.content.res.XResources res;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FileResult Data Structure in Java\nDESCRIPTION: Defines the final class FileResult, used as a return type for file operations in BaseService. It encapsulates the result of a file operation, including the file content (as byte array or InputStream), its size, and modification time.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_16\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed.services;\n\npublic final class FileResult {\n  field public final byte[] content;\n  field public final long mtime;\n  field public final long size;\n  field public final java.io.InputStream stream;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Shared Preferences Access Class (Java)\nDESCRIPTION: Defines the `XSharedPreferences` final class implementing `android.content.SharedPreferences`. Provides read-only access to preferences of any package by reading the preference XML file directly, bypassing standard Android permissions checks. Includes a `reload` method to manually refresh data from the file.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_12\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XSharedPreferences implements android.content.SharedPreferences {\n    ctor public XSharedPreferences(java.io.File);\n    ctor public XSharedPreferences(java.lang.String);\n    ctor public XSharedPreferences(java.lang.String, java.lang.String);\n    method public boolean contains(java.lang.String);\n    method public deprecated android.content.SharedPreferences.Editor edit();\n    method public java.util.Map<java.lang.String, ?> getAll();\n    method public boolean getBoolean(java.lang.String, boolean);\n    method public float getFloat(java.lang.String, float);\n    method public int getInt(java.lang.String, int);\n    method public long getLong(java.lang.String, long);\n    method public java.lang.String getString(java.lang.String, java.lang.String);\n    method public java.util.Set<java.lang.String> getStringSet(java.lang.String, java.util.Set<java.lang.String>);\n    method public boolean makeWorldReadable();\n    method public deprecated void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n    method public void reload();\n    method public deprecated void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XCallback.Param Abstract Class in Java\nDESCRIPTION: Defines the static abstract class `XCallback.Param`, serving as a base for parameter objects passed to Xposed callbacks. It provides generic methods (`getObjectExtra`, `setObjectExtra`) to store and retrieve arbitrary data associated with the callback invocation using string keys.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_036.txt#_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n  public static abstract class XCallback.Param {\n    ctor protected deprecated XCallback.Param();\n    method public java.lang.Object getObjectExtra(java.lang.String);\n    method public void setObjectExtra(java.lang.String, java.lang.Object);\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining XC_InitPackageResources Callback Class (Java Signature)\nDESCRIPTION: Declares the abstract class `XC_InitPackageResources` in the `de.robv.android.xposed.callbacks` package. It extends `XCallback` and implements `IXposedHookInitPackageResources`, serving as the base class for Xposed modules to hook into the initialization process of an application's resources.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_13\n\nLANGUAGE: Java Signature\nCODE:\n```\npublic abstract class XC_InitPackageResources extends de.robv.android.xposed.callbacks.XCallback implements de.robv.android.xposed.IXposedHookInitPackageResources {\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XResForwarder API in Java\nDESCRIPTION: Defines the `XResForwarder` class within the `android.content.res` package. This helper class is used in conjunction with `XModuleResources` to forward resource requests, holding a reference to the original Resources object and the resource ID.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage android.content.res {\n\n  public class XResForwarder {\n    ctor public XResForwarder(android.content.res.Resources, int);\n    method public int getId();\n    method public android.content.res.Resources getResources();\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_InitPackageResources.InitPackageResourcesParam Class\nDESCRIPTION: This snippet defines the `XC_InitPackageResources.InitPackageResourcesParam` class, which extends `de.robv.android.xposed.callbacks.XCallback.Param`. It includes fields for package name and XResources instance.  This class encapsulates parameters passed to the `handleInitPackageResources` callback, containing information about the application being initialized.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_18\n\nLANGUAGE: Java\nCODE:\n```\nfield public java.lang.String packageName;\nfield public android.content.res.XResources res;\n```\n\n----------------------------------------\n\nTITLE: Defining Abstract BaseService Class for File Operations in Java\nDESCRIPTION: Defines an abstract `BaseService` class within the `de.robv.android.xposed.services` package, providing an interface for file system operations potentially requiring elevated privileges or inter-process communication within the Xposed framework. It declares abstract methods for checking access, reading file content/stats, and concrete methods for common operations like checking existence, getting streams, modification times, and sizes. Defines standard file access mode constants (F_OK, R_OK, W_OK, X_OK).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_20\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed.services {\n\n  public abstract class BaseService {\n    method public abstract boolean checkFileAccess(java.lang.String, int);\n    method public boolean checkFileExists(java.lang.String);\n    method public java.io.InputStream getFileInputStream(java.lang.String) throws java.io.IOException;\n    method public de.robv.android.xposed.services.FileResult getFileInputStream(java.lang.String, long, long) throws java.io.IOException;\n    method public long getFileModificationTime(java.lang.String) throws java.io.IOException;\n    method public long getFileSize(java.lang.String) throws java.io.IOException;\n    method public boolean hasDirectFileAccess();\n    method public abstract byte[] readFile(java.lang.String) throws java.io.IOException;\n    method public abstract de.robv.android.xposed.services.FileResult readFile(java.lang.String, long, long) throws java.io.IOException;\n    method public abstract de.robv.android.xposed.services.FileResult readFile(java.lang.String, int, int, long, long) throws java.io.IOException;\n    method public abstract de.robv.android.xposed.services.FileResult statFile(java.lang.String) throws java.io.IOException;\n    field public static final int F_OK = 0; // 0x0\n    field public static final int R_OK = 4; // 0x4\n    field public static final int W_OK = 2; // 0x2\n    field public static final int X_OK = 1; // 0x1\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing and Managing Shared Preferences with Java\nDESCRIPTION: The XSharedPreferences final class implements the SharedPreferences interface and provides additional methods to load preferences from files, check for changes, and enforce permissions. Inputs include file paths and optional preference names; outputs include typical preference primitives and file handles. World-readable flags are present for supporting system-wide preference sharing. Deprecated methods signal potential API changes in future releases.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\npublic final class XSharedPreferences implements android.content.SharedPreferences {\n  public XSharedPreferences(java.io.File file);\n  public XSharedPreferences(java.lang.String packageName);\n  public XSharedPreferences(java.lang.String packageName, java.lang.String prefName);\n  public boolean contains(java.lang.String key);\n  @Deprecated public android.content.SharedPreferences.Editor edit();\n  public java.util.Map<java.lang.String, ?> getAll();\n  public boolean getBoolean(java.lang.String key, boolean defValue);\n  public java.io.File getFile();\n  public float getFloat(java.lang.String key, float defValue);\n  public int getInt(java.lang.String key, int defValue);\n  public long getLong(java.lang.String key, long defValue);\n  public java.lang.String getString(java.lang.String key, java.lang.String defValue);\n  public java.util.Set<java.lang.String> getStringSet(java.lang.String key, java.util.Set<java.lang.String> defValues);\n  public synchronized boolean hasFileChanged();\n  public boolean makeWorldReadable();\n  @Deprecated public void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener listener);\n  public synchronized void reload();\n  @Deprecated public void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener listener);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Defining BaseService Class in Xposed API Services (Java)\nDESCRIPTION: Defines an abstract base class `BaseService` for Xposed services, particularly those providing file access utilities. Concrete implementations handle the actual interaction with the file system.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_39\n\nLANGUAGE: java\nCODE:\n```\npublic abstract class BaseService { }\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Replacements and Drawable Loaders with Java\nDESCRIPTION: Defines nested classes in XResources for resource value replacement and dynamic drawable loading. XResources.DimensionReplacement allows specifying alternate dimensions given display metrics, while XResources.DrawableLoader is an abstract class enabling the creation of custom drawables. These APIs rely on correct integration with Android's Resources and DisplayMetrics classes, and expect float/int values or resource IDs as parameters with Drawable results as output.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npublic static class XResources.DimensionReplacement {\n  public XResources.DimensionReplacement(float value, int unit);\n  public float getDimension(android.util.DisplayMetrics metrics);\n  public int getDimensionPixelOffset(android.util.DisplayMetrics metrics);\n  public int getDimensionPixelSize(android.util.DisplayMetrics metrics);\n}\n\npublic static abstract class XResources.DrawableLoader {\n  public XResources.DrawableLoader();\n  public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.XResources res, int id) throws java.lang.Throwable;\n  public android.graphics.drawable.Drawable newDrawableForDensity(android.content.res.XResources res, int id, int density) throws java.lang.Throwable;\n}\n\n```\n\n----------------------------------------\n\nTITLE: Implementing Layout Inflation Callback in Xposed with Java\nDESCRIPTION: This abstract class and associated inner classes define the callback structure to handle Android layout inflation events in the Xposed framework. The handleLayoutInflated method is called with a LayoutInflatedParam instance containing the resource references, variant identifier, and the inflated View. The Unhook class supports callback deregistration, provides the callback instance, and an identifier integer. This facilitates customized behavior during Android UI inflation.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_21\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LayoutInflated extends de.robv.android.xposed.callbacks.XCallback {\n    public XC_LayoutInflated();\n    public XC_LayoutInflated(int);\n    public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n}\n\npublic static final class XC_LayoutInflated.LayoutInflatedParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    public android.content.res.XResources res;\n    public android.content.res.XResources.ResourceNames resNames;\n    public java.lang.String variant;\n    public android.view.View view;\n}\n\npublic class XC_LayoutInflated.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\n    public int getId();\n    public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodHook.MethodHookParam API in Java\nDESCRIPTION: Defines the nested final class `XC_MethodHook.MethodHookParam` within `de.robv.android.xposed.XC_MethodHook`. This class encapsulates the state associated with a method hook invocation, providing access to the method arguments (`args`), the instance (`thisObject`), the Member being hooked (`method`), and allows getting/setting the result or throwable.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_11\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public static final class XC_MethodHook.MethodHookParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    method public java.lang.Object getResult();\n    method public java.lang.Object getResultOrThrowable() throws java.lang.Throwable;\n    method public java.lang.Throwable getThrowable();\n    method public boolean hasThrowable();\n    method public void setResult(java.lang.Object);\n    method public void setThrowable(java.lang.Throwable);\n    field public java.lang.Object[] args;\n    field public java.lang.reflect.Member method;\n    field public java.lang.Object thisObject;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: XC_LayoutInflated Abstract Class in Java\nDESCRIPTION: Abstract class for intercepting layout inflation events. It enables Xposed modules to modify layouts after they've been inflated but before they're used by the application.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_000.txt#_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LayoutInflated extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_LayoutInflated();\n  ctor public XC_LayoutInflated(int);\n  method public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n}\n```\n\n----------------------------------------\n\nTITLE: XResources.ResourceNames Class\nDESCRIPTION: The `ResourceNames` class encapsulates information about a resource, including its full name, ID, name, package, and type. This facilitates easier identification and manipulation of resources within an Xposed module. Prerequisites include an understanding of Android resource management. It outputs resource information.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\n  public static class XResources.ResourceNames {\n    method public boolean equals(java.lang.String, java.lang.String, java.lang.String, int);\n    field public final java.lang.String fullName;\n    field public final int id;\n    field public final java.lang.String name;\n    field public final java.lang.String pkg;\n    field public final java.lang.String type;\n  }\n```\n\n----------------------------------------\n\nTITLE: XC_LayoutInflated.LayoutInflatedParam Class Definition\nDESCRIPTION: Defines the nested class `XC_LayoutInflated.LayoutInflatedParam`, which extends `XCallback.Param`. This parameter class provides the context for `handleLayoutInflated`, containing the resource information, resource names, variant, and the inflated `View`. This is used to access the resources and modify the layout.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_30\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XC_LayoutInflated.LayoutInflatedParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public android.content.res.XResources res;\n  field public android.content.res.XResources.ResourceNames resNames;\n  field public java.lang.String variant;\n  field public android.view.View view;\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Method and Constructor Lookup\nDESCRIPTION: Methods for finding methods and constructors in target classes. These methods provide different strategies for finding methods, including exact matches and best matches based on parameter types.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_053.txt#_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorBestMatch(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Method findMethodExact(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\nmethod public static java.lang.reflect.Method[] findMethodsByExactParameters(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>...);\n```\n\n----------------------------------------\n\nTITLE: Defining LoadPackageParam Class Structure in Java\nDESCRIPTION: Defines the fields of the `LoadPackageParam` class, used to pass information to `XC_LoadPackage` callbacks in the Xposed framework. It contains details about the loaded application, including its ApplicationInfo, ClassLoader, package name, process name, and a flag indicating if it's the first application instance.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_036.txt#_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n  public static class LoadPackageParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    ctor public LoadPackageParam(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam);\n    field public android.content.pm.ApplicationInfo appInfo;\n    field public java.lang.ClassLoader classLoader;\n    field public boolean isFirstApplication;\n    field public java.lang.String packageName;\n    field public java.lang.String processName;\n  }\n```\n\n----------------------------------------\n\nTITLE: Xposed Hook Interfaces for Android application modification in Java\nDESCRIPTION: The de.robv.android.xposed package defines interfaces for different hooking points in the Android system, including hooks for Zygote initialization, package loading, resource initialization, and command-line app initialization.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_039.txt#_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookCmdInit {\n    method public abstract void initCmdApp(de.robv.android.xposed.IXposedHookCmdInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookCmdInit.StartupParam {\n    field public java.lang.String modulePath;\n    field public java.lang.String startClassName;\n  }\n\n  public abstract interface IXposedHookInitPackageResources {\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookLoadPackage {\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n\n  public abstract interface IXposedHookZygoteInit {\n    method public abstract void initZygote(de.robv.android.xposed.IXposedHookZygoteInit.StartupParam) throws java.lang.Throwable;\n  }\n\n  public static final class IXposedHookZygoteInit.StartupParam {\n    field public java.lang.String modulePath;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Callback Interfaces and Classes for Resource and Package Events in Xposed Framework - Java\nDESCRIPTION: The package de.robv.android.xposed.callbacks contains abstract classes and interfaces defining callback mechanisms for Xposed hooks related to Android package and resource handling. IXUnhook interface provides a method to unhook callbacks. The XC_InitPackageResources class and its nested InitPackageResourcesParam and Unhook classes allow hooking into resource initialization for packages. The XC_LayoutInflated set of classes enables handling of layout inflation events. The XC_LoadPackage class provides a mechanism to hook when Android packages are loaded. These classes depend on the Xposed callback framework and Android context classes for resource and view management.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_039.txt#_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed.callbacks {\n  public abstract interface IXUnhook {\n    method public abstract void unhook();\n  }\n\n  public abstract class XC_InitPackageResources extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_InitPackageResources();\n    ctor public XC_InitPackageResources(int);\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_InitPackageResources.InitPackageResourcesParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    field public java.lang.String packageName;\n    field public android.content.res.XResources res;\n  }\n\n  public class XC_InitPackageResources.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_InitPackageResources getCallback();\n    method public void unhook();\n  }\n\n  public abstract class XC_LayoutInflated extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_LayoutInflated();\n    ctor public XC_LayoutInflated(int);\n    method public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_LayoutInflated.LayoutInflatedParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    field public android.content.res.XResources res;\n    field public android.content.res.XResources.ResourceNames resNames;\n    field public java.lang.String variant;\n    field public android.view.View view;\n  }\n\n  public class XC_LayoutInflated.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\n    method public int getId();\n    method public void unhook();\n  }\n\n  public abstract class XC_LoadPackage extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_LoadPackage();\n    ctor public XC_LoadPackage(int);\n    method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n  }\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - findConstructorExact method\nDESCRIPTION: This method provides an exact search for a constructor within a given class, based on parameter types. Useful for precisely identifying a constructor without using a best-match algorithm, for situations where parameter types are known and exact matching is needed.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_14\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Constructor<?> findConstructorExact(java.lang.Class<?>, java.lang.Class<?>...);\n```\n\n----------------------------------------\n\nTITLE: Abstract Callback Priority Handling in Java for Xposed Framework\nDESCRIPTION: This abstract class XCallback includes priority constants and stores a priority value defining callback execution order within Xposed modules. The class includes deprecated constructor and static fields for priorities including default, highest, and lowest to control callback invocation precedence. This provides a base class for callback implementations to determine order of handling events.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_24\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XCallback {\nctor public deprecated XCallback();\nfield public static final int PRIORITY_DEFAULT = 50; // 0x32\nfield public static final int PRIORITY_HIGHEST = 10000; // 0x2710\nfield public static final int PRIORITY_LOWEST = -10000; // 0xffffd8f0\nfield public final int priority;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_InitPackageResources Callback Interface in Java\nDESCRIPTION: Defines the abstract class XC_InitPackageResources, which extends XCallback. Modules implement the abstract method handleInitPackageResources to modify resources during package initialization. Includes inner classes InitPackageResourcesParam for callback parameters (packageName, XResources) and Unhook for removing the callback.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_11\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed.callbacks;\n\npublic abstract class XC_InitPackageResources extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_InitPackageResources();\n  ctor public XC_InitPackageResources(int);\n  method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n}\n\npublic static final class XC_InitPackageResources.InitPackageResourcesParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public java.lang.String packageName;\n  field public android.content.res.XResources res;\n}\n\npublic class XC_InitPackageResources.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n  method public de.robv.android.xposed.callbacks.XC_InitPackageResources getCallback();\n  method public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SELinuxHelper Class in Java\nDESCRIPTION: Defines the `SELinuxHelper` class within the `de.robv.android.xposed` package. This final class provides static utility methods to interact with SELinux, allowing retrieval of the current SELinux context, checking if SELinux is enabled or enforced, and accessing a service for app data files.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class SELinuxHelper {\n    method public static de.robv.android.xposed.services.BaseService getAppDataFileService();\n    method public static java.lang.String getContext();\n    method public static boolean isSELinuxEnabled();\n    method public static boolean isSELinuxEnforced();\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Resource Management APIs for Xposed Modules in Java\nDESCRIPTION: Defines classes for handling and modifying Android resources via Xposed. Includes XModuleResources for module-specific resources, XResForwarder for resource forwarding, and XResources for hooking and replacing system resources.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public class XModuleResources extends android.content.res.Resources {\n    method public static android.content.res.XModuleResources createInstance(java.lang.String, android.content.res.XResources);\n    method public android.content.res.XResForwarder fwd(int);\n  }\n\n  public class XResForwarder {\n    ctor public XResForwarder(android.content.res.Resources, int);\n    method public int getId();\n    method public android.content.res.Resources getResources();\n  }\n\n  public class XResources extends android.content.res.Resources {\n    method public int addResource(android.content.res.Resources, int);\n    method public static int getFakeResId(java.lang.String);\n    method public static int getFakeResId(android.content.res.Resources, int);\n    method public java.lang.String getPackageName();\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public static de.robv.android.xposed.callbacks.XC_LayoutInflated.Unhook hookSystemWideLayout(java.lang.String, java.lang.String, java.lang.String, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n    method public void setReplacement(int, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.Object);\n    method public void setReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(int, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.Object);\n    method public static void setSystemWideReplacement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object);\n    method public static void unhookLayout(java.lang.String, int, de.robv.android.xposed.callbacks.XC_LayoutInflated);\n  }\n\n  public static class XResources.DimensionReplacement {\n    ctor public XResources.DimensionReplacement(float, int);\n    method public float getDimension(android.util.DisplayMetrics);\n    method public int getDimensionPixelOffset(android.util.DisplayMetrics);\n    method public int getDimensionPixelSize(android.util.DisplayMetrics);\n  }\n\n  public static abstract class XResources.DrawableLoader {\n    ctor public XResources.DrawableLoader();\n    method public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.XResources, int) throws java.lang.Throwable;\n    method public android.graphics.drawable.Drawable newDrawableForDensity(android.content.res.XResources, int, int) throws java.lang.Throwable;\n  }\n\n  public static class XResources.ResourceNames {\n    method public boolean equals(java.lang.String, java.lang.String, java.lang.String, int);\n    field public final java.lang.String fullName;\n    field public final int id;\n    field public final java.lang.String name;\n    field public final java.lang.String pkg;\n    field public final java.lang.String type;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - findMethodsByExactParameters method\nDESCRIPTION: This method retrieves an array of methods from a class that match the exact specified parameter types. Useful for quickly retrieving methods with specific signatures.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_19\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Method[] findMethodsByExactParameters(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>...);\n```\n\n----------------------------------------\n\nTITLE: Hooking and Logging Methods with XposedBridge - Java\nDESCRIPTION: Defines static methods to hook Java methods via reflection members, invoke original methods bypassing hooks, perform synchronized logging of messages and throwables, and to unhook previously installed hooks on methods or package resource callbacks. It uses de.robv.android.xposed classes for method hooking and resource callbacks. Key parameters include reflection Member objects and XC_MethodHook instances. Exceptions such as IllegalAccessException and InvocationTargetException are handled where method invocation occurs. The class also exposes a BOOTCLASSLOADER and XPOSED_BRIDGE_VERSION constant.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_060.txt#_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook hookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\nmethod public static java.lang.Object invokeOriginalMethod(java.lang.reflect.Member, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException, java.lang.NullPointerException;\nmethod public static synchronized void log(java.lang.String);\nmethod public static synchronized void log(java.lang.Throwable);\nmethod public static void unhookInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources);\nmethod public static void unhookLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage);\nmethod public static void unhookMethod(java.lang.reflect.Member, de.robv.android.xposed.XC_MethodHook);\nfield public static final java.lang.ClassLoader BOOTCLASSLOADER;\nfield public static int XPOSED_BRIDGE_VERSION;\n```\n\n----------------------------------------\n\nTITLE: Defining XModuleResources Class in Java\nDESCRIPTION: Defines the `XModuleResources` class within the `android.content.res` package, extending `android.content.res.Resources`. This class likely represents resources specific to an Xposed module, providing methods to create instances and forward resource lookups.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage android.content.res {\n\n  public class XModuleResources extends android.content.res.Resources {\n    method public static android.content.res.XModuleResources createInstance(java.lang.String, android.content.res.XResources);\n    method public android.content.res.XResForwarder fwd(int);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Overview of de.robv.android.xposed.callbacks interfaces and classes\nDESCRIPTION: Defines callback interfaces and classes used for managing unhooking operations and resource initialization within the Xposed framework. The IXUnhook interface provides a method to unhook, while XC_InitPackageResources handles resource initialization hooks.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract interface IXUnhook { method public abstract void unhook(); }\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_InitPackageResources extends de.robv.android.xposed.callbacks.XCallback { \n```\n\n----------------------------------------\n\nTITLE: XSharedPreferences Management\nDESCRIPTION: The `XSharedPreferences` class is a custom implementation of `SharedPreferences` tailored for Xposed modules. It allows modules to store and retrieve settings. It offers methods for getting, setting, and managing preference values, along with the capability to reload preferences and check for file changes.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_053.txt#_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class XSharedPreferences implements android.content.SharedPreferences {\n    ctor public XSharedPreferences(java.io.File);\n    ctor public XSharedPreferences(java.lang.String);\n    ctor public XSharedPreferences(java.lang.String, java.lang.String);\n    method public boolean contains(java.lang.String);\n    method public deprecated android.content.SharedPreferences.Editor edit();\n    method public java.util.Map<java.lang.String, ?> getAll();\n    method public boolean getBoolean(java.lang.String, boolean);\n    method public java.io.File getFile();\n    method public float getFloat(java.lang.String, float);\n    method public int getInt(java.lang.String, int);\n    method public long getLong(java.lang.String, long);\n    method public java.lang.String getString(java.lang.String, java.lang.String);\n    method public java.util.Set<java.lang.String> getStringSet(java.lang.String, java.util.Set<java.lang.String>);\n    method public synchronized boolean hasFileChanged();\n    method public boolean makeWorldReadable();\n    method public deprecated void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n    method public void reload();\n    method public deprecated void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing XposedBridge Version and BootClassloader\nDESCRIPTION: Provides static fields representing the Xposed Bridge version and the boot classloader. The `BOOTCLASSLOADER` field provides access to the boot classloader and `XPOSED_BRIDGE_VERSION` provides the current version of the XposedBridge. These fields are important for compatibility checks and accessing resources.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\nfield public static final java.lang.ClassLoader BOOTCLASSLOADER;\n    field public static int XPOSED_BRIDGE_VERSION;\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Field Access and Manipulation\nDESCRIPTION: Methods for finding and manipulating fields in target classes. Provides direct access to get and set field values of various primitive and object types.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_053.txt#_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Field findField(java.lang.Class<?>, java.lang.String);\nmethod public static java.lang.reflect.Field findFirstFieldByExactType(java.lang.Class<?>, java.lang.Class<?>);\nmethod public static boolean getBooleanField(java.lang.Object, java.lang.String);\nmethod public static int getIntField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object getObjectField(java.lang.Object, java.lang.String);\nmethod public static void setBooleanField(java.lang.Object, java.lang.String, boolean);\nmethod public static void setObjectField(java.lang.Object, java.lang.String, java.lang.Object);\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Managing SELinux State and App File Services with Java\nDESCRIPTION: The SELinuxHelper final class provides static utility methods for querying SELinux state (enabled/enforced), obtaining security contexts, and accessing application data file services within Xposed. Inputs are implicit (no parameters required), and outputs include booleans, strings, and service handles. This is essential for compatibility and privilege-aware operation under modern Android versions.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\npublic final class SELinuxHelper {\n  public static de.robv.android.xposed.services.BaseService getAppDataFileService();\n  public static java.lang.String getContext();\n  public static boolean isSELinuxEnabled();\n  public static boolean isSELinuxEnforced();\n}\n\n```\n\n----------------------------------------\n\nTITLE: Defining Abstract XCallback.Param Inner Class in Java\nDESCRIPTION: Defines the abstract static inner class `XCallback.Param` as a base for parameter objects passed to Xposed callbacks. It provides synchronized methods (`getExtra`, `getObjectExtra`, `setObjectExtra`) to manage additional, arbitrary data associated with the callback event using an internal `Bundle`. It includes a deprecated protected constructor.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_19\n\nLANGUAGE: Java\nCODE:\n```\npublic static abstract class XCallback.Param {\n  ctor protected deprecated XCallback.Param();\n  method public synchronized android.os.Bundle getExtra();\n  method public java.lang.Object getObjectExtra(java.lang.String);\n  method public void setObjectExtra(java.lang.String, java.lang.Object);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AndroidAppHelper API in Java\nDESCRIPTION: Defines the `AndroidAppHelper` class within the `android.app` package. This static helper class provides methods to retrieve information about the current application context, such as the Application object, ApplicationInfo, package name, process name, and access to SharedPreferences (though some methods are deprecated).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage android.app {\n\n  public final class AndroidAppHelper {\n    method public static android.app.Application currentApplication();\n    method public static android.content.pm.ApplicationInfo currentApplicationInfo();\n    method public static java.lang.String currentPackageName();\n    method public static java.lang.String currentProcessName();\n    method public static deprecated android.content.SharedPreferences getDefaultSharedPreferencesForPackage(java.lang.String);\n    method public static deprecated android.content.SharedPreferences getSharedPreferencesForPackage(java.lang.String, java.lang.String, int);\n    method public static deprecated void reloadSharedPreferencesIfNeeded(android.content.SharedPreferences);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: XC_InitPackageResources.Unhook Class Definition\nDESCRIPTION: Defines the nested class `XC_InitPackageResources.Unhook`, which implements the `IXUnhook` interface. The `Unhook` class provides a way to unregister a hook established using `XC_InitPackageResources`. It provides a method to retrieve the associated callback.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_28\n\nLANGUAGE: Java\nCODE:\n```\npublic class XC_InitPackageResources.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n  method public de.robv.android.xposed.callbacks.XC_InitPackageResources getCallback();\n  method public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Additional Field Management\nDESCRIPTION: Methods for attaching additional fields to existing objects at runtime. This feature allows modules to store custom data with target objects without modifying their class definition.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_053.txt#_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object getAdditionalInstanceField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object getAdditionalStaticField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object removeAdditionalInstanceField(java.lang.Object, java.lang.String);\nmethod public static java.lang.Object setAdditionalInstanceField(java.lang.Object, java.lang.String, java.lang.Object);\nmethod public static java.lang.Object setAdditionalStaticField(java.lang.Object, java.lang.String, java.lang.Object);\n```\n\n----------------------------------------\n\nTITLE: XC_LayoutInflated.Unhook Class Definition\nDESCRIPTION: Defines the nested class `XC_LayoutInflated.Unhook`, which implements the `IXUnhook` interface and is used to unregister hooks related to layout inflation using the `XC_LayoutInflated` class. This class allows the Xposed module to remove previously added hooks.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_31\n\nLANGUAGE: Java\nCODE:\n```\npublic class XC_LayoutInflated.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n  method public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\n  method public int getId();\n  method public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: XC_InitPackageResources Class Definition and Methods\nDESCRIPTION: Defines the abstract class `XC_InitPackageResources`, which is used to modify the resources of a package. It extends `XCallback`. This class is intended to be extended by Xposed modules and its `handleInitPackageResources` method is called when initializing package resources. The parameter class, `InitPackageResourcesParam`, holds the context of the resource initialization process.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_26\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_InitPackageResources extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_InitPackageResources();\n  ctor public XC_InitPackageResources(int);\n  method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n}\n```\n\n----------------------------------------\n\nTITLE: XC_InitPackageResources Callback System\nDESCRIPTION: Callback system for intercepting the initialization of package resources in target applications. Allows modules to modify resources during loading.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_053.txt#_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_InitPackageResources extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_InitPackageResources();\n  ctor public XC_InitPackageResources(int);\n  method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n}\n\npublic static final class XC_InitPackageResources.InitPackageResourcesParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public java.lang.String packageName;\n  field public android.content.res.XResources res;\n}\n```\n\n----------------------------------------\n\nTITLE: Unhook Class for InitPackageResources\nDESCRIPTION: This class, nested in `XC_InitPackageResources`, provides functionality to unhook the callback related to resource initialization. It implements the `IXUnhook` interface to provide the ability to remove the hook.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_15\n\nLANGUAGE: Java\nCODE:\n```\npublic class XC_InitPackageResources.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_InitPackageResources getCallback();\n    method public void unhook();\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Callback Interfaces and Classes - Java\nDESCRIPTION: Defines the IXUnhook interface with an unhook() method for removing method hooks. Declares the abstract class XC_InitPackageResources extending XCallback, providing constructors and abstract handleInitPackageResources method to process resource initialization events. Also defines the nested class InitPackageResourcesParam for passing parameters related to resource initialization callbacks. These interfaces and classes act as callback handlers for managing Xposed hooks lifecycle and package resource loading events.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_060.txt#_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract interface IXUnhook {\n    method public abstract void unhook();\n  }\n\npublic abstract class XC_InitPackageResources extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_InitPackageResources();\n    ctor public XC_InitPackageResources(int);\n    method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n  }\n\npublic static final class XC_InitPackageResources.InitPackageResourcesParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n```\n\n----------------------------------------\n\nTITLE: Defining XModuleResources Class (Java API)\nDESCRIPTION: Defines the `XModuleResources` class extending `android.content.res.Resources` within the `android.content.res` package. It includes a static factory method `createInstance` and an instance method `fwd` to get an `XResForwarder` for a specific resource ID.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public class XModuleResources extends android.content.res.Resources {\n    method public static android.content.res.XModuleResources createInstance(java.lang.String, android.content.res.XResources);\n    method public android.content.res.XResForwarder fwd(int);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage.Unhook Class/Interface in Java\nDESCRIPTION: Defines the `XC_LoadPackage.Unhook` class or interface, which implements `de.robv.android.xposed.callbacks.IXUnhook`. It provides methods to retrieve the associated `XC_LoadPackage` callback instance (`getCallback`) and to remove the hook (`unhook`).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_036.txt#_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n  public class XC_LoadPackage.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_LoadPackage getCallback();\n    method public void unhook();\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining Layout Inflation Callback and Parameters in Java for Xposed\nDESCRIPTION: This snippet defines the abstract method handleLayoutInflated within the XC_LayoutInflated callback class and the associated LayoutInflatedParam class that holds parameters such as resources, resource names, variant strings, and views. It is used in the Xposed Framework to intercept and manipulate Android layout inflation events. Dependencies include android.content.res.XResources and android.view.View. Inputs to handleLayoutInflated are LayoutInflatedParam instances, while the method may throw Throwable for error handling.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_20\n\nLANGUAGE: Java\nCODE:\n```\nmethod public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n}\n\npublic static final class XC_LayoutInflated.LayoutInflatedParam extends de.robv.android.xposed.callbacks.XCallback.Param {\nfield public android.content.res.XResources res;\nfield public android.content.res.XResources.ResourceNames resNames;\nfield public java.lang.String variant;\nfield public android.view.View view;\n}\n```\n\n----------------------------------------\n\nTITLE: XC_InitPackageResources Parameter and Unhook Classes in Java\nDESCRIPTION: Support classes for the XC_InitPackageResources callback. InitPackageResourcesParam provides resource context information, while Unhook allows removing the hook when it's no longer needed.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_000.txt#_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XC_InitPackageResources.InitPackageResourcesParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public java.lang.String packageName;\n  field public android.content.res.XResources res;\n}\n\npublic class XC_InitPackageResources.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n  method public de.robv.android.xposed.callbacks.XC_InitPackageResources getCallback();\n  method public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Unhook Mechanism for LoadPackage in XposedBridge (Java)\nDESCRIPTION: This snippet implements the XC_LoadPackage.Unhook class, which realizes the IXUnhook interface to provide an explicit mechanism for removing a previously established package loading callback. The class includes methods to retrieve the associated callback and to perform the unhooking operation. It depends on the de.robv.android.xposed.callbacks.XC_LoadPackage and .IXUnhook classes. Key inputs involve a registered callback, and outputs are the ability to unregister that callback dynamically. This class is only effective within Xposed's callback infrastructure.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_25\n\nLANGUAGE: Java\nCODE:\n```\npublic class XC_LoadPackage.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_LoadPackage getCallback();\n    method public void unhook();\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Drawable Loader Abstract Class (Java)\nDESCRIPTION: Defines the abstract static inner class `XResources.DrawableLoader`. Subclasses must implement `newDrawable` to provide custom drawable loading logic, allowing modules to replace drawables dynamically via `XResources`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public static abstract class XResources.DrawableLoader {\n    ctor public XResources.DrawableLoader();\n    method public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.XResources, int) throws java.lang.Throwable;\n    method public android.graphics.drawable.Drawable newDrawableForDensity(android.content.res.XResources, int, int) throws java.lang.Throwable;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Hooking and Intercepting Android Package and Zygote Events with Java\nDESCRIPTION: Lists interfaces for various Xposed event hooks, such as IXposedHookInitPackageResources, IXposedHookLoadPackage, and IXposedHookZygoteInit, used to receive callbacks during key application and zygote phases. Parameters include objects carrying module paths and package data, with methods expected to throw exceptions if initialization or handling fails. Appropriate for advanced users familiar with the Android app lifecycle and Xposed extension development.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract interface IXposedHookInitPackageResources {\n  public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam param) throws java.lang.Throwable;\n}\n\npublic abstract interface IXposedHookLoadPackage {\n  public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam param) throws java.lang.Throwable;\n}\n\npublic abstract interface IXposedHookZygoteInit {\n  public abstract void initZygote(de.robv.android.xposed.IXposedHookZygoteInit.StartupParam param) throws java.lang.Throwable;\n}\n\n```\n\n----------------------------------------\n\nTITLE: Getting and Setting Fields in XposedHelpers\nDESCRIPTION: Provides helper methods for accessing and modifying instance and static fields of objects, enabling modification of application data. Methods include accessing various field types (`getBooleanField`, `getIntField`, etc.).  These methods are used for interacting with application's internal data structures.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object getAdditionalInstanceField(java.lang.Object, java.lang.String);\n    method public static java.lang.Object getAdditionalStaticField(java.lang.Object, java.lang.String);\n    method public static java.lang.Object getAdditionalStaticField(java.lang.Class<?>, java.lang.String);\n    method public static boolean getBooleanField(java.lang.Object, java.lang.String);\n    method public static byte getByteField(java.lang.Object, java.lang.String);\n    method public static char getCharField(java.lang.Object, java.lang.String);\n    method public static java.lang.Class<?>[] getClassesAsArray(java.lang.Class<?>...);\n    method public static double getDoubleField(java.lang.Object, java.lang.String);\n    method public static float getFloatField(java.lang.Object, java.lang.String);\n    method public static int getIntField(java.lang.Object, java.lang.String);\n    method public static long getLongField(java.lang.Object, java.lang.String);\n    method public static java.lang.String getMD5Sum(java.lang.String) throws java.io.IOException;\n    method public static java.lang.Object getObjectField(java.lang.Object, java.lang.String);\n    method public static java.lang.Class<?>[] getParameterTypes(java.lang.Object...);\n    method public static short getShortField(java.lang.Object, java.lang.String);\n    method public static boolean getStaticBooleanField(java.lang.Class<?>, java.lang.String);\n    method public static byte getStaticByteField(java.lang.Class<?>, java.lang.String);\n    method public static char getStaticCharField(java.lang.Class<?>, java.lang.String);\n    method public static double getStaticDoubleField(java.lang.Class<?>, java.lang.String);\n    method public static float getStaticFloatField(java.lang.Class<?>, java.lang.String);\n    method public static int getStaticIntField(java.lang.Class<?>, java.lang.String);\n    method public static long getStaticLongField(java.lang.Class<?>, java.lang.String);\n    method public static java.lang.Object getStaticObjectField(java.lang.Class<?>, java.lang.String);\n    method public static short getStaticShortField(java.lang.Class<?>, java.lang.String);\n    method public static java.lang.Object getSurroundingThis(java.lang.Object);\n    method public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Object...);\n    method public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object...);\n    method public static java.lang.Object removeAdditionalInstanceField(java.lang.Object, java.lang.String);\n    method public static java.lang.Object removeAdditionalStaticField(java.lang.Object, java.lang.String);\n    method public static java.lang.Object removeAdditionalStaticField(java.lang.Class<?>, java.lang.String);\n    method public static java.lang.Object setAdditionalInstanceField(java.lang.Object, java.lang.String, java.lang.Object);\n    method public static java.lang.Object setAdditionalStaticField(java.lang.Object, java.lang.String, java.lang.Object);\n    method public static java.lang.Object setAdditionalStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object);\n    method public static void setBooleanField(java.lang.Object, java.lang.String, boolean);\n    method public static void setByteField(java.lang.Object, java.lang.String, byte);\n    method public static void setCharField(java.lang.Object, java.lang.String, char);\n    method public static void setDoubleField(java.lang.Object, java.lang.String, double);\n    method public static void setFloatField(java.lang.Object, java.lang.String, float);\n    method public static void setIntField(java.lang.Object, java.lang.String, int);\n    method public static void setLongField(java.lang.Object, java.lang.String, long);\n    method public static void setObjectField(java.lang.Object, java.lang.String, java.lang.Object);\n    method public static void setShortField(java.lang.Object, java.lang.String, short);\n    method public static void setStaticBooleanField(java.lang.Class<?>, java.lang.String, boolean);\n    method public static void setStaticByteField(java.lang.Class<?>, java.lang.String, byte);\n    method public static void setStaticCharField(java.lang.Class<?>, java.lang.String, char);\n    method public static void setStaticDoubleField(java.lang.Class<?>, java.lang.String, double);\n    method public static void setStaticFloatField(java.lang.Class<?>, java.lang.String, float);\n    method public static void setStaticIntField(java.lang.Class<?>, java.lang.String, int);\n    method public static void setStaticLongField(java.lang.Class<?>, java.lang.String, long);\n    method public static void setStaticObjectField(java.lang.Class<?>, java.lang.String, java.lang.Object);\n    method public static void setStaticShortField(java.lang.Class<?>, java.lang.String, short);\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Resource Names Helper Class (Java)\nDESCRIPTION: Defines the static inner class `XResources.ResourceNames`. Represents a resolved resource identifier, containing its package, type, name, full name, and integer ID, along with an `equals` method for comparison. Used internally by `XResources`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public static class XResources.ResourceNames {\n    method public boolean equals(java.lang.String, java.lang.String, java.lang.String, int);\n    field public final java.lang.String fullName;\n    field public final int id;\n    field public final java.lang.String name;\n    field public final java.lang.String pkg;\n    field public final java.lang.String type;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage.Unhook Class in Java\nDESCRIPTION: This snippet defines the XC_LoadPackage.Unhook class which implements the IXUnhook interface from the Xposed callbacks package to support hook management. It includes methods to retrieve the callback object and to unhook, allowing removal of previously installed hooks. This class is central to controlling the lifecycle of a loaded package's hook in the Xposed framework.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_000.txt#_snippet_9\n\nLANGUAGE: java\nCODE:\n```\npublic class XC_LoadPackage.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_LoadPackage getCallback();\n    method public void unhook();\n  }\n```\n\n----------------------------------------\n\nTITLE: Callbacks for Layout Inflation\nDESCRIPTION: Provides `XC_LayoutInflated` abstract class and nested class `LayoutInflatedParam`. Allows modifying layouts after inflation, offering control over view modifications and UI changes. The `LayoutInflatedParam` holds information about the inflated view and associated resources.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_16\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LayoutInflated extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_LayoutInflated();\n    ctor public XC_LayoutInflated(int);\n    method public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_LayoutInflated.LayoutInflatedParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    field public android.content.res.XResources res;\n    field public android.content.res.XResources.ResourceNames resNames;\n    field public java.lang.String variant;\n    field public android.view.View view;\n  }\n```\n\n----------------------------------------\n\nTITLE: XResForwarder Class Definition\nDESCRIPTION: The `XResForwarder` class is a utility for forwarding resource references. It encapsulates a resource and an ID and provides methods to retrieve these values. This is a helper class. Dependencies: `android.content.res.Resources`, `int`. The output is an instance of the XResForwarder class.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n  public class XResForwarder {\n    ctor public XResForwarder(android.content.res.Resources, int);\n    method public int getId();\n    method public android.content.res.Resources getResources();\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining XC_InitPackageResources Parameter Class in Java\nDESCRIPTION: Defines the static final inner class `XC_InitPackageResources.InitPackageResourcesParam`, extending `XCallback.Param`. Instances of this class are passed to the `handleInitPackageResources` callback method, providing access to the target `packageName` (String) and the modifiable `XResources` object (`res`).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_17\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XC_InitPackageResources.InitPackageResourcesParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public java.lang.String packageName;\n  field public android.content.res.XResources res;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XCallback.Param Class in Xposed API (Java)\nDESCRIPTION: Defines a static abstract nested class `Param` within `XCallback`. This class serves as the base class for parameter objects passed to specific Xposed callback methods, providing generic methods for accessing extra data.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_34\n\nLANGUAGE: java\nCODE:\n```\npublic static abstract class XCallback.Param { }\n```\n\n----------------------------------------\n\nTITLE: Defining IXposedHookCmdInit.StartupParam Class (Java API)\nDESCRIPTION: Defines the final static inner class `IXposedHookCmdInit.StartupParam` within `de.robv.android.xposed`. It holds parameters passed to `initCmdApp`, including the module path and the starting class name.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public static final class IXposedHookCmdInit.StartupParam {\n    field public java.lang.String modulePath;\n    field public java.lang.String startClassName;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IXUnhook Interface for Xposed Callbacks in Java\nDESCRIPTION: Defines the `IXUnhook` interface within the `de.robv.android.xposed.callbacks` package. This interface mandates the implementation of an `unhook()` method, providing a standard way to remove or deregister previously established hooks or callbacks within the Xposed framework.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_15\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract interface IXUnhook {\n  method public abstract void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LayoutInflated Class\nDESCRIPTION: This snippet defines the abstract class `XC_LayoutInflated`, extending `de.robv.android.xposed.callbacks.XCallback`.  It includes constructors and an abstract method `handleLayoutInflated`. This class defines a callback to be invoked when a layout is inflated.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_20\n\nLANGUAGE: Java\nCODE:\n```\nctor public XC_LayoutInflated();\nctor public XC_LayoutInflated(int);\nmethod public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n```\n\n----------------------------------------\n\nTITLE: Defining FileResult Class in Xposed API Services (Java)\nDESCRIPTION: Defines a final class `FileResult` used by `BaseService` methods to return results of file operations. It encapsulates file content (byte array or stream) and metadata (size, modification time).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_55\n\nLANGUAGE: java\nCODE:\n```\npublic final class FileResult { }\n```\n\n----------------------------------------\n\nTITLE: Defining LoadPackageParam Data Holder in XposedBridge (Java)\nDESCRIPTION: This snippet defines the XC_LoadPackage.LoadPackageParam class, which extends XCallback.Param and contains information about a loaded package, including the ApplicationInfo object, the ClassLoader instance, flags for process state, and package identification strings. The class is used as a data structure passed to Xposed module callbacks during package loading events, requiring knowledge of the de.robv.android.xposed.callbacks.XCallback library. Expected input is runtime, system-level data, and outputs are through field access within modules. Limitations include the class's dependency on the Xposed framework and its context.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_24\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XC_LoadPackage.LoadPackageParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    field public android.content.pm.ApplicationInfo appInfo;\n    field public java.lang.ClassLoader classLoader;\n    field public boolean isFirstApplication;\n    field public java.lang.String packageName;\n    field public java.lang.String processName;\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodHook API in Java\nDESCRIPTION: Defines the abstract class `XC_MethodHook` within the `de.robv.android.xposed` package, extending `XCallback`. This is the base class for creating method hooks, requiring subclasses to implement `beforeHookedMethod` and/or `afterHookedMethod` to run code before or after the original method execution.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_10\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract class XC_MethodHook extends de.robv.android.xposed.callbacks.XCallback {\n    ctor public XC_MethodHook();\n    ctor public XC_MethodHook(int);\n    method protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining isFirstApplication Field in Xposed LoadPackageParam (Java)\nDESCRIPTION: Defines a public boolean field `isFirstApplication` within the `XC_LoadPackage.LoadPackageParam` class. This flag indicates whether this is the first time the application code is being loaded into this process, typically true only for the application's main process.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_25\n\nLANGUAGE: java\nCODE:\n```\nfield public boolean isFirstApplication;\n```\n\n----------------------------------------\n\nTITLE: Defining XC_MethodReplacement API in Java\nDESCRIPTION: Defines the abstract class `XC_MethodReplacement` within the `de.robv.android.xposed` package, extending `XC_MethodHook`. This specialized hook type is used to completely replace the implementation of a hooked method. Subclasses must implement `replaceHookedMethod`. Static factory methods (`returnConstant`) and a predefined `DO_NOTHING` instance are provided.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_13\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract class XC_MethodReplacement extends de.robv.android.xposed.XC_MethodHook {\n    ctor public XC_MethodReplacement();\n    ctor public XC_MethodReplacement(int);\n    method protected abstract java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(java.lang.Object);\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(int, java.lang.Object);\n    field public static final de.robv.android.xposed.XC_MethodReplacement DO_NOTHING;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining BaseService for File Operations in Java\nDESCRIPTION: Defines the abstract class BaseService, providing an interface for file system operations within the Xposed framework context. It includes abstract methods for checking access and reading files, along with concrete methods for common checks and stream retrieval. Defines standard file access mode constants (F_OK, R_OK, W_OK, X_OK).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_063.txt#_snippet_15\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed.services;\n\npublic abstract class BaseService {\n  method public abstract boolean checkFileAccess(java.lang.String, int);\n  method public boolean checkFileExists(java.lang.String);\n  method public java.io.InputStream getFileInputStream(java.lang.String) throws java.io.IOException;\n  method public de.robv.android.xposed.services.FileResult getFileInputStream(java.lang.String, long, long) throws java.io.IOException;\n  method public long getFileModificationTime(java.lang.String) throws java.io.IOException;\n  method public long getFileSize(java.lang.String) throws java.io.IOException;\n  method public boolean hasDirectFileAccess();\n  method public abstract byte[] readFile(java.lang.String) throws java.io.IOException;\n  method public abstract de.robv.android.xposed.services.FileResult readFile(java.lang.String, long, long) throws java.io.IOException;\n  method public abstract de.robv.android.xposed.services.FileResult readFile(java.lang.String, int, int, long, long) throws java.io.IOException;\n  method public abstract de.robv.android.xposed.services.FileResult statFile(java.lang.String) throws java.io.IOException;\n  field public static final int F_OK = 0; // 0x0\n  field public static final int R_OK = 4; // 0x4\n  field public static final int W_OK = 2; // 0x2\n  field public static final int X_OK = 1; // 0x1\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LayoutInflated.Unhook Inner Class in Java\nDESCRIPTION: Defines the inner class `XC_LayoutInflated.Unhook` implementing the `de.robv.android.xposed.callbacks.IXUnhook` interface. It provides methods to retrieve the associated `XC_LayoutInflated` callback instance (`getCallback`), get its unique identifier (`getId`), and unregister the callback (`unhook`).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_15\n\nLANGUAGE: Java\nCODE:\n```\npublic class XC_LayoutInflated.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n  method public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\n  method public int getId();\n  method public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Application Information\nDESCRIPTION: This code defines methods within `AndroidAppHelper` to retrieve information about the current application. This includes methods to get the current application instance, application info, package name, and process name. These methods are essential for identifying and interacting with the target application within the Xposed framework.  Dependencies: `android.app.Application`, `android.content.pm.ApplicationInfo`, `java.lang.String` . The output is various application-related properties.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage android.app {\n\n  public final class AndroidAppHelper {\n    method public static android.app.Application currentApplication();\n    method public static android.content.pm.ApplicationInfo currentApplicationInfo();\n    method public static java.lang.String currentPackageName();\n    method public static java.lang.String currentProcessName();\n    method public static deprecated android.content.SharedPreferences getDefaultSharedPreferencesForPackage(java.lang.String);\n    method public static deprecated android.content.SharedPreferences getSharedPreferencesForPackage(java.lang.String, java.lang.String, int);\n    method public static deprecated void reloadSharedPreferencesIfNeeded(android.content.SharedPreferences);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining appInfo Field in Xposed LoadPackageParam (Java)\nDESCRIPTION: Defines a public field `appInfo` of type `android.content.pm.ApplicationInfo` within the `XC_LoadPackage.LoadPackageParam` class. This field contains information about the application package currently being loaded, as provided by the system.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_23\n\nLANGUAGE: java\nCODE:\n```\nfield public android.content.pm.ApplicationInfo appInfo;\n```\n\n----------------------------------------\n\nTITLE: Defining XResources.DrawableLoader API in Java\nDESCRIPTION: Defines the nested abstract static class `XResources.DrawableLoader` within `android.content.res.XResources`. This class allows modules to provide custom logic for loading drawable resources dynamically when a replacement is set.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npackage android.content.res {\n\n  public static abstract class XResources.DrawableLoader {\n    ctor public XResources.DrawableLoader();\n    method public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.XResources, int) throws java.lang.Throwable;\n    method public android.graphics.drawable.Drawable newDrawableForDensity(android.content.res.XResources, int, int) throws java.lang.Throwable;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining getExtra Method in Xposed XCallback.Param (Java)\nDESCRIPTION: Defines a public synchronized method `getExtra` in the `XCallback.Param` class. It returns an `android.os.Bundle` instance that can be used to store and retrieve arbitrary key-value data associated with the callback parameters.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_36\n\nLANGUAGE: java\nCODE:\n```\nmethod public synchronized android.os.Bundle getExtra();\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LayoutInflated Callback and Related Classes (Java)\nDESCRIPTION: Defines the abstract `XC_LayoutInflated` callback interface used in Xposed modules to hook into layout inflation. It includes the abstract `handleLayoutInflated` method, the `LayoutInflatedParam` inner class holding layout details (resources, view), and the `Unhook` interface for removing the callback.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_051.txt#_snippet_8\n\nLANGUAGE: java\nCODE:\n```\npublic abstract class XC_LayoutInflated extends de.robv.android.xposed.callbacks.XCallback {\n    method public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n  }\n\n  public static final class XC_LayoutInflated.LayoutInflatedParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    field public android.content.res.XResources res;\n    field public android.content.res.XResources.ResourceNames resNames;\n    field public java.lang.String variant;\n    field public android.view.View view;\n  }\n\n  public class XC_LayoutInflated.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\n    method public int getId();\n    method public void unhook();\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining packageName Field in Xposed LoadPackageParam (Java)\nDESCRIPTION: Defines a public String field `packageName` within the `XC_LoadPackage.LoadPackageParam` class. This field holds the package name (e.g., 'com.example.app') of the application currently being loaded.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_26\n\nLANGUAGE: java\nCODE:\n```\nfield public java.lang.String packageName;\n```\n\n----------------------------------------\n\nTITLE: Invoking Original Method in XposedBridge\nDESCRIPTION: The `invokeOriginalMethod` method allows an Xposed module to execute the original implementation of a hooked method. This is crucial when using hooks to modify method behavior without fully replacing the functionality. It requires a `java.lang.reflect.Member` representing the hooked method, an optional `Object` representing the 'this' object for instance methods, and an array of `Object` arguments for the method. It throws several exceptions related to illegal access or method invocation issues.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_051.txt#_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object invokeOriginalMethod(java.lang.reflect.Member, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException, java.lang.NullPointerException;\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LayoutInflated.LayoutInflatedParam Fields (Java Signatures)\nDESCRIPTION: Defines the static final nested class `LayoutInflatedParam` within `XC_LayoutInflated`. Extending `XCallback.Param`, this class holds data passed to the `handleLayoutInflated` callback, including the inflated `View` object (`view`), the `XResources` instance (`res`), associated resource names (`resNames`), and the layout variant (`variant`).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_16\n\nLANGUAGE: Java Signature\nCODE:\n```\nfield public android.content.res.XResources res;\nfield public android.content.res.XResources.ResourceNames resNames;\nfield public java.lang.String variant;\nfield public android.view.View view;\n```\n\n----------------------------------------\n\nTITLE: Defining XC_InitPackageResources Callback Class in Java\nDESCRIPTION: Defines the abstract `XC_InitPackageResources` class, which extends `XCallback`. Xposed modules subclass this and implement the `handleInitPackageResources` method to modify application resources when they are loaded for a specific package. Constructors allow specifying a priority.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_16\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_InitPackageResources extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_InitPackageResources();\n  ctor public XC_InitPackageResources(int);\n  method public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LayoutInflatedParam Inner Class in Java\nDESCRIPTION: Defines the static final inner class `XC_LayoutInflated.LayoutInflatedParam` which extends `de.robv.android.xposed.callbacks.XCallback.Param`. It holds parameters passed to the `handleLayoutInflated` callback, including the inflated `View`, `XResources`, resource names (`resNames`), and the layout variant string.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_14\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XC_LayoutInflated.LayoutInflatedParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public android.content.res.XResources res;\n  field public android.content.res.XResources.ResourceNames resNames;\n  field public java.lang.String variant;\n  field public android.view.View view;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XResForwarder Class (Java API)\nDESCRIPTION: Defines the `XResForwarder` class within the `android.content.res` package. This class holds a reference to the original `Resources` object and a resource ID, allowing forwarding of resource lookups.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public class XResForwarder {\n    ctor public XResForwarder(android.content.res.Resources, int);\n    method public int getId();\n    method public android.content.res.Resources getResources();\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XResources.DimensionReplacement Class (Java API)\nDESCRIPTION: Defines the static inner class `XResources.DimensionReplacement` within `android.content.res`. This class represents a replacement for dimension resources, providing methods to get the dimension value based on `DisplayMetrics`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public static class XResources.DimensionReplacement {\n    ctor public XResources.DimensionReplacement(float, int);\n    method public float getDimension(android.util.DisplayMetrics);\n    method public int getDimensionPixelOffset(android.util.DisplayMetrics);\n    method public int getDimensionPixelSize(android.util.DisplayMetrics);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring Abstract XCallback Class with Hook Priority Constants in Java\nDESCRIPTION: This abstract class XCallback defines callback priority constants used to determine the order in which callbacks are executed in the Xposed framework. It includes a deprecated public constructor, and a final field named 'priority' indicating the priority level of the callback instance. This class serves as a base for callbacks with configurable priority.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_000.txt#_snippet_10\n\nLANGUAGE: java\nCODE:\n```\npublic abstract class XCallback {\n    ctor public deprecated XCallback();\n    field public static final int PRIORITY_DEFAULT = 50; // 0x32\n    field public static final int PRIORITY_HIGHEST = 10000; // 0x2710\n    field public static final int PRIORITY_LOWEST = -10000; // 0xffffd8f0\n    field public final int priority;\n  }\n```\n\n----------------------------------------\n\nTITLE: Parameter Handling Utilities in XCallback.Param Class for Xposed in Java\nDESCRIPTION: The XCallback.Param class provides synchronized methods for storing and retrieving extra data via a Bundle within the context of Xposed callbacks. Methods getExtra, getObjectExtra, and setObjectExtra allow modular data passing by key-value pairs, facilitating flexible metadata management for hook callbacks. The class has a protected deprecated constructor requiring usage only via subclassing.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_25\n\nLANGUAGE: Java\nCODE:\n```\npublic static abstract class XCallback.Param {\nctor protected deprecated XCallback.Param();\nmethod public synchronized android.os.Bundle getExtra();\nmethod public java.lang.Object getObjectExtra(java.lang.String);\nmethod public void setObjectExtra(java.lang.String, java.lang.Object);\n}\n```\n\n----------------------------------------\n\nTITLE: XC_LoadPackage Abstract Class in Java\nDESCRIPTION: Abstract class for intercepting package loading events. It allows Xposed modules to execute code when a specific package is loaded, providing access to the package's class loader and application info.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_000.txt#_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LoadPackage extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_LoadPackage();\n  ctor public XC_LoadPackage(int);\n  method public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LayoutInflated.LayoutInflatedParam Class\nDESCRIPTION: This snippet defines the `XC_LayoutInflated.LayoutInflatedParam` class, extending `de.robv.android.xposed.callbacks.XCallback.Param`. It includes fields for XResources, resource names, variant, and view.  This class is used to pass parameters to the layout inflated callback, containing information about the inflated layout.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_21\n\nLANGUAGE: Java\nCODE:\n```\nfield public android.content.res.XResources res;\nfield public android.content.res.XResources.ResourceNames resNames;\nfield public java.lang.String variant;\nfield public android.view.View view;\n```\n\n----------------------------------------\n\nTITLE: Defining Abstract XCallback Base Class in Java\nDESCRIPTION: Defines the abstract base class `XCallback` for all Xposed callbacks. It includes priority constants (`PRIORITY_DEFAULT`, `PRIORITY_HIGHEST`, `PRIORITY_LOWEST`) used to order callback execution and a final integer field `priority` storing the instance's priority. It also contains a deprecated constructor.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_18\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XCallback {\n  ctor public deprecated XCallback();\n  field public static final int PRIORITY_DEFAULT = 50; // 0x32\n  field public static final int PRIORITY_HIGHEST = 10000; // 0x2710\n  field public static final int PRIORITY_LOWEST = -10000; // 0xffffd8f0\n  field public final int priority;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LoadPackageParam Inner Class in Java\nDESCRIPTION: Defines the static final inner class `XC_LoadPackage.LoadPackageParam` extending `de.robv.android.xposed.callbacks.XCallback.Param`. It encapsulates parameters passed during package loading events, including the target application's `ApplicationInfo`, its `ClassLoader`, the package name, process name, and a boolean indicating if it's the first application being loaded.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_17\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XC_LoadPackage.LoadPackageParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n  field public android.content.pm.ApplicationInfo appInfo;\n  field public java.lang.ClassLoader classLoader;\n  field public boolean isFirstApplication;\n  field public java.lang.String packageName;\n  field public java.lang.String processName;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage.LoadPackageParam Class in Java\nDESCRIPTION: Defines the parameters passed to callbacks triggered during the loading of an application package in the Xposed framework. It extends `XCallback.Param` and contains information about the loaded application.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_039.txt#_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XC_LoadPackage.LoadPackageParam extends de.robv.android.xposed.callbacks.XCallback.Param {\n    field public android.content.pm.ApplicationInfo appInfo;\n    field public java.lang.ClassLoader classLoader;\n    field public boolean isFirstApplication;\n    field public java.lang.String packageName;\n    field public java.lang.String processName;\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LoadPackage Class in Xposed API (Java)\nDESCRIPTION: Defines an abstract class `XC_LoadPackage` that extends `XCallback` and implements `IXposedHookLoadPackage`. This class serves as the base for modules that need to hook into the process of loading application packages in Android.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_21\n\nLANGUAGE: java\nCODE:\n```\npublic abstract class XC_LoadPackage extends de.robv.android.xposed.callbacks.XCallback implements de.robv.android.xposed.IXposedHookLoadPackage { }\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LayoutInflated Callback Class (Java Signatures)\nDESCRIPTION: Declares the abstract class `XC_LayoutInflated` in the `de.robv.android.xposed.callbacks` package, extending `XCallback`. It provides constructors and defines the abstract method `handleLayoutInflated` which modules implement to receive callbacks after a specific layout has been inflated, allowing modification of the resulting view hierarchy.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_15\n\nLANGUAGE: Java Signature\nCODE:\n```\nctor public XC_LayoutInflated();\nctor public XC_LayoutInflated(int);\nmethod public abstract void handleLayoutInflated(de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam) throws java.lang.Throwable;\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LayoutInflated.Unhook Class (Java Signature)\nDESCRIPTION: Declares the public nested class `Unhook` within `XC_LayoutInflated`. It implements the `IXUnhook` interface, providing the mechanism to remove a previously registered `XC_LayoutInflated` callback.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_17\n\nLANGUAGE: Java Signature\nCODE:\n```\npublic class XC_LayoutInflated.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n```\n\n----------------------------------------\n\nTITLE: Base Service and FileResult Classes for File Access in Xposed Using Java\nDESCRIPTION: The abstract BaseService class defines methods for file access checking, file existence, input stream retrieval (with support for ranged reads), modification times, sizes, and direct file access status. It also declares abstract methods for reading file contents fully or partially, and for obtaining file status, with permission flags represented as constants (F_OK, R_OK, W_OK, X_OK). The FileResult class is an immutable container encapsulating file content bytes, modification time, size, and an InputStream for reading file data. These are designed for service-oriented file manipulation within the Xposed framework.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_24\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class BaseService {\n    public abstract boolean checkFileAccess(java.lang.String path, int mode);\n    public boolean checkFileExists(java.lang.String path);\n    public java.io.InputStream getFileInputStream(java.lang.String path) throws java.io.IOException;\n    public de.robv.android.xposed.services.FileResult getFileInputStream(java.lang.String path, long start, long end) throws java.io.IOException;\n    public long getFileModificationTime(java.lang.String path) throws java.io.IOException;\n    public long getFileSize(java.lang.String path) throws java.io.IOException;\n    public boolean hasDirectFileAccess();\n    public abstract byte[] readFile(java.lang.String path) throws java.io.IOException;\n    public abstract de.robv.android.xposed.services.FileResult readFile(java.lang.String path, long start, long end) throws java.io.IOException;\n    public abstract de.robv.android.xposed.services.FileResult readFile(java.lang.String path, int unknown1, int unknown2, long start, long end) throws java.io.IOException;\n    public abstract de.robv.android.xposed.services.FileResult statFile(java.lang.String path) throws java.io.IOException;\n    public static final int F_OK = 0;\n    public static final int R_OK = 4;\n    public static final int W_OK = 2;\n    public static final int X_OK = 1;\n}\n\npublic final class FileResult {\n    public final byte[] content;\n    public final long mtime;\n    public final long size;\n    public final java.io.InputStream stream;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_InitPackageResources Unhook Class in Java\nDESCRIPTION: Defines the inner class `XC_InitPackageResources.Unhook`, implementing the `IXUnhook` interface. Objects of this type are typically returned when registering an `XC_InitPackageResources` callback, allowing the callback to be removed later via the `unhook()` method and providing access to the original callback object via `getCallback()`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_18\n\nLANGUAGE: Java\nCODE:\n```\npublic class XC_InitPackageResources.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\n  method public de.robv.android.xposed.callbacks.XC_InitPackageResources getCallback();\n  method public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LayoutInflated.Unhook Class\nDESCRIPTION: This snippet defines the `XC_LayoutInflated.Unhook` class, implementing `de.robv.android.xposed.callbacks.IXUnhook`. It provides methods to retrieve the callback, get an ID, and unhook. This class allows detaching a layout inflated hook.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_22\n\nLANGUAGE: Java\nCODE:\n```\nmethod public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\nmethod public int getId();\nmethod public void unhook();\n```\n\n----------------------------------------\n\nTITLE: Accessing Current Application Info\nDESCRIPTION: This snippet defines helper methods to access the current application's information. It leverages the `android.app` package to retrieve the current application, application info, package name, and process name. These methods are essential for identifying and interacting with the running application.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_053.txt#_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage android.app {\n\n  public final class AndroidAppHelper {\n    method public static android.app.Application currentApplication();\n    method public static android.content.pm.ApplicationInfo currentApplicationInfo();\n    method public static java.lang.String currentPackageName();\n    method public static java.lang.String currentProcessName();\n    method public static deprecated android.content.SharedPreferences getDefaultSharedPreferencesForPackage(java.lang.String);\n    method public static deprecated android.content.SharedPreferences getSharedPreferencesForPackage(java.lang.String, java.lang.String, int);\n    method public static deprecated void reloadSharedPreferencesIfNeeded(android.content.SharedPreferences);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Xposed Module Interfaces\nDESCRIPTION: These interfaces are the entry points for Xposed modules.  `IXposedHookCmdInit` is for command-line initialization, `IXposedHookInitPackageResources` is for initializing package resources, `IXposedHookLoadPackage` is for hooking into the package loading process, and `IXposedHookZygoteInit` is for Zygote initialization.  Each interface defines a method that the module must implement to perform its hook functionality.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_060.txt#_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\nmethod public abstract void initCmdApp(de.robv.android.xposed.IXposedHookCmdInit.StartupParam) throws java.lang.Throwable;\n```\n\nLANGUAGE: Java\nCODE:\n```\nfield public java.lang.String modulePath;\nfield public java.lang.String startClassName;\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public abstract void handleInitPackageResources(de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam) throws java.lang.Throwable;\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public abstract void handleLoadPackage(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam) throws java.lang.Throwable;\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public abstract void initZygote(de.robv.android.xposed.IXposedHookZygoteInit.StartupParam) throws java.lang.Throwable;\n```\n\nLANGUAGE: Java\nCODE:\n```\nfield public java.lang.String modulePath;\nfield public boolean startsSystemServer;\n```\n\n----------------------------------------\n\nTITLE: Defining FileResult Class for File Operation Results in Java\nDESCRIPTION: Defines a final class `FileResult` within the `de.robv.android.xposed.services` package. This class acts as a data structure to encapsulate the results returned by file operations performed via the `BaseService`, holding the file content (as a byte array), modification time, size, and potentially an `InputStream`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_21\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed.services {\n\n  public final class FileResult {\n    field public final byte[] content;\n    field public final long mtime;\n    field public final long size;\n    field public final java.io.InputStream stream;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Class Method Declarations - findMethodBestMatch Overloads\nDESCRIPTION: These methods overload the `findMethodBestMatch` function. They are used to find methods within a class using a 'best match' strategy, considering parameter types and arguments. This flexibility is key to allowing Xposed modules to interact with methods even if the exact signatures are not known precisely.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_17\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Object...);\n```\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.reflect.Method findMethodBestMatch(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object[]);\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers.ClassNotFoundError and XposedHelpers.InvocationTargetError\nDESCRIPTION: Defines two nested classes, `ClassNotFoundError` and `InvocationTargetError`, which extend from `java.lang.Error`. They provide specific exception types for errors when finding a class or when a method invocation throws an exception, which enables more fine-grained error handling within the Xposed environment.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_24\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XposedHelpers.ClassNotFoundError extends java.lang.Error {\n  }\n```\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XposedHelpers.InvocationTargetError extends java.lang.Error {\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining Base XCallback Class - Java\nDESCRIPTION: The abstract base class for all Xposed callbacks. It defines common properties and methods, including a priority field used to influence the execution order of multiple hooks on the same target. It also includes predefined priority constants.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_22\n\nLANGUAGE: Java\nCODE:\n```\n  public abstract class XCallback {\n    ctor public deprecated XCallback();\n    field public static final int PRIORITY_DEFAULT = 50; // 0x32\n    field public static final int PRIORITY_HIGHEST = 10000; // 0x2710\n    field public static final int PRIORITY_LOWEST = -10000; // 0xffffd8f0\n    field public final int priority;\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining IXposedHookZygoteInit.StartupParam API in Java\nDESCRIPTION: Defines the nested static class `IXposedHookZygoteInit.StartupParam` within `de.robv.android.xposed.IXposedHookZygoteInit`. This class provides parameters to the `initZygote` hook, specifically the module's path and whether the Zygote process is starting the system server.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_8\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public static final class IXposedHookZygoteInit.StartupParam {\n    field public java.lang.String modulePath;\n    field public boolean startsSystemServer;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Exception Classes in XposedHelpers\nDESCRIPTION: Defines exception classes related to class loading and method invocation. These classes, `ClassNotFoundError` and `InvocationTargetError` provide a way to handle errors that might occur while interacting with the target application via reflection.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_12\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XposedHelpers.ClassNotFoundError extends java.lang.Error {\n  }\n\n  public static final class XposedHelpers.InvocationTargetError extends java.lang.Error {\n  }\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Reflection and Hook Methods\nDESCRIPTION: Utility methods for finding and hooking methods and constructors in target applications. These methods simplify the process of setting up hooks for method calls and object instantiation.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_053.txt#_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookConstructor(java.lang.Class<?>, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookConstructor(java.lang.String, java.lang.ClassLoader, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static de.robv.android.xposed.XC_MethodHook.Unhook findAndHookMethod(java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Class<?> findClass(java.lang.String, java.lang.ClassLoader);\n```\n\n----------------------------------------\n\nTITLE: XC_LoadPackage Class Definition and Methods\nDESCRIPTION: Defines the abstract class `XC_LoadPackage`, extending `XCallback`, which provides the mechanism to intercept the loading of a package. It is designed for Xposed modules to perform actions when a package is loaded and allows modules to modify application behavior during package loading and initialization.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_32\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XC_LoadPackage extends de.robv.android.xposed.callbacks.XCallback {\n  ctor public XC_LoadPackage();\n  ctor public XC_LoadPackage(int);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XResources.ResourceNames API in Java\nDESCRIPTION: Defines the nested static class `XResources.ResourceNames` within `android.content.res.XResources`. This class encapsulates the different components of a resource name (package, type, name) along with its ID and full name, primarily used for identification and comparison.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npackage android.content.res {\n\n  public static class XResources.ResourceNames {\n    method public boolean equals(java.lang.String, java.lang.String, java.lang.String, int);\n    field public final java.lang.String fullName;\n    field public final int id;\n    field public final java.lang.String name;\n    field public final java.lang.String pkg;\n    field public final java.lang.String type;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XCallback Abstract Class in Java\nDESCRIPTION: Defines the abstract base class `XCallback` for Xposed callbacks. It establishes a priority system using static integer constants (`PRIORITY_DEFAULT`, `PRIORITY_HIGHEST`, `PRIORITY_LOWEST`) and includes a final `priority` field for each callback instance.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_036.txt#_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n  public abstract class XCallback {\n    ctor public deprecated XCallback();\n    field public static final int PRIORITY_DEFAULT = 50; // 0x32\n    field public static final int PRIORITY_HIGHEST = 10000; // 0x2710\n    field public static final int PRIORITY_LOWEST = -10000; // 0xffffd8f0\n    field public final int priority;\n  }\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Custom Error Classes in Java\nDESCRIPTION: Custom error classes used by XposedHelpers to indicate specific failure conditions during reflection operations. ClassNotFoundError is thrown when a requested class cannot be found, while InvocationTargetError wraps exceptions thrown during method invocation.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_000.txt#_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XposedHelpers.ClassNotFoundError extends java.lang.Error {\n}\n\npublic static final class XposedHelpers.InvocationTargetError extends java.lang.Error {\n}\n```\n\n----------------------------------------\n\nTITLE: Defining getFileInputStream (ranged) Method in Xposed BaseService (Java)\nDESCRIPTION: Defines a public method `getFileInputStream` in `BaseService` to read a specific range of bytes from a file. It returns a `de.robv.android.xposed.services.FileResult` containing the stream and metadata. May throw `IOException`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_43\n\nLANGUAGE: java\nCODE:\n```\nmethod public de.robv.android.xposed.services.FileResult getFileInputStream(java.lang.String, long, long) throws java.io.IOException;\n```\n\n----------------------------------------\n\nTITLE: Defining priority Field in Xposed XCallback (Java)\nDESCRIPTION: Defines a public final integer field `priority` in the `XCallback` class. This field stores the priority assigned to a specific callback instance, determining its execution order relative to other callbacks.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_33\n\nLANGUAGE: java\nCODE:\n```\nfield public final int priority;\n```\n\n----------------------------------------\n\nTITLE: Defining SELinuxHelper Class\nDESCRIPTION: Defines the `SELinuxHelper` class, which provides methods for checking the SELinux status and retrieving context information.  It allows Xposed modules to adapt their behavior based on the SELinux configuration of the system.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public final class SELinuxHelper {\n    method public static de.robv.android.xposed.services.BaseService getAppDataFileService();\n    method public static java.lang.String getContext();\n    method public static boolean isSELinuxEnabled();\n    method public static boolean isSELinuxEnforced();\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XC_LayoutInflated.Unhook Structure - Java\nDESCRIPTION: Describes the structure of the unhook object associated with XC_LayoutInflated callbacks. It includes methods to retrieve the original callback instance, get an identifier, and perform the action to remove the hook.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_18\n\nLANGUAGE: Java\nCODE:\n```\n    method public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\n    method public int getId();\n    method public void unhook();\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining XposedHelpers.InvocationTargetError Error (Java Signature)\nDESCRIPTION: Declares the static final nested error class `InvocationTargetError` within `XposedHelpers`, extending `java.lang.Error`. This error is used by `XposedHelpers` to wrap exceptions that occur during the invocation of methods or constructors via reflection.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_11\n\nLANGUAGE: Java Signature\nCODE:\n```\npublic static final class XposedHelpers.InvocationTargetError extends java.lang.Error {\n}\n```\n\n----------------------------------------\n\nTITLE: Defining readFile (ranged) Method in Xposed BaseService (Java)\nDESCRIPTION: Defines an abstract public method `readFile` in `BaseService` to read a specific range of bytes from a file. Implementations must return a `de.robv.android.xposed.services.FileResult` containing the bytes and metadata. May throw `IOException`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_48\n\nLANGUAGE: java\nCODE:\n```\nmethod public abstract de.robv.android.xposed.services.FileResult readFile(java.lang.String, long, long) throws java.io.IOException;\n```\n\n----------------------------------------\n\nTITLE: XposedHelpers Method Call Utilities\nDESCRIPTION: Methods for dynamically calling methods on objects or static methods on classes. These utilities abstract the reflection API to simplify method invocation.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_053.txt#_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Object callMethod(java.lang.Object, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\nmethod public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object...);\nmethod public static java.lang.Object callStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], java.lang.Object...);\nmethod public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Object...);\nmethod public static java.lang.Object newInstance(java.lang.Class<?>, java.lang.Class<?>[], java.lang.Object...);\n```\n\n----------------------------------------\n\nTITLE: SELinux Helper Methods\nDESCRIPTION: This class provides helper methods to interact with SELinux on the Android system. It allows retrieval of the application data file service and the current SELinux context.  It also provides methods to check if SELinux is enabled and enforced.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_060.txt#_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static de.robv.android.xposed.services.BaseService getAppDataFileService();\nmethod public static java.lang.String getContext();\nmethod public static boolean isSELinuxEnabled();\nmethod public static boolean isSELinuxEnforced();\n```\n\n----------------------------------------\n\nTITLE: Defining processName Field in Xposed LoadPackageParam (Java)\nDESCRIPTION: Defines a public String field `processName` within the `XC_LoadPackage.LoadPackageParam` class. This field holds the name of the process (e.g., 'com.example.app', 'com.example.app:remote') where the package is being loaded.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_27\n\nLANGUAGE: java\nCODE:\n```\nfield public java.lang.String processName;\n```\n\n----------------------------------------\n\nTITLE: Defining IXposedHookZygoteInit Interface (Java API)\nDESCRIPTION: Defines the abstract interface `IXposedHookZygoteInit` within `de.robv.android.xposed`. Implementations define the `initZygote` method to perform actions during the Zygote process initialization.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract interface IXposedHookZygoteInit {\n    method public abstract void initZygote(de.robv.android.xposed.IXposedHookZygoteInit.StartupParam) throws java.lang.Throwable;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining checkFileExists Method in Xposed BaseService (Java)\nDESCRIPTION: Defines a public method `checkFileExists` in `BaseService`. It's a convenience method that likely uses `checkFileAccess` with `F_OK` to determine if a file exists at the given path.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_41\n\nLANGUAGE: java\nCODE:\n```\nmethod public boolean checkFileExists(java.lang.String);\n```\n\n----------------------------------------\n\nTITLE: Defining IXposedHookCmdInit Interface (Java API)\nDESCRIPTION: Defines the deprecated abstract interface `IXposedHookCmdInit` within `de.robv.android.xposed`. Implementations define the `initCmdApp` method to hook the initialization of command-line applications.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract deprecated interface IXposedHookCmdInit {\n    method public abstract void initCmdApp(de.robv.android.xposed.IXposedHookCmdInit.StartupParam) throws java.lang.Throwable;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining getFileInputStream Method in Xposed BaseService (Java)\nDESCRIPTION: Defines a public method `getFileInputStream` in `BaseService`. It attempts to open the file at the specified path and return a `java.io.InputStream` for reading its content. May throw `IOException`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_42\n\nLANGUAGE: java\nCODE:\n```\nmethod public java.io.InputStream getFileInputStream(java.lang.String) throws java.io.IOException;\n```\n\n----------------------------------------\n\nTITLE: Defining IXposedHookZygoteInit.StartupParam Class (Java API)\nDESCRIPTION: Defines the final static inner class `IXposedHookZygoteInit.StartupParam` within `de.robv.android.xposed`. It holds parameters passed to `initZygote`, including the module path and a flag indicating if the system server is starting.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_12\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public static final class IXposedHookZygoteInit.StartupParam {\n    field public java.lang.String modulePath;\n    field public boolean startsSystemServer;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Android Application Helper Utilities (Java)\nDESCRIPTION: Defines the `AndroidAppHelper` final class in the `android.app` package. Provides static methods to access the current Application object, ApplicationInfo, package name, process name, and deprecated methods for accessing SharedPreferences of other packages.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage android.app {\n\n  public final class AndroidAppHelper {\n    method public static android.app.Application currentApplication();\n    method public static android.content.pm.ApplicationInfo currentApplicationInfo();\n    method public static java.lang.String currentPackageName();\n    method public static java.lang.String currentProcessName();\n    method public static deprecated android.content.SharedPreferences getDefaultSharedPreferencesForPackage(java.lang.String);\n    method public static deprecated android.content.SharedPreferences getSharedPreferencesForPackage(java.lang.String, java.lang.String, int);\n    method public static deprecated void reloadSharedPreferencesIfNeeded(android.content.SharedPreferences);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XCallback.Param Constructor in Xposed API (Java)\nDESCRIPTION: Defines a protected deprecated constructor for the `XCallback.Param` class. This indicates that parameter objects are typically created internally by the framework rather than directly by modules.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_35\n\nLANGUAGE: java\nCODE:\n```\nctor protected deprecated XCallback.Param();\n```\n\n----------------------------------------\n\nTITLE: Defining PRIORITY_DEFAULT Field in Xposed XCallback (Java)\nDESCRIPTION: Defines a public static final integer field `PRIORITY_DEFAULT` with a value of 50 in the `XCallback` class. This constant represents the standard priority level for Xposed callbacks.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_30\n\nLANGUAGE: java\nCODE:\n```\nfield public static final int PRIORITY_DEFAULT = 50; // 0x32\n```\n\n----------------------------------------\n\nTITLE: Defining XCallback Constructor in Xposed API (Java)\nDESCRIPTION: Defines a deprecated public constructor for the `XCallback` class. This constructor might be present for compatibility but indicates that direct instantiation might not be the intended or preferred method.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_29\n\nLANGUAGE: java\nCODE:\n```\nctor public deprecated XCallback();\n```\n\n----------------------------------------\n\nTITLE: Defining content Field in Xposed FileResult (Java)\nDESCRIPTION: Defines a public final byte array field `content` in the `FileResult` class. This field holds the entire or partial content of a file read by a `BaseService` method, if applicable.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_56\n\nLANGUAGE: java\nCODE:\n```\nfield public final byte[] content;\n```\n\n----------------------------------------\n\nTITLE: AndroidAppHelper API for accessing Android application context in Java\nDESCRIPTION: The AndroidAppHelper class provides utilities to access the current application context, package name, process information, and shared preferences. It includes methods for retrieving application context and managing shared preferences.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_039.txt#_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage android.app {\n\n  public final class AndroidAppHelper {\n    method public static android.app.Application currentApplication();\n    method public static android.content.pm.ApplicationInfo currentApplicationInfo();\n    method public static java.lang.String currentPackageName();\n    method public static java.lang.String currentProcessName();\n    method public static deprecated android.content.SharedPreferences getDefaultSharedPreferencesForPackage(java.lang.String);\n    method public static deprecated android.content.SharedPreferences getSharedPreferencesForPackage(java.lang.String, java.lang.String, int);\n    method public static deprecated void reloadSharedPreferencesIfNeeded(android.content.SharedPreferences);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Layout Inflation Unhook Interface in Java for Xposed Framework\nDESCRIPTION: This snippet defines the XC_LayoutInflated.Unhook class implementing IXUnhook interface, which provides methods to retrieve the associated callback, return an identifier, and remove (unhook) the hook. This class enables dynamic management of hooks related to layout inflation events in the Xposed environment. It depends on de.robv.android.xposed.callbacks interfaces. It has no parameters and outputs control over hook state.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_21\n\nLANGUAGE: Java\nCODE:\n```\npublic class XC_LayoutInflated.Unhook implements de.robv.android.xposed.callbacks.IXUnhook {\nmethod public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\nmethod public int getId();\nmethod public void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XposedHelpers Error Classes in Java\nDESCRIPTION: Defines custom static final inner Error classes (`ClassNotFoundError`, `InvocationTargetError`) within `XposedHelpers`. These are thrown by helper methods to indicate specific reflection failures, such as failing to find a specified class or encountering an error during method/constructor invocation.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_14\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XposedHelpers.ClassNotFoundError extends java.lang.Error {\n}\n\npublic static final class XposedHelpers.InvocationTargetError extends java.lang.Error {\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XModuleResources API in Java\nDESCRIPTION: Defines the `XModuleResources` class within the `android.content.res` package, extending `android.content.res.Resources`. It's used by Xposed modules to manage their own resources, providing methods to create instances and forward resource lookups using `XResForwarder`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_082.txt#_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage android.content.res {\n\n  public class XModuleResources extends android.content.res.Resources {\n    method public static android.content.res.XModuleResources createInstance(java.lang.String, android.content.res.XResources);\n    method public android.content.res.XResForwarder fwd(int);\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining checkFileAccess Method in Xposed BaseService (Java)\nDESCRIPTION: Defines an abstract public method `checkFileAccess` in `BaseService`. Implementations must check if a file at the specified path is accessible according to the given access mode flags (R_OK, W_OK, X_OK, F_OK).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_40\n\nLANGUAGE: java\nCODE:\n```\nmethod public abstract boolean checkFileAccess(java.lang.String, int);\n```\n\n----------------------------------------\n\nTITLE: Defining XC_InitPackageResources.Unhook Class\nDESCRIPTION: This snippet defines the `XC_InitPackageResources.Unhook` class, implementing `de.robv.android.xposed.callbacks.IXUnhook`. It provides methods to retrieve the callback and unhook. This class allows detaching an initialized resource hook.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_19\n\nLANGUAGE: Java\nCODE:\n```\nmethod public de.robv.android.xposed.callbacks.XC_InitPackageResources getCallback();\nmethod public void unhook();\n```\n\n----------------------------------------\n\nTITLE: XResources.DimensionReplacement Class\nDESCRIPTION: The `DimensionReplacement` class is a helper class within `XResources` for replacing dimension values.  It allows modules to modify dimension values at runtime. It stores the dimension value as a float. Dependencies: `android.util.DisplayMetrics`. Input is dimension value, Output is the dimension related properties.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_052.txt#_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\n  public static class XResources.DimensionReplacement {\n    ctor public XResources.DimensionReplacement(float, int);\n    method public float getDimension(android.util.DisplayMetrics);\n    method public int getDimensionPixelOffset(android.util.DisplayMetrics);\n    method public int getDimensionPixelSize(android.util.DisplayMetrics);\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining IXUnhook Interface Methods (Java Signatures)\nDESCRIPTION: Defines the generic interface `IXUnhook<T>` within the `de.robv.android.xposed.callbacks` package. Implementations of this interface represent a registered hook and provide methods to retrieve the original callback object (`getCallback`) and to remove the hook (`unhook`).\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_12\n\nLANGUAGE: Java Signature\nCODE:\n```\nmethod public abstract T getCallback();\nmethod public abstract void unhook();\n```\n\n----------------------------------------\n\nTITLE: Defining PRIORITY_LOWEST Field in Xposed XCallback (Java)\nDESCRIPTION: Defines a public static final integer field `PRIORITY_LOWEST` with a value of -10000 in the `XCallback` class. This constant represents the lowest possible priority level for Xposed callbacks, ensuring they are executed late.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_32\n\nLANGUAGE: java\nCODE:\n```\nfield public static final int PRIORITY_LOWEST = -10000; // 0xffffd8f0\n```\n\n----------------------------------------\n\nTITLE: Declaring XCallback Abstract Base and Priority Constants in XposedBridge (Java)\nDESCRIPTION: This code defines the abstract XCallback class, including a (deprecated) constructor and integer constants indicating callback invocation priority levels, such as PRIORITY_DEFAULT, PRIORITY_HIGHEST, and PRIORITY_LOWEST. The class also maintains a priority instance field to order callback execution. XCallback is used as a base class for custom event hooks in Xposed modules. Dependencies include the Xposed framework. Inputs are subclass definitions; outputs are customized callback behaviors. Key constraints include honoring priority logic for invocation ordering.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_26\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract class XCallback {\n    ctor public deprecated XCallback();\n    field public static final int PRIORITY_DEFAULT = 50; // 0x32\n    field public static final int PRIORITY_HIGHEST = 10000; // 0x2710\n    field public static final int PRIORITY_LOWEST = -10000; // 0xffffd8f0\n    field public final int priority;\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Module Resources Class (Java)\nDESCRIPTION: Defines the `XModuleResources` class extending `android.content.res.Resources`. Includes a static factory method `createInstance` and a method `fwd` to create an `XResForwarder`, likely used for resource handling within Xposed modules.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public class XModuleResources extends android.content.res.Resources {\n    method public static android.content.res.XModuleResources createInstance(java.lang.String, android.content.res.XResources);\n    method public android.content.res.XResForwarder fwd(int);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PRIORITY_HIGHEST Field in Xposed XCallback (Java)\nDESCRIPTION: Defines a public static final integer field `PRIORITY_HIGHEST` with a value of 10000 in the `XCallback` class. This constant represents the highest possible priority level for Xposed callbacks, ensuring they are executed early.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_31\n\nLANGUAGE: java\nCODE:\n```\nfield public static final int PRIORITY_HIGHEST = 10000; // 0x2710\n```\n\n----------------------------------------\n\nTITLE: Defining Xposed Method Replacement Class (Java)\nDESCRIPTION: Defines the abstract `XC_MethodReplacement` class, extending `XC_MethodHook`. Subclasses override `replaceHookedMethod` to completely replace the original method's logic, preventing the original code from running. Provides static factory methods like `returnConstant` and `DO_NOTHING` for common replacement scenarios.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\npackage de.robv.android.xposed {\n\n  public abstract class XC_MethodReplacement extends de.robv.android.xposed.XC_MethodHook {\n    ctor public XC_MethodReplacement();\n    ctor public XC_MethodReplacement(int);\n    method protected abstract java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam) throws java.lang.Throwable;\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(java.lang.Object);\n    method public static de.robv.android.xposed.XC_MethodReplacement returnConstant(int, java.lang.Object);\n    field public static final de.robv.android.xposed.XC_MethodReplacement DO_NOTHING;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Helper methods in XposedHelpers for Assets\nDESCRIPTION: The `assetAsByteArray` method allows reading an asset as a byte array. It takes a `Resources` object and the asset's path as input and returns the contents as a byte array. This method is useful when you need to load binary resources from an APK's assets.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_050.txt#_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static byte[] assetAsByteArray(android.content.res.Resources, java.lang.String) throws java.io.IOException;\n```\n\n----------------------------------------\n\nTITLE: Defining unhook Method in Xposed XC_LayoutInflated.Unhook (Java)\nDESCRIPTION: Defines a public method `unhook` within the context of an Xposed `Unhook` object. Calling this method removes the specific layout inflation hook registration associated with this object.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_20\n\nLANGUAGE: java\nCODE:\n```\nmethod public void unhook();\n```\n\n----------------------------------------\n\nTITLE: IXUnhook Interface Definition\nDESCRIPTION: Defines the `IXUnhook` interface. This interface specifies a single abstract method `unhook()`.  This interface is part of the Xposed callbacks mechanism, likely used for removing hooks applied to methods or other aspects of the Android system.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_25\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract interface IXUnhook {\n  method public abstract void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining readFile Method in Xposed BaseService (Java)\nDESCRIPTION: Defines an abstract public method `readFile` in `BaseService`. Implementations must read the entire content of the file at the specified path into a byte array. May throw `IOException`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_47\n\nLANGUAGE: java\nCODE:\n```\nmethod public abstract byte[] readFile(java.lang.String) throws java.io.IOException;\n```\n\n----------------------------------------\n\nTITLE: Xposed Framework Custom Errors in Java\nDESCRIPTION: This snippet declares two custom error classes, ClassNotFoundError and InvocationTargetError, extending java.lang.Error to represent specific error cases within the Xposed framework. These are used to signal critical issues during reflection operations or target method invocation failures in hooked methods. They require no additional dependencies and are used as markers for framework-specific runtime errors.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_036.txt#_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npublic static final class XposedHelpers.ClassNotFoundError extends java.lang.Error {\n}\n\npublic static final class XposedHelpers.InvocationTargetError extends java.lang.Error {\n}\n```\n\n----------------------------------------\n\nTITLE: Defining getId Method in Xposed XC_LayoutInflated.Unhook (Java)\nDESCRIPTION: Defines a public method `getId` within the context of an Xposed `Unhook` object for layout inflation hooks. It returns a unique identifier associated with the specific hook registration.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_19\n\nLANGUAGE: java\nCODE:\n```\nmethod public int getId();\n```\n\n----------------------------------------\n\nTITLE: Defining XResources.ResourceNames Class (Java API)\nDESCRIPTION: Defines the static inner class `XResources.ResourceNames` within `android.content.res`. This class encapsulates the different name components (package, type, name) and the ID of a resource, providing an `equals` method for comparison.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_065.txt#_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\npackage android.content.res {\n\n  public static class XResources.ResourceNames {\n    method public boolean equals(java.lang.String, java.lang.String, java.lang.String, int);\n    field public final java.lang.String fullName;\n    field public final int id;\n    field public final java.lang.String name;\n    field public final java.lang.String pkg;\n    field public final java.lang.String type;\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining getFileModificationTime Method in Xposed BaseService (Java)\nDESCRIPTION: Defines a public method `getFileModificationTime` in `BaseService`. It returns the last modified timestamp of the file at the specified path as a long. May throw `IOException` if the file cannot be accessed.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_44\n\nLANGUAGE: java\nCODE:\n```\nmethod public long getFileModificationTime(java.lang.String) throws java.io.IOException;\n```\n\n----------------------------------------\n\nTITLE: Defining R_OK Field in Xposed BaseService (Java)\nDESCRIPTION: Defines a public static final integer field `R_OK` with a value of 4 in the `BaseService` class. This constant is used with `checkFileAccess` to test if a file is readable.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_52\n\nLANGUAGE: java\nCODE:\n```\nfield public static final int R_OK = 4; // 0x4\n```\n\n----------------------------------------\n\nTITLE: Defining W_OK Field in Xposed BaseService (Java)\nDESCRIPTION: Defines a public static final integer field `W_OK` with a value of 2 in the `BaseService` class. This constant is used with `checkFileAccess` to test if a file is writable.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_53\n\nLANGUAGE: java\nCODE:\n```\nfield public static final int W_OK = 2; // 0x2\n```\n\n----------------------------------------\n\nTITLE: IXUnhook Interface for Unhooking Callbacks in Java\nDESCRIPTION: Interface that defines the contract for unhooking callbacks in Xposed. Implementations provide a way to remove hooks that were previously registered, allowing for cleanup and resource management.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_000.txt#_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npublic abstract interface IXUnhook {\n  method public abstract void unhook();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining XResForwarder Class in Java\nDESCRIPTION: Defines the `XResForwarder` class within the `android.content.res` package. Instances of this class seem to hold a reference to a Resources object and an ID, likely used to facilitate forwarding or redirecting resource requests.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/current.txt#_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage android.content.res {\n\n  public class XResForwarder {\n    ctor public XResForwarder(android.content.res.Resources, int);\n    method public int getId();\n    method public android.content.res.Resources getResources();\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining stream Field in Xposed FileResult (Java)\nDESCRIPTION: Defines a public final InputStream field `stream` in the `FileResult` class. This field holds an input stream for reading file content, potentially for a specific range.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_59\n\nLANGUAGE: java\nCODE:\n```\nfield public final java.io.InputStream stream;\n```\n\n----------------------------------------\n\nTITLE: Defining size Field in Xposed FileResult (Java)\nDESCRIPTION: Defines a public final long field `size` in the `FileResult` class. This field stores the size of the file in bytes.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_58\n\nLANGUAGE: java\nCODE:\n```\nfield public final long size;\n```\n\n----------------------------------------\n\nTITLE: Defining getCallback Method in Xposed XC_LayoutInflated.Unhook (Java)\nDESCRIPTION: Defines a public method `getCallback` within the context of an Xposed `Unhook` object for layout inflation hooks. It returns the original `XC_LayoutInflated` callback instance that was unhooked.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_18\n\nLANGUAGE: java\nCODE:\n```\nmethod public de.robv.android.xposed.callbacks.XC_LayoutInflated getCallback();\n```\n\n----------------------------------------\n\nTITLE: Defining IXUnhook Interface\nDESCRIPTION: This snippet defines the `IXUnhook` interface, which declares a single method `unhook()`. This interface is likely used to represent an object that can be used to remove or disable a hook that has been set by Xposed.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_037.txt#_snippet_16\n\nLANGUAGE: Java\nCODE:\n```\nmethod public abstract void unhook();\n```\n\n----------------------------------------\n\nTITLE: Defining readFile (access/ranged) Method in Xposed BaseService (Java)\nDESCRIPTION: Defines an abstract public method `readFile` in `BaseService` combining access check and ranged reading. Implementations must return a `de.robv.android.xposed.services.FileResult`. May throw `IOException`.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_49\n\nLANGUAGE: java\nCODE:\n```\nmethod public abstract de.robv.android.xposed.services.FileResult readFile(java.lang.String, int, int, long, long) throws java.io.IOException;\n```\n\n----------------------------------------\n\nTITLE: Defining F_OK Field in Xposed BaseService (Java)\nDESCRIPTION: Defines a public static final integer field `F_OK` with a value of 0 in the `BaseService` class. This constant is used with `checkFileAccess` to test for the existence of a file.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_51\n\nLANGUAGE: java\nCODE:\n```\nfield public static final int F_OK = 0; // 0x0\n```\n\n----------------------------------------\n\nTITLE: Defining X_OK Field in Xposed BaseService (Java)\nDESCRIPTION: Defines a public static final integer field `X_OK` with a value of 1 in the `BaseService` class. This constant is used with `checkFileAccess` to test if a file is executable.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_54\n\nLANGUAGE: java\nCODE:\n```\nfield public static final int X_OK = 1; // 0x1\n```\n\n----------------------------------------\n\nTITLE: Defining mtime Field in Xposed FileResult (Java)\nDESCRIPTION: Defines a public final long field `mtime` in the `FileResult` class. This field stores the last modification timestamp (in milliseconds since epoch) of the file.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_57\n\nLANGUAGE: java\nCODE:\n```\nfield public final long mtime;\n```\n\n----------------------------------------\n\nTITLE: Defining setObjectExtra Method in Xposed XCallback.Param (Java)\nDESCRIPTION: Defines a public method `setObjectExtra` in the `XCallback.Param` class. It allows storing an arbitrary `java.lang.Object` value associated with a String key within the parameter bundle.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_38\n\nLANGUAGE: java\nCODE:\n```\nmethod public void setObjectExtra(java.lang.String, java.lang.Object);\n```\n\n----------------------------------------\n\nTITLE: Declaring XposedBridge Version Field (Java Signature)\nDESCRIPTION: Defines the deprecated static integer field `XPOSED_BRIDGE_VERSION` within the `XposedBridge` class, intended to hold the version of the Xposed Bridge.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_081.txt#_snippet_8\n\nLANGUAGE: Java Signature\nCODE:\n```\nfield public static deprecated int XPOSED_BRIDGE_VERSION;\n```\n\n----------------------------------------\n\nTITLE: XposedBridge Version Field Definition\nDESCRIPTION: Defines a public static integer field named `XPOSED_BRIDGE_VERSION`. This field likely holds the version number of the Xposed Bridge.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_042.txt#_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\nfield public static int XPOSED_BRIDGE_VERSION;\n```\n\n----------------------------------------\n\nTITLE: Accessing SharedPreferences (Deprecated)\nDESCRIPTION: These deprecated methods are used to access shared preferences for packages.  `getDefaultSharedPreferencesForPackage` retrieves the default preferences, while `getSharedPreferencesForPackage` retrieves a specific set of preferences by name. `reloadSharedPreferencesIfNeeded` is also present.\nSOURCE: https://github.com/rovo89/xposedbridge/blob/art/app/doclib/api/xposed_060.txt#_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nmethod public static deprecated android.content.SharedPreferences getDefaultSharedPreferencesForPackage(java.lang.String);\nmethod public static deprecated android.content.SharedPreferences getSharedPreferencesForPackage(java.lang.String, java.lang.String, int);\nmethod public static deprecated void reloadSharedPreferencesIfNeeded(android.content.SharedPreferences);\n```"
  }
]
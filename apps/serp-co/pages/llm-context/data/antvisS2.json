[
  {
    "owner": "antvis",
    "repo": "s2",
    "content": "TITLE: Installing AntV S2 via Package Managers\nDESCRIPTION: Commands to install AntV S2 using npm or yarn package managers\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/getting-started.en.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# npm\n$ npm install @antv/s2\n\n# yarn\n$ yarn add @antv/s2\n```\n\n----------------------------------------\n\nTITLE: Rendering S2 Table\nDESCRIPTION: TypeScript code to initialize and render the S2 PivotSheet component\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/README.en-US.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PivotSheet } from '@antv/s2';\n\nasync function bootstrap() {\n  const container = document.getElementById('container');\n\n  const s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\n  await s2.render();\n}\n\nbootstrap()\n```\n\n----------------------------------------\n\nTITLE: Hiding Column Headers in S2\nDESCRIPTION: Setting the column header height to zero to hide column headers completely in S2 tables.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.en.md#2025-04-22_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    colCell: {\n      height: 0,\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing TableSheet with Basic Configuration\nDESCRIPTION: Core implementation of TableSheet with data configuration and rendering. Sets up columns, metadata, and renders the table with specified options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/table-mode.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TableSheet } from \"@antv/s2\";\n\n// 准备数据\nconst data = [\n  {\n    province: \"浙江\",\n    city: \"杭州\",\n    type: \"笔\",\n    price: \"1\",\n  },\n  {\n    province: \"浙江\",\n    city: \"杭州\",\n    type: \"纸张\",\n    price: \"2\",\n  },\n];\n\n// 配置数据\nconst s2DataConfig = {\n  fields: {\n    columns: [\"province\", \"city\", \"type\", \"price\"], // 要展示的列头字段 id 列表\n  },\n  meta: [\n    // 列头字段对应的元信息，比如展示的中文名\n    {\n      field: \"province\",\n      name: \"省份\",\n    },\n    {\n      field: \"city\",\n      name: \"城市\",\n    },\n    {\n      field: \"type\",\n      name: \"类型\",\n    },\n    {\n      field: \"price\",\n      name: \"价格\",\n    },\n  ],\n  data,\n};\n\n// 渲染\nasync function bootstrap() {\n  const container = document.getElementById('container');\n  const s2 = new TableSheet(container, dataCfg, options);\n\n  await s2.render();\n}\n\nbootstrap()\n```\n\n----------------------------------------\n\nTITLE: Basic Table Rendering with PivotSheet\nDESCRIPTION: Code to initialize and render a basic pivot table using S2 core\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/getting-started.en.md#2025-04-22_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nimport { PivotSheet } from '@antv/s2';\n\nasync function run() {\n  const container = document.getElementById('container');\n\n  const s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\n  await s2.render(); // return Promise\n}\n\nrun();\n```\n\n----------------------------------------\n\nTITLE: Generating Custom Palette from Theme Color in S2 Table with JavaScript\nDESCRIPTION: Shows how to automatically generate a color palette based on a theme color by using getPalette and generatePalette functions. This approach simplifies theme creation by deriving colors from a single brand color.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/theme.en.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport { getPalette, generatePalette, PivotSheet } from '@antv/s2';\n\nconst s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\n// 主题色\nconst themeColor = '#EA1720';\n// 使用内置的 colorful 色板作为参考色板\n// 根据风格差异，你也可以选择 default、gray 作为参考色板\nconst palette = getPalette('colorful');\n// 使用参考色板 & 主题色值生成新色板\nconst newPalette = generatePalette({ ...palette, brandColor: themeColor });\n\n// 使用新色板设置主题\ns2.setThemeCfg({\n  palette: newPalette,\n});\ns2.render(false);\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Table with AntV S2 in JavaScript\nDESCRIPTION: This code snippet demonstrates how to create a basic table using AntV S2. It imports the necessary components, prepares the data and fields, and renders the table with specified options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/basic/table/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { TableSheet } from '@antv/s2';\n\nconst s2DataConfig = {\n  fields: {\n    columns: ['province', 'city', 'type', 'price'],\n  },\n  data: [\n    {\n      province: '浙江',\n      city: '杭州',\n      type: '笔',\n      price: '1',\n    },\n    {\n      province: '浙江',\n      city: '杭州',\n      type: '纸张',\n      price: '2',\n    },\n    {\n      province: '浙江',\n      city: '舟山',\n      type: '笔',\n      price: '17',\n    },\n    {\n      province: '浙江',\n      city: '舟山',\n      type: '纸张',\n      price: '0.5',\n    },\n    {\n      province: '吉林',\n      city: '长春',\n      type: '笔',\n      price: '8',\n    },\n    {\n      province: '吉林',\n      city: '白山',\n      type: '笔',\n      price: '9',\n    },\n    {\n      province: '吉林',\n      city: '长春',\n      type: '纸张',\n      price: '3',\n    },\n    {\n      province: '吉林',\n      city: '白山',\n      type: '纸张',\n      price: '1',\n    },\n  ],\n};\n\nconst s2Options = {\n  width: 600,\n  height: 480,\n};\n\nconst container = document.getElementById('container');\n\nconst s2 = new TableSheet(container, s2DataConfig, s2Options);\n\ns2.render();\n```\n\n----------------------------------------\n\nTITLE: Configuring Frozen Rows and Columns in S2 Table\nDESCRIPTION: Shows how to set up frozen rows and columns in the S2 table by configuring the frozen property in s2Options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/table-mode.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  frozen: {\n    rowCount: number; // 冻结行的数量，从顶部开始计数\n    trailingRowCount: number; // 冻结行数量，从底部开始计数\n    colCount: number; // 冻结列的数量，从左侧开始计数\n    trailingColCount: number; // 冻结列的数量，从右侧开始计数\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Bar Chart Renderer with @antv/g2 in S2\nDESCRIPTION: This code snippet demonstrates how to create a custom bar chart renderer using @antv/g2 within S2. It defines a BarChart class that extends S2's BaseCellRenderer to render bar charts inside S2 cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/chart-with-g2.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Chart } from '@antv/g2';\nimport { Group } from '@antv/g-canvas';\nimport { BaseCellRenderer, SpreadSheet } from '@antv/s2';\n\nclass BarChart extends BaseCellRenderer {\n  chart: Chart;\n\n  // custom renderer implementation\n  drawChartShape(s2: SpreadSheet, viewMeta: ViewMeta) {\n    const { x, y, width, height, data } = viewMeta;\n    const chartCanvas = document.createElement('canvas');\n    chartCanvas.style.width = `${width}px`;\n    chartCanvas.style.height = `${height}px`;\n    const chart = new Chart({\n      container: chartCanvas,\n      width,\n      height,\n      autoFit: true,\n    });\n\n    chart.data(data);\n    chart.interval().position('type*value').color('type');\n    chart.render();\n\n    this.chart = chart;\n\n    const group = new Group();\n    const image = group.addShape('image', {\n      attrs: {\n        x,\n        y,\n        width,\n        height,\n        img: chartCanvas.toDataURL(),\n      },\n    });\n\n    return image;\n  }\n\n  // implement necessary lifecycle methods\n  onAfterUpdate(_params: UpdateParams) {\n    this.chart?.destroy();\n  }\n\n  destroy() {\n    this.chart?.destroy();\n  }\n}\n\n// register custom renderer\nSpreadSheet.registerRenderer('barChart', BarChart);\n```\n\n----------------------------------------\n\nTITLE: Setting up S2 SheetComponent in Vue3\nDESCRIPTION: Demonstrates how to configure and use the S2 SheetComponent in a Vue3 component file. Shows the setup of data configuration, options, and component registration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/getting-started.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// App.vue\n<script lang=\"ts\">\nimport type { S2DataConfig, S2Options } from '@antv/s2';\nimport { SheetComponent } from '@antv/s2-vue';\nimport { defineComponent, onMounted, reactive, ref, shallowRef } from 'vue';\nimport \"@antv/s2-vue/dist/s2-vue.min.css\";\n\nexport default defineComponent({\n  setup() {\n    // dataCfg 数据字段较多，建议使用 shallow, 如果有数据更改直接替换整个对象\n    const dataCfg = shallowRef(s2DataConfig);\n    const options: S2Options = reactive(s2Options);\n\n    return {\n      dataCfg,\n      options,\n    };\n  },\n\n  components: {\n    SheetComponent,\n  },\n});\n</script>\n\n<template>\n  <SheetComponent :dataCfg=\"dataCfg\" :options=\"options\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Configuring Row Header Fields in S2 Pivot Table\nDESCRIPTION: Demonstrates how to configure the row header fields in the S2 data configuration object. This example sets 'province' and 'city' as row analysis dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/base-concept.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city']\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Sheet Options in TypeScript\nDESCRIPTION: Defines basic configuration options for S2 sheet including width and height dimensions set to 600px.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/introduction.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 600\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing S2DataConfig in TypeScript\nDESCRIPTION: Basic structure of the S2DataConfig object, including data, meta, sortParams, and fields (rows, columns, values).\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-data-config.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  data: [],\n  meta: [],\n  sortParams: [],\n  fields: {\n    rows: [],\n    columns: [],\n    values: []\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using TableSheet with React via Direct Integration\nDESCRIPTION: Example of integrating TableSheet directly with React using useRef and useEffect hooks, with handling for React 18 StrictMode's double rendering.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/table-mode.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from \"react\";\nimport { TableSheet } from '@antv/s2';\n\nconst s2Options = {\n  width: 400,\n  height: 200,\n};\n\nconst App = () => {\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\n  const shouldInit = React.useRef(true);\n  const isDevMode = React.useMemo(() => {\n    try {\n      return process.env['NODE_ENV'] !== 'production';\n    } catch {\n      return false;\n    }\n  }, []);\n\n  React.useEffect(() => {\n    // 兼容 React 18 StrictMode 开发环境下渲染两次\n    if (isDevMode && !shouldInit.current) {\n      return;\n    }\n\n    const s2 = new TableSheet(container, dataCfg, s2Options);\n    shouldInit.current = false;\n\n    return () => {\n      s2?.destroy?.();\n    };\n  }, []);\n\n  return <div id=\"container\" ref={containerRef} />\n}\n```\n\n----------------------------------------\n\nTITLE: React Component Implementation\nDESCRIPTION: Example showing how to use S2 as a React component with required styles\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/getting-started.en.md#2025-04-22_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { SheetComponent } from '@antv/s2-react';\nimport '@antv/s2-react/dist/s2-react.min.css';\n\nconst container = document.getElementById('container');\n\nReactDOM.render(\n  <SheetComponent\n    dataCfg={s2DataConfig}\n    options={s2Options}\n  />,\n  document.getElementById('container'),\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing an Editable Table with S2-React Components\nDESCRIPTION: Complete example showing how to create an editable table using the SheetComponent from @antv/s2-react. The code demonstrates data preparation, configuration, and rendering of an editable sheet with sample data for provinces, cities, types, and prices.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/editable-mode.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { SheetComponent } from '@antv/s2-react';\nimport '@antv/s2-react/dist/s2-react.min.css';\n\n// 1. 准备数据\nconst data = [\n  {\n    \"province\": \"浙江\",\n    \"city\": \"杭州\",\n    \"type\": \"笔\",\n    \"price\": 1\n  },\n  {\n    \"province\": \"浙江\",\n    \"city\": \"杭州\",\n    \"type\": \"纸张\",\n    \"price\": 2\n  },\n  {\n    \"province\": \"浙江\",\n    \"city\": \"舟山\",\n    \"type\": \"笔\",\n    \"price\": 17\n  },\n  {\n    \"province\": \"浙江\",\n    \"city\": \"舟山\",\n    \"type\": \"纸张\",\n    \"price\": 6\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"长春\",\n    \"type\": \"笔\",\n    \"price\": 8\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"白山\",\n    \"type\": \"笔\",\n    \"price\": 12\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"长春\",\n    \"type\": \"纸张\",\n    \"price\": 3\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"白山\",\n    \"type\": \"纸张\",\n    \"price\": 25\n  },\n\n  {\n    \"province\": \"浙江\",\n    \"city\": \"杭州\",\n    \"type\": \"笔\",\n    \"price\": 20\n  },\n  {\n    \"province\": \"浙江\",\n    \"city\": \"杭州\",\n    \"type\": \"纸张\",\n    \"price\": 10\n  },\n  {\n    \"province\": \"浙江\",\n    \"city\": \"舟山\",\n    \"type\": \"笔\",\n    \"price\": 15\n  },\n  {\n    \"province\": \"浙江\",\n    \"city\": \"舟山\",\n    \"type\": \"纸张\",\n    \"price\": 2\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"长春\",\n    \"type\": \"笔\",\n    \"price\": 15\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"白山\",\n    \"type\": \"笔\",\n    \"price\": 30\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"长春\",\n    \"type\": \"纸张\",\n    \"price\": 40\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"白山\",\n    \"type\": \"纸张\",\n    \"price\": 50\n  }\n];\n\n// 2. 配置数据\nconst s2DataCfg = {\n  fields: {\n    columns: [\"province\", \"city\", \"type\", \"price\"], // 要展示的列头字段 id 列表\n  },\n  meta: [\n    // 列头字段对应的元信息，比如展示的中文名\n    {\n      field: \"province\",\n      name: \"省份\",\n    },\n    {\n      field: \"city\",\n      name: \"城市\",\n    },\n    {\n      field: \"type\",\n      name: \"类型\",\n    },\n    {\n      field: \"price\",\n      name: \"价格\",\n    },\n  ],\n  data,\n};\n\n// 3. 添加配置\nconst s2Options = {\n  width: 400,\n  height: 200,\n};\n\n// 4, 渲染\nReactDOM.render(\n  <SheetComponent\n    sheetType=\"editable\" // 此处指定sheetType为editable\n    dataCfg={s2DataCfg}\n    options={s2Options}\n  />,\n  document.getElementById('container')\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing and Rendering a PivotSheet with S2\nDESCRIPTION: Demonstrates how to create and render a pivot table using S2. This example fetches data from a URL, creates a new PivotSheet instance with custom dimensions, and renders it in the container.\nSOURCE: https://github.com/antvis/s2/blob/next/README.en-US.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PivotSheet } from '@antv/s2';\n\nasync function bootstrap() {\n  const container = document.getElementById('container');\n\n  const s2DataConfig = await fetch('https://gw.alipayobjects.com/os/bmw-prod/2a5dbbc8-d0a7-4d02-b7c9-34f6ca63cff6.json')\n    .then(r => r.json())\n\n  const s2 = new PivotSheet(container, s2DataConfig, {\n    width: 600,\n    height: 300,\n  });\n\n  await s2.render();\n}\n\nbootstrap()\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Tooltip Class in TypeScript\nDESCRIPTION: This snippet demonstrates how to create a custom tooltip class by extending the BaseTooltip class. It shows the structure for overriding methods like show, hide, destroy, and renderContent.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BaseTooltip, SpreadSheet } from '@antv/s2';\n// 引入 `tooltip` 样式文件\nimport \"@antv/s2/dist/s2.min.css\";\n\nexport class CustomTooltip extends BaseTooltip {\n  constructor(spreadsheet: SpreadSheet) {\n    super(spreadsheet);\n  }\n\n  renderContent() {\n  }\n\n  clearContent() {\n  }\n\n  show(showOptions) {\n    console.log(this.spreadsheet)\n  }\n\n  hide() {\n  }\n\n  destroy() {\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Selected Cells in AntV S2\nDESCRIPTION: This code shows how to listen for global selection events to get all selected cells, and how to use interaction methods to access cell selection information.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ns2.on(S2Event.GLOBAL_SELECTED, (cells) => {\n  console.log('选中的单元格', cells)\n})\n```\n\nLANGUAGE: typescript\nCODE:\n```\ns2.interaction.getAllCells() // 获取行/列/数值区域所有单元格\ns2.interaction.getCells() // 获取所有激活的单元格 （包含不在可视范围内的）\ns2.interaction.getActiveCells() // 获取所有激活的单元格 （不含不在可视范围内的）\ns2.interaction.isSelectedState() // 是否是选中状态\n```\n\n----------------------------------------\n\nTITLE: Implementing S2 Table with React Component\nDESCRIPTION: Demonstrates how to use the SheetComponent from @antv/s2-react to create a table. Includes data preparation, configuration, and rendering steps.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/table-mode.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { SheetComponent } from '@antv/s2-react';\nimport '@antv/s2-react/dist/s2-react.min.css';\n\n// 1. 准备数据\nconst data = [\n  {\n    province: \"浙江\",\n    city: \"杭州\",\n    type: \"笔\",\n    price: \"1\",\n  },\n  {\n    province: \"浙江\",\n    city: \"杭州\",\n    type: \"纸张\",\n    price: \"2\",\n  },\n];\n\n// 2. 配置数据\nconst s2DataConfig = {\n  fields: {\n    columns: [\"province\", \"city\", \"type\", \"price\"], // 要展示的列头字段 id 列表\n  },\n  meta: [\n    // 列头字段对应的元信息，比如展示的中文名\n    {\n      field: \"province\",\n      name: \"省份\",\n    },\n    {\n      field: \"city\",\n      name: \"城市\",\n    },\n    {\n      field: \"type\",\n      name: \"类型\",\n    },\n    {\n      field: \"price\",\n      name: \"价格\",\n    },\n  ],\n  data,\n};\n\n// 3. 添加配置\nconst s2Options = {\n  width: 400,\n  height: 200,\n};\n\n// 4, 渲染\nReactDOM.render(\n  <SheetComponent\n    sheetType=\"table\"\n    dataCfg={s2DataConfig}\n    options={s2Options}\n  />,\n  document.getElementById('container')\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Data Structure\nDESCRIPTION: TypeScript configuration object for S2 showing the data structure with fields (rows, columns, values) and sample data array containing province, city, type, price, and cost information.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/introduction.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type'],\n    values: ['price'],\n  },\n  data: [\n    {\n      province: \"浙江\",\n      city: \"杭州\",\n      type: \"笔\",\n      price: \"1\",\n    },\n    {\n      province: \"浙江\",\n      city: \"杭州\",\n      type: \"纸张\",\n      price: \"2\",\n    },\n    {\n      province: \"浙江\",\n      city: \"舟山\",\n      type: \"笔\",\n      price: \"17\",\n    },\n    {\n      province: \"浙江\",\n      city: \"舟山\",\n      type: \"纸张\",\n      price: \"6\",\n    },\n    {\n      province: \"吉林\",\n      city: \"长春\",\n      type: \"笔\",\n      price: \"8\",\n    },\n    {\n      province: \"吉林\",\n      city: \"白山\",\n      type: \"笔\",\n      price: \"12\",\n    },\n    {\n      province: \"吉林\",\n      city: \"长春\",\n      type: \"纸张\",\n      price: \"3\",\n    },\n    {\n      province: \"吉林\",\n      city: \"白山\",\n      type: \"纸张\",\n      price: \"25\",\n    },\n    {\n      province: \"浙江\",\n      city: \"杭州\",\n      type: \"笔\",\n      cost: \"0.5\",\n    },\n    {\n      province: \"浙江\",\n      city: \"杭州\",\n      type: \"纸张\",\n      cost: \"20\",\n    },\n    {\n      province: \"浙江\",\n      city: \"舟山\",\n      type: \"笔\",\n      cost: \"1.7\",\n    },\n    {\n      province: \"浙江\",\n      city: \"舟山\",\n      type: \"纸张\",\n      cost: \"0.12\",\n    },\n    {\n      province: \"吉林\",\n      city: \"长春\",\n      type: \"笔\",\n      cost: \"10\",\n    },\n    {\n      province: \"吉林\",\n      city: \"白山\",\n      type: \"笔\",\n      cost: \"9\",\n    },\n    {\n      province: \"吉林\",\n      city: \"长春\",\n      type: \"纸张\",\n      cost: \"3\",\n    },\n    {\n      province: \"吉林\",\n      city: \"白山\",\n      type: \"纸张\",\n      cost: \"1\",\n    }\n  ]\n};\n```\n\n----------------------------------------\n\nTITLE: Initializing S2Options in TypeScript for AntV S2\nDESCRIPTION: This code snippet demonstrates how to create an S2Options object with basic configuration for width, height, and hierarchy type. These options are used to initialize and customize the behavior of an S2 table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-options.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 400,\n  hierarchyType: 'grid'\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Theme Properties in JavaScript for AntV S2\nDESCRIPTION: This snippet demonstrates how to create a custom theme by defining various style properties for different components of an S2 spreadsheet. It includes settings for the data cell, header, and overall spreadsheet appearance.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/theme/custom/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst customTheme = {\n  background: {\n    color: '#fff',\n  },\n  splitLine: {\n    horizontalBorderWidth: 1,\n    horizontalBorderColorOpacity: 0.2,\n    horizontalBorderColor: '#000',\n    verticalBorderWidth: 1,\n    verticalBorderColorOpacity: 0.3,\n    verticalBorderColor: '#000',\n  },\n  cornerCell: {\n    cell: {\n      backgroundColor: '#f1f2f3',\n      backgroundColorOpacity: 1,\n    },\n    text: {\n      fill: '#900000',\n    },\n    bolderText: {\n      fill: '#800000',\n      fontSize: 13,\n    },\n  },\n  rowCell: {\n    cell: {\n      backgroundColor: '#f6f7f8',\n      backgroundColorOpacity: 1,\n    },\n    text: {\n      fill: '#800000',\n    },\n    bolderText: {\n      fill: '#800000',\n      fontSize: 12,\n    },\n  },\n  colCell: {\n    cell: {\n      backgroundColor: '#f9f8f7',\n      backgroundColorOpacity: 1,\n    },\n    text: {\n      fill: '#800000',\n    },\n    bolderText: {\n      fill: '#800000',\n      fontSize: 12,\n    },\n  },\n  dataCell: {\n    cell: {\n      backgroundColor: '#fff',\n      backgroundColorOpacity: 1,\n    },\n    text: {\n      fill: '#454545',\n    },\n    bolderText: {\n      fill: '#262626',\n      fontSize: 12,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Rendering S2 Table Component in React\nDESCRIPTION: React JSX component implementation for rendering the S2 table. Imports the SheetComponent from the @antv/s2-react package and required CSS, then renders it with the data configuration and options objects.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/README.md#2025-04-22_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'React'\nimport { SheetComponent } from '@antv/s2-react';\nimport '@antv/s2-react/dist/s2-react.min.css';\n\nconst App = () => {\n  return (\n    <SheetComponent\n      dataCfg={s2DataConfig}\n      options={s2Options}\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering S2 React Component with Drill Down Functionality\nDESCRIPTION: This snippet shows how to use the SheetComponent from @antv/s2-react to render a sheet with drill down functionality. It sets up the component with necessary props including dataCfg, options, and partDrillDown configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/drill-down.en.md#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { SheetComponent } from '@antv/s2-react';\n\nconst s2Options = {\n  hierarchyType: 'tree', // 树形结构\n};\n\nReactDOM.render(\n  <SheetComponent\n    dataCfg={s2DataConfig}\n    options={s2Options}\n    partDrillDown={PartDrillDown}\n  />,\n  document.getElementById('container'),\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Row/Column Selection in S2 Grid with TypeScript\nDESCRIPTION: This code creates custom interactions for row and column selection in S2 grid. It demonstrates implementing different selection behaviors for rows and columns through custom interaction classes.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BaseEvent, HoverEvent, RowColumnClick, ViewMeta } from '@antv/s2';\n\n// Custom row selection\nclass CustomRowSelection extends BaseEvent {\n  bindEvents() {\n    this.spreadsheet.on(S2Event.ROW_CELL_CLICK, (event) => {\n      const cell = event.target;\n      this.selectRow(cell.getMeta(), event);\n    });\n  }\n\n  selectRow(rowMeta: ViewMeta, event: RowColumnClick) {\n    const { colIndex } = rowMeta;\n    const cells = [];\n    s2.facet.getDataCells().forEach((cell) => {\n      const meta = cell.getMeta();\n      if (meta.colIndex === colIndex) {\n        cells.push(cell);\n      }\n    });\n    s2.interaction.setCellsSelected(cells);\n  }\n}\n\n// Custom column selection\nclass CustomColumnSelection extends BaseEvent {\n  bindEvents() {\n    this.spreadsheet.on(S2Event.COL_CELL_CLICK, (event) => {\n      const cell = event.target;\n      this.selectColumn(cell.getMeta(), event);\n    });\n  }\n\n  selectColumn(colMeta: ViewMeta, event: RowColumnClick) {\n    const { rowIndex } = colMeta;\n    const cells = [];\n    s2.facet.getDataCells().forEach((cell) => {\n      const meta = cell.getMeta();\n      if (meta.rowIndex === rowIndex) {\n        cells.push(cell);\n      }\n    });\n    s2.interaction.setCellsSelected(cells);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing React/Vue3 Versions\nDESCRIPTION: Commands to install React or Vue3 versions of AntV S2\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/getting-started.en.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# React\n$ yarn add @antv/s2 @antv/s2-react\n\n# Vue3\n$ yarn add @antv/s2 @antv/s2-vue\n```\n\n----------------------------------------\n\nTITLE: Rendering PivotSheet Component in TypeScript\nDESCRIPTION: Demonstrates how to initialize and render a PivotSheet component using the container element and configuration options. Returns a Promise when rendering is complete.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/introduction.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PivotSheet } from '@antv/s2';\n\nasync function run() {\n  const container = document.getElementById('container');\n\n  const s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\n  await s2.render(); // return Promise\n}\n\nrun();\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Content with JSX in TypeScript\nDESCRIPTION: Demonstrates how to customize tooltip content using JSX elements for @antv/s2-react component usage.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nconst content = (\n   <div>\n     <span>I am custom content</span>\n   </div>\n)\n\nconst s2Options = {\n   tooltip: {\n     content,\n   },\n};\n```\n\n----------------------------------------\n\nTITLE: Accessing S2 Events in React Component\nDESCRIPTION: Example showing how to access the S2 spreadsheet instance in a React component using refs and listen to events. This approach provides direct access to all native S2 events.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event, SpreadSheet } from '@antv/s2'\nimport { SheetComponent } from '@antv/s2-react';\n\nfunction App() {\n  const s2Ref = React.useRef<SpreadSheet>();\n\n  const onSheetMounted = () => {\n    s2Ref.current?.on(S2Event.DATA_CELL_CLICK, (event) => {\n      console.log('onDataCellClick: ', event)\n    })\n  }\n\n  return <SheetComponent ref={s2Ref} onMounted={onSheetMounted}/>\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Container Adaptive Sizing for S2 Tables\nDESCRIPTION: This snippet shows how to make an S2 table adaptive to its container size changes using ResizeObserver and debounce for performance optimization.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PivotSheet } from '@antv/s2'\nimport { debounce } from 'lodash'\n\nconst s2 = new PivotSheet(...)\n\nconst parent = /* 你的容器节点 */\n\nconst debounceRender = debounce((width, height) => {\n  s2.changeSheetSize(width, height)\n  s2.render(false) // 不重新加载数据\n}, 200)\n\nconst resizeObserver = new ResizeObserver(([entry] = []) => {\n  const [size] = entry.borderBoxSize || [];\n  debounceRender(size.inlineSize, size.blockSize)\n});\n\nresizeObserver.observe(parent);\n\n// 取消监听\n// resizeObserver.unobserve(parent)\n```\n\n----------------------------------------\n\nTITLE: Configuring Column Header Cell Dimensions in S2\nDESCRIPTION: Setting the width and height of column header cells in S2. Width adjustments are applied to leaf nodes and remain consistent with value cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.en.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    colCell: {\n      width: 200,\n      height: 60,\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Bottom-Right Alignment for Data Cells in S2 CrossTable\nDESCRIPTION: Code example demonstrating how to configure right alignment with bottom baseline for both bolderText (subtotal/total cells) and regular text (other data cells) in data cells of an S2 CrossTable.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.zh.md#2025-04-22_snippet_11\n\nLANGUAGE: js\nCODE:\n```\ndataCell: {\n   bolderText: {\n    textAlign: 'right',\n    textBaseline: 'bottom',\n  },\n  text: {\n    textAlign: 'right',\n    textBaseline: 'bottom',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing and Using SheetComponent in React with AntV S2\nDESCRIPTION: This code snippet demonstrates how to import and use the SheetComponent from @antv/s2-react. It includes importing the necessary CSS file and rendering the component with a 'pivot' sheet type.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/sheet-component.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SheetComponent } from '@antv/s2-react';\nimport '@antv/s2-react/dist/s2-react.min.css';\n\n<SheetComponent sheetType=\"pivot\" />\n```\n\n----------------------------------------\n\nTITLE: Setting Center Alignment for Column Header Cells in S2 CrossTable\nDESCRIPTION: Code example demonstrating how to configure center alignment for both bolderText (non-leaf dimension cells) and measureText (value cells when placed in column headers) in column header cells of an S2 CrossTable.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.zh.md#2025-04-22_snippet_7\n\nLANGUAGE: js\nCODE:\n```\ncolCell: {\n  bolderText: {\n    textAlign: 'center',\n  },\n  measureText: {\n    textAlign: 'center',\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Data Structure\nDESCRIPTION: TypeScript configuration object defining the data structure, fields, and metadata for the S2 table\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/README.en-US.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type'],\n    values: ['price'],\n  },\n  data: [\n     {\n      province: '浙江',\n      city: '杭州',\n      type: '笔',\n      price: '1',\n    },\n    {\n      province: '浙江',\n      city: '杭州',\n      type: '纸张',\n      price: '2',\n    },\n    {\n      province: '浙江',\n      city: '舟山',\n      type: '笔',\n      price: '17',\n    },\n    {\n      province: '浙江',\n      city: '舟山',\n      type: '纸张',\n      price: '0.5',\n    },\n    {\n      province: '吉林',\n      city: '长春',\n      type: '笔',\n      price: '8',\n    },\n    {\n      province: '吉林',\n      city: '白山',\n      type: '笔',\n      price: '9',\n    },\n    {\n      province: '吉林',\n      city: '长春',\n      type: ' 纸张',\n      price: '3',\n    },\n    {\n      province: '吉林',\n      city: '白山',\n      type: '纸张',\n      price: '1',\n    },\n  ],\n  meta: [\n    {\n      field: 'price',\n      name: '价格',\n    },\n    {\n      field: 'province',\n      name: '省份',\n    },\n    {\n      field: 'city',\n      name: '城市',\n    },\n    {\n      field: 'type',\n      name: '类别',\n    },\n    {\n      field: 'sub_type',\n      name: '子类别',\n    },\n  ]\n};\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Content with DOM in TypeScript\nDESCRIPTION: Shows how to customize tooltip content using DOM elements or strings for @antv/s2 class usage.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst content = document. createElement('div')\ncontent.innerHTML = 'I am custom content'\n\nconst s2Options = {\n   tooltip: {\n     content,\n     // content: 'I am a string'\n   },\n};\n```\n\n----------------------------------------\n\nTITLE: Customizing Numeric Value Formatting in AntV S2\nDESCRIPTION: This snippet shows how to use the formatter function in the meta configuration to customize the formatting of numeric values in AntV S2. The formatter has access to the current cell value, the entire row data, and the cell's metadata.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/formatter.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type', 'sub_type'],\n    values: ['number'],\n  },\n  meta: [\n    {\n      field: 'province',\n      name: '省份',\n    },\n    {\n      field: 'city',\n      name: '城市',\n    },\n    {\n      field: 'type',\n      name: '商品类别',\n    },\n    {\n      field: 'sub_type',\n      name: '子类别',\n    },\n    {\n      field: 'number',\n      name: '数量',\n      formatter: (value, record, meta) => {\n        return `${value / 100} %`\n      },\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing S2 Pivot Table Configuration in React\nDESCRIPTION: This snippet demonstrates how to configure an S2 pivot table component with fields (rows, columns, values) and sample data, then render it using the SheetComponent.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/pivot.en.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst dataCfg = {\n    fields: {\n        rows: ['province', 'city'],\n        columns: ['type', 'sub_type'],\n        values: ['price']\n    },\n    data: [{\n        \"price\": 1,\n        \"province\": \"浙江省\",\n        \"city\": \"杭州市\",\n        \"type\": \"家具\",\n        \"sub_type\": \"桌子\"\n    }, {\n        \"price\": 2,\n        \"province\": \"浙江省\",\n        \"city\": \"绍兴市\",\n        \"type\": \"家具\",\n        \"sub_type\": \"桌子\"\n    }, {\n        \"price\": 3,\n        \"province\": \"浙江省\",\n        \"city\": \"杭州市\",\n        \"type\": \"家具\",\n        \"sub_type\": \"沙发\"\n    }, {\n        \"price\": 4,\n        \"province\": \"浙江省\",\n        \"city\": \"绍兴市\",\n        \"type\": \"家具\",\n        \"sub_type\": \"沙发\"\n    }]\n};\nconst options = {\n    width: 600,\n    height: 600\n};\n\n<SheetComponent\n  dataCfg={dataCfg}\n  options={options}\n  sheetType=\"pivot\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Installing and Running S2 Development Environment\nDESCRIPTION: Commands for setting up the S2 development environment, including cloning the repository, installing dependencies, building, testing, and running different components of the project.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/development.en.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:antvis/S2.git\n\ncd S2\n\n# 切换到 2.x 分支\ngit checkout next\n\n# 安装依赖\npnpm install # 或者 pnpm bootstrap\n\n# 打包\npnpm build\n\n# 调试 s2-core\npnpm core:start\n\n# 调试 s2-react\npnpm react:Playground\n\n# 调试 s2-vue\npnpm vue:Playground\n\n# 单元测试\npnpm test\n\n# 代码风格和类型检测\npnpm lint\n\n# 本地启动官网\npnpm site:start\n```\n\n----------------------------------------\n\nTITLE: Controlling Tooltip Display in TypeScript\nDESCRIPTION: Shows how to enable or disable tooltips globally and for specific cell types using the 'enable' property.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n   tooltip: {\n     enable: true,\n     rowCell: {\n       // Set the line header separately to not display\n       enable: false,\n     }\n   }\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Cell Merging with AntVis S2 PivotSheet\nDESCRIPTION: This code demonstrates how to initialize a pivot sheet with merged cells and implement interactive merge/unmerge functionality through tooltips. It includes configuration for the data structure, merging specifics, and event handlers for cell interactions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/merge-cell.en.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { S2Event } from '@antv/s2';\n\nconst s2DataConfig = {\n  fields: {\n    rows: [ 'province', 'city' ],\n    columns: [ 'type', 'sub_type' ],\n    values: [ 'number' ],\n  },\n  data,\n  meta\n};\n\nconst s2Options = {\n    width: 600,\n    height: 400,\n    seriesNumber: {\n      enable: true\n    },\n    tooltip: {\n      content: TooltipContent,\n    },\n    // 表格渲染后，会展示一个合并单元格\n    mergedCellsInfo: [\n      [\n        { colIndex: 1, rowIndex: 6, showText: true }, // 此单元格的 meta 信息将作为合并单元的 meta 信息\n        { colIndex: 1, rowIndex: 7 },\n        { colIndex: 2, rowIndex: 6 },\n        { colIndex: 2, rowIndex: 7 },\n        { colIndex: 3, rowIndex: 6 },\n        { colIndex: 3, rowIndex: 7 },\n      ]\n    ]\n  }\n;\nconst s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\n// 将单元格合并操作集成到未合并单元格的 tooltip 操作中\nconst dataCellTooltip = () => {\n  button.innerText = '点击合并单元格';\n  button.className = 'merge-cells-button';\n  button.onclick = () => s2.interaction.mergeCells(); // 不传入 cellsInfo 时，默认使用当前选中所有的单元格信息\n  return button;\n}; // （按住 Cmd/ Ctrl 多选）\n\n// 将取消单元格合并操作集成到合并单元格的 tooltip 操作中\nconst mergedCellsTooltip = (mergedCell) => {\n  button.innerText = '取消合并单元格';\n  button.className = 'merge-cells-button';\n  button.onclick = () => s2.interaction.unmergeCell(mergedCell);\n  return button;\n};\n\n// 监听 dataCell 的点击事件，自定义点击后的交互操作\ns2.on(S2Event.DATA_CELL_CLICK, (event) => {\n  s2.tooltip.show({\n    position: { x: event.clientX, y: event.clientY },\n    content: dataCellTooltip(),\n  });\n});\n\n// 监听 mergedCell 的点击事件，自定义点击后的交互操作\ns2.on(S2Event.MERGED_CELLS_CLICK, (event) => {\n  const cell = s2.getCell(event.target);\n  s2.tooltip.show({\n    position: { x: event.clientX, y: event.clientY },\n    content: mergedCellsTooltip(cell),\n  });\n});\n\ns2.render();\n```\n\n----------------------------------------\n\nTITLE: Implementing Table Sheet Links in S2\nDESCRIPTION: Demonstrates how to set up link fields in a table sheet (as opposed to a pivot table), configuring both column headers and values to be displayed as links with click navigation.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/link-jump.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2';\n\nconst s2DataConfig = {\n  fields: {\n    columns: ['type', 'price', 'province', 'city'],\n  },\n};\n\nconst s2Options = {\n  width: 600,\n  height: 600,\n  interaction: {\n    linkFields: ['type', 'price', 'province'],\n  }\n};\n\nconst s2 = new TableSheet(container, s2DataConfig, s2Options);\n\ns2.on(S2Event.GLOBAL_LINK_FIELD_JUMP, (data) => {\n  const { field, meta, record } = data;\n  const value = record?.[field];\n\n  // 拼装自己的跳转地址\n  location.href = `https://path/to/${field}=${value}`;\n});\n\nawait s2.render();\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Tooltip Content in TypeScript\nDESCRIPTION: Shows how to use a callback function to dynamically generate tooltip content based on cell information and default tooltip options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nconst TooltipContent = (props) => <div>\n...\n</div>\n\nconst s2Options = {\n   tooltip: {\n     content: (cell, defaultTooltipShowOptions) => {\n       console.log('Current cell:', cell)\n       console.log('Default tooltip details:', defaultTooltipShowOptions)\n       return <TooltipContent cell = { cell }\n       detail = {detail}\n       />\n     },\n   },\n};\n```\n\n----------------------------------------\n\nTITLE: Extending BaseCell for Custom Cell Implementation in AntV S2 (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to create a custom cell by extending the BaseCell class in AntV S2. It overrides the draw method to implement custom rendering logic for different cell types.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-cell/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Group } from '@antv/g';\nimport { BaseCell, S2CellType } from '@antv/s2';\n\nclass CustomCell extends BaseCell {\n  draw() {\n    // custom draw logic\n    switch (this.cellType) {\n      case S2CellType.ROW_CELL:\n        this.drawRowCell();\n        break;\n      case S2CellType.COL_CELL:\n        this.drawColCell();\n        break;\n      case S2CellType.DATA_CELL:\n        this.drawDataCell();\n        break;\n      default:\n        break;\n    }\n  }\n\n  drawRowCell() {\n    // custom row cell rendering\n  }\n\n  drawColCell() {\n    // custom column cell rendering\n  }\n\n  drawDataCell() {\n    // custom data cell rendering\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Editable Table with SheetComponent in React\nDESCRIPTION: A React component implementation that demonstrates how to create an editable table using the SheetComponent from AntV S2. It includes configuration for data fields, metadata, and event handlers for editing operations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/editable-mode.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from \"react\";\nimport { SheetComponent } from '@antv/s2-react';\nimport '@antv/s2-react/dist/s2-react.min.css';\n\nconst s2DataCfg = {\n  fields: {\n    columns: [\"province\", \"city\", \"type\", \"price\"],\n  },\n  meta: [\n    // 列头字段对应的元信息，比如展示的中文名\n    {\n      field: \"province\",\n      name: \"省份\",\n    },\n    {\n      field: \"city\",\n      name: \"城市\",\n    },\n    {\n      field: \"type\",\n      name: \"类型\",\n    },\n    {\n      field: \"price\",\n      name: \"价格\",\n    },\n  ],\n  data,\n};\n\nconst s2Options = {\n  width: 400,\n  height: 200,\n};\n\nconst App = () => {\n  // 编辑开始\n  const onDataCellEditStart = (meta, cell) => {\n    console.log('onDataCellEditStart:', meta);\n  };\n  // 编辑完成\n  const onDataCellEditEnd = (meta, cell) => {\n    console.log('onDataCellEditEnd:', meta);\n  };\n\n  return (\n    <SheetComponent\n      sheetType=\"editable\"\n      dataCfg={s2DataCfg}\n      options={s2Options}\n      onDataCellEditStart={onDataCellEditStart}\n      onDataCellEditEnd={onDataCellEditEnd}\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Data Cell Click in Pivot Table in S2 Visualization in TypeScript\nDESCRIPTION: Demonstrates how to retrieve row, column, and cell data when clicking on a data cell in a pivot table using the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_20\n\nLANGUAGE: ts\nCODE:\n```\ns2.on(S2Event.DATA_CELL_CLICK, (event) => {\n  // 获取当前单元格\n  const cell = s2.getCell(event.target)\n  // 获取当前单元格元数据\n  const meta = cell.getMeta()\n  // 获取当前行数据\n  const rowData = s2.dataSet.getCellMultiData({ query: meta.rowQuery })\n  // 获取当前列数据\n  const colData = s2.dataSet.getCellMultiData({ query: meta.colQuery })\n\n  console.log('当前列数据：', colData)\n  console.log('当前行数据：', rowData)\n  console.log('当前单元格数据：', meta.data)\n  /**\n    {\n      \"raw\": {\n        \"number\": 632,\n        \"province\": \"浙江省\",\n        \"city\": \"绍兴市\",\n        \"type\": \"家具\",\n        \"sub_type\": \"沙发\"\n      },\n      \"extraField\": \"number\"\n    }\n  */\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Link Click Event Listener in S2\nDESCRIPTION: Shows how to listen for link click events using the GLOBAL_LINK_FIELD_JUMP event, which provides data about the clicked link including field name, metadata, and record information.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/link-jump.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2'\n\ns2.on(S2Event.GLOBAL_LINK_FIELD_JUMP, (data) => {\n  const { field, meta, record } = data;\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Vue Component Adaptation Configuration\nDESCRIPTION: Simple boolean configuration examples for enabling or disabling adaptive behavior in the S2 Vue component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.zh.md#2025-04-22_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\n<template>\n  <SheetComponent\n    :dataCfg=\"your-dataCfg\"\n    :options=\"your-options\"\n    :adaptive=\"true\"\n  />\n  <SheetComponent\n    :dataCfg=\"your-dataCfg\"\n    :options=\"your-options\"\n    :adaptive=\"false\"\n  />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Basic Resize Configuration in S2\nDESCRIPTION: Configuration for enabling resize functionality in S2, which allows adjusting the width and height of cells. The example shows both the simple boolean configuration and the equivalent detailed object configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/resize.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    resize: true\n  },\n};\n\n// 等价于\n// const s2Options = {\n//   interaction: {\n//     resize: {\n//       rowCellVertical: true,\n//       cornerCellHorizontal: true,\n//       colCellHorizontal: true,\n//       colCellVertical: true\n//     }\n//   },\n// };\n```\n\n----------------------------------------\n\nTITLE: Implementing Area Selection in S2 Grid with React/JSX\nDESCRIPTION: This React component showcases implementing area selection in S2 grid. It provides controls for enabling rectangle selection and displays brushed cell coordinates. The code integrates S2 grid events with React state management.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.en.md#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport React, { useState } from 'react';\nimport { SheetComponent } from '@antv/s2-react';\n\nconst AreaSelection = () => {\n  const [brushSelection, setBrushSelection] = useState(false);\n  const [brushedCells, setBrushedCells] = useState([]);\n\n  return (\n    <>\n      <Space>\n        <Checkbox \n          checked={brushSelection}\n          onChange={(e) => setBrushSelection(e.target.checked)}\n        >\n          Enable Area Selection\n        </Checkbox>\n      </Space>\n      <SheetComponent \n        dataCfg={dataCfg} \n        options={{\n          interaction: {\n            brushSelection, // Enable area selection\n            selectedCellsSpotlight: true, // Highlight selected cells\n          }\n        }}\n        onBrushSelection={({ cells }) => {\n          setBrushedCells(\n            cells.map((cell) => ({\n              rowIndex: cell.getMeta().rowIndex,\n              colIndex: cell.getMeta().colIndex,\n            }))\n          );\n        }}\n      />\n      <Descriptions title=\"Brush Selected Cells\">\n        {brushedCells.map((cell, index) => (\n          <Descriptions.Item key={index}>\n            Row: {cell.rowIndex}, Column: {cell.colIndex}\n          </Descriptions.Item>\n        ))}\n      </Descriptions>\n    </>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Customizing Layout Hooks in AntV S2\nDESCRIPTION: Collection of layout-related hooks including layoutArrange for row/column ordering, layoutCoordinate for size and position adjustments, layoutCellMeta for data positioning, and layoutHierarchy for structure control.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/hook.en.md#2025-04-22_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Configuring Grid Mode with Frozen Rows and Totals in Pivot Table\nDESCRIPTION: Demonstrates how to configure grid mode with frozen rows and custom total layout in a pivot table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.zh.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'grid',\n  frozen: {\n    rowCount: 1,\n  },\n  totals: {\n    row: {\n      showGrandTotals: true,\n      reverseLayout: true,\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Pie Chart in S2 Grid Cell using React\nDESCRIPTION: This code snippet illustrates how to render a pie chart inside an S2 grid cell using React components. It employs the S2 and G2Plot libraries to create a custom cell that displays a pie chart based on the provided data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/chart-in-cell.en.md#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport React from 'react';\nimport { Pie } from '@antv/g2plot';\nimport { getContainer } from '@antv/s2';\n\nconst PieChart = (props) => {\n  const { cellData } = props;\n  const container = getContainer(props);\n\n  React.useEffect(() => {\n    if (!container) {\n      return;\n    }\n    const plot = new Pie(container, {\n      data: cellData,\n      angleField: 'value',\n      colorField: 'type',\n      radius: 0.8,\n      label: {\n        type: 'inner',\n        offset: '-30%',\n        content: ({ percent }) => `${(percent * 100).toFixed(0)}%`,\n        style: {\n          fontSize: 14,\n          textAlign: 'center',\n        },\n      },\n      height: 100,\n      width: 200,\n      autoFit: true,\n    });\n    plot.render();\n    return () => {\n      plot.destroy();\n    };\n  }, [container, cellData]);\n\n  return null;\n};\n\n// 使用自定义单元格\nconst s2Options = {\n  width: 600,\n  height: 480,\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type'],\n    values: ['price'],\n  },\n  customCellTypes: {\n    type: {\n      city: CustomCell,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Dynamic Row Cell Dimensions Based on Node Properties in S2\nDESCRIPTION: Dynamically adjusting row header cell dimensions based on node information like level and leaf status. Returns null means using default dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      width: (rowNode) => {\n        // 例：叶子节点 300px, 非叶子节点 200px\n        return rowNode.isLeaf ? 300 : 200;\n      },\n      height: (rowNode) => {\n        // 例：偶数行高度 300pox, 奇数行默认高度\n        return rowNode.level % 2 === 0 ? 300 : null,\n      }\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing S2DataConfig Structure in TypeScript\nDESCRIPTION: Basic structure for S2DataConfig object that defines the core data configuration including raw data, metadata, sort parameters and dimensional fields.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-data-config.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  data: [],\n  meta: [],\n  sortParams: [],\n  fields: {\n    rows: [],\n    columns: [],\n    values: []\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Header Sort Icons in S2 Sheet Component\nDESCRIPTION: Configuration options for enabling sorting icons in SheetComponent headers. Sets the dimensions and visibility of default header action icons.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/group.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 600,\n  showDefaultHeaderActionIcon: true, // 默认为打开，可设置为 false 关闭\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Options for Strategy Sheet\nDESCRIPTION: Detailed configuration options for the Strategy Sheet component, including width, height, corner text, condition formatting for year-on-year values, and cell styling settings for original values display.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.en.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 480,\n  // 角头文本\n  cornerText: '指标层级',\n  // 条件格式\n  conditions: {\n    // 同环比数值映射规则\n    text: [\n      {\n        field: 'number',\n        mapping: (value, cellInfo) => {\n          const { meta, colIndex } = cellInfo;\n          if (\n            colIndex === 0 ||\n            !value ||\n            !meta?.fieldValue\n          ) {\n            return {\n              fill: '#000',\n            };\n          }\n          return {\n            fill: value > 0 ? '#FF4D4F' : '#29A294',\n          };\n        },\n      },\n    ],\n  },\n  style: {\n    dataCell: {\n      valuesCfg: {\n        // 原始数据字段，用于原始数据导出和 tooltip 展示\n        originalValueField: 'originalValues',\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Scroll Speed in S2\nDESCRIPTION: Sets horizontal and vertical scroll speed ratios for S2 table scrolling. Values range from 0-1 with 1 being default speed.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/scroll.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    scrollSpeedRatio: {\n      vertical: 0.3, // 垂直\n      horizontal: 1, // 水平\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Adaptive Sizing for S2 Chart in React TypeScript\nDESCRIPTION: This example demonstrates how to use adaptive sizing for an S2 chart. By setting the 'adaptive' prop to true, the chart will automatically adjust its size based on its container.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/custom/index.en.md#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<SheetComponent\n  dataCfg={dataCfg}\n  options={options}\n  sheetType=\"pivot\"\n  themeCfg={{ name: 'default' }}\n  adaptive={true}\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Selected Cell Highlighting in S2\nDESCRIPTION: Enables highlighting of row and column headers corresponding to selected cells, making it easier to locate the position of selected cells in the table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\n// selectedCellHighlight 的类型为  boolean | { rowHeader: boolean, colHeader: boolean, rowCells: boolean, colCells: boolean }\n// 当 selectedCellHighlight 为 boolean 时\nconst s2Options = {\n  interaction: {\n    selectedCellHighlight: true // default is false\n  }\n};\n\n// You can also configure the highlighting of header and cells in selectedCellHighlight separately\nconst s2Options = {\n  interaction: {\n    selectedCellHighlight: {\n      rowHeader: true,  // Highlight row header when cell is selected\n      colHeader: true,  // Highlight column header when cells are selected\n      currentRow: false,  // Highlight the current row when a cell is selected\n      currentCol: false,  // Highlight the current column when a cell is selected\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Installing Core AntV S2 Library Using Package Managers\nDESCRIPTION: Instructions for installing the core @antv/s2 library using npm, yarn, or pnpm package managers. This is the foundational library required for all S2 implementations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/install.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# npm\n$ npm install @antv/s2 --save\n\n# yarn\n$ yarn add @antv/s2\n\n# pnpm\n$ pnpm add @antv/s2\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic S2 Table Dimensions\nDESCRIPTION: Basic configuration for setting width and height of an S2 table. Note that percentage-based or viewport-based dimensions are not supported since the table is rendered on Canvas.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 400,\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Links in Pivot Table\nDESCRIPTION: Complete implementation of link fields in a pivot table, including configuration, initialization, and click handling with URL navigation.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/link-jump.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2'\n\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type'],\n    values: ['price'],\n  },\n};\n\nconst s2Options = {\n  width: 600,\n  height: 600,\n  interaction: {\n    linkFields: ['province', 'city'],\n  }\n};\n\nconst s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\ns2.on(S2Event.GLOBAL_LINK_FIELD_JUMP, (data) => {\n  const { key, record } = data;\n  const value = record[key]\n  // 拼装自己的跳转地址\n  location.href = `https://path/to/${key}=${value}}`;\n});\n\ns2.render();\n```\n\n----------------------------------------\n\nTITLE: Customizing Cell Alignment in S2 Table with TypeScript\nDESCRIPTION: Demonstrates how to set the text alignment for row cells in an S2 table. This example configures both regular text and bold text to be left-aligned in row cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/theme.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ns2.setTheme({\n  rowCell: {\n    text: {\n      textAlign: 'left',\n    },\n    bolderText: {\n      textAlign: 'left',\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Example of MultiData Implementation\nDESCRIPTION: Sample implementation of complex data structure supporting multiple indicator types with formatted and original values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-data-config.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst data = [\n  {\n    number: {\n      originalValues: [1, 2, 3],\n      values: ['1', '2', '3']\n    }\n  }\n];\n```\n\n----------------------------------------\n\nTITLE: Attaching Event Listener in AntV S2\nDESCRIPTION: Demonstrates how to attach an event listener to an S2 instance for handling row cell click events. This snippet shows the basic syntax for event handling in AntV S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-event.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2'\n\ns2.on(S2Event.ROW_CELL_CLICK, (event) => {\n  console.log('rowCellClick', event)\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Details\nDESCRIPTION: Demonstrates how to modify the detailed data information displayed in tooltips\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_29\n\nLANGUAGE: tsx\nCODE:\n```\ninstance.showTooltip = (tooltipOptions) => {\n  const { data } = tooltipOptions;\n  const customDetails = (data.details || []).map((item) => {\n    return { name: `${item.name} - test`, value: `${item.value} - w` };\n  });\n  instance.tooltip.show({ ...tooltipOptions, data: { ...data, details: customDetails } });\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Data for Multidimensional Table\nDESCRIPTION: TypeScript configuration for setting up data structure for the S2 table. Includes field definitions for rows, columns, and values, along with sample data and metadata for column names. This data configuration defines a table with provinces, cities, product types, and prices.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type'],\n    values: ['price'],\n  },\n  data: [\n     {\n      province: '浙江',\n      city: '杭州',\n      type: '笔',\n      price: '1',\n    },\n    {\n      province: '浙江',\n      city: '杭州',\n      type: '纸张',\n      price: '2',\n    },\n    {\n      province: '浙江',\n      city: '舟山',\n      type: '笔',\n      price: '17',\n    },\n    {\n      province: '浙江',\n      city: '舟山',\n      type: '纸张',\n      price: '0.5',\n    },\n    {\n      province: '吉林',\n      city: '长春',\n      type: '笔',\n      price: '8',\n    },\n    {\n      province: '吉林',\n      city: '白山',\n      type: '笔',\n      price: '9',\n    },\n    {\n      province: '吉林',\n      city: '长春',\n      type: ' 纸张',\n      price: '3',\n    },\n    {\n      province: '吉林',\n      city: '白山',\n      type: '纸张',\n      price: '1',\n    },\n  ],\n  meta: [\n    {\n      field: 'price',\n      name: '价格',\n    },\n    {\n      field: 'province',\n      name: '省份',\n    },\n    {\n      field: 'city',\n      name: '城市',\n    },\n    {\n      field: 'type',\n      name: '类别',\n    },\n    {\n      field: 'sub_type',\n      name: '子类别',\n    },\n  ]\n};\n```\n\n----------------------------------------\n\nTITLE: Sorting by Row and Column Combinations in Ant S2\nDESCRIPTION: Example of sorting by both row and column combinations, where 'type' is sorted based on price values for a specific province and city.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/basic.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  sortParams: [\n    {\n      // type 依据（ 浙江 - 舟山 ）&（ price ） 升序 排序\n      sortFieldId: 'type',\n      sortMethod: 'ASC',\n      sortByMeasure: 'price',\n      query: {\n        province: '浙江',\n        city: '舟山',\n        [EXTRA_FIELD]: 'price',\n      },\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Sorting Function for Dimension Values in Ant S2\nDESCRIPTION: Example of implementing a custom sorting function (sortFunc) for dimension values that sorts province names using locale-aware string comparison.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/basic.en.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  sortParams: [\n    {\n      // sortFieldId 为维度值时，params.data 为维度值列表\n      sortFieldId: 'province',\n      sortFunc: (params) => {\n          const { data } = params;\n          return data.sort((a, b) => a.localeCompare(b));\n      },\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Total and Subtotal Display Options in TypeScript\nDESCRIPTION: This snippet shows how to configure the 'totals' attribute of S2Options to control the display of row and column totals and subtotals, including their positions and dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/totals.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  totals: {\n    row: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      reverseGrandTotalsLayout: true,\n      reverseSubTotalsLayout: true,\n      subTotalsDimensions: ['province'],\n    },\n    col: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      reverseGrandTotalsLayout: true,\n      reverseSubTotalsLayout: true,\n      subTotalsDimensions: ['type'],\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Installing AntV S2 React Analysis Components\nDESCRIPTION: Command to install the core S2 library, React analysis components, Ant Design, and Ant Design icons using npm. This setup is for advanced React-based analysis interfaces.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/install.en.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2 @antv/s2-react-components antd @ant-design/icons --save\n```\n\n----------------------------------------\n\nTITLE: Disabling Multi-Selection and Range Selection in S2\nDESCRIPTION: Controls keyboard-based selection features: Cmd/Ctrl+click for toggling individual cell selection and Shift+click for range selection. Both are enabled by default.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    multiSelection: false, // 默认 true\n    rangeSelection: false // 默认 true\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Initializing Pivot Table with AntV S2 in TypeScript\nDESCRIPTION: Demonstrates how to create a basic pivot table using AntV S2 library. It includes data preparation, configuration setup, and rendering of the table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PivotSheet } from \"@antv/s2\";\n\n// 准备数据\nconst data = [\n  {\n    province: \"浙江\",\n    city: \"杭州\",\n    type: \"家具\",\n    sub_type: \"桌子\",\n    price: \"1\",\n  },\n  {\n    province: \"浙江\",\n    city: \"杭州\",\n    type: \"家具\",\n    sub_type: \"沙发\",\n    price: \"2\",\n  },\n  {\n    province: \"浙江\",\n    city: \"杭州\",\n    type: \"办公用品\",\n    sub_type: \"笔\",\n    price: \"3\",\n  },\n  {\n    province: \"浙江\",\n    city: \"杭州\",\n    type: \"办公用品\",\n    sub_type: \"纸张\",\n    price: \"4\",\n  },\n];\n\n// 配置数据\nconst s2DataConfig = {\n  fields: {\n    rows: [\"province\", \"city\"],\n    columns: [\"type\", \"sub_type\"],\n    values: [\"price\"]\n  },\n  data,\n};\n\n// 添加配置\nconst s2Options = {\n  width: 600,\n  height: 600,\n};\n\n// 渲染\nasync function bootstrap() {\n  const container = document.getElementById('container');\n  const s2 = new PivotSheet(container, dataCfg, options);\n\n  await s2.render();\n}\n\nbootstrap()\n```\n\n----------------------------------------\n\nTITLE: Using Custom Copy Implementation with Browser Clipboard API\nDESCRIPTION: Code example showing a complete custom implementation of the copy functionality using the browser's Clipboard API. It handles cell selection, data formatting, and copy execution.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/copy.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2';\n\ns2.on(S2Event.COPY, (event) => {\n  // prevent default behavior\n  event.preventDefault();\n  // get selected cells\n  const cells = s2.interaction.getCells();\n  // format the copied content\n  const content = formatCopiedContent(cells);\n  // execute copy\n  copy(content);\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Multiple Custom Interactions in S2\nDESCRIPTION: Example of registering multiple custom interactions, including one that prevents the default browser context menu and another custom interaction.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/custom.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TableSheet } from '@antv/s2';\n\nclass ContextMenuInteraction extends BaseEvent {\n  bindEvents() {\n    this.spreadsheet.on(S2Event.GLOBAL_CONTEXT_MENU, (event) => {\n      // 禁止弹出右键菜单\n      event.preventDefault();\n    });\n  }\n}\n\nconst s2Options = {\n  width: 600,\n  height: 300,\n  interaction: {\n    customInteractions: [\n      {\n        key: 'MyInteraction',\n        interaction: MyInteraction,\n      },\n      {\n        key: 'ContextMenuInteraction',\n        interaction: ContextMenuInteraction,\n      },\n    ],\n  }\n};\n\nconst s2 = new TableSheet(container, s2DataConfig, s2Options);\n\ns2.render();\n```\n\n----------------------------------------\n\nTITLE: Creating S2 Table Using TableSheet Class\nDESCRIPTION: Shows how to create an S2 table using the TableSheet class for non-React applications. Requires pre-configured data and options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/table-mode.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TableSheet } from \"@antv/s2\";\n\nconst container = document.getElementById('container');\nconst s2 = new TableSheet(container, dataCfg, options);\ns2.render();\n```\n\n----------------------------------------\n\nTITLE: Using SheetComponent from AntV S2-React\nDESCRIPTION: Demonstrates the usage of SheetComponent from @antv/s2-react package to create a pivot table in React. This method is recommended for React applications.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from \"react\";\nimport { SheetComponent } from '@antv/s2-react';\nimport '@antv/s2-react/dist/s2-react.min.css';\n\nconst s2Options = {\n  width: 400,\n  height: 200,\n};\n\nconst App = () => {\n  return (\n    <SheetComponent\n      sheetType=\"pivot\"\n      dataCfg={s2DataConfig}\n      options={s2Options}\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Content in Vue3 using defineCustomElement\nDESCRIPTION: This example shows an alternative method to customize tooltip content in Vue3 using defineCustomElement to create a Web Component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineCustomElement } from \"vue\";\n\n// Parse Vue components into Web Components\nconst VueTooltipContent = defineCustomElement({\n   props: [ \"meta\" ],\n   template:`\n     <div>I am custom Tooltip content</div>\n     <p>Current value: {{ meta?.label ?? meta?.fieldValue }}</p>\n   `\n});\n\n// Register a Web Component\ncustomElements.define(\"vue-tooltip-content\", VueTooltipContent);\n\nconst s2Options = {\n   tooltip: {\n     content: (cell, defaultTooltipShowOptions) => {\n       const meta = cell. getMeta();\n       // Replace Tooltip content\n       return new VueTooltipContent({ meta });\n     },\n   },\n};\n```\n\n----------------------------------------\n\nTITLE: Displaying Raw Data in S2 Spreadsheet Tooltips (TSX)\nDESCRIPTION: This code snippet shows how to enable the display of original values in S2 spreadsheet tooltips. It uses the StrategySheetDataTooltip component with the showOriginalValue prop set to true.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.en.md#2025-04-22_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\n<StrategySheetDataTooltip cell={cell} showOriginalValue />\n```\n\n----------------------------------------\n\nTITLE: Collapse Fields Configuration in TypeScript\nDESCRIPTION: Basic structure for configuring which fields should be collapsed in the tree view.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-collapse-nodes.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      collapseFields: {},\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Export in React S2 Component\nDESCRIPTION: Basic implementation of export functionality in a React application using the S2 component and Export from s2-react-components. The example shows how to configure the S2 component with copy enabled and add the Export component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/export.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react'\nimport { SheetComponent } from '@antv/s2-react'\nimport { Export } from '@antv/s2-react-components'\nimport '@antv/s2-react/dist/s2-react.min.css';\nimport '@antv/s2-react-components/dist/s2-react-components.min.css';\n\n\nconst S2Options = {\n  interaction: {\n    // 开启复制\n    copy: {\n      enable: true\n    }\n  }\n}\n\nconst App = () => {\n  const s2Ref = React.useRef()\n\n  return (\n    <>\n      <Export sheetInstance={s2Ref.current} />\n      <SheetComponent\n        dataCfg={dataCfg}\n        options={S2Options}\n        ref={s2Ref}\n      />\n    </>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Installing S2 Package with NPM\nDESCRIPTION: Commands to install the S2 package using NPM or Yarn package managers.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/introduction.en.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2\n# yarn add @antv/s2\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Theme Schema for S2 Table in JavaScript\nDESCRIPTION: Shows how to create and apply a custom theme by defining a theme object with specific properties. This example changes the background color using either setTheme or setThemeCfg methods.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/theme.en.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\nconst customTheme = {\n  background: {\n    color: '#353c59',\n  },\n};\n\n// s2.setThemeCfg({ theme: customTheme })\ns2.setTheme(customTheme)\ns2.render(false);\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Calculation Methods for Totals in TypeScript\nDESCRIPTION: This example demonstrates how to configure custom calculation methods for totals and subtotals using the 'calcFunc' attribute. It allows for more complex aggregation logic beyond the standard aggregation methods.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/totals.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  totals: {\n    row: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      reverseGrandTotalsLayout: true,\n      reverseSubTotalsLayout: true,\n      subTotalsDimensions: ['province'],\n      calcGrandTotals: {\n        calcFunc: (query, data) => {},\n      },\n      calcSubTotals: {\n        calcFunc: (query, data) => {},\n      },\n    },\n    col: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      reverseGrandTotalsLayout: true,\n      reverseSubTotalsLayout: true,\n      subTotalsDimensions: ['type'],\n      calcGrandTotals: {\n        calcFunc: (query, data) => {},\n      },\n      calcSubTotals: {\n        calcFunc: (query, data) => {},\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Initializing Comparison Table with S2 Options Configuration\nDESCRIPTION: This code demonstrates how to set up a comparison table using the S2 library by configuring the options object. It includes settings for theme, width, height, data source, and field configurations for values, rows, and columns.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/case/comparison/index.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 480,\n  dataSet: data,\n  // ⚠️ 配置透视表的交叉维度信息\n  fields: {\n    // 行头字段\n    rows: ['province', 'city'],\n    // 列头字段\n    columns: ['type', 'sub_type'],\n    // 单一数值\n    values: ['number'],\n  },\n  // 通过配置 options.style 可修改表样式\n  style: {},\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Specific Column Dimensions by Field or ID in S2\nDESCRIPTION: Configuring different widths and heights for specific columns using fieldId or dimension field in S2. Supports both unique node IDs and field names, including virtual value columns.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.en.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { EXTRA_FIELD } from '@antv/s2'\n\nconst s2Options = {\n  style: {\n    colCell: {\n       widthByField: {\n        // 默认 [数值挂列头], EXTRA_FIELD 为内部虚拟数值列\n        [EXTRA_FIELD]: 60,\n        'root[&] 家具 [&] 沙发 [&]number': 120,\n      },\n      heightByField: {\n        [EXTRA_FIELD]: 80,\n      },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Data Cells in AntV S2\nDESCRIPTION: This code shows how to access data cells in the current visible range and retrieve unselected data cells using the facet and interaction APIs.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// 当前可视范围内的数值单元格\ns2.facet.getDataCells()\n// 当前可视范围内未选中的数值单元格\ns2.interaction.getPanelGroupAllUnSelectedDataCells()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Layout Information After Rendering in TypeScript\nDESCRIPTION: Shows how to access the layout result containing all cell nodes (including those outside the visible area) after rendering the S2 visualization.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: ts\nCODE:\n```\nawait s2.render()\n\n// 确保在 s2.render() 之后获取\nconsole.log(s2.facet.getLayoutResult())\n```\n\n----------------------------------------\n\nTITLE: Handling Brush Selection Events in S2 PivotSheet\nDESCRIPTION: Example showing how to listen for brush selection events on different cell types (data cells, row cells, column cells) in a PivotSheet. Each event returns an array of the selected cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ColCell, DataCell, PivotSheet, RowCell, S2Event } from '@antv/s2';\n\nconst s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\ns2.on(S2Event.DATA_CELL_BRUSH_SELECTION, (cells: DataCell[]) => {\n  // 此事件默认打开，配置 options: { interaction: { brushSelection : { dataCell: true } } } 开启数值单元格刷选\n  console.log('刷选的单元格', cells)\n})\n\ns2.on(S2Event.ROW_BRUSH_SELECTION, (cells: RowCell[]) => {\n  // 此事件默认关闭，配置 options: { interaction: { brushSelection : { rowCell: true } } } 开启数值行头单元格刷选\n  console.log('刷选的行头单元格：', cells)\n})\n\ns2.on(S2Event.COL_BRUSH_SELECTION, (cells: ColCell[]) => {\n  // 此事件默认关闭，配置 options: { interaction: { brushSelection : { colCell: true } } } 开启数值列头单元格刷选\n  console.log('刷选的列头单元格：', cells)\n})\n\ns2.on(S2Event.COL_CELL_HOVER, (event) => {\n  ...\n})\n\ns2.on(S2Event.GLOBAL_KEYBOARD_DOWN, (event) => {\n  ...\n})\n```\n\n----------------------------------------\n\nTITLE: Hiding Divider Line When Column Headers are Hidden\nDESCRIPTION: Configuration for hiding the divider line that appears by default when column headers are hidden, by setting the opacity to zero.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\ns2.setTheme({\n  splitLine: {\n    horizontalBorderColorOpacity: 0,\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Rendering KPI Trend Table with AntV S2 in JavaScript\nDESCRIPTION: Creates and renders the KPI trend table using AntV S2 library. It initializes the table with the specified data configuration and options, then renders it to a specified DOM element.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/case/kpi-strategy/index.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst container = document.getElementById('container');\n\nconst s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\ns2.render();\n```\n\n----------------------------------------\n\nTITLE: Custom Sorting Function for Measure Values in Ant S2\nDESCRIPTION: Example of implementing a custom sorting function for measure values, which sorts cities based on the 'price' measure for a specific product type.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/basic.en.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  sortParams: [\n    {\n      sortFieldId: 'city',\n      sortByMeasure: 'price',\n      // 当使用 sortByMeasure 时，可以传入 query 定位数值列表\n      // 如下方限定 params.data 为 type=纸张，数值=price 的数据\n      query: { type: '纸张', [EXTRA_FIELD]: 'price' },\n      sortFunc: (params) => {\n        const { data, sortByMeasure, sortFieldId } = params || {};\n        return data\n          // 使用 price 做比较\n          ?.sort((a, b) => b[sortByMeasure] - a[sortByMeasure])\n          // map 出 city 维度的数组\n          ?.map((item) => item[sortFieldId]);\n      },\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Using DrillDown Panel as Standalone Component in React\nDESCRIPTION: This code demonstrates how to use the DrillDown panel as a standalone component in a React application. It includes basic configuration for the dataset, disabled fields, and custom text labels.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/drill-down.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { DrillDown } from '@antv/s2-react-components';\nimport '@antv/s2-react-components/dist/s2-react-components.min.css';\n\nfunction App() {\n  return (\n    <DrillDown\n      dataSet={dataSet}\n      disabledFields={disabledFields}\n      clearText={clearText}\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Providing Total and Subtotal Data in TypeScript\nDESCRIPTION: This example demonstrates how to include total and subtotal data directly in the data array passed to S2DataConfig. The data is structured based on row/column positions and key values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/totals.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  data: [\n    {\n      province: '浙江',\n      city: '杭州',\n      type: '笔',\n      price: '1',\n    },\n    // 总计/总计\n    {\n      price: '15.5',\n    },\n  ],\n  ...\n};\n```\n\n----------------------------------------\n\nTITLE: Adjusting Row Height in Table Mode\nDESCRIPTION: Configuration for setting row heights in table mode. You can set a fixed height for all rows or specific heights for particular rows using row indices.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      // 设置行高\n      height: 40,\n      // 给第一行和第三行设置不同的高度\n      heightByField: {\n        '0': 130,\n        '2': 60,\n      },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring PartDrillDown Component in S2 React\nDESCRIPTION: This code snippet demonstrates how to configure the DrillDown component from @antv/s2-react-components. It includes the configuration for drill-down options, custom text labels, and a fetchData function that generates mock data for the drill-down operation based on gender.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/drill-down.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { DrillDown } from '@antv/s2-react-components';\nimport '@antv/s2-react-components/dist/s2-react-components.min.css';\n\nconst sex = ['男', '女'];\n\nconst PartDrillDown = {\n  render: (props) => <DrillDown {...props}/>,\n  drillConfig: {\n    // 个性化配置 （可选）\n    title: '下钻',\n    clearText: '还原',\n    searchText: '搜素',\n    // 下钻数据源配置\n    dataSet: [\n      {\n        name: '客户性别',\n        value: 'sex',\n        type: 'text',\n      },\n    ],\n  },\n  // 点击下钻后的回调\n  fetchData: (meta, drillFields) =>\n    new Promise((resolve) => {\n      const dataSet = meta.spreadsheet.dataSet;\n      const field = drillFields[0];\n      const rowData = dataSet.getCellMultiData({ query: meta.query });\n      const drillDownData = [];\n\n      rowData.forEach((data) => {\n        const { city, number, province, sub_type: subType, type } = data;\n        const number0 = Math.ceil(Math.random() * (number - 50)) + 50;\n        const number1 = number - number0;\n        const dataItem0 = {\n          city,\n          number: number0,\n          province,\n          sub_type: subType,\n          type,\n          [field]: sex[0],\n        };\n        drillDownData.push(dataItem0);\n        const dataItem1 = {\n          city,\n          number: number1,\n          province,\n          sub_type: subType,\n          type,\n          [field]: sex[1],\n        };\n\n        drillDownData.push(dataItem1);\n      });\n\n      resolve({\n        drillField: field, // 下钻维度 value 值\n        drillData: drillDownData, // 下钻数据\n      });\n    }),\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Row Header Width in Tree Mode\nDESCRIPTION: Setting the width of row headers when using tree hierarchy mode in S2, which follows the same configuration pattern as tile mode.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'tree',\n  style: {\n    rowCell: {\n      width: 200,\n    }\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Theme to AntV S2 Instance in JavaScript\nDESCRIPTION: This snippet shows how to apply a custom theme to an S2 instance. It demonstrates creating an S2 instance with specific options and then setting the custom theme using the setTheme method.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/theme/custom/index.en.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 480,\n  // ... other configurations\n};\n\nconst s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\n// Apply the custom theme\ns2.setTheme(customTheme);\n\n// Render the sheet\ns2.render();\n```\n\n----------------------------------------\n\nTITLE: Implementing S2 Pivot Table with React Component\nDESCRIPTION: Demonstrates how to use the SheetComponent from @antv/s2-react to create a pivot table. Includes data preparation, configuration, and rendering steps.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { SheetComponent } from \"@antv/s2-react\";\nimport '@antv/s2-react/dist/s2-react.min.css';\n\n// 1. 准备数据\nconst data = [\n  {\n    province: \"浙江\",\n    city: \"杭州\",\n    type: \"家具\",\n    sub_type: \"桌子\",\n    price: \"1\",\n  },\n  {\n    province: \"浙江\",\n    city: \"杭州\",\n    type: \"家具\",\n    sub_type: \"沙发\",\n    price: \"2\",\n  },\n  {\n    province: \"浙江\",\n    city: \"杭州\",\n    type: \"办公用品\",\n    sub_type: \"笔\",\n    price: \"3\",\n  },\n  {\n    province: \"浙江\",\n    city: \"杭州\",\n    type: \"办公用品\",\n    sub_type: \"纸张\",\n    price: \"4\",\n  },\n];\n\n// 2. 配置数据\nconst s2DataConfig = {\n  fields: {\n    rows: [\"province\", \"city\"],\n    columns: [\"type\", \"sub_type\"],\n    values: [\"price\"]\n  },\n  data,\n};\n\n// 3. 添加配置\nconst s2Options = {\n  width: 600,\n  height: 600,\n};\n\n// 4. 渲染\nReactDOM.render(\n  <SheetComponent\n    dataCfg={s2DataConfig}\n    options={s2Options}\n  />,\n  document.getElementById('container')\n);\n```\n\n----------------------------------------\n\nTITLE: Getting Data Cell Information in AntV S2\nDESCRIPTION: This code shows how to get the data associated with a clicked data cell, including all its attributes and metadata.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ns2.on(S2Event.DATA_CELL_CLICK, (event) => {\n  // 首先拿到单元格当前信息\n  const cell = s2.getCell(event.target)\n  const meta = cell.getMeta()\n\n  console.log(meta.data)\n  /**\n    {\n    \"number\": 834,\n    \"province\": \"浙江省\",\n    \"city\": \"舟山市\",\n    \"type\": \"家具\",\n    \"sub_type\": \"沙发\",\n    \"$$extra$$\": \"number\",\n    \"$$value$$\": 834\n  }\n  */\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Cell Style in S2\nDESCRIPTION: Basic structure for configuring row cells, column cells, and data cells in S2 through the style object in s2Options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    // 行头单元格配置\n    rowCell: {},\n    // 列头单元格配置\n    colCell: {},\n    // 数值单元格配置\n    dataCell: {},\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination with Vue in S2 Table Components\nDESCRIPTION: Example of using pagination with SheetComponent from @antv/s2-vue. This demonstrates how to configure pagination options with Ant Design Vue components.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/pagination.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SheetComponent } from '@antv/s2-vue'\n\nconst s2Options = {\n  // https://antdv.com/components/pagination#API\n  pagination: {}\n}\n\n<SheetComponent :options={s2Options} />\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination with React in S2 Table Components\nDESCRIPTION: Example of using pagination with SheetComponent from @antv/s2-react. This code shows how to set up pagination options and combine with Ant Design's Pagination component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/pagination.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react'\nimport { SheetComponent } from '@antv/s2-react'\nimport { Pagination } from 'antd'\n\nconst s2Options = {\n  pagination: {\n    current: 1,\n    pageSize: 4,\n  }\n}\n\nfunction App() {\n  return (\n    <SheetComponent options={s2Options}>\n      {({ pagination }) => (\n        // 结合任意分页器使用：如 antd 的 Pagination 组件\n        <Pagination\n          size=\"small\"\n          showTotal={(total) => `共计 ${total} 条`}\n          {...pagination}\n        />\n      )}\n    </SheetComponent>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Dynamic Cell Rendering for S2 Pivot Table in TypeScript\nDESCRIPTION: Implementation of dynamic, on-demand rendering of data cells based on viewport visibility. The code calculates which cells need to be added or removed as the user scrolls, optimizing performance by only rendering visible elements.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/layout/pivot.en.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n// 动态按需渲染\nfunction dynamicRender() {\n    const indexes = this.calculateXYIndexes(scrollX, scrollY); // 根据滚动坐标计算当前视窗的坐标集合\n    const { add, remove } = diffPanelIndexes(this.preCellIndexes, indexes); // 根据上次和这次坐标集合差值计算增加和减少的坐标集合\n\n    each(add, ([i, j]) => {\n        const viewMeta = this.getCellMeta(j, i);\n        const cell = this.cfg.dataCell(viewMeta);\n        this.addCell(cell); // 渲染增加的单元格\n    });\n    each(remove, ([i, j]) => {\n        const findOne = find(\n            allCells,\n            (cell) => cell.get('name') === `${i}-${j}`,\n        );\n        findOne?.remove(true); // 移除减少的单元格\n    });\n    this.preCellIndexes = indexes; // 更新本次坐标集合为上次渲染的集合\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom JSX Content for Tooltips in S2-React\nDESCRIPTION: Shows how to create custom tooltip content using JSX elements in the React implementation of S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nconst content = (\n  <div>\n    <span>我是自定义内容</span>\n  </div>\n)\n\nconst s2Options = {\n  tooltip: {\n    content,\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Window Adaptive Sizing for S2 Tables\nDESCRIPTION: This code demonstrates how to make an S2 table adaptive to window size changes using ResizeObserver and debounce for performance optimization.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PivotSheet } from '@antv/s2'\nimport { debounce } from 'lodash'\n\nconst s2 = new PivotSheet(...)\n\nconst debounceRender = debounce((width, height) => {\n  s2.changeSheetSize(width, height)\n  s2.render(false) // 不重新加载数据\n}, 200)\n\nnew ResizeObserver(([entry] = []) => {\n    const [size] = entry.borderBoxSize || [];\n    debounceRender(size.inlineSize, size.blockSize)\n}).observe(document.body); // 通过监听 document.body 来实现监听窗口大小变化\n```\n\n----------------------------------------\n\nTITLE: Setting Row Header Cell Text Colors in S2 Pivot Table\nDESCRIPTION: This code snippet demonstrates how to set text colors for row header cells in an S2 pivot table, including bold text and link text colors.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/theme.en.md#2025-04-22_snippet_9\n\nLANGUAGE: css\nCODE:\n```\nrowCell.bolderText.fill: #000000;\nrowCell.bolderText.linkTextFill: #000000;\nrowCell.text.linkTextFill: #000000;\n```\n\n----------------------------------------\n\nTITLE: Configuring Ascending/Descending Sorting in Ant S2\nDESCRIPTION: Example of configuring ascending and descending sorting for multiple dimensions (province and type) using the sortMethod parameter.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/basic.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nsortParams: [\n  { sortFieldId: 'province', sortMethod: 'DESC' },\n  { sortFieldId: 'type', sortMethod: 'ASC' },\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Serial Numbers in S2 Table\nDESCRIPTION: Demonstrates how to enable built-in serial numbers in the S2 table by configuring the s2Options object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/table-mode.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  seriesNumber: {\n    enable: true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Tooltip Class in TypeScript\nDESCRIPTION: This snippet demonstrates how to create a custom tooltip class by inheriting from BaseTooltip. It shows the structure for overriding methods like show, hide, destroy, and renderContent.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BaseTooltip, SpreadSheet } from '@antv/s2';\n// import `tooltip` style file\nimport \"@antv/s2/dist/s2.min.css\";\n\nexport class CustomTooltip extends BaseTooltip {\n   constructor(spreadsheet: SpreadSheet) {\n     super(spreadsheet);\n   }\n\n   renderContent() {\n   }\n\n   clearContent() {\n   }\n\n   show(showOptions) {\n     console.log(this.spreadsheet)\n   }\n\n   hide() {\n   }\n\n   destroy() {\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Complex Custom Menu Configuration with Icons and Nested Items\nDESCRIPTION: Shows comprehensive configuration for custom tooltip menu with icons, callbacks, and nested items in S2-React.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_15\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Menu } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\n\nconst s2Options = {\n  tooltip: {\n    operation: {\n      menu: {\n        render: (props) => <Menu {...props} />,\n        onClick: (info, cell) => {\n          console.log('菜单项点击：', info, cell);\n        },\n        items: [\n          {\n            key: 'custom-a',\n            label: '操作 1',\n            // 图标可以是内置的 icon\n            icon: 'Trend',\n            onClick: (info, cell) => {\n              console.log('操作 1 点击');\n              console.log('tooltip 对应的单元格：', info, cell)\n            },\n            children: [{\n              key: 'custom-a-a',\n              label: '操作 1-1',\n              // 也可以是 ReactNode\n              icon: <PlusCircleFilled />,\n              onClick: (info, cell) => {\n                console.log('操作 1-1 点击', info, cell);\n              },\n            }]\n          },\n          {\n            key: 'custom-b',\n            label: '操作 2',\n            icon: 'EyeOutlined',\n            onClick: (info, cell) => {\n              console.log('操作 2 点击', info, cell);\n            },\n          },\n        ],\n      }\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Updating S2 Data Configuration\nDESCRIPTION: Method to update the S2 data configuration. This merges the new data config with existing settings and re-renders the chart with updated data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\npivotSheet.setDataCfg({ ... })\npivotSheet.render(true) // 重新渲染，且更新数据\n```\n\n----------------------------------------\n\nTITLE: Configuring Copy Functionality in S2 Table\nDESCRIPTION: Configuration options for enabling copy functionality in S2 tables, including settings for format handling, header inclusion, and cell selection capabilities.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/export.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    // 是否开启复制\n    copy: { enable: true },\n    // 复制格式化后的数据 (s2DataConfig.meta 中配置的 formatter)\n    withFormat: false,\n    // 复制数值时是否携带所对应的行列头维值\n    withHeader: true,\n    // 圈选复制前，需要开启圈选功能\n    brushSelection: {\n      dataCell: true, // 圈选数值单元格 （默认开启）\n      rowCell: true,  // 圈选行头单元格\n      colCell: true,  // 圈选列头单元格\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Header Groups in AntV S2 with Vanilla JavaScript\nDESCRIPTION: This snippet shows how to create and apply custom header groups in AntV S2 using vanilla JavaScript. It demonstrates the process of defining a custom header structure and initializing an S2 instance with these custom headers.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/custom-header-group/index.en.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { PivotSheet } from '@antv/s2';\n\nconst customHeaderFields = [\n  {\n    field: 'custom-root',\n    children: [\n      {\n        field: 'province',\n        title: '省份',\n        children: [\n          {\n            field: 'city',\n            title: '城市',\n          },\n        ],\n      },\n      {\n        field: 'type',\n        title: '类别',\n      },\n    ],\n  },\n];\n\nconst s2 = new PivotSheet(container, dataCfg, {\n  width: 600,\n  height: 480,\n  customHeaderFields,\n});\n\ns2.render();\n```\n\n----------------------------------------\n\nTITLE: Handling Row Cell Click Events in S2 Visualization in TypeScript\nDESCRIPTION: Demonstrates how to listen for row cell click events and retrieve the corresponding cell information and metadata.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_14\n\nLANGUAGE: ts\nCODE:\n```\nimport { S2Event } from '@antv/s2'\n\ns2.on(S2Event.ROW_CELL_CLICK, (event) => {\n  // 根据 event.target 拿到表格内部当前坐标对应的单元格\n  const cell = s2.getCell(event.target)\n  // 获取当前单元格对应的信息\n  const meta = cell.getMeta()\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Full Selection in AntV S2 with TypeScript\nDESCRIPTION: Shows how to select all cells in an AntV S2 table at once using the selectAll method. This changes the internal state to 'allSelected'.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ns2.interaction.selectAll()\n\ns2.interaction.getCurrentStateName() // \"allSelected\"\n```\n\n----------------------------------------\n\nTITLE: Managing Selection State in S2 Grid with TypeScript\nDESCRIPTION: This snippet demonstrates programmatic control of S2 grid selection state, including clearing selection, selecting cells by ID, and enabling automatic scrolling to selected cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// Clear all selected cells\ns2.interaction.clearActiveCells();\n\n// Select cells by ID\ns2.interaction.setCellActive(['A-1', 'A-2'], true);\n\n// Select cells and scroll into view\ns2.interaction.setCellActive(['A-1', 'A-2'], true, true);\n\n// Clear highlight\ns2.interaction.clearHoverTimer();\ns2.interaction.clearHighlight();\n```\n\n----------------------------------------\n\nTITLE: Accessing S2 Instance with React useRef\nDESCRIPTION: Method for retrieving the SpreadSheet instance in React components using ref and onMounted callback. This is the recommended approach for getting access to the S2 table instance for advanced operations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.en.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SpreadSheet } from '@antv/s2'\nimport { SheetComponent } from '@antv/s2-react'\n\nfunction App() {\n  const s2Ref = React.useRef<SpreadSheet>()\n\n  const onMounted = () => {\n    console.log(s2Ref.current)\n  }\n\n  return (\n    <SheetComponent ref={s2Ref} onMounted={onMounted}/>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Intersection Cell Data in AntV S2\nDESCRIPTION: This snippet shows how to retrieve the data at the intersection of a specific row and column by finding the corresponding cell nodes and using getCellMultiData.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// 找到 \"舟山市\" 对应的行头单元格节点\nconst rowCellNode = s2.facet.getRowCellNodes().find((node) => node.id === 'root[&]浙江省[&]舟山市')\n// 找到 \"办公用品\" 下 \"纸张\" 对应的 \"数量\"列头单元格节点\nconst colCellNode = s2.facet.getColCellNodes().find((node) => node.id === 'root[&]办公用品[&]纸张[&]number')\n\nconst data = s2.dataSet.getCellMultiData({...rowCellNode.query,...colCellNode.query})\n\n  /**\n  [\n    {\n      \"number\": 1634,\n      \"province\": \"浙江省\",\n      \"city\": \"舟山市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"纸张\",\n      \"$$extra$$\": \"number\",\n      \"$$value$$\": 1634\n    }\n  ]\n  */\n```\n\n----------------------------------------\n\nTITLE: Defining DataCellCallback Function for Custom Data Cell Rendering in JavaScript\nDESCRIPTION: This snippet defines the signature for a callback function to customize the rendering of data cells in the spreadsheet. It takes the view metadata and spreadsheet instance as parameters and returns a G.Group object representing the custom cell rendering.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-options.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nDataCellCallback = (viewMeta: ViewMeta, s2: Spreadsheet) => G.Group;\n```\n\n----------------------------------------\n\nTITLE: Initializing S2 PivotSheet with DOM Element\nDESCRIPTION: Basic initialization of an S2 PivotSheet by passing a DOM element reference, data configuration, and options. This is the standard way to mount S2 to a container.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.en.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\"></div>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst pivotSheet = new PivotSheet(document.getElementById('container'), dataCfg, options);\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Operation Menu in TypeScript\nDESCRIPTION: Demonstrates how to add custom operation items to the tooltip menu, including nested items and click event handlers.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n   tooltip: {\n     operation: {\n       menu: {\n        onClick: (info, cell) => {\n          console.log('menu click', info, cell);\n        },\n        items: [\n          {\n            key: 'custom-a',\n            text: 'Operation 1',\n            icon: 'Trend',\n            onClick: (info, cell) => {\n              console.log('operation 1 click');\n              console.log('The cell corresponding to the tooltip:', info, cell)\n            },\n            children: [ {\n              key: 'custom-a-a',\n              text: 'Operation 1-1',\n              icon: 'Trend',\n              onClick: (info, cell) => {\n                console.log('operation 1-1 click:', info, cell);\n              },\n            }]\n          },\n          {\n            key: 'custom-b',\n            text: 'Operation 2',\n            icon: 'EyeOutlined',\n            onClick: (info, cell) => {\n              console.log('operation 2 click:', info, cell);\n            },\n          },\n        ],\n       }\n     },\n   },\n};\n```\n\n----------------------------------------\n\nTITLE: Basic Interaction Configuration in S2\nDESCRIPTION: Shows the basic structure for configuring interactions in S2 options object. All interaction-related settings are placed within the interaction property.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Row and Column Header Names in AntV S2\nDESCRIPTION: This snippet demonstrates how to use the meta configuration in s2DataConfig to customize the display names of row and column headers in AntV S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/formatter.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type', 'sub_type'],\n    values: ['number'],\n  },\n  meta: [\n    {\n      field: 'province',\n      name: '省份',\n    },\n    {\n      field: 'city',\n      name: '城市',\n    },\n    {\n      field: 'type',\n      name: '商品类别',\n    },\n    {\n      field: 'sub_type',\n      name: '子类别',\n    },\n    {\n      field: 'number',\n      name: '数量',\n    },\n  ]\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Sort Operations in S2 Table\nDESCRIPTION: Complete implementation of custom sorting functionality including sort callbacks, custom sort parameters, and integration with the tooltip menu system.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-order.en.md#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n// 执行自定义排序回调\nconst handleSortCallback = (meta, key) => {\n  if (key === SortMethodType.custom) {\n    const sortParams = [\n      { sortFieldId: 'type', sortBy: [ '办公用品', '家具' ] },\n      { sortFieldId: 'city', sortMethod: 'ASC' },\n    ];\n    setSortParams(sortParams)\n    console.log('可以在这里实现你手动排序的交互和逻辑哟', sortParams)\n  } else {\n    // 使用 S2 提供的组内排序方式\n    meta.spreadsheet.groupSortByMethod(key, meta)\n    ;\n  }\n}\n\nconst s2Options = {\n  // 设置自定义 `icon` 的展示条件\n  headerActionIcons: [\n    {\n      onClick: (props) => {\n        const { meta, event } = props;\n        const operator = {\n          onClick: ({ key }) => {\n            // 执行自定义排序回调\n            handleSortCallback(meta, key);\n            meta.spreadsheet.hideTooltip();\n          },\n          menu: {\n            items\n          },\n        };\n        meta.spreadsheet.showTooltipWithInfo(event, [], {\n          operator,\n          onlyShowCellText: true,\n          onlyShowOperator: true,\n        });\n      },\n      ...\n    }\n  ],\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adjusting Value Cell Dimensions in S2\nDESCRIPTION: Setting the width and height of data cells in S2. This also affects the height of row header cells and width of column header cells as they remain consistent with value cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    dataCell: {\n      width: 100,\n      height: 90\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Controlling Tooltip Display in S2\nDESCRIPTION: Shows how to enable tooltips globally while disabling them for specific cell types using the enable property.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    enable: true,\n    rowCell: {\n      // 单独设置行头不显示\n      enable: false,\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Aggregation Methods for Totals in S2Options\nDESCRIPTION: Configuration example for setting aggregation methods for both grand totals and subtotals. Shows how to specify SUM, MIN, MAX, or AVG aggregations for rows and columns.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/totals.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  totals: {\n    row: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      reverseGrandTotalsLayout: true,\n      reverseSubTotalsLayout: true,\n      subTotalsDimensions: ['province'],\n      calcGrandTotals: {\n        aggregation: 'SUM',\n      },\n      calcSubTotals: {\n        aggregation: 'SUM',\n      },\n    },\n    col: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      reverseGrandTotalsLayout: true,\n      reverseSubTotalsLayout: true,\n      subTotalsDimensions: ['type'],\n      calcGrandTotals: {\n        aggregation: 'SUM',\n      },\n      calcSubTotals: {\n        aggregation: 'SUM',\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Using Callback Function for Dynamic Tooltip Content in S2-React\nDESCRIPTION: Demonstrates how to use a callback function to create dynamic tooltip content based on cell information in S2-React.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nconst TooltipContent = (props) => <div>...</div>\n\nconst s2Options = {\n  tooltip: {\n    content: (cell, defaultTooltipShowOptions) => {\n      console.log('当前单元格：', cell)\n      console.log('默认 tooltip 详细信息：', defaultTooltipShowOptions)\n      return <TooltipContent cell={ cell } detail={ detail } />\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Rendering Bar Chart in S2 Grid Cell using React\nDESCRIPTION: This snippet shows how to render a bar chart inside an S2 grid cell using React components. It utilizes the S2 and G2Plot libraries to create a custom cell that displays a bar chart based on provided data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/chart-in-cell.en.md#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport React from 'react';\nimport { Bar } from '@antv/g2plot';\nimport { getContainer } from '@antv/s2';\n\nconst BarChart = (props) => {\n  const { cellData } = props;\n  const container = getContainer(props);\n\n  React.useEffect(() => {\n    if (!container) {\n      return;\n    }\n    const plot = new Bar(container, {\n      data: cellData,\n      xField: 'year',\n      yField: 'value',\n      height: 100,\n      width: 200,\n      autoFit: true,\n    });\n    plot.render();\n    return () => {\n      plot.destroy();\n    };\n  }, [container, cellData]);\n\n  return null;\n};\n\n// 使用自定义单元格\nconst s2Options = {\n  width: 600,\n  height: 480,\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type'],\n    values: ['price'],\n  },\n  customCellTypes: {\n    type: {\n      city: CustomCell,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Migrating render method for asynchronous rendering\nDESCRIPTION: Shows how to update code to use async/await with render() method as the rendering engine has been upgraded to AntV/G 6.0, which uses asynchronous rendering.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n- s2.render()\n+ await s2.render()\n```\n\n----------------------------------------\n\nTITLE: Controlling Tooltip Operation Item Visibility in TypeScript\nDESCRIPTION: Shows how to dynamically control the visibility of tooltip operation items based on cell information.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n   tooltip: {\n     operation: {\n        menu: {\n          items: [\n            {\n              key: 'custom-a',\n              text: 'Operation 1',\n              icon: 'Trend',\n              visible: false,\n            },\n            {\n              key: 'custom-b',\n              text: 'Operation 2',\n              icon: 'EyeOutlined',\n              visible: (cell) => {\n                // Display dynamically according to cell information, such as: leaf nodes are not displayed\n                const meta = cell. getMeta()\n                return meta.isLeaf\n              },\n            },\n          ],\n        }\n     },\n   },\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Gradient Bar Chart Field Marking\nDESCRIPTION: Code for implementing a gradient bar chart field marking using AntV/G's gradient capabilities. This example calculates a color based on the value's position within the data range.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/conditions.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  conditions: {\n    interval: [\n      {\n        field: 'number',\n        mapping(fieldValue) {\n          const maxValue = 7789;\n          const minValue = 352;\n          const rage = (fieldValue - minValue) / (maxValue - minValue);\n\n          const color = getGradient(rage, '#95F0FF', '#3A9DBF');\n\n          return {\n            fill: `l(0) 0:#95F0FF 1:${color}`,\n            isCompare: true,\n            maxValue,\n          };\n        },\n      },\n    ],\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing S2 Detail Table with Raw Data and Configuration\nDESCRIPTION: This snippet shows the initial configuration and raw data setup for an S2 detail table. It defines the data structure, fields, and options for rendering the table component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/table.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst dataCfg = {\n  fields: {\n    columns: ['city', 'type', 'sub_type', 'price'],\n  },\n  data: [\n    {\n      price: 1,\n      province: '浙江省',\n      city: '杭州市',\n      type: '家具',\n      sub_type: '桌子',\n    },\n    {\n      price: 2,\n      province: '浙江省',\n      city: '绍兴市',\n      type: '家具',\n      sub_type: '桌子',\n    },\n    {\n      price: 3,\n      province: '浙江省',\n      city: '杭州市',\n      type: '家具',\n      sub_type: '沙发',\n    },\n    {\n      price: 4,\n      province: '浙江省',\n      city: '绍兴市',\n      type: '家具',\n      sub_type: '沙发',\n    },\n  ],\n};\n\nconst options = {\n    width: 800,\n    height: 600\n};\n\n<SheetComponent\n  dataCfg={dataCfg}\n  options={options}\n  sheetType=\"table\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Integrating ThemePanel with S2 Table\nDESCRIPTION: Shows how to integrate the ThemePanel component with an S2 table using the SheetComponent. This example demonstrates updating the table's theme configuration and options based on panel interactions.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react-components/README.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'React'\nimport { ThemePanel } from '@antv/s2-react-components'\nimport '@antv/s2-react-components/dist/s2-react-components.min.css'\n\nconst App = () => {\n  const s2Ref = React.useRef<SpreadSheet>();\n  const [themeCfg, setThemeCfg] = React.useState<ThemeCfg>({\n    name: 'default',\n  });\n\n  return (\n    <>\n      <ThemePanel\n        title=\"主题配置\"\n        disableCustomPrimaryColorPicker={false}\n        defaultCollapsed={false}\n        onChange={(options, theme) => {\n          setThemeCfg({\n            name: options.themeType as ThemeName,\n            theme,\n          });\n          s2Ref.current?.setOptions({\n            hierarchyType: options.hierarchyType,\n          });\n          s2Ref.current?.render(false);\n          console.log('onChange:', options, theme);\n        }}\n        onReset={(options, prevOptions, theme) => {\n          console.log('onReset:', options, prevOptions, theme);\n        }}\n      />\n      <SheetComponent\n        ref={s2Ref}\n        dataCfg={s2DataConfig}\n        options={s2Options}\n        sheetType=\"pivot\"\n        themeCfg={themeCfg}\n      />\n    </>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Updating S2 Table Options\nDESCRIPTION: Method to update the S2 table options configuration. This merges the new options with existing ones and re-renders the chart without updating data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\npivotSheet.setOptions({ ... })\npivotSheet.render(false) // 重新渲染，不更新数据\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Header Action Icon in S2 Table (TypeScript)\nDESCRIPTION: This code demonstrates how to add a custom header action icon to column cells in S2 table using the headerActionIcons option.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-icon.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  headerActionIcons: [\n    {\n      icons: ['SortDown'],\n      belongsCell: 'colCell',\n    },\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Cell Icons in S2 (JavaScript)\nDESCRIPTION: This code example demonstrates how to configure custom cell icons in S2, including registering a custom SVG icon and using it in cell conditions mapping.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-icon.en.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst s2Options = {\n  customSVGIcons: [\n    {\n      name: 'Filter',\n      src: 'https://gw.alipayobjects.com/zos/antfincdn/gu1Fsz3fw0/filter%26sort_filter.svg',\n    },\n  ],\n  conditions: {\n    icon: [\n      {\n        field: 'number',\n        mapping(fieldValue, data) {\n          return {\n            // 使用自定义 icon 名称\n            icon: 'Filter',\n            fill: '#30BF78',\n          };\n        },\n      },\n    ],\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Cell Components in AntV S2\nDESCRIPTION: Hooks for customizing different cell types including dataCell, rowCell, colCell and cornerCell. Each requires inheriting from the base cell class and overriding methods for styling and behavior.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/hook.en.md#2025-04-22_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Creating Custom Color Palette in S2 Table with JavaScript\nDESCRIPTION: Demonstrates how to create a custom color palette for an S2 table by defining basicColors array and semanticColors object. This allows for a personalized color scheme throughout the table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/theme.en.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\nconst s2Palette = {\n  // 基础配色色板\n  basicColors: [\n    '#FFFFFF',\n    '#F8F5FE',\n    '#EDE1FD',\n    '#873BF4',\n    '#7232CF',\n    '#AB76F7',\n    '#FFFFFF',\n    '#DDC7FC',\n    '#9858F5',\n    '#B98EF8',\n    '#873BF4',\n    '#282B33',\n    '#121826',\n  ],\n  // 语义化色板\n  semanticColors: {\n    red: '#FF4D4F',\n    green: '#29A294',\n  },\n};\ns2.setThemeCfg({ palette: s2Palette });\ns2.render(false);\n```\n\n----------------------------------------\n\nTITLE: Setting Up Copy Callback to Handle Copy Completion\nDESCRIPTION: This snippet demonstrates how to set up a callback function that executes after a successful copy operation, which can be used for showing notifications or performing additional actions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/copy.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    copy: {\n      enable: true,\n      onCopied: () => {\n        message.success('Copied!');\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Tooltip Content in Vue3\nDESCRIPTION: This code defines a Vue3 component for custom tooltip content, which can be used in conjunction with the CustomTooltip class.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_20\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n   <div>I am custom\nTooltips\ncontent </div>\n<p> current value: {\n   {\n     meta?.label??meta?.fieldValue\n   }\n}\n</p>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n   name: 'TooltipContent',\n   props: ['meta']\n});\n</script>\n```\n\n----------------------------------------\n\nTITLE: Forwarding S2 Instance to Parent Components in React\nDESCRIPTION: Pattern for exposing S2 instances from a custom wrapper component to parent components using React.forwardRef. This allows higher-level components to access the underlying SpreadSheet instance.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.en.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nconst YourComponent = React.forwardRef(\n  (props, ref: React.MutableRefObject<SpreadSheet>) => {\n\n    // ... 业务逻辑\n\n    return (\n      <SheetComponent ref={ref} />\n    )\n  }\n)\n\nfunction App() {\n  const s2Ref = React.useRef<SpreadSheet>()\n\n  const onMounted = () => {\n    console.log(s2Ref.current)\n  }\n\n  return (\n    <YourComponent ref={s2Ref} onMounted={onMounted}/>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SheetComponentOptions Interface for React in TypeScript\nDESCRIPTION: This code defines the SheetComponentOptions interface for React components in AntV S2. It extends S2Options with ReactNode for tooltips and combines S2 pagination with Ant Design pagination props.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/sheet-component.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { Pagination, S2Options } from '@antv/s2';\nimport type { PaginationProps as AntdPaginationProps } from 'antd';\n\ntype SheetComponentOptions = S2Options<\n   React.ReactNode,\n   Pagination & AntdPaginationProps\n>;\n```\n\n----------------------------------------\n\nTITLE: Listening to Cell Resize Events in S2\nDESCRIPTION: This code demonstrates how to listen for cell resize events in S2. It shows how to implement event handlers for resize start, resizing, and resize end events, which provide information about the resized cell dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/resize.en.md#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<SheetComponent\n  onRowCellResize={(resizeInfo) => {\n    console.log('resize row cell: ', resizeInfo);\n  }}\n  onColCellResize={(resizeInfo) => {\n    console.log('resize col cell: ', resizeInfo);\n  }}\n  onRowCellResizeStart={(resizeInfo) => {\n    console.log('resize row cell start: ', resizeInfo);\n  }}\n  onColCellResizeStart={(resizeInfo) => {\n    console.log('resize col cell start: ', resizeInfo);\n  }}\n  onRowCellResizeEnd={(resizeInfo) => {\n    console.log('resize row cell end: ', resizeInfo);\n  }}\n  onColCellResizeEnd={(resizeInfo) => {\n    console.log('resize col cell end: ', resizeInfo);\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Exporting Data with S2 Library in TypeScript\nDESCRIPTION: This snippet demonstrates how to use the S2 library's export functions including copyData, copyToClipboard, and download. It shows how to get copy data, copy to clipboard asynchronously, and export data to a file.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/copy-export.en.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { copyData, copyToClipboard, download } from '@antv/s2'\n\n// 拿到复制数据\nconst data = copyData(spreadsheet, '\\t', false)\n\n// 复制数据到剪贴板\n// 同步复制：copyToClipboard(data, false)\ncopyToClipboard(data)\n  .then(() => {\n    console.log('复制成功')\n  })\n  .catch(() => {\n    console.log('复制失败')\n  })\n\n// 导出数据\ndownload(data, 'filename')\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Rendering in S2DataConfig for TypeScript\nDESCRIPTION: This snippet shows how to configure image rendering in the S2DataConfig.meta object. It includes options for setting the renderer type, fallback image, preview behavior, timeout, and additional image configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/image.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  meta: {\n    field: string,\n    name: string,\n    renderer: {\n      type: 'IMAGE',  // 单元格渲染为图片\n      fallback?: string, // 渲染失败时的兜底图片地址\n      clickToPreview?: boolean, // 是否开启点击预览\n      timeout?: number, // 图片加载超时时间，默认为10秒\n      config?: Partial<ImageStyleProps> // G的图片配置，https://g.antv.antgroup.com/api/basic/image\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Data Cell Alignment in S2\nDESCRIPTION: Shows how to customize both text alignment and baseline alignment for data cells, including subtotal and regular cell configurations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.en.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndataCell: {\n text: {\n textAlign: 'left',\n textBaseline: 'top',\n },\n bolderText: {\n textAlign: 'left',\n textBaseline: 'top',\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Scroll Event Listeners in S2\nDESCRIPTION: Demonstrates how to listen for scrolling events in S2 tables, including global cell scrolling and row header cell scrolling events.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/scroll.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2';\n\ns2.on(S2Event.GLOBAL_SCROLL, (position) => {\n  console.log('表格滚动', position) // { scrollX: 0, scrollY: 100 }\n})\n\ns2.on(S2Event.ROW_CELL_SCROLL, (position) => {\n  console.log('行头单元格滚动', position) // { scrollX: 0, scrollY: 100 }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Switcher Fields\nDESCRIPTION: Example configuration for the Switcher component showing row, column and value field definitions with various options\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/switcher.en.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst switcherFields = {\n  rows: {\n    items: [{ id: \"province\" }, { id: \"city\" }],\n    allowEmpty: false,\n  },\n  columns: {\n    items: [{ id: \"type\" }],\n  },\n  values: {\n    selectable: true,\n    items: [{ id: \"price\" }, { id: \"cost\" }],\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Internationalization Utility Methods in S2 (TypeScript)\nDESCRIPTION: This snippet showcases various utility methods for internationalization in S2. It includes getting the current language, switching languages, getting the current locale, and using the i18n function for translation.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/i18n.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { i18n, getLocale, getLang, setLang } from '@antv/s2'\n\n// 获取当前语言\ngetLang()  // 'zh_CN'\n\n// 切换语言\nsetLang('en_US')\n\n// 获取当前国际化文件\ngetLocale()\n\n// 国际化函数\ni18n('隐藏') // 'Hide'\n```\n\n----------------------------------------\n\nTITLE: CDN Usage for S2\nDESCRIPTION: Example of importing S2 and its stylesheets via CDN links, including specific instructions for React and Vue3 versions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/browser.en.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n<script src=\"https://unpkg.com/@antv/s2/dist/s2.min.js\"></script>\n\n// React 需额外引入样式：\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@antv/s2-react/dist/s2-react.min.css\"/>\n\n// Vue3 版本 需额外引入样式：\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@antv/s2-vue/dist/s2-vue.min.css\"/>\n```\n\n----------------------------------------\n\nTITLE: Basic Cell Styling Configuration in S2\nDESCRIPTION: Basic configuration structure for customizing cell dimensions in S2 charts through the style object, which includes options for row cells, column cells, and data cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    // 行头单元格配置\n    rowCell: {},\n    // 列头单元格配置\n    colCell: {},\n    // 数值单元格配置\n    dataCell: {},\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Grouped Auto-hidden Columns in S2\nDESCRIPTION: This code demonstrates how to configure grouped auto-hidden columns in S2, allowing for independent expansion of different groups of hidden columns.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/hide-columns.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    hiddenColumnFields: ['province', 'type', 'price']\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Aggregation Methods for Totals in TypeScript\nDESCRIPTION: This snippet shows how to configure aggregation methods for calculating totals and subtotals using the 'calcGrandTotals' and 'calcSubTotals' attributes. It supports SUM, MIN, MAX, and AVG aggregations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/totals.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  totals: {\n    row: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      reverseGrandTotalsLayout: true,\n      reverseSubTotalsLayout: true,\n      subTotalsDimensions: ['province'],\n      calcGrandTotals: {\n        aggregation: 'SUM',\n      },\n      calcSubTotals: {\n        aggregation: 'SUM',\n      },\n    },\n    col: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      reverseGrandTotalsLayout: true,\n      reverseSubTotalsLayout: true,\n      subTotalsDimensions: ['type'],\n      calcGrandTotals: {\n        aggregation: 'SUM',\n      },\n      calcSubTotals: {\n        aggregation: 'SUM',\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Tree Layout Mode in S2 Visualization\nDESCRIPTION: Configuration for using the tree layout mode in S2 with hierarchyType option. This creates a tree-like structure for visualizing hierarchical data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'tree',\n};\n```\n\n----------------------------------------\n\nTITLE: Listening to S2Event in TypeScript\nDESCRIPTION: Example of how to import S2Event from @antv/s2 and listen to a row cell click event. This pattern can be used to listen to any of the S2 table events to implement custom business logic.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-event.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2'\n\ns2.on(S2Event.ROW_CELL_CLICK, (event) => {\n  console.log('rowCellClick', event)\n});\n```\n\n----------------------------------------\n\nTITLE: Using Event Handlers in React and Vue Components\nDESCRIPTION: Examples of framework-specific event handling in S2 React and Vue components. Both frameworks provide convenient event mappings that match their standard patterns.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SheetComponent } from '@antv/s2-react';\n\nconst onDataCellClick = () => {}\n\n<SheetComponent onDataCellClick={onDataCellClick} />\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SheetComponent } from '@antv/s2-vue';\n\nconst onDataCellClick = () => {}\n\n<SheetComponent @dataCellClick={onDataCellClick} />\n```\n\n----------------------------------------\n\nTITLE: Configuring Cell Resize Options in S2\nDESCRIPTION: This code shows how to configure cell resize functionality in S2 with various options. It demonstrates setting resize mode, creating a threshold for minimum width, and other related configurations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/resize.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n{\n  resize: {\n    // Row cell resize\n    rowCellVertical: true,\n    // Column cell resize\n    colCellHorizontal: true,\n    // Corner cell resize\n    cornerCellHorizontal: true,\n    cornerCellVertical: true,\n    // Row header height resize\n    rowResizeType: 'current' | 'all',\n    // Column width resize\n    colResizeType: 'current' | 'all',\n    // The minimum width or height of cell resize\n    cellHorizontalMin: 40,\n    cellVerticalMin: 20,\n    // Customize resize line style\n    resizeLineStyle: CellResizeLineOptions,\n    // Wether to only show resize grip when hovered\n    showResizeGripperOHovered: boolean\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Text Field Marking in S2\nDESCRIPTION: Basic example of implementing text field marking in S2 by configuring the conditions property in s2Options. This code shows how to change the text color of cells that match a specific field.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/conditions.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 600,\n  // 通过配置 conditions 实现字段标记\n  conditions: {\n    text: [\n      {\n        // 维度字段，支持正则  /^price+$/\n        field: \"price\",\n        mapping(fieldValue, data) {\n          return {\n            // fill 是文本字段标记下唯一必须的字段，用于指定文本颜色\n            fill: \"#5B8FF9\",\n          };\n        },\n      },\n    ],\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Registering Custom SVG Icons in S2 Table (TypeScript)\nDESCRIPTION: This code example demonstrates how to register custom SVG icons for use in S2 table, supporting string SVG content, local file import, and online SVG links.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-icon.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport Icon from '/path/to/icon.svg'\n\nconst s2Options = {\n  customSVGIcons: [\n    {\n      name: 'CustomIcon',\n      // 1. 字符串（支持自定义颜色）\n      src: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg t=\"1634603945212\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"558\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"200\" height=\"200\" fill=\"currentColor\"><defs><style type=\"text/css\"></style></defs><path d=\"M605.61 884.79h-24.26c-21.34 0-38.66 17.32-38.66 38.66 0 21.34 17.32 38.66 38.66 38.66h24.26c21.34 0 38.66-17.32 38.66-38.66 0-21.35-17.32-38.66-38.66-38.66z\" fill=\"#040000\" p-id=\"559\"></path><path d=\"M950.47 419.76c-22.17-15.48-51.17-16.01-73.92-1.33L715.7 522.53 573.09 223.42c-10.95-22.98-33.55-37.43-58.97-37.75h-0.85c-25.09 0-47.67 13.84-59.05 36.29L302.25 521.82 154.9 419.61c-22-15.18-50.71-15.73-73.27-1.46-22.53 14.32-34.23 40.57-29.8 66.9l70.9 421.76c5.33 32.04 32.82 55.3 65.31 55.3h272.43c21.34 0 38.66-17.32 38.66-38.66 0-21.34-17.32-38.66-38.66-38.66H197.44l-64.99-386.62 136.17 94.46a66.14 66.14 0 0 0 54.01 9.79 66.097 66.097 0 0 0 42.81-34.28l147.54-291.11 138.35 290.2c8.21 17.19 23.41 30.03 41.76 35.19 18.37 5.24 38 2.21 53.99-8.1l148.62-96.17-87.74 386.65h-60.1c-21.34 0-38.66 17.32-38.66 38.66 0 21.34 17.32 38.66 38.66 38.66h68.96c31.16 0 57.71-21.22 64.58-51.57l95.72-421.86c5.97-26.39-4.47-53.42-26.65-68.93zM514.74 151.68c28.08 0 50.85-22.76 50.85-50.85s-22.77-50.85-50.85-50.85c-28.09 0-50.85 22.76-50.85 50.85s22.77 50.85 50.85 50.85zM973.15 277.37c-28.08 0-50.85 22.77-50.85 50.85 0 28.09 22.76 50.85 50.85 50.85 28.08 0 50.85-22.76 50.85-50.85 0-28.08-22.77-50.85-50.85-50.85zM101.69 328.22c0-28.08-22.76-50.85-50.85-50.85S0 300.14 0 328.22c0 28.09 22.76 50.85 50.85 50.85s50.84-22.77 50.84-50.85z\" fill=\"#040000\" p-id=\"560\"></path></svg>`,\n\n      // 2. 本地文件（支持自定义颜色，本质上也是字符串）\n      src: Icon,\n\n      // 3. 在线链接 （不支持自定义颜色）\n      src: 'https://gw.alipayobjects.com/zos/bmw-prod/f44eb1f5-7cea-45df-875e-76e825a6e0ab.svg',\n    },\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Icons and Headers in AntV S2\nDESCRIPTION: Hooks for customizing header action icons (headerActionIcons), custom SVG icons (customSVGIcons), and corner header implementation by extending the Group class.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/hook.en.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Configuring Pagination Options in Vue Component\nDESCRIPTION: Example of setting up pagination options in an S2 Vue component by providing a configuration object to the s2Options.pagination property.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/pagination.en.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nconst s2Options = {\n  // https://antdv.com/components/pagination#API\n  pagination: {}\n}\n\n< SheetComponent options={ s2Options }/>\n```\n\n----------------------------------------\n\nTITLE: Finding Cells by ID in S2 Visualization in TypeScript\nDESCRIPTION: Shows how to access a specific cell by its ID in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_11\n\nLANGUAGE: ts\nCODE:\n```\ns2.facet.getCellById(id)\n```\n\n----------------------------------------\n\nTITLE: Implementing Group Sorting with @antv/s2 API\nDESCRIPTION: Demonstrates how to use the core @antv/s2 API to apply group sorting methods (ascending, descending, or none) to a specific cell meta object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/group.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst meta = cell.getMeta()\n\n// 升序\ns2.groupSortByMethod('asc', meta)\n\n// 降序\ns2.groupSortByMethod('desc', meta)\n\n// 不排序\ns2.groupSortByMethod('none', meta)\n```\n\n----------------------------------------\n\nTITLE: Building Grid Hierarchy for S2 Pivot Table in TypeScript\nDESCRIPTION: Recursive process for generating row hierarchy structure by traversing dimensional configurations. The code demonstrates how child nodes are created and how the hierarchy is built level by level.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/layout/pivot.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// 生成行层级结构入口\nbuildGridHierarchy('province', ['province', 'city'], {}, new Hierarchy());\n\n// 生成树状结构\nfunction buildGridHierarchy({ currentField, fields, facetCfg, hierarchy }) { // currentField 为 province\n    const fieldValues = dataSet.getDimensionValues(currentField); // ['浙江省']\n    generateHeaderNodes({ // 生成浙江省下面的层级结构\n        currentField, fields, facetCfg, hierarchy,\n        fieldValues // ['浙江省']\n    });\n}\n\n// 生成当前字段下面的层级结构，比如浙江省下面的 [杭州市， 绍兴市]\nfunction generateHeaderNodes(...args) {\n    for(let fieldValue of fieldValues.entries()) { // 浙江省\n        const node = new Node({ value: fieldValue, parent: parentNode });\n        hierarchy.pushIndexNode(node);\n        hierarchy.sampleNodesForAllLevels.push(node);\n        if (!node.isLeafNode) {\n            // 生成叶子节点\n            buildGridHierarchy({\n                parentNode: node, // 递归生成子结构，如果还有 region, 会继续生成杭州市下面的 [西湖区，余杭区]\n                currentField: fields[level + 1], // 下一个维度作为下个循环的维度，比如第一次是 province，第二次是 city\n                hierarchy,\n                fields,\n                facetCfg,\n            });\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Cell-Specific Tooltip Content in TypeScript\nDESCRIPTION: Demonstrates how to set different tooltip content for various cell types (row, column, data, corner) with priority over the general tooltip configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nconst TooltipContent = (\n   <div>content</div>\n);\n\nconst RowCellTooltipContent = (\n   <div>rowCellTooltip</div>\n);\n\nconst ColCellTooltipContent = (\n   <div>colCellTooltip</div>\n);\n\nconst DataCellTooltipContent = (\n   <div>dataTooltip</div>\n);\n\nconst s2Options = {\n   tooltip: {\n     content: TooltipContent,\n     rowCell: {\n       content: RowCellTooltipContent,\n     },\n     colCell: {\n       content: ColCellTooltipContent\n     },\n     dataCell: {\n       content: DataCellTooltipContent\n     }\n   },\n};\n```\n\n----------------------------------------\n\nTITLE: Preparing Data for Editable Table in TypeScript\nDESCRIPTION: Sample data structure used for the editable table example, containing records with province, city, type, and price fields organized to demonstrate hierarchical data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/editable-mode.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// 1. 准备数据\nconst data = [\n  {\n    \"province\": \"浙江\",\n    \"city\": \"杭州\",\n    \"type\": \"笔\",\n    \"price\": 1\n  },\n  {\n    \"province\": \"浙江\",\n    \"city\": \"杭州\",\n    \"type\": \"纸张\",\n    \"price\": 2\n  },\n  {\n    \"province\": \"浙江\",\n    \"city\": \"舟山\",\n    \"type\": \"笔\",\n    \"price\": 17\n  },\n  {\n    \"province\": \"浙江\",\n    \"city\": \"舟山\",\n    \"type\": \"纸张\",\n    \"price\": 6\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"长春\",\n    \"type\": \"笔\",\n    \"price\": 8\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"白山\",\n    \"type\": \"笔\",\n    \"price\": 12\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"长春\",\n    \"type\": \"纸张\",\n    \"price\": 3\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"白山\",\n    \"type\": \"纸张\",\n    \"price\": 25\n  },\n\n  {\n    \"province\": \"浙江\",\n    \"city\": \"杭州\",\n    \"type\": \"笔\",\n    \"price\": 20\n  },\n  {\n    \"province\": \"浙江\",\n    \"city\": \"杭州\",\n    \"type\": \"纸张\",\n    \"price\": 10\n  },\n  {\n    \"province\": \"浙江\",\n    \"city\": \"舟山\",\n    \"type\": \"笔\",\n    \"price\": 15\n  },\n  {\n    \"province\": \"浙江\",\n    \"city\": \"舟山\",\n    \"type\": \"纸张\",\n    \"price\": 2\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"长春\",\n    \"type\": \"笔\",\n    \"price\": 15\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"白山\",\n    \"type\": \"笔\",\n    \"price\": 30\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"长春\",\n    \"type\": \"纸张\",\n    \"price\": 40\n  },\n  {\n    \"province\": \"吉林\",\n    \"city\": \"白山\",\n    \"type\": \"纸张\",\n      \"price\": 50\n    }\n  ]\n```\n\n----------------------------------------\n\nTITLE: Setting Fixed Dimensions for S2 Chart in React TypeScript\nDESCRIPTION: This snippet demonstrates how to set fixed pixel dimensions for an S2 chart using the SheetComponent. It specifies a width of 600 pixels and a height of 400 pixels.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/custom/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<SheetComponent\n  dataCfg={dataCfg}\n  options={options}\n  sheetType=\"pivot\"\n  themeCfg={{ name: 'default' }}\n  adaptive={false}\n  width={600}\n  height={400}\n/>\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Icons to Data Cells in S2 Table (TypeScript)\nDESCRIPTION: This code example shows how to add custom icons to data cells in an S2 table using the conditions option and custom SVG icons.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-icon.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport Icon from '/path/to/icon.svg'\n\nconst s2Options = {\n  customSVGIcons: [\n    {\n      name: 'CustomIcon',\n      src: Icon,\n    },\n  ],\n  conditions: {\n    icon: [\n      {\n        field: 'number',\n        mapping(fieldValue, data) {\n          return {\n            // 使用自定义 icon 名称\n            icon: 'CustomIcon',\n            // 自定义颜色 （在线链接不支持）\n            fill: '#30BF78',\n          };\n        },\n      },\n    ],\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing S2 Cell Selection Event Handlers in TypeScript\nDESCRIPTION: This code shows how to handle selection events in S2 grid, including getting selected cell information and managing selection state. It demonstrates event binding for cell selection operations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ns2.on(S2Event.GLOBAL_SELECTED, (cells) => {\n  console.log('selected cells:', cells);\n});\n\ns2.on(S2Event.GLOBAL_SELECTED_CHANGE, (cells) => {\n  console.log('selection cells changed:', cells);\n});\n\n// Get selected cell IDs\nconst selectedCellIds = s2.interaction.getActiveCells().map((cell) => cell.getMeta().id);\n\n// Get selected data cells\nconst selectedDataCells = s2.interaction.getActiveCells().filter(\n  (cell) => cell.type === CellTypes.DATA_CELL,\n);\n\n// Selected data\nconst selectedData = selectedDataCells.map((cell) => cell.getMeta().data);\n```\n\n----------------------------------------\n\nTITLE: SortParam Interface Definition - TypeScript\nDESCRIPTION: Interface defining sorting configuration parameters for AntV S2 tables. Includes fields for sort field ID, sort method, custom sort lists, measure-based sorting, and custom sort functions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/sort-param.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SortParam {\n  sortFieldId: string;\n  sortMethod?: 'ASC' | 'DESC' | 'asc' | 'desc';\n  sortBy?: string[];\n  sortByMeasure?: string;\n  query?: Record<string, string>;\n  type?: string;\n  sortFunc?: (params: SortFuncParam) => string[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining S2CellType Union Type in TypeScript\nDESCRIPTION: This code defines a union type S2CellType that includes various cell types used in the S2 project.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-cell.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nexport type S2CellType =\n  | DataCell\n  | HeaderCell\n  | ColCell\n  | CornerCell\n  | RowCell\n  | MergedCell\n  | SeriesNumberCell\n  | BaseCell;\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Alignment for Corner Cells in S2 CrossTable\nDESCRIPTION: Code snippet showing how to set right alignment for both bolderText and regular text in corner cells of an S2 CrossTable, maintaining middle baseline positioning.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\ncornerCell: {\n  bolderText: {\n    textAlign: 'right',\n    textBaseline: 'middle',\n  },\n  text: {\n    textAlign: 'right',\n    textBaseline: 'middle',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing S2 Styles in TypeScript\nDESCRIPTION: Imports the required CSS styles for S2 charts. This is necessary for proper tooltip rendering.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport \"@antv/s2/dist/s2.min.css\";\n```\n\n----------------------------------------\n\nTITLE: Configuring Adaptive Sizing in S2 Vue Components\nDESCRIPTION: This code demonstrates how to use the 'adaptive' prop in S2 Vue components to enable adaptive sizing, including examples of boolean and object configurations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.en.md#2025-04-22_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\n<template>\n  <SheetComponent\n    :dataCfg=\"your-dataCfg\"\n    :options=\"your-options\"\n    :adaptive=\"true\"\n  />\n  <SheetComponent\n    :dataCfg=\"your-dataCfg\"\n    :options=\"your-options\"\n    :adaptive=\"false\"\n  />\n</template>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n<template>\n  <SheetComponent\n    :dataCfg=\"your-dataCfg\"\n    :options=\"your-options\"\n    :adaptive=\"{ width: true, height: true }\"\n  />\n  <SheetComponent\n    :dataCfg=\"your-dataCfg\"\n    :options=\"your-options\"\n    :adaptive=\"{ width: false, height: false }\"\n  />\n</template>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n<script lang=\"ts\">\nconst adaptive = {\n  width: true,\n  height: true,\n  getContainer: () => document.getElementById('containerId'),\n};\n</script>\n\n<template>\n  <div\n    id=\"containerId\"\n    style=\"width:600px;height:400px\"\n  >\n    <SheetComponent\n      :dataCfg=\"your-dataCfg\"\n      :options=\"your-options\"\n      :adaptive=\"adaptive\"\n    />\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Handling Data Cell Click in Detail Table in S2 Visualization in TypeScript\nDESCRIPTION: Shows how to retrieve row and column data when clicking on a data cell in a detail table using the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_21\n\nLANGUAGE: ts\nCODE:\n```\ns2.on(S2Event.DATA_CELL_CLICK, (event) => {\n  // 获取当前单元格\n  const cell = s2.getCell(event.target)\n  // 获取当前单元格元数据\n  const meta = cell.getMeta()\n  // 获取当前行数据 （明细表一行对应一条数据）\n  const rowData = s2.dataSet.getCellMultiData({\n    // 等价于 query: { rowIndex: meta.rowIndex }\n    query: meta.rowQuery\n  })[0]\n  // 获取当前列数据\n  const colData = s2.dataSet.getCellMultiData({\n    // 等价于 query: { colIndex: meta.colIndex }\n    query: meta.colQuery\n  })\n\n  console.log('当前列数据：', colData)\n  console.log('当前行数据：', rowData) // { province: '吉林', city: '长春', type: '笔', price: 8 }\n  console.log('当前单元格数据：', meta.data) // { city: '长春' }\n})\n```\n\n----------------------------------------\n\nTITLE: Accessing Header Cells in S2 Visualization in TypeScript\nDESCRIPTION: Demonstrates how to retrieve all header cells including sequence numbers, corner cells, row headers, and column headers.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_8\n\nLANGUAGE: ts\nCODE:\n```\ns2.facet.getHeaderCells()\n```\n\n----------------------------------------\n\nTITLE: Creating Custom S2 Theme (JavaScript)\nDESCRIPTION: This example illustrates how to create a custom theme for S2 by extending the default theme. It defines a new theme called 'customTheme' with modified properties for various cell types and interactions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/theme/default/index.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { merge } from 'lodash';\nimport { theme } from '@antv/s2';\n\nconst { DEFAULT_THEME } = theme;\n\nexport const customTheme = merge({}, DEFAULT_THEME, {\n  cornerCell: {\n    bolderText: {\n      fill: '#000',\n    },\n    cell: {\n      backgroundColor: '#fff',\n    },\n  },\n  dataCell: {\n    cell: {\n      backgroundColor: '#fff',\n    },\n    text: {\n      fill: '#415168',\n    },\n  },\n  rowCell: {\n    cell: {\n      backgroundColor: '#fff',\n    },\n    text: {\n      fill: '#415168',\n    },\n    bolderText: {\n      fill: '#121212',\n    },\n  },\n  // ... other customizations\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Event Listener Options in S2\nDESCRIPTION: Example showing how to configure event listener options like capture phase and other parameters through the S2 options. This provides control over how and when events are triggered.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    eventListenerOptions: {\n      capture: true,\n    }\n  }\n}\n\n// 等价于\nwindow.addEventListener('mouseup', () => {}, {\n  capture: true,\n})\n\nwindow.addEventListener('mouseup', () => {}, true)\n```\n\n----------------------------------------\n\nTITLE: Configuring Interaction States in S2 Themes with TypeScript\nDESCRIPTION: Example of how to set custom interaction state themes for data cells in S2. This code demonstrates setting theme properties for different states like hoverFocus, selected, and prepareSelect.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-theme.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ns2.setTheme({\n  dataCell: {\n    cell: {\n      interactionState: {\n        hoverFocus: {},\n        selected: {},\n        prepareSelect: {}\n      }\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Drawing Shapes Directly on S2 Canvas\nDESCRIPTION: Shows how to access the underlying G Canvas instance from S2 and draw shapes directly on it. This approach allows adding custom graphics at arbitrary positions on the table after it's rendered.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/custom.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Rect } from '@antv/g';\n\nawait s2.render();\n\n//  直接在表格 (Canvas) 上绘制任意图形\ns2.getCanvas().appendChild(\n  new Rect({\n    style: {\n      x: 300,\n      y: 200,\n      width: 100,\n      height: 100,\n      fill: '#1890FF',\n      fillOpacity: 0.8,\n      stroke: '#F04864',\n      strokeOpacity: 0.8,\n      lineWidth: 4,\n      radius: 100,\n      zIndex: 999,\n    },\n  }),\n);\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Switcher Component in React\nDESCRIPTION: This snippet demonstrates how to import and use the Switcher component from @antv/s2-react-components. It includes importing the necessary CSS file and rendering the Switcher component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/switcher.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Switcher } from '@antv/s2-react-components';\nimport '@antv/s2-react-components/dist/s2-react-components.min.css'\n\n<Switcher />\n```\n\n----------------------------------------\n\nTITLE: 配置趋势分析表的数据源和格式化选项\nDESCRIPTION: 这段代码展示了如何配置趋势分析表的数据源格式，包括多值数据结构、元数据格式化以及虚拟列头的配置方法。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nconst data = {\n  \"measure-a\": {\n    values: [\"1\", \"2\"],\n    originalValues: [1, 2]\n  }\n}\n```\n\nLANGUAGE: ts\nCODE:\n```\nconst fields = {\n  rows: [\n    {\n      key: 'a-1',\n      title: '节点 1',\n      children: []\n    }\n  ]\n}\n```\n\nLANGUAGE: ts\nCODE:\n```\nimport { EXTRA_COLUMN_FIELD } from '@antv/s2'\n\nconst fields = {\n  columns: ['date', EXTRA_COLUMN_FIELD]\n}\n```\n\nLANGUAGE: ts\nCODE:\n```\nconst s2DataConfig = {\n  meta: [\n    // 日期列头 格式化\n    {\n      field: 'date',\n      name: '时间',\n      formatter: (value) => `${value}年`,\n    },\n    // 同环比名称（虚拟列头） 格式化\n    {\n      field: EXTRA_COLUMN_FIELD,\n      formatter: (value, data, meta) => {\n        console.log(data, meta);\n        return meta?.colIndex === 0 ? '自定义标题' : value;\n      },\n    },\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Defining CellCallback Function for Custom Cell Rendering in JavaScript\nDESCRIPTION: This snippet defines the signature for a general callback function to customize the rendering of any cell type in the spreadsheet. It takes the current node, spreadsheet instance, and optional additional parameters, returning a G.Group object for custom rendering.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-options.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nCellCallback = (node: Node, spreadsheet: SpreadSheet, ...restOptions: unknown[]) => G.Group;\n```\n\n----------------------------------------\n\nTITLE: Creating S2 Pivot Table Using PivotSheet Class\nDESCRIPTION: Shows how to implement the S2 pivot table using the PivotSheet class for non-React applications. Requires prior data and configuration setup.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PivotSheet } from \"@antv/s2\";\n\nconst container = document.getElementById('container');\nconst s2 = new PivotSheet(container, dataCfg, options);\ns2.render();\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Cell Interaction Options in TypeScript\nDESCRIPTION: This snippet demonstrates how to configure various cell interaction options for S2 grids, including interaction types, selection status updates, and selection area controls.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ns2Options = {\n  interaction: {\n    // highlight-start\n    selectedCellsSpotlight: true, // Enable selected cell highlighting\n    highlightSelectedCellsOnlyVisible: true, // Only highlight selected cells in visible range\n    hoverHighlight: true, // Enable hover highlighting\n    hoverHighlightReset: true, // Mouseout to reset hover state\n    selectedCellHighlight: true, // Enable selected cell highlighting (new config)\n    // highlight-end\n    customInteractions: [\n      // highlight-next-line\n      new CustomIntraction(),  // Customize interaction logic\n    ],\n    // highlight-start\n    selectedCellHighlight: true, // Enable selected cell highlighting\n    hideCellSelectionBorder: true, // Add selected cell style without border \n    // highlight-end\n    override: {\n      // highlight-start\n      'data-cell': {\n        onClick: {\n          action: (event) => {},\n        },\n      },\n      // highlight-end\n    },\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Overriding Tooltip Display Method in React Component\nDESCRIPTION: This snippet demonstrates how to override the showTooltip method on the spreadsheet instance within a React component to customize tooltip display.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_23\n\nLANGUAGE: tsx\nCODE:\n```\n<SheetComponent\n   onMounted={ (instance) => {\n     instance.showTooltip = (tooltipOptions) => {\n       // You can customize the tooltipOptions here\n       instance.tooltip.show(tooltipOptions);\n     };\n   } }\n   ...\n/>;\n```\n\n----------------------------------------\n\nTITLE: Configuring Totals in AntV S2 (JavaScript)\nDESCRIPTION: This code snippet demonstrates how to configure subtotals and grand totals in AntV S2. It shows various options for enabling totals, customizing their position, and setting labels.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/analysis/totals/index.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst s2Options = {\n  totals: {\n    row: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      subTotalsDimensions: ['province'],\n      reverseLayout: true,\n      reverseSubLayout: true,\n      label: '总计',\n      subLabel: '小计',\n    },\n    col: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      subTotalsDimensions: ['type'],\n      reverseLayout: true,\n      reverseSubLayout: true,\n      label: '总计',\n      subLabel: '小计',\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Advanced Sort with SheetComponent\nDESCRIPTION: Example of integrating AdvancedSort component with SheetComponent from @antv/s2-react. Shows basic setup including state management and event handling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/advanced.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react';\nimport { SheetComponent } from '@antv/s2-react';\nimport { AdvancedSort } from '@antv/s2-react-components';\nimport '@antv/s2-react/dist/s2-react.min.css';\nimport '@antv/s2-react-components/dist/s2-react-components.min.css';\n\nexport const App = () => {\n  const s2Ref = React.useRef()\n  const [dataCfg, setDataCfg] = React.useState(s2DataConfig);\n\n  return (\n    <>\n      <AdvancedSort\n        sheetInstance={s2Ref.current}\n        sortParams={[{ sortFieldId: 'province', sortMethod: 'DESC' }]}\n        onSortConfirm={(ruleValues, sortParams) => {\n          setDataCfg({ ...dataCfg, sortParams });\n        }}\n      />\n      <SheetComponent\n        ref={s2Ref}\n        sheetType=\"pivot\"\n        dataCfg={dataCfg}\n      />\n    </>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Updating S2 Sheet Size and Re-rendering\nDESCRIPTION: Demonstrates how to change the size of an S2 sheet and trigger a re-render to update the UI including scroll bars.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\ns2.changeSheetSize(200, 200)\nawait s2.render(false)\n```\n\n----------------------------------------\n\nTITLE: Preparing Data Configuration for S2 Table\nDESCRIPTION: TypeScript configuration for S2 data structure, including fields definition, metadata, and sample data records for a multi-dimensional table.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-vue/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type', 'sub_type'],\n    values: ['number'],\n  },\n  meta: [\n    {\n      field: 'number',\n      name: '数量',\n    },\n    {\n      field: 'province',\n      name: '省份',\n    },\n    {\n      field: 'city',\n      name: '城市',\n    },\n    {\n      field: 'type',\n      name: '类别',\n    },\n    {\n      field: 'sub_type',\n      name: '子类别',\n    },\n  ],\n  data: [\n    {\n      number: 7789,\n      province: '浙江省',\n      city: '杭州市',\n      type: '家具',\n      sub_type: '桌子',\n    },\n    {\n      number: 2367,\n      province: '浙江省',\n      city: '绍兴市',\n      type: '家具',\n      sub_type: '桌子',\n    },\n    {\n      number: 3877,\n      province: '浙江省',\n      city: '宁波市',\n      type: '家具',\n      sub_type: '桌子',\n    },\n    {\n      number: 4342,\n      province: '浙江省',\n      city: '舟山市',\n      type: '家具',\n      sub_type: '桌子',\n    },\n    {\n      number: 5343,\n      province: '浙江省',\n      city: '杭州市',\n      type: '家具',\n      sub_type: '沙发',\n    },\n    {\n      number: 632,\n      province: '浙江省',\n      city: '绍兴市',\n      type: '家具',\n      sub_type: '沙发',\n    },\n    {\n      number: 7234,\n      province: '浙江省',\n      city: '宁波市',\n      type: '家具',\n      sub_type: '沙发',\n    },\n    {\n      number: 834,\n      province: '浙江省',\n      city: '舟山市',\n      type: '家具',\n      sub_type: '沙发',\n    },\n    {\n      number: 945,\n      province: '浙江省',\n      city: '杭州市',\n      type: '办公用品',\n      sub_type: '笔',\n    },\n    {\n      number: 1304,\n      province: '浙江省',\n      city: '绍兴市',\n      type: '办公用品',\n      sub_type: '笔',\n    },\n    {\n      number: 1145,\n      province: '浙江省',\n      city: '宁波市',\n      type: '办公用品',\n      sub_type: '笔',\n    },\n    {\n      number: 1432,\n      province: '浙江省',\n      city: '舟山市',\n      type: '办公用品',\n      sub_type: '笔',\n    },\n    {\n      number: 1343,\n      province: '浙江省',\n      city: '杭州市',\n      type: '办公用品',\n      sub_type: '纸张',\n    },\n    {\n      number: 1354,\n      province: '浙江省',\n      city: '绍兴市',\n      type: '办公用品',\n      sub_type: '纸张',\n    },\n    {\n      number: 1523,\n      province: '浙江省',\n      city: '宁波市',\n      type: '办公用品',\n      sub_type: '纸张',\n    },\n    {\n      number: 1634,\n      province: '浙江省',\n      city: '舟山市',\n      type: '办公用品',\n      sub_type: '纸张',\n    },\n    {\n      number: 1723,\n      province: '四川省',\n      city: '成都市',\n      type: '家具',\n      sub_type: '桌子',\n    },\n    {\n      number: 1822,\n      province: '四川省',\n      city: '绵阳市',\n      type: '家具',\n      sub_type: '桌子',\n    },\n    {\n      number: 1943,\n      province: '四川省',\n      city: '南充市',\n      type: '家具',\n      sub_type: '桌子',\n    },\n    {\n      number: 2330,\n      province: '四川省',\n      city: '乐山市',\n      type: '家具',\n      sub_type: '桌子',\n    },\n    {\n      number: 2451,\n      province: '四川省',\n      city: '成都市',\n      type: '家具',\n      sub_type: '沙发',\n    },\n    {\n      number: 2244,\n      province: '四川省',\n      city: '绵阳市',\n      type: '家具',\n      sub_type: '沙发',\n    },\n    {\n      number: 2333,\n      province: '四川省',\n      city: '南充市',\n      type: '家具',\n      sub_type: '沙发',\n    },\n    {\n      number: 2445,\n      province: '四川省',\n      city: '乐山市',\n      type: '家具',\n      sub_type: '沙发',\n    },\n    {\n      number: 2335,\n      province: '四川省',\n      city: '成都市',\n      type: '办公用品',\n      sub_type: '笔',\n    },\n    {\n      number: 245,\n      province: '四川省',\n      city: '绵阳市',\n      type: '办公用品',\n      sub_type: '笔',\n    },\n    {\n      number: 2457,\n      province: '四川省',\n      city: '南充市',\n      type: '办公用品',\n      sub_type: '笔',\n    },\n    {\n      number: 2458,\n      province: '四川省',\n      city: '乐山市',\n      type: '办公用品',\n      sub_type: '笔',\n    },\n    {\n      number: 4004,\n      province: '四川省',\n      city: '成都市',\n      type: '办公用品',\n      sub_type: '纸张',\n    },\n    {\n      number: 3077,\n      province: '四川省',\n      city: '绵阳市',\n      type: '办公用品',\n      sub_type: '纸张',\n    },\n    {\n      number: 3551,\n      province: '四川省',\n      city: '南充市',\n      type: '办公用品',\n      sub_type: '纸张',\n    },\n    {\n      number: 352,\n      province: '四川省',\n      city: '乐山市',\n      type: '办公用品',\n      sub_type: '纸张',\n    },\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Customizing Switcher Popover in React\nDESCRIPTION: Shows how to customize the Switcher's popover behavior by passing Ant Design Popover props.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/switcher.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\n<Switcher popover={{ arrowPointAtCenter: true }} />\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Pivot Table Data Structure\nDESCRIPTION: Example configuration for a pivot table showing the data structure with fields for rows, columns and values. Demonstrates how to organize hierarchical data for provinces, cities, and product types.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/performance.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst dataCfg={\n  fields:{\n    rows: [\"province\", \"city\"],\n    columns: [\"type\",\"sub_type\"],\n    values: [\"number\"]\n  },\n  data:[\n    {\n      number: 7789,\n      province: \"浙江省\",\n      city: \"杭州市\",\n      type: \"家具\",\n      sub_type: \"桌子\"\n    },{\n      number: 2367,\n      province: \"浙江省\",\n      city: \"绍兴市\",\n      type: \"家具\",\n      sub_type: \"桌子\"\n    },\n  //...\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Custom Interaction Class in TypeScript\nDESCRIPTION: Basic structure for creating a custom interaction class by extending BaseEvent. Provides access to spreadsheet instance via this.spreadsheet.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/custom.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BaseEvent } from '@antv/s2';\n\n// 继承 BaseEvent, 可以拿到 this.spreadsheet\nclass HiddenInteraction extends BaseEvent {\n  bindEvents() {\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Text, Interval, and Background Conditions in S2\nDESCRIPTION: JavaScript example showing how to configure text, interval (histogram), and background field marking conditions. Each condition specifies a field to mark and a mapping function that returns styling information.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/conditions.en.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n  conditions: {\n    text: [\n      {\n        field: \"province\",\n        mapping: () => ({\n          fill: \"rgba(0, 0, 0, .65)\",\n        }),\n      },\n    ],\n    interval: [\n      {\n        field: \"sub_type\",\n        mapping: () => {\n          return {\n            fill: \"green\",\n          };\n        },\n      },\n    ],\n    background: [\n      {\n        field: \"count\",\n        mapping: () => ({\n          fill: \"#ff00ff\",\n        }),\n      },\n    ],\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Export Functionality with SheetComponent\nDESCRIPTION: Example of enabling export functionality in S2 React SheetComponent through header configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/export.en.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SheetComponent } from '@antv/s2-react'\n\n<SheetComponent\n  dataCfg={dataCfg}\n  options={options}\n  header={{\n    export: {\n      open: true\n    }\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Customizing Icon Position in Field Marking\nDESCRIPTION: Example showing how to set the position of icons relative to text in field marking. The position property can be set to 'left' or 'right' to control icon placement.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/conditions.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  conditions: {\n    icon: [\n      {\n        field: 'number',\n        position: 'left',\n        mapping() {\n          return {\n            icon: 'CellUp',\n            fill: '#2498D1',\n          };\n        },\n      },\n    ],\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Node-Specific Collapse Configuration in TypeScript\nDESCRIPTION: Configuration for collapsing specific nodes by their ID, using Zhejiang province as an example.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-collapse-nodes.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      collapseFields: { 'root[&] 浙江省': true },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Totals in S2 Grid\nDESCRIPTION: This code snippet demonstrates how to configure row and column totals in an S2 grid. It shows options for enabling totals, setting their positions, customizing display text, and determining which data values should appear in the totals.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/analysis/totals/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n{\n  totals: {\n    row: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      reverseLayout: true,\n      reverseSubLayout: true,\n      subTotalsDimensions: ['province'],\n      calcTotals: {\n        aggregation: 'SUM',\n      },\n      calcSubTotals: {\n        aggregation: 'SUM',\n      },\n      label: '合计',\n      subLabel: '小计',\n      showGrandTotalsOnTop: true,\n      totalsGroupDimensions: ['city', 'type'],\n      data: [{}],\n    },\n    col: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      reverseLayout: true,\n      reverseSubLayout: true,\n      subTotalsDimensions: ['type'],\n      calcTotals: {\n        aggregation: 'SUM',\n      },\n      calcSubTotals: {\n        aggregation: 'SUM',\n      },\n      label: '合计',\n      subLabel: '小计',\n      showGrandTotalsOnTop: true,\n      totalsGroupDimensions: ['sub_type'],\n      data: [{}],\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Using StrategyExport Component for Trend Analysis Tables\nDESCRIPTION: Example showing how to use the StrategyExport component specifically designed for trend analysis tables which have a different data structure compared to regular tables.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/export.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { StrategyExport } from '@antv/s2-react-components'\n\n<StrategyExport sheetInstance={s2Ref.current} />\n```\n\n----------------------------------------\n\nTITLE: Implementing Drill-Down in React with @antv/s2-react-components\nDESCRIPTION: Example of how to set up dimension drill-down in a React application using the DrillDown component from @antv/s2-react-components. The example shows basic configuration with tree hierarchy and pivot sheet type.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/drill-down.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { DrillDown } from '@antv/s2-react-components';\nimport '@antv/s2-react-components/dist/s2-react-components.min.css'\n\nconst s2Options = {\n  width: 600,\n  height: 480,\n  hierarchyType: 'tree'\n};\n\n<SheetComponent\n  sheetType=\"pivot\"\n  options={s2Options}\n  partDrillDown={{\n    render: (props) => <DrillDown {...props} />,\n    ...PartDrillDown\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Extending Internationalization in S2 (TypeScript)\nDESCRIPTION: This code shows how to extend the internationalized text using the extendLocale function. It should be called before instantiating the table. The example adds a 'test' key to three locales.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/i18n.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { i18n, extendLocale } from '@antv/s2'\n\nconst locale = {\n  zh_CN: {\n    test: '测试',\n  },\n  en_US: {\n    test: 'test',\n  },\n  ru_RU: {\n    test: 'тест',\n  },\n};\n\nextendLocale(locale)\n\n// 使用\ni18n('test')\n```\n\n----------------------------------------\n\nTITLE: Configuring Selectable Fields in JavaScript\nDESCRIPTION: Shows how to configure a field to be selectable, enabling checkbox functionality for controlling field visibility.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/switcher.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst field = {\n  selectable: true,\n  items: [\n    /*...*/\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Tooltips for Strategy Sheet\nDESCRIPTION: Implementation of custom tooltips for row headers, column headers, and data cells in a Strategy Sheet, with options for displaying original values and customizing tooltip content.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.en.md#2025-04-22_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nimport { StrategySheetRowTooltip, StrategySheetColTooltip, StrategySheetDataTooltip } from '@antv/s2-react'\n\nconst s2Options = {\n  tooltip: {\n    content: (cell) => <StrategySheetDataTooltip cell={cell} label={label}/>\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Popover Settings\nDESCRIPTION: Example showing how to customize the Switcher's popover behavior using antd Popover props\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/switcher.en.md#2025-04-22_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\n<Switcher popover={{ arrowPointAtCenter: true }} />\n```\n\n----------------------------------------\n\nTITLE: Using React Components in Tooltip Menu Items\nDESCRIPTION: Demonstrates how to use React components for text and icons in tooltip menu items when using @antv/s2-react.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_13\n\nLANGUAGE: tsx\nCODE:\n```\nimport { StarOutlined } from '@ant-design/icons';\n\nconst s2Options = {\n   tooltip: {\n     operation: {\n        menu: {\n          items: [\n            {\n              key: 'custom-a',\n              text: <div>Operation 1</div>,\n              icon: <StarOutlined/>,\n            }\n          ]\n        }\n     }\n   },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Sort Order with Lists in Ant S2\nDESCRIPTION: Example of defining custom sort orders for dimensions using the sortBy parameter, which allows specifying the exact order of values for province, city, and type dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/basic.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nsortParams: [\n  { sortFieldId: 'province', sortBy: [ '吉林', '浙江' ] },\n  { sortFieldId: 'city', sortBy: [ '舟山', '杭州', '白山', '长春' ] },\n  { sortFieldId: 'type', sortBy: [ '纸张', '笔' ] },\n];\n```\n\n----------------------------------------\n\nTITLE: Monitoring Column Expansion and Hiding Events in S2\nDESCRIPTION: This code demonstrates how to listen for column expansion and hiding events in S2 using the S2Event enum.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/hide-columns.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2'\n\nconst s2 = new PivotSheet(...);\n\ns2.on(S2Event.COL_CELL_EXPANDED, (cell) => {\n  console.log('列头展开', cell);\n});\n\ns2.on(\n  S2Event.COL_CELL_HIDDEN,\n  (currentHiddenColumnsInfo, hiddenColumnsDetail) => {\n    console.log('列头隐藏', currentHiddenColumnsInfo, hiddenColumnsDetail);\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Column Header Double-Click Handler in TypeScript\nDESCRIPTION: Implementation of a custom interaction that hides columns when their headers are double-clicked. Uses S2Event.COL_CELL_DOUBLE_CLICK event listener.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/custom.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BaseEvent, S2Event } from '@antv/s2';\n\nclass HiddenInteraction extends BaseEvent {\n  bindEvents() {\n    // 列头双击时\n    this.spreadsheet.on(S2Event.COL_CELL_DOUBLE_CLICK, (event) => {\n      // 获取当前单元格\n      const cell = this.spreadsheet.getCell(event.target);\n      // 获取当前单元格元数据\n      const meta = cell.getMeta();\n      // 隐藏当前列\n      this.spreadsheet.interaction.hideColumns([meta.field]);\n    });\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Mobile Copy Operations with S2 Data Grid\nDESCRIPTION: This code shows how to implement copy functionality for mobile platforms by handling touch events and providing a custom UI for copy operations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/copy.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2';\n\ns2.on(S2Event.ROW_CELL_CLICK, (cell) => {\n  // show custom context menu with copy option\n  showContextMenu([\n    {\n      key: 'copy',\n      text: 'Copy',\n      onClick: () => {\n        const content = cell.getFieldValue();\n        copy(content);\n      },\n    },\n  ]);\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing S2 Theme Properties (JavaScript)\nDESCRIPTION: This code shows how to customize specific theme properties in S2. It modifies various aspects of the theme such as cell colors, fonts, and interaction styles by overriding default values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/theme/default/index.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst s2 = new Sheet({\n  // ... other configurations\n  theme: {\n    background: {\n      color: '#f6f6f6',\n    },\n    cornerCell: {\n      text: {\n        fill: '#2E2E2E',\n      },\n      bolderText: {\n        fill: '#131313',\n        fontSize: 12,\n      },\n    },\n    rowCell: {\n      // ... other row cell configurations\n      text: {\n        fill: '#2E2E2E',\n      },\n    },\n    colCell: {\n      // ... other column cell configurations\n      text: {\n        fill: '#2E2E2E',\n      },\n    },\n    dataCell: {\n      // ... other data cell configurations\n      text: {\n        fill: '#2E2E2E',\n      },\n    },\n    splitLine: {\n      horizontalBorderColor: '#DEE0E3',\n      horizontalBorderColorOpacity: 1,\n      verticalBorderColor: '#DEE0E3',\n      verticalBorderColorOpacity: 1,\n      showShadow: true,\n      shadowWidth: 8,\n      shadowColors: {\n        left: 'rgba(0,0,0,0.1)',\n        right: 'rgba(0,0,0,0)',\n      },\n    },\n    scrollBar: {\n      thumbColor: 'rgba(201,205,212,0.9)',\n      thumbHoverColor: 'rgba(201,205,212,0.9)',\n    },\n    interaction: {\n      hoverHighlight: {\n        rowHeaderFill: 'rgba(234,239,242,0.5)',\n        colHeaderFill: 'rgba(234,239,242,0.5)',\n        rowCellFill: 'rgba(234,239,242,0.5)',\n        colCellFill: 'rgba(234,239,242,0.5)',\n        dataCellFill: 'rgba(234,239,242,0.5)',\n      },\n      selectedCellsSpotlight: {\n        /* ... */\n      },\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Transforming and Processing Dimension Values in S2\nDESCRIPTION: This snippet shows how S2 extracts and processes dimension values from raw data. It transforms data fields into indexed arrays that will be used to build the pivot structure.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/pivot.en.md#2025-04-22_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\n// 第四条数据\n// { \"price\": 4,\"province\": \"浙江省\",\"city\": \"绍兴市\",\"type\": \"家具\",\"sub_type\": \"沙发\" }\nconst rowDimensionValues = transformDimensionsValue(currentData, ['province', 'city']); // 结果是 ['浙江省', '绍兴市']\nconst colDimensionValues = transformDimensionsValue(currentData, ['type', 'sub_type']); // 结果是 ['家具', '沙发']\n```\n\n----------------------------------------\n\nTITLE: Basic Tree Node Collapse Configuration in TypeScript\nDESCRIPTION: Basic configuration options for controlling tree node collapse behavior, including collapse fields, expand depth, and collapse all settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-collapse-nodes.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'tree',\n  style: {\n    rowCell: {\n      // 折叠节点\n      collapseFields: {},\n      // 展开层级\n      expandDepth: 0,\n      // 折叠所有\n      collapseAll: true\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Row Header in S2 Visualization\nDESCRIPTION: Configuration for setting up custom row headers using a tree structure in S2. The values are placed at the row header with valueInCols set to false.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: customTree,\n    columns: ['type', 'sub_type'],\n    values: ['measure-1', 'measure-2']\n    valueInCols: false,\n  },\n  data,\n};\n```\n\n----------------------------------------\n\nTITLE: Documenting Layout Events in AntV S2 (Markdown)\nDESCRIPTION: This snippet lists events related to layout operations in the AntV S2 library, including header layout completion, data cell rendering, pagination, column header expansion, and rendering lifecycle events.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-event.en.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### layout\n\n| name                           | event name                                   | describe                                                                                  |\n| ------------------------------ | -------------------------------------------- | ----------------------------------------------------------------------------------------- |\n| Header layout complete         | `S2Event.LAYOUT_AFTER_HEADER_LAYOUT`         | Triggered after row header and column header layout is completed                          |\n| Numerical cell layout complete | `S2Event.LAYOUT_AFTER_REAL_DATA_CELL_RENDER` | Triggered after the rendering of the value cell in the current visible range is completed |\n| paging                         | `S2Event.LAYOUT_PAGINATION`                  | pagination event                                                                          |\n| column header expansion        | `S2Event.COL_CELL_EXPANDED`                  | Triggered when the column header is expanded                                              |\n| column header hidden           | `S2Event.COL_CELL_HIDDEN`                    | Triggered when the column header is hidden                                                |\n| start rendering                | `S2Event.LAYOUT_BEFORE_RENDER`               | The event before starting render, that is, `s2.render()`                                  |\n| rendering complete             | `S2Event.LAYOUT_AFTER_RENDER`                | The event that render is completed, that is, `s2.render()`                                |\n| form destruction               | `S2Event.LAYOUT_DESTROY`                     | Triggered after the table is destroyed or calling `s2.destroy()`                          |\n```\n\n----------------------------------------\n\nTITLE: Disabling Cell Width Reduction in S2 Resize\nDESCRIPTION: Demonstrates how to use the resize.disable property to implement custom resize validation logic, preventing cells from being resized smaller than their current width.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    resize: {\n      disable: (resizeInfo) => resizeInfo.resizedWidth <= resizeInfo.width;\n    }\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Priority Configuration in TypeScript\nDESCRIPTION: Example showing how to set configuration priorities between different collapse and expand options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-collapse-nodes.en.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      collapseFields: null, // 无效\n      collapseAll: true, // 生效\n      expandDepth: null, // 无效\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting Corner Head Events in AntV S2 (Markdown)\nDESCRIPTION: This snippet lists various events related to corner head interactions in the AntV S2 library, including click, double click, right click, hover, and mouse events.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-event.en.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Corner head\n\n| name           | event name                         | describe                         |\n| -------------- | ---------------------------------- | -------------------------------- |\n| click          | `S2Event.CORNER_CELL_CLICK`        | Corner header cell click         |\n| double click   | `S2Event.CORNER_CELL_DOUBLE_CLICK` | Corner cell double click         |\n| right click    | `S2Event.CORNER_CELL_CONTEXT_MENU` | Corner cell right click          |\n| hover          | `S2Event.CORNER_CELL_HOVER`        | corner header cell hover         |\n| mouse down     | `S2Event.CORNER_CELL_MOUSE_DOWN`   | Corner cell mouse down           |\n| mouse movement | `S2Event.CORNER_CELL_MOUSE_MOVE`   | Corner cell mouse movement       |\n| mouse release  | `S2Event.CORNER_CELL_MOUSE_UP`     | Corner header cell mouse release |\n```\n\n----------------------------------------\n\nTITLE: Customizing Sort Icon Tooltip Content and Behavior\nDESCRIPTION: Complete configuration for custom sort tooltips, including menu items, icons, and click handlers to display custom sorting options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-order.en.md#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nconst items = [\n  { key: SortMethodType.none, label: '不排序' },\n  { key: SortMethodType.asc, label: '升序', icon: 'GroupAsc' },\n  { key: SortMethodType.desc, label: '降序', icon: 'GroupDesc' },\n  { key: SortMethodType.custom, label: '自定义排序', icon: 'Trend' },\n];\n\nconst s2Options = {\n  // 设置自定义 `icon` 的展示条件\n  headerActionIcons: [\n    {\n      // 选择 icon, 可以是 S2 自带的，也可以是自定义的 icon\n      icons: [ 'customKingIcon' ],\n      // 通过 belongsCell + displayCondition 设置 icon 的展示位置\n      belongsCell: 'colCell',\n      displayCondition: (meta) => meta.level === 2,\n      // icon 点击之后的执行函数\n      onClick: (props) => {\n        const { meta, event } = props;\n        const operator = {\n          // 配置 tooltip 中展示的内容\n          menu: {\n            items\n          },\n        };\n        // 自定义 tooltip 配置，展示 toolTip\n        meta.spreadsheet.showTooltipWithInfo(event, [], {\n          operator,\n          onlyShowCellText: true,\n          onlyShowOperator: true,\n        });\n      },\n    },\n  ],\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Dynamic Column Cell Dimensions Based on Node Properties\nDESCRIPTION: Configuration for dynamically adjusting column cell dimensions based on node properties like column index. Return null to use default dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    colCell: {\n      width: (colNode) => {\n        // 例：前两列宽度 100px, 其他 50px\n        return colNode.colIndex <= 2 ? 100 : 50\n      },\n      height: (colNode) => {\n        // 例：前两列高度 100px, 其他 默认\n        return colNode.colIndex <= 2 ? 100 : null\n      },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Cell-Specific Tooltip Options in TypeScript\nDESCRIPTION: Demonstrates how to configure tooltips separately for different cell types in S2 charts, including corner, row, column, and data cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n   tooltip: {\n     cornerCell: {},\n     rowCell: {},\n     colCell: {},\n     dataCell: {},\n   }\n};\n```\n\n----------------------------------------\n\nTITLE: Extending Corner Cell with Custom Background in S2\nDESCRIPTION: Demonstrates how to extend the CornerCell class to override the default rendering behavior. This example replaces the background with a custom image and preserves the text rendering functionality.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/custom.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Image as GImage } from '@antv/g';\nimport { CornerCell } from '@antv/s2';\n\nclass CustomCornerCell extends CornerCell {\n  initCell()\n    super.initCell()\n\n    // 绘制任意图形\n    this.appendChild(...)\n  }\n\n  drawBackgroundShape() {\n    const url = 'https://gw.alipayobjects.com/zos/antfincdn/og1XQOMyyj/1e3a8de1-3b42-405d-9f82-f92cb1c10413.png';\n\n    this.backgroundShape = this.appendChild(\n      new GImage({\n        style: {\n          ...this.getBBoxByType(),\n          src: url,\n        },\n      }),\n    );\n\n    this.drawTextShape();\n  }\n}\n\nconst s2Options = {\n  cornerCell: (node, spreadsheet, headerConfig) => {\n    return new CustomCornerCell(node, spreadsheet, headerConfig);\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Pivot Table in React using AntV S2\nDESCRIPTION: Shows how to use AntV S2 to create a pivot table in a React component. It includes initialization, cleanup, and handling of React 18 StrictMode.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from \"react\";\nimport { PivotSheet } from '@antv/s2';\n\nconst s2Options = {\n  width: 400,\n  height: 200,\n};\n\nconst App = () => {\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\n  const shouldInit = React.useRef(true);\n  const isDevMode = React.useMemo(() => {\n    try {\n      return process.env['NODE_ENV'] !== 'production';\n    } catch {\n      return false;\n    }\n  }, []);\n\n  React.useEffect(() => {\n    // 兼容 React 18 StrictMode 开发环境下渲染两次\n    if (isDevMode && !shouldInit.current) {\n      return;\n    }\n\n    const s2 = new PivotSheet(container, dataCfg, s2Options);\n    shouldInit.current = false;\n\n    return () => {\n      s2?.destroy?.();\n    };\n  }, []);\n\n  return <div id=\"container\" ref={containerRef} />\n}\n```\n\n----------------------------------------\n\nTITLE: Importing S2 Stylesheet in Various Implementations\nDESCRIPTION: Code snippets showing how to import the required CSS stylesheets for different S2 implementations (core, React, and Vue versions).\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// @antv/s2\nimport \"@antv/s2/dist/s2.min.css\";\n// @antv/s2-react\nimport \"@antv/s2-react/dist/s2-react.min.css\";\n// @antv/s2-vue\nimport \"@antv/s2-vue/dist/s2-vue.min.css\";\n```\n\n----------------------------------------\n\nTITLE: Installing pnpm and Setting Up AntV S2 Development Environment\nDESCRIPTION: Commands for installing pnpm and setting up the development environment for the AntV S2 project. This includes installing dependencies, starting the website, debugging tests, and building packages.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/contribution.en.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g pnpm\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm site:start\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm core:start\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm react:start\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm react:playground\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm vue:playground\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm test\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm lint\n```\n\n----------------------------------------\n\nTITLE: Accessing Layout Result in AntV S2\nDESCRIPTION: This code demonstrates how to access all cells in the current visible range after rendering is complete using the getLayoutResult() method.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nawait s2.render()\n\n// ensure invoke after s2.render() completes\nconsole.log(s2.facet.getLayoutResult())\n```\n\n----------------------------------------\n\nTITLE: Configuring Tooltip Boundary Adjustment in S2\nDESCRIPTION: Shows how to configure automatic position adjustment for tooltips when they exceed specified boundaries.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    autoAdjustBoundary: \"container\" // 默认 \"body\"\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Data Paths and Multi-dimensional Arrays in S2\nDESCRIPTION: This code demonstrates how S2 creates paths for data indexing and builds a multidimensional array structure. It computes coordinate indices for each data point and assembles them into a structured array.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/pivot.en.md#2025-04-22_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nconst rowPath = getPath(rowDimensionValues); // 结果是 [0, 1]; 因为浙江下面有杭州和绍兴，所以绍兴坐标为 1，下同。\nconst colPath = getPath(colDimensionValues); // 结果是 [0, 1];\nconst dataPath = rowPath.concat(...colPath); // 结果是 [0, 1, 0, 1];\n\nlodash.set(indexesData, dataPath, currentData); // [0, 1, 0, 1] 是 { \"price\": 4,\"province\": \"浙江省\",\"city\": \"绍兴市\",\"type\": \"家具\",\"sub_type\": \"沙发\" }\n```\n\n----------------------------------------\n\nTITLE: Enabling Resize Functionality in S2\nDESCRIPTION: Configures the resize functionality for adjusting row and column widths. Shows both the simplified boolean configuration and the detailed object-based configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    resize: true\n  },\n};\n\n// 等价于\n// const s2Options = {\n//   interaction: {\n//     resize: {\n//       rowCellVertical:true,\n//       cornerCellHorizontal:true,\n//       colCellHorizontal:true,\n//       colCellVertical:true\n//     }\n//   },\n// };\n```\n\n----------------------------------------\n\nTITLE: Rendering Line Chart in S2 Grid Cell using Vanilla JavaScript\nDESCRIPTION: This example demonstrates how to render a line chart within an S2 grid cell using vanilla JavaScript. It uses the S2 and G2Plot libraries to create a custom cell renderer that displays a line chart based on the cell's data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/chart-in-cell.en.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Line } from '@antv/g2plot';\n\nclass CustomS2CellRenderer {\n  // 绘制\n  drawCells(cells) {\n    cells.forEach((cell) => {\n      this.drawCell(cell);\n    });\n  }\n\n  drawCell(cell) {\n    const { data } = cell.getMeta();\n    const container = cell.getContentGroup();\n\n    const plot = new Line(container, {\n      data,\n      padding: 'auto',\n      xField: 'year',\n      yField: 'value',\n      height: cell.getRectHeight(),\n      width: cell.getRectWidth(),\n      autoFit: true,\n    });\n\n    plot.render();\n  }\n}\n\n// 使用自定义单元格\nconst s2Options = {\n  width: 600,\n  height: 480,\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type'],\n    values: ['price'],\n  },\n  customCellTypes: {\n    type: {\n      city: CustomS2CellRenderer,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Header Action Icons in S2 (TypeScript)\nDESCRIPTION: This snippet shows how to configure header action icons in S2 options. It demonstrates setting a 'SortDown' icon for column cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-icon.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  headerActionIcons: [\n    {\n      icons: ['SortDown'],\n      belongsCell: 'colCell',\n    },\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing S2 Component in Vue Application\nDESCRIPTION: A Vue component implementation using the SheetComponent from @antv/s2-vue, demonstrating how to configure the component with data and options and access the S2 instance.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-vue/README.md#2025-04-22_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n// App.vue\n<script lang=\"ts\">\nimport type { S2DataConfig, S2Options } from '@antv/s2';\nimport { SheetComponent } from '@antv/s2-vue';\nimport { defineComponent, onMounted, reactive, shallowRef } from 'vue';\nimport \"@antv/s2-vue/dist/s2-vue.min.css\";\n\nexport default defineComponent({\n  setup() {\n    const s2 = shallowRef();\n    // dataCfg 数据字段较多，建议使用 shallow, 如果有数据更改直接替换整个对象\n    const dataCfg = shallowRef(s2DataConfig);\n    const options: S2Options = reactive(S2Options);\n\n    onMounted(() => {\n      console.log('s2 instance:', s2.value?.instance);\n    });\n    return {\n      s2,\n      dataCfg,\n      options,\n    };\n  },\n\n  components: {\n    SheetComponent,\n  },\n});\n</script>\n\n<template>\n  <SheetComponent ref=\"s2\" :dataCfg=\"dataCfg\" :options=\"options\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Tree Structure in TypeScript for S2 Visualization\nDESCRIPTION: Example of defining a custom tree structure with nested nodes for use in S2 visualizations. Each node has a key, title, description, and optional children array.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst customTree: CustomTreeNode[] = [\n  {\n    key: 'a-1',\n    title: '自定义节点 a-1',\n    description: 'a-1 描述',\n    children: [\n      {\n        key: 'a-1-1',\n        title: '自定义节点 a-1-1',\n        description: 'a-1-1 描述',\n        children: [\n          {\n            key: 'measure-1',\n            title: '指标 1',\n            description: '指标 1 描述',\n            children: [],\n          },\n          {\n            key: 'measure-2',\n            title: '指标 2',\n            description: '指标 2 描述',\n            children: [],\n          },\n        ],\n      },\n      {\n        key: 'a-1-2',\n        title: '自定义节点 a-1-2',\n        description: 'a-1-2 描述',\n        children: [],\n      },\n    ],\n  },\n  {\n    key: 'a-2',\n    title: '自定义节点 a-2',\n    description: 'a-2 描述',\n    children: [],\n  },\n];\n\nconst data = [\n  {\n    'measure-1': 13,\n    'measure-2': 2,\n    type: '家具',\n    sub_type: '桌子',\n  },\n  {\n    'measure-1': 11,\n    'measure-2': 8,\n    type: '家具',\n    sub_type: '椅子',\n  },\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Data for Specific Row and Column in S2 Visualization in TypeScript\nDESCRIPTION: Demonstrates how to retrieve data for a specific cell by finding the intersection of a row and column using node queries in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_22\n\nLANGUAGE: ts\nCODE:\n```\n// 找到 \"舟山市\" 对应的行头单元格节点\nconst rowCellNode = s2.facet.getRowNodes().find((node) => node.id === 'root[&] 浙江省 [&] 舟山市')\n// 找到 \"办公用品\" 下 \"纸张\" 对应的 \"数量\"列头单元格节点\nconst colCellNode = s2.facet.getColNodes().find((node) => node.id === 'root[&] 办公用品 [&] 纸张 [&]number')\n\nconst data = s2.dataSet.getCellMultiData({\n  query: {\n    ...rowCellNode.query,\n    ...colCellNode.query\n  }\n})\n\n// 或者\nconst cellMeta = s2.facet.getCellMeta(\n  rowCellNode?.rowIndex,\n  colCellNode?.colIndex,\n);\n\n/**\n  [{\n    \"raw\": {\n      \"number\": 1634,\n      \"province\": \"浙江省\",\n      \"city\": \"舟山市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"纸张\"\n    },\n    \"extraField\": \"number\"\n  }]\n*/\n```\n\n----------------------------------------\n\nTITLE: Sorting by Measure Values in Ant S2\nDESCRIPTION: Example of sorting the 'type' dimension based on the 'price' measure values for a specific province and city, using the sortByMeasure parameter.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/basic.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  sortParams: [\n    {\n      // type 依据 浙江-舟山-price 升序 排序\n      sortFieldId: 'type',\n      sortMethod: 'ASC',\n      sortByMeasure: 'price',\n      query: {\n        province: '浙江',\n        city: '舟山',\n        [EXTRA_FIELD]: 'price',\n      },\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LayoutCoordinate Function in JavaScript\nDESCRIPTION: Function signature for the LayoutCoordinate function used for custom coordinates in antvis/s2. It takes a SpreadSheet instance and row/column node parameters to customize coordinate positioning.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/layoutCoordinate.en.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nLayoutCoordinate = (spreadsheet: SpreadSheet, rowNode: Node, colNode: Node) => void\n```\n\n----------------------------------------\n\nTITLE: Controlling Resize Hotspots with Visible Configuration\nDESCRIPTION: Examples showing how to dynamically control the visibility of resize hotspots. The first example shows how to only display resize hotspots for leaf nodes, while the second shows how to display resize hotspots for only a specific cell.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/resize.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    resize: {\n      visible: (cell) => {\n        const meta = cell.getMeta();\n        return meta.isLeaf\n      }\n    }\n  },\n};\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    resize: {\n      visible: (cell) => {\n        const meta = cell.getMeta();\n        return meta.id === 'root[&]家具[&]桌子[&]number'\n      }\n    }\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Basic Switcher Component Implementation\nDESCRIPTION: Basic React implementation showing how to render the Switcher component with field configurations and submit handler\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/switcher.en.md#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Switcher } from \"@antv/s2-react\";\n\nconst onSubmit = (result) => {\n  console.log(\"result:\", result);\n};\n\nReactDOM.render(\n  <Switcher {...switcherFields} onSubmit={onSubmit} />,\n  document.getElementById(\"container\")\n);\n```\n\n----------------------------------------\n\nTITLE: Removing Pagination Component in S2\nDESCRIPTION: Shows how to migrate from the deprecated showPagination property to the new pagination approach in S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_44\n\nLANGUAGE: diff\nCODE:\n```\n- <SheetComponent showPagination />\n```\n\n----------------------------------------\n\nTITLE: Installing @antv/s2-react Package Using npm, yarn, or pnpm\nDESCRIPTION: Command line instructions for installing the @antv/s2-react package using different package managers. The package provides React components for multidimensional data analysis tables.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm add @antv/s2-react\n# npm install @antv/s2-react --save\n# yarn add @antv/s2-react\n```\n\n----------------------------------------\n\nTITLE: Defining CellType Enum in TypeScript\nDESCRIPTION: Defines the CellType enum which categorizes different types of cells in the S2 table, including data cells, row header cells, column header cells, corner cells, and merged cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_24\n\nLANGUAGE: typescript\nCODE:\n```\nexport enum CellType {\n  DATA_CELL = 'dataCell',  // 数值单元格\n  ROW_CELL = 'rowCell', // 行头单元格\n  COL_CELL = 'colCell', // 列头单元格\n  CORNER_CELL = 'cornerCell', // 角头单元格\n  MERGED_CELL = 'mergedCell', // 合并后的单元格\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Shapes to Specific S2 Cells\nDESCRIPTION: Demonstrates how to retrieve a specific cell instance from the S2 facet and add custom shapes to it. This approach targets individual cells for customization after the table is rendered.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/custom.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Rect } from '@antv/g';\n\nawait s2.render();\n\nconst targetCell = s2.facet.getDataCells()[0];\n\ntargetCell?.appendChild(\n  new Rect({\n    style: {\n      x: 0,\n      y: 100,\n      width: 20,\n      height: 20,\n      fill: '#396',\n      fillOpacity: 0.8,\n      stroke: '#ddd',\n      strokeOpacity: 0.8,\n      lineWidth: 4,\n      radius: 10,\n      zIndex: 999,\n    },\n  }),\n);\n```\n\n----------------------------------------\n\nTITLE: Customizing Icon Color in S2 Table Header (TypeScript)\nDESCRIPTION: This snippet demonstrates how to customize the color of an icon in the S2 table header, either by setting a specific color or using the icon's original colors.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-icon.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  headerActionIcons: [\n    {\n      icons: [{ name: 'SortDown', position: 'left', fill: 'red' }],\n      belongsCell: 'colCell',\n    },\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Updating Data Configuration\nDESCRIPTION: Method to update the data configuration with option to reset existing data. Requires @antv/s2^1.34.0 for reset parameter.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n(dataCfg: S2DataConfig, reset?: boolean) => void\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Theme for S2 Table in TypeScript\nDESCRIPTION: Sets a custom background color theme for an S2 PivotSheet instance. This demonstrates how to use the setTheme method to modify specific theme elements without changing the entire theme configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/theme.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\ns2.setTheme({\n  background: {\n    color: '#353c59',\n  },\n});\ns2.render(false);\n```\n\n----------------------------------------\n\nTITLE: Implementing Sheet Export Component in React\nDESCRIPTION: Basic implementation of SheetComponent with export functionality enabled through header configuration. Demonstrates how to add export capabilities to an S2 sheet using the export property in header options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/export.en.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n<SheetComponent\n  dataCfg={dataCfg}\n  options={options}\n  header={{ export: { open: true } }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Disabling Drag Functionality in S2 Resize\nDESCRIPTION: Configuration for custom validation logic to disable drag functionality based on specific conditions. The example shows how to prevent cells from being resized smaller than their current width.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/resize.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    resize: {\n      disable: (resizeInfo) => resizeInfo.resizedWidth <= resizeInfo.width;\n    }\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Specific Row Dimensions by Field or ID in S2\nDESCRIPTION: Configuring different widths and heights for specific rows using fieldId or dimension field in S2. Supports both unique node IDs and field names from s2DataConfig.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      widthByField: {\n        city: 100\n      },\n      heightByField: {\n        'root[&] 浙江省 [&] 杭州市': 60,\n        'root[&] 浙江省 [&] 宁波市': 100,\n      },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Tooltip Operations in S2-React/Vue\nDESCRIPTION: Demonstrates how to configure tooltip operations like column hiding in the React and Vue implementations of S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    operation: {\n      hiddenColumns: true, //开启隐藏列（叶子节点有效）\n    },\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Display Behavior with Custom Interaction\nDESCRIPTION: This example demonstrates how to customize tooltip display behavior by creating a custom interaction class. It shows the tooltip on row cell hover instead of the default behavior.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_23\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BaseEvent, S2Event } from '@antv/s2';\n\nclass RowHoverInteraction extends BaseEvent {\n  bindEvents() {\n    this.spreadsheet.on(S2Event.ROW_CELL_HOVER, (event) => {\n      this.spreadsheet.tooltip.show({\n        position: { x: 0, y: 0 },\n        content: \"...\"\n      })\n    })\n  }\n}\n\nconst s2Options = {\n  tooltip: {\n    enable: true,\n  },\n  interaction: {\n    customInteractions: [\n      {\n        key: 'RowHoverInteraction',\n        interaction: RowHoverInteraction,\n      },\n    ],\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Selecting All Cells Using S2 Interaction API in TypeScript\nDESCRIPTION: This snippet demonstrates how to create a PivotSheet instance and use the interaction API to select all cells. The interaction methods are accessed through the s2.interaction namespace after instantiating a SpreadSheet object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2 = new PivotSheet()\ns2.interaction.selectAll()\n```\n\n----------------------------------------\n\nTITLE: Defining CellCallback in JavaScript\nDESCRIPTION: Defines a callback function for customizing cells. It takes Node, SpreadSheet, and optional parameters, returning a G.Group object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-options.en.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nCellCallback = (node: Node, spreadsheet: SpreadSheet, ...restOptions: unknown[]) => G.Group;\n```\n\n----------------------------------------\n\nTITLE: Setting Column Cell Dimensions by Field in S2\nDESCRIPTION: Configuration for setting specific column cell dimensions based on field ID or field name, allowing precise control over individual cells or entire dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { EXTRA_FIELD } from '@antv/s2'\n\nconst s2Options = {\n  style: {\n    colCell: {\n       widthByField: {\n        // 默认 [数值挂列头], EXTRA_FIELD 为内部虚拟数值列，对应 [数值] 单元格\n        [EXTRA_FIELD]: 60,\n        city: 20,\n        'root[&]家具[&]沙发[&]number': 120,\n      },\n      heightByField: {\n        [EXTRA_FIELD]: 80,\n        // 调整维度\n        city: 20,\n        // 调整具体单元格\n        'root[&]家具[&]沙发[&]number': 120,\n      },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Improving Scroll Selection Performance in TypeScript\nDESCRIPTION: Fixes slow scroll selection from bottom to top and optimizes the scroll selection mask display.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: TypeScript\nCODE:\n```\n**interaction:** 修复从下往上滚动刷选速度缓慢 & 优化滚动刷选蒙层显示 ([#2119](https://github.com/antvis/S2/issues/2119)) ([8131d80](https://github.com/antvis/S2/commit/8131d8034ce255e05273c1792ecb11cd3e5aece2))\n```\n\n----------------------------------------\n\nTITLE: Manually Displaying Tooltips in TypeScript\nDESCRIPTION: Shows how to programmatically display tooltips using the table instance methods.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nconst TooltipContent = (\n   <div>content</div>\n);\n\ns2. showTooltip({\n   content: TooltipContent\n})\n\n// or s2.tooltip.show({ content: TooltipContent })\n```\n\n----------------------------------------\n\nTITLE: Row/Column Freezing Configuration Update\nDESCRIPTION: Consolidates freezing configurations under a single 'frozen' object for both pivot and detail tables.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_18\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n-  frozenRowHeader: true,\n-  frozenFirstRow: true,\n-  frozenRowCount: 1;\n-  frozenColCount: 1;\n-  frozenTrailingRowCount: 1;\n-  frozenTrailingColCount: 1;\n\n+  frozen: {\n+    rowHeader: true,\n+    rowCount: 1;\n+    colCount: 1;\n+    trailingRowCount: 1;\n+    trailingColCount: 1;\n+  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Window Adaptation with ResizeObserver\nDESCRIPTION: Code for making an S2 table adapt to window size changes using ResizeObserver to monitor the document body. Includes debounce functionality to prevent excessive rendering.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PivotSheet } from '@antv/s2'\nimport { debounce } from 'lodash'\n\nconst s2 = new PivotSheet(...)\n\nconst debounceRender = debounce(async (width, height) => {\n  s2.changeSheetSize(width, height)\n  await s2.render(false) // 不重新加载数据\n}, 200)\n\nconst resizeObserver = new ResizeObserver(([entry] = []) => {\n  const [size] = entry.borderBoxSize || [];\n  debounceRender(size.inlineSize, size.blockSize)\n})\n\n// 通过监听 document.body 来实现监听窗口大小变化\nresizeObserver.observe(document.body);\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Sheet Type in React Components\nDESCRIPTION: Example of setting up a SheetComponent with a specific sheet type (pivot or table). The sheetType property determines whether the component renders as a pivot table or detailed table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.en.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nfunction App() {\n  // pivot 透视表，table: 明细表\n  return (\n    <SheetComponent sheetType=\"pivot\" />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Left Alignment for Row Header Cells in S2 CrossTable\nDESCRIPTION: Code example demonstrating how to configure left alignment for both bolderText (non-leaf nodes) and regular text (leaf nodes) in row header cells of an S2 CrossTable.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nrowCell: {\n  bolderText: {\n    textAlign: 'left',\n  },\n  text: {\n    textAlign: 'left',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Display in React Component\nDESCRIPTION: This snippet shows how to customize tooltip display in a React component using the onRowCellHover callback function.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_19\n\nLANGUAGE: tsx\nCODE:\n```\nconst CustomColCellTooltip = () => <div>col cell tooltip</div>;\n\nconst onRowCellHover = ({ event, viewMeta }) => {\n   viewMeta.spreadsheet.tooltip.show({\n     position: {\n       x: event.clientX,\n       y: event.clientY,\n     },\n     content: <CustomRowCellTooltip/>,\n   });\n};\n\n<SheetComponent onRowCellHover={ onRowCellHover }/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Cell Selection Options in TypeScript\nDESCRIPTION: Demonstrates how to use new configuration options for cell selection, including animation and scroll event skipping.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_28\n\nLANGUAGE: typescript\nCODE:\n```\ns2.interaction.selectCell(cell, {\n  animate: true,\n  skipScrollEvent: true\n})\n```\n\n----------------------------------------\n\nTITLE: Enabling CSS Transform Support in S2 Options\nDESCRIPTION: Configures S2 to properly support CSS transform scaling by enabling the supportsCSSTransform property in the canvas configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  transformCanvasConfig() {\n    return {\n      supportsCSSTransform: true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Scroll Animation in AntV S2 Cell Selection\nDESCRIPTION: Shows how to disable the automatic scroll animation that occurs when selecting or highlighting cells by setting the animate option to false.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.zh.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ns2.interaction.selectCell(targetCell, {\n  animate: false\n})\n```\n\n----------------------------------------\n\nTITLE: Customizing Corner Header Text in S2 Visualization\nDESCRIPTION: Configuration for customizing the corner header text using the cornerText option in S2Options. This allows setting a custom title for the corner header area.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.en.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  cornerText: '自定义角头标题'\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Table Configuration\nDESCRIPTION: Method to update table options with ability to reset existing configuration. Requires @antv/s2^1.34.0 for reset parameter.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\n(options: S2Options, reset?: boolean) => void\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Sort Parameters in Ant S2\nDESCRIPTION: Basic example of configuring sortParams in the s2DataConfig to sort data by 'type' field in descending order, with a query filter for the city of '成都' and 'price' values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/basic.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { EXTRA_FIELD } from \"@antv/s2\";\n\nconst s2DataConfig = {\n  sortParams: [\n    {\n      sortFieldId: 'type',\n      sortMethod: 'DESC',\n      // EXTRA_FIELD 是 dataCfg.fields.values 字段的虚拟 fieldId\n      query: { city: '成都', [EXTRA_FIELD]: 'price' },\n    },\n  ],\n  ...\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Line Text Styles in S2 Charts (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to configure multi-line text styles for different cell types in S2 charts. It sets the maximum number of lines, enables word wrapping, and specifies text overflow behavior.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/multi-line-text.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst cellTextWordWrapStyle = {\n  // 最大行数，文本超出后将被截断\n  maxLines: 2,\n  // 文本是否换行\n  wordWrap: true,\n  // 可选项见：https://g.antv.antgroup.com/api/basic/text#textoverflow\n  textOverflow: 'ellipsis',\n};\n\nconst s2Options = {\n  style: {\n    seriesNumberCell: cellTextWordWrapStyle,\n    colCell: cellTextWordWrapStyle,\n    cornerCell: cellTextWordWrapStyle,\n    rowCell: cellTextWordWrapStyle,\n    // 数值不建议换行，容易产生歧义\n    dataCell: cellTextWordWrapStyle,\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Batch Formatting Configuration in AntV S2\nDESCRIPTION: This snippet illustrates how to apply formatting to multiple fields simultaneously in AntV S2 using arrays and regular expressions in the meta configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/formatter.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  meta: [\n    {\n      field: ['province', 'city'],\n      formatter: (value, record, meta) => {\n        return `${value}-test`\n      },\n    },\n    {\n      field: /type/,\n      formatter: (value, record, meta) => {\n        return `${value}-test`\n      },\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Forwarding S2 Instance in Custom React Components\nDESCRIPTION: Example of using React.forwardRef to expose the S2 instance when creating a custom wrapper component around SheetComponent. This allows parent components to access the instance directly.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nconst YourComponent = React.forwardRef(\n  (props, ref: React.MutableRefObject<SpreadSheet>) => {\n\n    // ... 业务逻辑\n\n    return (\n      <SheetComponent ref={ref} />\n    )\n  }\n)\n\nfunction App() {\n  const s2Ref = React.useRef<SpreadSheet>()\n\n  const onMounted = () => {\n    console.log(s2Ref.current)\n  }\n\n  return (\n    <YourComponent ref={s2Ref} onMounted={onMounted}/>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Cell-Specific Tooltip Content Configuration in S2-React\nDESCRIPTION: Demonstrates how to configure different tooltip content for different cell types in S2-React.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nconst TooltipContent = (\n  <div>content</div>\n);\n\nconst RowCellTooltipContent = (\n  <div>rowCellTooltip</div>\n);\n\nconst ColCellTooltipContent = (\n  <div>colCellTooltip</div>\n);\n\nconst DataCellTooltipContent = (\n  <div>dataTooltip</div>\n);\n\nconst s2Options = {\n  tooltip: {\n    content: TooltipContent,\n    rowCell: {\n      content: RowCellTooltipContent,\n    },\n    colCell: {\n      content: ColCellTooltipContent\n    },\n    dataCell: {\n      content: DataCellTooltipContent\n    }\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Icons\nDESCRIPTION: Method to register custom SVG icons based on options.customSVGIcons configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\n() => void\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Column Header in S2 Visualization\nDESCRIPTION: Configuration for setting up custom column headers using a tree structure in S2. The values are placed at the column header with valueInCols set to true.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    columns: customTree,\n    rows: ['type', 'sub_type'],\n    values: ['measure-1', 'measure-2']\n    valueInCols: true,\n  },\n  data,\n};\n```\n\n----------------------------------------\n\nTITLE: Enabling Built-in Copy Feature in S2 Data Grid\nDESCRIPTION: This code demonstrates how to enable the built-in copy feature in S2 data grid through configuration options. The copy function is enabled by default and can be customized with different options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/copy.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    // Copy is enabled by default\n    copy: {\n      enable: true,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing DrillDown in React S2 Component\nDESCRIPTION: Example of implementing drilldown functionality in a React S2 SheetComponent with tree hierarchy structure in pivot mode.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/drill-down.en.md#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 480,\n  hierarchyType: 'tree', // 树形结构\n};\n\n<SheetComponent\n  options={s2Options}\n  partDrillDown={PartDrillDown}\n  sheetType=\"pivot\"  // 透视模式\n/>\n```\n\n----------------------------------------\n\nTITLE: 自定义趋势分析表的Tooltip实现\nDESCRIPTION: 展示了如何从S2 React包中引入预定义的Tooltip组件并进行自定义配置，包括标题自定义、原始数据显示和同环比数值渲染的方法。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { StrategySheetRowTooltip, StrategySheetColTooltip, StrategySheetDataTooltip } from '@antv/s2-react'\n\nconst s2Options = {\n  tooltip: {\n    content: (cell) => <StrategySheetDataTooltip cell={cell} label={label} />\n  }\n}\n```\n\nLANGUAGE: tsx\nCODE:\n```\n// 字符串\n<StrategySheetDataTooltip cell={cell} label={\"自定义标题\"}/>\n\n// 自定义组件\n<StrategySheetDataTooltip cell={cell} label={(cell, defaultLabel) => `${defaultLabel}（自定义标题`} />\n```\n\nLANGUAGE: tsx\nCODE:\n```\n<StrategySheetDataTooltip cell={cell} showOriginalValue />\n```\n\nLANGUAGE: tsx\nCODE:\n```\n<StrategySheetDataTooltip\n  cell={cell}\n  renderDerivedValue={(currentValue, originalValue, cell) => <span>({originalValue})</span> }\n/>\n```\n\n----------------------------------------\n\nTITLE: Forwarding S2 Instance in Custom Vue Components\nDESCRIPTION: Pattern for exposing S2 instances from a custom Vue wrapper component to parent components using the useExpose utility. This allows higher-level components to access the underlying SpreadSheet instance.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.en.md#2025-04-22_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\n//  二次封装组件\nexport default defineComponent({\n  name: 'YourSheet',\n  props: [] as unknown as BaseSheetInitProps,\n  emits: [] as unknown as BaseSheetInitEmits,\n  setup(props, ctx) {\n    const s2Ref = useExpose(ctx.expose);\n    return { s2Ref };\n  },\n  components: {\n    BaseSheet,\n  },\n});\n</script>\n<template>\n  <SheetComponent ref=\"s2Ref\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Configuring Hidden Columns in S2\nDESCRIPTION: Demonstrates how to hide columns by default and how to disable the manual column hiding interaction. Supports both pivot tables and detailed tables.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    columns: ['fieldA', 'fieldB']\n  }\n}\n\nconst s2Options = {\n  interaction: {\n    // 默认隐藏\n    hiddenColumns: ['fieldA']\n  },\n  // 关闭手动隐藏\n  tooltip: {\n    operation: {\n      hiddenColumns: false\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Defining SheetComponentOptions in TypeScript\nDESCRIPTION: This code snippet defines the SheetComponentOptions type, which extends S2Options and includes pagination properties from ant-design-vue. It combines the Pagination type from @antv/s2 with PaginationProps from ant-design-vue.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/sheet-component.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { Pagination, S2Options } from '@antv/s2';\nimport type { PaginationProps } from 'ant-design-vue';\n\ntype SheetComponentOptions = S2Options<\n   Element | string,\n   Pagination & PaginationProps\n>;\n```\n\n----------------------------------------\n\nTITLE: Defining CellDataParams Interface for S2 DataSet (TypeScript)\nDESCRIPTION: This snippet defines the CellDataParams interface used in the getCellData method of the S2 DataSet. It specifies the structure for parameters used when retrieving cell data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-data-set.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ninterface CellDataParams {\n  // search query\n  query: DataType;\n  isTotals?: boolean;\n  // use in part drill-down\n  rowNode?: Node;\n  // mark row's cell\n  isRow?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Container Adaptation with ResizeObserver\nDESCRIPTION: Code for making an S2 table adapt to container size changes using ResizeObserver. This approach is useful when the container size changes independently of the window size.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PivotSheet } from '@antv/s2'\nimport { debounce } from 'lodash'\n\nconst s2 = new PivotSheet(...)\n\nconst parent = /* 你的容器节点 */\n\nconst debounceRender = debounce(async (width, height) => {\n  s2.changeSheetSize(width, height)\n  await s2.render(false) // 不重新加载数据\n}, 200)\n\nconst resizeObserver = new ResizeObserver(([entry] = []) => {\n  const [size] = entry.borderBoxSize || [];\n  debounceRender(size.inlineSize, size.blockSize)\n});\n\nresizeObserver.observe(parent);\n\n// 取消监听\n// resizeObserver.unobserve(parent)\n```\n\n----------------------------------------\n\nTITLE: Custom SVG Icons Configuration Update\nDESCRIPTION: Changes the SVG icon configuration property from 'svg' to 'src' for API consistency.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_14\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  customSVGIcons: [\n    {\n      name: 'CustomIcon',\n-     svg: 'https://gw.alipayobjects.com/zos/bmw-prod/f44eb1f5-7cea-45df-875e-76e825a6e0ab.svg',\n+     src: 'https://gw.alipayobjects.com/zos/bmw-prod/f44eb1f5-7cea-45df-875e-76e825a6e0ab.svg',\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Advanced Sort with SheetComponent in React\nDESCRIPTION: A basic implementation example showing how to set up the advanced sort functionality in a React component using SheetComponent from @antv/s2-react. The example demonstrates setting initial sort parameters and handling sort confirmation events.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/advanced.en.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { SortParams } from '@antv/s2';\nimport { SheetComponent } from '@antv/s2-react';\nimport '@antv/s2-react/dist/s2-react.min.css';\n\nconst AdvancedSortDemo = () => {\n  const [dataCfg, setDataCfg] = useState(s2DataConfig);\n\n  return (\n    <SheetComponent\n      sheetType=\"pivot\"\n      adaptive={false}\n      dataCfg={dataCfg}\n      options={s2Options}\n      header={{\n        advancedSort: {\n          open: true,\n          sortParams: [{ sortFieldId: 'province', sortMethod: 'DESC' }],\n          onSortConfirm: (ruleValues, sortParams: SortParams) => {\n            setDataCfg({ ...dataCfg, sortParams });\n          },\n        },\n      }}\n    />\n  );\n};\n\nReactDOM.render(<AdvancedSortDemo />, document.getElementById('container'));\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Copy Handler with S2 Event Listener\nDESCRIPTION: This snippet shows how to implement a custom copy handler by using the S2 event system. It listens for the 'copy' event and provides a customized implementation for copying data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/copy.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2';\n\ns2.on(S2Event.COPY, () => {\n  // custom implementation\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Interval Range for Bar Chart Field Marking\nDESCRIPTION: Code example for customizing the range of interval (bar chart) field marking by setting isCompare to true and specifying maxValue and minValue. Also demonstrates using custom fieldValue for rendering.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/conditions.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  conditions: {\n    interval: [\n      {\n        field: 'number',\n        mapping(value, data, cell) {\n          const defaultValueRange = cell.getValueRange();\n\n          console.log('默认的最大最小值数值区间：', defaultValueRange);\n\n          return {\n            fill: '#80BFFF',\n            // 自定义柱状图范围\n            isCompare: true,\n            maxValue: 8000,\n            minValue: 300,\n            fieldValue: Number(value) > 7900 ? 10 : value,\n          };\n        },\n      },\n    ],\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing DPR Change Detection\nDESCRIPTION: Monitors device pixel ratio changes using matchMedia API and updates canvas dimensions accordingly for HD rendering.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/hd-adapter.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst { width, height } = s2Options\nconst devicePixelRatioMedia = window.matchMedia(\n  `(resolution: ${window.devicePixelRatio}dppx)`,\n);\n\ndevicePixelRatioMedia.addEventListener('change', renderByDevicePixelRatio)\n\nconst renderByDevicePixelRatio = (ratio = window.devicePixelRatio) => {\n  const newWidth = Math.floor(width * ratio);\n  const newHeight = Math.floor(height * ratio);\n\n  // 内部的更新容器大小方法\n  changeSheetSize(newWidth, newHeight);\n};\n```\n\n----------------------------------------\n\nTITLE: 手动触发S2表格滚动 (TypeScript)\nDESCRIPTION: 使用s2.interaction.scrollTo()方法可以手动触发S2表格的滚动。可以指定水平和垂直方向的滚动位置，并设置是否使用动画效果。还可以使用s2.interaction.scrollToTop()方法滚动到顶部。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/scroll.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n// 滚动至指定位置\ns2.interaction.scrollTo({\n  offsetX: { value: 100, animate: true },\n  offsetY: { value: 100, animate: true },\n})\n\n// 滚动至顶部\ns2.interaction.scrollToTop({ animate: true })\n```\n\n----------------------------------------\n\nTITLE: Manual Scale Adjustment for S2 Chart\nDESCRIPTION: Alternative approach to handle scaled parent elements by manually adjusting the S2 chart size to match the scaled parent. This ensures proper rendering at the correct scale.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst scale = 0.8\ns2.changeSheetSize(width * scale, height * scale)\ns2.render(false)\n```\n\n----------------------------------------\n\nTITLE: Customizing Export Component Entry Point\nDESCRIPTION: Example of how to customize the Export component entry point by using children props to replace the default three-dot menu with a custom button that includes an ExportOutlined icon.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/export.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Button } from 'antd'\nimport { ExportOutlined } from '@ant-design/icons';\nimport { Export } from '@antv/s2-react-components'\nimport '@antv/s2-react-components/dist/s2-react-components.min.css';\n\nconst App = () => {\n  return (\n    <Export sheetInstance={s2Ref.current}>\n      <Button type=\"text\" icon={<ExportOutlined />}>\n        导出数据\n      </Button>\n    </Export>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Advanced Sort Component in React\nDESCRIPTION: Shows how to import and implement the AdvancedSort component from @antv/s2-react-components. The component requires a sheet instance and optional CSS styling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/advanced-sort.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { AdvancedSort } from '@antv/s2-react-components';\nimport '@antv/s2-react-components/dist/s2-react-components.min.css'\n\n<AdvancedSort sheetInstance={s2} />\n```\n\n----------------------------------------\n\nTITLE: Configuring Row Headers with Custom Hierarchy\nDESCRIPTION: Configuration for custom hierarchical row headers in the Strategy Sheet, allowing for definition of nested tree structures for organizing data rows.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.en.md#2025-04-22_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nconst fields = {\n  rows: [\n    {\n      key: 'a-1',\n      title: '节点 1',\n      children: []\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Bidirectional Bar Chart Field Marking\nDESCRIPTION: Example showing how to create a bidirectional bar chart field marking by applying different colors to positive and negative values using the fill property in the mapping function.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/conditions.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  conditions: {\n    interval: [\n      {\n        field: 'number',\n        mapping(value) {\n          return {\n            fill: value >= 0 ? '#80BFFF' : '#F4664A',\n          };\n        },\n      },\n    ],\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating S2 Chart Size and Re-rendering\nDESCRIPTION: Method to manually update the S2 chart dimensions and trigger a re-render to ensure proper display including scroll bars.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.en.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\ns2.changeSheetSize(200, 200)\ns2.render(false)\n```\n\n----------------------------------------\n\nTITLE: Setting Grid Layout Mode in S2 Visualization\nDESCRIPTION: Configuration for using the tile/grid layout mode in S2 with hierarchyType option. This creates a grid-like structure for visualizing hierarchical data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'grid',\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Row Cell Dimensions by Field in S2\nDESCRIPTION: Configuration for setting specific row cell dimensions based on field ID or field name, allowing precise control over individual cells or entire dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { EXTRA_FIELD } from '@antv/s2'\n\nconst s2Options = {\n  style: {\n    rowCell: {\n      widthByField: {\n        // 调整维度\n        city: 100,\n        // 调整具体单元格\n        'root[&]浙江省[&]杭州市': 60,\n        // 数值挂行头时对应的 [数值] 虚拟字段\n        [EXTRA_FIELD]: 20,\n      },\n      heightByField: {\n        type: 10,\n        'root[&]浙江省[&]杭州市': 60,\n        'root[&]浙江省[&]宁波市': 100,\n      },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DataItem Interface in TypeScript\nDESCRIPTION: Defines the basic data format interfaces for MultiData and SimpleData, as well as the DataItem type.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-options.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface MultiData {\n  label?: string;\n  values: SimpleData[][];\n  originalValues?: SimpleData[][]\n}\n\nexport type SimpleData = string | number;\n\nexport type DataItem = SimpleDataItem | MultiData;\n```\n\n----------------------------------------\n\nTITLE: Disabling Default Sort Icon in S2 Table (TypeScript)\nDESCRIPTION: This code snippet shows how to disable the default sort icon in S2 table by setting the showDefaultHeaderActionIcon option to false.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-icon.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  showDefaultHeaderActionIcon: false\n}\n```\n\n----------------------------------------\n\nTITLE: Clearing Field Markings in S2\nDESCRIPTION: Demonstrates different approaches to clearing field markings in S2, including clearing specific cell types, all markings, or using programmatic methods.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/analysis/conditions/index.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n// 清除所有\ns2.interaction.markClear();\n\n// 清除 行标记\ns2.interaction.marks.removeAllMark({\n  type: MarkNodeType.Row,\n});\n\n// 清除 列标记\ns2.interaction.marks.removeAllMark({\n  type: MarkNodeType.Col,\n});\n\n// 清除 Cell 标记\ns2.interaction.marks.removeAllMark({\n  type: MarkNodeType.Cell,\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Selected Cells Spotlight in S2\nDESCRIPTION: Enables the spotlight effect that grays out unselected cells while emphasizing selected cells when interacting with the table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    selectedCellsSpotlight: true, // 默认 false\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Tree Structure in TypeScript\nDESCRIPTION: Example of defining a custom tree structure for header grouping with nested nodes containing field, title, description and children properties.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst customTree = [\n  {\n    field: 'a-1',\n    title: '自定义节点 a-1',\n    description: 'a-1 描述',\n    children: [\n      {\n        field: 'a-1-1',\n        title: '自定义节点 a-1-1',\n        description: 'a-1-1 描述',\n        children: [\n          {\n            field: 'measure-1',\n            title: '指标 1',\n            description: '指标 1 描述',\n            children: [],\n          },\n          {\n            field: 'measure-2',\n            title: '指标 2',\n            description: '指标 2 描述',\n            children: [],\n          },\n        ],\n      },\n      {\n        field: 'a-1-2',\n        title: '自定义节点 a-1-2',\n        description: 'a-1-2 描述',\n        children: [],\n      },\n    ],\n  },\n  {\n    field: 'a-2',\n    title: '自定义节点 a-2',\n    description: 'a-2 描述',\n    children: [],\n  },\n];\n\nconst data = [\n  {\n    'measure-1': 13,\n    'measure-2': 2,\n    type: '家具',\n    sub_type: '桌子',\n  },\n  {\n    'measure-1': 11,\n    'measure-2': 8,\n    type: '家具',\n    sub_type: '椅子',\n  },\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Field Name in S2 DataSet (TypeScript)\nDESCRIPTION: This snippet demonstrates how to get a field name from the S2 DataSet. It uses the getFieldName method of the dataSet object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-data-set.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ns2.dataSet.getFieldName('type')\n```\n\n----------------------------------------\n\nTITLE: Constructing Data Paths for Cell Query in S2\nDESCRIPTION: This snippet demonstrates how S2 constructs data paths for cell queries. It extracts dimension values from the query and generates an index path to locate the specific data point in the multidimensional array.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/pivot.en.md#2025-04-22_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\nconst rowDimensionValues = getQueryDimValues(['province', 'city'], query); // ['浙江省', '绍兴市']\nconst colDimensionValues = getQueryDimValues(['type', 'sub_type', '$$extra$$'], query); // ['家具', '沙发', 'price']\n\nconst path = getDataPath({ rowDimensionValues, colDimensionValues }); // [0, 1, 0, 1, 0]\nconst data = lodash.get(indexesData, path);\n```\n\n----------------------------------------\n\nTITLE: Configuring Overscroll Behavior in S2\nDESCRIPTION: Controls how scrolling behaves when reaching boundaries, similar to CSS overscroll-behavior property. Supports 'auto', 'none', and 'contain' values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/scroll.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    overscrollBehavior: 'auto' // 'auto' | 'none' | 'contain';\n    overscrollBehavior: null  // 设为 null 则不做任何处理\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Customizing Data Transformation for Copy in S2\nDESCRIPTION: Examples of customizing data transformation for copy operations in S2. Shows how to implement custom transformers for both text/plain and text/html formats.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/copy-export.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { asyncGetAllData } from '@antv/s2'\n\nconst data = await asyncGetAllData({\n  sheetInstance: s2,\n  split: '\\t',\n  formatOptions: true,\n  customTransformer: () => {\n    return {\n      'text/plain': (data) => {\n         return {\n           type: 'text/plain',\n           content: ``\n         };\n      },\n      'text/html': (data) => {\n         return {\n           type: 'text/html',\n           content: `<td></td>`\n         };\n      },\n    };\n  },\n})\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    copy: {\n      customTransformer: () => {}\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Removing Internal ConfigProvider in React\nDESCRIPTION: Removes the internal ConfigProvider and shows how to wrap it externally.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_42\n\nLANGUAGE: diff\nCODE:\n```\nimport { ConfigProvider } from 'antd'\n\n<SheetComponent>\n-  <ConfigProvider />\n</SheetComponent>\n\n+ <ConfigProvider>\n+  <SheetComponent />\n+ </ConfigProvider>\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Menu Operations\nDESCRIPTION: Demonstrates how to add custom menu items and click handlers to tooltip operations\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_31\n\nLANGUAGE: tsx\nCODE:\n```\ninstance.showTooltip = (tooltipOptions) => {\n  const { options } = tooltipOptions;\n  const customOperator = {\n    menu: {\n      onClick: ({ key }) => {\n        console.log('click any menu item', key);\n      },\n      items: [\n        {\n          key: 'trend',\n          icon: 'trend',\n          text: 'Trend',\n          onClick: (info, cell) => {\n            console.log('Current menu item clicked:', info, cell)\n          }\n        },\n      ],\n    }\n  };\n  instance.tooltip.show({ ...tooltipOptions, options: { ...options, operator: customOperator } });\n};\n```\n\n----------------------------------------\n\nTITLE: Correctly Disabling Right-Click Context Menu in S2\nDESCRIPTION: Shows the correct way to disable the browser's context menu on an S2 canvas element, since the default S2 right-click handling uses G events rather than DOM events.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\n// ❌ 无效写法\ns2.on(S2Event.GLOBAL_CONTEXT_MENU, (event) => {\n  event.preventDefault();\n})\n\n// ✅ 正确写法\ns2.getCanvasElement().addEventListener('contextmenu', (event) => {\n  event.preventDefault();\n});\n```\n\n----------------------------------------\n\nTITLE: Defining InteractionStateName Enum in TypeScript\nDESCRIPTION: Defines an enum for different interaction state names in the S2 component, including various selection states, hover states, and highlight states.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/interaction.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nenum InteractionStateName {\n  ALL_SELECTED = 'allSelected',\n  SELECTED = 'selected',\n  ROW_CELL_BRUSH_SELECTED = 'rowCellBrushSelected',\n  COL_CELL_BRUSH_SELECTED = 'colCellBrushSelected',\n  DATA_CELL_BRUSH_SELECTED = 'dataCellBrushSelected',\n  UNSELECTED = 'unselected',\n  HOVER = 'hover',\n  HOVER_FOCUS = 'hoverFocus',\n  HIGHLIGHT = 'highlight',\n  SEARCH_RESULT = 'searchResult',\n  PREPARE_SELECT = 'prepareSelect',\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Row Header Cell Dimensions in S2\nDESCRIPTION: Setting the width and height of row header cells in S2. Height adjustments are applied to leaf nodes, and the height stays consistent with value cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      width: 50,\n      height: 50\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Drill Down Data and Behavior in JavaScript\nDESCRIPTION: This snippet demonstrates how to configure drill down data sources and behavior, including defining the data structure and implementing a custom data fetching function for drill down operations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/drill-down.en.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sex = [ '男', '女' ];\n\nconst PartDrillDown = {\n  drillConfig: {\n    dataSet: [ // 下钻数据源配置\n      {\n        name: '客户性别',\n        value: 'sex',\n        type: 'text',\n      },\n    ],\n  },\n\n  // 点击下钻后的回调\n  fetchData: (meta, drillFields) =>\n    new Promise((resolve) => {\n      const dataSet = meta.spreadsheet.dataSet;\n      const field = drillFields[0];\n      const rowDatas = dataSet.getCellMultiData(meta.query, true, true);\n      const drillDownData = [];\n      rowDatas.forEach((data) => {\n        const { city, number, province, sub_type: subType, type } = data;\n        const number0 = Math.ceil(Math.random() * (number - 50)) + 50;\n        const number1 = number - number0;\n        const dataItem0 = {\n          city,\n          number: number0,\n          province,\n          sub_type: subType,\n          type,\n          [field]: sex[0],\n        };\n        drillDownData.push(dataItem0);\n        const dataItem1 = {\n          city,\n          number: number1,\n          province,\n          sub_type: subType,\n          type,\n          [field]: sex[1],\n        };\n\n        drillDownData.push(dataItem1);\n      });\n\n      resolve({\n        drillField: field, // 下钻维度 value 值\n        drillData: drillDownData, // 下钻数据\n      });\n    }),\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Up Virtual Columns for Year-over-Year Indicators\nDESCRIPTION: Configuration for virtual columns that display year-over-year indicator names in a trend analysis table, creating a two-level column header structure.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.en.md#2025-04-22_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nimport { EXTRA_COLUMN_FIELD } from '@antv/s2'\n\nconst fields = {\n  columns: ['date', EXTRA_COLUMN_FIELD]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Drill-Down in SheetComponent with React\nDESCRIPTION: This snippet shows how to integrate the PartDrillDown configuration with SheetComponent in a React application. It sets up the component with hierarchical tree structure and applies the drill-down functionality.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/drill-down.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react';\nimport { SheetComponent } from '@antv/s2-react';\nimport '@antv/s2-react/dist/s2-react.min.css';\n\nconst s2Options = {\n  hierarchyType: 'tree', // 树形结构\n};\n\nconst App = () => {\n  return (\n    <SheetComponent\n      dataCfg={s2DataConfig}\n      options={s2Options}\n      partDrillDown={PartDrillDown}\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Sort Icons to S2 Table\nDESCRIPTION: Configuration to add custom SVG icons to the S2 table, specifying the icon name and source path for later reference.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-order.en.md#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst s2Options = {\n  // 自定义 icon\n  customSVGIcons: [\n    {\n      name: 'customKingIcon',\n      src: 'https://gw.alipayobjects.com/zos/bmw-prod/f44eb1f5-7cea-45df-875e-76e825a6e0ab.svg',\n    },\n  ],\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Touchpad Zoom for S2 Canvas Using VisualViewport API\nDESCRIPTION: This snippet shows how to use the VisualViewport API to detect and handle touchpad zooming, updating the canvas size for high-definition rendering.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/hd-adapter.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nwindow.viewport?.visualViewport?.addEventListener(\n  'resize',\n  this.renderByZoomScale,\n);\n\nconst renderByZoomScale = debounce((e) => {\n  // 拿到缩放比 更新容器大小\n  const ratio = Math.max(e.target.scale, window.devicePixelRatio);\n  if (ratio > 1) {\n    const { width, height } = s2Options\n    const newWidth = Math.floor(width * ratio);\n    const newHeight = Math.floor(height * ratio);\n\n    // 内部的更新容器大小方法\n    changeSheetSize(newWidth, newHeight);\n  }\n}, 350);\n```\n\n----------------------------------------\n\nTITLE: Listening for Selection Events in S2 Visualization in TypeScript\nDESCRIPTION: Shows how to listen for global selection events and retrieve the selected cells in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_15\n\nLANGUAGE: ts\nCODE:\n```\ns2.on(S2Event.GLOBAL_SELECTED, (cells) => {\n  console.log('选中的单元格', cells)\n})\n```\n\n----------------------------------------\n\nTITLE: Defining CalcTotals Function Type in TypeScript\nDESCRIPTION: TypeScript function type definition for custom calculation methods used in totals. The function receives query parameters, data records, and spreadsheet instance to perform custom aggregation calculations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/totals.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n(query: Record<string, any>, data: Record<string, any>[], spreadsheet: SpreadSheet) => number\n```\n\n----------------------------------------\n\nTITLE: Adjusting Row Cell Width in Tree Mode\nDESCRIPTION: Configuration for setting row cell width in tree hierarchy mode, which uses the same syntax as the flat mode configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'tree',\n  style: {\n    rowCell: {\n      width: 200,\n    }\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Auto-hidden Columns in S2 Pivot Table\nDESCRIPTION: This snippet shows how to configure default hidden column headers in an S2 pivot table by specifying node IDs corresponding to column headers.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/hide-columns.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: [\n      'province',\n      'city'\n    ],\n    columns: [\n      'type',\n      'sub_type'\n    ],\n    values: [\n      'number'\n    ],\n    valueInCols: true\n  },\n}\n\nconst s2Options = {\n  interaction: {\n    hiddenColumnFields: ['root[&]家具[&]沙发[&]number'],\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Line Text Display in AntV S2\nDESCRIPTION: This code snippet demonstrates how to configure multi-line text display in AntV S2. It sets up options for enabling multi-line text, adjusting line height, and controlling text wrapping behavior.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/multi-line-text/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 400,\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type'],\n    values: ['price'],\n  },\n  style: {\n    collapsedRows: {\n      // Enable multi-line text display\n      text: {\n        autoWrapText: true,\n        // Set line height\n        lineHeight: 24,\n        // Set maximum number of lines\n        maxLines: 3,\n        // Set text overflow behavior\n        textOverflow: 'ellipsis',\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Drill-Down in Vue with @antv/s2-vue\nDESCRIPTION: Example of how to set up dimension drill-down in a Vue application using @antv/s2-vue. The example shows the basic template structure and configuration needed for enabling drill-down functionality.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/drill-down.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 480,\n  hierarchyType: 'tree'\n};\n\n<template>\n  <SheetComponent\n    ref=\"s2\"\n    :sheetType=\"pivot\"\n    :partDrillDown=\"partDrillDown\"\n    :options=\"s2Options\"\n  />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Registering Custom SVG Icons in AntV S2\nDESCRIPTION: Demonstrates how to register custom SVG icons using the customSVGIcons option in S2. It shows three methods: using a string-based SVG, importing a local SVG file, and using an online SVG link.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nimport Icon from '/path/to/icon.svg'\n\nconst s2Options = {\n  customSVGIcons: [\n    {\n      name: 'CustomIcon',\n      // 1. 字符串（支持自定义颜色）\n      src: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg t=\"1634603945212\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"558\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"200\" height=\"200\" fill=\"currentColor\"><defs><style type=\"text/css\"></style></defs><path d=\"M605.61 884.79h-24.26c-21.34 0-38.66 17.32-38.66 38.66 0 21.34 17.32 38.66 38.66 38.66h24.26c21.34 0 38.66-17.32 38.66-38.66 0-21.35-17.32-38.66-38.66-38.66z\" fill=\"#040000\" p-id=\"559\"></path><path d=\"M950.47 419.76c-22.17-15.48-51.17-16.01-73.92-1.33L715.7 522.53 573.09 223.42c-10.95-22.98-33.55-37.43-58.97-37.75h-0.85c-25.09 0-47.67 13.84-59.05 36.29L302.25 521.82 154.9 419.61c-22-15.18-50.71-15.73-73.27-1.46-22.53 14.32-34.23 40.57-29.8 66.9l70.9 421.76c5.33 32.04 32.82 55.3 65.31 55.3h272.43c21.34 0 38.66-17.32 38.66-38.66 0-21.34-17.32-38.66-38.66-38.66H197.44l-64.99-386.62 136.17 94.46a66.14 66.14 0 0 0 54.01 9.79 66.097 66.097 0 0 0 42.81-34.28l147.54-291.11 138.35 290.2c8.21 17.19 23.41 30.03 41.76 35.19 18.37 5.24 38 2.21 53.99-8.1l148.62-96.17-87.74 386.65h-60.1c-21.34 0-38.66 17.32-38.66 38.66 0 21.34 17.32 38.66 38.66 38.66h68.96c31.16 0 57.71-21.22 64.58-51.57l95.72-421.86c5.97-26.39-4.47-53.42-26.65-68.93zM514.74 151.68c28.08 0 50.85-22.76 50.85-50.85s-22.77-50.85-50.85-50.85c-28.09 0-50.85 22.76-50.85 50.85s22.77 50.85 50.85 50.85zM973.15 277.37c-28.08 0-50.85 22.77-50.85 50.85 0 28.09 22.76 50.85 50.85 50.85 28.08 0 50.85-22.76 50.85-50.85 0-28.08-22.77-50.85-50.85-50.85zM101.69 328.22c0-28.08-22.76-50.85-50.85-50.85S0 300.14 0 328.22c0 28.09 22.76 50.85 50.85 50.85s50.84-22.77 50.84-50.85z\" fill=\"#040000\" p-id=\"560\"></path></svg>`,\n\n      // 2. 本地文件（支持自定义颜色，本质上也是字符串）\n      src: Icon,\n\n      // 3. 在线链接（不支持自定义颜色）\n      // src: 'https://gw.alipayobjects.com/zos/bmw-prod/f44eb1f5-7cea-45df-875e-76e825a6e0ab.svg',\n    },\n  ],\n  conditions: {\n    icon: [\n      {\n        field: 'number',\n        mapping(fieldValue, data) {\n          return {\n            icon: 'CustomIcon',\n            fill: '#30BF78',\n          };\n        },\n      }\n    ],\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Interaction Methods in S2 Visualization in TypeScript\nDESCRIPTION: Demonstrates various interaction methods to retrieve cells based on their interaction state in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_16\n\nLANGUAGE: ts\nCODE:\n```\n// 获取所有激活的单元格 （包含不在可视范围内的）\ns2.interaction.getCells();\n// 获取所有激活的单元格 （不含不在可视范围内的）\ns2.interaction.getActiveCells();\n// 是否是选中状态\ns2.interaction.isSelectedState();\n// 是否是刷选状态\ns2.interaction.isBrushSelectedState();\n// 获取当前交互状态\ns2.interaction.getCurrentStateName();\n// 获取当前发生过交互的单元格\ns2.interaction.getInteractedCells();\n// 获取未选中的单元格\ns2.interaction.getUnSelectedDataCells();\n```\n\n----------------------------------------\n\nTITLE: 配置透视表数据字段示例 (TypeScript)\nDESCRIPTION: 展示如何使用s2DataConfig.fields.rows配置透视表的行头字段。这个示例将省份和城市配置为行分析维度。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/base-concept.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city']\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example of SimpleData Implementation\nDESCRIPTION: Sample data structure showing how to structure simple tabular data with multiple dimensions and metrics.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-data-config.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst data = [\n  {\n    area: '东北',\n    province: '吉林',\n    city: '白山',\n    type: '办公用品',\n    subType: '纸张',\n    cost: '2',\n  },\n  {\n    area: '东北',\n    province: '吉林',\n    city: '白山',\n    type: '办公用品',\n    subType: '笔',\n    cost: '3',\n  }\n];\n```\n\n----------------------------------------\n\nTITLE: Version Tag Reference for @antv/s2-react v1.1.1\nDESCRIPTION: Git version tag reference showing comparison between versions 1.1.0 and 1.1.1\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n# [@antv/s2-react-v1.1.1](https://github.com/antvis/S2/compare/@antv/s2-react-v1.1.0...@antv/s2-react-v1.1.1) (2021-11-30)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cell Data in S2 Pivot Table\nDESCRIPTION: This code shows how S2 retrieves specific cell data using query parameters. It constructs a data path based on dimension values and uses it to fetch the corresponding value from the multidimensional array.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/pivot.en.md#2025-04-22_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nconst data = getCellData({\n    query: { province: '浙江省', city: '绍兴市', type: '家具', sub_type: '沙发', $$extra$$: 'price' }\n});\n```\n\n----------------------------------------\n\nTITLE: Dimension-Based Collapse Configuration in TypeScript\nDESCRIPTION: Configuration for collapsing nodes based on dimension fields, showing how to collapse specific dimensions like province and city.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-collapse-nodes.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city']\n  }\n}\nconst s2Options = {\n  style: {\n    rowCell: {\n      collapseFields: { province: false, city: true }\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying S2 Website\nDESCRIPTION: Command for deploying the S2 website, though typically handled through GitHub Actions automation.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm deploy\n```\n\n----------------------------------------\n\nTITLE: Defining ScrollSpeedRatio Interface in JavaScript\nDESCRIPTION: Defines the ScrollSpeedRatio interface that controls horizontal and vertical scrolling speeds in the S2 component. It includes optional properties for horizontal and vertical scroll rates, both defaulting to 1.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/interaction.en.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\ninterface ScrollSpeedRatio {\n  horizontal?: number; // 水平滚动速率，默认为 1\n  vertical?: number; // 垂直滚动速率，默认为 1\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Center Alignment for Row Header Cells in S2 CrossTable\nDESCRIPTION: Code snippet showing how to set center alignment for both bolderText (non-leaf nodes) and regular text (leaf nodes) in row header cells of an S2 CrossTable.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nrowCell: {\n  bolderText: {\n    textAlign: 'center',\n  },\n  text: {\n    textAlign: 'center',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Preserving Formatted Data in Copy and Export Operations in AntV S2\nDESCRIPTION: This snippet shows how to configure AntV S2 to retain formatted information when copying or exporting data by enabling the withFormat option in the interaction settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/formatter.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    withFormat: true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Adaptive Sizing in S2 React Components\nDESCRIPTION: This code shows how to use the 'adaptive' prop in S2 React components to enable adaptive sizing, including examples of boolean and object configurations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.en.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SheetComponent } from '@antv/s2-react';\n\n<SheetComponent adaptive={true} />\n<SheetComponent adaptive={false} />\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SheetComponent } from '@antv/s2-react';\n\n<SheetComponent adaptive={{ width: true, height: true }} />\n<SheetComponent adaptive={{ width: false, height: false }} />\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SheetComponent } from '@antv/s2-react';\n\nconst adaptiveRef = React.useRef<HTMLDivElement>();\nconst containerId = 'containerId';\n\n<div\n  id={containerId}\n  :style=\"{\n    width: 600,\n    height: 400,\n  }\"\n>\n  <SheetComponent\n    adaptive={{\n      width: true,\n      height: false,\n      getContainer: () => adaptiveRef.current // 或者使用 document.getElementById(containerId)\n    }}\n  />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Sorting by Row Subtotals in Ant S2\nDESCRIPTION: Example of sorting by row subtotals, using the TOTAL_VALUE constant to reference subtotal values and configuring aggregate calculations through s2Options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/basic.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TOTAL_VALUE, EXTRA_FIELD } from \"@antv/s2\";\n\nconst s2DataConfig = {\n  sortParams: [\n    {\n      // type 依据 （ 浙江 - 小计 ）&（ price ）& 降序 排序\n      sortFieldId: 'type',\n      sortMethod: 'DESC',\n      sortByMeasure: TOTAL_VALUE,\n      query: {\n        province: '浙江',\n        [EXTRA_FIELD]: 'price',\n      },\n    },\n  ];\n}\n\n// 使用前端总计的聚合方法进行排序。如果 data 数据中存在聚合数据则使用\nconst s2Options = {\n  totals: {\n    row: {\n      subTotalsDimensions: [ 'province' ],\n      calcSubTotals: {\n        aggregation: 'SUM'\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Field Meta Cache\nDESCRIPTION: Caching implementation for field metadata lookup to improve performance by memoizing field information retrieval.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/performance.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n/**\n * 查找字段信息\n */\npublic getFieldMeta = memoize((field: string, meta?: Meta[]): Meta => {\n  return find(this.meta || meta, (m: Meta) => m.field === field);\n});\n```\n\n----------------------------------------\n\nTITLE: Directly Updating Cell States in AntV S2\nDESCRIPTION: Shows how to use the changeState method to directly update the state of specific cells. Examples include selecting and unselecting cells by manipulating their metadata.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { InteractionStateName, getCellMeta } from '@antv/s2'\n\nconst targetCell = s2.facet.getRowCell()[0]\n\n// 选中\ns2.interaction.changeState({\n  cells: [getCellMeta(targetCell)],\n  stateName: InteractionStateName.SELECTED,\n});\n\n// 取消选中\ns2.interaction.changeState({\n  cells: [],\n  stateName: InteractionStateName.UNSELECTED,\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Row Header Cell Alignment in S2\nDESCRIPTION: Shows how to set text alignment for row header cells, including leaf nodes and non-leaf nodes alignment configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.en.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nrowCell: {\n text: {\n textAlign: 'left',\n },\n bolderText: {\n textAlign: 'left',\n }\n}\n```\n\n----------------------------------------\n\nTITLE: 监听S2表格滚动事件 (TypeScript)\nDESCRIPTION: 使用S2Event.GLOBAL_SCROLL和S2Event.ROW_CELL_SCROLL来监听S2表格的滚动事件。GLOBAL_SCROLL事件在数值或行头单元格滚动时触发，ROW_CELL_SCROLL事件在行头单元格滚动时触发。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/scroll.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2';\n\ns2.on(S2Event.GLOBAL_SCROLL, (position) => {\n  console.log('表格滚动', position) // { scrollX: 0, scrollY: 100 }\n})\n\ns2.on(S2Event.ROW_CELL_SCROLL, (position) => {\n  console.log('行头单元格滚动', position) // { scrollX: 0, scrollY: 100 }\n})\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Titles in S2 Spreadsheets (TSX)\nDESCRIPTION: This snippet demonstrates how to customize the title of a tooltip in S2 spreadsheets using both string and custom component approaches. It uses the StrategySheetDataTooltip component with a custom label prop.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.en.md#2025-04-22_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\n// 字符串\n<StrategySheetDataTooltip cell={cell} label={\"自定义标题\"}/>\n\n// 自定义组件\n<StrategySheetDataTooltip cell={cell} label={(cell, defaultLabel) => `${defaultLabel}（自定义标题`} />\n```\n\n----------------------------------------\n\nTITLE: Defining DataCellCallback Function for S2 Spreadsheet\nDESCRIPTION: This function allows customization of value cells in an S2 spreadsheet. It takes ViewMeta and Spreadsheet objects as parameters and returns a G.Group object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/dataCellCallback.en.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nDataCellCallback = (viewMeta: ViewMeta, s2: Spreadsheet) => G.Group;\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Options\nDESCRIPTION: Basic configuration options for S2 table dimensions\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/getting-started.en.md#2025-04-22_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 480\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Preset Theme to S2 Table in JavaScript\nDESCRIPTION: Demonstrates how to apply one of the built-in themes (default, colorful, or gray) to an S2 table using the setThemeCfg method with a name parameter.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/theme.en.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\n// name 可为 default, colorful, gray\ns2.setThemeCfg({ name: 'colorful' });\ns2.render(false);\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Device Pixel Ratio for S2 Canvas Rendering\nDESCRIPTION: This code demonstrates how to manually set a custom device pixel ratio for S2 table rendering, overriding the default window.devicePixelRatio.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/hd-adapter.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  transformCanvasConfig() {\n    return {\n      devicePixelRatio: 2\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Copy Interaction Options in S2\nDESCRIPTION: Example of configuring copy interaction options in S2. Shows how to enable copying, include headers, and use formatted data when copying. Also includes configuration for brush selection and multi-selection.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/copy-export.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    copy: {\n      // 开启复制\n      enable: true,\n      // 复制时携带表头\n      withHeader: true,\n      // 复制格式化后的数据\n      withFormat: true\n    }\n  }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    copy: {\n      // 是否开启复制\n      enable: true,\n      // 复制时携带表头\n      withHeader: true,\n      // 复制格式化后的数据\n      withFormat: true,\n    },\n\n    // 可选：圈选复制前，需要开启圈选功能\n    brushSelection: {\n      dataCell: true,\n      rowCell: true,\n      colCell: true,\n    },\n\n    // 可选：多选\n    multiSelection: true\n  }\n};\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    copy: {\n      enable: true,\n      withHeader: true,\n    },\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Markdown API Documentation Configuration\nDESCRIPTION: Front matter configuration for an API documentation page that embeds content from an external markdown file containing sheet component documentation.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/case/performance-compare/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: API\norder: 0\n---\n\n<embed src=\"@/docs/api/components/sheet-component.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Tooltip Options in TypeScript\nDESCRIPTION: Sets up basic tooltip configuration for all cell types in S2 charts. This enables tooltips globally.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n   tooltip: {}\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Tooltip Menu Component in S2\nDESCRIPTION: Shows how to explicitly declare UI components for tooltip operation menu using antd's Menu component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_59\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Menu } from 'antd'\n\nconst s2Options = {\n  tooltip: {\n    operation: {\n      menu: {\n        render: (props) => {\n          return <Menu {...props} />;\n        },\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Supporting Multiple Class Names for Tooltip\nDESCRIPTION: Enhancement to the tooltip functionality that allows setting multiple CSS class names for styling.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n* **tooltip:** 支持设置多个 class 类名 ([#1546](https://github.com/antvis/S2/issues/1546)) ([1fb22c6](https://github.com/antvis/S2/commit/1fb22c64f32d739acbf9dee681b126a703b38a20))\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Container Styling in S2\nDESCRIPTION: Demonstrates how to customize the tooltip container's styles and class names in S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    style: {\n      fontSize: '20px'\n    },\n    className: 'test'\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Container Styles in TypeScript\nDESCRIPTION: Demonstrates how to add custom styles and class names to the tooltip container for easier style overriding.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n   tooltip: {\n     style: {\n       fontSize: '20px'\n     },\n     className: 'test'\n   }\n};\n```\n\n----------------------------------------\n\nTITLE: DataCell Configuration Options\nDESCRIPTION: Defines the structure for configuring numerical cells including width, height and valuesCfg properties.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/style.en.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| parameter | illustrate         | type                                                                                    | Defaults | required |\n| --------- | ------------------ | --------------------------------------------------------------------------------------- | -------- | -------- |\n| width     | cell width         | `number`                                                                                | 96       | -        |\n| height    | cell height        | `number`                                                                                | 30       | -        |\n| valuesCfg | cell configuration | `{ originalValueField?: string, widthPercent?: number[], showOriginalValue?: boolean }` |          | -        |\n```\n\n----------------------------------------\n\nTITLE: Embedding Documentation Content in Markdown\nDESCRIPTION: Embeds an external markdown file containing documentation about data cell callbacks using the embed HTML tag.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-cell/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/custom/dataCellCallback.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Configuring Empty Allowance\nDESCRIPTION: Example showing how to configure whether a dimension can be emptied through dragging\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/switcher.en.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst field = {\n  allowEmpty: false, // 默认：true\n  items: [\n    /*...*/\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Retrieving Row Data from AntV S2\nDESCRIPTION: This snippet demonstrates how to retrieve row data, row cell data, and dimension values when a row header cell is clicked in AntV S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ns2.on(S2Event.ROW_CELL_CLICK, (event) => {\n  // 首先拿到单元格当前信息\n  const cell = s2.getCell(event.target)\n  const meta = cell.getMeta()\n\n  // 获取当前行数据\n  const rowData = s2.dataSet.getCellMultiData(meta.query)\n  // 获取当前行头单元格数据：\n  const rowCellData = s2.dataSet.getCellData({ query: meta.query })\n  // 获取当前行头维值\n  const dimensionValues = s2.dataSet.getDimensionValues(meta.field)\n\n  console.log('当前行数据：', rowData)\n  console.log('当前行头单元格数据：', rowCellData)\n  console.log('当前行头维值：', dimensionValues)\n})\n```\n\n----------------------------------------\n\nTITLE: Custom Calculation Functions for Totals in S2Options\nDESCRIPTION: Example showing how to implement custom calculation functions for subtotals and grand totals. Demonstrates the function signature for custom calculations with query, data, and spreadsheet parameters.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/totals.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  totals: {\n    row: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      reverseGrandTotalsLayout: true,\n      reverseSubTotalsLayout: true,\n      subTotalsDimensions: ['province'],\n      calcGrandTotals: {\n        calcFunc: (query, data, spreadsheet) => {},\n      },\n      calcSubTotals: {\n        calcFunc: (query, data, spreadsheet) => {},\n      },\n    },\n    col: {\n      showGrandTotals: true,\n      showSubTotals: true,\n      reverseGrandTotalsLayout: true,\n      reverseSubTotalsLayout: true,\n      subTotalsDimensions: ['type'],\n      calcGrandTotals: {\n        calcFunc: (query, data, spreadsheet) => {},\n      },\n      calcSubTotals: {\n        calcFunc: (query, data, spreadsheet) => {},\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Pagination in React Component\nDESCRIPTION: Example of implementing pagination in an S2 React component by adding the showPagination prop. This enables the built-in pagination component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/pagination.en.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n<SheetComponent showPagination/>\n```\n\n----------------------------------------\n\nTITLE: Manually Showing Tooltips with Custom React Content\nDESCRIPTION: Shows how to manually trigger tooltip display with custom React content in S2-React.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nconst TooltipContent = () => (\n  <div>content</div>\n);\n\ns2.showTooltip({\n  content: <TooltipContent />\n})\n\n// 或者 s2.tooltip.show({ content: <TooltipContent/> })\n```\n\n----------------------------------------\n\nTITLE: Configuring Sort Options in @antv/s2-react\nDESCRIPTION: Configuration example for enabling group sorting in @antv/s2-react component. Shows how to set up tooltip options and rendering custom menu components using antd Menu, with options to customize the sort icon display.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/group.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Menu } from 'antd'\n\nconst s2Options = {\n  width: 600,\n  height: 600,\n  // 打开操作 icon（默认开启）\n  showDefaultHeaderActionIcon: true,\n  // 展示 tooltip（默认开启）\n  tooltip: {\n    operation: {\n      // 开启组内排序 （默认开启）\n      sort: true,\n      menu: {\n        render: (props) => {\n          return <Menu {...props} />;\n        },\n      }\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Semantic Colors for Data Cell Icons in S2 Pivot Table\nDESCRIPTION: This code snippet demonstrates how to set colors for up and down arrow icons in data cells of an S2 pivot table using semantic color values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/theme.en.md#2025-04-22_snippet_11\n\nLANGUAGE: css\nCODE:\n```\ndataCell.icon.downIconColor: #FF4D4F;\ndataCell.icon.upIconColor: #29A294;\n```\n\n----------------------------------------\n\nTITLE: Customizing Header Text in Tile Mode with Meta Configuration\nDESCRIPTION: Configuration for customizing cell text in tile mode using meta configuration. The field property corresponds to the key value of CustomTreeNode.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst meta = [\n  {\n    field: 'a-1',\n    name: '层级 1',\n  },\n  {\n    field: 'a-1-1',\n    name: '层级 2',\n  },\n  {\n    field: 'measure-1',\n    name: '层级 3',\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Accessing S2 Instance in Vue Components\nDESCRIPTION: Method for retrieving the SpreadSheet instance in Vue components using the ref approach. The instance is accessed through the .value.instance property of the ref object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.en.md#2025-04-22_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<script lang=\"ts\">\nimport type { S2DataConfig, S2Options } from '@antv/s2';\nimport { Sheet } from '@antv/s2-vue';\nimport { defineComponent, onMounted, shallowRef } from 'vue';\n\nexport default defineComponent({\n  setup() {\n    const s2 = shallowRef();\n\n    onMounted(() => {\n      console.log('s2 instance:', s2.value?.instance);\n    });\n    return {\n      s2\n    };\n  },\n\n  components: {\n    Sheet,\n  },\n});\n</script>\n\n<template>\n  <SheetComponent ref=\"s2\" :dataCfg=\"your-dataCfg\" :options=\"your-options\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Accessing Cell Metadata in S2 Visualization in TypeScript\nDESCRIPTION: Shows how to retrieve metadata from a cell in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_13\n\nLANGUAGE: ts\nCODE:\n```\ncell.getMeta()\n```\n\n----------------------------------------\n\nTITLE: Using asyncGetAllData and copyToClipboard in @antv/s2\nDESCRIPTION: Example of getting all table data and copying it to clipboard using @antv/s2 utilities. Shows how to retrieve data with formatting options and handle copy success/failure.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/copy-export.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { asyncGetAllData, copyToClipboard } from '@antv/s2'\n\n// 1. 拿到表格数据\nconst data = await asyncGetAllData({\n  sheetInstance: s2,\n  split: '\\t',\n  formatOptions: true,\n  // formatOptions: {\n  //   formatHeader: true,\n  //   formatData: true\n  // },\n\n  // 同步复制\n  // async: false\n});\n\n// 2. 写入到剪切板 （同时包含 `text/html` 和 `text/plain`)\n// 同步复制：copyToClipboard(data, false)\ncopyToClipboard(data)\n  .then(() => {\n    console.log('复制成功')\n  })\n  .catch(() => {\n    console.log('复制失败')\n  })\n```\n\n----------------------------------------\n\nTITLE: Using DrillDown with SheetComponent in S2\nDESCRIPTION: Shows how to integrate DrillDown component with SheetComponent through the render property.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_57\n\nLANGUAGE: diff\nCODE:\n```\n+ import { DrillDown } from '@antv/s2-react-components';\n\nfunction App() {\n  return (\n    <SheetComponent\n      sheetType=\"pivot\"\n      options={s2Options}\n      partDrillDown={{\n+       render: (props) => <DrillDown {...props} />,\n      }}\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SheetComponentOptions Type for React in TypeScript\nDESCRIPTION: This code snippet defines the SheetComponentOptions type for React components that extends S2Options. It allows ReactNode for tooltip content and supports both S2's Pagination and Ant Design's pagination component properties.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/sheet-component.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { Pagination, S2Options } from '@antv/s2';\nimport type { PaginationProps as AntdPaginationProps } from 'antd';\n\ntype SheetComponentOptions = S2Options<\n   React.ReactNode,\n   Pagination & AntdPaginationProps\n>;\n```\n\n----------------------------------------\n\nTITLE: Creating S2 Pivot Sheet with DOM Element\nDESCRIPTION: Shows how to initialize an S2 Pivot Sheet by mounting it to a DOM element with the specified data and options configurations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\"></div>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst pivotSheet = new PivotSheet(document.getElementById('container'), dataCfg, options);\n```\n\n----------------------------------------\n\nTITLE: S2 Meta Tree Structure Implementation\nDESCRIPTION: Implementation of the tree structure using Map for efficient data organization. Shows how hierarchical data is structured with levels and children for provinces and cities.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/performance.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst rowsMeta: PivotMeta = {\n  浙江省：{\n    level: 1,\n    childField:\"city\",\n    children: {\n      杭州市：{\n        level: 1,\n        children: {},\n      },\n      绍兴市：{\n        level: 2,\n        children: {},\n      },\n      //...\n    },\n  },\n  四川省：{\n    level: 2,\n    childField:\"city\",\n    children: {\n      成都市：{\n        level: 1,\n        children: {},\n      },\n      绵阳市：{\n        level: 2,\n        children: {},\n      },\n      //...\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Manually Showing Tooltip with Custom Menu Options\nDESCRIPTION: Shows how to manually trigger tooltip display with custom menu options in S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\ns2.showTooltip({\n  options: {\n    operator: {\n      menu: {\n        items: [\n          {\n            key: 'custom-a',\n            label: '操作 1',\n            icon: 'Trend',\n            onClick: (info, cell) => {\n              console.log('操作 1 点击：', info, cell);\n            },\n          }\n        ],\n      }\n    },\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Feature Entry in Markdown\nDESCRIPTION: Changelog entry documenting a new feature addition\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react-components/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* 增加树状模式下行头宽度配置 rowCell.treeWidth ([#2998](https://github.com/antvis/S2/issues/2998))\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Tooltip in Vue 3 using createVNode\nDESCRIPTION: This example demonstrates how to create a custom tooltip in Vue 3 using the createVNode method. It shows how to define a Vue component for the tooltip content and use it in a custom tooltip class.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_25\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <div>我是自定义 tooltip 内容</div>\n  <p>当前值：{{ meta?.label ?? meta?.fieldValue}} </p>\n</template>\n\n<script lang=\"ts\">\n  import { defineComponent } from 'vue';\n\n  export default defineComponent({\n    name: 'TooltipContent',\n    props: [ 'meta' ]\n  });\n</script>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineCustomElement, render, createVNode } from \"vue\";\nimport { BaseTooltip, PivotSheet } from \"@antv/s2\";\nimport TooltipContent from \"./TooltipContent.vue\";\nimport \"@antv/s2/dist/s2.min.css\";\n\nclass CustomTooltip extends BaseTooltip {\n  constructor(spreadsheet) {\n    super(spreadsheet);\n  }\n\n  renderContent() {\n    const cell = this.spreadsheet.getCell(this.options.event?.target);\n    const meta = cell?.getMeta();\n\n    // 使用 Vue 提供的 `createVNode` 方法将组件渲染成虚拟 DOM\n    const tooltipVNode = createVNode(TooltipContent, { meta });\n    // 使用  `render` 函数将其挂载在 tooltip 容器上\n    render(tooltipVNode, this.container);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Corner Cell Alignment in S2\nDESCRIPTION: Demonstrates how to customize the text alignment for corner cells, including both row header and column header text alignment settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.en.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ncornerCell: {\n text: {\n textAlign: 'left',\n },\n bolderText: {\n textAlign: 'left',\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing StrategyExport Component in S2\nDESCRIPTION: Shows how to import the new StrategyExport component for trend analysis table data copying and exporting.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_54\n\nLANGUAGE: ts\nCODE:\n```\nimport { StrategyExport } from '@antv/s2-react-components';\n```\n\n----------------------------------------\n\nTITLE: Customizing Video Preview Styling in S2\nDESCRIPTION: This snippet demonstrates how to customize the appearance of the video preview overlay and container by setting theme properties. It allows modification of the background color and dimensions of the preview display.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/video.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ns2.setTheme({\n    preview: {\n      overlay: {\n        backgroundColor: 'red',\n      },\n      mediaContainer: {\n        height: '100px',\n      },\n    },\n  });\n```\n\n----------------------------------------\n\nTITLE: Defining ScrollOffsetConfig Interface in TypeScript\nDESCRIPTION: Defines the ScrollOffsetConfig interface for configuring scroll offsets in S2 tables. It allows setting X and Y offsets with optional animation controls for smooth scrolling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_23\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ScrollOffsetConfig {\n  offsetX?: {\n    value: number | undefined;\n    animate?: boolean;\n  };\n  offsetY?: {\n    value: number | undefined;\n    animate?: boolean;\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Empty State Placeholder in TypeScript\nDESCRIPTION: Shows how to configure the empty state placeholder with an icon and description.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_33\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n+ placeholder: {\n+   empty: {\n+     icon: 'Empty',\n+     description: 'No Data'\n+   }\n+ }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Theme Settings in TypeScript\nDESCRIPTION: Examples showing how to set theme configuration in S2. Demonstrates both unified theme schema setting with palette and name, as well as individual cell styling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-theme.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// 统一设置主题 Schema, 色板，名称\ns2.setThemeCfg({\n  theme: {},\n  palette: {},\n  name: \"default\"\n});\n\n// 单独设置主题 Schema, 配置单元格背景，文字大小，文字颜色\ns2.setTheme({\n  rowCell: {\n    cell: {\n      backgroundColor: \"#fff\"\n    }\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Switching Language in S2 (TypeScript)\nDESCRIPTION: This snippet demonstrates how to switch the language in S2 using the setLang function. It should be called before instantiating the table. Currently, only 'en_US', 'zh_CN', and 'ru' locales are built-in.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/i18n.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { setLang, PivotSheet } from '@antv/s2'\n\nsetLang('en_US')\n// setLang('zh_CN')\n// setLang('ru_RU');\n\nconst s2 = new PivotSheet()\ns2.render()\n```\n\n----------------------------------------\n\nTITLE: Enabling Intelligent Text Color Reversal for Background Marking\nDESCRIPTION: Example showing how to enable intelligent text color reversal in background field marking by setting intelligentReverseTextColor to true, which automatically adjusts text color for better contrast with dark backgrounds.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/conditions.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  conditions: {\n    background: [\n      {\n        field: 'number',\n        mapping() {\n          return {\n            // fill 是背景字段下唯一必须的字段，用于指定文本颜色\n            fill: '#000',\n            intelligentReverseTextColor: true,\n          };\n        },\n      },\n    ],\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Left Alignment for Column Header Cells in S2 CrossTable\nDESCRIPTION: Code snippet showing how to set left alignment for both bolderText (non-leaf dimension cells) and measureText (value cells when placed in column headers) in column header cells of an S2 CrossTable.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: js\nCODE:\n```\ncolCell: {\n  bolderText: {\n    textAlign: 'left',\n  },\n  measureText: {\n    textAlign: 'left',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Tooltip in S2 Options\nDESCRIPTION: This snippet shows how to use a custom tooltip class in the S2 options configuration. It enables the tooltip and sets the render function to use the custom tooltip class.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    enable: true,\n    render: (spreadsheet: SpreadSheet) => new CustomTooltip(spreadsheet),\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GetCellMeta Type in TypeScript\nDESCRIPTION: Type definition for the GetCellMeta function, which returns ViewMeta information for a specific cell based on optional row and column indices.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/layoutCellMeta.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype GetCellMeta = (rowIndex?: number, colIndex?: number) => ViewMeta;\n```\n\n----------------------------------------\n\nTITLE: Disabling Interactive Column Hiding in S2\nDESCRIPTION: This snippet shows how to turn off interactive hiding of columns in S2 by configuring the tooltip options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/hide-columns.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    operation: {\n      hiddenColumns: false,\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Node Dimensions and Coordinates in S2 Pivot Table\nDESCRIPTION: Process for calculating the dimensions of rowsHierarchy and the coordinates of each child node. This code determines the physical layout of nodes in the canvas based on the hierarchical structure.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/layout/pivot.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// 计算 rowsHierarchy 宽度\nfor (const levelSample of rowsHierarchy.sampleNodesForAllLevels) {\n    levelSample.width = cellWidth; // 各层级样例节点的宽度\n    rowsHierarchy.width += levelSample.width; // 计算 rowsHierarchy 总宽度\n}\n// 计算节点的尺寸和坐标\nlet preLeafNode = Node.blankNode();\nfor (let i = 0; i < rowsHierarchy.getNodes().length; i++) {\n    const currentNode = allNodes[i]; // 当前节点\n    if (isLeaf) {\n        // 叶子节点\n        currentNode.x = 0;\n        currentNode.y = preLeafNode.y + preLeafNode.height;\n        currentNode.height = dataCell.height + dataCell.padding?.top + dataCell.padding?.bottom;\n        preLeafNode = currentNode; // 更改前一个叶子节点\n        rowsHierarchy.height += currentNode.height; // 更新 rowsHierarchy 高度\n    } else {\n        // 非叶子节点\n        currentNode.x = preLevelSample?.x + preLevelSample?.width; // 非叶子节点的 x 坐标\n    }\n    currentNode.width = cellWidth; // 当前节点的宽度\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CornerHeaderCallback in JavaScript\nDESCRIPTION: Defines a callback function for customizing corner headers. It takes parent cell, SpreadSheet, and optional parameters, with no return value.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-options.en.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nCornerHeaderCallback = (parent: S2CellType, spreadsheet: SpreadSheet, ...restOptions: unknown[]) => void;\n```\n\n----------------------------------------\n\nTITLE: Configuring Table Dimensions in S2\nDESCRIPTION: This snippet shows how to set the width and height of an S2 table using the s2Options object. It also notes that percentage-based or viewport-based values are not supported.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 400,\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: '100%', // ❌\n  height: '20vh',// ❌\n}\n```\n\n----------------------------------------\n\nTITLE: Example Data Structure for Merge Cell Demonstration\nDESCRIPTION: This JSON structure contains sample data used for demonstrating merge cell functionality. It includes metadata fields and records with various attributes like number, province, city, type, and sub-type.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/merge-cell.en.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"meta\": [\n    {\n      \"field\": \"number\",\n      \"name\": \"数量\"\n    },\n    {\n      \"field\": \"province\",\n      \"name\": \"省份\"\n    },\n    {\n      \"field\": \"city\",\n      \"name\": \"城市\"\n    },\n    {\n      \"field\": \"type\",\n      \"name\": \"类别\"\n    },\n    {\n      \"field\": \"sub_type\",\n      \"name\": \"子类别\"\n    }\n  ],\n  \"data\": [\n    {\n      \"number\": 7789,\n      \"province\": \"浙江省\",\n      \"city\": \"杭州市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"桌子\"\n    },\n    {\n      \"number\": 2367,\n      \"province\": \"浙江省\",\n      \"city\": \"绍兴市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"桌子\"\n    },\n    {\n      \"number\": 3877,\n      \"province\": \"浙江省\",\n      \"city\": \"宁波市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"桌子\"\n    },\n    {\n      \"number\": 4342,\n      \"province\": \"浙江省\",\n      \"city\": \"舟山市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"桌子\"\n    },\n    {\n      \"number\": 5343,\n      \"province\": \"浙江省\",\n      \"city\": \"杭州市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"沙发\"\n    },\n    {\n      \"number\": 632,\n      \"province\": \"浙江省\",\n      \"city\": \"绍兴市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"沙发\"\n    },\n    {\n      \"number\": 7234,\n      \"province\": \"浙江省\",\n      \"city\": \"宁波市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"沙发\"\n    },\n    {\n      \"number\": 834,\n      \"province\": \"浙江省\",\n      \"city\": \"舟山市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"沙发\"\n    },\n    {\n      \"number\": 945,\n      \"province\": \"浙江省\",\n      \"city\": \"杭州市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"笔\"\n    },\n    {\n      \"number\": 1304,\n      \"province\": \"浙江省\",\n      \"city\": \"绍兴市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"笔\"\n    },\n    {\n      \"number\": 1145,\n      \"province\": \"浙江省\",\n      \"city\": \"宁波市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"笔\"\n    },\n    {\n      \"number\": 1432,\n      \"province\": \"浙江省\",\n      \"city\": \"舟山市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"笔\"\n    },\n    {\n      \"number\": 1343,\n      \"province\": \"浙江省\",\n      \"city\": \"杭州市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"纸张\"\n    },\n    {\n      \"number\": 1354,\n      \"province\": \"浙江省\",\n      \"city\": \"绍兴市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"纸张\"\n    },\n    {\n      \"number\": 1523,\n      \"province\": \"浙江省\",\n      \"city\": \"宁波市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"纸张\"\n    },\n    {\n      \"number\": 1634,\n      \"province\": \"浙江省\",\n      \"city\": \"舟山市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"纸张\"\n    },\n    {\n      \"number\": 1723,\n      \"province\": \"四川省\",\n      \"city\": \"成都市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"桌子\"\n    },\n    {\n      \"number\": 1822,\n      \"province\": \"四川省\",\n      \"city\": \"绵阳市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"桌子\"\n    },\n    {\n      \"number\": 1943,\n      \"province\": \"四川省\",\n      \"city\": \"南充市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"桌子\"\n    },\n    {\n      \"number\": 2330,\n      \"province\": \"四川省\",\n      \"city\": \"乐山市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"桌子\"\n    },\n    {\n      \"number\": 2451,\n      \"province\": \"四川省\",\n      \"city\": \"成都市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"沙发\"\n    },\n    {\n      \"number\": 2244,\n      \"province\": \"四川省\",\n      \"city\": \"绵阳市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"沙发\"\n    },\n    {\n      \"number\": 2333,\n      \"province\": \"四川省\",\n      \"city\": \"南充市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"沙发\"\n    },\n    {\n      \"number\": 2445,\n      \"province\": \"四川省\",\n      \"city\": \"乐山市\",\n      \"type\": \"家具\",\n      \"sub_type\": \"沙发\"\n    },\n    {\n      \"number\": 2335,\n      \"province\": \"四川省\",\n      \"city\": \"成都市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"笔\"\n    },\n    {\n      \"number\": 245,\n      \"province\": \"四川省\",\n      \"city\": \"绵阳市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"笔\"\n    },\n    {\n      \"number\": 2457,\n      \"province\": \"四川省\",\n      \"city\": \"南充市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"笔\"\n    },\n    {\n      \"number\": 2458,\n      \"province\": \"四川省\",\n      \"city\": \"乐山市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"笔\"\n    },\n    {\n      \"number\": 4004,\n      \"province\": \"四川省\",\n      \"city\": \"成都市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"纸张\"\n    },\n    {\n      \"number\": 3077,\n      \"province\": \"四川省\",\n      \"city\": \"绵阳市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"纸张\"\n    },\n    {\n      \"number\": 3551,\n      \"province\": \"四川省\",\n      \"city\": \"南充市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"纸张\"\n    },\n    {\n      \"number\": 352,\n      \"province\": \"四川省\",\n      \"city\": \"乐山市\",\n      \"type\": \"办公用品\",\n      \"sub_type\": \"纸张\"\n}\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating G shape creation with AntV/G 6.0\nDESCRIPTION: Demonstrates how to update custom shape creation code to be compatible with G 6.0, replacing the addShape method with direct instantiation of shape classes.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n+ import { Image } from '@antv/g';\n\n+ this.appendChild(new Image({ style: {} }))\n\n- this.addShape('image', { attrs: {} });\n```\n\n----------------------------------------\n\nTITLE: Defining InterceptType Enum in TypeScript\nDESCRIPTION: Defines an enum for different types of interaction interceptions in the S2 component, including hover, click, and various selection types.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/interaction.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nenum InterceptType {\n  HOVER = 'hover',\n  CLICK = 'click',\n  DATA_CELL_BRUSH_SELECTION = 'dataCellBrushSelection',\n  ROW_CELL_BRUSH_SELECTION = 'rowCellBrushSelection',\n  COL_CELL_BRUSH_SELECTION = 'colCellBrushSelection',\n  MULTI_SELECTION = 'multiSelection',\n  RESIZE = 'resize',\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Cell Selection and Scrolling APIs in React\nDESCRIPTION: Introduces new APIs for selecting/highlighting cells and scrolling in the table.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\ns2Instance.interaction.selectCells([{ rowIndex: 0, colIndex: 0 }]);\ns2Instance.interaction.highlightCells([{ rowIndex: 1, colIndex: 1 }]);\ns2Instance.interaction.scrollToCell({ rowIndex: 5, colIndex: 5 });\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of S2 React Components\nDESCRIPTION: Demonstrates the basic usage of S2 React components including ThemePanel, TextAlignPanel, and FrozenPanel. Shows how to import and use these components with their respective props and event handlers.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react-components/README.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'React'\nimport { ThemePanel, TextAlignPanel, FrozenPanel } from '@antv/s2-react-components'\nimport '@antv/s2-react-components/dist/s2-react-components.min.css'\n\nconst App = () => {\n  return (\n    <>\n      <ThemePanel\n        title=\"主题配置\"\n        disableCustomPrimaryColorPicker={false}\n        defaultCollapsed={false}\n        onChange={(options, theme) => {\n          console.log('onChange:', options, theme);\n        }}\n        onReset={(options, prevOptions, theme) => {\n          console.log('onReset:', options, prevOptions, theme);\n        }}\n      />\n      <TextAlignPanel\n        title=\"文字对齐\"\n        defaultCollapsed={false}\n        onChange={(options, theme) => {\n          console.log('onChange:', options, theme);\n        }}\n        onReset={(options, prevOptions, theme) => {\n          console.log('onReset:', options, prevOptions, theme);\n        }}\n      />\n      <FrozenPanel\n        title=\"冻结行列头\"\n        defaultCollapsed={false}\n        onChange={(options) => {\n          console.log('onChange:', options);\n        }}\n        onReset={(options, prevOptions) => {\n          console.log('onReset:', options, prevOptions);\n        }}\n      />\n    </>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Alignment for Column Header Cells in S2 CrossTable\nDESCRIPTION: Code snippet showing how to set right alignment for both bolderText (non-leaf dimension cells) and measureText (value cells when placed in column headers) in column header cells of an S2 CrossTable.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.zh.md#2025-04-22_snippet_8\n\nLANGUAGE: js\nCODE:\n```\ncolCell: {\n  bolderText: {\n    textAlign: 'right',\n  },\n  measureText: {\n    textAlign: 'right',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adjusting Data Cell Dimensions in S2\nDESCRIPTION: Configuration for setting the width and height of data cells. Note that row cell height and column cell width will always align with data cell dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    dataCell: {\n      width: 100,\n      height: 90\n    },\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Dimension Switcher Configuration in S2\nDESCRIPTION: Demonstrates the new way to configure the Switcher component, with changes to title, icon, and children properties.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_49\n\nLANGUAGE: diff\nCODE:\n```\n- <Switcher title={<Button>Switch Dimension</Button>} />\n\n+ <Switcher title=\"Switch Dimension\" icon={<SwapOutlined/>} />\n+ <Switcher>\n+   <Button>Switch Dimension</Button>\n+ </Switcher>\n```\n\n----------------------------------------\n\nTITLE: Obtaining S2 Instance in React with useRef\nDESCRIPTION: Example of using React.useRef and onMounted to access the S2 spreadsheet instance. This approach allows developers to perform advanced operations on the table after it has been mounted.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react'\nimport { SpreadSheet } from '@antv/s2'\nimport { SheetComponent } from '@antv/s2-react'\n\nfunction App() {\n  const s2Ref = React.useRef<SpreadSheet>()\n\n  const onMounted = () => {\n    console.log(s2Ref.current)\n  }\n\n  return (\n    <SheetComponent ref={s2Ref} onMounted={onMounted}/>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Highlighting Cells in AntV S2 with TypeScript\nDESCRIPTION: Demonstrates how to programmatically highlight a cell in an AntV S2 table. This example retrieves the first row cell and sets it to a highlighted state.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst targetCell = s2.facet.getRowCell()[0]\ns2.interaction.highlightCell(targetCell)\n\ns2.interaction.getCurrentStateName() // \"hover\"\n```\n\n----------------------------------------\n\nTITLE: Defining DataSet Function for Custom Data Processing in JavaScript\nDESCRIPTION: This snippet defines the signature for a function to create a custom dataset for the spreadsheet. It takes the spreadsheet instance as a parameter and returns a BaseDataSet object, allowing for custom data processing and organization.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-options.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nDataSet = (spreadsheet: SpreadSheet) => BaseDataSet;\n```\n\n----------------------------------------\n\nTITLE: Configuring Corner Cell Alignment in S2 CrossTable\nDESCRIPTION: Code snippet demonstrating how to configure left alignment for both bolderText and regular text in corner cells of an S2 CrossTable. Corner cell alignment affects both row header cells (controlled by text) and column header cells (controlled by bolderText).\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\ncornerCell: {\n  bolderText: {\n    textAlign: 'left',\n    textBaseline: 'middle',\n  },\n  text: {\n    textAlign: 'left',\n    textBaseline: 'middle',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Persisting Cell Dimensions in S2\nDESCRIPTION: Code demonstrating how to retrieve and apply previously saved cell dimension styles when initializing S2 or updating its options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/resize.zh.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst style = JSON.parse(localStorage.getItem('style')) || {}\n\nconst s2Options = {\n  style\n}\n\n// 或\ns2.setOptions({ style })\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Tooltip in Vue3 using createVNode\nDESCRIPTION: This snippet demonstrates how to create a custom tooltip class in Vue3 using the createVNode method to render a Vue component as the tooltip content.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineCustomElement, render, createVNode } from \"vue\";\nimport { BaseTooltip, PivotSheet } from \"@antv/s2\";\nimport TooltipContent from \"./TooltipContent.vue\";\nimport \"@antv/s2/dist/s2.min.css\";\n\nclass CustomTooltip extends BaseTooltip {\n   constructor(spreadsheet) {\n     super(spreadsheet);\n   }\n\n   renderContent() {\n     const cell = this.spreadsheet.getCell(this.options.event?.target);\n     const meta = cell?. getMeta();\n\n     // Use the `createVNode` method provided by Vue to render the component into a virtual DOM\n     const tooltipVNode = createVNode(TooltipContent, { meta });\n     // Mount it on the tooltip container using the `render` function\n     render(tooltipVNode, this. container);\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Pagination Options in React Component\nDESCRIPTION: Example of setting up pagination options in an S2 React component by providing a configuration object to the s2Options.pagination property.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/pagination.en.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nconst s2Options = {\n  // https://ant.design/components/pagination-cn/#API\n  pagination: {}\n}\n\n<SheetComponent options={ s2Options }/>\n```\n\n----------------------------------------\n\nTITLE: Setting Center Alignment for Corner Cells in S2 CrossTable\nDESCRIPTION: Code example showing how to set center alignment for both bolderText and regular text in corner cells of an S2 CrossTable, with middle baseline positioning.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\ncornerCell: {\n  bolderText: {\n    textAlign: 'center',\n    textBaseline: 'middle',\n  },\n  text: {\n    textAlign: 'center',\n    textBaseline: 'middle',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Corner Cells in S2 Visualization in TypeScript\nDESCRIPTION: Demonstrates how to retrieve corner cells in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\ns2.facet.getCornerCells()\n```\n\n----------------------------------------\n\nTITLE: Hiding Specific Column Headers by Field\nDESCRIPTION: Configuration for hiding specific column dimension headers by setting their height to zero through heightByField, while keeping other headers visible.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport { EXTRA_FIELD } from '@antv/s2'\n\nconst s2Options = {\n  style: {\n    colCell: {\n      // 隐藏全部列头\n      height: 0,\n      heightByField: {\n        // 隐藏部分维度 （类别/子类别）\n        // type: 0,\n        // sub_type: 0,\n        // EXTRA_FIELD 对应 [数量] 这一虚拟维度列\n        [EXTRA_FIELD]: 30,\n      },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Tree Hierarchy Display Mode for Row Headers\nDESCRIPTION: Shows how to configure row headers to display in tree mode using the hierarchyType option. This presents row dimensions in a hierarchical tree structure.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/base-concept.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'tree'\n}\n```\n\n----------------------------------------\n\nTITLE: 配置透视表树状模式 (TypeScript)\nDESCRIPTION: 展示如何通过s2Options设置透视表行头为树状模式(tree)。树状模式将行头数据以层级树形结构展示。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/base-concept.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'tree'\n}\n```\n\n----------------------------------------\n\nTITLE: Handling S2 Instance Updates When Sheet Type Changes\nDESCRIPTION: Demonstrates how S2 optimizes instance management when sheetType changes from pivot to table, ensuring the latest instance is always accessible through either ref or onMounted methods.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.en.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SpreadSheet, S2Event } from '@antv/s2'\nimport { SheetComponent } from '@antv/s2-react'\n\nfunction App() {\n  const s2Ref = React.useRef<SpreadSheet>()\n  const [sheetType, setSheetType] = React.useState('pivot')\n\n  const onMounted = (instance) => {\n    console.log(s2Ref.current === instance)\n  }\n\n  return (\n    <SheetComponent ref={s2Ref} sheetType={sheetType} onMounted={onMounted}/>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface for Pagination in S2-React\nDESCRIPTION: The TypeScript type definition for the showPagination prop in the S2 React component. It can be either a boolean or an object with callback functions for handling pagination events.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/pagination.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype ShowPagination =\n  | boolean\n  | {\n      onShowSizeChange?: (current: number, pageSize: number) => void,\n      onChange?: (current: number, pageSize: number) => void\n    }\n```\n\n----------------------------------------\n\nTITLE: Dynamic Row Cell Dimensions Based on Node Properties\nDESCRIPTION: Configuration for dynamically adjusting row cell dimensions based on node properties like level and leaf status. Return null to use default dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      width: (rowNode) => {\n        // 例：叶子节点 300px, 非叶子节点 200px\n        return rowNode.isLeaf ? 300 : 200;\n      },\n      height: (rowNode) => {\n        // 例：偶数行高度 300pox, 奇数行默认高度\n        return rowNode.level % 2 === 0 ? 300 : null\n      }\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Scroll Configuration Options in TypeScript\nDESCRIPTION: Shows how to use the new skipScrollEvent option when scrolling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_30\n\nLANGUAGE: diff\nCODE:\n```\ns2.interaction.scrollTo({\n+  skipScrollEvent: false\n})\n```\n\n----------------------------------------\n\nTITLE: Defining GridInfo Interface for S2 Grid in TypeScript\nDESCRIPTION: The GridInfo interface provides a simple structure for storing column and row dimension arrays, which likely contain size or position information for the grid layout.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-facet.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface GridInfo {\n  cols: number[];\n  rows: number[];\n}\n```\n\n----------------------------------------\n\nTITLE: 配置S2表格滚动边界行为 (TypeScript)\nDESCRIPTION: 通过设置overscrollBehavior来控制S2表格在滚动到边界时的行为。可以设置为'auto'、'none'或'contain'，分别对应不同的滚动边界行为。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/scroll.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    overscrollBehavior: 'auto' // 'auto' | 'none' | 'contain';\n    // overscrollBehavior: null  // 设为 null 则不做任何处理\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Retrieving Row Data on Cell Click in S2 Visualization in TypeScript\nDESCRIPTION: Shows how to retrieve row data, cell data, and dimension values when clicking on a row header cell in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_19\n\nLANGUAGE: ts\nCODE:\n```\ns2.on(S2Event.ROW_CELL_CLICK, (event) => {\n  // 首先拿到单元格当前信息\n  const cell = s2.getCell(event.target)\n  const meta = cell.getMeta()\n\n  // 获取当前行数据\n  const rowData = s2.dataSet.getCellMultiData({ query: meta.query })\n  // 获取当前行头单元格数据：\n  const rowCellData = s2.dataSet.getCellData({ query: meta.query })\n  // 获取当前行头维值\n  const dimensionValues = s2.dataSet.getDimensionValues(meta.field)\n\n  console.log('当前行数据：', rowData)\n  console.log('当前行头单元格数据：', rowCellData)\n  console.log('当前行头维值：', dimensionValues)\n})\n\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Menu in AntV S2\nDESCRIPTION: New approach for implementing tooltip operation menus using the render prop pattern. This allows integrating with different versions of Ant Design's Menu component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_32\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Menu } from 'antd'\n\nconst s2Options = {\n  tooltip: {\n    operation: {\n      menu: {\n        render: (props) => {\n          return <Menu {...props} />;\n        },\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling CSS Transform Support in S2 Configuration\nDESCRIPTION: Configuration to properly handle mouse coordinates when the parent element uses CSS transform scale. This enables proper coordinate mapping despite the parent element's transformation.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  transformCanvasConfig() {\n    return {\n      supportsCSSTransform: true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Changing Cell State with Advanced Options in AntV S2\nDESCRIPTION: Demonstrates how to use the changeCell method for more granular control over cell state changes. This example shows how to select a cell with additional parameters like multi-selection and scroll control.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { InteractionStateName } from '@antv/s2'\n\nconst targetCell = s2.facet.getRowCell()[0]\n\ns2.interaction.changeCell({\n  cell: targetCell,\n  stateName: InteractionStateName.SELECTED,\n  isMultiSelection: false,\n  scrollIntoView: false,\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Data Cell Interaction States in S2 Pivot Table\nDESCRIPTION: This snippet shows how to set border colors for different interaction states of data cells in an S2 pivot table, including hover focus and prepare select states.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/theme.en.md#2025-04-22_snippet_10\n\nLANGUAGE: css\nCODE:\n```\ndataCell.interactionState.hoverFocus.borderColor: #000000;\ndataCell.interactionState.prepareSelect.borderColor: #000000;\n```\n\n----------------------------------------\n\nTITLE: Defining LayoutArrange Function for Custom Ordering in JavaScript\nDESCRIPTION: This function is used for custom ordering in spreadsheet layouts. It takes a SpreadSheet instance, a Node object, a field name, and an array of field values as parameters. The function returns an array of strings representing the arranged layout.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/layoutArrange.en.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nLayoutArrange = (spreadsheet: SpreadSheet, parent: Node, field: string, fieldValues: string[]) => string[];\n```\n\n----------------------------------------\n\nTITLE: 获取多个数据（TypeScript）\nDESCRIPTION: 说明了如何获取多个符合条件的单元格数据，允许维度缺失的情况。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/pivot.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nconst dataList = getMultiData({\n  query: { province: '浙江省', $$extra$$: 'price' }\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Right Alignment for Row Header Cells in S2 CrossTable\nDESCRIPTION: Code example demonstrating how to configure right alignment for both bolderText (non-leaf nodes) and regular text (leaf nodes) in row header cells of an S2 CrossTable.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: js\nCODE:\n```\nrowCell: {\n  bolderText: {\n    textAlign: 'right',\n  },\n  text: {\n    textAlign: 'right',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Passing Total and Subtotal Data in TypeScript for AntVis S2\nDESCRIPTION: Example showing the structure of data passed to AntVis S2 for grand totals and subtotals. Demonstrates how cell values are mapped to specific combinations of dimensions including total and subtotal rows/columns.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/totals.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n[\n  // 总计/总计\n  {\n    price: '15.5',\n  },\n  // 浙江/总计\n  {\n    province: '浙江',\n    price: '5.5',\n  },\n  // 浙江-杭州/总计\n  {\n    province: '浙江',\n    city: '杭州',\n    price: '3',\n  },\n  // 总计/笔\n  {\n    type: '笔',\n    price: '10',\n  },\n  // 浙江-小计/笔\n  {\n    province: \"浙江\",\n    type: \"笔\",\n    price: \"3\"\n  },\n]\n```\n\n----------------------------------------\n\nTITLE: Importing CellData Class in TypeScript\nDESCRIPTION: Demonstrates how to import the CellData class from the @antv/s2 package for use in TypeScript code.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/cell-data.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { CellData } from '@antv/s2'\n```\n\n----------------------------------------\n\nTITLE: Installing Basic AntV S2 Library\nDESCRIPTION: Commands to install the basic @antv/s2 library using npm, yarn, or pnpm package managers. This version is framework-agnostic.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/install.en.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# npm\n$ npm install @antv/s2 --save\n\n# yarn\n$ yarn add @antv/s2\n\n# pnpm\n$ pnpm add @antv/s2\n```\n\n----------------------------------------\n\nTITLE: Configuring Icon Placement in S2 Table Headers\nDESCRIPTION: Code to specify where custom sorting icons should appear in the table by defining cell type and display conditions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-order.en.md#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst s2Options = {\n  // 配置 icon 展示位置\n  headerActionIcons: [\n    {\n      // 选择 icon, 可以是 S2 自带的，也可以是自定义的 icon\n      icons: [ 'customKingIcon' ],\n      // 通过 belongsCell + displayCondition 设置 icon 的展示位置\n      belongsCell: 'colCell',\n      displayCondition: (meta) => meta.level === 2,\n      ...\n    }],\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Defining EventHandler Interface in TypeScript\nDESCRIPTION: Interface definition for EventHandler specifically handling pointer events. Contains a string type property and a handler function that processes FederatedPointerEvent objects.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/interaction.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface EventHandler {\n  type: string;\n  handler: (event: FederatedPointerEvent) => void;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring CellTextWordWrapStyle in AntV S2\nDESCRIPTION: Specifies the text wrapping configuration options for cells in an AntV S2 table, including word wrap, maximum lines, and text overflow handling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/style.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| 参数    | 说明 | 类型   | 默认值 | 必选  |\n| ------- | ------------ | ------ | ------ | ---- |\n| wordWrap      | 文本是否自动换行（数值单元格不建议换行）。[了解更多](https://g.antv.antgroup.com/api/basic/text#wordwrap)                                                                    | `boolean`                      | `true`                                                                                                 |      |\n| maxLines      | 最大行数，文本超出后将被截断，当 [**手动拖拽调整高度**](/manual/advanced/interaction/resize) 或存在 [**自定义单元格高度**](/manual/advanced/custom/cell-size) 时，为保证展示合理性，会根据当前文本行高计算出能展示的最大行数，**覆盖**默认的 `maxLines` 配置。<br/> 该配置 支持配置为 `Infinity`（数值单元格不建议换行），需要配合 `wordWrap` 和 `textOverflow` 一起使用。[了解更多](https://g.antv.antgroup.com/api/basic/text#maxlines)                                                                      | `number`                      | `1`                                                                                                 |      |\n| maxLines      | 最大行数，文本超出后将被截断，支持配置为 `Infinity`（数值单元格不建议换行），需要配合 `wordWrap` 和 `textOverflow` 一起使用。[了解更多](https://g.antv.antgroup.com/api/basic/text#maxlines)                                                                      | `number`                      | `1`                                                                                                 |      |\n| textOverflow      | 自定义隐藏的文本溢出内容，例如直接裁剪、追加省略号或一个自定义字符串，需要配合 `wordWrap` 和 `maxLines` 一起使用。[了解更多](https://g.antv.antgroup.com/api/basic/text#textoverflow)                                                                 | `string`                      | `ellipsis`                                                                                                |      |\n```\n\n----------------------------------------\n\nTITLE: Using TableSheet with React via S2-React Component\nDESCRIPTION: Recommended approach for integrating TableSheet with React using the SheetComponent from @antv/s2-react package.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/table-mode.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from \"react\";\nimport { SheetComponent } from '@antv/s2-react';\nimport '@antv/s2-react/dist/s2-react.min.css';\n\nconst s2Options = {\n  width: 400,\n  height: 200,\n};\n\nconst App = () => {\n  return (\n    <SheetComponent\n      sheetType=\"table\"\n      dataCfg={s2DataConfig}\n      options={s2Options}\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Using S2 Instance with Dependent Components in React\nDESCRIPTION: Example showing how to use useState with onMounted when integrating with components that depend on the S2 instance. This approach ensures component updates properly occur when the instance changes.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react'\nimport { SpreadSheet } from '@antv/s2'\nimport { SheetComponent } from '@antv/s2-react'\nimport { Export } from '@antv/s2-react-components';\n\nfunction App() {\n  const [sheetInstance, setSheetInstance] = React.useState<SpreadSheet>();\n\n  const onMounted = (s2: SpreadSheet) => {\n    setSheetInstance(s2);\n  };\n\n  return (\n    <>\n      <Export sheetInstance={sheetInstance} />\n      <SheetComponent onMounted={onMounted}/>\n    </>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Module Import Comparison\nDESCRIPTION: Demonstrates the difference between ES module imports and global S2 object usage, showing how to access S2 components from the global namespace instead of module imports.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/browser.en.md#2025-04-22_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n<script type=\"module\">\n-  import { S2Event, PivotSheet, TableSheet } from '@antv/s2'\n+  const { S2Event, PivotSheet, TableSheet } = S2\n</script>\n```\n\n----------------------------------------\n\nTITLE: Updating Tooltip API Calls in AntV S2\nDESCRIPTION: Changes to the API for programmatically showing tooltips, with 'defaultSelectedKeys' renamed to 'selectedKeys'.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_34\n\nLANGUAGE: diff\nCODE:\n```\ns2.showTooltip({\n  options: {\n    operator: {\n      menu: {\n-       defaultSelectedKeys: ['key-1'],\n+       selectedKeys: ['key-1'],\n      },\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cell Metadata by Indices in S2 Visualization in TypeScript\nDESCRIPTION: Shows how to access cell metadata using row and column indices in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_23\n\nLANGUAGE: ts\nCODE:\n```\ns2.facet.getCellMeta(rowIndex, colIndex)\n```\n\n----------------------------------------\n\nTITLE: Unifying Cell Data Retrieval API Parameters in TypeScript\nDESCRIPTION: Updates the parameters for getCellData and introduces getCellMultiData to replace getMultiData.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_22\n\nLANGUAGE: diff\nCODE:\n```\n- s2.dataSet.getCellData(params: CellDataParams)\n+ s2.dataSet.getCellData(params: GetCellDataParams)\n\n- s2.dataSet.getMultiData(query: DateType, params: MultiDataParams)\n- s2.dataSet.getMultiData(query: DataType, isTotals?: boolean, isRow?: boolean, drillDownFields?: string[], includeTotalData:boolean)\n+ s2.dataSet.getCellMultiData(params: GetCellMultiDataParams)\n```\n\n----------------------------------------\n\nTITLE: Applying Built-in Theme in S2 (JavaScript)\nDESCRIPTION: This snippet demonstrates how to apply a built-in theme to an S2 instance. It uses the 'darkTheme' as an example and shows how to set it using the 'theme' option in the S2 configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/theme/default/index.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst s2 = new Sheet({\n  // ... other configurations\n  theme: S2Theme.darkTheme,\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Tooltip Operations in TypeScript\nDESCRIPTION: Demonstrates how to add operation items to tooltips, such as enabling the option to hide columns.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n   tooltip: {\n     operation: {\n       hiddenColumns: true, //Enable hidden columns (leaf nodes are valid)\n     },\n   }\n};\n```\n\n----------------------------------------\n\nTITLE: Listening to Cell Click Events in AntV S2\nDESCRIPTION: This snippet demonstrates how to listen for row cell click events and retrieve the corresponding cell information from the event target.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2'\n\ns2.on(S2Event.ROW_CELL_CLICK, (event) => {\n  // 根据 event.target 拿到表格内部当前坐标对应的单元格\n  const cell = s2.getCell(event.target)\n  // 获取当前单元格对应的信息\n  const meta = cell.getMeta()\n})\n```\n\n----------------------------------------\n\nTITLE: Changing Sheet Size\nDESCRIPTION: Method to modify the table canvas size without reloading data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\n(width?: number, height?: number) => void\n```\n\n----------------------------------------\n\nTITLE: Defining S2 Table Options for Dimensions\nDESCRIPTION: TypeScript configuration for S2 table display options. Sets the width and height dimensions for the table component rendering area.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/README.md#2025-04-22_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 480\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Sort Confirmation in Advanced Sort\nDESCRIPTION: Example of implementing the onSortConfirm callback to handle sorting confirmation events. This function receives both the raw rule values and the processed sort parameters that can be directly used with the table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/advanced.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nadvancedSort: {\n  open: true,\n  onSortConfirm: (ruleValues: RuleValue[], sortParams: SortParams) => {\n    console.log(ruleValues, sortParams)\n  },\n},\n```\n\n----------------------------------------\n\nTITLE: Rendering Table\nDESCRIPTION: Method to re-render the table with options to reload data, rebuild dataset, and rebuild hidden column information.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\n(reloadData?: boolean, { rebuildDataSet?: boolean; reBuildHiddenColumnsDetail?: boolean }) => Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Handling Sheet Type Changes in React Components\nDESCRIPTION: Example demonstrating how S2 handles instance changes when sheetType changes (e.g., from pivot to table). This shows how the component automatically provides the latest instance through ref and onMounted.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react'\nimport { SpreadSheet } from '@antv/s2'\nimport { SheetComponent } from '@antv/s2-react'\n\nfunction App() {\n  const s2Ref = React.useRef<SpreadSheet>()\n  const [sheetType, setSheetType] = React.useState('pivot')\n\n  const onMounted = (instance) => {\n    console.log(s2Ref.current === instance)\n  }\n\n  React.useEffect(() => {\n    setSheetType('table')\n  },[])\n\n  return (\n    <SheetComponent ref={s2Ref} sheetType={sheetType} onMounted={onMounted}/>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating Copy Configuration in S2 2.0\nDESCRIPTION: Shows how the copy configuration has been consolidated under interaction.copy with additional customization options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  interaction: {\n-   enableCopy: true,\n-   copyWithHeader: true,\n-   copyWithFormat: true\n\n+   copy: {\n+     enable: true,\n+     withHeader: true,\n+     withFormat: true,\n+     customTransformer: () => {}\n+   },\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Tree Table Icons in S2 (TypeScript)\nDESCRIPTION: This code shows how to customize the expand and collapse icons for a tree table in S2 by overriding the built-in Plus and Minus icons.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-icon.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  customSVGIcons: [\n    {\n      name: 'Plus',\n      src: 'https://gw.alipayobjects.com/zos/antfincdn/kXgP1pnClS/plus.svg',\n    },\n    {\n      name: 'Minus',\n      src: 'https://gw.alipayobjects.com/zos/antfincdn/2aWYZ7%26rQF/minus-circle.svg',\n    },\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ScrollBarTheme Configuration in Markdown\nDESCRIPTION: This snippet outlines the ScrollBarTheme configuration options, including parameters for track color, thumb color, size, and other scrollbar-related properties.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-theme.en.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n#### ScrollBarTheme\n\n**optional** *object*\n\nFunction description: scroll bar style\n\n| parameter              | illustrate                                                                                                                                                                            | type                          | Defaults               | required |\n| ---------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------- | ---------------------- | -------- |\n| trackColor             | Scrollbar track color                                                                                                                                                                 | `string`                      | `rgba(0,0,0,0)`        |          |\n| thumbHoverColor        | Scrollbar Hover state color                                                                                                                                                           | `string`                      | `rgba(0,0,0,0.4)`      |          |\n| thumbColor             | scrollbar color                                                                                                                                                                       | `string`                      | `rgba(0,0,0,0.15)`     |          |\n| thumbHorizontalMinSize | The horizontal minimum size of the scroll bar (in the case of a large number, the scroll bar will be very small, and the minimum size of the horizontal scroll bar can be configured) | `string`                      | `32`                   |          |\n| thumbVerticalMinSize   | The vertical minimum size of the scroll bar (in the case of a large number, the scroll bar will be very small, and the minimum size of the vertical scroll bar can be configured)     | `string`                      | `32`                   |          |\n| size                   | scroll bar size                                                                                                                                                                       | `number`                      | Mobile: `3`<br>PC: `6` |          |\n| hoverSize              | The size of the scrollbar when Hover                                                                                                                                                  | `number`                      | `16`                   |          |\n| lineCap                | Specifies how to draw the end of each line segment                                                                                                                                    | `butt` \\| `round` \\| `square` | `round`                |          |\n```\n\n----------------------------------------\n\nTITLE: Configuring Tree Mode with Frozen Rows in Pivot Table\nDESCRIPTION: Shows how to set up tree mode with frozen rows in a pivot table configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.zh.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'tree',\n  frozen: {\n    rowCount: 1,\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Video Renderer in S2DataConfig\nDESCRIPTION: This snippet shows how to configure the S2DataConfig.meta to enable video rendering in table cells. It includes options for specifying the renderer type, fallback image, timeout, preview behavior, and styling configurations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/video.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  meta: {\n    field: string,\n    name: string,\n    renderer: {\n      type: 'VIDEO',  // 单元格渲染为视频\n      fallback?: string, // 渲染失败时的兜底图片地址\n      timeout?: number, // 视频加载超时时间，默认为10秒  \n      clickToPreview?: boolean, // 是否开启点击预览\n      config?: Partial<RectStyleProps>, // 单元格内视频矩形区域配置 https://g.antv.antgroup.com/api/css/pattern#htmlvideoelement\n      videoConfig?: Partial<HTMLVideoElement> // https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ViewCellHeights Interface for S2 Grid in TypeScript\nDESCRIPTION: The ViewCellHeights interface defines methods for handling cell heights in the view, including obtaining vertical offsets, calculating total height, getting total item count, and determining index ranges based on height constraints.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-facet.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ViewCellHeights {\n  getCellOffsetY: (index: number) => number;\n\n  getTotalHeight: () => number;\n\n  getTotalLength: () => number;\n\n  getIndexRange: (\n    minHeight: number,\n    maxHeight: number,\n  ) => {\n    start: number;\n    end: number;\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Split Line Theme Configuration in AntV S2\nDESCRIPTION: Changes to the default values for split line color and opacity, which now match the border of the corresponding cell area by default when no values are specified.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_27\n\nLANGUAGE: diff\nCODE:\n```\nsplitLine: {\n-  horizontalBorderColor: basicColors[12],\n-  horizontalBorderColorOpacity: 0.2,\n-  verticalBorderColor: basicColors[12],\n-  verticalBorderColorOpacity: 0.25,\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Switcher Trigger in React\nDESCRIPTION: Illustrates how to customize the Switcher trigger button with a custom title, icon, or completely custom children.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/switcher.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SwapOutlined } from '@ant-design/icons';\n\n<Switcher title=\"维度切换\" icon={<SwapOutlined/> }/>\n\n<Switcher>\n  <Button size=\"small\">自定义入口</Button>\n</Switcher>\n```\n\n----------------------------------------\n\nTITLE: Configuring Auto-hidden Columns in S2 Schedule\nDESCRIPTION: This code demonstrates how to configure default hidden column headers in an S2 schedule by specifying fields in the data config and options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/hide-columns.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    columns: ['province', 'city', 'type', 'price'],\n  },\n};\n\nconst s2Options = {\n  interaction: {\n    hiddenColumnFields: ['city']\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Resolving Initial Tooltip Rendering Issue in JavaScript\nDESCRIPTION: This fix addresses the problem of the tooltip element not rendering when first shown, as reported in issue #354.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\n* **tooltip:** fix cannot render tooltip element when first show ([#354](https://github.com/antvis/S2/issues/354)) ([78c22a6](https://github.com/antvis/S2/commit/78c22a6c8d3abb6357451e6752ad4fb4c2334e25))\n```\n\n----------------------------------------\n\nTITLE: 配置透视表平铺模式 (TypeScript)\nDESCRIPTION: 展示如何通过s2Options设置透视表行头为平铺模式(grid)。平铺模式将行头数据以网格形式展示。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/base-concept.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'grid'\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Merged Cells in S2 Visualization in TypeScript\nDESCRIPTION: Shows how to access merged cells in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\ns2.facet.getMergedCells()\n```\n\n----------------------------------------\n\nTITLE: Updating Cell Selection API in TypeScript\nDESCRIPTION: Replaces selectHeaderCell with changeCell and introduces new methods for cell selection and highlighting.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_27\n\nLANGUAGE: diff\nCODE:\n```\n- s2.interaction.selectHeaderCell(selectHeaderCellInfo: SelectHeaderCellInfo)\n+ s2.interaction.changeCell(options: ChangeCellOptions)\n\n+ s2.interaction.selectCell(cell: S2CellType)\n+ s2.interaction.highlightCell(cell: S2CellType)\n```\n\n----------------------------------------\n\nTITLE: Creating CellData Instance from Raw Data in TypeScript\nDESCRIPTION: Static method to create a CellData instance from raw data and an extra field. Used for initializing cell metadata.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/cell-data.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nCellData.getCellData(raw: RawData, extraField: string)\n```\n\n----------------------------------------\n\nTITLE: Adjusting Row Cell Dimensions in S2\nDESCRIPTION: Configuration for setting the width and height of row cells. Row cell height adjustments apply to leaf nodes, and the height always aligns with data cell height.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      width: 50,\n      height: 50\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Hover Highlight in S2\nDESCRIPTION: Controls the \"cross highlight\" effect that highlights the corresponding row and column headers when hovering over a cell. This is enabled by default.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    hoverHighlight: false // 默认 true\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Checking Value Position in Table Columns\nDESCRIPTION: Method to determine if value is positioned at the beginning of the line in a table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n() => boolean\n```\n\n----------------------------------------\n\nTITLE: Defining RawData Types in TypeScript\nDESCRIPTION: Type definitions for raw data structure supporting both simple and complex data items.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-data-config.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype RawData = Record<string, DataItem>;\ntype DataItem =  SimpleData | MultiData;\n```\n\n----------------------------------------\n\nTITLE: Initializing PivotSheet Instance in TypeScript\nDESCRIPTION: Example showing how to create a new PivotSheet instance and check if it's in pivot mode. PivotSheet is a specific implementation of SpreadSheet for pivot table functionality.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2 = new PivotSheet()\n\ns2.isPivotMode()\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Table to Disable Default Sort Icons\nDESCRIPTION: Code to disable the default sorting icons that appear in S2 table headers, allowing for custom icon implementation.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-order.en.md#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst s2Options = {\n  // 关闭默认 icon\n  showDefaultHeaderActionIcon: false,\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Updated Cell Width and Height Configuration in S2 2.0\nDESCRIPTION: Shows the changes to cell dimension configuration properties, with support for dynamic functions and field-based sizing.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\nexport interface BaseCellStyle {\n  width?: number | (node) => number;\n- height?: number;\n+ height?: number | (node) => number;\n- widthByFieldValue?: Record<string, number>;\n+ widthByField?: Record<string, number>;\n  heightByField?: Record<string, number>;\n}\n```\n\n----------------------------------------\n\nTITLE: Resetting S2 Data Configuration\nDESCRIPTION: Shows how to reset data configuration for an S2 spreadsheet by completely replacing previous configuration instead of merging, followed by re-rendering with data updates.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\npivotSheet.setDataCfg({ ... }, true)\nawait pivotSheet.render(true) // 重新渲染，且更新数据\n```\n\n----------------------------------------\n\nTITLE: Style Object Types in Markdown\nDESCRIPTION: Defines the structure and properties for style configuration including layoutWidthType, dataCell, colCell and rowCell. The layoutWidthType can be adaptive, colAdaptive or compact affecting how cells are laid out.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/style.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| parameter       | type                                     | required | Defaults | Functional description                                                                                                                                                                                                                                                                                                                                                                                                         |\n| --------------- | ---------------------------------------- | -------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| layoutWidthType | `adaptive` \\| `colAdaptive` \\| `compact` |          |          | Cell Width Layout Type<br>`adaptive` : Rows and columns are equal in width, equally dividing the entire `Canvas` canvas width<br>`colAdaptive` : Equal width of columns, compact layout of line headers, the remaining width of the column equally divided canvas width minus the width of line headers<br>`compact` : compact row and column layout, when the indicator dimension is small, it cannot cover the entire canvas |\n```\n\n----------------------------------------\n\nTITLE: Defining Hierarchy Class Structure in TypeScript for S2 Pivot Table\nDESCRIPTION: Structure of the Hierarchy class used to manage all nodes in row headers and column headers. It maintains collections of nodes, provides methods for node access and manipulation, and tracks dimensional properties.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/layout/pivot.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nclass Hierarchy {\n    width, height, sampleNodesForAllLevels, allNodesWithoutRoot, indexNode,\n    getLeaves: () => {},\n    getNodes: () => {},\n    getIndexNodes: () => {},\n    pushNode: () => {}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InteractionConstructor Type in TypeScript\nDESCRIPTION: Type definition for interaction constructor that creates new interaction instances from a spreadsheet object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/interaction.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport type InteractionConstructor = new (\n  spreadsheet: SpreadSheet,\n) => BaseEvent;\n```\n\n----------------------------------------\n\nTITLE: Fixing Tooltip Hide on Click Behavior in JavaScript\nDESCRIPTION: This fix addresses the issue where the tooltip would hide when clicked, resolving issue #370.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\n* **tooltip:** tooltip will hide if cliced ([#370](https://github.com/antvis/S2/issues/370)) ([dccd4f5](https://github.com/antvis/S2/commit/dccd4f5bf667af0401e9d517f729992ba6dc7068))\n```\n\n----------------------------------------\n\nTITLE: Resetting S2 Grid Interactions in TypeScript\nDESCRIPTION: Example showing how to reset all interactions in an S2 grid instance back to their default state using the interaction API.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/interaction.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ns2.interaction.reset()\n```\n\n----------------------------------------\n\nTITLE: Hidden Columns Interface Definition\nDESCRIPTION: TypeScript interface defining the structure for hidden column information, including hidden nodes and their display sibling node.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/store.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HiddenColumnsInfo {\n  // 当前显示的兄弟节点之前所隐藏的节点\n  hideColumnNodes: Node[];\n  // 当前隐藏列所对应展示展开按钮的兄弟节点\n  displaySiblingNode: Node;\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Field Value from ViewMetaData in TypeScript\nDESCRIPTION: Static method to get a specific field value from ViewMetaData. Provides a way to access individual data points within the cell metadata.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/cell-data.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nCellData.getFieldValue(data: ViewMetaData, field?: string)\n```\n\n----------------------------------------\n\nTITLE: Migrating Tooltip Rendering Configuration in S2 2.0\nDESCRIPTION: Shows the property name changes for tooltip rendering configuration, from showTooltip/renderTooltip to enable/render.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_6\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n-   showTooltip: true,\n-   renderTooltip: () => new CustomTooltip(),\n\n+   enable: true,\n+   render: () => new CustomTooltip(),\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Modifying Cell Brush Selection State Names in TypeScript\nDESCRIPTION: Updates the state names for brush selection in row headers, column headers, and value cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_25\n\nLANGUAGE: diff\nCODE:\n```\ns2.interaction.getState()\n\n// Row header\n- stateName: \"brushSelected\"\n+ stateName: \"rowCellBrushSelected\"\n\n// Column header\n- stateName: \"brushSelected\"\n+ stateName: \"colCellBrushSelected\"\n\n// Value cells\n- stateName: \"selected\"\n+ stateName: \"dataCellBrushSelected\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Scrollbar Style in S2 Table with TypeScript\nDESCRIPTION: Demonstrates how to modify the scrollbar appearance in an S2 table by setting the thumb color and minimum sizes for both horizontal and vertical scrollbars.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/theme.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ns2.setTheme({\n  scrollBar: {\n    thumbColor: '#666',\n    thumbHorizontalMinSize: 20,\n    thumbVerticalMinSize: 20,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Axis Information\nDESCRIPTION: Shows how to modify the axis information displayed in tooltips for row/column headers\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_28\n\nLANGUAGE: tsx\nCODE:\n```\ninstance.showTooltip = (tooltipOptions) => {\n  const { data } = tooltipOptions;\n  const { cols = [], rows = [] } = data.headInfo || {};\n  const customCols = cols.map(item => {\n    return {...item, value: `${item.value} - test`}\n  });\n  instance.tooltip.show({\n    ...tooltipOptions,\n    data: {\n      ...data,\n      headInfo: { rows, cols: customCols }\n    }\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Highlighting Child Nodes in AntV S2 with TypeScript\nDESCRIPTION: Shows how to highlight a group of child nodes in an AntV S2 table. Different state parameters can be specified to control the highlight appearance.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst targetNodes = s2.facet.getRowNodes()\n\ns2.interaction.highlightNodes(targetNodes)\ns2.interaction.highlightNodes(targetNodes, 'hover')\ns2.interaction.highlightNodes(targetNodes, 'selected')\n```\n\n----------------------------------------\n\nTITLE: Creating a Webpack Plugin for Ant Design Version Aliasing\nDESCRIPTION: Custom webpack plugin implementation that redirects @antv/s2-react-components to use antd-v5 while the rest of the project continues using antd v4.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_36\n\nLANGUAGE: ts\nCODE:\n```\nclass AntdV5AliasPlugin {\n  apply(compiler) {\n    compiler.hooks.normalModuleFactory.tap(\"AntdV5AliasPlugin\", (nmf) => {\n      nmf.hooks.beforeResolve.tapAsync(\"AntdV5AliasPlugin\", (resolveData, callback) => {\n        if (resolveData.contextInfo?.issuer?.includes('node_modules/@antv/s2-react-components')) {\n          // 匹配：\"antd\" 和 \"antd/es/locale/xxx\"\n          if (/antd(\\/*)?/.test(resolveData.request)) {\n            // 替换为：\"antd-v5\" 和 \"antd-v5/es/locale/xxx\"\n            resolveData.request = resolveData.request.replace(/antd(\\/*)?/,'antd-v5$1')\n          }\n        }\n\n        callback();\n      });\n    });\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LayoutResult Interface for S2 Grid in TypeScript\nDESCRIPTION: The LayoutResult interface defines the structure of node hierarchies for both rows and columns in an S2 grid. It includes hierarchy objects, node collections, and separate arrays for leaf nodes in both dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-facet.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface LayoutResult {\n  colNodes: Node[];\n  colsHierarchy: Hierarchy;\n  rowNodes: Node[];\n  rowsHierarchy: Hierarchy;\n  rowLeafNodes: Node[];\n  colLeafNodes: Node[];\n}\n```\n\n----------------------------------------\n\nTITLE: Updating S2 Theme Configuration\nDESCRIPTION: Demonstrates how to update the theme configuration for an S2 spreadsheet and trigger a re-render without updating data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\npivotSheet.setThemeCfg({ ... })\nawait pivotSheet.render(false)  // 重新渲染，不更新数据\n```\n\n----------------------------------------\n\nTITLE: Displaying a Tooltip with S2 Library in TypeScript\nDESCRIPTION: Example of showing a tooltip at specific coordinates with custom content using the S2 library's tooltip API.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-tooltip.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ns2.tooltip.show({\n  position: {\n    x: 0,\n    y: 0,\n  },\n  content: 'xxx'\n})\n```\n\n----------------------------------------\n\nTITLE: Defining ScrollOffset Interface for S2 Grid in TypeScript\nDESCRIPTION: The ScrollOffset interface defines the current scroll position values for the grid, including horizontal and vertical scrolling for the main grid and separate tracking for row header horizontal scrolling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-facet.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ScrollOffset {\n  scrollX?: number;\n  scrollY?: number;\n  rowHeaderScrollX?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up RowCell in AntV S2\nDESCRIPTION: Outlines the configuration options for row header cells in an AntV S2 table, including width, height, tree structure settings, and field-based dimension adjustments.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/style.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| 参数 | 说明 | 类型 | 默认值 | 必选  |\n| --- | --- | --- | --- | ---  |\n| width | 行单元格宽度，可根据当前行头节点动态设置，树状结构同样适用 | `number \\| (rowNode: Node) => number` |  |  |\n| treeWidth | 树状模式下行单元格宽度，优先级高于 `width`, 值为空时则默认使用 `width` | `number` |  |  |\n| height | 行单元格高度，可根据当前行头节点动态设置 | `number \\| (rowNode: Node) => number` | 30 |  |\n| collapseFields | 树状模式下行头自定义折叠节点。<br> 支持 id (`'root[&] 行头维度值'`) 和 维度 field (`'city'`) 两种格式，优先级大于 `collapseAll` 和 `expandDepth`, 设置为 `null` 时优先级最低。 [查看 demo](/examples/basic/pivot#tree) | `Record<string, boolean>` |  | |\n| collapseAll | 在树状结构模式下行头是否默认收起全部。 | `boolean` |   `false` | |\n| expandDepth | 在树状结构模式下行头默认展开展开的层级（层级从 0 开始）,  设置为 `null` 时优先级最低 |  `number` |  | |\n| showTreeLeafNodeAlignDot | 树状模式下行头叶子节点是否显示层级占位点 | `boolean` | `false` |  |\n| withByField | 根据 `field` 设置每行的宽度。`field` 对应 `s2DataConfig.fields.rows` 中的 `field` 或 列头 id （优先级大于 `width`) [查看详情](/manual/advanced/custom/cell-size#%E8%B0%83%E6%95%B4%E8%A1%8C%E5%A4%B4%E5%8D%95%E5%85%83%E6%A0%BC%E5%AE%BD%E9%AB%98) | `Record<string, number>` | - |  |\n| heightByField | 根据 `field` 设置每行的高度。<br/> 1. 透视表：`field` 对应 `s2DataConfig.fields.rows` 中的 `field` 或 列头 id. <br/> 2. 明细表：`field` 对应 行序号，从 `1` 开始。（优先级大于 `height`) [查看详情](/manual/advanced/custom/cell-size#%E8%B0%83%E6%95%B4%E8%A1%8C%E5%A4%B4%E5%8D%95%E5%85%83%E6%A0%BC%E5%AE%BD%E9%AB%98) | `Record<string, number>` | - |  |\n```\n\n----------------------------------------\n\nTITLE: Retrieving Multiple Cell Data in S2 Visualization in TypeScript\nDESCRIPTION: Demonstrates how to retrieve data for multiple cells using different query types in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_18\n\nLANGUAGE: ts\nCODE:\n```\nimport { EXTRA_FIELD, QueryDataType } from '@antv/s2'\n\n// 获取所有浙江下的数据\ns2.dataSet.getCellMultiData({\n  query: {\n    province: '浙江',\n    [EXTRA_FIELD]: 'price',\n  },\n  queryType: QueryDataType.All,\n});\n\n// 获取所有浙江下的明细数据\ns2.dataSet.getCellMultiData({\n  query: {\n    province: '浙江',\n    [EXTRA_FIELD]: 'price',\n  },\n  queryType: QueryDataType.DetailOnly,\n});\n```\n\n----------------------------------------\n\nTITLE: Obtaining S2 Instance in Vue Components\nDESCRIPTION: Example of accessing the S2 instance in Vue components using refs. The actual instance is accessed through the instance property of the ref value.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<script lang=\"ts\">\nimport type { S2DataConfig, S2Options } from '@antv/s2';\nimport { Sheet } from '@antv/s2-vue';\nimport { defineComponent, onMounted, shallowRef } from 'vue';\n\nexport default defineComponent({\n  setup() {\n    const s2 = shallowRef();\n\n    onMounted(() => {\n      console.log('s2 instance:', s2.value?.instance);\n    });\n    return {\n      s2\n    };\n  },\n\n  components: {\n    Sheet,\n  },\n});\n</script>\n\n<template>\n  <SheetComponent ref=\"s2\" :dataCfg=\"your-dataCfg\" :options=\"your-options\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Formatting Date and Virtual Column Headers\nDESCRIPTION: Configuration for custom formatting of both date column headers and virtual column headers that represent comparative metrics, allowing for customization of display names.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.en.md#2025-04-22_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\nconst s2DataConfig = {\n  meta: [\n    // 日期列头 格式化\n    {\n      field: 'date',\n      name: '时间',\n      formatter: (value) => `${value}年`,\n    },\n    // 同环比名称（虚拟列头） 格式化\n    {\n      field: EXTRA_COLUMN_FIELD,\n      formatter: (value, data, meta) => {\n        console.log(data, meta);\n        return meta?.colIndex === 0 ? '自定义标题' : value;\n      },\n    },\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Custom Container React Component Adaptation\nDESCRIPTION: Example of using a custom container for adaptation in the S2 React component using refs or DOM selection.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.zh.md#2025-04-22_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SheetComponent } from '@antv/s2-react';\n\nconst adaptiveRef = React.useRef<HTMLDivElement>();\nconst containerId = 'containerId';\n\n<div\n  id={containerId}\n  :style=\"{\n    width: 600,\n    height: 400,\n  }\"\n>\n  <SheetComponent\n    adaptive={{\n      width: true,\n      height: false,\n      getContainer: () => adaptiveRef.current // 或者使用 document.getElementById(containerId)\n    }}\n  />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Resetting S2 Table Options\nDESCRIPTION: Method to completely reset the S2 table options, replacing the existing configuration. This uses the new options directly without merging with previous settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\npivotSheet.setOptions({ ... }, true)\npivotSheet.render(false) // 重新渲染，不更新数据\n```\n\n----------------------------------------\n\nTITLE: Copying Formatted Data Configuration\nDESCRIPTION: Configuration to enable copying data with formatter functions applied, as defined in the S2DataConfig meta settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/export.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: { ... }\n  meta: [\n    {\n      field: 'city',\n      name: '城市',\n      formatter: (value) => `${value}-xx`\n    }\n  ]\n}\n\nconst s2Options = {\n  interaction: {\n    copy: { enable: true },\n    withFormat: true,\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Example of DataItem Object in JSON\nDESCRIPTION: Provides an example of a DataItem as a record containing various properties like number, province, city, and types, representing a data point in the spreadsheet.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/view-meta.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"number\": 7789,\n  \"province\": \"浙江省\",\n  \"city\": \"杭州市\",\n  \"type\": \"家具\",\n  \"sub_type\": \"桌子\"\n}\n```\n\n----------------------------------------\n\nTITLE: 获取单个数据（TypeScript）\nDESCRIPTION: 展示了如何从构建好的数据结构中获取单个单元格的数据，包括查询条件的构造和数据的提取过程。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/pivot.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nconst data = getCellData({\n    query: { province: '浙江省', city: '绍兴市', type: '家具', sub_type: '沙发', $$extra$$: 'price' }\n});\n\nconst rowDimensionValues = transformDimensionsValues(query, ['province', 'city']); // ['浙江省', '绍兴市']\nconst colDimensionValues = transformDimensionsValues(query, ['type', 'sub_type', '$$extra$$']); // ['家具', '沙发', 'price']\n\nconst path = getDataPath({ rowDimensionValues, colDimensionValues });\nconst rawData = lodash.get(indexesData, path);\n\nconst data = CellData.getCellData(rawData, query[EXTRA_FIELD]);\n\nconsole.log(data); // { raw: rawData, extraField: \"xxx\" }\n```\n\n----------------------------------------\n\nTITLE: Fixing draggable event failure\nDESCRIPTION: Fix for the draggable event not working correctly, resolving issue #1172.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_34\n\nLANGUAGE: Markdown\nCODE:\n```\n修复 draggable 事件失效问题 close[#1172](https://github.com/antvis/S2/issues/1172) ([#1173](https://github.com/antvis/S2/issues/1173)) ([0e8373c](https://github.com/antvis/S2/commit/0e8373c140a4afa9602ac623cc40ae67f9dbe02b))\n```\n\n----------------------------------------\n\nTITLE: Getting Cell from Event Target\nDESCRIPTION: Method to retrieve the current cell based on an event target.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\n(target: EventTarget) => S2CellType\n```\n\n----------------------------------------\n\nTITLE: MultiData Interface Definition\nDESCRIPTION: Interface for handling multiple indicator types in custom data cell rendering, supporting formatted and raw values with additional display options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-data-config.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MultiData {\n  values: (string | number)[][];\n  originalValues?: (string | number)[][];\n  label?: string;\n  [key: string]: unknown;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring individual icon options\nDESCRIPTION: Shows how to set individual icon options with the new configuration structure, supporting position, fill, displayCondition, and defaultHide for each icon.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_13\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  headerActionIcons: [\n    {\n+     icons: [{\n+       name: 'SortDown',\n+       position: 'right',\n+       fill: '#000',\n+       displayCondition: () => {},\n+       defaultHide: () => {},\n+     }]\n    },\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Cell-Specific Tooltip Configuration in S2\nDESCRIPTION: Demonstrates how to configure tooltips for specific cell types (corner, row, column, and data cells) in S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    cornerCell: {},\n    rowCell: {},\n    colCell: {},\n    dataCell: {},\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Complete Row Hierarchy Structure in S2 Pivot Table\nDESCRIPTION: Example of the rowHierarchy structure after recursively building child nodes. It shows the complete hierarchical structure with province and city nodes, along with various node collections for different purposes.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/layout/pivot.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nrowHierarchy: {\n    height: 0,\n    width: 0,\n    maxLevel: 2,\n    allNodesWithoutRoot: [(Node){ label: '浙江省', key: 'province', ...}, (Node){ label: '杭州市', key: 'city', ...}, (Node){ label: '绍兴市', key: 'city', ...}],\n    indexNode: [(Node){ label: '杭州市', key: 'city', ...}, (Node){ label: '绍兴市', key: 'city', ...}],\n    sampleNodeForLastLevel: [(Node){ label: '杭州市', key: 'city', ...}],\n    sampleNodesForAllLevels: [(Node){ label: '浙江省', key: 'province', ...}, (Node){ label: '杭州市', key: 'city', ...}]\n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Icon Condition in S2\nDESCRIPTION: JavaScript example demonstrating how to configure icon field marking conditions. The example shows setting an InfoCircle icon to the left of text for the 'profit' field with red color.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/conditions.en.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n  conditions: {\n    icon: [\n      {\n        field: \"profit\",\n        position: \"left\",\n        mapping: () => {\n          return {\n            icon: \"InfoCircle\",\n            fill: \"red\",\n          };\n        },\n      },\n    ],\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Filter Parameters in S2 Table\nDESCRIPTION: Example of setting filter parameters to filter data by city field, showing how to use both filteredValues and customFilter properties to create complex filters.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/table.en.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n// dataCfg\n{\n    filterParams: [\n        {\n            filterKey: 'city',\n            filteredValues: ['杭州市'],\n            customFilter: (row) => row['city'] === '杭州市' || row['city'] === '宁波市',\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Multi-Value Data Structure for Strategy Sheet\nDESCRIPTION: Example of how to structure data for a Strategy Sheet, where each cell contains multiple values including both formatted display values and original values for calculations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.en.md#2025-04-22_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nconst data = {\n  \"measure-a\": {\n    values: [\"1\", \"2\"],\n    originalValues: [1, 2]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LayoutHierarchyReturnType Interface in TypeScript\nDESCRIPTION: TypeScript interface defining the return type of the LayoutHierarchy function. It allows pushing nodes, unshifting nodes, or deleting the current node from the hierarchy.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/layoutHierarchy.en.md#2025-04-22_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\ninterface LayoutHierarchyReturnType {\n  push?: Node[];\n  unshift?: Node[];\n  delete?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Tooltip Information Messages\nDESCRIPTION: Shows how to add informational messages to tooltips, typically used for keyboard shortcuts\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_30\n\nLANGUAGE: tsx\nCODE:\n```\ninstance.showTooltip = (tooltipOptions) => {\n  const { data } = tooltipOptions;\n  const infos = 'Press and hold Cmd/Ctrl or box selection to view multiple data points';\n  instance.tooltip.show({ ...tooltipOptions, data: { ...data, infos } });\n};\n```\n\n----------------------------------------\n\nTITLE: Basic Tooltip Configuration in S2\nDESCRIPTION: Shows the basic configuration for enabling tooltips on all cells in S2 through the s2Options object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  tooltip: {}\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Serial Numbers in Pivot Table\nDESCRIPTION: Shows how to enable and customize serial numbers in the pivot table using s2Options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  seriesNumber: {\n    enable: true,\n    text: '自定义序号标题' // 默认 \"序号\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Actual Text from BaseCell in TypeScript\nDESCRIPTION: This snippet demonstrates how to get the actual text from a BaseCell instance. The getActualText method returns a string representation of the cell's content.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-cell.en.md#2025-04-22_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ncell.getActualText()\n```\n\n----------------------------------------\n\nTITLE: Feature - Cell Selection Highlight\nDESCRIPTION: Add highlighting of corresponding row/column headers when cells are selected\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\n选中单元格后对应行列头高亮 ([#1414](https://github.com/antvis/S2/issues/1414))\n```\n\n----------------------------------------\n\nTITLE: Defining SplitLine Configuration in Markdown\nDESCRIPTION: This snippet details the SplitLine configuration options, including parameters for horizontal and vertical border colors, widths, and shadow properties.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-theme.en.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n#### SplitLine\n\n**optional** *object*\n\nFunction description: Split line style\n\n| parameter                    | illustrate                                                                                        | type                                 | Defaults                                                 | required |\n| ---------------------------- | ------------------------------------------------------------------------------------------------- | ------------------------------------ | -------------------------------------------------------- | -------- |\n| horizontalBorderColor        | Horizontal divider color                                                                          | `string`                             | -                                                        |          |\n| horizontalBorderColorOpacity | Horizontal divider color transparency                                                             | `number`                             | 0.2                                                      |          |\n| horizontalBorderWidth        | Horizontal split line width                                                                       | `number`                             | 2                                                        |          |\n| verticalBorderColor          | vertical line color                                                                               | `string`                             | -                                                        |          |\n| verticalBorderColorOpacity   | Vertical split line color transparency                                                            | `number`                             | 0.25                                                     |          |\n| verticalBorderWidth          | Vertical dividing line width                                                                      | `number`                             | 2                                                        |          |\n| showShadow                   | Whether to display the outer shadow of the dividing line (in the case of frozen rows and columns) | `boolean`                            | `true`                                                   |          |\n| shadowWidth                  | shadow width                                                                                      | `number`                             | 10                                                       |          |\n| shadowColors                 | `left` : change the left color linearly<br>`right` : change the color of the right side linearly  | `{left: string,`<br>`right: string}` | `{left: 'rgba(0,0,0,0.1)',`<br>`right: 'rgba(0,0,0,0)'}` |          |\n```\n\n----------------------------------------\n\nTITLE: Mounting S2 Vue Component in Application\nDESCRIPTION: TypeScript code for mounting the Vue application that contains the S2 component to the DOM, using the createApp function.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-vue/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createApp } from 'vue';\nimport App from './App.vue';\n\ncreateApp(App).mount('#app');\n```\n\n----------------------------------------\n\nTITLE: 构建数据索引和元数据（TypeScript）\nDESCRIPTION: 说明了如何构建indexesData、rowPivotMeta和colPivotMeta，这些是S2内部用于快速数据查询的关键结构。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/pivot.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nconst prefix = 'province[&]city[&]type[&]sub_type';\n\nconst rowPath = getDataPath(rowDimensionValues); // 结果是 [1, 2];\nconst colPath = getDataPath(colDimensionValues); // 结果是 [1, 2];\n\nconst dataPath =[prefix, ...rowPath.concat(...colPath)] ; // 结果是 ['province[&]city[&]type[&]sub_type', 1, 2, 1, 2];\n\nconst indexesData={};\nlodash.set(indexesData, dataPath, currentData);\n```\n\n----------------------------------------\n\nTITLE: Adding Icon Update Support in TypeScript\nDESCRIPTION: Implements support for updating icon name and fill properties.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: TypeScript\nCODE:\n```\nicon 支持更新 name 与 fill ([#2138](https://github.com/antvis/S2/issues/2138)) ([d000aea](https://github.com/antvis/S2/commit/d000aeac332676cfa15d9986ec7f4be948c565d0))\n```\n\n----------------------------------------\n\nTITLE: Clearing Drill Down Data\nDESCRIPTION: Method to clear drill down data for a specific row or all rows if no ID is provided.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n(rowNodeId?: string) => void\n```\n\n----------------------------------------\n\nTITLE: Migrating from copyData to asyncGetAllData in S2 2.0\nDESCRIPTION: Shows how to replace the synchronous copyData method with the new asynchronous data retrieval methods.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_9\n\nLANGUAGE: diff\nCODE:\n```\n- const data = copyData(spreadsheet, '\\t', false)\n\n+ const data = await asyncGetAllData({\n+   sheetInstance: s2,\n+   split: '\\t',\n+   formatOptions: false,\n+   async: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Defining InteractionStateInfo Interface\nDESCRIPTION: Interface for interaction state information including state name, cells, nodes, and force flag.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/interaction.en.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InteractionStateInfo {\n  stateName?: InteractionStateName;\n  cells?: CellMeta[];\n  interactedCells?: S2CellType[];\n  nodes?: Node[];\n  force?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Column Header Fields in S2 Pivot Table\nDESCRIPTION: Demonstrates how to configure the column header fields in the S2 data configuration object. This example sets 'type' and 'sub_type' as column analysis dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/base-concept.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    columns: ['type', 'sub_type']\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Combining Totals Data with Regular Data in S2DataConfig\nDESCRIPTION: Example showing how to combine regular data rows with total calculation rows in the S2DataConfig object. This demonstrates how all data can be passed together in a single data array.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/totals.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  data: [\n    {\n      province: '浙江',\n      city: '杭州',\n      type: '笔',\n      price: '1',\n    },\n    // 总计/总计\n    {\n      price: '15.5',\n    },\n  ],\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Manually Hiding Columns Using S2 Instance Method\nDESCRIPTION: This snippet shows how to manually hide columns in S2 using the instance method hideColumns().\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/hide-columns.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2 = new PivotSheet(...)\n\nconst hiddenColumnFields = ['province', 'type', 'price']\ns2.interaction.hideColumns(hiddenColumnFields)\n```\n\n----------------------------------------\n\nTITLE: Migrating AdvancedSort Component Import in S2\nDESCRIPTION: Shows the change in import path for the AdvancedSort component, which has been moved to a different package.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_46\n\nLANGUAGE: diff\nCODE:\n```\n- import { AdvancedSort } from '@antv/s2-react';\n+ import { AdvancedSort } from '@antv/s2-react-components';\n```\n\n----------------------------------------\n\nTITLE: Defining LayoutCellMeta Function in JavaScript\nDESCRIPTION: The LayoutCellMeta function allows for custom cell data configuration. It takes a SpreadSheet instance and a GetCellMeta function as parameters, providing access to cell data and positioning information.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/layoutCellMeta.en.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nLayoutCellMeta = (spreadsheet: SpreadSheet, getCellData: GetCellMeta) => GetCellMeta\n```\n\n----------------------------------------\n\nTITLE: Hiding Tooltip\nDESCRIPTION: Method to hide the currently visible tooltip.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n() => void\n```\n\n----------------------------------------\n\nTITLE: Implementing Switcher Component in React\nDESCRIPTION: Demonstrates how to import and use the Switcher component in a React application, including necessary styles and handling submit events.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/switcher.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from \"react\";\nimport { Switcher } from '@antv/s2-react-components';\nimport '@antv/s2-react-components/dist/s2-react-components.min.css';\n\nconst onSubmit = (result) => {\n  console.log(\"result:\", result);\n};\n\nconst App = () => {\n  return (\n    <Switcher {...switcherFields} onSubmit={onSubmit} />,\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating width and height configuration API\nDESCRIPTION: Shows how to update cell width and height configuration from the previous widthByFieldValue to the new widthByField property, and demonstrates the new dynamic configuration support.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\nexport interface BaseCellStyle {\n  width?: number | (node) => number;\n- height?: number;\n+ height?: number | (node) => number;\n- widthByFieldValue?: Record<string, number>;\n+ widthByField?: Record<string, number>;\n  heightByField?: Record<string, number>;\n}\n```\n\n----------------------------------------\n\nTITLE: Using Forwarded S2 Instance in Parent Vue Components\nDESCRIPTION: Example showing how to access the S2 instance from a custom wrapper component in Vue. The instance is accessed through the instance property of the ref value.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: vue\nCODE:\n```\n<script lang=\"ts\">\nexport default defineComponent({\n  setup() {\n    const s2 = shallowRef();\n\n    onMounted(() => {\n      console.log('s2 instance:', s2.value?.instance);\n    });\n\n    return {\n      s2\n    };\n  },\n\n  components: {\n    Sheet,\n  },\n});\n</script>\n\n<template>\n  <YourSheet ref=\"s2\" :dataCfg=\"your-dataCfg\" :options=\"your-options\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Defining PartDrillDownInfo Structure for S2 Drilldown Callbacks\nDESCRIPTION: JavaScript object structure for the drill-down data request parameter configuration, used in the fetchCallback function.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/drill-down.en.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n(meta: Node, drillFields: string[]) => Promise<PartDrillDownInfo>\n```\n\n----------------------------------------\n\nTITLE: Migrating cell configuration names\nDESCRIPTION: Shows the update from rowCfg/colCfg/cellCfg to the new rowCell/colCell/dataCell naming convention for better clarity.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  style: {\n-   rowCfg: {},\n-   colCfg: {},\n-   cellCfg: {},\n\n+   rowCell: {},\n+   colCell: {},\n+   dataCell: {},\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CornerHeaderCallback Function for S2 Spreadsheet\nDESCRIPTION: This function enables customization of corner headers in an S2 spreadsheet. It takes a parent cell, spreadsheet instance, and optional additional parameters. The function doesn't return a value (void).\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/dataCellCallback.en.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nCornerHeaderCallback = (parent: S2CellType, spreadsheet: SpreadSheet, ...restOptions: unknown[]) => void;\n```\n\n----------------------------------------\n\nTITLE: Accessing Layout Information on Render Event in TypeScript\nDESCRIPTION: Demonstrates how to get layout information by listening to the LAYOUT_AFTER_RENDER event in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\nimport { S2Event } from '@antv/s2'\n\ns2.on(S2Event.LAYOUT_AFTER_RENDER, () => {\n  console.log(s2.facet.getLayoutResult())\n})\n```\n\n----------------------------------------\n\nTITLE: Unifying Query Parameters in Pivot and Detail Table Meta\nDESCRIPTION: Standardizes the query parameters in the meta object for both pivot and detail tables.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst meta = {\n  query: {\n    // Unified query parameters for both table types\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Upgrading Asynchronous Rendering with AntV/G 6.0\nDESCRIPTION: Shows the code change required when upgrading to AntV/G 6.0, where the render method becomes asynchronous and requires await.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n- s2.render()\n+ await s2.render()\n```\n\n----------------------------------------\n\nTITLE: Defining DataItem Type in TypeScript\nDESCRIPTION: Defines the DataItem type as a union of SimpleData, MultiData, MiniChartData, or a generic record, representing the possible data types for a cell.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/view-meta.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ntype DataItem = SimpleData | MultiData | MiniChartData | Record<string, unknown>;\n```\n\n----------------------------------------\n\nTITLE: Getting Layout Width Type\nDESCRIPTION: Method to get the cell width layout type (adaptive, column adaptive, or compact).\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\n() => LayoutWidthType\n```\n\n----------------------------------------\n\nTITLE: Migrating Brush Selection Configuration in S2 2.0\nDESCRIPTION: Shows the changes to brush selection configuration property names from row/col/data to rowCell/colCell/dataCell.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_11\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  interaction: {\n-   brushSelection: {\n-     row: false,\n-     col: false,\n-     data: true,\n-   },\n\n+   brushSelection: {\n+     rowCell: true,\n+     colCell: true,\n+     dataCell: true,\n+   }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Export Component Event Handlers\nDESCRIPTION: Example showing how to add event handlers for successful copy and download operations in the Export component, allowing for custom actions after export operations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/export.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx | pure\nCODE:\n```\n<Export\n  onCopySuccess={(data) => {\n    console.log('copy success:', data);\n  }}\n  onDownloadSuccess={(data) => {\n    console.log('download success', data);\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Field Selection and Expansion\nDESCRIPTION: Example showing how to configure field selection and expansion options in the Switcher\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/switcher.en.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst field = {\n  selectable: true,\n  expandable: true,\n  expandText: \"展开同环比\", // 默认：展开子项\n  items: [\n    /*...*/\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Migrating headerActionIcons configuration\nDESCRIPTION: Updates the headerActionIcons configuration by renaming iconNames to icons, replacing action with onClick and onHover, and supporting new position and fill options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_12\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  headerActionIcons: [\n    {\n-      iconNames: ['SortDown'],\n-      action: () => {}\n\n+      icons: ['SortDown'],\n+      onClick: () => {}\n+      onHover: () => {}\n    },\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CornerHeaderCallback Function for Custom Corner Header Rendering in JavaScript\nDESCRIPTION: This snippet defines the signature for a callback function to customize the rendering of corner headers in the spreadsheet. It takes the parent cell, spreadsheet instance, and optional additional parameters, with no return value specified.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-options.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nCornerHeaderCallback = (parent: S2CellType, spreadsheet: SpreadSheet, ...restOptions: unknown[]) => void;\n```\n\n----------------------------------------\n\nTITLE: Customizing Resize Theme in S2\nDESCRIPTION: Theme configuration for resize functionality, including hotspot size, background color, opacity, guide line color and style.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/resize.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ns2.setTheme({\n  resizeArea: {\n    // 热区大小\n    size: 2,\n    // 热区背景色\n    background: '#396',\n    // 热区背景色透明度\n    backgroundOpacity: 0,\n    // 拖拽参考线颜色\n    guideLineColor: '#396',\n    // 拖拽参考线禁用颜色\n    guideLineDisableColor: 'rgba(0,0,0,0.25)',\n    //  参考线间隔\n    guideLineDash: [1, 6]\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Resize Impact Range in S2\nDESCRIPTION: Configuration to control the range of cells affected by resizing operations. Options include affecting all rows/columns, only the current row/column, or selected cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/resize.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    resize: {\n      // 行高调整时，影响全部行\n      rowResizeType: 'all', // 'all' | 'current' | 'selected'\n      // 列宽调整时，只影响当前列\n      colResizeType: 'current',\n    }\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Modifying Split Line Theme Configuration Defaults in TypeScript\nDESCRIPTION: Removes explicit default values for split line color and opacity, allowing them to match cell borders.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_39\n\nLANGUAGE: diff\nCODE:\n```\nsplitLine: {\n-  horizontalBorderColor: basicColors[12],\n-  horizontalBorderColorOpacity: 0.2,\n-  verticalBorderColor: basicColors[12],\n-  verticalBorderColorOpacity: 0.25,\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Cells in S2 Visualization in TypeScript\nDESCRIPTION: Shows how to access all cells in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_9\n\nLANGUAGE: ts\nCODE:\n```\ns2.facet.getCells()\n```\n\n----------------------------------------\n\nTITLE: Using Percentage-Based Dimensions for S2 Chart in React TypeScript\nDESCRIPTION: This code snippet shows how to set percentage-based dimensions for an S2 chart. It uses 100% width and 300 pixels height, allowing the chart to adapt to its container's width.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/custom/index.en.md#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<SheetComponent\n  dataCfg={dataCfg}\n  options={options}\n  sheetType=\"pivot\"\n  themeCfg={{ name: 'default' }}\n  adaptive={false}\n  width=\"100%\"\n  height={300}\n/>\n```\n\n----------------------------------------\n\nTITLE: Defining DataCellCallback in JavaScript\nDESCRIPTION: Defines a callback function for customizing value cells. It takes ViewMeta and Spreadsheet objects as parameters and returns a G.Group object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-options.en.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nDataCellCallback = (viewMeta: ViewMeta, s2: Spreadsheet) => G.Group;\n```\n\n----------------------------------------\n\nTITLE: Customizing Derived Values in S2 Spreadsheet Tooltips (TSX)\nDESCRIPTION: This snippet demonstrates how to customize the rendering of derived values in S2 spreadsheet tooltips. It uses the StrategySheetDataTooltip component with a custom renderDerivedValue function to display original values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.en.md#2025-04-22_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\n<StrategySheetDataTooltip\n  cell={cell}\n  renderDerivedValue={(currentValue, originalValue, cell) => <span>({originalValue})</span> }\n/>\n```\n\n----------------------------------------\n\nTITLE: Migrating copyToClipboard function\nDESCRIPTION: Updates the copyToClipboard function's second parameter meaning from 'sync' to 'async' to align with the new async-first approach.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_10\n\nLANGUAGE: diff\nCODE:\n```\n- const data = copyToClipboard(data: string, sync: boolean)\n+ const data = copyToClipboard(data: Copyable | string, async: boolean)\n```\n\n----------------------------------------\n\nTITLE: Disabling Frozen Row Header in Pivot Table\nDESCRIPTION: Demonstrates how to disable the frozen row header feature in the pivot table configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  frozen: {\n    rowHeader: false, // 默认开启\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Interaction in S2 Table Options\nDESCRIPTION: Shows how to register a custom interaction when initializing an S2 TableSheet instance. Demonstrates configuration of interaction options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/custom.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TableSheet } from '@antv/s2';\n\nconst s2Options = {\n  width: 600,\n  height: 300,\n  interaction: {\n    customInteractions: [\n      {\n        // 交互的唯一标识，需要保证和已有交互不冲突\n        key: 'MyInteraction',\n        interaction: MyInteraction,\n      },\n    ],\n  }\n};\nconst s2 = new TableSheet(container, s2DataConfig, s2Options);\n\ns2.render();\n```\n\n----------------------------------------\n\nTITLE: Initializing S2Options Configuration Object in TypeScript\nDESCRIPTION: This code snippet demonstrates a basic configuration object for S2 tables, setting the width, height, and hierarchy type. This is the foundation for instantiating S2 visualization tables.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-options.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 400,\n  hierarchyType: 'grid'\n}\n```\n\n----------------------------------------\n\nTITLE: Installing @antv/s2-react v1.8.0\nDESCRIPTION: NPM installation command for @antv/s2-react version 1.8.0.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2-react@1.8.0\n```\n\n----------------------------------------\n\nTITLE: HTML Container Setup\nDESCRIPTION: HTML markup for the table container element\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/getting-started.en.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\"></div>\n```\n\n----------------------------------------\n\nTITLE: Defining MultiDataParams and QueryDataType for S2 DataSet (TypeScript)\nDESCRIPTION: This snippet defines the MultiDataParams interface and QueryDataType enum used in the getMultiData method of the S2 DataSet. It specifies parameters for retrieving multiple data points and query types.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-data-set.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MultiDataParams {\n  drillDownFields?: string[]; // drill down dimensions\n  queryType?: QueryDataType; // query type, get all data by default\n}\n\nenum QueryDataType {\n  All = 'all', // get all data, include total data\n  DetailOnly = 'detailOnly', // only get detail data\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Sheet Update Event Names in S2\nDESCRIPTION: Shows the renaming of onSheetUpdate to onUpdate and the addition of onUpdateAfterRender.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_65\n\nLANGUAGE: diff\nCODE:\n```\n- <SheetComponent onSheetUpdate={} />\n+ <SheetComponent onUpdate={} onUpdateAfterRender={} />\n```\n\n----------------------------------------\n\nTITLE: Modifying Link Jump Logic and Parameters in TypeScript\nDESCRIPTION: Updates the parameter names in the link jump event callback.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_36\n\nLANGUAGE: diff\nCODE:\n```\ns2.on(S2Event.GLOBAL_LINK_FIELD_JUMP, (data) => {\n-  const { key, cellData, record } = data;\n+  const { field, meta, record } = data;\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Row Heights by Row Number in Table Mode\nDESCRIPTION: Adjusting the height of specific rows in table mode by using the row number as the key in heightByField configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      // 给第一行和第三行设置不同的高度\n      heightByField: {\n        '1': 130,\n        '3': 60,\n      },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Header Groups in AntV S2 with React\nDESCRIPTION: This snippet demonstrates how to create custom header groups in AntV S2 using React. It defines a custom header structure and applies it to an S2 instance within a React component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/custom-header-group/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport React from 'react';\nimport { SheetComponent } from '@antv/s2-react';\n\nconst App = () => {\n  const s2Options = {\n    width: 600,\n    height: 480,\n    customHeaderFields: [\n      {\n        // Define the top-level node\n        field: 'custom-root',\n        // Define child nodes\n        children: [\n          {\n            field: 'province',\n            title: '省份',\n            children: [\n              {\n                field: 'city',\n                title: '城市',\n              },\n            ],\n          },\n          {\n            field: 'type',\n            title: '类别',\n          },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <SheetComponent\n      dataCfg={dataCfg}\n      options={s2Options}\n    />\n  );\n};\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Retrieving Column Cells in S2 Visualization in TypeScript\nDESCRIPTION: Shows how to access column header cells in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\ns2.facet.getColCells()\ns2.facet.getColLeafCells()\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Display Timing with Interaction Events\nDESCRIPTION: This example demonstrates how to customize tooltip display timing by creating a custom interaction class that listens to the ROW_CELL_HOVER event.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PivotSheet, BaseEvent, S2Event } from '@antv/s2';\n\nclass RowHoverInteraction extends BaseEvent {\n   bindEvents() {\n     this.spreadsheet.on(S2Event.ROW_CELL_HOVER, (event) => {\n       this.spreadsheet.tooltip.show({\n         position: { x: 0, y: 0 },\n         content: \"...\"\n       })\n     })\n   }\n}\n\nconst s2Options = {\n   tooltip: {\n     enable: true,\n   },\n   interaction: {\n     customInteractions: [\n       {\n         key: 'RowHoverInteraction',\n         interaction: RowHoverInteraction,\n       },\n     ],\n   }\n};\n```\n\n----------------------------------------\n\nTITLE: Updating Row Header Cell Event Names in S2\nDESCRIPTION: Shows the renaming of collapse/expand events for row header cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_64\n\nLANGUAGE: diff\nCODE:\n```\n- <SheetComponent options={s2Options} onCollapseRowsAll={} />\n+ <SheetComponent options={s2Options} onRowCellAllCollapsed={} />\n\n- <SheetComponent options={s2Options} onLayoutAfterCollapseRows={} />\n+ <SheetComponent options={s2Options} onRowCellCollapsed={} />\n```\n\n----------------------------------------\n\nTITLE: Configuring G canvas with transformCanvasConfig\nDESCRIPTION: Shows how to use the new transformCanvasConfig option to customize AntV/G renderer settings and register plugins, replacing the previous devicePixelRatio and supportsCSSTransform properties.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nconst s2Options = {\n  transformCanvasConfig(renderer) {\n    renderer.setConfig({ enableDirtyCheck: true })\n    renderer.registerPlugin(new PluginA11y({ enableExtractingText: true }));\n\n    return {\n      supportsCSSTransform: true,\n      devicePixelRatio: 2\n    };\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ViewMetaData Type in TypeScript\nDESCRIPTION: Defines the ViewMetaData type as a union of Data and CellData, representing the possible data structures for cell metadata in the spreadsheet.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/view-meta.zh.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ntype ViewMetaData = Data | CellData;\n```\n\n----------------------------------------\n\nTITLE: Defining Cell Theme Configuration in Markdown\nDESCRIPTION: This snippet details the Cell Theme configuration options, including parameters for background colors, border properties, and interaction states.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-theme.en.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n#### Cell Theme\n\n**optional** *object*\n\nFunction description: Cell general theme\n\n| parameter                    | illustrate                                | type                                            | Defaults | required |\n| ---------------------------- | ----------------------------------------- | ----------------------------------------------- | -------- | -------- |\n| crossBackgroundColor         | Cardinal row cell background color        | `string`                                        | -        |          |\n| backgroundColor              | cell background color                     | `string`                                        | -        |          |\n| backgroundColorOpacity       | Cell background color transparency        | `number`                                        | 1        |          |\n| horizontalBorderColor        | Cell horizontal border color              | `string`                                        | -        |          |\n| horizontalBorderColorOpacity | Cell horizontal border color transparency | `number`                                        | 1        |          |\n| horizontalBorderWidth        | Cell horizontal border width              | `number`                                        | -        |          |\n| verticalBorderColor          | Cell vertical border color                | `string`                                        | -        |          |\n| verticalBorderColorOpacity   | Cell vertical border color transparency   | `number`                                        | 1        |          |\n| verticalBorderWidth          | cell vertical border width                | `number`                                        | -        |          |\n| padding                      | cell padding                              | [Padding](#margin--padding)                     | -        |          |\n| interactionState             | cell interaction state                    | [InteractionStateTheme](#interactionstatetheme) | -        |          |\n```\n\n----------------------------------------\n\nTITLE: Configuring Series Numbers in TableSheet\nDESCRIPTION: Shows how to enable and customize the series number column in TableSheet by configuring the seriesNumber option.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/table-mode.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  seriesNumber: {\n    enable: true,\n    text: '序号'\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Cell Resize Events in S2\nDESCRIPTION: Event listener for capturing cell resize information and persisting it using localStorage. Shows how to retrieve, merge, and store cell dimension data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/resize.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2'\nimport { merge } from 'lodash';\n\ns2.on(S2Event.LAYOUT_RESIZE, (data) => {\n  console.log('data:', data);\n\n  // 持久化\n  const lastStyle = JSON.parse(localStorage.getItem('style')) || {};\n  const style = merge({}, lastStyle, data.style);\n\n  localStorage.setItem('style', JSON.stringify(style));\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Row Nodes\nDESCRIPTION: Method to get row header nodes at a specified level.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\n(level: number) => Node[]\n```\n\n----------------------------------------\n\nTITLE: Migrating brush selection configuration\nDESCRIPTION: Updates the brush selection configuration from row/col/data to rowCell/colCell/dataCell to align with the new cell naming convention.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_11\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  interaction: {\n-   brushSelection: {\n-     row: false,\n-     col: false,\n-     data: true,\n-   },\n\n+   brushSelection: {\n+     rowCell: true,\n+     colCell: true,\n+     dataCell: true,\n+   }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Export Implementation with strategyCopy\nDESCRIPTION: Example showing how to use the strategyCopy method directly with the Export component for custom export implementations, which is equivalent to using the StrategyExport component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/export.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport { strategyCopy } from '@antv/s2';\nimport { Export } from '@antv/s2-react-components'\n\n<Export sheetInstance={s2Ref.current} customCopyMethod={strategyCopy} />\n```\n\n----------------------------------------\n\nTITLE: Setting up KPI Trend Table Options in JavaScript\nDESCRIPTION: Configures the options for the KPI trend table, including dimensions, showSeriesNumber, and seriesNumberText. This setup determines how the table will be displayed and formatted.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/case/kpi-strategy/index.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 480,\n  seriesNumber: {\n    enable: true,\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Dependencies for React Version (@antv/s2-react)\nDESCRIPTION: Lists the peer dependencies required for the React version of S2. It requires @antv/s2 v2.0.0 or higher, and React/ReactDOM 16.9.0 or higher.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/packages.en.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"peerDependencies\": {\n  \"@antv/s2\": \"^2.0.0\",\n  \"react\": \">=16.9.0\",\n  \"react-dom\": \">=16.9.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Export Component Callbacks in S2\nDESCRIPTION: Shows how success/error text properties have been replaced with callback functions for copy and download operations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_53\n\nLANGUAGE: diff\nCODE:\n```\n<Export\n-  successText=\"Operation successful\"\n-  errorText=\"Operation successful\"\n+  onCopySuccess={(data) => {\n+    console.log('copy success:', data);\n+  }}\n+  onCopyError={(error) => {\n+    console.log('copy failed:', error);\n+  }}\n+  onDownloadSuccess={(data) => {\n+    console.log('download success', data);\n+  }}\n+  onDownloadError={(error) => {\n+    console.log('download failed:', error);\n+  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Updating Pagination\nDESCRIPTION: Method to update the pagination configuration for the table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\n(pagination: Pagination) => void\n```\n\n----------------------------------------\n\nTITLE: S2 Configuration Structure References\nDESCRIPTION: Markdown structure defining the API documentation sections for S2DataConfig and S2Options with embedded references to detailed documentation files.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/basic/table/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# S2DataConfig\n\n<embed src=\"@/docs/api/general/s2-data-config.en.md\"></embed>\n\n# S2Options\n\n<embed src=\"@/docs/api/general/s2-options.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Updating Tooltip API Parameters in S2\nDESCRIPTION: Shows the change from 'defaultSelectedKeys' to 'selectedKeys' in the showTooltip API.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_61\n\nLANGUAGE: diff\nCODE:\n```\ns2.showTooltip({\n  options: {\n    operator: {\n      menu: {\n-       defaultSelectedKeys: ['key-1'],\n+       selectedKeys: ['key-1'],\n      },\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Migrating Export Component Import in S2\nDESCRIPTION: Shows the change in import path for the Export component, which has been moved to a different package.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_50\n\nLANGUAGE: diff\nCODE:\n```\n- import { Export } from '@antv/s2-react';\n+ import { Export } from '@antv/s2-react-components';\n```\n\n----------------------------------------\n\nTITLE: Adding Support for Images and Videos in Cell Rendering\nDESCRIPTION: Adds support for rendering images and videos within table cells.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* 单元格渲染支持图片、视频 ([#3101](https://github.com/antvis/S2/issues/3101)) ([b514b5e](https://github.com/antvis/S2/commit/b514b5e1bb47fd4b3b533e5409a888743bd389d7))\n```\n\n----------------------------------------\n\nTITLE: Configuring Data Cell Text Colors in S2 Pivot Table\nDESCRIPTION: This snippet shows the configuration keys for setting text colors in data cells of an S2 pivot table. It includes properties for both regular and bold text.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/theme.en.md#2025-04-22_snippet_8\n\nLANGUAGE: css\nCODE:\n```\ndataCell.bolderText.fill: #000000;\ndataCell.text.fill: #000000;\n```\n\n----------------------------------------\n\nTITLE: Fallback to Default Tooltip in S2-React\nDESCRIPTION: Shows how to fall back to the default tooltip by returning null from the content callback in S2-React.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    content: () => {\n      return null\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Granular React Component Adaptation Configuration\nDESCRIPTION: Examples of configuring width and height adaptation separately in the S2 React component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SheetComponent } from '@antv/s2-react';\n\n<SheetComponent adaptive={{ width: true, height: true }} />\n<SheetComponent adaptive={{ width: false, height: false }} />\n```\n\n----------------------------------------\n\nTITLE: Retrieving Data Cells in S2 Visualization in TypeScript\nDESCRIPTION: Shows how to access data cells and unselected data cells in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_7\n\nLANGUAGE: ts\nCODE:\n```\n// 当前可视范围内的数值单元格\ns2.facet.getDataCells()\n// 当前可视范围内未选中的数值单元格\ns2.interaction.getUnSelectedDataCells()\n```\n\n----------------------------------------\n\nTITLE: Configuring Link Fields in S2 Data Visualization\nDESCRIPTION: Demonstrates how to set up basic configuration for marking fields as links in an S2 pivot table, specifying which fields should be displayed with underline link styling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/link-jump.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type'],\n    values: ['price'],\n  },\n};\n\nconst s2Options = {\n  width: 600,\n  height: 600,\n  interaction: {\n    linkFields: ['city'],\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Defining LayoutHierarchy Function in JavaScript\nDESCRIPTION: Function signature for LayoutHierarchy that takes a spreadsheet instance and a node, returning a custom hierarchical structure. The function allows manipulation of the node hierarchy.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/layoutHierarchy.en.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nLayoutHierarchy = (spreadsheet: SpreadSheet, node: Node) => LayoutHierarchyReturnType;\n```\n\n----------------------------------------\n\nTITLE: Series Number Configuration Changes\nDESCRIPTION: Changes to series number configuration structure, consolidating options under seriesNumber object\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_23\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n- showSeriesNumber: true,\n- seriesNumberText: '序号'\n\n+ seriesNumber: {\n+   enable: true,\n+   text: '序号'\n+ }\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating frozen rows and columns configuration\nDESCRIPTION: Consolidates all frozen row and column configurations under a single 'frozen' object for both pivot and table sheets.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_19\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n-  frozenRowHeader: true,\n-  frozenFirstRow: true,\n-  frozenRowCount: 1;\n-  frozenColCount: 1;\n-  frozenTrailingRowCount: 1;\n-  frozenTrailingColCount: 1;\n\n+  frozen: {\n+    rowHeader: true,\n+    rowCount: 1;\n+    colCount: 1;\n+    trailingRowCount: 1;\n+    trailingColCount: 1;\n+  }\n}\n```\n\n----------------------------------------\n\nTITLE: Drill Down Information Interface\nDESCRIPTION: Interface definition for partial drill-down information, containing drill data and field specifications.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/store.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PartDrillDownInfo {\n  // 下钻数据\n  drillData: RawData[];\n  // 下钻字段\n  drillField: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding External Markdown Content in API Documentation\nDESCRIPTION: This snippet demonstrates how to embed external Markdown content into the current document. It references a file containing interaction-related documentation for the AntV S2 project.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/interaction/basic/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/interaction.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Migrating Tooltip Configuration Structure in S2 2.0\nDESCRIPTION: Shows the changes to tooltip configuration, replacing row/col/data/corner with rowCell/colCell/dataCell/cornerCell.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n-   row: {},\n-   col: {},\n-   data: {},\n-   corner: {},\n\n+   rowCell: {},\n+   colCell: {},\n+   dataCell: {},\n+   cornerCell: {},\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Individual Cells in AntV S2\nDESCRIPTION: Demonstrates how to manually trigger a redraw for a specific cell using its update method, allowing for custom cell rendering updates.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst targetCell = s2.facet.getRowCell()[0]\n\ntargetCell.update()\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Summaries\nDESCRIPTION: Demonstrates how to modify the statistical summaries displayed in tooltips\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_27\n\nLANGUAGE: tsx\nCODE:\n```\ninstance.showTooltip = (tooltipOptions) => {\n  const { data } = tooltipOptions;\n  const customSummaries = (data.summaries || []).map((item) => {\n    return { ...item, name: `${item.name} - Test` };\n  });\n  instance.tooltip.show({ ...tooltipOptions, data: { ...data, summaries: customSummaries } });\n};\n```\n\n----------------------------------------\n\nTITLE: Embedding a Markdown Document in HTML\nDESCRIPTION: An HTML embed tag that references a Markdown document related to comparison design. The path uses a module alias notation (@/) to reference the document at 'examples/case/comparison/design.zh.md'.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/case/comparison/design.en.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<embed src=\"@/examples/case/comparison/design.zh.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Defining SimpleData Type in TypeScript\nDESCRIPTION: Defines the SimpleData type as a union of primitive data types (string, number) or null/undefined values that can be displayed in cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/view-meta.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype SimpleData = string | number | null | undefined;\n```\n\n----------------------------------------\n\nTITLE: Renaming Internal Constants in TypeScript\nDESCRIPTION: Updates the import statements for renamed internal constants.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_34\n\nLANGUAGE: diff\nCODE:\n```\n- import { ROOT_ID, ID_SEPARATOR } from '@antv/s2'\n+ import { ROOT_NODE_ID, NODE_ID_SEPARATOR } from '@antv/s2'\n```\n\n----------------------------------------\n\nTITLE: Simplifying onUpdate Callback in S2\nDESCRIPTION: Shows how the onUpdate callback no longer requires returning render parameters.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_66\n\nLANGUAGE: diff\nCODE:\n```\n<SheetComponent\n  onUpdate={(renderOptions) => {\n-   return renderOptions\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Updating AdvancedSort Component Configuration in S2\nDESCRIPTION: Shows the property name change from 'sheet' to 'sheetInstance' in the AdvancedSort component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_47\n\nLANGUAGE: diff\nCODE:\n```\n- <AdvancedSort sheet={s2} />\n+ <AdvancedSort sheetInstance={s2} />\n```\n\n----------------------------------------\n\nTITLE: Defining Cell Callback Function Signature in JavaScript\nDESCRIPTION: The CellCallback function definition that allows custom cell rendering in AntV S2. It takes a node, spreadsheet instance, and optional parameters, returning a G.Group object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/cellCallBack.en.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nCellCallback = (node: Node, spreadsheet: SpreadSheet, ...restOptions: unknown[]) => G.Group;\n```\n\n----------------------------------------\n\nTITLE: Listening for Global Reset Events in S2\nDESCRIPTION: Shows how to listen for the GLOBAL_RESET event that fires when interactions are reset, such as when clicking outside the table or pressing the ESC key.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\ns2.on(S2Event.GLOBAL_RESET, () => {\n  console.log('重置')\n})\n```\n\n----------------------------------------\n\nTITLE: Manually Showing Tooltips with Custom Content in Core S2\nDESCRIPTION: Demonstrates how to manually trigger tooltip display with custom content in the core S2 library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst content = document.createElement('div')\ncontent.innerHTML = '我是自定义内容'\n\ns2.showTooltip({\n  position: {},\n  content\n})\n\ns2.showTooltip({\n  position: {},\n  content: `\n    <div>\n      <div>我是自定义内容</div>\n      <p>我也是是自定义内容</p>\n    </div>\n  `\n})\n```\n\n----------------------------------------\n\nTITLE: Defining BBox Type in TypeScript\nDESCRIPTION: Defines the BBox (Bounding Box) type which represents the box model for elements in S2. It includes position coordinates, minimum and maximum coordinates, and dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_25\n\nLANGUAGE: typescript\nCODE:\n```\ntype BBox = {\n  x: number;\n  y: number;\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n  width: number;\n  height: number;\n};\n```\n\n----------------------------------------\n\nTITLE: Updating DrillDown Component Configuration in S2\nDESCRIPTION: Shows property renaming from 'titleText' to 'title' and 'clearButtonText' to 'clearText' in the DrillDown component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_56\n\nLANGUAGE: diff\nCODE:\n```\n- <DrillDown titleText=\"Drill Down\" clearButtonText=\"Clear\" />\n+ <DrillDown title=\"Drill Down\" clearText=\"Clear\" />\n```\n\n----------------------------------------\n\nTITLE: Defining ScrollOffsetConfig Interface for S2 Grid in TypeScript\nDESCRIPTION: The ScrollOffsetConfig interface specifies configuration options for scroll behavior, including optional animation settings for row header offset, horizontal offset, and vertical offset. It also includes a flag to skip scroll events.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-facet.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ScrollOffsetConfig {\n  skipScrollEvent?: boolean;\n  rowHeaderOffsetX?: {\n    value: number | undefined;\n    animate?: boolean;\n  };\n  offsetX?: {\n    value: number | undefined;\n    animate?: boolean;\n  };\n  offsetY?: {\n    value: number | undefined;\n    animate?: boolean;\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Theme\nDESCRIPTION: Method to update only the theme scheme without changing other theme settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\n(theme: S2Theme) => void\n```\n\n----------------------------------------\n\nTITLE: Sorting by Row Totals in Ant S2\nDESCRIPTION: Example of sorting by row totals, using predefined aggregated data in the data source and the TOTAL_VALUE constant to reference total values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/basic.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TOTAL_VALUE, EXTRA_FIELD } from \"@antv/s2\";\n\nconst s2DataConfig = {\n  sortParams: [\n    {\n      // 对 type 中笔和纸的总计进行 降序 排序\n      sortFieldId: 'type',\n      sortMethod: 'DESC',\n      sortByMeasure: TOTAL_VALUE,\n      query: {\n        [EXTRA_FIELD]: 'price',\n      },\n    },\n  ],\n  // data 中带有排序使用的数据时，S2 会优先使用 data 返回的数据进行排序\n  data:[\n    {\n      type: \"笔\",\n      price: \"38\"\n    },\n    {\n      type: \"纸张\",\n      price: \"36\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Collapse All Nodes Configuration in TypeScript\nDESCRIPTION: Configuration to collapse all nodes in the tree structure using the collapseAll property.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-collapse-nodes.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      collapseAll: true,\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating customSVGIcons configuration\nDESCRIPTION: Updates the customSVGIcons configuration by renaming svg to src to maintain API consistency.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_14\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  customSVGIcons: [\n    {\n      name: 'CustomIcon',\n-     svg: 'https://gw.alipayobjects.com/zos/bmw-prod/f44eb1f5-7cea-45df-875e-76e825a6e0ab.svg',\n+     src: 'https://gw.alipayobjects.com/zos/bmw-prod/f44eb1f5-7cea-45df-875e-76e825a6e0ab.svg',\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining S2EventHandler Interface in TypeScript\nDESCRIPTION: Interface definition for S2EventHandler that handles generic events using EmitterType. Consists of a type property referencing EmitterType keys and a handler function from the corresponding EmitterType value.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/interaction.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface S2EventHandler {\n  type: keyof EmitterType;\n  handler: EmitterType[keyof EmitterType];\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing S2 PivotSheet with CSS Selectors\nDESCRIPTION: Examples of initializing S2 PivotSheet using various CSS selector formats. S2 supports any valid querySelector syntax for finding the container element.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.en.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst pivotSheet = new PivotSheet('#container', dataCfg, options);\nconst pivotSheet = new PivotSheet('.container', dataCfg, options);\nconst pivotSheet = new PivotSheet('#container > div', dataCfg, options);\nconst pivotSheet = new PivotSheet('#container > div[title=\"xx\"]', dataCfg, options);\n```\n\n----------------------------------------\n\nTITLE: Multi Line Markdown Frontmatter\nDESCRIPTION: Markdown frontmatter defining metadata for the Multi Line documentation page, including title, order and tag information.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/multi-line-text.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Multi Line\norder: 10\ntag: New\n---\n```\n\n----------------------------------------\n\nTITLE: Fixing Custom Column Header Sampling in TypeScript\nDESCRIPTION: Resolves an issue where custom column header sampling errors caused row corner headers not to display.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: TypeScript\nCODE:\n```\n**layout:** 修复自定义列头采样错误导致行角头不显示 close [#2117](https://github.com/antvis/S2/issues/2117) ([#2175](https://github.com/antvis/S2/issues/2175)) ([2266272](https://github.com/antvis/S2/commit/22662721739b45fbe5c00c1157ad00071d8f5f0d))\n```\n\n----------------------------------------\n\nTITLE: Embedding Custom Data Cell Callback Documentation in Markdown\nDESCRIPTION: This snippet embeds external markdown documentation for custom data cell callbacks into the current file. It references a file named 'dataCellCallback.zh.md' located in the '@/docs/common/custom/' directory.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-cell/API.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/custom/dataCellCallback.zh.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Migrating copyToClipboard Parameter Meaning in S2 2.0\nDESCRIPTION: Shows the change in the second parameter of copyToClipboard from meaning 'sync' to 'async'.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_10\n\nLANGUAGE: diff\nCODE:\n```\n- const data = copyToClipboard(data: string, sync: boolean)\n+ const data = copyToClipboard(data: Copyable | string, async: boolean)\n```\n\n----------------------------------------\n\nTITLE: Rendering Headers in S2 Pivot Table with TypeScript\nDESCRIPTION: Rendering process for row headers, column headers, and corner headers in S2 pivot tables. The code initializes header components with node data that contains positioning and dimensional information.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/layout/pivot.en.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nthis.rowHeader = new RowHeader({\n    width,\n    height,\n    data: rowNodes // rowNodes 中的节点有坐标和尺寸信息，调用 g2 的 <Group>RowHeader.add(<Group>RowCell)\n});\nthis.colHeader = new ColHeader({\n    width,\n    height,\n    data: colNodes // 同上\n});\nthis.cornerHeader = new CornerHeader({\n    data: cornerNodes,\n    width: cornerWidth,\n    height: cornerHeight,\n});\nthis.foregroundGroup.add([this.rowHeader, this.colHeader, this.cornerHeader]);\n```\n\n----------------------------------------\n\nTITLE: Example of CellData Object in JSON\nDESCRIPTION: Provides an example of a CellData object with various properties including raw data, extra fields, and metadata, showing the complete structure for cell data with processing information.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/view-meta.zh.md#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"extraField\": \"number\",\n  \"raw\": {\n    \"number\": 7789,\n    \"province\": \"浙江省\",\n    \"city\": \"杭州市\",\n    \"type\": \"家具\",\n    \"sub_type\": \"桌子\"\n  },\n  \"$$extra$$\": \"number\",\n  \"$$value$$\": 7789,\n  \"$$origin$$\": {\n    \"number\": 7789,\n    \"province\": \"浙江省\",\n    \"city\": \"杭州市\",\n    \"type\": \"家具\",\n    \"sub_type\": \"桌子\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Hierarchical Tree Structure in S2\nDESCRIPTION: This snippet illustrates how S2 builds a tree structure for row and column dimensions. It traverses dimension values to create a nested map structure that represents the hierarchy of the pivot table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/pivot.en.md#2025-04-22_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nlet currentMeta = this.rowPivotMeta; // 存储行树形结构 Map.\nfor (let i = 0; i < rowDimensionValues.length; i++) { // 遍历 ['浙江省', '绍兴市'];\n    if (isFirstCreate) {\n        currentMeta.set(rowDimensionValues[i], { // currentMeta = \n            level: currentMeta.size,\n            children: new Map(),\n        });\n    }\n    const meta = this.rowPivotMeta.get(value);\n    currentMeta = meta?.children; \n}\n```\n\n----------------------------------------\n\nTITLE: Sorting by Column Subtotals in Ant S2\nDESCRIPTION: Example of sorting row headers based on column subtotals, using the TOTAL_VALUE constant and configuring subtotal calculations in s2Options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/basic.en.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TOTAL_VALUE, EXTRA_FIELD } from \"@antv/s2\";\n\nconst s2DataConfig = {\n  sortParams: [\n    {\n      // province 依据（ province - 小计 ）&（ 总计 - price ）& 升序 排序\n      sortFieldId: 'province',\n      sortMethod: 'ASC',\n      sortByMeasure: TOTAL_VALUE,\n      query: {\n        [EXTRA_FIELD]: 'price',\n      },\n    }\n  ]\n}\n\nconst s2Options = {\n  totals: {\n    row: {\n      subTotalsDimensions: ['province'],\n      calcSubTotals: {\n        aggregation: 'SUM',\n      },\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Pagination Component with AntV S2\nDESCRIPTION: Example of using any pagination component with S2 after the removal of built-in pagination. This shows integration with Ant Design's Pagination component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_30\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Pagination } from 'antd';\n\nfunction App() {\n  return (\n    <SheetComponent options={s2Options}>\n      {({ pagination }) => (\n        // 结合任意分页器使用：如 antd 的 Pagination 组件\n        <Pagination\n          size=\"small\"\n          showTotal={(total) => `共计 ${total} 条`}\n          {...pagination}\n        />\n      )}\n    </SheetComponent>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Pivot Table Link Fields with Navigation\nDESCRIPTION: Comprehensive example of setting up link fields in a pivot table with a complete implementation including initialization, event handling, and navigation to external URLs.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/link-jump.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2'\n\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type'],\n    values: ['price'],\n  },\n};\n\nconst s2Options = {\n  width: 600,\n  height: 600,\n  interaction: {\n    linkFields: ['province', 'city', 'type', 'price'],\n  }\n};\n\nconst s2 = new PivotSheet(container, s2DataConfig, s2Options);\n\ns2.on(S2Event.GLOBAL_LINK_FIELD_JUMP, (data) => {\n  const { field, meta, record } = data;\n  const value = record?.[field];\n\n  // 拼装自己的跳转地址\n  location.href = `https://path/to/${field}=${value}}`;\n});\n\nawait s2.render();\n```\n\n----------------------------------------\n\nTITLE: Frozen Configuration Parameters Table\nDESCRIPTION: Markdown table defining the configuration parameters for frozen headers. Includes rowHeader boolean/number control, rowCount, colCount, and trailing counts for both rows and columns.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/frozen.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| parameter        | type      | required | Defaults | Functional description                                                     |\n| ---------------- | --------- | -------- | -------- | -------------------------------------------------------------------------- |\n| rowHeader        | `boolean` |          | `true`   | When the value is number, it identifies the maximum area where the line header is frozen, and the range of values ​​is (0, 1). 0 means that the line header is not frozen. <br/>When the value is boolean, true corresponds to freezing the maximum area is 0.5, false corresponds to 0. <br/> (only pivot mode works)                                     |\n| rowCount         | `number`  |          | `0`      | The number of frozen rows, counting from the top (schedules are valid)     |\n| colCount         | `number`  |          | `0`      | The number of frozen columns, counting from the left (schedules are valid) |\n| trailingRowCount | `number`  |          | `0`      | Number of frozen rows, counting from the bottom (valid for schedules)      |\n| trailingColCount | `number`  |          | `0`      | Number of frozen columns, counting from the right (schedules are valid)    |\n```\n\n----------------------------------------\n\nTITLE: Adding frontend totals calculation method\nDESCRIPTION: Feature that adds a frontend calculation method for totals in the visualization.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_33\n\nLANGUAGE: Markdown\nCODE:\n```\n**totals:** 增加前端 totals 计算方式 ([#1157](https://github.com/antvis/S2/issues/1157)) ([4dd635d](https://github.com/antvis/S2/commit/4dd635ddda9c4978567300586ef85ba7ad14ebed))\n```\n\n----------------------------------------\n\nTITLE: Showing Tooltip\nDESCRIPTION: Method to display a tooltip with specified options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n(showOptions: TooltipShowOptions) => void\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Menu in Tooltip Operations for S2-React\nDESCRIPTION: Demonstrates how to configure a custom menu with Ant Design Menu component for tooltip operations in S2-React.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_14\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Menu } from 'antd';\n\nconst s2Options = {\n  tooltip: {\n    operation: {\n      menu: {\n        render: (props) => <Menu {...props} />\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Removing S2DataConfig.totalData Configuration in TypeScript\nDESCRIPTION: Merges totalData with data, eliminating the need for separate totalData configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_23\n\nLANGUAGE: diff\nCODE:\n```\n{\n-  data: [...],\n-  totalData: [...],\n\n+  data: [...data, ...totalData],\n}\n```\n\n----------------------------------------\n\nTITLE: Contributing to S2 Project\nDESCRIPTION: Instructions for developers who want to contribute to S2, including steps to clone the repository, install dependencies, build, debug, and test the codebase.\nSOURCE: https://github.com/antvis/s2/blob/next/README.en-US.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:antvis/S2.git\n\ncd S2\n\npnpm install # or pnpm bootstrap\n\n# build all\npnpm build\n\n# debug s2-core\npnpm core:start\n\n# debug s2-react\npnpm react:playground\n\n# debug s2-vue\npnpm vue:playground\n\n# unit test\npnpm test\n\n# check the code style and the type definition\npnpm lint\n\n# start the website\npnpm site:start\n```\n\n----------------------------------------\n\nTITLE: ColCell Configuration Options\nDESCRIPTION: Specifies configuration options for column header cells including width, height, widthByField, heightByField and hideValue properties.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/style.en.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| parameter     | illustrate                                                                                                                                                                                                                                                                                                                                                                                                             | type                                  | Defaults | required |\n| ------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------- | -------- | -------- |\n| width         | Cell width, which can be dynamically set according to the current column header node (leaf nodes are valid)                                                                                                                                                                                                            | `number \\| (colNode: Node) => number` | 96       |          |\n| height        | Cell height, which can be dynamically set according to the current column header node (leaf nodes are valid)                                                                                                                                                                                                           | `number \\| (colNode: Node) => number` | 30       |          |\n| widthByField  | Set the width according to the measurement value (drag or preset width scene), `field` corresponds to the `field` or column header id in `s2DataConfig.fields.columns`                                                                                                                                                                              | `Record<string, number>`              | -        |          |\n| heightByField | Set the height according to the measurement value (drag or preset height scene), the `field` corresponds to the `field` or column header id in `s2DataConfig.fields.columns`                                                                                                                                                                     | `Record<string, number>`              | -        |          |\n| hideValue     | The default value hangs the column header, which will display the column header and the value at the same time, and hide the value to make it more beautiful. (that is, `s2DataConfig.fields.values` and it is only valid for a single value, and it is recommended to use [hidden column headers] for multiple values) | `boolean`                             | false    |          |\n```\n\n----------------------------------------\n\nTITLE: Embedding API Documentation in Markdown\nDESCRIPTION: This snippet uses the embed directive to include content from another Markdown file that contains API documentation for base-data-set in Chinese.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/analysis/get-data/API.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/basic-class/base-data-set.zh.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Migrating Tooltip API Configuration in S2 2.0\nDESCRIPTION: Shows the changes to property names when configuring tooltip display via API.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_7\n\nLANGUAGE: diff\nCODE:\n```\ns2.showTooltip({\n  options: {\n-   enterable: true,\n-   showSingleTips: true,\n+   onlyShowCellText: true,\n-   onlyMenu: true,\n+   onlyShowOperator: true\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Example of Data Object in JSON\nDESCRIPTION: Provides a simple example of a Data object with a single city property, showing the basic structure of cell data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/view-meta.zh.md#2025-04-22_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"city\": \"杭州市\"\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating Cell Configuration Structure in S2 2.0\nDESCRIPTION: Shows the changes to the style configuration structure, replacing rowCfg/colCfg/cellCfg with rowCell/colCell/dataCell.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  style: {\n-   rowCfg: {},\n-   colCfg: {},\n-   cellCfg: {},\n\n+   rowCell: {},\n+   colCell: {},\n+   dataCell: {},\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Icon Position in S2 Table Header (TypeScript)\nDESCRIPTION: This snippet shows how to customize the position of an icon in the S2 table header, placing it to the left of the text instead of the default right position.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-icon.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  headerActionIcons: [\n    {\n      icons: [{ name: 'SortDown', position: 'left' }],\n      belongsCell: 'colCell',\n    },\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Conditional Menu Item Visibility in S2 Tooltip\nDESCRIPTION: Demonstrates how to conditionally show/hide menu items based on cell information in S2 tooltip operations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    operation: {\n      menu: {\n        items: [\n          {\n            key: 'custom-a',\n            label: '操作 1',\n            icon: 'Trend',\n            visible: false,\n          },\n          {\n            key: 'custom-b',\n            label: '操作 2',\n            icon: 'EyeOutlined',\n            visible: (cell) => {\n              // 根据单元格信息动态显示，如：叶子节点不显示\n              const meta = cell.getMeta()\n              return meta.isLeaf\n            },\n          },\n        ],\n      }\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Disabling Brush Selection in S2\nDESCRIPTION: Controls the brush selection (circle highlight) feature that allows selecting multiple cells by dragging. This is enabled by default for data cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    brushSelection: false // 默认 true\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Replacing Edit Table Input Component in S2\nDESCRIPTION: Shows how the native textarea element has been replaced with antd's Input.TextArea component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_58\n\nLANGUAGE: diff\nCODE:\n```\n+ <Input.TextArea />\n- <textarea />\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Chart Examples Page\nDESCRIPTION: This YAML front matter block sets up metadata for a page showcasing chart examples in the AntV S2 project. It defines the page title, ordering, icon, and a redirect from a Chinese language path.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/gallery/index.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 图表示例\norder: -1\nicon: other\nredirect_from:\n  - /zh/examples\n---\n```\n\n----------------------------------------\n\nTITLE: Fixing Tooltip Closing Behavior in TypeScript\nDESCRIPTION: Addresses an issue where tooltips closed unexpectedly when clicking on their content under specific configurations.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: TypeScript\nCODE:\n```\n**tooltip:** 修复特定配置下点击 tooltip 内容后 tooltip 关闭 close [#2170](https://github.com/antvis/S2/issues/2170) ([#2172](https://github.com/antvis/S2/issues/2172)) ([6219e57](https://github.com/antvis/S2/commit/6219e579364cfb7ac3a8b3db4ae01c5672d7f2d4))\n```\n\n----------------------------------------\n\nTITLE: Setting up the HTML container for S2 Editable Table\nDESCRIPTION: Basic HTML markup that creates a container div where the S2 editable table will be rendered.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/editable-mode.en.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\"></div>\n```\n\n----------------------------------------\n\nTITLE: Defining BBox Type in TypeScript\nDESCRIPTION: Defines the BBox type representing a bounding box with properties for position, dimensions, and extrema. This type is used for layout calculations in the S2 table component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ntype BBox = {\n  x: number;\n  y: number;\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n  width: number;\n  height: number;\n};\n```\n\n----------------------------------------\n\nTITLE: Defining CellType Enum in TypeScript\nDESCRIPTION: This code defines an enumeration of different cell types used in the S2 project.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-cell.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport enum CellType {\n  DATA_CELL = 'dataCell',\n  ROW_CELL = 'rowCell',\n  COL_CELL = 'colCell',\n  CORNER_CELL = 'cornerCell',\n  MERGED_CELL = 'mergedCell',\n  SERIES_NUMBER_CELL = 'seriesNumberCell',\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LayoutSeriesNumberNodes Function in JavaScript\nDESCRIPTION: Function that generates custom series number nodes based on row hierarchy. It takes the row hierarchy structure, the width for series numbers, and the spreadsheet instance as parameters and returns an array of Node objects.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/layoutSeriesNumberNodes.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nLayoutSeriesNumberNodes = (rowsHierarchy: Hierarchy, seriesNumberWidth: number, spreadsheet: SpreadSheet) => Node[];\n```\n\n----------------------------------------\n\nTITLE: Customizing Header Text in Tree Mode with Meta Configuration\nDESCRIPTION: Configuration for customizing cell text in tree mode using meta configuration. The field property corresponds to first-level nodes and values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst meta = [\n  {\n    field: 'a-1',\n    name: '层级 1',\n  },\n  {\n    field: 'a-2',\n    name: '层级 2',\n  },\n]\n```\n\n----------------------------------------\n\nTITLE: Hiding Column Headers in Pivot Mode\nDESCRIPTION: Configuration for hiding column headers in pivot mode by setting height to zero. You can hide all column headers or specific dimension headers.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    colCell: {\n      height: 0\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Linear Gradient Fill in S2\nDESCRIPTION: Example of using linear gradient fill with a 0-degree angle, starting with color #95F0FF and ending with #3A9DBF.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/graphic.en.md#2025-04-22_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\n// 使用渐变色填充，渐变角度为 0，渐变的起始点颜色 #95F0FF，结束的渐变色为 #3A9DBF\nfill: `l(0) 0:#95F0FF 1:#3A9DBF`,\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Display Method in React Component\nDESCRIPTION: This snippet shows how to override the default tooltip display method in a React component. It demonstrates how to customize the tooltip options before showing the tooltip.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_26\n\nLANGUAGE: tsx\nCODE:\n```\n<SheetComponent\n  onMounted={ (instance) => {\n    instance.showTooltip = (tooltipOptions) => {\n      // 可自定义这里的 tooltipOptions\n      instance.tooltip.show(tooltipOptions);\n    };\n  } }\n  ...\n/>;\n```\n\n----------------------------------------\n\nTITLE: Configuring Pagination Options in AntV S2\nDESCRIPTION: Example configuration for implementing pagination in S2 visualization. Sets the page size to 4 items per page and initializes the current page to 1.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/pagination.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 480,\n  pagination: {\n    pageSize: 4,\n    current: 1,\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Custom DOM Content for Tooltips in Core S2\nDESCRIPTION: Demonstrates how to create custom tooltip content using DOM elements in the core S2 library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst content = document.createElement('div')\ncontent.innerHTML = '我是自定义内容'\n\nconst s2Options = {\n  tooltip: {\n    content,\n    // content: '<div>我是字符串</div>'\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Installing Multiple Ant Design Versions\nDESCRIPTION: Package installation configuration for supporting both Ant Design v4 and v5 in the same project, allowing compatibility with @antv/s2-react-components.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_35\n\nLANGUAGE: json\nCODE:\n```\n// $ npm install --save antd-v5@npm:antd@5\n{\n  \"antd\": \"4.x\",\n  \"antd-v5\": \"npm:antd@5\"\n}\n```\n\n----------------------------------------\n\nTITLE: Drawing Images in Custom Cells Using G in AntV S2\nDESCRIPTION: Shows two methods for drawing images in custom cells: using G's Image shape with a fixed size, and creating an HTMLImageElement for unknown image sizes with caching to prevent flickering during scrolling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Image as GImage } from '@antv/g';\n\nclass CustomColCell extends ColCell {\n  drawBackgroundShape() {\n    new GImage({\n      style: {\n        x: 200,\n        y: 100,\n        width: 200,\n        height: 200,\n        src: 'https://gw.alipayobjects.com/zos/antfincdn/og1XQOMyyj/1e3a8de1-3b42-405d-9f82-f92cb1c10413.png',\n      },\n    })\n  }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst ImageCache = new Map<string, HTMLImageElement>();\n\nclass CustomColCell extends ColCell {\n  drawBackgroundShape() {\n    const url = 'https://gw.alipayobjects.com/zos/antfincdn/og1XQOMyyj/1e3a8de1-3b42-405d-9f82-f92cb1c10413.png'\n\n    const imgCache = ImageCache.get(url)\n    if (imgCache) {\n      this.appendChild(\n        new GImage({\n          style: {\n            x: 200,\n            y: 100,\n            width: imgCache.width,\n            height: imgCache.height,\n            src: imgCache\n          },\n        })\n      )\n      return;\n    }\n\n    const img = new Image();\n    img.src = url\n    img.crossOrigin = 'Anonymous';\n    img.onload = () => {\n      // 图片加载成功后创建\n      this.appendChild(\n        new GImage({\n          style: {\n            x: 200,\n            y: 100,\n            width: img.width,\n            height: img.height,\n            src: img\n          },\n        })\n      )\n    };\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing BaseEvent Abstract Class\nDESCRIPTION: Abstract class definition for base event handling in S2 Grid, requiring implementation of bindEvents method.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/interaction.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport abstract class BaseEvent {\n  public spreadsheet: SpreadSheet;\n\n  constructor(spreadsheet: SpreadSheet) {\n    this.spreadsheet = spreadsheet;\n    this.bindEvents();\n  }\n\n  public abstract bindEvents(): void;\n}\n```\n\n----------------------------------------\n\nTITLE: Header Action Icon Type Definition\nDESCRIPTION: Configuration options for registering custom operation icons in table headers, including icon names, cell types, display conditions, and event handlers.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/header-action-icon.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| parameter        | illustrate                                                                                                                                                                | type                                                      | Defaults                                    | required | value                                                                              | Version                                                                                     |\n| ---------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------- | ------------------------------------------- | -------- | ---------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------- |\n| iconNames        | The name of the registered icon, or the name of the icon registered by the user through customSVGIcons                                                    | `string[]`                                                |                                             | ✓        |                                                                                    |                                                                                             |\n| belongs to Cell  | The name of the cell that needs to add an operation icon                                                                                                  | `string[]`                                                |                                             | ✓        | Corner header: 'cornerCell';<br>column header: 'colCell';<br>row header: 'rowCell' |                                                                                             |\n| defaultHide      | Control whether the icon is displayed only when hover                                                                                                     | \\`boolean                                                 | (meta: Node, iconName: string) => boolean\\` | false    |                                                                                    | true                                                                                        |\n| displayCondition | Display filter conditions, user-defined which levels or cells need to display icons through this callback function. All icons that return true will be shown to the user. | `(mete: Node, iconName: string) => boolean;`              |                                             |          |                                                                                    | `1.26.0` returns the `iconName` and presses a single icon to control the display and hiding |\n| onClick          | Execution function after icon click                                                                                                                       | `(headerIconClickParams: HeaderIconClickParams) => void;` |                                             |          |                                                                                    | `1.26.0`                                                                                    |\n| onHover          | The execution function after the icon hover starts and ends                                                                                               | `(headerIconHoverParams: HeaderIconHoverParams) => void;` |                                             |          |                                                                                    | `1.26.0`                                                                                    |\n```\n\n----------------------------------------\n\nTITLE: Using React Components as Menu Item Content in S2-React\nDESCRIPTION: Demonstrates how to use React components for menu item labels and icons in S2-React tooltip operations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_18\n\nLANGUAGE: tsx\nCODE:\n```\nimport { StarOutlined } from '@ant-design/icons';\n\nconst s2Options = {\n  tooltip: {\n    operation: {\n      menu: {\n        items: [\n          {\n            key: 'custom-a',\n            label: <div>操作 1</div>,\n            icon: <StarOutlined />,\n          }\n        ]\n      }\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Expandable Fields in JavaScript\nDESCRIPTION: Demonstrates how to set up expandable fields with custom expand text, useful for fields with associated sub-items.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/switcher.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst field = {\n  expandable: true,\n  expandText: \"展开同环比\", // 默认：展开子项\n  items: [\n    /*...*/\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Adding Mini Bar Chart Support\nDESCRIPTION: Feature that enables drawing mini bar charts in cells for data visualization.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n* 支持 绘制 mini 柱状图 ([#1505](https://github.com/antvis/S2/issues/1505)) ([24a6ca6](https://github.com/antvis/S2/commit/24a6ca643e3b1154e4093c15216b218ef02cf3df))\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Container Setup for TableSheet\nDESCRIPTION: HTML structure that provides a container for initializing a TableSheet component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/table-mode.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\" />\n```\n\n----------------------------------------\n\nTITLE: Custom Container Vue Component Adaptation\nDESCRIPTION: Example of using a custom container for adaptation in the S2 Vue component with script and template sections.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.zh.md#2025-04-22_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\n<script lang=\"ts\">\nconst adaptive = {\n  width: true,\n  height: true,\n  getContainer: () => document.getElementById('containerId'),\n};\n</script>\n\n<template>\n  <div\n    id=\"containerId\"\n    style=\"width:600px;height:400px\"\n  >\n    <SheetComponent\n      :dataCfg=\"your-dataCfg\"\n      :options=\"your-options\"\n      :adaptive=\"adaptive\"\n    />\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Getting Column Nodes\nDESCRIPTION: Method to get column header nodes at a specified level.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\n(level: number) => Node[]\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Pagination with SheetComponent in React\nDESCRIPTION: Demonstrates how to implement pagination using S2's internal pagination logic with any pagination component such as antd's Pagination.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_45\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Pagination } from 'antd';\n\nfunction App() {\n  return (\n    <SheetComponent options={s2Options}>\n      {({ pagination }) => (\n        // Use with any paginator: like antd's Pagination component\n        <Pagination\n          size=\"small\"\n          showTotal={(total) => `Total ${total} items`}\n          {...pagination}\n        />\n      )}\n    </SheetComponent>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Circular Gradient Fill in S2\nDESCRIPTION: Example of using radial gradient fill with the center point at (0.5, 0.5) and radius of 1, starting with white color and transitioning to blue at the 50% point.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/graphic.en.md#2025-04-22_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\n// 使用渐变色填充，渐变起始圆的圆心坐标为被填充物体的包围盒中心点，半径为（包围盒对角线长度 / 2) 的 1 倍，渐变的起始点颜色 #ffffff，结束的渐变色为 #1890ff\nfill: 'r(0.5, 0.5, 1) 0:#ffffff 0.5:#1890ff';\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Container Mount Node in S2\nDESCRIPTION: Shows how to customize the DOM element where the tooltip container is mounted in S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    getContainer: () => document.querySelector('.container')\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating row collapse event names\nDESCRIPTION: Updates the row collapse event names to be more consistent with the new cell naming convention and consolidates them under RowCell events.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_18\n\nLANGUAGE: diff\nCODE:\n```\n- S2Event.LAYOUT_TREE_ROWS_COLLAPSE_ALL\n+ S2Event.ROW_CELL_ALL_COLLAPSED\n\n- S2Event.LAYOUT_COLLAPSE_ROWS\n- S2Event.LAYOUT_AFTER_COLLAPSE_ROWS\n+ S2Event.ROW_CELL_COLLAPSED\n```\n\n----------------------------------------\n\nTITLE: Installing and Running S2 Website Development Environment\nDESCRIPTION: Commands for installing dependencies and starting the development server for the S2 website.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# 切到根目录安装\npnpm install\n\n# 调试\npnpm start\n```\n\n----------------------------------------\n\nTITLE: SheetComponent Pagination API Declaration in Vue\nDESCRIPTION: Example of the SheetComponent API for showing pagination in Vue implementation. Demonstrates the basic syntax for enabling pagination.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/pagination.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<SheetComponent showPagination />\n```\n\n----------------------------------------\n\nTITLE: Value Range Types Definition\nDESCRIPTION: Type definitions for value ranges used in conditional formatting, including minimum and maximum value specifications.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/store.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ValueRange {\n  minValue?: number;\n  maxValue?: number;\n}\n\nexport type ValueRanges = Record<string, ValueRange>;\n```\n\n----------------------------------------\n\nTITLE: Migrating Header Action Icons Configuration in S2 2.0\nDESCRIPTION: Shows the changes to header action icons configuration, replacing iconNames/action with icons/onClick/onHover.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_12\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  headerActionIcons: [\n    {\n-      iconNames: ['SortDown'],\n-      action: () => {}\n\n+      icons: ['SortDown'],\n+      onClick: () => {}\n+      onHover: () => {}\n    },\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MergedCellInfo Interface\nDESCRIPTION: Interface for merged cell information including column index, row index, and text display flag.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/interaction.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MergedCellInfo {\n  colIndex?: number;\n  rowIndex?: number;\n  showText?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Node Class Structure in TypeScript for S2 Pivot Table\nDESCRIPTION: Basic structure of the Node class used for rendering row headers, column headers, and corner header cells in S2 pivot tables. Each node contains positional properties, dimensions, and metadata.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/layout/pivot.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Node {\n    x, y, width, height, label, level, ...\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Graphic Style Attributes in S2\nDESCRIPTION: Configuration table showing graphic style attributes including fill, stroke, opacity, shadow properties and cursor settings that can be applied to shapes in S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/graphic.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| attribute name | type              | Functional description                                                                                                                                         |\n| -------------- | ----------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| fill           | `string`          | The fill color of the graphics background supports \\[gradient color configuration] (#configure gradient color), [texture configuration](#%E9%85%8D%E7%BD%AE%E7%BA%B9%E7%90%86) |\n| fill Opacity   | `number`          | Fill transparency of the graphic background                                                                                                                                    |\n| stroke         | `string`          | Graphic stroke, support \\[gradient color configuration]\\(#Configure gradient color), [texture configuration](#%E9%85%8D%E7%BD%AE%E7%BA%B9%E7%90%86)                            |\n| lineWidth      | `number`          | Shape stroke width                                                                                                                                                             |\n| lineDash       | `[number,number]` | The dotted line configuration of the graphic stroke, the first value is the length of each segment of the dotted line, and the second value is the distance between segments   |\n| lineOpacity    | `number`          | graphic stroke stroke transparency                                                                                                                                             |\n| opacity        | `number`          | overall transparency of the graph                                                                                                                                              |\n| shadowColor    | `string`          | Graphic shadow color                                                                                                                                                           |\n| shadowBlur     | `number`          | Gaussian blur factor for figure shadows                                                                                                                                        |\n| shadowOffsetX  | `number`          | Set the horizontal distance of the shadow from the shape                                                                                                                       |\n| shadowOffsetY  | `number`          | Sets the vertical distance of the shadow from the shape                                                                                                                        |\n| cursor         | `string`          | Mouse style. [mouse style with css](https://developer.mozilla.org/zh-CN/docs/Web/CSS/cursor)                                                                                   |\n```\n\n----------------------------------------\n\nTITLE: Customizing Cell Background Color in S2 Table with TypeScript\nDESCRIPTION: Shows how to customize the background color of row cells in an S2 table by modifying the rowCell.cell.backgroundColor property in the theme configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/theme.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ns2.setTheme({\n  rowCell: {\n    cell: {\n      backgroundColor: '#dcdcdc',\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Tooltip Hints\nDESCRIPTION: Shows how to add custom hint messages to the tooltip display\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_26\n\nLANGUAGE: tsx\nCODE:\n```\ninstance.showTooltip = (tooltipOptions) => {\n  const { data } = tooltipOptions;\n  const tips = 'Note: This is a note';\n  instance.tooltip.show({ ...tooltipOptions, data: { ...data, tips } });\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Point Interface in TypeScript\nDESCRIPTION: This code defines a Point interface representing a 2D coordinate with x and y properties.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-cell.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Point {\n  x: number,\n  y: number\n}\n```\n\n----------------------------------------\n\nTITLE: Registering AntV/G Plugins and Configuration\nDESCRIPTION: Demonstrates how to register plugins and configure the AntV/G rendering engine used by S2, including setting rendering options and adding accessibility plugins.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Plugin as PluginA11y } from '@antv/g-plugin-a11y';\n\nconst s2Options = {\n  transformCanvasConfig(renderer) {\n    // 修改配置\n    renderer.setConfig({\n      enableCulling: true,\n      enableDirtyCheck: true,\n    });\n    // 注册插件\n    renderer.registerPlugin(\n      new PluginA11y({\n        enableExtractingText: true,\n      }),\n    );\n\n    console.log('当前已注册插件：', renderer.getPlugins(), renderer.getConfig());\n\n    // 透传 G 的初始化参数：https://g.antv.antgroup.com/api/canvas/options\n    return {\n      devicePixelRatio: 2,\n      dblClickSpeed: 500,\n      cursor: 'crosshair',\n    };\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LayoutHierarchy Function in JavaScript\nDESCRIPTION: This snippet defines the LayoutHierarchy function, which takes a SpreadSheet instance and a Node as parameters. It is used to customize the hierarchy structure in S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/layoutHierarchy.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nLayoutHierarchy = (spreadsheet: SpreadSheet, node: Node) => LayoutHierarchyReturnType;\n```\n\n----------------------------------------\n\nTITLE: Forcing React Tooltip Content Update\nDESCRIPTION: Shows how to force re-render a React component in an S2 tooltip when manually showing tooltips with updated content.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\ns2.showTooltip({\n  content: <YourComponent props={\"A\"}/>\n})\n\ns2.showTooltip({\n  content: <YourComponent props={\"B\"} />\n  options: {\n    forceRender: true\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Getting Cell from Event in S2 Visualization in TypeScript\nDESCRIPTION: Demonstrates how to retrieve the cell corresponding to an event target in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_12\n\nLANGUAGE: ts\nCODE:\n```\ns2.getCell(event.target)\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for Pagination Component\nDESCRIPTION: This snippet defines the frontmatter for the pagination component documentation page. It specifies the title of the component and its order in the documentation structure.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/react-component/pagination/index.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: 分页组件\norder: 0\n---\n```\n\n----------------------------------------\n\nTITLE: Manually Adjusting Chart Size for CSS Scaling\nDESCRIPTION: Code to manually adjust the S2 chart size based on a scaling factor to maintain proper alignment when a parent element uses transform scaling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst scale = 0.8\ns2.changeSheetSize(width * scale, height * scale)\nawait s2.render(false)\n```\n\n----------------------------------------\n\nTITLE: Defining Data Type in TypeScript\nDESCRIPTION: Defines the Data type as an intersection of RawData and ExtraData, representing the complete data structure for a cell in the spreadsheet.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/view-meta.zh.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ntype Data = RawData & ExtraData;\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Position in S2\nDESCRIPTION: Shows how to customize the tooltip display position by modifying x and y coordinates\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_24\n\nLANGUAGE: tsx\nCODE:\n```\ninstance.showTooltip = (tooltipOptions) => {\n  const { position } = tooltipOptions;\n  instance.tooltip.show({ ...tooltipOptions, position: { x: position.x + 1, y: position.y + 1 } });\n};\n```\n\n----------------------------------------\n\nTITLE: Enhanced text field condition mapping\nDESCRIPTION: Shows how text field conditions now support additional text styling options like fontSize, opacity, and textAlign to match the text theme configuration capabilities.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_22\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  conditions: {\n    text: [\n      {\n        field: 'city',\n        mapping() {\n          return {\n            fill: '#DB6BCF',\n+           fontSize: 16,\n+           opacity: 0.8,\n+           textAlign: 'right',\n          };\n        },\n      },\n    ]\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Basic Layout Documentation\nDESCRIPTION: YAML frontmatter block that defines metadata for a documentation page, including the title 'Basic Layout' and setting the order to 0.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/basic/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Basic Layout\norder: 0\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring G Canvas with transformCanvasConfig in S2 2.0\nDESCRIPTION: Shows how to configure G Canvas in S2 2.0 using the new transformCanvasConfig function which replaces direct configuration properties like devicePixelRatio.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nconst s2Options = {\n  transformCanvasConfig(renderer) {\n    renderer.setConfig({ enableDirtyCheck: true })\n    renderer.registerPlugin(new PluginA11y({ enableExtractingText: true }));\n\n    return {\n      devicePixelRatio: 2\n    };\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InteractionName Enum in TypeScript\nDESCRIPTION: Defines an enum for various interaction names in the S2 component, covering different types of cell clicks, selections, and other interactions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/interaction.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nenum InteractionName {\n  CORNER_CELL_CLICK = 'cornerCellClick',\n  DATA_CELL_CLICK = 'dataCellClick',\n  ROW_CELL_CLICK = 'rowCellClick',\n  COL_CELL_CLICK = 'colCellClick',\n  MERGED_CELLS_CLICK = 'mergedCellsClick',\n  ROW_COLUMN_CLICK = 'rowColumnClick',\n  HEADER_CELL_LINK_CLICK = 'headerCellLinkClick',\n  HOVER = 'hover',\n  DATA_CELL_BRUSH_SELECTION = 'dataCellBrushSelection',\n  ROW_CELL_BRUSH_SELECTION = 'rowCellBrushSelection',\n  COL_CELL_BRUSH_SELECTION = 'colCellBrushSelection',\n  COL_ROW_RESIZE = 'rowColResize',\n  DATA_CELL_MULTI_SELECTION = 'dataCellMultiSelection',\n  ROW_CELL_MULTI_SELECTION = 'rowCellMultiSelection',\n  COL_CELL_MULTI_SELECTION = 'colCellMultiSelection',\n  RANGE_SELECTION = 'rangeSelection',\n  SELECTED_CELL_MOVE = 'selectedCellMove',\n  GLOBAL_RESET = 'globalReset',\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring ColCell in AntV S2\nDESCRIPTION: Defines the configuration options for column header cells in an AntV S2 table, including width, height, and field-based dimension settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/style.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| 参数 | 说明 | 类型 | 默认值 | 必选  |\n| --- | --- | --- | --- | ---  |\n| width |   单元格宽度，可根据当前列头节点动态设置 （叶子节点有效） | `number \\| (colNode: Node) => number` | 96 |  |\n| height |  单元格高度，可根据当前列头节点动态设置 （叶子节点有效） | `number \\| (colNode: Node) => number` | 30 |  |\n| widthByField | 根据度量值设置宽度（拖拽或者预设宽度场景）, `field` 对应 `s2DataConfig.fields.columns` 中的 `field` 或 列头 id （优先级大于 `width`) [查看详情](/manual/advanced/custom/cell-size#%E8%B0%83%E6%95%B4%E8%A1%8C%E5%A4%B4%E5%8D%95%E5%85%83%E6%A0%BC%E5%AE%BD%E9%AB%98) | `Record<string, number>`   | - |  |\n| heightByField | 根据度量值设置高度（拖拽或者预设高度场景）, `field` 对应 `s2DataConfig.fields.columns` 中的 `field` 或 列头 id （优先级大于 `height`) [查看详情](/manual/advanced/custom/cell-size#%E8%B0%83%E6%95%B4%E8%A1%8C%E5%A4%B4%E5%8D%95%E5%85%83%E6%A0%BC%E5%AE%BD%E9%AB%98) | `Record<string, number>`   | - |  |\n| hideValue | 默认数值挂列头，会同时显示列头和数值，隐藏数值，使其更美观。（即 `s2DataConfig.fields.values` 且仅在单数值时有效，多数值时推荐使用 [隐藏列头](https://s2.antv.vision/manual/advanced/interaction/hide-columns#2-%E9%80%8F%E8%A7%86%E8%A1%A8)) | `boolean` | false |  |\n```\n\n----------------------------------------\n\nTITLE: Setting Minimum Draggable Dimensions in S2\nDESCRIPTION: Configuration for setting the minimum width and height constraints when resizing cells in S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/resize.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    resize: {\n      // 单元格可拖拽最小宽度\n      minCellWidth: 40,\n      // 单元格可拖拽最小高度\n      minCellHeight: 20\n    }\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing DPR Change Detection for S2 Canvas Rendering\nDESCRIPTION: This code demonstrates how to use matchMedia to listen for DPR changes and update the canvas size accordingly for high-definition rendering.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/hd-adapter.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst { width, height } = s2Options\nconst devicePixelRatioMedia = window.matchMedia(\n  `(resolution: ${window.devicePixelRatio}dppx)`,\n);\n\ndevicePixelRatioMedia.addEventListener('change', renderByDevicePixelRatio)\n\nconst renderByDevicePixelRatio = (ratio = window.devicePixelRatio) => {\n  const newWidth = Math.floor(width * ratio);\n  const newHeight = Math.floor(height * ratio);\n\n  // 内部的更新容器大小方法\n  changeSheetSize(newWidth, newHeight);\n};\n```\n\n----------------------------------------\n\nTITLE: Defining ChangeCellOptions Interface\nDESCRIPTION: Interface for cell change options specifying target cell and multi-selection flag.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/interaction.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ChangeCellOptions {\n  cell: S2CellType<ViewMeta>; // 目标单元格\n  isMultiSelection?: boolean; // 是否是多选\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Loading State in S2React Component\nDESCRIPTION: New approach for loading state implementation after removal of built-in Spin component. This shows how to combine AntV S2 with Ant Design's Spin component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_31\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Spin } from 'antd'\n\nfunction App() {\n  const [loading, setLoading] = React.useState(false)\n\n  return (\n    <Spin spinning={loading}>\n      <SheetComponent onLoading={setLoading} />\n    </Spin>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Grid Hierarchy Display Mode for Row Headers\nDESCRIPTION: Shows how to configure row headers to display in grid (tiled) mode using the hierarchyType option. This affects how the row dimensions are visually presented.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/base-concept.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'grid'\n}\n```\n\n----------------------------------------\n\nTITLE: S2 Container HTML\nDESCRIPTION: HTML container element for rendering the S2 table\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/README.en-US.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\" />\n```\n\n----------------------------------------\n\nTITLE: Documenting Global Events in AntV S2 (Markdown)\nDESCRIPTION: This snippet lists global events in the AntV S2 library, including keyboard interactions, mouse events, cell selection, hover, reset, link jumps, icon interactions, and scrolling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-event.en.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### global\n\n| name                      | event name                         | describe                                                                                    |\n|---------------------------| ---------------------------------- | ------------------------------------------------------------------------------------------- |\n| keyboard press            | `S2Event.GLOBAL_KEYBOARD_DOWN`     | keyboard press                                                                              |\n| keyboard release          | `S2Event.GLOBAL_KEYBOARD_UP`       | keyboard release                                                                            |\n| copy                      | `S2Event.GLOBAL_COPIED`            | Copy selected cells                                                                         |\n| mouse release             | `S2Event.GLOBAL_MOUSE_UP`          | Chart area mouse release                                                                    |\n| click                     | `S2Event.GLOBAL_CLICK`             | Chart area click                                                                            |\n| Image/Video Preview click | `S2Event.GLOBAL_PREVIEW_CLICK`             | Image/Video Preview click                                                                            |\n| right click               | `S2Event.GLOBAL_CONTEXT_MENU`      | Right click on the chart area                                                               |\n| selected                  | `S2Event.GLOBAL_SELECTED`          | When selecting a cell, such as: brush selection, multiple selection, single selection       |\n| hover                     | `S2Event.GLOBAL_HOVER`             | mouse over cell                                                                             |\n| reset                     | `S2Event.GLOBAL_RESET`             | When clicking on an empty space, pressing the Esc key resets the interaction style          |\n| link jump                 | `S2Event.GLOBAL_LINK_FIELD_JUMP`   | When clicked row column header is edited as text of link field                              |\n| icon click                | `S2Event.GLOBAL_ACTION_ICON_CLICK` | When the operation icon on the right side of the cell is clicked, for example: sort icon    |\n| icon hover                | `S2Event.GLOBAL_ACTION_ICON_HOVER` | When hovering over the operation icon on the right side of the cell, for example: sort icon |\n| scroll                    | `S2Event.GLOBAL_SCROLL`            | Table scrolling (with values and row header cells)                                          |\n```\n\n----------------------------------------\n\nTITLE: Getting Row Leaf Nodes\nDESCRIPTION: Method to get the leaf nodes from the row header.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\n() => Node[]\n```\n\n----------------------------------------\n\nTITLE: Adding Row/Column Resize Range Controls\nDESCRIPTION: Interaction enhancement that allows controlling the range of drag operations when resizing rows and columns.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n* **interaction:** 行列宽高支持控制拖拽范围 ([#1583](https://github.com/antvis/S2/issues/1583)) ([1d51272](https://github.com/antvis/S2/commit/1d51272ee339f2c31b6236e16406c1b52f57a3b9))\n```\n\n----------------------------------------\n\nTITLE: Fixing Row Header Scroll Selection Range in TypeScript\nDESCRIPTION: Corrects an error in determining the scroll selection range for row headers.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: TypeScript\nCODE:\n```\n**interaction:** 修复行头滚动刷选范围判断错误 ([#2101](https://github.com/antvis/S2/issues/2101)) ([8e38fb0](https://github.com/antvis/S2/commit/8e38fb0df6123360d2bd835cf80bcf72898a80b9))\n```\n\n----------------------------------------\n\nTITLE: Resetting S2 Data Configuration\nDESCRIPTION: Method to completely reset the S2 data configuration, replacing existing data settings. This uses the new data config directly without merging with previous settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\npivotSheet.setDataCfg({ ... }, true)\npivotSheet.render(true) // 重新渲染，且更新数据\n```\n\n----------------------------------------\n\nTITLE: Defining Frontmatter in Markdown\nDESCRIPTION: This snippet defines the frontmatter for a markdown file, specifying the title as 'API' and setting the order to 11.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-shape-and-chart/API.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: API\norder: 11\n---\n```\n\n----------------------------------------\n\nTITLE: Layout Result Structure Changes\nDESCRIPTION: Updates to layout result interface adding cornerNodes and seriesNumberNodes\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_25\n\nLANGUAGE: diff\nCODE:\n```\nexport interface LayoutResult {\n  colNodes: Node[];\n  colLeafNodes: Node[];\n  colsHierarchy: Hierarchy;\n  rowNodes: Node[];\n  rowsHierarchy: Hierarchy;\n  rowLeafNodes: Node[];\n- getCellMeta: (rowIndex: number, colIndex: number) => ViewMeta\n+ seriesNumberNodes?: Node[];\n+ cornerNodes?: Node[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Point Interface in TypeScript\nDESCRIPTION: This code defines the Point interface, which represents a 2D coordinate with x and y properties. It's used in various methods of the BaseCell class for positioning elements.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-cell.en.md#2025-04-22_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface Point {\n  x: number,\n  y: number\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Copy Transformer Support in TypeScript\nDESCRIPTION: Implements support for custom transformers when copying data.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_16\n\nLANGUAGE: TypeScript\nCODE:\n```\n复制支持自定义 transformer ([#2090](https://github.com/antvis/S2/issues/2090)) ([250eecd](https://github.com/antvis/S2/commit/250eecd32ed4f48b95ed7c4e480fa3c75d4bb5d7))\n```\n\n----------------------------------------\n\nTITLE: Getting Original and Formatted Data with asyncGetAllData\nDESCRIPTION: Code examples showing how to get original or formatted data using the asyncGetAllData method. The formatOptions parameter controls whether to include formatted headers and data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/copy-export.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst data = await asyncGetAllData({\n  sheetInstance: s2,\n  split: '\\t',\n  formatOptions: {\n    formatHeader: false,\n    formatData: false\n  },\n});\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst data = await asyncGetAllData({\n  sheetInstance: s2,\n  split: '\\t',\n  formatOptions: {\n    formatHeader: true,\n    formatData: true\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Cell Types in S2 Visualization in TypeScript\nDESCRIPTION: Shows various methods to access different types of cells in the S2 visualization, including row cells, column cells, corner cells, merged cells, and data cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\ns2.facet.getRowCells()\ns2.facet.getRowLeafCells()\n```\n\n----------------------------------------\n\nTITLE: Accessing Hidden Columns Detail from S2 Store\nDESCRIPTION: This snippet shows how to actively retrieve hidden columns detail from the S2 store.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/hide-columns.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst hiddenColumnsDetail = s2.store.get('hiddenColumnsDetail')\nconsole.log(hiddenColumnsDetail)\n```\n\n----------------------------------------\n\nTITLE: Defining TextTheme Configuration in Markdown\nDESCRIPTION: This snippet outlines the TextTheme configuration options, including parameters for text alignment, font properties, and colors.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-theme.en.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n#### TextTheme\n\n**optional** *object*\n\nFunction Description: Text Theme\n\n| parameter    | illustrate                                                                | type                          | Defaults                                                                                    | required |\n| ------------ | ------------------------------------------------------------------------- | ----------------------------- | ------------------------------------------------------------------------------------------- | -------- |\n| textAlign    | Alignment of text content                                                 | `left` \\| `center` \\| `right` | -                                                                                           |          |\n| textBaseline | Baseline when drawing text                                                | `top` \\| `middle` \\| `bottom` | -                                                                                           |          |\n| fontFamily   | font                                                                      | `string`                      | `Roboto, PingFangSC, Microsoft YaHei, Arial, sans-serif`  |          |\n| fontSize     | font size                                                                 | `number`                      | -                                                                                           |          |\n| fontWeight   | number<br>string: `normal`<br>`bold`<br>`bolder`<br>`lighter` font weight | `number` \\| `string`          | Bold text: Mobile: `520` PC: `bold`<br>Normal text: `normal`                                |          |\n| fill         | font color                                                                | `string`                      | -                                                                                           |          |\n| linkTextFill | link text color                                                           | `string`                      | -                                                                                           |          |\n| opacity      | font transparency                                                         | `number`                      | 1                                                                                           |          |\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Definition\nDESCRIPTION: YAML front matter block defining metadata for the documentation page, including title and order position.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/adaptive/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Adaptive Layout\norder: 3\n---\n```\n\n----------------------------------------\n\nTITLE: Custom Tree Structure Configuration Update\nDESCRIPTION: Updates the custom tree structure configuration to support both flat and tree modes.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_17\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n-  hierarchyType: 'customTree',\n+  hierarchyType: 'tree',\n}\n\nconst s2DataConfig = {\n  fields: {\n-    customTreeItems: [\n-      {\n-        key: 'custom-node-1',\n-        title: 'Custom Node A',\n-        description: 'Custom Node A Description',\n-        children: []\n-      }\n\n+    rows: [\n+      {\n+        field: 'custom-node-1',\n+        title: 'Custom Node A',\n+        description: 'Custom Node A Description',\n+        children: []\n+      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Field Conditions in S2\nDESCRIPTION: Basic example of configuring the conditions attribute in s2Options to implement field marking. The code shows how to set up text field marking for the 'price' field with a blue color.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/conditions.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// 构建 options\nconst s2Options = {\n  width: 600,\n  height: 600,\n  // 通过配置 conditions 实现字段标记\n  conditions: {\n    text: [\n      {\n        field: \"price\",\n        mapping(fieldValue, data) {\n          return {\n            // fill 是文本字段标记下唯一必须的字段，用于指定文本颜色\n            fill: \"#5B8FF9\",\n          };\n        },\n      },\n    ],\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: 禁用S2表格滚动事件触发 (TypeScript)\nDESCRIPTION: 在手动触发S2表格滚动时，可以通过设置skipScrollEvent: true来禁止触发内部的滚动事件（如S2Event.GLOBAL_SCROLL）。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/scroll.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ns2.interaction.scrollTo({\n  offsetX: { value: 100, animate: true },\n  offsetY: { value: 100, animate: true },\n  skipScrollEvent: true\n})\n\ns2.interaction.scrollToTop({\n  animate: true,\n  skipScrollEvent: true\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Switcher Fields in JavaScript\nDESCRIPTION: Defines the structure of switcherFields object, specifying rows, columns, and values for the Switcher component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/switcher.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst switcherFields = {\n  rows: {\n    items: [{ id: \"province\" }, { id: \"city\" }],\n    allowEmpty: false,\n  },\n  columns: {\n    items: [{ id: \"type\" }],\n  },\n  values: {\n    selectable: true,\n    items: [{ id: \"price\" }, { id: \"cost\" }],\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Center Alignment for Data Cells in S2 CrossTable\nDESCRIPTION: Code snippet showing how to set center alignment with middle baseline for both bolderText (subtotal/total cells) and regular text (other data cells) in data cells of an S2 CrossTable.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.zh.md#2025-04-22_snippet_10\n\nLANGUAGE: js\nCODE:\n```\ndataCell: {\n  bolderText: {\n    textAlign: 'center',\n    textBaseline: 'middle',\n  },\n  text: {\n    textAlign: 'center',\n    textBaseline: 'middle',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: SeriesNumber Configuration Parameters Table\nDESCRIPTION: A markdown table defining the configuration parameters for SeriesNumber functionality, including the enable flag and custom text options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/series-number.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| parameter | illustrate                            | type      | Defaults | required |\n| --------- | ------------------------------------- | --------- | -------- | -------- |\n| enable    | Whether to display the series number  | `boolean` | `false`  |          |\n| text      | custom series number header cell text | `string`  | -        |          |\n```\n\n----------------------------------------\n\nTITLE: Defining SheetComponentOptions in TypeScript\nDESCRIPTION: Defines the SheetComponentOptions type, which extends S2Options and includes pagination props from ant-design-vue. This type is used for configuring the S2-vue component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/sheet-component.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { Pagination, S2Options } from '@antv/s2';\nimport type { PaginationProps } from 'ant-design-vue';\n\ntype SheetComponentOptions = S2Options<\n  Element | string,\n  Pagination & PaginationProps\n>;\n```\n\n----------------------------------------\n\nTITLE: Configuring Column Header Cell Alignment in S2\nDESCRIPTION: Demonstrates alignment configuration for column header cells, including measure text and bolder text alignment settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.en.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ncolCell: {\n measureText: {\n textAlign: 'left',\n },\n bolderText: {\n textAlign: 'left',\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating custom tree structure configuration\nDESCRIPTION: Updates the custom tree structure configuration by replacing customTree with tree hierarchyType and customTreeItems with rows field.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_17\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n-  hierarchyType: 'customTree',\n+  hierarchyType: 'tree',\n}\n\nconst s2DataConfig = {\n  fields: {\n-    customTreeItems: [\n-      {\n-        key: 'custom-node-1',\n-        title: '自定义节点 A',\n-        description: '自定义节点 A 描述',\n-        children: []\n-      }\n\n+    rows: [\n+      {\n+        field: 'custom-node-1',\n+        title: '自定义节点 A',\n+        description: '自定义节点 A 描述',\n+        children: []\n+      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Enhanced rowHeader frozen configuration\nDESCRIPTION: Shows how rowHeader now supports numeric values to specify the maximum frozen width as a ratio between 0 and 1.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_20\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  frozen: {\n-   rowHeader: true,\n+   rowHeader: true,\n+   rowHeader: 0.5,\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Modifying Scroll API in TypeScript\nDESCRIPTION: Replaces updateScrollOffset with scrollTo under the s2.interaction namespace and adds new configuration options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_29\n\nLANGUAGE: diff\nCODE:\n```\n- s2.updateScrollOffset(offsetConfig: ScrollOffsetConfig)\n+ s2.interaction.scrollTo(offsetConfig: ScrollOffsetConfig)\n```\n\n----------------------------------------\n\nTITLE: Custom SVG Icon Type Definition\nDESCRIPTION: Configuration options for registering custom SVG icons, supporting base64, local SVG files, and online image URLs.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/header-action-icon.en.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| parameter | illustrate                                                                                                            | type   | Defaults | required |\n| --------- | --------------------------------------------------------------------------------------------------------------------- | ------ | -------- | -------- |\n| name      | icon name                                                                                                             | string | -        | ✓        |\n| svg       | Three formats of svg strings are currently supported:<br>1. base 64<br>2. svg local file<br>3. Online picture address | string | -        | ✓        |\n```\n\n----------------------------------------\n\nTITLE: Configuring Infinite Lines for Row Cells in S2 Charts (TypeScript)\nDESCRIPTION: This code snippet shows how to configure row cells to display an infinite number of lines, allowing for dynamic height adjustment based on content.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/multi-line-text.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      maxLines: Infinity,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Updating Tooltip Operation Menu Configuration in S2\nDESCRIPTION: Shows the restructuring of menu items configuration under the menu property and property name changes.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_60\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    operation: {\n-     onClick: (cell) => {},\n-     menus: [\n-       {\n-         key: 'custom-a',\n-         text: 'Operation 1',\n-         icon: 'Trend',\n-         onClick: (cell) => {},\n-         visible: (cell) => true,\n-         children: [],\n-       }\n-     ],\n\n+     menu: {\n+       onClick: (info, cell) => {},\n+       items: [\n+         {\n+           key: 'custom-a',\n+           label: 'Operation 1',\n+           icon: 'Trend',\n+           onClick: (info, cell) => {},\n+           visible: (info, cell) => true,\n+           children: [],\n+         }\n+       ],\n+     },\n    },\n  },\n};\n\n<SheetComponent options={s2Options} />\n```\n\n----------------------------------------\n\nTITLE: Configuring Virtual Field Links in S2 Pivot Tables\nDESCRIPTION: Example showing how to handle the special case of extra virtual fields in single-metric pivot tables, using the EXTRA_FIELD constant to mark these fields as links.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/link-jump.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { EXTRA_FIELD } from '@antv/s2'\n\nconst s2Options = {\n  width: 600,\n  height: 600,\n  interaction: {\n    linkFields: [EXTRA_FIELD],\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Migrating tree structure configuration\nDESCRIPTION: Updates tree structure configuration by replacing rowExpandDepth/collapsedRows/hierarchyCollapse with expandDepth/collapseFields/collapseAll and moving settings under rowCell.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_15\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'tree',\n  style: {\n-   rowExpandDepth: 0,\n-   collapsedRows: {},\n-   hierarchyCollapse: true,\n\n+   rowCell: {\n+     expandDepth: 0,\n+     collapseFields: {},\n+     collapseAll: true\n    }\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring SimpleData Type in TypeScript\nDESCRIPTION: Type definition for basic data types in S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-data-config.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntype SimpleData = string | number;\n```\n\n----------------------------------------\n\nTITLE: Updating Pivot Table Value Cell Metadata Structure in TypeScript\nDESCRIPTION: Changes the structure of this.meta.data to include new fields and reorganize existing data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_24\n\nLANGUAGE: diff\nCODE:\n```\n{\n-  \"number\": 7789,\n-  \"province\": \"Zhejiang\",\n-  \"city\": \"Hangzhou\",\n-  \"type\": \"Furniture\",\n-  \"sub_type\": \"Table\",\n\n+  \"extraField\": \"number\",\n+    \"raw\": {\n+    \"number\": 7789,\n+    \"province\": \"Zhejiang\",\n+    \"city\": \"Hangzhou\",\n+    \"type\": \"Furniture\",\n+    \"sub_type\": \"Table\"\n+ },\n+  \"$$extra$$\": \"number\",\n+  \"$$value$$\": 7789,\n+  \"$$origin$$\": {\n+    \"number\": 7789,\n+    \"province\": \"Zhejiang\",\n+    \"city\": \"Hangzhou\",\n+    \"type\": \"Furniture\",\n+    \"sub_type\": \"Table\"\n+  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DataSet Callback in JavaScript\nDESCRIPTION: Defines a callback function for customizing the data set. It takes a SpreadSheet object and returns a BaseDataSet object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-options.en.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nDataSet = (spreadsheet: SpreadSheet) => BaseDataSet;\n```\n\n----------------------------------------\n\nTITLE: Displaying Original Values in StrategySheet Tooltip\nDESCRIPTION: Feature that adds support for showing original values in tooltips for trend analysis tables in the strategy sheet.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n* **strategysheet:** 趋势分析表 tooltip 支持显示原始值 ([#1750](https://github.com/antvis/S2/issues/1750)) ([e757b99](https://github.com/antvis/S2/commit/e757b999a85a15d53dfa72bde2805b6b193dcd62))\n```\n\n----------------------------------------\n\nTITLE: Migrating tooltip configuration\nDESCRIPTION: Shows how to update tooltip configuration with the new naming convention: row/col/data/corner to rowCell/colCell/dataCell/cornerCell, and showTooltip/renderTooltip to enable/render.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n-   row: {},\n-   col: {},\n-   data: {},\n-   corner: {},\n\n+   rowCell: {},\n+   colCell: {},\n+   dataCell: {},\n+   cornerCell: {},\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Cell Metadata Format Updates\nDESCRIPTION: Changes to cell metadata format for pivot and detail tables\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_26\n\nLANGUAGE: diff\nCODE:\n```\n{\n  rowQuery: {\n    \"province\": \"浙江省\",\n    \"city\": \"宁波市\"\n  },\n  colQuery: {\n    \"sub_type\": \"沙发\",\n    \"type\": \"家具\",\n    \"$$extra$$\": \"number\"\n  },\n+ query: {\n+   \"province\": \"浙江省\",\n+   \"city\": \"宁波市\",\n+   \"sub_type\": \"沙发\",\n+   \"type\": \"家具\",\n+   \"$$extra$$\": \"number\"\n+  }\n}\n```\n\n----------------------------------------\n\nTITLE: Fixing facet index calculation for rows with height greater than canvas\nDESCRIPTION: Bug fix that corrects index calculation issues when row height exceeds canvas height in table facet component.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_26\n\nLANGUAGE: Markdown\nCODE:\n```\n**table-facet:** 修复 row 高度大于 canvas 高度后导致的 index 计算错误 ([#1208](https://github.com/antvis/S2/issues/1208)) ([06983bc](https://github.com/antvis/S2/commit/06983bc847cebb02c416e3c13279cc763a3d2d4a))\n```\n\n----------------------------------------\n\nTITLE: Modifying Cell Padding Values in AntV S2\nDESCRIPTION: Updates to default cell padding values, with top and bottom padding increased from 4px to 8px.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_28\n\nLANGUAGE: diff\nCODE:\n```\n{\n-  top: 4,\n+  top: 8,\n-  bottom: 4,\n+  bottom: 8\n}\n```\n\n----------------------------------------\n\nTITLE: Replacing Custom Layout Hook in AntV S2\nDESCRIPTION: Replacement of the deprecated 'layoutDataPosition' hook with the new 'layoutCellMeta' hook for customizing cell metadata.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_29\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n-  layoutDataPosition: (s2, getCellData) => {}\n+  layoutCellMeta: (cellMeta) => {}\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Frozen Row Header Width in Pivot Table\nDESCRIPTION: Shows how to customize the maximum width of the frozen row header area in the pivot table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  frozen: {\n    rowHeader: 0.2, // 默认 0.5 （可选范围 0 - 1)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Sort Events in @antv/s2-react\nDESCRIPTION: Example of how to listen for sorting events in the @antv/s2-react SheetComponent by using the onRangeSort callback prop to capture sort parameters.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/group.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nfunction onRangeSort(sortParams) {\n  console.log('sortParams:', sortParams);\n}\n\n<SheetComponents onRangeSort={onRangeSort} />\n```\n\n----------------------------------------\n\nTITLE: Exporting Data to CSV in S2\nDESCRIPTION: Example of exporting table data to CSV format using @antv/s2 utilities. Shows how to retrieve plain text data and download it as a CSV file.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/copy-export.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { asyncGetAllPlainData, download } from '@antv/s2'\n\n// 拿到复制数据 (text/plain)\nconst data = await asyncGetAllPlainData({\n  sheetInstance: s2,\n  split: ',',\n  formatOptions: true,\n  // formatOptions: {\n  //   formatHeader: true,\n  //   formatData: true\n  // },\n\n  // 同步导出\n  // async: false\n});\n\n// 导出数据 (csv)\ndownload(data, 'filename') // filename.csv\n```\n\n----------------------------------------\n\nTITLE: Checking if a Node is a Total in TypeScript\nDESCRIPTION: This code snippet demonstrates how to check if a Node instance represents a total row or column in the S2 library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/node.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnode.isTotals // false\n```\n\n----------------------------------------\n\nTITLE: Embedding Theme Documentation in Markdown\nDESCRIPTION: Embeds a Chinese language theme documentation file using markdown embed syntax\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/theme/default/API.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/general/s2-theme.zh.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Accessing Marked Cells in S2\nDESCRIPTION: Shows how to access cells that have been marked through the sheet's marks property. This enables querying active mark cells and applying custom operations to them.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/analysis/conditions/index.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// 通过 marks 获取标记的 cell 实例\nconst cells = s2.interaction.getAllMarkedCells();\n// 获取标记的单元格实例的元信息\nconst meta = cells?.map((cell) => cell.getMeta());\n```\n\n----------------------------------------\n\nTITLE: Handling Mac Touchpad Zoom Events\nDESCRIPTION: Implementation of zoom handling using VisualViewport API for Mac touchpad pinch-to-zoom functionality.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/hd-adapter.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nwindow.viewport?.visualViewport?.addEventListener(\n  'resize',\n  this.renderByZoomScale,\n);\n\nconst renderByZoomScale = debounce((e) => {\n  // 拿到缩放比 更新容器大小\n  const ratio = Math.max(e.target.scale, window.devicePixelRatio);\n  if (ratio > 1) {\n    const { width, height } = s2Options\n    const newWidth = Math.floor(width * ratio);\n    const newHeight = Math.floor(height * ratio);\n\n    // 内部的更新容器大小方法\n    changeSheetSize(newWidth, newHeight);\n  }\n}, 350);\n```\n\n----------------------------------------\n\nTITLE: Updating S2 Configuration Options\nDESCRIPTION: Demonstrates how to update the options configuration for an S2 spreadsheet, which will merge with previous options and trigger a re-render without updating data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\npivotSheet.setOptions({ ... })\nawait pivotSheet.render(false) // 重新渲染，不更新数据\n```\n\n----------------------------------------\n\nTITLE: Initializing Strategy Sheet Component in React\nDESCRIPTION: Basic implementation of a Strategy Sheet component using AntV S2 in React. This component enables trend analysis tables with multiple indicators per cell, rendering with the specified data configuration and options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.en.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { SheetComponent } from \"@antv/s2-react\";\nimport '@antv/s2-react/dist/s2-react.min.css';\n\nReactDOM.render(\n  <SheetComponent\n    sheetType=\"strategy\"\n    dataCfg={s2DataConfig}\n    options={s2Options}\n  />,\n  document.getElementById('container'),\n);\n```\n\n----------------------------------------\n\nTITLE: Example of MultiData Structure in JSON\nDESCRIPTION: Provides an example of the MultiData structure used for supporting multi-metric custom cell rendering, showing formatted and original values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/view-meta.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"number\": {\n    \"originalValues\": [1, 2, 3],\n    \"values\": [\"1\", \"2\", \"3\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Device Pixel Ratio\nDESCRIPTION: Configuration to manually set a custom device pixel ratio for table rendering.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/hd-adapter.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  devicePixelRatio: 2\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating copy data API\nDESCRIPTION: Shows how to update from the deprecated copyData function to the new asyncGetAllData API with support for async data retrieval.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_9\n\nLANGUAGE: diff\nCODE:\n```\n- const data = copyData(spreadsheet, '\\t', false)\n\n+ const data = await asyncGetAllData({\n+   sheetInstance: s2,\n+   split: '\\t',\n+   formatOptions: false,\n+   async: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Defining InterceptType Enum\nDESCRIPTION: Enumeration of interaction intercept types including hover, click, and various selection modes.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/interaction.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport enum InterceptType {\n  HOVER = 'hover',\n  CLICK = 'click',\n  DATA_CELL_BRUSH_SELECTION = 'dataCellBrushSelection',\n  ROW_CELL_BRUSH_SELECTION = 'rowCellBrushSelection',\n  COL_CELL_BRUSH_SELECTION = 'colCellBrushSelection',\n  MULTI_SELECTION = 'multiSelection',\n  RESIZE = 'resize',\n}\n```\n\n----------------------------------------\n\nTITLE: Version References\nDESCRIPTION: Version numbers showing progression of releases\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_25\n\nLANGUAGE: text\nCODE:\n```\n@antv/s2-v1.15.0-alpha.6\n@antv/s2-v1.15.0-alpha.3\n@antv/s2-v1.15.0-alpha.2\n@antv/s2-v1.14.0\n```\n\n----------------------------------------\n\nTITLE: Adjusting Cell Default Padding in TypeScript\nDESCRIPTION: Updates the default padding values for cells, increasing top and bottom padding to 8px.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_40\n\nLANGUAGE: diff\nCODE:\n```\n{\n-  top: 4,\n+  top: 8,\n-  bottom: 4,\n+  bottom: 8\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Selected Cell Movement with Arrow Keys in S2\nDESCRIPTION: Controls whether arrow keys can be used to move the highlighted cell after clicking on a value cell. This feature is enabled by default.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    selectedCellMove: false // 默认 true\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Installing and Running AntV S2 Development Environment\nDESCRIPTION: Command line instructions for setting up and running the AntV S2 development environment, including package installation, site bootstrapping, testing and building commands using pnpm package manager.\nSOURCE: https://github.com/antvis/s2/blob/next/CONTRIBUTING.en-US.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g pnpm\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm site:bootstrap\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm site:start\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm core:start\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm react:start\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm vue:start\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm react:playground\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm vue:playground\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm test\n```\n\n----------------------------------------\n\nTITLE: Defining CellType Enum in TypeScript\nDESCRIPTION: This code defines the CellType enum, which enumerates the different types of cells that can exist in the S2 grid. It includes data cells, row cells, column cells, corner cells, and merged cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-cell.en.md#2025-04-22_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport enum CellType {\n  DATA_CELL = 'dataCell',\n  ROW_CELL = 'rowCell',\n  COL_CELL = 'colCell',\n  CORNER_CELL = 'cornerCell',\n  MERGED_CELL = 'mergedCell',\n}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Sheet Component Documentation\nDESCRIPTION: YAML frontmatter metadata for a documentation page defining the title and order of the Sheet Component section.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/react-component/sheet/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Sheet Component\norder: 0\n---\n```\n\n----------------------------------------\n\nTITLE: Updating S2 Theme Configuration\nDESCRIPTION: Method to update the S2 theme configuration. This applies new theme settings and re-renders the chart without updating data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\npivotSheet.setThemeCfg({ ... })\npivotSheet.render(false)  // 重新渲染，不更新数据\n```\n\n----------------------------------------\n\nTITLE: Setting Grid Layout Mode\nDESCRIPTION: Configuration for setting grid layout mode in S2 table visualization.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'grid'\n};\n```\n\n----------------------------------------\n\nTITLE: Installing ant-design-vue Dependency\nDESCRIPTION: Command to install the required ant-design-vue dependency for additional S2 components like advanced sorting, export, drill-down, and tooltips.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/getting-started.en.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nyarn add ant-design-vue\n```\n\n----------------------------------------\n\nTITLE: Renderer Type Definition\nDESCRIPTION: Configuration interface for the renderer component, including type, preview settings, fallback behavior, and timeout parameters.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-data-config.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Renderer {\n  type: 'IMAGE' | 'VIDEO';\n  clickToPreview?: boolean;\n  fallback?: string;\n  timeout?: number;\n  config?: Partial<ImageStyleProps> | Partial<HTMLVideoElement> | HTMLStyleProps;\n}\n```\n\n----------------------------------------\n\nTITLE: Example of ExtraData Object in JSON\nDESCRIPTION: Provides an example of an ExtraData object with special fields for tracking extra field names and values, showing how metadata is stored with values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/view-meta.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$$extra$$\": \"number\",\n  \"$$value$$\": 7789,\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Hover Focus in S2\nDESCRIPTION: Controls the behavior where hovering over a cell for more than 800ms keeps the highlight and displays a tooltip. This is enabled by default.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    hoverFocus: false // 默认 true\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Updating Custom Value Cell Parameters in TypeScript\nDESCRIPTION: Adds a second parameter 'spreadsheet' to the dataCell configuration function.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_35\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n   width: 600,\n-  dataCell: (viewMeta) => {\n-    return new CustomDataCell(viewMeta, viewMeta.spreadsheet);\n-  }\n+  dataCell: (viewMeta, spreadsheet) => {\n+    return new CustomDataCell(viewMeta, spreadsheet);\n+  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Tooltip Operation Menu Configuration\nDESCRIPTION: Changes to the configuration structure for tooltip operation menus, with menu items now nested under the 'menu' property and parameter adjustments in event handlers.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_33\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    operation: {\n-     onClick: (cell) => {},\n-     menus: [\n-       {\n-         key: 'custom-a',\n-         text: '操作 1',\n-         icon: 'Trend',\n-         onClick: (cell) => {},\n-         visible: (cell) => true,\n-         children: [],\n-       }\n-     ],\n\n+     menu: {\n+       onClick: (info, cell) => {},\n+       items: [\n+         {\n+           key: 'custom-a',\n+           label: '操作 1',\n+           icon: 'Trend',\n+           onClick: (info, cell) => {},\n+           visible: (info, cell) => true,\n+           children: [],\n+         }\n+       ],\n+     },\n    },\n  },\n};\n\n<SheetComponent options={s2Options} />\n```\n\n----------------------------------------\n\nTITLE: Tree Structure Row Header Configuration Update\nDESCRIPTION: Replaces deprecated row header configuration properties with new semantic names under rowCell object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_15\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'tree',\n  style: {\n-   rowExpandDepth: 0,\n-   collapsedRows: {},\n-   hierarchyCollapse: true,\n\n+   rowCell: {\n+     expandDepth: 0,\n+     collapseFields: {},\n+     collapseAll: true\n    }\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting GitHub Issue and Commit References in Markdown\nDESCRIPTION: This snippet demonstrates the format used throughout the changelog to reference GitHub issues and commit hashes. It includes the issue number and a short commit hash.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_22\n\nLANGUAGE: Markdown\nCODE:\n```\n* table dataset spec ([#288](https://github.com/antvis/S2/issues/288)) ([63bef22](https://github.com/antvis/S2/commit/63bef22319ab05c7d1b3d9aeace49e043731d3af))\n```\n\n----------------------------------------\n\nTITLE: Removing Internal Spin Component in React\nDESCRIPTION: Removes the internal Spin component and demonstrates how to wrap it externally with a loading state.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_43\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Spin } from 'antd'\n\nfunction App() {\n  const [loading, setLoading] = React.useState(false)\n\n  return (\n    <Spin spinning={loading}>\n      <SheetComponent onLoading={setLoading} />\n    </Spin>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Actual Text from Cell in TypeScript\nDESCRIPTION: This code snippet demonstrates how to get the actual text content of a cell, including any ellipsis for truncated text.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-cell.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ncell.getActualText()\n```\n\n----------------------------------------\n\nTITLE: Limiting Resize Hotspots in S2\nDESCRIPTION: Shows how to conditionally display resize hotspots only on specific cells using the resize.enable property, in this case only on the first 3 columns.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    resize: {\n      enable: (cell) => {\n        const meta = cell.getMeta();\n        return meta.colIndex < 3\n      }\n    }\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Cell Data in S2 Visualization in TypeScript\nDESCRIPTION: Shows how to retrieve data for a single cell, including detailed and subtotal data, using the S2 visualization library's query mechanism.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_17\n\nLANGUAGE: ts\nCODE:\n```\nimport { EXTRA_FIELD } from '@antv/s2'\n\n// 获取明细单元格\ns2.dataSet.getCellData({\n  query: {\n    province: '浙江',\n    city: '杭州',\n    type: '笔',\n    [EXTRA_FIELD]: 'price',\n  },\n});\n\n// 获取小计数据\ns2.dataSet.getCellData({\n  query: {\n    province: '浙江',\n    type: '笔',\n    [EXTRA_FIELD]: 'price',\n  },\n  isTotals: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Defining CellType Enum in TypeScript\nDESCRIPTION: Defines an enum for different cell types in the S2 component, including data cells, row cells, column cells, and special cell types.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/interaction.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nenum CellType {\n  DATA_CELL = 'dataCell',\n  ROW_CELL = 'rowCell',\n  COL_CELL = 'colCell',\n  SERIES_NUMBER_CELL = 'seriesNumberCell',\n  CORNER_CELL = 'cornerCell',\n  MERGED_CELL = 'mergedCell',\n}\n```\n\n----------------------------------------\n\nTITLE: Defining RawData Type in TypeScript\nDESCRIPTION: Defines the RawData type as a record with string keys and DataItem values, representing raw data in the spreadsheet.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/view-meta.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype RawData = Record<string, DataItem>;\n```\n\n----------------------------------------\n\nTITLE: Implementing Links in List Table\nDESCRIPTION: Complete implementation of link fields in a list table, showing configuration for column-based links and click handling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/link-jump.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2';\n\nconst s2DataConfig = {\n  fields: {\n    columns: ['type', 'price', 'province', 'city'],\n  },\n};\n\nconst s2Options = {\n  width: 600,\n  height: 600,\n  interaction: {\n    linkFields: ['type', 'price', 'province'],\n  }\n};\n\nconst s2 = new TableSheet(container, s2DataConfig, s2Options);\n\ns2.on(S2Event.GLOBAL_LINK_FIELD_JUMP, (data) => {\n  const { key, record } = data;\n  const value = record[key]\n  // 拼装自己的跳转地址\n  location.href = `https://path/to/${key}=${value}}`;\n});\n\ns2.render();\n```\n\n----------------------------------------\n\nTITLE: Fixing Regular Expression Compatibility Issue on iOS 14.8.1\nDESCRIPTION: Addresses compatibility issues with regular expression lookahead and lookbehind on iOS 14.8.1.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n* 在ios 14.8.1中正则前瞻和后顾存在兼容问题 ([#3109](https://github.com/antvis/S2/issues/3109)) ([32e56ea](https://github.com/antvis/S2/commit/32e56ea682e11874aa4ff01d4061bc270e3f012f))\n```\n\n----------------------------------------\n\nTITLE: Disabling Auto Reset Sheet Style in S2\nDESCRIPTION: Controls whether interaction states are automatically reset when clicking outside the table, pressing ESC, or clicking a selected cell again. Enabled by default.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    autoResetSheetStyle: false\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Installing @antv/s2-react v1.9.1\nDESCRIPTION: NPM installation command for @antv/s2-react version 1.9.1.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2-react@1.9.1\n```\n\n----------------------------------------\n\nTITLE: Importing S2 via UMD Bundle\nDESCRIPTION: Basic example of importing and initializing S2 PivotSheet using the UMD bundle from dist directory. Shows how to create and render a new sheet instance using the global S2 object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/browser.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n<script src=\"./dist/s2.min.js\"></script>\n<script>\n   async function run() {\n      const s2 = new S2.PivotSheet(container, s2DataConfig, s2Options);\n      await s2.render();\n   }\n\n   run();\n</script>\n```\n\n----------------------------------------\n\nTITLE: Defining TextAndIconPosition Interface in TypeScript\nDESCRIPTION: This code defines a TextAndIconPosition interface for specifying the positions of text and icon elements in a cell.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-cell.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TextAndIconPosition {\n  text: Point\n  icon: Point\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TextAndIconPosition Interface in TypeScript\nDESCRIPTION: This snippet defines the TextAndIconPosition interface, which specifies the positions for both text and icon elements within a cell. It uses the Point interface for each position.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-cell.en.md#2025-04-22_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TextAndIconPosition {\n  text: Point\n  icon: Point\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating tooltip API configuration\nDESCRIPTION: Updates the tooltip API configuration by removing enterable and renaming showSingleTips to onlyShowCellText and onlyMenu to onlyShowOperator.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_7\n\nLANGUAGE: diff\nCODE:\n```\ns2.showTooltip({\n  options: {\n-   enterable: true,\n-   showSingleTips: true,\n+   onlyShowCellText: true,\n-   onlyMenu: true,\n+   onlyShowOperator: true\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Enabling Column Header Brush Selection in S2\nDESCRIPTION: Enables the ability to select multiple column header cells by dragging (brush selection). This is disabled by default.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    brushSelection:  {\n        colCell: true // 默认 false\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Installing @antv/s2 v1.10.0\nDESCRIPTION: Command to install version 1.10.0 of @antv/s2 package\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_36\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2@1.10.0\n```\n\n----------------------------------------\n\nTITLE: Filtered and Sorted Data Result in S2\nDESCRIPTION: This code block represents the final data after applying both filtering (city = '杭州市') and sorting (price in descending order) in S2. It shows how the original data is transformed based on the configured filters and sorting.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/table.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n[\n  {\n    price: 3,\n    province: '浙江省',\n    city: '杭州市',\n    type: '家具',\n    sub_type: '沙发',\n  },\n  {\n    price: 1,\n    province: '浙江省',\n    city: '杭州市',\n    type: '家具',\n    sub_type: '桌子',\n  },\n]\n```\n\n----------------------------------------\n\nTITLE: Migrating from G Shape Creation to G 6.0 Component-based API\nDESCRIPTION: Demonstrates how to replace the legacy G shape creation with the new component-based API in G 6.0, specifically for image elements.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n+ import { Image } from '@antv/g';\n\n+ this.appendChild(new Image({ style: {} }))\n\n- this.addShape('image', { attrs: {} });\n```\n\n----------------------------------------\n\nTITLE: Defining React SheetComponentOptions Type\nDESCRIPTION: Type definition for S2 React component options that extends S2Options but changes tooltip content type to ReactNode for JSX support\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/sheet-component.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { S2Options } from '@antv/s2';\n\ntype SheetComponentOptions = S2Options<React.ReactNode>\n```\n\n----------------------------------------\n\nTITLE: Defining S2 Tooltip Position Info Interface\nDESCRIPTION: Type definitions for tooltip position information including calculated position coordinates and event data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/tooltip.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TooltipPositionInfo {\n  position: TooltipPosition;  // Default calculated tooltip position\n  event: Event;  // Current click event information\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Value Cell Value Range Retrieval Method in TypeScript\nDESCRIPTION: Changes the method name for retrieving value ranges in data cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_38\n\nLANGUAGE: diff\nCODE:\n```\n- dataCell.valueRangeByField\n+ dataCell.getValueRange()\n```\n\n----------------------------------------\n\nTITLE: Dynamic Column Cell Dimensions Based on Column Index in S2\nDESCRIPTION: Dynamically adjusting column header dimensions based on the column index. Returns null to use default dimensions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.en.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    colCell: {\n      width: (colNode) => {\n        // 例：前两列宽度 100px, 其他 50px\n        return colNode.colIndex <= 2 ? 100 : 50\n      },\n      height: (colNode) => {\n        // 例：前两列高度 100px, 其他 50px\n        return colNode.colIndex <= 2 ? 100 : 50\n      },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MappingFunction Type in TypeScript for S2 Conditions\nDESCRIPTION: TypeScript definition for the MappingFunction used in field marking conditions. This function receives field value, data, and node parameters and returns styling information including fill color, icon, comparison values, and text color settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/conditions.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype MappingFunction = (\n  fieldValue: number | string | null,\n  data: Record<string, any>,\n  node: DataCell | HeaderCell\n) => {\n  // 仅用于图标字段标记，可选\n  icon?: string;\n\n  // 背景 ｜ 文本 ｜ 柱状图 | 图标 字段标记颜色填充，必选\n  fill: string;\n\n  // 仅用于柱状图字段标记，可选\n  isCompare?: boolean;\n  minValue?: number;\n  maxValue?: number;\n\n  // 仅用于背景字段标记，可选。（当背景颜色较暗，将文本颜色设置为白色。优先级低于 文本字段标记）\n  intelligentReverseTextColor?: boolean;\n} | null | undefined // 返回值为空时，表示当前字段不显示字段标记样式\n```\n\n----------------------------------------\n\nTITLE: Basic Store Operations in TypeScript\nDESCRIPTION: Basic get and set operations for the S2 store to manage state.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/store.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ns2.store.get('key') // 获取\ns2.store.set('key', value) // 存储\n```\n\n----------------------------------------\n\nTITLE: Accessing All Data in Custom Calculation Functions\nDESCRIPTION: Example of a custom calculation function that accesses both detailed data and aggregated data. Shows how to use the spreadsheet.dataSet.getCellMultiData method to retrieve all data including totals.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/totals.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { QueryDataType } from '@antv/s2';\n\nconst calcFunc = (query, data, spreadsheet) => {\n  const allData = spreadsheet.dataSet.getCellMultiData({\n    query,\n    queryType: QueryDataType.All,\n  });\n\n  console.log('data（明细数据）:', data);\n  console.log('data（全部数据，含汇总）:', allData);\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Container for S2 Pivot Table in HTML\nDESCRIPTION: Sets up a div element as a container for rendering the S2 pivot table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.en.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\" />\n```\n\n----------------------------------------\n\nTITLE: Installing S2 React Components with Package Managers\nDESCRIPTION: Shows how to install the @antv/s2-react-components package using different package managers (pnpm, npm, or yarn).\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react-components/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm add @antv/s2-react-components\n# npm install @antv/s2-react-components --save\n# yarn add @antv/s2-react-components\n```\n\n----------------------------------------\n\nTITLE: Bug Fix - Custom Flatten Null Value Protection\nDESCRIPTION: Fix to handle null values in customFlatten function\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\ncustomFlatten 空值保护 ([#1463](https://github.com/antvis/S2/issues/1463))\n```\n\n----------------------------------------\n\nTITLE: Migrating tooltip rendering configuration\nDESCRIPTION: Shows how to update the tooltip rendering configuration from showTooltip/renderTooltip to enable/render.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n-   showTooltip: true,\n-   renderTooltip: () => new CustomTooltip(),\n\n+   enable: true,\n+   render: () => new CustomTooltip(),\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Version Tag Declaration in Markdown\nDESCRIPTION: Version tag with link to compare changes between versions\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react-components/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# [@antv/s2-react-components-v2.1.2](https://github.com/antvis/S2/compare/@antv/s2-react-components-v2.1.1...@antv/s2-react-components-v2.1.2)\n```\n\n----------------------------------------\n\nTITLE: Feature - Scroll Boundary Configuration\nDESCRIPTION: Add boundary scroll configuration to prevent Mac back gesture triggering during horizontal scroll\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\n增加边界滚动配置，解决横屏滚动会触发 mac 回退的问题 ([#1409](https://github.com/antvis/S2/issues/1409))\n```\n\n----------------------------------------\n\nTITLE: 配置趋势分析表s2Options选项\nDESCRIPTION: 这段代码展示了趋势分析表的s2Options配置，包括表格尺寸、角头文本、条件格式（实现同环比数值映射规则）以及数据单元格的原始数据字段配置。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: ts\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 480,\n  // 角头文本\n  cornerText: '指标层级',\n  // 条件格式\n  conditions: {\n    // 同环比数值映射规则\n    text: [\n      {\n        field: 'number',\n        mapping: (value, cellInfo) => {\n          const { meta, colIndex } = cellInfo;\n          if (\n            colIndex === 0 ||\n            !value ||\n            !meta?.fieldValue\n          ) {\n            return {\n              fill: '#000',\n            };\n          }\n          return {\n            fill: value > 0 ? '#FF4D4F' : '#29A294',\n          };\n        },\n      },\n    ],\n  },\n  style: {\n    dataCell: {\n      valuesCfg: {\n        // 原始数据字段，用于原始数据导出和 tooltip 展示\n        originalValueField: 'originalValues',\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Controlling Scroll Events in AntV S2 Cell Selection\nDESCRIPTION: Demonstrates how to enable the triggering of internal scroll events (S2Event.GLOBAL_SCROLL) when selecting cells by setting the skipScrollEvent option to false.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.zh.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ns2.interaction.selectCell(targetCell, {\n  skipScrollEvent: false\n})\n```\n\n----------------------------------------\n\nTITLE: Showing Tooltip with Information\nDESCRIPTION: Method to display tooltip with default information, triggered by a canvas or mouse event.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n(event: CanvasEvent | MouseEvent, data: TooltipData[], options?: TooltipOptions) => void\n```\n\n----------------------------------------\n\nTITLE: Defining BaseHeaderConfig Interface for S2 Grid in TypeScript\nDESCRIPTION: The BaseHeaderConfig interface specifies the configuration for grid headers, including scroll positions, dimensions, viewport properties, positioning, and data content. It also includes references to the parent spreadsheet and sorting parameters.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-facet.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface BaseHeaderConfig {\n  scrollX?: number;\n  scrollY?: number;\n  width: number;\n  height: number;\n  originalWidth?: number;\n  originalHeight?: number;\n  viewportWidth: number;\n  viewportHeight: number;\n  position: Point;\n  data: Node[];\n  spreadsheet: SpreadSheet;\n  sortParam?: SortParam;\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding Data Preview Table Documentation\nDESCRIPTION: This snippet embeds documentation about the Data Preview Table feature from another markdown file located at '@/examples/case/data-preview/index.zh.md'.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/case/data-preview/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/examples/case/data-preview/index.zh.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Column Configuration Types\nDESCRIPTION: Type definitions for column configuration, supporting both simple string arrays and nested column structures.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-data-config.en.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ntype Columns = Array<ColumnNode | string>;\n\ninterface ColumnNode {\n  key: string;\n  children?: Array<ColumnNode | string>;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Webpack Plugin for Antd Version Aliasing in S2\nDESCRIPTION: Implements a webpack plugin to replace antd imports with antd-v5 for S2 components while preserving antd 4.x for the rest of the project.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_63\n\nLANGUAGE: ts\nCODE:\n```\nclass AntdV5AliasPlugin {\n  apply(compiler) {\n    compiler.hooks.normalModuleFactory.tap(\"AntdV5AliasPlugin\", (nmf) => {\n      nmf.hooks.beforeResolve.tapAsync(\"AntdV5AliasPlugin\", (resolveData, callback) => {\n        if (resolveData.contextInfo?.issuer?.includes('node_modules/@antv/s2-react-components')) {\n          // Match: \"antd\" and \"antd/es/locale/xxx\"\n          if (/antd(\\/*)?\\//.test(resolveData.request)) {\n            // Replace with: \"antd-v5\" and \"antd-v5/es/locale/xxx\"\n            resolveData.request = resolveData.request.replace(/antd(\\/*)?\\//,'antd-v5$1/')\n          }\n        }\n\n        callback();\n      });\n    });\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Forwarded S2 Instance in Parent Vue Components\nDESCRIPTION: Example of accessing the SpreadSheet instance from a custom wrapper component in a parent Vue component. The instance is accessed using the shallowRef and onMounted hooks.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.en.md#2025-04-22_snippet_6\n\nLANGUAGE: vue\nCODE:\n```\n<script lang=\"ts\">\nexport default defineComponent({\n  setup() {\n    const s2 = shallowRef();\n\n    onMounted(() => {\n      console.log('s2 instance:', s2.value?.instance);\n    });\n\n    return {\n      s2\n    };\n  },\n\n  components: {\n    Sheet,\n  },\n});\n</script>\n\n<template>\n  <YourSheet ref=\"s2\" :dataCfg=\"your-dataCfg\" :options=\"your-options\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Accessing Series Number Cells in S2 Visualization in TypeScript\nDESCRIPTION: Demonstrates how to retrieve sequence number cells in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: ts\nCODE:\n```\ns2.facet.getSeriesNumberCells()\n```\n\n----------------------------------------\n\nTITLE: Bug Description Example\nDESCRIPTION: Example of how to format a specific bug description in markdown\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.en.md#2025-04-22_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n`数据不正确：预期应该是 xx, 实际是 xx. 布局错误：节点应该显示在行头，实际出现在了列头。`\n```\n\n----------------------------------------\n\nTITLE: Updating Configuration Preprocessing API in TypeScript\nDESCRIPTION: Changes the import statements for configuration preprocessing functions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_31\n\nLANGUAGE: diff\nCODE:\n```\n- import { getSafetyOptions, getSafetyDataConfig } from '@antv/s2'\n+ import { setupOptions, setupDataConfig } from '@antv/s2'\n```\n\n----------------------------------------\n\nTITLE: Updating Export Component Configuration in S2\nDESCRIPTION: Shows property renaming from 'syncCopy' to 'async' and 'sheet' to 'sheetInstance' in the Export component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_51\n\nLANGUAGE: diff\nCODE:\n```\n- <Export syncCopy={true} sheet={s2} />\n+ <Export async={false} sheetInstance={s2} />\n```\n\n----------------------------------------\n\nTITLE: Basic React Component Adaptation Configuration\nDESCRIPTION: Simple boolean configuration examples for enabling or disabling adaptive behavior in the S2 React component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SheetComponent } from '@antv/s2-react';\n\n<SheetComponent adaptive={true} />\n<SheetComponent adaptive={false} />\n```\n\n----------------------------------------\n\nTITLE: Formatting Cell Text Using Meta Configuration\nDESCRIPTION: Example of using meta configuration to format cell text for custom nodes.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig: S2DataConfig = {\n  meta: [\n    {\n      field: 'a-1',\n      formatter: (value) => '名称 1'\n    },\n    {\n      field: 'a-1-1',\n      formatter: (value) => '名称 2'\n    },\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Installing S2 Vue Component via Package Managers\nDESCRIPTION: Commands for installing the @antv/s2-vue package using different package managers including pnpm, yarn, and npm.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-vue/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm add @antv/s2-vue\n# yarn add @antv/s2-vue\n# npm install @antv/s2-vue --save\n```\n\n----------------------------------------\n\nTITLE: Implementing direction key operations with shortcuts\nDESCRIPTION: Feature that adds support for direction key operations with keyboard shortcuts.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_31\n\nLANGUAGE: Markdown\nCODE:\n```\n**derection:** 方向键加快捷键操作 ([#1171](https://github.com/antvis/S2/issues/1171)) ([2773900](https://github.com/antvis/S2/commit/2773900de8ee7a29911cde101798c8547bed78ac))\n```\n\n----------------------------------------\n\nTITLE: Installing @antv/s2-react v1.9.0\nDESCRIPTION: NPM installation command for @antv/s2-react version 1.9.0.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2-react@1.9.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Texture Pattern Fill in S2\nDESCRIPTION: Example of using a repeating texture pattern from an external image URL to fill a shape. The 'a' parameter indicates the pattern repeats both horizontally and vertically.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/graphic.en.md#2025-04-22_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nfill: 'p(a)https://gw.alipayobjects.com/mdn/rms_d314dd/afts/img/A*58XjQY1tO7gAAAAAAAAAAABkARQnAQ';\n```\n\n----------------------------------------\n\nTITLE: Initializing S2 Table Component with Raw Data Configuration\nDESCRIPTION: Example of initializing an S2 Table component with basic configuration including fields, data array, and display options. The data contains price information for different furniture items across cities.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/table.en.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst dataCfg = {\n    fields: {\n        columns: ['city', 'type', 'sub_type', 'price'],\n    },\n    data: [{\n        \"price\": 1,\n        \"province\": \"浙江省\",\n        \"city\": \"杭州市\",\n        \"type\": \"家具\",\n        \"sub_type\": \"桌子\"\n    }, {\n        \"price\": 2,\n        \"province\": \"浙江省\",\n        \"city\": \"绍兴市\",\n        \"type\": \"家具\",\n        \"sub_type\": \"桌子\"\n    }, {\n        \"price\": 3,\n        \"province\": \"浙江省\",\n        \"city\": \"杭州市\",\n        \"type\": \"家具\",\n        \"sub_type\": \"沙发\"\n    }, {\n        \"price\": 4,\n        \"province\": \"浙江省\",\n        \"city\": \"绍兴市\",\n        \"type\": \"家具\",\n        \"sub_type\": \"沙发\"\n    }]\n};\nconst options = {\n    width: 800,\n    height: 600\n};\n\n<SheetComponent\n  dataCfg={dataCfg}\n  options={options}\n  sheetType=\"table\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Row Headers in Pivot Table\nDESCRIPTION: Configuration for custom row headers in a pivot table with rows using custom tree structure and columns using type and sub_type fields.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: customTree,\n    columns: ['type', 'sub_type'],\n    values: ['measure-1', 'measure-2'],\n    valueInCols: false,\n  },\n  data,\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Sort Confirmation Handler\nDESCRIPTION: Example showing how to handle sort confirmation events by implementing the onSortConfirm callback\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/advanced.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n<AdvancedSort\n  onSortConfirm={(ruleValues, sortParams) => {\n    setDataCfg({ ...dataCfg, sortParams });\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Adjusting Select All API Logic in TypeScript\nDESCRIPTION: Changes the behavior of selectAll to perform actual selection instead of just highlighting.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_26\n\nLANGUAGE: diff\nCODE:\n```\ns2.interaction.selectAll()\n- s2.interaction.getActiveCells() // []\n+ s2.interaction.getActiveCells() // [CellA, CellB]\n```\n\n----------------------------------------\n\nTITLE: Fixing onDestroy Event Trigger\nDESCRIPTION: Bug fix for the table's onDestroy event not being triggered properly when the component is unmounted.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n* 修复表格 onDestroy 卸载事件无法触发 ([#1733](https://github.com/antvis/S2/issues/1733)) ([2195f1a](https://github.com/antvis/S2/commit/2195f1aec681085ec32ee1446b780e00af901c47))\n```\n\n----------------------------------------\n\nTITLE: Setting S2 Options\nDESCRIPTION: Configuration options for S2 table dimensions\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/README.en-US.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 600,\n}\n```\n\n----------------------------------------\n\nTITLE: 转换维度值（JavaScript）\nDESCRIPTION: 展示了如何从原始数据中提取行列维度的值，用于后续的数据索引建立。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/pivot.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nconst rowDimensionValues = transformDimensionsValues(data, ['province', 'city']); // 结果是 ['浙江省', '绍兴市']\nconst colDimensionValues = transformDimensionsValues(data, ['type', 'sub_type']); // 结果是 ['家具', '沙发']\n```\n\n----------------------------------------\n\nTITLE: Field Marking Configuration Update\nDESCRIPTION: Expands text field marking capabilities to support additional text styling options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_19\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  conditions: {\n    text: [\n      {\n        field: 'city',\n        mapping() {\n          return {\n            fill: '#DB6BCF',\n+           fontSize: 16,\n+           opacity: 0.8,\n+           textAlign: 'right',\n          };\n        },\n      },\n    ]\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating Dimension Switcher Component Import in S2\nDESCRIPTION: Shows the change in import path for the Switcher component, which has been moved to a different package.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_48\n\nLANGUAGE: diff\nCODE:\n```\n- import { Switcher } from '@antv/s2-react';\n+ import { Switcher } from '@antv/s2-react-components';\n```\n\n----------------------------------------\n\nTITLE: Implementing Corner Header Column Selection in TypeScript\nDESCRIPTION: Adds support for selecting the corresponding row header column when clicking on a corner header.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_14\n\nLANGUAGE: TypeScript\nCODE:\n```\n**interaction:** 点击角头后支持选中所对应那一列的行头 close [#2073](https://github.com/antvis/S2/issues/2073) ([#2081](https://github.com/antvis/S2/issues/2081)) ([ad2b5d8](https://github.com/antvis/S2/commit/ad2b5d87edf4c529d7c9a5e1348e893e14547ef3))\n```\n\n----------------------------------------\n\nTITLE: Modifying Empty Data Placeholder Configuration in TypeScript\nDESCRIPTION: Updates the structure for configuring empty data placeholders, separating cell and empty state configurations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_32\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n- placeholder: \"-\",\n+ placeholder: {\n+   cell: '-'\n+ }\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding Sheet Component API Documentation in Markdown\nDESCRIPTION: Markdown code that embeds external API documentation for sheet components using a custom embed tag.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/case/kpi-strategy/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/components/sheet-component.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Adding Hover Event for Hidden Column Expand Button\nDESCRIPTION: Implements a new hover event for the expand button of hidden columns.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* 新增隐藏列展开按钮hover事件 ([#3105](https://github.com/antvis/S2/issues/3105)) ([89d4b85](https://github.com/antvis/S2/commit/89d4b851009b5c54dee5ced61c6130e871b4c8c6))\n```\n\n----------------------------------------\n\nTITLE: Installing S2 Package\nDESCRIPTION: Package installation commands using different package managers (pnpm, yarn, npm)\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/README.en-US.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm add @antv/s2\n# yarn add @antv/s2\n# npm install @antv/s2 --save\n```\n\n----------------------------------------\n\nTITLE: Disabling High-Definition Adaptation in S2 Options\nDESCRIPTION: This snippet shows how to disable the default high-definition adaptation in S2 options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/hd-adapter.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hd: false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Row and Column Freezing in TableSheet\nDESCRIPTION: Implementation of row and column freezing functionality that allows specific rows and columns to remain visible during scrolling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/table-mode.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  frozen: {\n    rowCount: number; // 冻结行的数量，从顶部开始计数\n    trailingRowCount: number; // 冻结行数量，从底部开始计数\n    colCount: number; // 冻结列的数量，从左侧开始计数\n    trailingColCount: number; // 冻结列的数量，从右侧开始计数\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Vue SheetComponent Event Usage Example\nDESCRIPTION: Basic example of how to bind an event to the Vue SheetComponent. This shows the syntax for binding a rowCellClick event handler to the component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/sheet-component.en.md#2025-04-22_snippet_2\n\nLANGUAGE: Vue\nCODE:\n```\n<SheetComponent @rowCellClick=\"handleRowCellClick\" />\n```\n\n----------------------------------------\n\nTITLE: Programmatically Marking Field Data with S2\nDESCRIPTION: Shows how to programmatically mark field data using the sheet instance's interaction methods. The example demonstrates marking a row by its ID.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/analysis/conditions/index.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// 通过 sheet 实例进行标记\ns2.interaction.addIntercepts(\n  [InteractionKeyboardKey.MARK],\n  {\n    action: () => {\n      // rowId 透视表行头单元格 id, 多维分析表数值单元格 id, 行政区划 id\n      s2.interaction.marks.addMark({\n        type: MarkNodeType.Row,\n        ids: ['city-abc'],\n      });\n    },\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Forwarding S2 Instance in Custom Vue Components\nDESCRIPTION: Example of using the useExpose utility to forward the S2 instance when creating custom wrapper components in Vue. This allows parent components to access the instance through refs.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-instance.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\n//  二次封装组件\nexport default defineComponent({\n  name: 'YourSheet',\n  props: [] as unknown as BaseSheetInitProps,\n  emits: [] as unknown as BaseSheetInitEmits,\n  setup(props, ctx) {\n    const s2Ref = useExpose(ctx.expose);\n    return { s2Ref };\n  },\n  components: {\n    BaseSheet,\n  },\n});\n</script>\n<template>\n  <SheetComponent ref=\"s2Ref\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Setting Tree Layout Mode with Node Collapse\nDESCRIPTION: Configuration for tree layout mode with custom node collapse settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      collapseFields: {\n        'custom-node-1': true,\n        'custom-node-2': false,\n      },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Export Component in S2\nDESCRIPTION: Shows how the 'icon' property has been removed and replaced with support for custom children elements.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_52\n\nLANGUAGE: diff\nCODE:\n```\n- <Export icon={<MoreOutlined/> } />\n+ <Export><Button type=\"text\"><MoreOutlined /></Button></Export>\n```\n\n----------------------------------------\n\nTITLE: Configuring KPI Trend Table Data Structure in JavaScript\nDESCRIPTION: Defines the data structure for a KPI trend table, including dimensions, measures, and KPI indicators. The structure includes time periods, departments, and various KPI metrics.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/case/kpi-strategy/index.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type', 'subType'],\n    values: ['number'],\n  },\n  data: [\n    {\n      province: '浙江',\n      city: '杭州',\n      type: '家具',\n      subType: '桌子',\n      number: 1,\n    },\n    {\n      province: '浙江',\n      city: '杭州',\n      type: '家具',\n      subType: '沙发',\n      number: 2,\n    },\n    {\n      province: '浙江',\n      city: '杭州',\n      type: '办公用品',\n      subType: '笔',\n      number: 3,\n    },\n    {\n      province: '浙江',\n      city: '杭州',\n      type: '办公用品',\n      subType: '纸张',\n      number: 4,\n    },\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Customizing Image Preview Theme in S2 for TypeScript\nDESCRIPTION: This code snippet demonstrates how to customize the theme for image previews in S2. It allows modifying the overlay background color and media container height.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/image.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ns2.setTheme({\n    preview: {\n      overlay: {\n        backgroundColor: 'red',\n      },\n      mediaContainer: {\n        height: '100px',\n      },\n    },\n  });\n```\n\n----------------------------------------\n\nTITLE: Fixing canvas mouseout detection in JavaScript\nDESCRIPTION: Corrects an error in detecting mouseout events on canvas elements.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\ncanvas mouseout 判断错误\n```\n\n----------------------------------------\n\nTITLE: Migrating copy export configuration\nDESCRIPTION: Shows how to update copy export configuration by moving settings under interaction.copy and adding the new customTransformer property.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  interaction: {\n-   enableCopy: true,\n-   copyWithHeader: true,\n-   copyWithFormat: true\n\n+   copy: {\n+     enable: true,\n+     withHeader: true,\n+     withFormat: true,\n+     customTransformer: () => {}\n+   },\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating tree row width configuration\nDESCRIPTION: Updates the tree rows width configuration by renaming treeRowsWidth to rowCell.treeWidth.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_16\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'tree',\n  style: {\n-   treeRowsWidth: 200\n+   rowCell: {\n+     treeWidth: 200,\n+   }\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding External Markdown Content in API Documentation\nDESCRIPTION: Embeds an external markdown file containing switcher component API documentation using the embed HTML tag.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/react-component/switcher/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/components/switcher.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Fixing Canvas Mouse Out Detection in TypeScript\nDESCRIPTION: Fixes an issue with incorrect mouse out detection on canvas elements.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\ncanvas mouseout 判断错误 ([#2181](https://github.com/antvis/S2/issues/2181)) ([16c0b82](https://github.com/antvis/S2/commit/16c0b824aef16d109e8db8d2fe6b3a25a413dcfa))\n```\n\n----------------------------------------\n\nTITLE: Documenting Width and Height Drag Adjustment Events in AntV S2 (Markdown)\nDESCRIPTION: This snippet lists events related to resizing and adjusting cell dimensions in the AntV S2 library, including general layout resizing, series width changes, and specific header size modifications.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-event.en.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Width and height drag adjustment\n\n| name                              | event name                           | describe                                                                                  |\n| --------------------------------- | ------------------------------------ | ----------------------------------------------------------------------------------------- |\n| cell adjustment                   | `S2Event.LAYOUT_RESIZE`              | Cell width and height change                                                              |\n| Ordinal column width changed      | `S2Event.LAYOUT_RESIZE_SERIES_WIDTH` | Ordinal column width changed                                                              |\n| Mouse down when resizing a cell   | `S2Event.LAYOUT_RESIZE_MOUSE_DOWN`   | Adjust the cell size by pressing the mouse, currently only the row/column header is valid |\n| Mouse movement when resizing cell | `S2Event.LAYOUT_RESIZE_MOUSE_MOVE`   | Adjust the cell size and move the mouse, currently only the row/column header is valid    |\n| Mouse up when resizing a cell     | `S2Event.LAYOUT_RESIZE_MOUSE_UP`     | Adjust the cell size and release the mouse, currently only the row/column header is valid |\n| Header width changes              | `S2Event.LAYOUT_RESIZE_ROW_WIDTH`    |                                                                                           |\n| line head height change           | `S2Event.LAYOUT_RESIZE_ROW_HEIGHT`   |                                                                                           |\n| Column header width changes       | `S2Event.LAYOUT_RESIZE_COL_WIDTH`    |                                                                                           |\n| column header height change       | `S2Event.LAYOUT_RESIZE_COL_HEIGHT`   |                                                                                           |\n| Tree structure width changes      | `S2Event.LAYOUT_RESIZE_TREE_WIDTH`   | Triggered when the cell width changes in tree mode                                        |\n```\n\n----------------------------------------\n\nTITLE: Exporting HTML Format Data in React Component\nDESCRIPTION: Enables copying data in HTML format (text/html) in the export component.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst exportOptions = {\n  copyFormat: 'html'\n};\n\n<S2 exportCfg={exportOptions} />\n```\n\n----------------------------------------\n\nTITLE: Granular Vue Component Adaptation Configuration\nDESCRIPTION: Examples of configuring width and height adaptation separately in the S2 Vue component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.zh.md#2025-04-22_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\n<template>\n  <SheetComponent\n    :dataCfg=\"your-dataCfg\"\n    :options=\"your-options\"\n    :adaptive=\"{ width: true, height: true }\"\n  />\n  <SheetComponent\n    :dataCfg=\"your-dataCfg\"\n    :options=\"your-options\"\n    :adaptive=\"{ width: false, height: false }\"\n  />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Handling Link Click Events in S2\nDESCRIPTION: Implementation of the link click event handler using S2Event.GLOBAL_LINK_FIELD_JUMP. Shows how to listen for and handle link field interactions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/link-jump.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { S2Event } from '@antv/s2'\n\ns2.on(S2Event.GLOBAL_LINK_FIELD_JUMP, (data) => {\n  const { key, record } = data;\n  ...\n});\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontend Matter\nDESCRIPTION: YAML frontmatter defining the page title and order in navigation\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/react-component/drill-down/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: DrillDwon\norder: 2\n---\n```\n\n----------------------------------------\n\nTITLE: Updating Dataset Query Field Type in TypeScript\nDESCRIPTION: Changes the query field type from 'string' to 'CustomTreeNode | string' for various dataset methods.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_21\n\nLANGUAGE: diff\nCODE:\n```\n- s2.dataSet.getField(field: string)\n- s2.dataSet.getFieldMeta(field: string)\n- s2.dataSet.getFieldName(field: string)\n- s2.dataSet.getFieldFormatter(field: string)\n\n+ s2.dataSet.getField(field: CustomTreeNode | string)\n+ s2.dataSet.getFieldMeta(field: CustomTreeNode | string)\n+ s2.dataSet.getFieldName(field: CustomTreeNode | string)\n+ s2.dataSet.getFieldFormatter(field: CustomTreeNode | string)\n```\n\n----------------------------------------\n\nTITLE: Updating External Dependency Handling with Regex in JavaScript\nDESCRIPTION: This change updates the handling of external dependencies using regular expressions, addressing issue #304.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\n* update external using regex ([#304](https://github.com/antvis/S2/issues/304)) ([c40d3cc](https://github.com/antvis/S2/commit/c40d3cc6d37395b9c45d6ee2720126a2a1c8a87d))\n```\n\n----------------------------------------\n\nTITLE: Serial Number Configuration Update\nDESCRIPTION: Consolidates serial number related configurations under a single seriesNumber object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_20\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n- showSeriesNumber: true,\n- seriesNumberText: 'No.'\n\n+ seriesNumber: {\n+   enable: true,\n+   text: 'No.'\n+ }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating G renderer type definition in TypeScript\nDESCRIPTION: Fixes incorrect type definitions for the G renderer.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\n修复 g renderer 的错误类型定义\n```\n\n----------------------------------------\n\nTITLE: Setting fixed background color\nDESCRIPTION: Feature implementation for setting fixed background colors in the visualization.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_27\n\nLANGUAGE: Markdown\nCODE:\n```\n固定背景色 ([3c24dad](https://github.com/antvis/S2/commit/3c24dadd93409c648aa417ee0e261c744a016081))\n```\n\n----------------------------------------\n\nTITLE: Customizing Derived Metrics in StrategySheet\nDESCRIPTION: Reference to supporting custom derived metrics in strategy sheets, part of a feature addition in the S2 project.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n* **strategysheet:** 支持自定义衍生指标 ([#1762](https://github.com/antvis/S2/issues/1762)) ([97e5124](https://github.com/antvis/S2/commit/97e512404bd5d171c581a53c92d130ef15e9e907))\n```\n\n----------------------------------------\n\nTITLE: Calculating Cell Width for S2 Pivot Table in TypeScript\nDESCRIPTION: Algorithm for calculating cell width based on row and column dimensions, canvas size, and user configuration. The calculated width is used to position nodes in the pivot table layout.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/layout/pivot.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst cellWidth = calcCellWidth(); // 行、列 单元格宽度\n\n// 计算单元格宽度\nfunction calcCellWidth() {\n    const rowHeaderColSize = rows.length; // [province, city]，结果是 2\n    const colHeaderColSize = colLeafNodes.length; // 列叶子节点，结果是 2\n    const { width } = this.getCanvasSize(); // 画布宽度\n    const size = Math.max(1, rowHeaderColSize + colHeaderColSize); // 行+列 总数量，结果是 4\n    return Math.max(dataCell.width, canvasW / size); // 用户配置的宽度和计算宽度取最大值\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter block defining the page title and order in documentation.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-plugins/API.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: API\norder: 10\n---\n```\n\n----------------------------------------\n\nTITLE: Adjusting Total Nodes Coordinate in JavaScript\nDESCRIPTION: This code snippet handles a special case for subtotal root nodes. If the multiple value is 0 for a subtotal node, it calculates a new multiple value based on the nearest upper level's multiple minus the level difference.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/src/facet/README-adjustTotalNodesCoordinate.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// 小计根节点若为 0，则改为最近上级倍数 - level 差\nif (!multiple && isSubTotal) {\n    let lowerLevelIndex = 1;\n\n    while (multiple < 1) {\n        multiple =\n        multipleMap[node.level - lowerLevelIndex] - lowerLevelIndex;\n        lowerLevelIndex++;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Destroying Tooltip\nDESCRIPTION: Method to destroy the tooltip component completely.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n() => void\n```\n\n----------------------------------------\n\nTITLE: Creating Custom String Content for Tooltips in Core S2\nDESCRIPTION: Shows how to create custom tooltip content using HTML strings in the core S2 library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    content: `\n      <div>\n        <div>我是自定义内容</div>\n        <p>我也是是自定义内容</p>\n      </div>\n    `\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Overriding Default Icons in S2 (TypeScript)\nDESCRIPTION: This snippet shows how to override default icons in S2, specifically for tree collapse and expand icons (Plus and Minus).\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-icon.en.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  customSVGIcons: [\n    {\n      name: 'Plus',\n      src: 'https://gw.alipayobjects.com/zos/antfincdn/kXgP1pnClS/plus.svg',\n    },\n    {\n      name: 'Minus',\n      src: 'https://gw.alipayobjects.com/zos/antfincdn/2aWYZ7%26rQF/minus-circle.svg',\n    },\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Selecting Cells in AntV S2 with TypeScript\nDESCRIPTION: Demonstrates how to programmatically select a cell in an AntV S2 table. This example retrieves the first row cell and changes its state to selected.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/highlight-and-select-cell.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst targetCell = s2.facet.getRowCell()[0]\ns2.interaction.selectCell(targetCell)\n\ns2.interaction.getCurrentStateName() // \"selected\"\n```\n\n----------------------------------------\n\nTITLE: Supporting Ctrl key for multi-selection\nDESCRIPTION: Implementation of Ctrl key support for multi-selection of row and column headers.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_30\n\nLANGUAGE: Markdown\nCODE:\n```\n行列头多选支持 Ctrl 键 ([#1207](https://github.com/antvis/S2/issues/1207)) ([bf9c11b](https://github.com/antvis/S2/commit/bf9c11b0863153fd86d07a72fc5c96d0408d216b))\n```\n\n----------------------------------------\n\nTITLE: Installing @antv/s2 v1.9.1\nDESCRIPTION: Command to install version 1.9.1 of @antv/s2 package\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_37\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2@1.9.1\n```\n\n----------------------------------------\n\nTITLE: Enhanced Header Icons Configuration in S2 2.0\nDESCRIPTION: Shows the new enhanced header icon configuration with individual settings for position, fill color, and display conditions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_13\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  headerActionIcons: [\n    {\n+     icons: [{\n+       name: 'SortDown',\n+       position: 'right',\n+       fill: '#000',\n+       displayCondition: () => {},\n+       defaultHide: () => {},\n+     }]\n    },\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding External Markdown Document in API Documentation\nDESCRIPTION: This code snippet embeds an external markdown file containing information about advanced adaptive features of the S2 library into the current API documentation page.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/adaptive/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/manual/advanced/adaptive.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Tooltip in S2 Options\nDESCRIPTION: This code snippet shows how to override the default tooltip and use a custom tooltip class in the S2 options configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n   tooltip: {\n     enable: true,\n     render: (spreadsheet: SpreadSheet) => new CustomTooltip(spreadsheet),\n   },\n}\n```\n\n----------------------------------------\n\nTITLE: Version Tag Reference for Version 1.0.3\nDESCRIPTION: Git version tag reference showing comparison between versions 0.1.1 and 1.0.3\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n## [1.0.3](https://github.com/antvis/S2/compare/v0.1.1...v1.0.3) (2021-11-24)\n```\n\n----------------------------------------\n\nTITLE: Adding Russian Language Support in i18n\nDESCRIPTION: Adds support for the Russian language in internationalization.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { i18n } from '@antv/s2';\n\ni18n.set('ru_RU', {\n  // Russian translations\n});\n```\n\n----------------------------------------\n\nTITLE: Fixing Custom Column Header Prefix Display Issue in Detail Table\nDESCRIPTION: Fixes an issue where custom column header prefixes were displaying abnormally in detail tables.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n* 明细表自定义列头prefix重复展示异常 ([#3142](https://github.com/antvis/S2/issues/3142)) ([986bdc2](https://github.com/antvis/S2/commit/986bdc254902162ec27803375377e585bbbd9dfd))\n```\n\n----------------------------------------\n\nTITLE: Data Cell Style Configuration in TypeScript\nDESCRIPTION: Configuration for setting data cell dimensions including width and height.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-collapse-nodes.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    dataCell: {\n      width: 100,\n      height: 90\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding S2 Options API Documentation\nDESCRIPTION: Markdown embed directive to include external S2 options API documentation file.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-dataset/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/general/s2-options.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration\nDESCRIPTION: YAML frontmatter block defining the page title as 'API' and setting the order to 11 in the documentation hierarchy.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-shape-and-chart/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: API\norder: 11\n---\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Name Display\nDESCRIPTION: Demonstrates how to modify the name display in tooltips, particularly useful for truncated cell content\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_25\n\nLANGUAGE: tsx\nCODE:\n```\ninstance.showTooltip = (tooltipOptions) => {\n  const { data } = tooltipOptions;\n  const name = `${data.name} - test`;\n  instance.tooltip.show({ ...tooltipOptions, data: { ...data, name: data.name ? name : '' } });\n};\n```\n\n----------------------------------------\n\nTITLE: Setting S2 Theme Configuration\nDESCRIPTION: Demonstrates two different approaches to configure themes in S2: setting the complete theme configuration with schema, palette, and name, or individually setting specific theme aspects like cell styling.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-theme.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// 统一设置主题 Schema, 色板，名称\ns2.setThemeCfg({\n  theme: {},\n  palette: {},\n  name: \"default\"\n});\n\n// 单独设置主题 Schema, 配置单元格背景，文字大小，文字颜色\ns2.setTheme({\n  rowCell: {\n    cell: {\n      backgroundColor: \"#fff\"\n    }\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Feature Release Documentation\nDESCRIPTION: Markdown formatted changelog entries documenting new features, enhancements and fixes added to the S2 framework including header customizations, pagination controls, drill-down capabilities and sorting functionality\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_38\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* :sparkles: add column header labels for the corner header ([#320](https://github.com/antvis/S2/issues/320)) ([1b87bda](https://github.com/antvis/S2/commit/1b87bda6e6c2decfbd60c975d78afbcf5f0eb400))\n* :sparkles: allow users to set different display condition for headerActionIcons ([#352](https://github.com/antvis/S2/issues/352)) ([9375f2b](https://github.com/antvis/S2/commit/9375f2b8e594355b2e456fb18910085139f76932))\n* :sparkles: init examples gallery for the site ([#280](https://github.com/antvis/S2/issues/280)) ([891ce39](https://github.com/antvis/S2/commit/891ce391e5009384a34b7b91ee3507f8c1cae708))\n* ✨ add custom header action icons ([#331](https://github.com/antvis/S2/issues/331)) ([4dcb1a2](https://github.com/antvis/S2/commit/4dcb1a2344783c8df283071bee1f8b07988b9b01))\n* ✨ enable users to set the page size of the pagination configuration and close [#302](https://github.com/antvis/S2/issues/302) ([#309](https://github.com/antvis/S2/issues/309)) ([e5e961e](https://github.com/antvis/S2/commit/e5e961e306092c7ebabefa782a7ea54324656018))\n* ✨ part drill down based on the new data process ([#399](https://github.com/antvis/S2/issues/399)) ([6a8889b](https://github.com/antvis/S2/commit/6a8889be5c47c49f335528548b3289577e0bd175))\n```\n\n----------------------------------------\n\nTITLE: Embedding Sheet Component API Documentation in Markdown\nDESCRIPTION: Markdown embed syntax used to include an external API documentation file for sheet components. The path references a markdown file located at @/docs/api/components/sheet-component.en.md.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/react-component/sheet/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/components/sheet-component.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Displaying Changelog Entries in Markdown\nDESCRIPTION: This snippet shows the format used to display changelog entries, including emojis, issue links, and commit hashes.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_23\n\nLANGUAGE: markdown\nCODE:\n```\n* :art: only show the header cell tooltip when the text is omitted ([#633](https://github.com/antvis/S2/issues/633)) ([ad785db](https://github.com/antvis/S2/commit/ad785dbbaba3547f47d0d6390d5f1f3958165d86))\n```\n\n----------------------------------------\n\nTITLE: Feature - Keyboard Selection Move Event\nDESCRIPTION: Prevent keyboard move behavior when canvas is not focused\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\ncanvas 未聚焦时不触发选中格子的键盘 move 行为 ([#1415](https://github.com/antvis/S2/issues/1415))\n```\n\n----------------------------------------\n\nTITLE: Header Action Icon Props Type Definition\nDESCRIPTION: Type definition for the properties returned when a custom header icon is clicked, including icon name, cell metadata, and event information.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/header-action-icon.en.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| parameter | Functional description                   | type   | Defaults | required |\n| --------- | ---------------------------------------- | ------ | -------- | -------- |\n| iconName  | The name of the currently clicked icon   | string |          | ✓        |\n| meta      | The meta information of the current cell | node   |          | ✓        |\n| event     | Current click event information          | event  | false    | ✓        |\n```\n\n----------------------------------------\n\nTITLE: Commit References\nDESCRIPTION: Collection of Git commit hashes and issue references showing changes made to the codebase\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_24\n\nLANGUAGE: text\nCODE:\n```\ncf002e80d1ed111e470edee5d7c70ea2d50daf16\n5235afca9bf0ddc774695741b8aa4fff469e8fa5\na1810b94e48792ae4399c155e33573fa72ec0e0e\n```\n\n----------------------------------------\n\nTITLE: Updating TypeScript Declaration File Path in JavaScript\nDESCRIPTION: This update modifies the path for TypeScript declaration files, addressing issue #319.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\n* update d.ts path ([#319](https://github.com/antvis/S2/issues/319)) ([4117fa5](https://github.com/antvis/S2/commit/4117fa5bc3a23956f6e61cf0284cdd11356f7e39))\n```\n\n----------------------------------------\n\nTITLE: Including S2 Stylesheet\nDESCRIPTION: Shows how to include the required CSS stylesheet for S2 components when using React or Vue3 versions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/browser.en.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\" href=\"./dist/style.min.css\"/>\n```\n\n----------------------------------------\n\nTITLE: Updating SheetComponents Interface Name in S2\nDESCRIPTION: Shows the interface name change from SheetComponentsProps to SheetComponentProps.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_67\n\nLANGUAGE: diff\nCODE:\n```\n- interface SheetComponentsProps {}\n+ interface SheetComponentProps {}\n```\n\n----------------------------------------\n\nTITLE: Migrating high-definition display configuration\nDESCRIPTION: Updates the high-definition display adapter configuration from hdAdapter to hd.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_21\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n-  hdAdapter: true,\n+  hd: true,\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding S2 Theme API Documentation in Markdown\nDESCRIPTION: This snippet embeds the S2 theme API documentation from an external markdown file into the current document. It uses a custom embed syntax to include the content.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/theme/custom/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/general/s2-theme.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Pagination Frontmatter in Markdown\nDESCRIPTION: YAML frontmatter block defining the title and order for a pagination documentation page.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/react-component/pagination/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Pagination\norder: 0\n---\n```\n\n----------------------------------------\n\nTITLE: Initializing HTML Container for S2 Table\nDESCRIPTION: Creates a div element with id 'container' to hold the S2 table component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/table-mode.en.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\" />\n```\n\n----------------------------------------\n\nTITLE: Sample Data with Line Breaks for S2 Charts (JSON)\nDESCRIPTION: This JSON snippet represents sample data with line breaks (\\n) in various fields, demonstrating how S2 can handle multi-line text input.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/multi-line-text.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"province\": \"浙江\\n浙江\",\n  \"city\": \"杭州\\n杭州\\n杭州\",\n  \"type\": \"纸张\\n纸张\\n纸张\",\n  \"price\": 2,\n  \"cost\": 20,\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HD Adaptation in S2\nDESCRIPTION: Basic configuration to disable the default HD adaptation feature in S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/hd-adapter.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  hd: false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Options for Table Dimensions\nDESCRIPTION: TypeScript configuration for S2 table options, setting the display width and height dimensions for the table component.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-vue/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst rawOptions: S2Options = {\n  width: 600,\n  height: 480,\n};\n```\n\n----------------------------------------\n\nTITLE: React Component Adaptive Configuration Type Definition\nDESCRIPTION: TypeScript type definition for the adaptive configuration parameter in the S2 React component. Allows for boolean shortcuts or granular control over width/height adaptation and container selection.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ntype Adaptive =\n  | boolean\n  | {\n      width?: boolean;\n      height?: boolean;\n      getContainer?: () => HTMLElement;\n    }\n```\n\n----------------------------------------\n\nTITLE: Fixing Tooltip Right Position Calculation in JavaScript\nDESCRIPTION: This update corrects the calculation for keeping the tooltip in the right position, addressing issue #436.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\n* **tooltip:** custom tooltip keep right position wrong calc ([#436](https://github.com/antvis/S2/issues/436)) ([88fe05e](https://github.com/antvis/S2/commit/88fe05e7241e38e817ec60ddc40ef63315dbb3be))\n```\n\n----------------------------------------\n\nTITLE: Adding theme color palette generation\nDESCRIPTION: Feature that adds the ability to generate themed color palettes based on a main theme color.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_28\n\nLANGUAGE: Markdown\nCODE:\n```\n# 增加根据主题色生成对应主题风格色板功能 ([9928227](https://github.com/antvis/S2/commit/992822784d65611eed2a1aa80d685e1b0a6d48c3))\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Mount Node in HTML and TypeScript\nDESCRIPTION: Shows how to specify a custom mount location for tooltips instead of the default body element.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"container\"/>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n   tooltip: {\n     getContainer: () => document. querySelector('.container')\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Fixing Interval Scale Division by Zero Error\nDESCRIPTION: Prevents a division by zero error when calculating interval scales.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n* 避免getIntervalScale除0异常 ([#3115](https://github.com/antvis/S2/issues/3115)) ([cdecc07](https://github.com/antvis/S2/commit/cdecc07bec9a7640575f43e4786642bda0c35ceb))\n```\n\n----------------------------------------\n\nTITLE: Starting Visual Unit Test Debugging in AntV S2 Project\nDESCRIPTION: Commands to initiate visual debugging of unit tests using Jest-Electron for the core and react components of the AntV S2 project.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/__tests__/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm core:start\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm react:start\n```\n\n----------------------------------------\n\nTITLE: Importing S2 Vue Styles\nDESCRIPTION: Import statement for including the required S2 Vue component styles.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/getting-started.en.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport \"@antv/s2-vue/dist/s2-vue.min.css\";\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Front Matter for KPI Strategy Documentation\nDESCRIPTION: This snippet defines the front matter for a markdown file, specifying the title as 'KPI Strategy' and setting the order to 3. This is commonly used in static site generators to organize and structure documentation.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/case/kpi-strategy/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: KPI Strategy\norder: 3\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Basic HTML Container for Pivot Table\nDESCRIPTION: Sets up a basic HTML container element to render the pivot table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\" />\n```\n\n----------------------------------------\n\nTITLE: 初始化S2透视表配置和数据（React TSX）\nDESCRIPTION: 展示了如何配置S2透视表的数据和选项，包括字段定义、原始数据和基本选项设置。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/pivot.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst dataCfg = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type', 'sub_type'],\n    values: ['price'],\n  },\n  data: [\n    {\n      price: 1,\n      province: '浙江省',\n      city: '杭州市',\n      type: '家具',\n      sub_type: '桌子',\n    },\n    {\n      price: 2,\n      province: '浙江省',\n      city: '绍兴市',\n      type: '家具',\n      sub_type: '桌子',\n    },\n    {\n      price: 3,\n      province: '浙江省',\n      city: '杭州市',\n      type: '家具',\n      sub_type: '沙发',\n    },\n    {\n      price: 4,\n      province: '浙江省',\n      city: '绍兴市',\n      type: '家具',\n      sub_type: '沙发',\n    },\n  ]\n};\n\nconst options = {\n    width: 600,\n    height: 600\n};\n\n<SheetComponent\n  dataCfg={dataCfg}\n  options={options}\n  sheetType=\"pivot\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Defining S2MountContainer Type in TypeScript\nDESCRIPTION: Defines the S2MountContainer type which can be either a string selector or an HTMLElement. This type is used to specify where the S2 table should be mounted in the DOM.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\ntype S2MountContainer = string | HTMLElement;\n```\n\n----------------------------------------\n\nTITLE: Embedding API Documentation in Markdown\nDESCRIPTION: Uses an embed tag to include sheet component API documentation from another markdown file. This is a common pattern in documentation systems to modularize and reuse content.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/case/data-preview/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/components/sheet-component.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Configuring Antd Multi-version Coexistence with NPM in S2\nDESCRIPTION: Shows how to configure package.json to support both antd 4.x and 5.x versions simultaneously.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_62\n\nLANGUAGE: json\nCODE:\n```\n// $ npm install --save antd-v5@npm:antd@5\n{\n  \"antd\": \"4.x\",\n  \"antd-v5\": \"npm:antd@5\"\n}\n```\n\n----------------------------------------\n\nTITLE: Bug Fix Entry in Markdown\nDESCRIPTION: Changelog entry documenting a bug fix with issue reference\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react-components/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* 构建产物编译到 es2015 close [#3025](https://github.com/antvis/S2/issues/3025) ([#3026](https://github.com/antvis/S2/issues/3026))\n```\n\n----------------------------------------\n\nTITLE: Embedding Common Interaction Documentation in Markdown\nDESCRIPTION: This snippet embeds a markdown file containing common interaction documentation for the AntV S2 project. It uses the <embed> tag to include external content within the current markdown file.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/interaction/advanced/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/interaction.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Resetting S2 Configuration Options\nDESCRIPTION: Shows how to reset options for an S2 spreadsheet by completely replacing previous options instead of merging, followed by re-rendering without updating data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\npivotSheet.setOptions({ ... }, true)\nawait pivotSheet.render(false) // 重新渲染，不更新数据\n```\n\n----------------------------------------\n\nTITLE: Installing AntV S2 Vue3 Version (Discontinued)\nDESCRIPTION: Command to install the core S2 library, Vue3-specific package, and Ant Design Vue 3.x using npm. Note that this version is no longer maintained after version 2.0.0.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/install.en.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2 @antv/s2-vue ant-design-vue@3.x --save\n```\n\n----------------------------------------\n\nTITLE: Supporting React Versions 16/17/18 Simultaneously\nDESCRIPTION: Enables the package to run concurrently with React versions 16, 17, and 18.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// package.json\n{\n  \"peerDependencies\": {\n    \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\",\n    \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LayoutHierarchyReturnType Interface in TypeScript\nDESCRIPTION: This snippet defines the LayoutHierarchyReturnType interface, which specifies the structure of the object returned by the LayoutHierarchy function. It includes optional properties for pushing, unshifting, or deleting nodes.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/layoutHierarchy.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LayoutHierarchyReturnType {\n  push?: Node[];\n  unshift?: Node[];\n  delete?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Updating G Renderer Type Definition in TypeScript\nDESCRIPTION: Fixes an incorrect type definition for the G renderer.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Before\ntype GRenderer = any;\n\n// After\ntype GRenderer = import('@antv/g').Renderer;\n```\n\n----------------------------------------\n\nTITLE: Adding auto-scroll support for selection dropdowns\nDESCRIPTION: Enhancement to support automatic scrolling when using selection dropdowns.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_32\n\nLANGUAGE: Markdown\nCODE:\n```\n**interaction:** 框选下拉支持自动滚动 ([#1147](https://github.com/antvis/S2/issues/1147)) ([39a860b](https://github.com/antvis/S2/commit/39a860bf8a5aea6a8f52b8035ece50c8c65ff58b))\n```\n\n----------------------------------------\n\nTITLE: Rendering S2 Vue App\nDESCRIPTION: Shows how to mount the Vue3 application with S2 components to the DOM.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/getting-started.en.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createApp } from 'vue';\nimport App from './App.vue';\n\ncreateApp(App).mount('#app');\n```\n\n----------------------------------------\n\nTITLE: Fixing Sort Menu Display on Initial Icon Click in JavaScript\nDESCRIPTION: This update resolves the issue where the sort menu wouldn't show when the icon was first clicked, addressing issue #366.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\n* **tooltip:** fix cannot show sort menu when icon first clicked ([#366](https://github.com/antvis/S2/issues/366)) ([9c800a5](https://github.com/antvis/S2/commit/9c800a55291c36fed84bbf4e393e1b4dd6576e60))\n```\n\n----------------------------------------\n\nTITLE: Defining Interaction Parameters Table in Markdown\nDESCRIPTION: This snippet defines a markdown table that lists and describes various interaction parameters for the AntV S2 project. It includes parameter names, descriptions, types, default values, and whether they are required.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/interaction.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| parameter              | illustrate                                                                                                                                                                                                                                                                                                                                                                                                | type                                                                            | Defaults                                                                                   | required  |\n| ---------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------ | --------- |\n| linkFields             | The mark field is a link style, which is used for external link jumps                                                                                                                                                                                                                                                                                                                                                     | `string[]` \\| (meta: [Node](/docs/api/basic-class/node) \\| ViewMeta) => boolean |                                                                                            |           |\n| selectedCellsSpotlight | Whether to enable the selected highlight spotlight effect                                                                                                                                                                                                                                                                                                                                                                 | `boolean`                                                                       | `false`                                                                                    |           |\n| hoverHighlight         | Highlight the current cell, and the corresponding row and column headers when the mouse hovers                                                                                                                                                                                                                                                                                                                            | `boolean`                                                                       | `true`                                                                                     |           |\n| hoverFocus             | After the mouse hovers over the current cell for more than the default 800ms, it will keep the current highlight and display the tooltip. The hovering time is controlled by setting the `duration`                                                                                                                                                                                                                       | \\`boolean\\\\                                                                     | {duration: number}\\`                                                                       | `true`    |\n| hiddenColumnFields     | It is used to configure the columns that are hidden by default. The pivot table needs to configure the unique id of the column header, and the detail table can be configured with the field field of the column header.                                                                                                                                                                                                  | `string[]`                                                                      |                                                                                            |           |\n| enableCopy             | Whether to allow copying                                                                                                                                                                                                                                                                                                                                                                                                  | `boolean`                                                                       | `false`                                                                                    |           |\n| withHeader         | Whether to copy data with header information                                                                                                                                                                                                                                                                                                                                                                              | `boolean`                                                                       | `false`                                                                                    |           |\n| withFormat         | Whether to use the field format format to copy                                                                                                                                                                                                                                                                                                                                                                            | `boolean`                                                                       | `false`                                                                                    |           |\n| customInteractions     | Customize interaction [details](/docs/manual/advanced/interaction/custom)                                                                                                                                                                                                                                                                                                                                                 | [CustomInteraction\\[\\]](#custominteraction)                                     |                                                                                            |           |\n| scrollSpeedRatio       | Used to control the scroll rate, divided into horizontal and vertical directions, the default is 1                                                                                                                                                                                                                                                                                                                        | [ScrollSpeedRatio](#scrollspeedratio)                                           |                                                                                            |           |\n| autoResetSheetStyle    | Used to control whether to reset the interactive state when clicking the area outside the table and pressing the esc key                                                                                                                                                                                                                                                                                                  | `boolean`                                                                       | `true`                                                                                     |           |\n| resize                 | Used to control whether the resize hotspot is displayed                                                                                                                                                                                                                                                                                                                                                                   | `boolean` \\\\                                                                    | [ResizeInteractionOptions](#resizeinteractionoptions)                                      | `true`    |\n| brushSelection         | Whether to allow cells (including row headers, column headers, and value cells) to be selected. Row header, column header selection only supports pivot tables                                                                                                                                                                                                                                                            | `boolean` \\\\                                                                    | [Brush Selection](#brushSelection)                                                         | `true`    |\n```\n\n----------------------------------------\n\nTITLE: Embedding Base-data-set Documentation in Markdown\nDESCRIPTION: This snippet embeds the BaseDataSet class documentation from another Markdown file located at '@/docs/api/basic-class/base-data-set.en.md'.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/analysis/get-data/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/basic-class/base-data-set.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Installing S2 with Package Managers\nDESCRIPTION: Shows how to install S2 using different package managers including npm, yarn, and pnpm.\nSOURCE: https://github.com/antvis/s2/blob/next/README.en-US.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2 --save\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @antv/s2\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @antv/s2\n```\n\n----------------------------------------\n\nTITLE: Setting Tooltip Position Adjustment in TypeScript\nDESCRIPTION: Configures automatic position adjustment for tooltips to ensure they remain within the table container or browser window.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.en.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n   tooltip: {\n     autoAdjustBoundary: \"container\" // default \"body\"\n   }\n};\n```\n\n----------------------------------------\n\nTITLE: Issue Template Code Block Example\nDESCRIPTION: Example showing how to format code within issue submissions using markdown code tags\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.en.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n`code`\n```\n\n----------------------------------------\n\nTITLE: HTML Container for S2 Table Component\nDESCRIPTION: HTML markup defining the container div where the S2 table component will be rendered. The container is targeted by the React component in the corresponding JavaScript code.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/README.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\" />\n```\n\n----------------------------------------\n\nTITLE: Creating S2 Pivot Sheet with CSS Selectors\nDESCRIPTION: Demonstrates different ways to initialize an S2 Pivot Sheet using CSS selectors to identify the mounting node.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst pivotSheet = new PivotSheet('#container', dataCfg, options);\nconst pivotSheet = new PivotSheet('.container', dataCfg, options);\nconst pivotSheet = new PivotSheet('#container > div', dataCfg, options);\nconst pivotSheet = new PivotSheet('#container > div[title=\"xx\"]', dataCfg, options);\n```\n\n----------------------------------------\n\nTITLE: Correcting Tooltip Position and Point Event in JavaScript\nDESCRIPTION: This fix addresses issues with tooltip positioning and point events, as reported in issue #574.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\n* **tooltip:** fix tooltip position and point event ([#574](https://github.com/antvis/S2/issues/574)) ([da71848](https://github.com/antvis/S2/commit/da71848aa15f495d1570bc1d529bbd10ac27f2a0))\n```\n\n----------------------------------------\n\nTITLE: Adding Row Header Scroll Selection in TypeScript\nDESCRIPTION: Implements scroll selection functionality for row headers.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_15\n\nLANGUAGE: TypeScript\nCODE:\n```\n**interaction:** 行头支持滚动刷选 ([#2087](https://github.com/antvis/S2/issues/2087)) ([65c3f3b](https://github.com/antvis/S2/commit/65c3f3b6a37709c0fa684b0f5717d3b349251e48))\n```\n\n----------------------------------------\n\nTITLE: Embedding Documentation in Markdown\nDESCRIPTION: A markdown embed directive that includes interaction-related API documentation from a common source file.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/interaction/custom/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/interaction.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Import\nDESCRIPTION: Imports a Chinese (zh) markdown documentation file containing sort parameter documentation\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/analysis/sort/API.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/sort-param.zh.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Displaying Contact QR Code in Markdown\nDESCRIPTION: This snippet embeds an HTML image tag within a Markdown file to display a QR code for a DingTalk group. The image is likely used for easy access to project communication channels.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/contact-us.en.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n---\ntitle: Contact Us\norder: 5\n---\n\n<p>\n  <a>\n    <img width=\"300\" height=\"auto\" alt=\"DingTalk\" src=\"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2VvTSZmI4vYAAAAAAAAAAAAADmJ7AQ/original\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Version Tag Reference for @antv/s2-react v1.2.0\nDESCRIPTION: Git version tag reference showing comparison between versions 1.1.1 and 1.2.0\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n# [@antv/s2-react-v1.2.0](https://github.com/antvis/S2/compare/@antv/s2-react-v1.1.1...@antv/s2-react-v1.2.0) (2021-12-06)\n```\n\n----------------------------------------\n\nTITLE: Removing Header Component in React\nDESCRIPTION: Removes the header property and related configurations from the SheetComponent.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_41\n\nLANGUAGE: diff\nCODE:\n```\n<SheetComponent\n-  header={{\n-    title: \"\",\n-    description: \"\",\n-    switcher: { open: true },\n-    export: { open: true },\n-    advancedSort: { open: true },\n-  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Running Standard Unit Tests in AntV S2 Project\nDESCRIPTION: Commands for running standard unit tests for the core and react components of the AntV S2 project.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/__tests__/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm core:test\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm react:test\n```\n\n----------------------------------------\n\nTITLE: Configuring Sort Parameters in S2 Table\nDESCRIPTION: Example of setting sort parameters to sort data by the price field in descending order, demonstrating how to control the presentation order of data in the table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/table.en.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n// dataCfg\n{\n    sortParams: [\n        {\n            sortFieldId: 'price', \n            sortMethod: 'DESC' \n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing React Analysis Components for AntV S2\nDESCRIPTION: Command for installing the React analysis components (@antv/s2-react-components) with its dependencies including the core library, Ant Design, and Ant Design icons.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/install.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2 @antv/s2-react-components antd @ant-design/icons --save\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Column Headers\nDESCRIPTION: Configuration for custom column headers with custom tree structure and type/sub_type as row fields.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-header.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    columns: customTree,\n    rows: ['type', 'sub_type'],\n    values: ['measure-1', 'measure-2'],\n    valueInCols: true,\n  },\n  data,\n};\n```\n\n----------------------------------------\n\nTITLE: Enabling Advanced Sort with Basic Configuration\nDESCRIPTION: Shows the minimal configuration needed to enable the advanced sort feature in an AntV S2 component. This snippet demonstrates the 'open' property which displays the sort button in the header.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/advanced.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nadvancedSort: {\n  open: true,\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Custom SVG Icons in S2 (TypeScript)\nDESCRIPTION: This code demonstrates how to register custom SVG icons in S2 options. It shows adding a 'Filter' icon with a custom SVG source.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-icon.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  customSVGIcons: [\n    {\n      name: 'Filter',\n      src: 'https://gw.alipayobjects.com/zos/antfincdn/gu1Fsz3fw0/filter%26sort_filter.svg',\n    },\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Adjusting Column Cell Dimensions in S2\nDESCRIPTION: Configuration for setting column cell dimensions. Column cell width adjustments apply to leaf nodes, and the width always aligns with data cell width.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-size.zh.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    colCell: {\n      width: 200,\n      height: 60,\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: SortFuncParam Interface Definition - TypeScript\nDESCRIPTION: Interface defining parameters passed to custom sorting functions. Extends SortParam with additional data field for current sorted data list.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/sort-param.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SortFuncParam extends SortParam {\n  data: Array<string | Record<string, any>>;\n}\n```\n\n----------------------------------------\n\nTITLE: Listening to Sort Events in @antv/s2\nDESCRIPTION: Shows how to register an event listener for sort operations in @antv/s2. The listener will capture the sort parameters when a range sort event occurs.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sort/group.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ns2.on(S2Event.RANGE_SORT, (sortParams) => {\n  console.log('sortParams:', sortParams)\n});\n```\n\n----------------------------------------\n\nTITLE: Defining ScrollOffsetConfig Interface in TypeScript\nDESCRIPTION: Defines the ScrollOffsetConfig interface for configuring scroll offsets in the S2 table. It includes options for row header, horizontal, and vertical offsets with animation settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ScrollOffsetConfig {\n  rowHeaderOffsetX?: {\n    value: number | undefined;\n    animate?: boolean;\n  };\n  offsetX?: {\n    value: number | undefined;\n    animate?: boolean;\n  };\n  offsetY?: {\n    value: number | undefined;\n    animate?: boolean;\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Installing React Version of AntV S2\nDESCRIPTION: Command for installing the React implementation of AntV S2 (@antv/s2-react) along with its core library dependency.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/install.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2 @antv/s2-react --save\n```\n\n----------------------------------------\n\nTITLE: Defining CellType Enum in TypeScript\nDESCRIPTION: Defines the CellType enum for specifying different types of cells in the S2 table, including data cells, row and column header cells, corner cells, and merged cells.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport enum CellType {\n  DATA_CELL = 'dataCell',  // 数值单元格\n  ROW_CELL = 'rowCell', // 行头单元格\n  COL_CELL = 'colCell', // 列头单元格\n  CORNER_CELL = 'cornerCell', // 角头单元格\n  MERGED_CELL = 'mergedCell', // 合并后的单元格\n}\n```\n\n----------------------------------------\n\nTITLE: Defining S2CellType Union Type in TypeScript\nDESCRIPTION: This snippet defines the S2CellType union type, which represents all possible cell types in the S2 grid. It includes various specific cell types and a generic BaseCell type.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-cell.en.md#2025-04-22_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport type { SimpleBBox } from '@antv/g-canvas';\n\nexport type S2CellType<T extends SimpleBBox = ViewMeta> =\n  | DataCell\n  | HeaderCell\n  | ColCell\n  | CornerCell\n  | RowCell\n  | MergedCell\n  | BaseCell<T>;\n```\n\n----------------------------------------\n\nTITLE: 使用React组件实现趋势分析表\nDESCRIPTION: 在React应用中使用SheetComponent组件创建趋势分析表的基本示例，通过配置sheetType=\"strategy\"来指定表格类型，并传入数据配置和选项配置。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/sheet/strategy.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from \"react\";\nimport { SheetComponent } from \"@antv/s2-react\";\nimport '@antv/s2-react/dist/s2-react.min.css';\n\nconst App = () => {\n  return (\n    <SheetComponent\n      sheetType=\"strategy\"\n      dataCfg={s2DataConfig}\n      options={s2Options}\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Defining S2CellType Union Type\nDESCRIPTION: Union type definition for various cell types in S2 Grid with generic type parameter.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/interaction.en.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ntype S2CellType<T extends SimpleBBox = ViewMeta> =\n  | DataCell\n  | HeaderCell\n  | ColCell\n  | CornerCell\n  | RowCell\n  | MergedCell\n  | BaseCell<T>;\n```\n\n----------------------------------------\n\nTITLE: Defining DataCell Configuration in AntV S2\nDESCRIPTION: Specifies the configuration options for data cells in an AntV S2 table, including width, height, and value display settings.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/style.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| 参数    | 说明 | 类型   | 默认值 | 必选  |\n| ------- | ------------ | ------ | ------ | ---- |\n| width   | 单元格宽度 （优先级：`colCell.widthByField > colCell.width > dataCell.width`)   | `number` |    96 | - |\n| height  | 单元格高度 （优先级：`rowCell.heightByField > rowCell.height > dataCell.height`)  | `number` |    30 | - |\n| valuesCfg  | 单元格配置   | `{ originalValueField?: string, widthPercent?: number[], showOriginalValue?: boolean }` |   | - |\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration\nDESCRIPTION: YAML front matter block defining metadata for a documentation page, including title, order number, and tag indicator\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/introduction.en.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Introduction\norder: 1\ntag: New\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Line Style Attributes in S2\nDESCRIPTION: Configuration table showing line style attributes including stroke, width, dash pattern, opacity, and shadow properties that can be applied to lines in S2.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/graphic.en.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| attribute name | type              | Functional description                                                                                                                                          |\n| -------------- | ----------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| stroke         | `string`          | Line segment color, support \\[gradient color configuration]\\(#Configure gradient color), [texture configuration](#%E9%85%8D%E7%BD%AE%E7%BA%B9%E7%90%86)         |\n| lineWidth      | `number`          | line width                                                                                                                                                      |\n| lineDash       | `[number,number]` | Line segment dotted line configuration, the first value is the length of each segment of the dotted line, and the second value is the distance between segments |\n| opacity        | `number`          | line transparency                                                                                                                                               |\n| shadowColor    | `string`          | line shadow color                                                                                                                                               |\n| shadowBlur     | `number`          | Line Segment Gaussian Blur Coefficient                                                                                                                          |\n| shadowOffsetX  | `number`          | Sets the horizontal distance of the shadow from the line segment                                                                                                |\n| shadowOffsetY  | `number`          | Sets the vertical distance of the shadow from the line segment                                                                                                  |\n| cursor         | `string`          | Mouse style. [mouse style with css](https://developer.mozilla.org/zh-CN/docs/Web/CSS/cursor)                                                                    |\n```\n\n----------------------------------------\n\nTITLE: Cell Resize Configuration Updates\nDESCRIPTION: Updates to cell resize configuration adding rowResizeType and colResizeType options\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.zh.md#2025-04-22_snippet_24\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    resize: {\n+     rowResizeType: 'current', // 'all' | 'selected'\n+     colResizeType: 'current'  // 'all' | 'selected'\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Page Header for Pivot Table Documentation\nDESCRIPTION: YAML frontmatter defining the page title and order for pivot table documentation\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/basic/pivot/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Basic pivot table\norder: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Enabling Row Header Brush Selection in S2\nDESCRIPTION: Enables the ability to select multiple row header cells by dragging (brush selection). This is disabled by default.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/basic.en.md#2025-04-22_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    brushSelection:  {\n        rowCell: true // 默认 false\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: 配置透视表列头字段示例 (TypeScript)\nDESCRIPTION: 展示如何使用s2DataConfig.fields.columns配置透视表的列头字段。这个示例将类型和子类型配置为列分析维度。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/base-concept.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    columns: ['type', 'sub_type']\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Discontinued Vue3 Version of AntV S2\nDESCRIPTION: Command for installing the Vue3 implementation of AntV S2 (@antv/s2-vue) with its dependencies. Note that this package is no longer maintained after version 2.0.0.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/install.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2 @antv/s2-vue ant-design-vue@3.x --save\n```\n\n----------------------------------------\n\nTITLE: Creating S2 Table Instance with Multi-line Text Configuration\nDESCRIPTION: This code snippet shows how to create an S2 table instance with the previously defined multi-line text configuration options. It uses the SheetComponent to render the table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/multi-line-text/index.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2 = new TableSheet(container, s2DataConfig, s2Options);\n\ns2.render();\n```\n\n----------------------------------------\n\nTITLE: Implementing DrillDown in Vue S2 Component\nDESCRIPTION: Example of implementing drilldown functionality in a Vue S2 SheetComponent with tree hierarchy structure in pivot mode.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/components/drill-down.en.md#2025-04-22_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 480,\n  hierarchyType: 'tree',\n};\n\n<template>\n <SheetComponent\n    ref=\"s2\"\n    :sheetType=\"pivot\"\n    :partDrillDown=\"partDrillDown\"\n    :options=\"s2Options\"\n  />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Link Field Logic in S2\nDESCRIPTION: Shows how to implement custom logic for determining which cells should be displayed as links, using a function to evaluate metadata and conditionally apply link styling based on cell values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/link-jump.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Node } from '@antv/s2'\n\nconst s2Options = {\n  width: 600,\n  height: 600,\n  interaction: {\n    linkFields: (meta) => {\n      // 不标记列头\n      if (meta instanceof Node) {\n        return false;\n      }\n\n      // 根据数值动态标记\n      return meta?.fieldValue === '浙江' || meta?.fieldValue >= 10;\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Sorting in S2 Detail Table\nDESCRIPTION: This snippet shows how to configure sorting in S2. It sets up sorting on the 'price' field in descending order, which will be applied to the data before display.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/table.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n// dataCfg\n{\n    sortParams: [\n        {\n            sortFieldId: 'price', \n            sortMethod: 'DESC' \n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding Sheet Component API Documentation in Markdown\nDESCRIPTION: Markdown embed directive to include the sheet component API documentation from an external markdown file. Uses relative path reference to source the content.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/case/proportion/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/components/sheet-component.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: YAML Gallery Page Configuration\nDESCRIPTION: Front matter configuration for a gallery page. Sets up the page title, order, icon and redirect rules.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/gallery/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: Gallery\norder: -1\nicon: other\nredirect_from:\n  - /en/examples\n```\n\n----------------------------------------\n\nTITLE: Git Commit Links and Issue References\nDESCRIPTION: Git commit hashes and issue references used throughout the changelog to track changes\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n[#2022](https://github.com/antvis/S2/issues/2022) ([c95c446](https://github.com/antvis/S2/commit/c95c446219216b190bf6af632104edd125a82ff3))\n```\n\n----------------------------------------\n\nTITLE: Defining MergedCellCallback Function for Custom Merged Cell Rendering in JavaScript\nDESCRIPTION: This snippet defines the signature for a callback function to customize the rendering of merged cells in the spreadsheet. It takes the spreadsheet instance, an array of cells to be merged, and view metadata, returning a MergedCell object.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-options.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nDataCellCallback = (s2: Spreadsheet, cells: S2CellType[], viewMeta: ViewMeta) => MergedCell;\n```\n\n----------------------------------------\n\nTITLE: Embedding External Markdown Content in S2 Documentation\nDESCRIPTION: This snippet demonstrates how to embed external markdown content into the current document using the embed tag. It references a common conditions file that likely contains reusable documentation content.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/analysis/conditions/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/conditions.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Configuring Data Formatting in S2DataConfig\nDESCRIPTION: Example of configuring data fields and formatting in S2DataConfig. Shows how to set up rows, columns, values, and apply custom formatting to numeric values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/copy-export.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n const s2DataConfig = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type', 'sub_type'],\n    values: ['number'],\n  },\n  meta: [\n    {\n      field: 'number',\n      name: '数量',\n      formatter: (value, record, meta) => {\n        return `${value / 100} %`\n      }\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding S2 Options API Documentation\nDESCRIPTION: HTML embed tag to include S2 options API documentation from a Markdown file\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-dataset/API.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<embed src=\"@/docs/api/general/s2-options.zh.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Embedding External Markdown Documentation\nDESCRIPTION: Uses markdown's embed syntax to import external API documentation about export functionality from a relative path.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/react-component/export/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/components/export.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Adding Interactive Icons to S2 Cells\nDESCRIPTION: Shows how to add interactive icons to specific cells using GuiIcon. This example adds a clickable trend icon to the bottom-right corner of the first data cell with an event listener for handling click interactions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/custom.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { GuiIcon } from '@antv/s2';\n\nawait s2.render();\n\nconst targetCell = s2.facet.getDataCells()[0];\n\nconst size = 12;\nconst meta = targetCell.getMeta();\n\n// 例：绘制在右下角\nconst icon = new GuiIcon({\n  x: meta.x + meta.width - size,\n  y: meta.y + meta.height - size,\n  name: 'Trend',\n  width: size,\n  height: size,\n  fill: 'red',\n});\n\nicon.addEventListener('click', (e) => {\n  console.log('trend icon click:', e);\n});\n\ntargetCell.appendChild(icon);\n```\n\n----------------------------------------\n\nTITLE: Embedding Sheet Component API Documentation in Markdown\nDESCRIPTION: Uses the embed tag to include sheet component API documentation from an external markdown file. This allows for modular documentation that can be maintained separately.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/case/art/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/components/sheet-component.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Interactive Field Marking Options Configuration in S2\nDESCRIPTION: Demonstrates how to configure interactive field marking options including available mark types, active mode, and event handlers. This configuration is applied during S2 instance initialization.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/analysis/conditions/index.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    // 配置可标记类型\n    markConfig: {\n      // 可标记的类型：全部，行，列，单元格\n      markNodeType: {\n        // 透视表行头，多维表行头, 已聚合的行头, 数值单元格, 十字热区\n        row: true,\n        // 透视表列头，多维表列头, 已聚合的列头, 十字热区\n        col: true,\n        // 明细表单元格\n        cell: true,\n      },\n      // 连续点击时的标记模式\n      markAction: 'toggle',\n      // 清除标记的操作区域\n      clearMarkAction: ['none'],\n      // 标记前的回调（可阻止）\n      onChange:({ cells }) => {\n        console.log(`即将${cells.length ? '标记' : '取消标记'}单元格组`, cells);\n        return true;\n      },\n      // 标记后的回调\n      onMarkUpdated: ({ cells, statistic }) => {\n        console.log('标记单元格组:', cells, statistic);\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Adding row and column header formatting capabilities\nDESCRIPTION: Feature that allows for formatting of row and column headers in the visualization.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_29\n\nLANGUAGE: Markdown\nCODE:\n```\n添加行头和列头的格式化功能 ([#1219](https://github.com/antvis/S2/issues/1219)) ([f375f58](https://github.com/antvis/S2/commit/f375f58d37aa2901df0ceed31ec919ad0ae09a4f))\n```\n\n----------------------------------------\n\nTITLE: Embedding Common Style Documentation in Markdown\nDESCRIPTION: This code snippet embeds a common style documentation file written in Markdown. It references a file located at '@/docs/common/style.zh.md'.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/basic/API.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/style.zh.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Embedding Markdown Documentation Components\nDESCRIPTION: Embedded markdown files containing documentation about layout customization features including arrangement, coordinate system, cell metadata management, and hierarchy structure configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-layout/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/custom/layoutArrange.en.md\"></embed>\n\n<embed src=\"@/docs/common/custom/layoutCoordinate.en.md\"></embed>\n\n<embed src=\"@/docs/common/custom/layoutCellMeta.en.md\"></embed>\n\n<embed src=\"@/docs/common/custom/layoutHierarchy.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Finding Cells by Field in S2 Visualization in TypeScript\nDESCRIPTION: Demonstrates how to retrieve specific cells by their field name in the S2 visualization library.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/get-cell-data.zh.md#2025-04-22_snippet_10\n\nLANGUAGE: ts\nCODE:\n```\ns2.facet.getCellsByField(field)\n```\n\n----------------------------------------\n\nTITLE: Embedding Style Documentation in Markdown\nDESCRIPTION: Embeds reusable style documentation from a common file location using markdown embed syntax.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/multi-line-text/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/style.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Global Event Constants in AntV S2\nDESCRIPTION: A markdown table listing all available global events in AntV S2 library. Each row contains the event name (in Chinese), the corresponding S2Event constant, and a description of when the event is triggered.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/general/s2-event.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| 名称        | 事件名                             | 描述                                                                                                                   |\n|-----------| --------------------------------- |----------------------------------------------------------------------------------------------------------------------|\n| 键盘按下      | `S2Event.GLOBAL_KEYBOARD_DOWN`     | 键盘按下                                                                                                                 |\n| 键盘松开      | `S2Event.GLOBAL_KEYBOARD_UP`       | 键盘松开                                                                                                                 |\n| 复制        | `S2Event.GLOBAL_COPIED`            | 对选中的单元格复制                                                                                                            |\n| 鼠标松开      | `S2Event.GLOBAL_MOUSE_UP`          | 图表区域鼠标松开                                                                                                             |\n| 点击        | `S2Event.GLOBAL_CLICK`             | 图表区域点击                                                                                                               |\n| 图片/视频预览点击 | `S2Event.GLOBAL_PREVIEW_CLICK`             | 图片/视频预览点击                                                                                                            |\n| 右键        | `S2Event.GLOBAL_CONTEXT_MENU`      | 图表区域按下右键 ([禁用右键菜单不生效？](/manual/faq#%E7%A6%81%E7%94%A8%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E4%B8%8D%E7%94%9F%E6%95%88)) |\n| 选中        | `S2Event.GLOBAL_SELECTED`          | 选中单元格时，如：刷选，多选，单选 （可以获取到选中的单元格，交互名，和触发单元格等信息）                                                                        |\n| 悬停        | `S2Event.GLOBAL_HOVER`             | 鼠标悬停在单元格                                                                                                             |\n| 重置        | `S2Event.GLOBAL_RESET`             | 点击空白处，按下 Esc 键 重置交互样式时                                                                                               |\n| 链接跳转      | `S2Event.GLOBAL_LINK_FIELD_JUMP`   | 点击（行头/列头/数值）为链接字段的文本时                                                                                                |\n| icon 点击   | `S2Event.GLOBAL_ACTION_ICON_CLICK` | 单元格右侧的操作 icon 点击时，比如：排序图标                                                                                            |\n| icon 悬停   | `S2Event.GLOBAL_ACTION_ICON_HOVER` | 单元格右侧的操作 icon 悬停时，比如：排序图标                                                                                            |\n| 滚动        | `S2Event.GLOBAL_SCROLL`            | 表格滚动 （含数值和行头单元格）                                                                                                     |\n```\n\n----------------------------------------\n\nTITLE: Version Heading Format\nDESCRIPTION: Standardized version heading format used in changelog\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n# [@antv/s2-v2.0.0-next.3](https://github.com/antvis/S2/compare/@antv/s2-v2.0.0-next.2...@antv/s2-v2.0.0-next.3) (2022-12-16)\n```\n\n----------------------------------------\n\nTITLE: Embedding Markdown Documentation in HTML\nDESCRIPTION: Embeds external markdown documentation file containing S2 options API reference using HTML embed tag.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/react-component/tooltip/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/general/s2-options.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Configuring Frozen Rows and Columns in Pivot Table\nDESCRIPTION: Demonstrates how to configure frozen rows and columns in a pivot table using s2Options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/sheet-type/pivot-mode.zh.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  frozen: {\n    rowCount: number; // 冻结行的叶子节点数量，从顶部开始计数\n    trailingRowCount: number; // 冻结行的叶子节点数量，从底部开始计数\n    colCount: number; // 冻结列的叶子节点数量，从左侧开始计数\n    trailingColCount: number; // 冻结列的叶子节点数量，从右侧开始计数\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ExtraData Type in TypeScript\nDESCRIPTION: Defines the ExtraData type which contains special fields for tracking extra field names and values, used for custom data processing in the spreadsheet.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/view-meta.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { EXTRA_FIELD, VALUE_FIELD } from '@antv/s2';\n\ntype ExtraData = {\n  [EXTRA_FIELD]: string;\n  [VALUE_FIELD]: string | DataItem;\n};\n```\n\n----------------------------------------\n\nTITLE: Embedding Theme Documentation in Markdown\nDESCRIPTION: Uses an HTML embed tag to include external markdown documentation about S2 theme configuration.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/theme/default/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/general/s2-theme.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Embedding External Markdown Documentation in Markdown\nDESCRIPTION: Embeds external markdown documentation file for S2 options using the embed tag syntax.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/react-component/tooltip/API.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/general/s2-options.zh.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-line Text Display in S2 Table\nDESCRIPTION: This code snippet demonstrates how to configure multi-line text display in an S2 table. It sets up options for text wrapping, maximum lines, and custom text splitting functions.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/multi-line-text/index.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: 600,\n  height: 480,\n  // highlight-start\n  style: {\n    cellCfg: {\n      text: {\n        // 文本换行\n        autoWrap: true,\n        // 最多展示 2 行, 超出的行将被省略, 显示 ...\n        maxLines: 2,\n        // 指定文本分割函数,可以自定义文本的分割方式\n        wordWrap: (text, maxWidth, font) => {\n          return text.split('\\n');\n        },\n      },\n    },\n  },\n  // highlight-end\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for API Documentation\nDESCRIPTION: This snippet defines the frontmatter for a markdown file, specifying the title as 'API' and setting the order to 10. This is commonly used in static site generators to organize and structure documentation pages.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-plugins/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: API\norder: 10\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Tooltip Base Properties TypeScript Interface\nDESCRIPTION: Type definitions for the base tooltip configuration interface including enable flag, operations, and custom content rendering options.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/tooltip.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface BaseTooltipConfig {\n  enable?: boolean;  // defaults to true\n  operation?: TooltipOperation;\n  content?: ReactNode | Element | string | ((cell, defaultTooltipShowOptions) => ReactNode | Element | string);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Container Element\nDESCRIPTION: Creates a div element with id 'container' that will host the S2 sheet component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/introduction.en.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\" />\n```\n\n----------------------------------------\n\nTITLE: Creating a DOM Container for S2 Table\nDESCRIPTION: Provides the HTML markup for preparing a DOM container where the S2 table will be rendered.\nSOURCE: https://github.com/antvis/s2/blob/next/README.en-US.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\"></div>\n```\n\n----------------------------------------\n\nTITLE: Filtered and Sorted Data Result in S2 Table\nDESCRIPTION: The resulting data structure after applying both filtering and sorting operations, showing how the original dataset is transformed based on the configured parameters.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/table.en.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n[\n    {\n        \"price\": 3,\n        \"province\": \"浙江省\",\n        \"city\": \"杭州市\",\n        \"type\": \"家具\",\n        \"sub_type\": \"沙发\"\n    },\n    {\n        \"price\": 1,\n        \"province\": \"浙江省\",\n        \"city\": \"杭州市\",\n        \"type\": \"家具\",\n        \"sub_type\": \"桌子\"\n    }, \n]\n```\n\n----------------------------------------\n\nTITLE: Changing ID Generation Rules for Empty Dimension Values in TypeScript\nDESCRIPTION: Updates the ID generation for null dimension values to use a special identifier.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_37\n\nLANGUAGE: diff\nCODE:\n```\n{\n-  id: 'root[&]null',\n-  value: 'null'\n\n+  id: 'root[&]$$null$$',\n+  value: null\n}\n```\n\n----------------------------------------\n\nTITLE: Defining S2MountContainer Type in TypeScript\nDESCRIPTION: Defines the S2MountContainer type as either a string or an HTMLElement, used for specifying where to mount the S2 table component.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype S2MountContainer = string | HTMLElement;\n```\n\n----------------------------------------\n\nTITLE: Setting Theme Configuration\nDESCRIPTION: Method to update the theme configuration including theme schema, color palette, and theme name.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\n(themeCfg: ThemeCfg) => void\n```\n\n----------------------------------------\n\nTITLE: Demo Directory Structure Example\nDESCRIPTION: Example of the required directory structure for creating demos in the S2 documentation.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npivot\n├── demo\n│   ├── grid.ts               # 平铺模式示例代码\n│   ├── tree.ts               # 树状模式示例代码\n│   └── meta.json             # gallery 信息\n├── API.zh.md                 # 右侧 api 文档中文版，请根据右侧文档目录解析出来的层级顺序调整格式\n├── API.en.md                 # 右侧 api 文档英文版（直接引用英文即可）\n├── design.zh.md              # 中文设计指引，没有可不创建\n├── design.en.md              # 英文设计指引，没有可不创建\n├── index.zh.md               # 中文版左侧快捷菜单顺序和标题（必须创建，需要解析改文件创建对应 demo 页面）\n└── index.en.md               # 英文版左侧快捷菜单顺序和标题\n```\n\n----------------------------------------\n\nTITLE: Configuring Filtering in S2 Detail Table\nDESCRIPTION: This code demonstrates how to configure filtering in S2. It sets up a custom filter on the 'city' field to only display rows where the city is '杭州市' (Hangzhou).\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/data-process/table.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n// dataCfg\n{\n    filterParams: [\n        {\n            filterKey: 'city',\n            customFilter: (row) => row['city'] === '杭州市',\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: 配置S2表格滚动速度 (TypeScript)\nDESCRIPTION: 通过设置scrollSpeedRatio来控制S2表格的水平和垂直滚动速率。可以分别设置水平和垂直方向的滚动速率，取值范围为0-1，默认为1。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/interaction/scroll.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    scrollSpeedRatio: {\n      vertical: 0.3, // 垂直\n      horizontal: 1, // 水平\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Cell Interaction Theme\nDESCRIPTION: Shows how to modify the cell interaction state appearance by setting the border color to transparent to hide the hover focus border.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\ns2.setTheme({\n  dataCell: {\n    cell: {\n      interactionState: {\n        hoverFocus: {\n          // 边框设置为透明\n          borderColor: 'transparent'\n          // 或者边框透明度设置为 0\n          // borderOpacity: 0\n        }\n      }\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Enabling Header Information in Copied Data\nDESCRIPTION: Configuration to include header information when copying data from S2 tables using the withHeader option.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/export.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  interaction: {\n    copy: { enable: true },\n    withHeader: true,\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Link Fields in S2\nDESCRIPTION: Basic configuration for marking specific fields as clickable links in an S2 table. Shows how to set up data fields and specify which fields should be rendered as links.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/cell-render/link-jump.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2DataConfig = {\n  fields: {\n    rows: ['province', 'city'],\n    columns: ['type'],\n    values: ['price'],\n  },\n};\n\nconst s2Options = {\n  width: 600,\n  height: 600,\n  interaction: {\n    linkFields: ['city'],\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Top-Left Alignment for Data Cells in S2 CrossTable\nDESCRIPTION: Code example demonstrating how to configure left alignment with top baseline for both bolderText (subtotal/total cells) and regular text (other data cells) in data cells of an S2 CrossTable.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/cell-align.zh.md#2025-04-22_snippet_9\n\nLANGUAGE: js\nCODE:\n```\ndataCell: {\n  bolderText: {\n    textAlign: 'left',\n    textBaseline: 'top',\n  },\n  text: {\n    textAlign: 'left',\n    textBaseline: 'top',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip in React Component\nDESCRIPTION: This snippet shows how to customize tooltip behavior in a React component using cell callback functions. It demonstrates showing a custom tooltip on row cell hover.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/basic/tooltip.zh.md#2025-04-22_snippet_24\n\nLANGUAGE: tsx\nCODE:\n```\nconst CustomColCellTooltip = () => <div>col cell tooltip</div>;\n\nconst onRowCellHover = ({ event, viewMeta }) => {\n  viewMeta.spreadsheet.tooltip.show({\n    position: {\n      x: event.clientX,\n      y: event.clientY,\n    },\n    content: <CustomRowCellTooltip/>,\n  });\n};\n\n<SheetComponent onRowCellHover={ onRowCellHover }/>\n```\n\n----------------------------------------\n\nTITLE: Dependencies for Vue Version (@antv/s2-vue)\nDESCRIPTION: Lists the peer dependencies required for the Vue3 version of S2. It requires @antv/s2 v2.0.0 or higher, ant-design-vue v3.2.0 or higher, and Vue 3.x or higher.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/packages.en.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"peerDependencies\": {\n  \"@antv/s2\": \"^2.0.0\",\n  \"ant-design-vue\": \"^3.2.0\",\n  \"vue\": \">=3.x\"\n}\n```\n\n----------------------------------------\n\nTITLE: Initial Row Hierarchy Structure in S2 Pivot Table\nDESCRIPTION: Example of the rowHierarchy structure after the first level hierarchy is executed. It shows the initial state with a single province node that will serve as the parent for city nodes.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/extended-reading/layout/pivot.en.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nrowHierarchy: {\n    height: 0,\n    width: 0,\n    maxLevel: 1,\n    allNodesWithoutRoot: [(Node){ label: '浙江省', key: 'province', ...}],\n    sampleNodesForAllLevels: [(Node){ label: '浙江省', key: 'province', ...}],\n}\n```\n\n----------------------------------------\n\nTITLE: Expansion Depth Configuration in TypeScript\nDESCRIPTION: Configuration for setting the default expansion level of nodes in the tree structure.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-collapse-nodes.en.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  style: {\n    rowCell: {\n      // 展开两层\n      expandDepth: 1,\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple CellData Instances in TypeScript\nDESCRIPTION: Static method to create multiple CellData instances from raw data and an array of extra fields. Useful for batch processing of cell metadata.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/cell-data.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nCellData.getCellDataList(raw: RawData, extraFields: string[])\n```\n\n----------------------------------------\n\nTITLE: Highlighting Corresponding Headers During Selection\nDESCRIPTION: Feature that enables highlighting all corresponding row and column header cells during selection operations.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n* 刷选时支持高亮所有对应的行列头 cell ([#1680](https://github.com/antvis/S2/issues/1680)) ([c7fb53f](https://github.com/antvis/S2/commit/c7fb53f403608e5194d745408966cc9b18c92025))\n```\n\n----------------------------------------\n\nTITLE: Accessing CellData Metadata in TypeScript\nDESCRIPTION: Shows how to access the metadata of a CellData instance. This property contains various fields related to the cell's data.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/cell-data.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nthis.meta.data\n```\n\n----------------------------------------\n\nTITLE: Configuring Tree Default Expansion Level\nDESCRIPTION: Feature to configure the default expansion level in tree mode for hierarchical data visualization.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n* 在树状模式下，增加默认展开层级的配置 ([#1703](https://github.com/antvis/S2/issues/1703)) ([bb1aaf1](https://github.com/antvis/S2/commit/bb1aaf1f5266ec6d6d76c3f7a97e236f4a3c15d3))\n```\n\n----------------------------------------\n\nTITLE: Updating S2 Data Configuration\nDESCRIPTION: Demonstrates how to update the data configuration for an S2 spreadsheet, which will merge with previous data configuration and trigger a re-render with data updates.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/faq.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\npivotSheet.setDataCfg({ ... })\nawait pivotSheet.render(true) // 重新渲染，且更新数据\n```\n\n----------------------------------------\n\nTITLE: Configuring S2 Tooltip Operations Interface\nDESCRIPTION: Type definitions for tooltip operation configuration including column visibility, sorting options and custom menu configurations.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/tooltip.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TooltipOperation {\n  hiddenColumns?: boolean;  // defaults to true\n  sort?: boolean;  // defaults to false\n  tableSort?: boolean;  // defaults to false\n  menu?: TooltipOperatorMenuOptions;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing AntV S2 React Version\nDESCRIPTION: Command to install both the core @antv/s2 library and the React-specific @antv/s2-react package using npm.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/install.en.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/s2 @antv/s2-react --save\n```\n\n----------------------------------------\n\nTITLE: Migrating DrillDown Component Import in S2\nDESCRIPTION: Shows the change in import path for the DrillDown component, which has been moved to a different package.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_55\n\nLANGUAGE: diff\nCODE:\n```\n- import { DrillDown } from '@antv/s2-react';\n+ import { DrillDown } from '@antv/s2-react-components';\n```\n\n----------------------------------------\n\nTITLE: Initial Editable Table Implementation\nDESCRIPTION: Reference to the initial version of an editable table feature in the S2 project.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n* 初版编辑表 ([#1629](https://github.com/antvis/S2/issues/1629)) ([e7bd849](https://github.com/antvis/S2/commit/e7bd84935fe8dcabc8daf853953dc93680a9b448))\n```\n\n----------------------------------------\n\nTITLE: Markdown API Documentation Template with Embed\nDESCRIPTION: Basic markdown template containing frontmatter with title and order, plus an embedded documentation reference using custom embed syntax.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/theme/custom/API.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: API\norder: 0\n---\n\n<embed src=\"@/docs/api/general/s2-theme.zh.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Configuring Non-Empty Fields in JavaScript\nDESCRIPTION: Shows how to configure a field to disallow being completely emptied, ensuring at least one sub-item remains.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/analysis/switcher.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst field = {\n  allowEmpty: false, // 默认：true\n  items: [\n    /*...*/\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Getting Facet Width in S2 - TypeScript\nDESCRIPTION: Method to retrieve the real width of the facet area in the S2 visualization. Used to determine the actual rendering dimensions of the visible area.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-facet.en.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ns2.facet.getRealWidth()\n```\n\n----------------------------------------\n\nTITLE: Enabling Tooltips for S2 Table Sort Icons\nDESCRIPTION: Configuration to enable tooltips that appear when hovering over sort icons in the S2 table.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/custom/custom-order.en.md#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst s2Options = {\n  tooltip: {\n    enable: true,\n  },\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Tree Row Width Configuration Update\nDESCRIPTION: Moves treeRowsWidth configuration into rowCell object as treeWidth property.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/migration-v2.en.md#2025-04-22_snippet_16\n\nLANGUAGE: diff\nCODE:\n```\nconst s2Options = {\n  hierarchyType: 'tree',\n  style: {\n-   treeRowsWidth: 200\n+   rowCell: {\n+     treeWidth: 200,\n+   }\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing fallback for async copy operation\nDESCRIPTION: Enhancement that falls back to synchronous copying when asynchronous copying fails.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_35\n\nLANGUAGE: Markdown\nCODE:\n```\n**copy:** 当异步复制失败时降级为同步复制 ([#1125](https://github.com/antvis/S2/issues/1125)) ([009449f](https://github.com/antvis/S2/commit/009449f1d7aa3dcb78d93bdc57e337fd7e6c170f))\n```\n\n----------------------------------------\n\nTITLE: Resolving Tooltip Display Issue in JavaScript\nDESCRIPTION: This update fixes a problem where the tooltip wasn't showing, addressing issue #749.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\n* **tooltip:** tooltip don't show ([#749](https://github.com/antvis/S2/issues/749)) ([25bda19](https://github.com/antvis/S2/commit/25bda197c21c9276963fb68eecae4a91d5a9841c))\n```\n\n----------------------------------------\n\nTITLE: Embedding Sheet Component API Documentation in Markdown\nDESCRIPTION: Embeds external markdown documentation for sheet components using the embed tag with a relative path reference.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/react-component/pagination/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/api/components/sheet-component.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Correcting CSS transform property name in JavaScript\nDESCRIPTION: Changes the property name from 'supportCSSTransform' to 'supportsCSSTransform' for correct CSS transform support.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n传入g的supportCSSTransform改为supportsCSSTransform\n```\n\n----------------------------------------\n\nTITLE: Adding Link Field Rendering to DataCell in TypeScript\nDESCRIPTION: Implements link field rendering functionality in the DataCell class.\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-core/CHANGELOG.md#2025-04-22_snippet_17\n\nLANGUAGE: TypeScript\nCODE:\n```\n数据单元格 DataCell 类中增加链接跳转渲染 ([bb5a964](https://github.com/antvis/S2/commit/bb5a964787a80843515b4d552adb3fdb59393e3d))\n```\n\n----------------------------------------\n\nTITLE: Embedding Header Action Icons Documentation in Markdown\nDESCRIPTION: Includes external markdown documentation for header action icons using the embed tag\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-icon/API.en.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/custom/headerActionIcons.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Embedding Custom SVG Icons Documentation in Markdown\nDESCRIPTION: Includes external markdown documentation for custom SVG icons using the embed tag\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-icon/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/custom/customSvgIcons.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Invalid Width and Height Configuration Example\nDESCRIPTION: Example showing incorrect configuration using percentage and viewport units for S2 table dimensions. These values won't work because Canvas doesn't support relative units.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/adaptive.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst s2Options = {\n  width: '100%', // ❌\n  height: '20vh',// ❌\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DataType for S2 DataSet (TypeScript)\nDESCRIPTION: This snippet defines the DataType used in the S2 DataSet. It's a type alias for a record with string keys and unknown values.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/base-data-set.en.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype DataType = Record<string, unknown>;\n```\n\n----------------------------------------\n\nTITLE: Destroying Table\nDESCRIPTION: Method to destroy the table instance and release resources.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\n() => void\n```\n\n----------------------------------------\n\nTITLE: 定义ScrollSpeedRatio接口(TypeScript)\nDESCRIPTION: 定义滚动速率配置接口，支持分别控制水平和垂直两个方向的滚动速率，默认值均为1。\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/interaction.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ScrollSpeedRatio {\n  horizontal?: number; // 水平滚动速率，默认为 1\n  vertical?: number; // 垂直滚动速率，默认为 1\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Header\nDESCRIPTION: YAML frontmatter metadata defining a documentation page for custom layout functionality with ordering information\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-layout/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Custom Layout\norder: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Embedding Style Documentation in Markdown\nDESCRIPTION: Markdown frontmatter and structure for embedding style API documentation using a relative path import\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/basic/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: API\norder: 0\n---\n\n# Style\n\n<embed src=\"@/docs/common/style.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter block defining the page title as 'API' and setting the order value to 0\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/frozen/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: API\norder: 0\n---\n```\n\n----------------------------------------\n\nTITLE: Embedding Style Documentation in Markdown\nDESCRIPTION: Markdown code that embeds external style documentation content from a shared file path.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/custom/API.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<embed src=\"@/docs/common/style.en.md\"></embed>\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Custom Order Documentation\nDESCRIPTION: YAML frontmatter block that defines the title and order of the documentation page in S2's documentation system.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/custom/custom-order/index.en.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: custom-order\norder: 9\n```\n\n----------------------------------------\n\nTITLE: Getting Column Leaf Nodes\nDESCRIPTION: Method to get the leaf nodes from the column header.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/api/basic-class/spreadsheet.en.md#2025-04-22_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\n() => Node[]\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration for a documentation page defining the title, order, and experimental tag status.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/manual/advanced/pivot-chart.en.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Pivot Chart\norder: 13\ntag: Experimental\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for API Documentation\nDESCRIPTION: This code snippet defines the frontmatter for a Markdown file, specifying the title as 'API' and setting the order to 0. This information is typically used by static site generators to organize and display documentation pages.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/examples/layout/frozen/API.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: API\norder: 0\n---\n```\n\n----------------------------------------\n\nTITLE: Version Tag Reference for @antv/s2-react v1.1.0\nDESCRIPTION: Git version tag reference showing comparison between versions 1.0.3 and 1.1.0\nSOURCE: https://github.com/antvis/s2/blob/next/packages/s2-react/CHANGELOG.md#2025-04-22_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n# [@antv/s2-react-v1.1.0](https://github.com/antvis/S2/compare/@antv/s2-react-v1.0.3...@antv/s2-react-v1.1.0) (2021-11-29)\n```\n\n----------------------------------------\n\nTITLE: Defining LayoutArrange Function for Custom Ordering in AntV S2\nDESCRIPTION: This code snippet defines the LayoutArrange function used to customize the order of elements in an AntV S2 spreadsheet. It takes a spreadsheet instance, a node, a field name, and an array of field values as parameters, and returns an array of strings representing the custom order.\nSOURCE: https://github.com/antvis/s2/blob/next/s2-site/docs/common/custom/layoutArrange.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nLayoutArrange = (spreadsheet: SpreadSheet, parent: Node, field: string, fieldValues: string[]) => string[];\n```"
  }
]
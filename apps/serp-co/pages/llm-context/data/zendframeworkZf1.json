[
  {
    "owner": "zendframework",
    "repo": "zf1",
    "content": "TITLE: Multipart Form Data HTTP POST Request Structure\nDESCRIPTION: Shows the complete structure of a multipart/form-data HTTP POST request including headers and body parts for form fields and file upload. Demonstrates how Zend_Http_Client formats the request with a boundary delimiter and proper content dispositions.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Http/Client/_files/ZF4236-clientbodyretainsfieldordering.txt#2025-04-23_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST \\/ HTTP\\/1.1\nHost: example.com\nConnection: close\nAccept-encoding: gzip, deflate\nUser-Agent: Zend_Http_Client\nContent-Type: multipart\\/form-data; boundary=---ZENDHTTPCLIENT-\\w+\nContent-Length: \\d+\n\n-----ZENDHTTPCLIENT-\\w+\nContent-Disposition: form-data; name=\"testFirst\"\n\nfoo\n-----ZENDHTTPCLIENT-\\w+\nContent-Disposition: form-data; name=\"testFile\"; filename=\"testFile.name\"\nContent-Type: text\\/plain\n\nTESTDATA12345\n-----ZENDHTTPCLIENT-\\w+\nContent-Disposition: form-data; name=\"testLast\"\n\nbar\n-----ZENDHTTPCLIENT-\\w+--\n```\n\n----------------------------------------\n\nTITLE: HTTP POST Request Using AMF for Flex Messaging Employee Creation\nDESCRIPTION: This is a complete HTTP POST request using AMF (Action Message Format) to call the createEmployee operation on an EmployeeService destination. The request body contains a Flex RemotingMessage with employee data including personal and contact information.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Amf/_files/zf-6130/Request_RawData.txt#2025-04-23_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /FlexP-debug/gateway.php HTTP/1.1\nHost: 10.192.27.106\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0.1) Gecko/20100101 Firefox/6.0.1\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-gb,en;q=0.5\nAccept-Encoding: gzip, deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nReferer: http://10.192.27.106/FlexP-debug/FlexP.swf/[[DYNAMIC]]/4\nContent-type: application/x-amf\nContent-length: 422\n\nFlex Message (flex.messaging.messages.RemotingMessage)     operation = createEmployee    clientId = null    destination = EmployeeService    messageId = 2FB01F59-2951-0A30-8313-38E468189D0A    timestamp = 0    timeToLive = 0    body =     [      {office=322, departmentid=3, street=32, zipcode=32, state=32, lastname=4, firstname=2, photofile=322, city=32, id=1, title=4, officephone=233, email=32, cellphone=22}    ]    hdr(DSId) = nil\n```\n\n----------------------------------------\n\nTITLE: HTTP POST Multipart Form-Data Request with Nested Arrays\nDESCRIPTION: Shows the HTTP request format for submitting nested array data using multipart/form-data encoding. The request includes headers specifying content type, boundary marker, and multiple form fields with array notation in the names.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Http/Client/_files/ZF7038-multipartarrayrequest.txt#2025-04-23_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST \\/ HTTP\\/1\\.1\nHost: example\\.com\nConnection: close\nAccept-encoding: gzip, deflate\nUser-Agent: Zend_Http_Client\nContent-Type: multipart\\/form-data; boundary=---ZENDHTTPCLIENT-\\w+\nContent-Length: \\d+\n\n-----ZENDHTTPCLIENT-\\w+\nContent-Disposition: form-data; name=\"test\\[\\]\"\n\nv0\\.1\n-----ZENDHTTPCLIENT-\\w+\nContent-Disposition: form-data; name=\"test\\[\\]\"\n\nv0\\.2\n-----ZENDHTTPCLIENT-\\w+\nContent-Disposition: form-data; name=\"test\\[k1\\]\"\n\nv1\\.0\n-----ZENDHTTPCLIENT-\\w+\nContent-Disposition: form-data; name=\"test\\[k2\\]\\[\\]\"\n\nv2\\.1\n-----ZENDHTTPCLIENT-\\w+\nContent-Disposition: form-data; name=\"test\\[k2\\]\\[k2.1\\]\"\n\nv2\\.1\\.0\n-----ZENDHTTPCLIENT-\\w+--\n```\n\n----------------------------------------\n\nTITLE: Constructing Multipart Form-Data HTTP POST Request with Zend_Http_Client\nDESCRIPTION: This snippet illustrates the structure of a multipart form-data HTTP POST request. It includes headers specifying the content type and boundary, followed by the request body with a file upload. The example uses Zend_Http_Client as the user agent.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Http/Client/_files/ZF4236-fileuploadrequest.txt#2025-04-23_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST \\/ HTTP\\/1.1\nHost: example.com\nConnection: close\nAccept-encoding: gzip, deflate\nUser-Agent: Zend_Http_Client\nContent-Type: multipart\\/form-data; boundary=---ZENDHTTPCLIENT-\\w+\nContent-Length: \\d+\n\n-----ZENDHTTPCLIENT-\\w+\nContent-Disposition: form-data; name=\"testFile\"; filename=\"testFile.name\"\nContent-Type: text\\/plain\n\nTESTDATA12345\n-----ZENDHTTPCLIENT-\\w+--\n```\n\n----------------------------------------\n\nTITLE: Constructing Amazon EC2 API POST Request for DescribeImages Action\nDESCRIPTION: This snippet shows the structure of a POST request to the Amazon EC2 API. It includes the endpoint, HTTP method, and query parameters for describing EC2 images. The request is authenticated using AWS access keys and includes timestamp and signature information.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Service/Amazon/Authentication/_files/ec2_v2_return.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nPOST\nec2.amazonaws.com\n/\nAWSAccessKeyId=0PN5J17HBGZHT7JJ3X82&Action=DescribeImages&ImageId.1=ami-2bb65342&SignatureMethod=HmacSHA256&SignatureVersion=2&Timestamp=2009-11-11T13%3A52%3A38Z&Version=2009-07-15\n```\n\n----------------------------------------\n\nTITLE: Setting AWS SQS Queue Visibility Timeout via HTTP GET\nDESCRIPTION: HTTP GET request to modify the VisibilityTimeout attribute of an Amazon SQS queue. The request includes authentication parameters, timestamp, version information and sets a 90-second visibility timeout.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Service/Amazon/Authentication/_files/sqs_v2_get_return.txt#2025-04-23_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET\nqueue.amazonaws.com\n/770098461991/queue2\nAWSAccessKeyId=0PN5J17HBGZHT7JJ3X82&Action=SetQueueAttributes&Attribute.Name=VisibilityTimeout&Attribute.Value=90&SignatureMethod=HmacSHA256&SignatureVersion=2&Timestamp=2009-11-11T13%3A52%3A38Z&Version=2009-07-15\n```\n\n----------------------------------------\n\nTITLE: Generating Atom Feed XML Response\nDESCRIPTION: This snippet demonstrates the structure of an Atom feed XML response. It includes feed metadata, author information, and a single blog post entry with various details and links.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Gdata/_files/AppSample4.txt#2025-04-23_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version='1.0' encoding='UTF-8'?>\n<?xml-stylesheet href=\"http://www.blogger.com/styles/atom.css\" type=\"text/css\"?>\n<feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearch/1.1/' xmlns:gd='http://schemas.google.com/g/2005' gd:etag='W/\"CE4BRXw4cCp7ImA9WxRVFEs.\"'>\n <id>tag:blogger.com,1999:blog-8273578352962669317</id>\n <updated>2008-11-11T20:09:14.238-08:00</updated>\n <title>Test Blog</title>\n <subtitle type='html'>This is my description.</subtitle>\n <link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://tmjdev-test.blogspot.com/feeds/posts/default'/>\n <link rel='self'  type='application/atom+xml' href='http://www.blogger.com/feeds/8273578352962669317/posts/default?v=2'/>\n <link rel='alternate' type='text/html' href='http://tmjdev-test.blogspot.com/'/>\n <link rel='next' type='application/atom+xml' href='http://www.blogger.com/feeds/8273578352962669317/posts/default?start-index=26&amp;max-results=25&amp;v=2'/>\n <author>\n  <name>John Doe</name>\n  <uri>http://www.blogger.com/profile/05925487542352262450</uri>\n  <email>tmjdev@gmail.com</email>\n </author>\n <generator version='7.00' uri='http://www.blogger.com'>Blogger</generator>\n <openSearch:totalResults>30</openSearch:totalResults>\n <openSearch:startIndex>1</openSearch:startIndex>\n <openSearch:itemsPerPage>25</openSearch:itemsPerPage>\n  <entry gd:etag='W/\"CE4BRXw-eSp7ImA9WxRVFEs.\"'>\n   <id>tag:blogger.com,1999:blog-8273578352962669317.post-4858063079003295518</id>\n   <published>2008-11-11T20:09:00.001-08:00</published>\n   <updated>2008-11-11T20:09:14.251-08:00</updated>\n   <app:edited xmlns:app='http://www.w3.org/2007/app'>2008-11-11T20:09:14.251-08:00</app:edited>\n   <title>Test Image</title>\n   <content type='html'>FOO</content>\n  <link\n   rel='replies'\n   type='application/atom+xml'\n   href='http://tmjdev-test.blogspot.com/feeds/4858063079003295518/comments/default'\n   title='Post Comments'/>\n  <link\n   rel='replies'\n   type='text/html'\n   href='https://www.blogger.com/comment.g?blogID=8273578352962669317&amp;postID=4858063079003295518'\n   title='0 Comments'/>\n  <link\n   rel='edit'\n   type='application/atom+xml'\n   href='http://www.blogger.com/feeds/8273578352962669317/posts/default/4858063079003295518?v=2'/>\n  <link\n   rel='self'\n   type='application/atom+xml'\n   href='http://www.blogger.com/feeds/8273578352962669317/posts/default/4858063079003295518?v=2'/>\n  <link\n   rel='alternate'\n   type='text/html'\n   href='http://tmjdev-test.blogspot.com/2008/11/test-image_11.html'\n   title='Test Image'/>\n  <author>\n   <name>John Doe</name>\n   <uri>http://www.blogger.com/profile/05925487542352262450</uri>\n   <email>tmjdev@gmail.com</email>\n  </author>\n  <thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total>\n </entry>\n</feed>\n```\n\n----------------------------------------\n\nTITLE: Atom Feed Entry XML Structure\nDESCRIPTION: This XML snippet represents the structure of an Atom feed entry. It includes essential elements such as id, published date, updated date, title, content, links, and author information.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Gdata/_files/AppSample2.txt#2025-04-23_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<?xml-stylesheet href=\"http://www.google.com/url?sa=D&amp;q=http://www.blogger.com/styles/atom.css\" type=\"text/css\"?>\n<entry xmlns=\"http://www.w3.org/2005/Atom\">\n    <id>12345678901234567890</id>\n    <published>2008-09-07T10:53:00.001-07:00</published>\n    <updated>2008-09-07T10:53:51.144-07:00</updated>\n    <app:edited xmlns:app=\"http://www.w3.org/2007/app\">2008-09-07T10:53:51.144-07:00</app:edited>\n    <title>Hello world</title>\n    <content type=\"html\">&lt;p&gt;Hello world!&lt;/p&gt;</content>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.google.com/url?sa=D&amp;q=http://example.blogspot.com/2008/09/hello-world.html\" title=\"Hello world\"/>\n    <link rel=\"replies\" type=\"text/html\" href=\"http://www.google.com/url?sa=D&amp;q=http://www.blogger.com/comment.g%3FblogID%3D12345678901234567890%26amp%3BpostID%3D09876543210987654321\" title=\"0 Comments\"/>\n    <link rel=\"replies\" type=\"application/atom+xml\" href=\"http://www.google.com/url?sa=D&amp;q=http://example.blogspot.com/feeds/12345678901234567890/comments/default\" title=\"Post Comments\"/>\n    <link rel=\"self\" type=\"application/atom+xml\" href=\"http://www.google.com/url?sa=D&amp;q=http://example.blogspot.com/feeds/posts/default/12345678901234567890\"/>\n    <link rel=\"edit\" type=\"application/atom+xml\" href=\"http://www.google.com/url?sa=D&amp;q=http://www.blogger.com/feeds/12345678901234567890/posts/default/09876543210987654321%3Fv%3D2\"/>\n    <author>\n        <name>John Doe</name>\n        <uri>http://www.blogger.com/profile/5555555555555555</uri>\n        <email>jdoe@example.com</email>\n    </author>\n</entry>\n```\n\n----------------------------------------\n\nTITLE: Parsing Blogger Atom Feed in XML\nDESCRIPTION: This XML snippet represents a Blogger Atom feed response. It includes feed metadata, author information, and a single blog post entry. The feed uses namespaces for Atom, OpenSearch, and Google Data elements.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Gdata/_files/AppSample3.txt#2025-04-23_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version='1.0' encoding='UTF-8'?>\n<?xml-stylesheet href=\"http://www.blogger.com/styles/atom.css\" type=\"text/css\"?>\n<feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearch/1.1/' xmlns:gd='http://schemas.google.com/g/2005' gd:etag='W/\"CE4BRXw4cCp7ImA9WxRVFEs.\"'>\n <id>tag:blogger.com,1999:blog-8273578352962669317</id>\n <updated>2008-11-11T20:09:14.238-08:00</updated>\n <title>Test Blog</title>\n <subtitle type='html'>This is my description.</subtitle>\n <link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://tmjdev-test.blogspot.com/feeds/posts/default'/>\n <link rel='self'  type='application/atom+xml' href='http://www.blogger.com/feeds/8273578352962669317/posts/default?v=2'/>\n <link rel='alternate' type='text/html' href='http://tmjdev-test.blogspot.com/'/>\n <link rel='next' type='application/atom+xml' href='http://www.blogger.com/feeds/8273578352962669317/posts/default?start-index=26&amp;max-results=25&amp;v=2'/>\n <author>\n  <name>John Doe</name>\n  <uri>http://www.blogger.com/profile/05925487542352262450</uri>\n  <email>tmjdev@gmail.com</email>\n </author>\n <generator version='7.00' uri='http://www.blogger.com'>Blogger</generator>\n <openSearch:totalResults>30</openSearch:totalResults>\n <openSearch:startIndex>1</openSearch:startIndex>\n <openSearch:itemsPerPage>25</openSearch:itemsPerPage>\n  <entry gd:etag='W/\"CE4BRXw-eSp7ImA9WxRVFEs.\"'>\n   <id>tag:blogger.com,1999:blog-8273578352962669317.post-4858063079003295518</id>\n   <published>2008-11-11T20:09:00.001-08:00</published>\n   <updated>2008-11-11T20:09:14.251-08:00</updated>\n   <app:edited xmlns:app='http://www.w3.org/2007/app'>2008-11-11T20:09:14.251-08:00</app:edited>\n   <title>Test Image</title>\n   <content type='html'>FOO</content>\n  <link\n   rel='replies'\n   type='application/atom+xml'\n   href='http://tmjdev-test.blogspot.com/feeds/4858063079003295518/comments/default'\n   title='Post Comments'/>\n  <link\n   rel='replies'\n   type='text/html'\n   href='https://www.blogger.com/comment.g?blogID=8273578352962669317&amp;postID=4858063079003295518'\n   title='0 Comments'/>\n  <link\n   rel='edit'\n   type='application/atom+xml'\n   href='http://www.blogger.com/feeds/8273578352962669317/posts/default/4858063079003295518?v=2'/>\n  <link\n   rel='self'\n   type='application/atom+xml'\n   href='http://www.blogger.com/feeds/8273578352962669317/posts/default/4858063079003295518?v=2'/>\n  <link\n   rel='alternate'\n   type='text/html'\n   href='http://tmjdev-test.blogspot.com/2008/11/test-image_11.html'\n   title='Test Image'/>\n  <author>\n   <name>John Doe</name>\n   <uri>http://www.blogger.com/profile/05925487542352262450</uri>\n   <email>tmjdev@gmail.com</email>\n  </author>\n  <thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total>\n </entry>\n</feed>\n```\n\n----------------------------------------\n\nTITLE: Atom XML Feed Entry\nDESCRIPTION: XML structure for an Atom feed entry containing a blog post with title, content, author information, and various links for comments and editing.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Gdata/_files/AppSample1.txt#2025-04-23_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<?xml-stylesheet href=\"http://www.google.com/url?sa=D&amp;q=http://www.blogger.com/styles/atom.css\" type=\"text/css\"?>\n<entry xmlns=\"http://www.w3.org/2005/Atom\">\n    <id>12345678901234567890</id>\n    <published>2008-09-07T10:53:00.001-07:00</published>\n    <updated>2008-09-07T10:53:51.144-07:00</updated>\n    <app:edited xmlns:app=\"http://www.w3.org/2007/app\">2008-09-07T10:53:51.144-07:00</app:edited>\n    <title>Hello world</title>\n    <content type=\"html\">&lt;p&gt;Hello world!&lt;/p&gt;</content>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.google.com/url?sa=D&amp;q=http://example.blogspot.com/2008/09/hello-world.html\" title=\"Hello world\"/>\n    <link rel=\"replies\" type=\"text/html\" href=\"http://www.google.com/url?sa=D&amp;q=http://www.blogger.com/comment.g%3FblogID%3D12345678901234567890%26amp%3BpostID%3D09876543210987654321\" title=\"0 Comments\"/>\n    <link rel=\"replies\" type=\"application/atom+xml\" href=\"http://www.google.com/url?sa=D&amp;q=http://example.blogspot.com/feeds/12345678901234567890/comments/default\" title=\"Post Comments\"/>\n    <link rel=\"self\" type=\"application/atom+xml\" href=\"http://www.google.com/url?sa=D&amp;q=http://example.blogspot.com/feeds/posts/default/12345678901234567890\"/>\n    <link rel=\"edit\" type=\"application/atom+xml\" href=\"http://www.google.com/url?sa=D&amp;q=http://www.blogger.com/feeds/12345678901234567890/posts/default/09876543210987654321%3Fv%3D2\"/>\n    <author>\n        <name>John Doe</name>\n        <uri>http://www.blogger.com/profile/5555555555555555</uri>\n        <email>jdoe@example.com</email>\n    </author>\n</entry>\n```\n\n----------------------------------------\n\nTITLE: Atom XML Blog Entry\nDESCRIPTION: XML document in Atom format containing a blog post entry with title, content, author information, and various related links.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Gdata/App/_files/EntrySampleHttp1.txt#2025-04-23_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<?xml-stylesheet href=\"http://www.google.com/url?sa=D&amp;q=http://www.blogger.com/styles/atom.css\" type=\"text/css\"?>\n<entry xmlns=\"http://www.w3.org/2005/Atom\" xmlns:gd=\"http://schemas.google.com/g/2005\" gd:etag=\"W/&quot;CkcHQH8_fCp7ImA9WxRTGEw.&quot;\">\n    <id>tag:blogger.com,1999:blog-8273578352962669317.post-6938730899689776686</id>\n    <published>2008-09-07T10:53:00.001-07:00</published>\n    <updated>2008-09-07T10:53:51.144-07:00</updated>\n    <app:edited xmlns:app=\"http://www.w3.org/2007/app\">2008-09-07T10:53:51.144-07:00</app:edited>\n    <title>Hello world</title>\n    <content type=\"html\">&lt;p&gt;Hello world!&lt;/p&gt;</content>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.google.com/url?sa=D&amp;q=http://example.blogspot.com/2008/09/hello-world.html\" title=\"Hello world\"/>\n    <link rel=\"replies\" type=\"text/html\" href=\"http://www.google.com/url?sa=D&amp;q=http://www.blogger.com/comment.g%3FblogID%3D12345678901234567890%26amp%3BpostID%3D09876543210987654321\" title=\"0 Comments\"/>\n    <link rel=\"replies\" type=\"application/atom+xml\" href=\"http://www.google.com/url?sa=D&amp;q=http://example.blogspot.com/feeds/12345678901234567890/comments/default\" title=\"Post Comments\"/>\n    <link rel=\"self\" type=\"application/atom+xml\" href=\"http://www.google.com/url?sa=D&amp;q=http://example.blogspot.com/feeds/posts/default/12345678901234567890\"/>\n    <link rel=\"edit\" type=\"application/atom+xml\" href=\"http://www.google.com/url?sa=D&amp;q=http://www.blogger.com/feeds/12345678901234567890/posts/default/09876543210987654321%3Fv%3D2\"/>\n    <author>\n        <name>John Doe</name>\n        <uri>http://www.blogger.com/profile/12345678901234567890</uri>\n        <email>jdoe@example.com</email>\n    </author>\n</entry>\n```\n\n----------------------------------------\n\nTITLE: HTTP Response with AMF Content\nDESCRIPTION: HTTP response headers and Flex message content showing a successful AMF response. Includes server information, cache control directives, and a structured Flex acknowledgment message with client tracking details.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Amf/_files/zf-6130/Response_withNoStrongType.txt#2025-04-23_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 200 OK\nDate: Mon, 05 Sep 2011 09:39:51 GMT\nServer: Apache/2.2.17 (Win32) PHP/5.3.5 JRun/4.0\nX-Powered-By: PHP/5.3.5\nCache-Control: no-cache, must-revalidate\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\nPragma: no-cache\nContent-Length: 288\nContent-Type: application/x-amf\n\nFlex Message (flex.messaging.messages.AcknowledgeMessage)     clientId = 763A913D-DF04-0D69-7B2C-000078E80DE4    correlationId = 7F65ED15-7784-1AAE-1047-38F547E639B9    destination = null    messageId = 0D7BEDCB-FD14-BA88-F382-000026AE9393    timestamp = 131521559200    timeToLive = 0    body = 13\n```\n\n----------------------------------------\n\nTITLE: XML-RPC Response Payload\nDESCRIPTION: XML response structure for an XML-RPC method call containing a single parameter with value 'FOO'.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/XmlRpc/_files/ZF1897-response-chunked.txt#2025-04-23_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\"?>\n<methodResponse>\n  <params>\n    <param>\n      <value>FOO</value>\n    </param>\n  </params>\n</methodResponse>\n```\n\n----------------------------------------\n\nTITLE: Configuring Device Detection Settings in PHP\nDESCRIPTION: This snippet defines an array of configuration settings for device detection in Zend Framework. It includes browser type, identification sequence, storage adapter, WURFL API settings, and device-specific information.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Http/_files/serialized_device.txt#2025-04-23_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\na:6:{s:12:\"browser_type\";s:7:\"desktop\";s:6:\"config\";a:4:{s:23:\"identification_sequence\";s:14:\"mobile,desktop\";s:26:\"persistent_storage_adapter\";s:13:\"NonPersistent\";s:8:\"wurflapi\";a:2:{s:13:\"wurfl_lib_dir\";s:63:\"/home/matthew/git/zf-standard/tests/Zend/Http/_files/Wurfl/1.1/\";s:17:\"wurfl_config_file\";s:85:\"/home/matthew/git/zf-standard/tests/Zend/Http/_files/Wurfl/resources/wurfl-config.php\";}s:7:\"desktop\";a:1:{s:7:\"matcher\";a:1:{s:9:\"classname\";s:33:\"Zend_Http_TestAsset_DesktopDevice\";}}}s:12:\"device_class\";s:33:\"Zend_Http_TestAsset_DesktopDevice\";s:6:\"device\";s:793:\"a:5:{s:10:\"_aFeatures\";a:19:{s:12:\"browser_name\";s:7:\"desktop\";s:12:\"product_name\";s:7:\"desktop\";s:10:\"user_agent\";s:7:\"desktop\";s:18:\"is_wireless_device\";b:0;s:9:\"is_mobile\";b:0;s:10:\"is_desktop\";b:1;s:9:\"is_tablet\";b:0;s:6:\"is_bot\";b:0;s:8:\"is_email\";b:0;s:7:\"is_text\";b:0;s:25:\"device_claims_web_support\";b:0;s:9:\"client_ip\";s:9:\"127.0.0.1\";s:11:\"php_version\";s:5:\"5.3.1\";s:9:\"server_os\";s:6:\"apache\";s:17:\"server_os_version\";s:6:\"2.2.12\";s:18:\"server_http_accept\";s:3:\"*/*\";s:27:\"server_http_accept_language\";s:5:\"fr-FR\";s:9:\"server_ip\";s:9:\"127.0.0.1\";s:11:\"server_name\";s:8:\"zfmobile\";}s:8:\"_browser\";s:7:\"desktop\";s:15:\"_browserVersion\";s:0:\"\";s:10:\"_userAgent\";s:7:\"desktop\";s:7:\"_images\";a:6:{i:0;s:4:\"jpeg\";i:1;s:3:\"gif\";i:2;s:3:\"png\";i:3;s:5:\"pjpeg\";i:4;s:5:\"x-png\";i:5;s:3:\"bmp\";}}\";s:10:\"user_agent\";s:7:\"desktop\";s:11:\"http_accept\";s:3:\"*/*\";}\n```\n\n----------------------------------------\n\nTITLE: Browser Detection and Flash Support Check Implementation\nDESCRIPTION: Class that detects browser type, platform and Flash plugin support. Uses user agent string parsing and plugin detection to identify browser capabilities.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Uri/_files/testVeryLongUriZF3712.txt#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction CAWBrowser(){\n\tvar ua = navigator.userAgent;\n\tthis.msie = (ua && ( parseFloat( navigator.appVersion )  >=4 ) && ( ua.indexOf(\"Opera\") < 0 ) && ( ua.indexOf(\"MSIE 4\") < 0 ) && ( ua.indexOf( \"MSIE\" ) >=0) );\n\tthis.win = (ua && ((ua.indexOf( \"Windows 95\" ) >=0) || (ua.indexOf(\"Windows NT\")>=0 ) || (ua.indexOf(\"Windows 98\")>=0) ) );\n\tthis.mac = (navigator.platform && (navigator.platform.indexOf('Mac')!=-1));\n\tthis.opera7 = ((ua.indexOf('Opera') != -1) && window.opera && document.readyState) ? 1 : 0;\n\tthis.gecko   = (ua.toLowerCase().indexOf('gecko') != -1) && (ua.indexOf('safari') == -1);\n\thaveFlash1234562404000 = (navigator.mimeTypes && navigator.mimeTypes[\"application/x-shockwave-flash\"]) ? navigator.mimeTypes[\"application/x-shockwave-flash\"].enabledPlugin : 0;\n\tif( haveFlash1234562404000 ){\n\t\thaveFlash1234562404000 = (parseInt(haveFlash1234562404000.description.substring(haveFlash1234562404000.description.indexOf(\".\"-1)))>=6);\n\t}else if ( this.msie && this.win && !this.mac){\n\t\tdocument.write('<SCR' + 'IPT LANGUAGE=VBScript\\n'\n\t\t\t+ ' on error resume next \\n'\n\t\t\t+ ' haveFlash1234562404000 = (IsObject(CreateObject(\"ShockwaveFlash.ShockwaveFlash.6\")))\\n'\n\t\t\t+ '</SCR' + 'IPT\\n' );\n\t}\n\t\n\tthis.other = !( (this.gecko || this.msie) && this.win && !this.mac);\n\tthis.desc =  this.msie ? \"msie \" : this.gecko ? \"gecko \" : this.opera7 ? \"opera7(other) \" : this.other? \"other\" : \"ukn\";\n\tthis.flash = haveFlash1234562404000 ? 6 : 0;\t\n}\n```\n\n----------------------------------------\n\nTITLE: Advertisement Code Management Implementation\nDESCRIPTION: Class that handles advertisement code generation and insertion including different formats (GIF, HTML, SWF, JavaScript). Contains methods for writing various ad formats and managing ad placement.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Uri/_files/testVeryLongUriZF3712.txt#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction CAWCode1234562404000(){\n\tthis.server = \"engine.awaps.net\";\n\tthis.section = 123456;\n\tthis.adw_w = 240;\n\tthis.adw_h = 400;\n\tthis.wh = \"240400\";\n\tthis.subsection = 0;\n\tthis.uniq = \"1234562404000\";\n\tthis.html_code = \"\";\n\tthis.adw_a = 0;\n\tthis.adw_p = 0;\n\tthis.i_type = 0;\n\tthis.seed = Math.round(Math.random()*65535);\n\t/* Additional methods omitted for brevity */\n}\n```\n\n----------------------------------------\n\nTITLE: Building Zend Framework Documentation with GNU Tools\nDESCRIPTION: Commands to compile the Zend Framework documentation from XML to HTML using autoconf, configure, and make. These steps should be executed in the directory containing manual.xml after setting up the required environment.\nSOURCE: https://github.com/zendframework/zf1/blob/master/documentation/manual/README.txt#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ autoconf\n$ ./configure\n$ make\n```\n\n----------------------------------------\n\nTITLE: Running Zend Session Unit Tests via PHP CLI\nDESCRIPTION: Commands to navigate to the test directory and execute the Zend_Session test suite using PHP CLI. This must be run from the command line interface due to requirements around session handling and header management.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Session/README.txt#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cd /path/to/zend_framework/tests/Zend/Session\n$ php AllTests.php\n```\n\n----------------------------------------\n\nTITLE: Updating Local ZF1 Repository\nDESCRIPTION: Commands to update the local master branch with changes from the canonical ZF1 repository and optionally push to the remote fork.\nSOURCE: https://github.com/zendframework/zf1/blob/master/README-GIT.md#2025-04-23_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n% git checkout master\n% git pull zf1 master\n- OPTIONALLY, to keep your remote up-to-date -\n% git push origin\n```\n\n----------------------------------------\n\nTITLE: Cloning and Configuring ZF1 Fork (GitHub)\nDESCRIPTION: Commands for cloning a fork of the ZF1 repository from GitHub and adding the canonical ZF1 repository as a remote.\nSOURCE: https://github.com/zendframework/zf1/blob/master/README-GIT.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n% git clone git@github.com:<username>/zf1.git\n% cd zf1\n% git remote add zf1 https://github.com/zendframework/zf1.git\n% git fetch zf1\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Local and Remote Branches (ZF1)\nDESCRIPTION: Commands for removing local and remote branches after changes have been accepted into the master ZF1 repository.\nSOURCE: https://github.com/zendframework/zf1/blob/master/README-GIT.md#2025-04-23_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n% git branch -d <branchname>\n% git push origin :<branchname>\n```\n\n----------------------------------------\n\nTITLE: Creating and Pushing Feature Branch (ZF1)\nDESCRIPTION: Workflow for creating a new feature branch, making changes, committing, and pushing to the remote repository for a ZF1 issue.\nSOURCE: https://github.com/zendframework/zf1/blob/master/README-GIT.md#2025-04-23_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n% git checkout -b zf9295\nSwitched to a new branch 'zf9295'\n... do some work ...\n% git commit\n... write your log message ...\n% git push origin HEAD:zf9295\nCounting objects: 38, done.\nDelta compression using up to 2 threads.\nCompression objects: 100% (18/18), done.\nWriting objects: 100% (20/20), 8.19KiB, done.\nTotal 20 (delta 12), reused 0 (delta 0)\nTo ssh://git@github.com/weierophinney/zf1.git\n   b5583aa..4f51698  HEAD -> master\n```\n\n----------------------------------------\n\nTITLE: Setting Up Personal ZF1 Repository\nDESCRIPTION: Steps to initialize a new Git repository, add remotes for personal and ZF1 repositories, and create branches for ZF1 development.\nSOURCE: https://github.com/zendframework/zf1/blob/master/README-GIT.md#2025-04-23_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n% git init\n% git remote add origin git://yourdomain/yourrepo.git\n% git remote add zf1 https://github.com/zendframework/zf1.git\n% git fetch zf1\n% git checkout -b zf/master zf1/master\n% git checkout -b master\n% git push origin HEAD:master\n```\n\n----------------------------------------\n\nTITLE: Git Commands for Zend Framework Repository\nDESCRIPTION: Commands for updating a working copy of Zend Framework using git.\nSOURCE: https://github.com/zendframework/zf1/blob/master/INSTALL.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit fetch && git rebase origin/master\n```\n\n----------------------------------------\n\nTITLE: Subversion Repository URLs for Zend Framework\nDESCRIPTION: SVN repository URLs for accessing different versions of Zend Framework before and after version 1.12.0.\nSOURCE: https://github.com/zendframework/zf1/blob/master/INSTALL.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://framework.zend.com/svn/framework/standard/branches/release-1.{minor version}\nhttp://framework.zend.com/svn/framework/standard/tags/release-1.{minor version}.{maintenance version}\nhttp://framework.zend.com/svn/framework/extras/branches/release-1.{minor version}\n\nhttps://github.com/zendframework/zf1/trunk\nhttps://github.com/zendframework/zf1/tags/release-1.12.{maintenance version}\nhttps://github.com/zendframework/zf1-extras/trunk\n```\n\n----------------------------------------\n\nTITLE: Selecting PHP Version\nDESCRIPTION: Command to select the built PHP version for use\nSOURCE: https://github.com/zendframework/zf1/blob/master/DEVELOPMENT_README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npe 5.3.11\n```\n\n----------------------------------------\n\nTITLE: Running PHPUnit Tests\nDESCRIPTION: Commands to navigate to test directory and run specific PHPUnit tests with memory limit disabled\nSOURCE: https://github.com/zendframework/zf1/blob/master/DEVELOPMENT_README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncd /vagrant/tests\nphpunit --stderr -d memory_limit=-1 Zend/Acl/AclTest.php\nphpunit --stderr -d memory_limit=-1 Zend/Amf/AllTests.php\n```\n\n----------------------------------------\n\nTITLE: Building PHP Version\nDESCRIPTION: Command to build a specific version of PHP (5.3.11) in the virtual machine\nSOURCE: https://github.com/zendframework/zf1/blob/master/DEVELOPMENT_README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nphp-build.sh 5.3.11\n```\n\n----------------------------------------\n\nTITLE: Updating Puppet Configuration\nDESCRIPTION: Command to rerun Puppet provisioning after manifest changes\nSOURCE: https://github.com/zendframework/zf1/blob/master/DEVELOPMENT_README.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nvagrant provision\n```\n\n----------------------------------------\n\nTITLE: Cloning ZF1 Repository\nDESCRIPTION: Commands to clone the ZF1 repository and navigate to the project directory\nSOURCE: https://github.com/zendframework/zf1/blob/master/DEVELOPMENT_README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git://github.com/zendframework/zf1.git zf1-dev\ncd zf1-dev\n```\n\n----------------------------------------\n\nTITLE: Starting Vagrant VM\nDESCRIPTION: Command to initialize and start the Vagrant virtual machine\nSOURCE: https://github.com/zendframework/zf1/blob/master/DEVELOPMENT_README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nvagrant up\n```\n\n----------------------------------------\n\nTITLE: Managing Vagrant VM\nDESCRIPTION: Commands for suspending, halting, or destroying the Vagrant virtual machine\nSOURCE: https://github.com/zendframework/zf1/blob/master/DEVELOPMENT_README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nvagrant suspend   # if you plan on running it later\nvagrant halt      # if you wish to turn off the VM, but keep it around\nvagrant destroy   # if you wish to delete the VM completely\n```\n\n----------------------------------------\n\nTITLE: SSH into Vagrant VM\nDESCRIPTION: Command to establish SSH connection to the running Vagrant virtual machine\nSOURCE: https://github.com/zendframework/zf1/blob/master/DEVELOPMENT_README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nvagrant ssh\n```\n\n----------------------------------------\n\nTITLE: Subscribing to ZF Contributor's Mailing List\nDESCRIPTION: Command to subscribe to the Zend Framework contributor's mailing list. This mailing list is a resource for contributors to discuss and coordinate development efforts.\nSOURCE: https://github.com/zendframework/zf1/blob/master/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nzf-contributors-subscribe@lists.zend.com\n```\n\n----------------------------------------\n\nTITLE: Reporting Security Vulnerabilities Email\nDESCRIPTION: Email address for reporting potential security vulnerabilities in Zend Framework. This is used to privately disclose security issues to the maintainers.\nSOURCE: https://github.com/zendframework/zf1/blob/master/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nzf-security@zend.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Git User Email\nDESCRIPTION: Command to set the user email in the Git configuration to match the email associated with the contributor's CLA.\nSOURCE: https://github.com/zendframework/zf1/blob/master/README-GIT.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n% git config user.email \"your-email@example.org\"\n```\n\n----------------------------------------\n\nTITLE: Testing Pattern for Queue Operations in ZF1\nDESCRIPTION: Important note about matching receive() and send() operations in queue tests to prevent test interference. Recommends deleting and recreating queues between tests if needed for clean state.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Queue/Adapter/WARNING.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nreceive() for every send()\n```\n\n----------------------------------------\n\nTITLE: HTTP Headers for Atom Feed Entry\nDESCRIPTION: This snippet shows the HTTP headers returned when requesting an Atom feed entry. It includes important metadata such as content type, last modified date, and caching information.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Gdata/_files/AppSample2.txt#2025-04-23_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 200 OK\nContent-Type: application/atom+xml; charset=UTF-8\nLast-Modified: Sun, 07 Sep 2008 17:53:51 GMT\nCache-Control: max-age=0 private\nETag: W/\"CkcHQH8_fCp7ImA9WxRTGEw.\"\nDate: Sun, 07 Sep 2008 21:23:39 GMT\nContent-Length: 1450\nServer: GFE/1.3\n```\n\n----------------------------------------\n\nTITLE: HTTP Headers for XML-RPC Response\nDESCRIPTION: HTTP response headers showing server configuration and content metadata for an XML-RPC response.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/XmlRpc/_files/ZF1897-response-chunked.txt#2025-04-23_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 200 OK\nDate: Thu, 06 Sep 2007 14:58:44 GMT\nServer: Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_python/3.1.3 Python/2.3.5 mod_ssl/2.0.54 OpenSSL/0.9.7e PHP/5.1.6\nX-Powered-By: PHP/5.1.6\nConnection: close\nTransfer-Encoding: chunked\nContent-Type: text/html; charset=iso-8859-1\n```\n\n----------------------------------------\n\nTITLE: HTTP Response Headers\nDESCRIPTION: HTTP/1.1 response headers for an Atom XML feed entry, including content type, caching directives, and server information.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Gdata/App/_files/EntrySampleHttp1.txt#2025-04-23_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 200 OK\nContent-Type: application/atom+xml; charset=UTF-8\nLast-Modified: Sun, 07 Sep 2008 17:53:51 GMT\nCache-Control: max-age=0 private\nETag: W/\"CkcHQH8_fCp7ImA9WxRTGEw.\"\nDate: Sun, 07 Sep 2008 21:23:39 GMT\nContent-Length: 1450\nServer: GFE/1.3\n```\n\n----------------------------------------\n\nTITLE: HTTP Response Headers\nDESCRIPTION: Standard HTTP/1.1 response headers for an Atom XML feed entry, including content type, caching directives, and server information.\nSOURCE: https://github.com/zendframework/zf1/blob/master/tests/Zend/Gdata/_files/AppSample1.txt#2025-04-23_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 200 OK\nContent-Type: application/atom+xml; charset=UTF-8\nLast-Modified: Sun, 07 Sep 2008 17:53:51 GMT\nCache-Control: max-age=0 private\nETag: W/\"CkcHQH8_fCp7ImA9WxRTGEw.\"\nGdata-Version: 1.2\nDate: Sun, 07 Sep 2008 21:23:39 GMT\nContent-Length: 1450\nServer: GFE/1.3\n```"
  }
]
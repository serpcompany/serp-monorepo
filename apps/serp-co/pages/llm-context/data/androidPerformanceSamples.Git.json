[
  {
    "owner": "android",
    "repo": "performance-samples.git",
    "content": "TITLE: GitHub Workflow Configuration for Macrobenchmark Tests\nDESCRIPTION: Complete GitHub Actions workflow configuration that builds Android app and macrobenchmark APKs, then runs them on Firebase Test Lab. Includes steps for Java setup, Gradle build, and test execution.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MacrobenchmarkSample/ftl/README.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: Build and Run Macrobenchmarks\non:\n  push:\n    branches: [ macrobenchmark ]\n  workflow_dispatch:\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          fetch-depth: 1\n    \n      - name: Setup JDK\n        id: setup-java\n        uses: actions/setup-java@v1\n        with:\n          java-version: \"11\"\n            \n      - name: Build Macrobenchmark Sample\n        uses: eskatos/gradle-command-action@v1\n        env:\n          JAVA_HOME: ${{ steps.setup-java.outputs.path }}\n        with:\n          arguments: build\n          build-root-directory: ${{ github.workspace }}/...\n          gradle-executable: ${{ github.workspace }}/.../gradlew\n          wrapper-directory: ${{ github.workspace }}/.../gradle/wrapper\n\n      - name: Set up Cloud SDK\n        uses: google-github-actions/setup-gcloud@master\n        with:\n          project_id: ${{ secrets.GCP_PROJECT_ID }}\n          service_account_key: ${{ secrets.GCP_SA_KEY }}\n          export_default_credentials: true\n\n      - name: Run Macrobenchmarks\n        run: |\n          gcloud firebase test android run \\\n            --type instrumentation \\\n            --app ${{ github.workspace }}/MacrobenchmarkSample/app/build/outputs/apk/benchmark/app-benchmark.apk \\\n            --test ${{ github.workspace }}/MacrobenchmarkSample/macrobenchmark/build/outputs/apk/benchmark/macrobenchmark-benchmark.apk \\\n            --device model=redfin,version=30,locale=en,orientation=portrait \\\n            --directories-to-pull /sdcard/Download \\\n            --results-bucket gs://macrobenchmark-results \\\n            --environment-variables additionalTestOutputDir=/sdcard/Download,no-isolated-storage=true \\\n            --timeout 20m\n```\n\n----------------------------------------\n\nTITLE: Sample Macrobenchmark Results Output\nDESCRIPTION: Example output showing frame timing benchmark results with composition tracing metrics, including EntryRow measurements and frame duration statistics\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MacrobenchmarkSample/README.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nFrameTimingBenchmark_scrollComposeList\n%EntryRow (%Count                                    min   5.0,   median   6.0,   max   6.0\n%EntryRow (%Ms                                       min  10.2,   median  11.8,   max  16.2\nEntryRowCustomTraceCount                             min   5.0,   median   6.0,   max   6.0\nEntryRowCustomTraceMs                                min  10.0,   median  11.7,   max  16.1\n\nframeDurationCpuMs                                   P50    4.8,   P90    6.8,   P95    8.9,   P99   15.3\nframeOverrunMs                                       P50   -9.2,   P90   -1.9,   P95  266.9,   P99  310.9\nTraces: Iteration 0 1 2 3 4 5 6 7 8 9\n```\n\n----------------------------------------\n\nTITLE: Running Macrobenchmark Tests via Gradle\nDESCRIPTION: Command to execute macrobenchmark tests using Gradle from the terminal\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MacrobenchmarkSample/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./gradlew macrobenchmark:cC\n```\n\n----------------------------------------\n\nTITLE: Running Microbenchmarks via Gradle Command\nDESCRIPTION: This command demonstrates how to run the microbenchmarks using Gradle from the command line. It executes the connected check task for the benchmark module.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MicrobenchmarkSample/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n./gradlew benchmark:connectedCheck\n```\n\n----------------------------------------\n\nTITLE: Locking CPU Clocks for Stable Benchmarking\nDESCRIPTION: These Gradle commands show how to lock and unlock CPU clocks on a rooted device for stable benchmarking. Locking clocks helps in getting consistent benchmark results.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MicrobenchmarkSample/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n./gradlew lockClocks\n```\n\nLANGUAGE: Shell\nCODE:\n```\n./gradlew unlockClocks\n```\n\n----------------------------------------\n\nTITLE: Jetpack Compose Macrobenchmark Implementation\nDESCRIPTION: Benchmarking implementation for Jetpack Compose using Macrobenchmark library, referenced in the documentation. However, the actual code is not shown in the provided text.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/README.md#2025-04-22_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Firebase Project Configuration Commands\nDESCRIPTION: CLI commands for initializing and configuring a Firebase project with Google Cloud Platform integration.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MacrobenchmarkSample/ftl/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Initialize gcloud CLI with a GCP admin credentials/\n# Will launch a browser and complete an OAuth flow.\ngcloud auth login\n\n# Login to firebase using the CLI.\n# Will launch a browser and complete an OAuth flow.\nfirebase login\n\n# Choose a default GCP project\ngcloud config set project <your_project_id>\n```\n\n----------------------------------------\n\nTITLE: Deploying Firebase Cloud Functions\nDESCRIPTION: Command to deploy Firebase cloud functions for the selected Google Cloud Platform project. This only deploys the functions component of the Firebase project.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MacrobenchmarkSample/ftl/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nfirebase deploy --only functions\n```\n\n----------------------------------------\n\nTITLE: Deploying Firebase Functions\nDESCRIPTION: Deploys only the functions component to Firebase using the Firebase CLI.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MacrobenchmarkSample/functions/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nfirebase deploy --only functions\n```\n\n----------------------------------------\n\nTITLE: Setting Package Name Environment Variable\nDESCRIPTION: Environment variable configuration for the Macrobenchmark target app package name. This is required for the cloud function to identify which app's performance to track.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MacrobenchmarkSample/ftl/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# The Macrobenchmark target app package name\n# Example:\npackage_name = \"com.example.macrobenchmark\"\n```\n\n----------------------------------------\n\nTITLE: Setting Device Configurations Environment Variable\nDESCRIPTION: Environment variable configuration for specifying which device configurations to track metrics for. This should match the devices being tested in the GitHub workflow.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MacrobenchmarkSample/ftl/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# The device configurations you are interested in tracking metrics for.\n# This should match the device that you are testing on in the GitHub workflow.\n# Example:\ndevice_configurations = [\"redfin-30-en-portrait\"]\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Macrobenchmark Testing\nDESCRIPTION: Configures environment variables for the target package name and device configurations used in macrobenchmark testing.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MacrobenchmarkSample/functions/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Example: Setup Environment Variables.\npackage_name=\"com.example.macrobenchmark.target\"\ndevice_configurations='[\"flame-30-en-portrait\"]'\n```\n\n----------------------------------------\n\nTITLE: Initializing GCloud Project Configuration\nDESCRIPTION: Sets the Google Cloud project ID for the macrobenchmark samples project.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MacrobenchmarkSample/functions/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud config set project macrobenchmark-samples-6670d\n```\n\n----------------------------------------\n\nTITLE: Firebase Project Configuration JSON\nDESCRIPTION: Configuration file for setting the default Firebase project ID.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/MacrobenchmarkSample/ftl/README.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"projects\": {\n    \"default\": \"<your_project_id>\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Firebase Test Lab Workflow Configuration\nDESCRIPTION: GitHub workflow configuration referenced in the documentation for running Macrobenchmarks on Firebase Test Lab. However, the actual code is not shown in the provided text.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/README.md#2025-04-22_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Displaying Project Contribution Guidelines in Markdown\nDESCRIPTION: This Markdown document explains how to contribute to the Android Performance Samples project. It covers the Contributor License Agreement, code review process using GitHub pull requests, and adherence to Google's Open Source Community Guidelines.\nSOURCE: https://github.com/android/performance-samples.git/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# How to Contribute\n\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\n\n## Contributor License Agreement\n\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\n\n## Code reviews\n\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\n[GitHub Help](https://help.github.com/articles/about-pull-requests/) for more\ninformation on using pull requests.\n\n## Community Guidelines\n\nThis project follows\n[Google's Open Source Community Guidelines](https://opensource.google.com/conduct/).\n```"
  }
]
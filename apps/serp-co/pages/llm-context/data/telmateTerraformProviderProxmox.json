[
  {
    "owner": "telmate",
    "repo": "terraform-provider-proxmox",
    "content": "TITLE: Creating a Basic Proxmox VM Qemu Resource in Terraform HCL\nDESCRIPTION: This snippet demonstrates how to create a basic Proxmox VM Qemu resource using Terraform. It shows options for creating a VM from an ISO, cloning an existing VM, or setting up a PXE boot VM.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"resource-name\" {\n  name        = \"VM-name\"\n  target_node = \"Node to create the VM on\"\n\n  disks {\n    ide {\n      ide2 {\n        cdrom {\n          iso = \"ISO file\"\n        }\n      }\n    }\n  }\n\n  ### or for a Clone VM operation\n  # clone = \"template to clone\"\n\n  ### or for a PXE boot VM operation\n  # pxe = true\n  # boot = \"scsi0;net0\"\n  # agent = 0\n}\n```\n\n----------------------------------------\n\nTITLE: Terraform Configuration for Cloud-Init VM Deployment\nDESCRIPTION: Complete Terraform configuration to create a VM from the Cloud-Init template. Includes VM specifications, Cloud-Init settings, disk configuration, network setup, and the required provider configuration.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/cloud-init getting started.md#2025-04-21_snippet_6\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"cloudinit-example\" {\n  vmid        = 100\n  name        = \"test-terraform0\"\n  target_node = \"pve\"\n  agent       = 1\n  cores       = 2\n  memory      = 1024\n  boot        = \"order=scsi0\" # has to be the same as the OS disk of the template\n  clone       = \"debian12-cloudinit\" # The name of the template\n  scsihw      = \"virtio-scsi-single\"\n  vm_state    = \"running\"\n  automatic_reboot = true\n\n  # Cloud-Init configuration\n  cicustom   = \"vendor=local:snippets/qemu-guest-agent.yml\" # /var/lib/vz/snippets/qemu-guest-agent.yml\n  ciupgrade  = true\n  nameserver = \"1.1.1.1 8.8.8.8\"\n  ipconfig0  = \"ip=192.168.1.10/24,gw=192.168.1.1,ip6=dhcp\"\n  skip_ipv6  = true\n  ciuser     = \"root\"\n  cipassword = \"Enter123!\"\n  sshkeys    = \"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIE/Pjg7YXZ8Yau9heCc4YWxFlzhThnI+IhUx2hLJRxYE Cloud-Init@Terraform\"\n\n  # Most cloud-init images require a serial device for their display\n  serial {\n    id = 0\n  }\n\n  disks {\n    scsi {\n      scsi0 {\n        # We have to specify the disk from our template, else Terraform will think it's not supposed to be there\n        disk {\n          storage = \"local-lvm\"\n          # The size of the disk should be at least as big as the disk in the template. If it's smaller, the disk will be recreated\n          size    = \"2G\" \n        }\n      }\n    }\n    ide {\n      # Some images require a cloud-init disk on the IDE controller, others on the SCSI or SATA controller\n      ide1 {\n        cloudinit {\n          storage = \"local-lvm\"\n        }\n      }\n    }\n  }\n\n  network {\n    id = 0\n    bridge = \"vmbr0\"\n    model  = \"virtio\"\n  }\n}\n\nterraform {\n  required_providers {\n    proxmox = {\n      source = \"Telmate/proxmox\"\n      version = \">=3.0.1rc4\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider with Username and Password (Bash/HCL)\nDESCRIPTION: This snippet shows how to set environment variables for Proxmox credentials and configure the provider in Terraform HCL.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/index.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport PM_USER=\"terraform-prov@pve\"\nexport PM_PASS=\"password\"\n```\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  pm_api_url = \"https://proxmox-server01.example.com:8006/api2/json\"\n  pm_tls_insecure = true # By default Proxmox Virtual Environment uses self-signed certificates.\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider with API Token (Bash/HCL)\nDESCRIPTION: This snippet demonstrates setting up environment variables for API token authentication and configuring the provider in Terraform HCL.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/index.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport PM_API_TOKEN_ID=\"terraform-prov@pve!mytoken\"\nexport PM_API_TOKEN_SECRET=\"afcd8f45-acc1-4d0f-bb12-a70b0777ec11\"\n```\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  pm_api_url = \"https://proxmox-server01.example.com:8006/api2/json\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring VM Arguments in Proxmox Terraform Provider\nDESCRIPTION: Markdown table documenting all supported arguments for configuring a VM resource in Proxmox. Includes argument names, types, default values, and descriptions for each configuration option.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Argument                      | Type     | Default Value        | Description |\n| ----------------------------- | -------- | -------------------- | ----------- |\n| `name`                        | `str`    |                      | **Required** The name of the VM within Proxmox. |\n| `target_node`                 | `str`    |                      | The name of the PVE Node on which to place the VM.|\n| `target_nodes`                | `str`    |                      | A list of PVE node names on which to place the VM.|\n| `vmid`                        | `int`    | `0`                  | The ID of the VM in Proxmox. The default value of `0` indicates it should use the next available ID in the sequence. |\n```\n\n----------------------------------------\n\nTITLE: Creating Cloud Init Disk and VM Configuration in Terraform\nDESCRIPTION: Example configuration for creating a cloud-init disk resource in Proxmox using Terraform. The configuration includes setting up local variables, creating a cloud-init disk with metadata, user data, and network configuration, and attaching it to a Proxmox VM as a CD-ROM device.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/cloud_init_disk.md#2025-04-21_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nlocals {\n  vm_name          = \"awesome-vm\"\n  pve_node         = \"pve-node-1\"\n  iso_storage_pool = \"cephfs\"\n}\n\nresource \"proxmox_cloud_init_disk\" \"ci\" {\n  name      = local.vm_name\n  pve_node  = local.pve_node\n  storage   = local.iso_storage_pool\n\n  meta_data = yamlencode({\n    instance_id    = sha1(local.vm_name)\n    local-hostname = local.vm_name\n  })\n\n  user_data = <<-EOT\n  #cloud-config\n  users:\n    - default\n  ssh_authorized_keys:\n    - ssh-rsa AAAAB3N......\n  EOT\n\n  network_config = yamlencode({\n    version = 1\n    config = [{\n      type = \"physical\"\n      name = \"eth0\"\n      subnets = [{\n        type            = \"static\"\n        address         = \"192.168.1.100/24\"\n        gateway         = \"192.168.1.1\"\n        dns_nameservers = [\n          \"1.1.1.1\", \n          \"8.8.8.8\"\n          ]\n      }]\n    }]\n  })\n}\n\nresource \"proxmox_vm_qemu\" \"vm\" {\n...\n  // Define a disk block with media type cdrom which reference the generated cloud-init disk\n  disks {\n    scsi {\n      scsi0 {\n        cdrom {\n          iso = \"${proxmox_cloud_init_disk.ci.id}\"\n        }\n      }\n    }\n  }\n...\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Cloud-Init VM Configuration in Terraform\nDESCRIPTION: Creates a Proxmox VM with basic Cloud-Init configuration using automatically generated configuration. Includes network configuration, SSH keys, and basic VM specifications.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/cloud_init.md#2025-04-21_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"cloudinit-test\" {\n  name        = \"tftest1.xyz.com\"\n  desc        = \"tf description\"\n  target_node = \"proxmox1-xx\"\n\n  clone = \"ci-ubuntu-template\"\n\n  pool = \"pool0\"\n\n  storage = \"local\"\n  cores   = 3\n  sockets = 1\n  memory  = 2560\n  disk_gb = 4\n  nic     = \"virtio\"\n  bridge  = \"vmbr0\"\n\n  ssh_user        = \"root\"\n  ssh_private_key = <<EOF\n-----BEGIN RSA PRIVATE KEY-----\nprivate ssh key root\n-----END RSA PRIVATE KEY-----\nEOF\n\n  os_type   = \"cloud-init\"\n  ipconfig0 = \"ip=10.0.2.99/16,gw=10.0.2.2\"\n\n  sshkeys = <<EOF\nssh-rsa AABB3NzaC1kj...key1\nssh-rsa AABB3NzaC1kj...key2\nEOF\n\n  provisioner \"remote-exec\" {\n    inline = [\n      \"ip a\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Disks Block for Proxmox VM in Terraform\nDESCRIPTION: Example of using the 'disks' block to configure multiple disk devices for a Proxmox VM. This snippet shows the structure for defining IDE, SATA, SCSI, and VirtIO disks within a single resource block.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_6\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"resource-name\" {\n  //<arguments omitted for brevity...>\n\n  disks {\n    ide {\n      //<arguments omitted for brevity...>\n    }\n    sata {\n      //<arguments omitted for brevity...>\n    }\n    scsi {\n      //<arguments omitted for brevity...>\n    }\n    virtio {\n      //<arguments omitted for brevity...>\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Network Devices for Proxmox VM in Terraform\nDESCRIPTION: This snippet outlines the network block configuration options for a Proxmox virtual machine. It includes settings for network card model, MAC address, bridge, VLAN tagging, firewall, MTU, rate limiting, and more.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| Argument    | Type   | Default Value | Description |\n| ----------- | ------ | ------------- | ----------- |\n| `id`        | `int`  |               | **Required** The ID of the network device `0`-`31`. |\n| `model`     | `str`  |               | **Required** Network Card Model. The virtio model provides the best performance with very low CPU overhead. If your guest does not support this driver, it is usually best to use e1000. Options: `e1000`, `e1000-82540em`, `e1000-82544gc`, `e1000-82545em`, `i82551`, `i82557b`, `i82559er`, `ne2k_isa`, `ne2k_pci`, `pcnet`, `rtl8139`, `virtio`, `vmxnet3`. |\n| `macaddr`   | `str`  |               | Override the randomly generated MAC Address for the VM. Requires the MAC Address be Unicast.  |\n| `bridge`    | `str`  | `\"nat\"`       | Bridge to which the network device should be attached. The Proxmox VE standard bridge is called `vmbr0`. |\n| `tag`       | `int`  | `0`           | The VLAN tag to apply to packets on this device. `0` disables VLAN tagging. |\n| `firewall`  | `bool` | `false`       | Whether to enable the Proxmox firewall on this network device. |\n| `mtu`       | `int`  |               | The MTU value for the network device. On ``virtio`` models, set to ``1`` to inherit the MTU value from the underlying bridge. |\n| `rate`      | `int`  | `0`           | Network device rate limit in mbps (megabytes per second) as floating point number. Set to `0` to disable rate limiting. |\n| `queues`    | `int`  | `1`           | Number of packet queues to be used on the device. Requires `virtio` model to have an effect. |\n| `link_down` | `bool` | `false`       | Whether this interface should be disconnected (like pulling the plug). |\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox User and Role for Terraform (Bash)\nDESCRIPTION: These commands create a new role, user, and assign privileges for Terraform in Proxmox. It includes steps for both Proxmox versions 8 and above, and below 8.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/index.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npveum role add TerraformProv -privs \"Datastore.AllocateSpace Datastore.AllocateTemplate Datastore.Audit Pool.Allocate Sys.Audit Sys.Console Sys.Modify VM.Allocate VM.Audit VM.Clone VM.Config.CDROM VM.Config.Cloudinit VM.Config.CPU VM.Config.Disk VM.Config.HWType VM.Config.Memory VM.Config.Network VM.Config.Options VM.Migrate VM.Monitor VM.PowerMgmt SDN.Use\"\npveum user add terraform-prov@pve --password <password>\npveum aclmod / -user terraform-prov@pve -role TerraformProv\n```\n\nLANGUAGE: bash\nCODE:\n```\npveum role modify TerraformProv -privs \"Datastore.AllocateSpace Datastore.AllocateTemplate Datastore.Audit Pool.Allocate Sys.Audit Sys.Console Sys.Modify VM.Allocate VM.Audit VM.Clone VM.Config.CDROM VM.Config.Cloudinit VM.Config.CPU VM.Config.Disk VM.Config.HWType VM.Config.Memory VM.Config.Network VM.Config.Options VM.Migrate VM.Monitor VM.PowerMgmt SDN.Use\"\n```\n\nLANGUAGE: bash\nCODE:\n```\npveum role modify TerraformProv -privs \"Datastore.AllocateSpace Datastore.AllocateTemplate Datastore.Audit Pool.Allocate Sys.Audit Sys.Console Sys.Modify VM.Allocate VM.Audit VM.Clone VM.Config.CDROM VM.Config.Cloudinit VM.Config.CPU VM.Config.Disk VM.Config.HWType VM.Config.Memory VM.Config.Network VM.Config.Options VM.Migrate VM.Monitor VM.PowerMgmt\"\n```\n\nLANGUAGE: bash\nCODE:\n```\npveum user token add terraform-prov@pve mytoken\n```\n\n----------------------------------------\n\nTITLE: Basic Proxmox LXC Container Configuration in Terraform\nDESCRIPTION: Demonstrates the basic configuration for creating a Proxmox LXC container with essential settings including networking and storage. Defines a basic Ubuntu container with DHCP networking and ZFS storage.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/lxc.md#2025-04-21_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_lxc\" \"basic\" {\n  target_node  = \"pve\"\n  hostname     = \"lxc-basic\"\n  ostemplate   = \"local:vztmpl/ubuntu-20.04-standard_20.04-1_amd64.tar.gz\"\n  password     = \"BasicLXCContainer\"\n  unprivileged = true\n\n  // Terraform will crash without rootfs defined\n  rootfs {\n    storage = \"local-zfs\"\n    size    = \"8G\"\n  }\n\n  network {\n    name   = \"eth0\"\n    bridge = \"vmbr0\"\n    ip     = \"dhcp\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Advanced VM Configuration with Pre-provisioning\nDESCRIPTION: Creates a Proxmox VM with advanced configuration including custom networking, CPU settings, display configuration, and SSH port forwarding.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/cloud_init.md#2025-04-21_snippet_3\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"preprovision-test\" {\n  name        = \"tftest1.xyz.com\"\n  desc        = \"tf description\"\n  target_node = \"proxmox1-xx\"\n\n  clone = \"terraform-ubuntu1404-template\"\n  pool = \"pool0\"\n\n  cores    = 3\n  sockets  = 1\n  cpu_type = \"host\"\n  numa     = false\n  memory   = 2560\n  scsihw   = \"lsi\"\n  boot     = \"cdn\"\n  hotplug  = \"network,disk,usb\"\n  bootdisk = \"virtio0\"\n  hastate  = \"\"\n\n  vga {\n    type   = \"std\"\n    memory = 4\n  }\n\n  network {\n    id    = 0\n    model = \"virtio\"\n  }\n  network {\n    id     = 1\n    model  = \"virtio\"\n    bridge = \"vmbr1\"\n  }\n  disk {\n    id           = 0\n    type         = \"virtio\"\n    storage      = \"local-lvm\"\n    storage_type = \"lvm\"\n    size         = \"4G\"\n    backup       = true\n  }\n  serial {\n    id   = 0\n    type = \"socket\"\n  }\n  preprovision    = true\n  ssh_forward_ip  = \"10.0.0.1\"\n  ssh_user        = \"terraform\"\n  ssh_private_key = <<EOF\n-----BEGIN RSA PRIVATE KEY-----\nprivate ssh key terraform\n-----END RSA PRIVATE KEY-----\nEOF\n\n  os_type           = \"ubuntu\"\n  os_network_config = <<EOF\nauto eth0\niface eth0 inet dhcp\nEOF\n\n  connection {\n    type        = \"ssh\"\n    user        = self.ssh_user\n    private_key = self.ssh_private_key\n    host        = self.ssh_host\n    port        = self.ssh_port\n  }\n\n  provisioner \"remote-exec\" {\n    inline = [\n      \"ip a\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Proxmox Disk Configuration Parameters\nDESCRIPTION: Comprehensive table documenting all available disk configuration parameters for Proxmox virtual machines, including their types, default values, supported disk types, and descriptions.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n| Argument               |  Type   | Default Value |      Disk Types       | Description                                                                                                                                                                                                                                                            |\n| :--------------------- | :-----: | :-----------: | :-------------------: | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `asyncio`              |  `str`  |               |         `all`         | The drive's asyncio setting. Options: `io_uring`, `native`, `threads`                                                                                                                                                                                                                  |\n| `backup`               | `bool`  |    `true`     |         `all`         | Whether the drive should be included when making backups.                                                                                                                                                                                                                              |\n| `cache`                |  `str`  |               |         `all`         | The drive's cache mode. Options: `directsync`, `none`, `unsafe`, `writeback`, `writethrough`.                                                                                                                                                                                          |\n| `discard`              | `bool`  |    `false`    |         `all`         | Controls whether to pass discard/trim requests to the underlying storage. Only effective when the underlying storage supports thin provisioning. There are other caveats too, see the [docs about disks](https://pve.proxmox.com/pve-docs/chapter-qm.html#qm_hard_disk) for more info. |\n```\n\n----------------------------------------\n\nTITLE: Configuring a PXE Boot VM in Proxmox using Terraform HCL\nDESCRIPTION: This snippet shows how to configure a Proxmox VM for PXE network boot using Terraform. It includes essential settings such as disabling the agent, setting the boot order, and configuring the network interface.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_1\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"pxe-minimal-example\" {\n    name                      = \"pxe-minimal-example\"\n    agent                     = 0\n    boot                      = \"order=scsi0;net0\"\n    pxe                       = true\n    target_node               = \"test\"\n    network {\n        id = 0\n        bridge    = \"vmbr0\"\n        firewall  = false\n        link_down = false\n        model     = \"e1000\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Disk Block for Proxmox VM in Terraform\nDESCRIPTION: Example of using the 'disk' block to configure a disk device for a Proxmox VM, using an existing VM as a template. This snippet demonstrates setting the disk type, file path, passthrough option, and slot.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_5\n\nLANGUAGE: hcl\nCODE:\n```\ndisk {\n  type        = \"disk\"\n  disk_file   = \"local-lvm:vm-<<<vmid>>>-disk-<<<disk number>>>\"\n  passthrough = true\n  slot        = \"scsi0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Optional Arguments for Proxmox LXC Container in Terraform\nDESCRIPTION: This snippet outlines the optional arguments that can be used when defining a Proxmox LXC container resource in Terraform. It includes system settings, networking options, storage configurations, and various container-specific features.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/lxc.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n* `ostemplate` - The [volume identifier](https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_volumes) that points to\n  the OS template or backup file.\n* `arch` - Sets the container OS architecture type. Default is `\"amd64\"`.\n* `bwlimit` - A number for setting the override I/O bandwidth limit (in KiB/s).\n* `clone` - The lxc vmid to clone\n* `clone_storage` - Target storage for full clone.\n* `cmode` - Configures console mode. `\"tty\"` tries to open a connection to one of the available tty devices. `\"console\"`\n  tries to attach to `/dev/console` instead. `\"shell\"` simply invokes a shell inside the container (no login). Default\n  is `\"tty\"`.\n* `console` - A boolean to attach a console device to the container. Default is `true`.\n* `cores` - The number of cores assigned to the container. A container can use all available cores by default.\n* `cpulimit` - A number to limit CPU usage by. Default is `0`.\n* `cpuunits` - A number of the CPU weight that the container possesses. Default is `1024`.\n* `description` - Sets the container description seen in the web interface.\n* `features` - An object for allowing the container to access advanced features.\n    * `fuse` - A boolean for enabling FUSE mounts.\n    * `keyctl` - A boolean for enabling the `keyctl()` system call.\n    * `mount` - Defines the filesystem types (separated by semicolons) that are allowed to be mounted.\n    * `nesting` - A boolean to allow nested virtualization.\n* `force` - A boolean that allows the overwriting of pre-existing containers.\n* `full` - When cloning, create a full copy of all disks. This is always done when you clone a normal CT. For CT\n  template it creates a linked clone by default.\n* `hastate` - Requested HA state for the resource. One of \"started\", \"stopped\", \"enabled\", \"disabled\", or \"ignored\". See\n  the [docs about HA](https://pve.proxmox.com/pve-docs/chapter-ha-manager.html#ha_manager_resource_config) for more\n  info.\n* `hagroup` - The HA group identifier the resource belongs to (requires `hastate` to be set!). See\n  the [docs about HA](https://pve.proxmox.com/pve-docs/chapter-ha-manager.html#ha_manager_resource_config) for more\n  info.\n* `hookscript` - A string\n  containing [a volume identifier to a script](https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_hookscripts_2)\n  that will be executed during various steps throughout the container's lifetime. The script must be an executable file.\n* `hostname` - Specifies the host name of the container.\n* `ignore_unpack_errors` - A boolean that determines if template extraction errors are ignored during container\n  creation.\n* `lock` - A string for locking or unlocking the VM.\n* `memory` - A number containing the amount of RAM to assign to the container (in MB).\n* `mountpoint` - An object for defining a volume to use as a container mount point. Can be specified multiple times.\n    * `mp` __(required)__ - The path to the mount point as seen from inside the container. The path must not contain\n      symlinks for security reasons.\n    * `size` __(required)__ - Size of the underlying volume. Must end in T, G, M, or K (e.g. `\"1T\"`, `\"1G\"`, `\"1024M\"`\n      , `\"1048576K\"`). Note that this is a read only value.\n    * `slot` __(required)__ - A string containing the number that identifies the mount point (i.e. the `n`\n      in [`mp[n]`](https://pve.proxmox.com/pve-docs/pve-admin-guide.html#pct_mount_points)).\n    * `key` __(required)__ - The number that identifies the mount point (i.e. the `n`\n      in [`mp[n]`](https://pve.proxmox.com/pve-docs/pve-admin-guide.html#pct_mount_points)).\n    * `storage` __(required)__ - A string containing\n      the [volume](https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_storage_backed_mount_points)\n      , [directory](https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_bind_mount_points),\n      or [device](https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_device_mount_points) to be mounted into the\n      container (at the path specified by `mp`). E.g. `local-lvm`, `local-zfs`, `local` etc.\n    * `acl` - A boolean for enabling ACL support. Default is `false`.\n    * `backup` - A boolean for including the mount point in backups. Default is `false`.\n    * `quota` - A boolean for enabling user quotas inside the container for this mount point. Default is `false`.\n    * `replicate` - A boolean for including this volume in a storage replica job. Default is `false`.\n    * `shared` - A boolean for marking the volume as available on all nodes. Default is `false`.\n* `nameserver` - The DNS server IP address used by the container. If neither `nameserver` nor `searchdomain` are\n  specified, the values of the Proxmox host will be used by default.\n* `network` - An object defining a network interface for the container. Can be specified multiple times.\n    * `name` __(required)__ - The name of the network interface as seen from inside the container (e.g. `\"eth0\"`).\n    * `bridge` - The bridge to attach the network interface to (e.g. `\"vmbr0\"`).\n    * `firewall` - A boolean to enable the firewall on the network interface.\n    * `gw` - The IPv4 address belonging to the network interface's default gateway.\n    * `gw6` - The IPv6 address of the network interface's default gateway.\n    * `hwaddr` - A string to set a common MAC address with the I/G (Individual/Group) bit not set. Automatically\n      determined if not set.\n    * `ip` - The IPv4 address of the network interface. Can be a static IPv4 address (in CIDR notation), `\"dhcp\"`,\n      or `\"manual\"`.\n    * `ip6` - The IPv6 address of the network interface. Can be a static IPv6 address (in CIDR notation), `\"auto\"`\n      , `\"dhcp\"`, or `\"manual\"`.\n    * `mtu` - A string to set the MTU on the network interface.\n    * `rate` - A number that sets rate limiting on the network interface (Mbps).\n    * `tag` - A number that specifies the VLAN tag of the network interface. Automatically determined if not set.\n* `onboot` - A boolean that determines if the container will start on boot. Default is `false`.\n* `ostype` - The operating system type, used by LXC to set up and configure the container. Automatically determined if\n  not set.\n* `password` - Sets the root password inside the container.\n* `pool` - The name of the Proxmox resource pool to add this container to.\n* `protection` - A boolean that enables the protection flag on this container. Stops the container and its disk from\n  being removed/updated. Default is `false`.\n* `restore` - A boolean to mark the container creation/update as a restore task.\n* `rootfs` - An object for configuring the root mount point of the container. Can only be specified once.\n    * `size` __(required)__ - Size of the underlying volume. Must end in T, G, M, or K (e.g. `\"1T\"`, `\"1G\"`, `\"1024M\"`\n      , `\"1048576K\"`). Note that this is a read only value.\n    * `storage` __(required)__ - A string containing\n      the [volume](https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_storage_backed_mount_points)\n      , [directory](https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_bind_mount_points),\n      or [device](https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_device_mount_points) to be mounted into the\n      container (at the path specified by `mp`). E.g. `local-lvm`, `local-zfs`, `local` etc.\n* `searchdomain` - Sets the DNS search domains for the container. If neither `nameserver` nor `searchdomain` are\n  specified, the values of the Proxmox host will be used by default.\n* `ssh_public_keys` - Multi-line string of SSH public keys that will be added to the container. Can be defined\n  using [heredoc syntax](https://www.terraform.io/docs/configuration/expressions/strings.html#heredoc-strings).\n* `start` - A boolean that determines if the container is started after creation. Default is `false`.\n* `startup` -\n  The [startup and shutdown behaviour](https://pve.proxmox.com/pve-docs/pve-admin-guide.html#pct_startup_and_shutdown)\n  of the container.\n* `swap` - A number that sets the amount of swap memory available to the container. Default is `512`.\n* `tags` - Tags of the container, semicolon-delimited (e.g. \"terraform;test\"). This is only meta information.\n* `template` - A boolean that determines if this container is a template.\n* `tty` - A number that specifies the TTYs available to the container. Default is `2`.\n* `unique` - A boolean that determines if a unique random ethernet address is assigned to the container.\n* `unprivileged` - A boolean that makes the container run as an unprivileged user. Default is `false`.\n* `vmid` - A number that sets the VMID of the container. If set to `0`, the next available VMID is used. Default is `0`.\n* `current_node` __(computed)__ - A string that shows on which node the LXC guest exists.\n```\n\n----------------------------------------\n\nTITLE: Configuring SATA Disks in Proxmox VM\nDESCRIPTION: Example configuration for SATA disk types in a Proxmox VM resource. Shows how to configure different disk subtypes (cdrom, cloudinit, disk, passthrough) using SATA controllers sata0 through sata5.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_8\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"resource-name\" {\n  //<arguments omitted for brevity...>\n\n  disks {\n    sata {\n      sata0 {\n        cdrom {\n          //<arguments omitted for brevity...>\n        }\n      }\n      sata1 {\n        cloudinit {\n          //<arguments omitted for brevity...>\n        }\n      }\n      sata2 {\n        disk {\n          //<arguments omitted for brevity...>\n        }\n      }\n      sata3 {\n        passthrough {\n          //<arguments omitted for brevity...>\n        }\n      }\n      //<arguments omitted for brevity...>\n    }\n    //<arguments omitted for brevity...>\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring SCSI Disks in Proxmox VM\nDESCRIPTION: Example configuration for SCSI disk types in a Proxmox VM resource. Shows how to configure different disk subtypes (cdrom, cloudinit, disk, passthrough) using SCSI controllers scsi0 through scsi30.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_9\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"resource-name\" {\n  //<arguments omitted for brevity...>\n\n  disks {\n    scsi {\n      scsi0 {\n        cdrom {\n          //<arguments omitted for brevity...>\n        }\n      }\n      scsi1 {\n        cloudinit {\n          //<arguments omitted for brevity...>\n        }\n      }\n      scsi2 {\n        disk {\n          //<arguments omitted for brevity...>\n        }\n      }\n      scsi3 {\n        passthrough {\n          //<arguments omitted for brevity...>\n        }\n      }\n      //<arguments omitted for brevity...>\n    }\n    //<arguments omitted for brevity...>\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring VirtIO Disks in Proxmox VM\nDESCRIPTION: Example configuration for VirtIO disk types in a Proxmox VM resource. Shows how to configure different disk subtypes (cdrom, disk, passthrough) using VirtIO controllers virtio0 through virtio15.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_10\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"resource-name\" {\n  //<arguments omitted for brevity...>\n\n  disks {\n    virtio {\n      virtio0 {\n        cdrom {\n          //<arguments omitted for brevity...>\n        }\n      }\n      virtio1 {\n        disk {\n          //<arguments omitted for brevity...>\n        }\n      }\n      virtio2 {\n        passthrough {\n          //<arguments omitted for brevity...>\n        }\n      }\n      //<arguments omitted for brevity...>\n    }\n    //<arguments omitted for brevity...>\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Cloud-Init Configuration File Generation\nDESCRIPTION: Creates custom Cloud-Init configuration files using templatefile function and uploads them to Proxmox server using null_resource.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/cloud_init.md#2025-04-21_snippet_1\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"local_file\" \"cloud_init_user_data_file\" {\n  count    = var.vm_count\n  content  = templatefile(\"${var.working_directory}/cloud-inits/cloud-init.cloud_config.tftpl\", { ssh_key = var.ssh_public_key, hostname = var.name })\n  filename = \"${path.module}/files/user_data_${count.index}.cfg\"\n}\n\nresource \"null_resource\" \"cloud_init_config_files\" {\n  count = var.vm_count\n  connection {\n    type     = \"ssh\"\n    user     = \"${var.pve_user}\"\n    password = \"${var.pve_password}\"\n    host     = \"${var.pve_host}\"\n  }\n\n  provisioner \"file\" {\n    source      = local_file.cloud_init_user_data_file[count.index].filename\n    destination = \"/var/lib/vz/snippets/user_data_vm-${count.index}.yml\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Proxmox LXC Container with Multiple Mount Points\nDESCRIPTION: Shows how to configure an LXC container with various types of mount points including storage-backed, bind mount, and device mount points. Also includes SSH key configuration and dual-stack networking.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/lxc.md#2025-04-21_snippet_1\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_lxc\" \"multiple_mountpoints\" {\n  target_node  = \"pve\"\n  hostname     = \"lxc-multiple-mountpoints\"\n  ostemplate   = \"local:vztmpl/ubuntu-20.04-standard_20.04-1_amd64.tar.gz\"\n  unprivileged = true\n  ostype       = \"ubuntu\"\n\n  ssh_public_keys = <<-EOT\n    ssh-rsa <public_key_1> user@example.com\n    ssh-ed25519 <public_key_2> user@example.com\n  EOT\n\n  // Terraform will crash without rootfs defined\n  rootfs {\n    storage = \"local-zfs\"\n    size    = \"8G\"\n  }\n\n  // Storage Backed Mount Point\n  mountpoint {\n    key     = \"0\"\n    slot    = 0\n    storage = \"local-lvm\"\n    mp      = \"/mnt/container/storage-backed-mount-point\"\n    size    = \"12G\"\n  }\n\n  // Bind Mount Point\n  mountpoint {\n    key     = \"1\"\n    slot    = 1\n    storage = \"/srv/host/bind-mount-point\"\n    volume  = \"/srv/host/bind-mount-point\"\n    mp      = \"/mnt/container/bind-mount-point\"\n    size    = \"256G\"\n  }\n\n  // Device Mount Point\n  mountpoint {\n    key     = \"2\"\n    slot    = 2\n    storage = \"/dev/sdg\"\n    volume  = \"/dev/sdg\"\n    mp      = \"/mnt/container/device-mount-point\"\n    size    = \"32G\"\n  }\n\n  network {\n    name   = \"eth0\"\n    bridge = \"vmbr0\"\n    ip     = \"dhcp\"\n    ip6    = \"dhcp\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Proxmox VM into Terraform State\nDESCRIPTION: Command for importing an existing Proxmox VM into Terraform state. The import requires specifying the node, resource type, and VM ID in a specific format. This allows managing existing VMs through Terraform.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nterraform import [options] [node]/[type]/[vmId]\n```\n\n----------------------------------------\n\nTITLE: Configuring EFI Disk for Proxmox VM in Terraform\nDESCRIPTION: This snippet demonstrates how to configure an EFI disk for a Proxmox VM using Terraform. It specifies the EFI type and storage location for the disk. The EFI disk is used for EFI data storage and is automatically pre-loaded with distribution-specific and Microsoft Standard Secure Boot keys.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_12\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"resource-name\" {\n  // ...\n\n  efidisk {\n    efitype = \"4m\"\n    storage = \"local-lvm\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Downloading Debian 12 Cloud-Init Image in Proxmox\nDESCRIPTION: Command to download the Debian 12 Cloud-Init image from the official Debian cloud repository. This image will be used as the base for creating a Cloud-Init template in Proxmox.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/cloud-init getting started.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwget https://cloud.debian.org/images/cloud/bookworm/latest/debian-12-genericcloud-amd64.qcow2\n```\n\n----------------------------------------\n\nTITLE: Importing Cloud-Init Image to VM in Proxmox\nDESCRIPTION: Command to import the downloaded Debian 12 Cloud-Init image into the previously created VM. This sets up the VM's primary disk using the downloaded image.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/cloud-init getting started.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nqm set 9000 --scsi0 local-lvm:0,import-from=/root/debian-12-genericcloud-amd64.qcow2\n```\n\n----------------------------------------\n\nTITLE: Configuring VGA Display for Proxmox VM in Terraform\nDESCRIPTION: This snippet defines the VGA block configuration options for a Proxmox virtual machine. It specifies the type of display to virtualize and the amount of VGA memory to allocate.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Argument | Type  | Default Value | Description                                                                                                                                                         |\n| -------- | ----- | ------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `type`   | `str` | `\"std\"`       | The type of display to virtualize. Options: `cirrus`, `none`, `qxl`, `qxl2`, `qxl3`, `qxl4`, `serial0`, `serial1`, `serial2`, `serial3`, `std`, `virtio`, `vmware`. |\n| `memory` | `int` |               | Sets the VGA memory (in MiB). Has no effect with serial display type.                                                                                               |\n```\n\n----------------------------------------\n\nTITLE: Configuring IDE Disks for Proxmox VM in Terraform\nDESCRIPTION: Example of using the 'disks.ide' block to configure IDE disk devices for a Proxmox VM. This snippet demonstrates defining different types of IDE disks including CDROM, CloudInit, regular disk, and passthrough disk.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_7\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"resource-name\" {\n  //<arguments omitted for brevity...>\n\n  disks {\n    ide {\n      ide0 {\n        cdrom {\n          //<arguments omitted for brevity...>\n        }\n      }\n      ide1 {\n        cloudinit {\n          //<arguments omitted for brevity...>\n        }\n      }\n      ide2 {\n        disk {\n          //<arguments omitted for brevity...>\n        }\n      }\n      ide3 {\n        passthrough {\n          //<arguments omitted for brevity...>\n        }\n      }\n    }\n    //<arguments omitted for brevity...>\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring PCI Devices for Proxmox VM in Terraform\nDESCRIPTION: This snippet demonstrates how to configure PCI devices for a Proxmox VM using the 'pcis' block in Terraform. It shows examples of both 'mapping' and 'raw' PCI device configurations.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_13\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"resource-name\" {\n  // ...\n  pcis {\n    pci0 {\n      mapping {\n        mapping_id = \"mapping-id\"\n        pcie = true\n        primary_gpu = true\n        rombar = true\n        device_id = \"device-id\"\n        vendor_id = \"vendor-id\"\n        sub_device_id = \"sub-device-id\"\n        sub_vendor_id = \"sub-vendor-id\"\n      }\n    }\n    pci15 {\n      raw {\n        raw_id = \"raw-id\"\n        pcie = true\n        primary_gpu = true\n        rombar = true\n        device_id = \"device-id\"\n        vendor_id = \"vendor-id\"\n        sub_device_id = \"sub-device-id\"\n        sub_vendor_id = \"sub-vendor-id\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring USB Devices for Proxmox VM in Terraform\nDESCRIPTION: This snippet illustrates how to configure various types of USB devices for a Proxmox VM using the 'usbs' block in Terraform. It includes examples of 'device', 'mapping', 'port', and 'spice' USB configurations.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/vm_qemu.md#2025-04-21_snippet_14\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"resource-name\" {\n  //<arguments omitted for brevity...>\n\n  usbs {\n    usb0 {\n      device {\n        device_id = \"e0bc:40a9\"\n        usb3 = true\n      }\n    }\n    usb1 {\n      mapping {\n        mapping_id = \"mapped-device\"\n        usb3 = true\n      }\n    }\n    usb2 {\n      port {\n        port_id = \"1-1\"\n        usb3 = true\n      }\n    }\n    usb4 {\n      spice {\n        usb3 = true\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxmox Provider in Terraform (HCL)\nDESCRIPTION: This snippet shows how to configure the Proxmox provider in a Terraform configuration file. It specifies the required provider and its source.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/installation.md#2025-04-21_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nterraform {\n  required_providers {\n    proxmox = {\n      source  = \"telmate/proxmox\"\n      version = \"<version tag>\"\n    }\n  }\n}\n\nprovider \"proxmox\" {\n  # Configuration options\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Provider Source in Terraform (HCL)\nDESCRIPTION: This snippet shows how to configure the source of the manually installed Proxmox provider in a Terraform configuration file.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/installation.md#2025-04-21_snippet_6\n\nLANGUAGE: hcl\nCODE:\n```\nterraform {\n  required_providers {\n    proxmox = {\n      source  = \"telmate/proxmox\"\n      version = \">=1.0.0\"\n    }\n  }\n  required_version = \">= 0.14\"\n}\n\n[...]\n```\n\n----------------------------------------\n\nTITLE: Creating a VM for Cloud-Init Template in Proxmox\nDESCRIPTION: Command to create a new VM with ID 9000 in Proxmox. This VM will be used as the basis for the Cloud-Init template.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/cloud-init getting started.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nqm create 9000 --name debian12-cloudinit\n```\n\n----------------------------------------\n\nTITLE: Converting VM to Template in Proxmox\nDESCRIPTION: Command to convert the configured VM with ID 9000 into a template. This template will be used to clone new VMs with Cloud-Init.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/cloud-init getting started.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nqm template 9000\n```\n\n----------------------------------------\n\nTITLE: Proxmox LXC Container with Advanced Features\nDESCRIPTION: Illustrates configuration of advanced LXC features including FUSE, nesting, and mount capabilities. Includes NFS mount configuration and static IP addressing.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/lxc.md#2025-04-21_snippet_2\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_lxc\" \"advanced_features\" {\n  target_node  = \"pve\"\n  hostname     = \"lxc-advanced-features\"\n  ostemplate   = \"local:vztmpl/ubuntu-20.04-standard_20.04-1_amd64.tar.gz\"\n  unprivileged = true\n\n  ssh_public_keys = <<-EOT\n    ssh-rsa <public_key_1> user@example.com\n    ssh-ed25519 <public_key_2> user@example.com\n  EOT\n\n  features {\n    fuse    = true\n    nesting = true\n    mount   = \"nfs;cifs\"\n  }\n\n  // Terraform will crash without rootfs defined\n  rootfs {\n    storage = \"local-zfs\"\n    size    = \"8G\"\n  }\n\n  // NFS share mounted on host\n  mountpoint {\n    slot    = \"0\"\n    storage = \"/mnt/host/nfs\"\n    mp      = \"/mnt/container/nfs\"\n    size    = \"250G\"\n  }\n\n  network {\n    name   = \"eth0\"\n    bridge = \"vmbr0\"\n    ip     = \"10.0.0.2/24\"\n    ip6    = \"auto\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Snippets Directory in Proxmox\nDESCRIPTION: Command to create a directory for storing Cloud-Init snippets. Snippets are used to pass additional configuration to the Cloud-Init package during VM creation.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/cloud-init getting started.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmkdir /var/lib/vz/snippets\n```\n\n----------------------------------------\n\nTITLE: Creating QEMU Guest Agent Snippet for Cloud-Init\nDESCRIPTION: Command to create a Cloud-Init snippet that installs and starts the QEMU guest agent. This snippet will be applied to VMs created from the template.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/cloud-init getting started.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ntee /var/lib/vz/snippets/qemu-guest-agent.yml <<EOF\n#cloud-config\nruncmd:\n  - apt update\n  - apt install -y qemu-guest-agent\n  - systemctl start qemu-guest-agent\nEOF\n```\n\n----------------------------------------\n\nTITLE: Initializing Terraform (Shell)\nDESCRIPTION: This command initializes Terraform, which will download and install the specified provider.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/installation.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ terraform init\n```\n\n----------------------------------------\n\nTITLE: Cloning and Entering Provider Repository (Shell)\nDESCRIPTION: These commands clone the Proxmox provider repository and change into its directory for manual building.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/installation.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/Telmate/terraform-provider-proxmox\ncd terraform-provider-proxmox\n```\n\n----------------------------------------\n\nTITLE: Compiling Proxmox Provider (Shell)\nDESCRIPTION: This command compiles the Proxmox provider, generating the executable in the ./bin directory.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/installation.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmake\n```\n\n----------------------------------------\n\nTITLE: Creating Plugin Directory for Terraform >=0.13 (Shell)\nDESCRIPTION: These commands set up the directory structure for manually installing the provider for Terraform versions 0.13 and above.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/installation.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n# Uncomment for macOS\n# PLUGIN_ARCH=darwin_amd64\n\n$ PLUGIN_ARCH=linux_amd64\n\n# Create the directory holding the newly built Terraform plugins\n$ mkdir -p ~/.terraform.d/plugins/registry.example.com/telmate/proxmox/1.0.0/${PLUGIN_ARCH}\n```\n\n----------------------------------------\n\nTITLE: Copying Provider Executable (Shell)\nDESCRIPTION: This command copies the compiled provider executable to the appropriate plugin directory for Terraform >=0.13.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/installation.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ cp bin/terraform-provider-proxmox ~/.terraform.d/plugins/registry.example.com/telmate/proxmox/1.0.0/${PLUGIN_ARCH}/\n$ ls -al ~/.terraform.d/plugins/registry.example.com/telmate/proxmox/1.0.0/${PLUGIN_ARCH}/\n-rwxrwxr-x 1 user user 20352759 Feb 22 21:51 terraform-provider-proxmox_v1.0.0*\n```\n\n----------------------------------------\n\nTITLE: Copying Provider for Terraform <0.13 (Shell)\nDESCRIPTION: These commands create the plugin directory and copy the provider executable for Terraform versions before 0.13.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/installation.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nmkdir -p ~/.terraform.d/plugins\ncp -f bin/terraform-provider-proxmox ~/.terraform.d/plugins\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Mode in Proxmox Provider (HCL)\nDESCRIPTION: This configuration enables global debug mode for the provider's underlying API client.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/index.md#2025-04-21_snippet_3\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  pm_debug = true\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Proxy Server Support in Proxmox Provider (HCL)\nDESCRIPTION: This configuration sets up a proxy server for all API calls from the provider client, which can be useful for debugging.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/index.md#2025-04-21_snippet_4\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  pm_proxy_server = \"http://proxyurl:proxyport\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging for Proxmox Provider (HCL)\nDESCRIPTION: This snippet shows how to enable detailed logging for the Proxmox provider, including file output and log levels.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/index.md#2025-04-21_snippet_5\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"proxmox\" {\n  pm_log_enable = true\n  pm_log_file   = \"terraform-plugin-proxmox.log\"\n  pm_debug      = true\n  pm_log_levels = {\n    _default    = \"debug\"\n    _capturelog = \"\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Cloning Proxmox LXC Container\nDESCRIPTION: Shows how to clone an existing LXC container using its ID. This is a minimal configuration that specifies only the required parameters for cloning.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/lxc.md#2025-04-21_snippet_3\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_lxc\" \"basic\" {\n  target_node = \"pve\"\n  hostname    = \"lxc-clone\"\n  #id of lxc container to clone\n  clone       = \"8001\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Proxmox Pool Resource with Terraform\nDESCRIPTION: Terraform configuration block that defines a Proxmox pool resource. The configuration specifies a pool ID and an optional comment describing the pool's purpose.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/resources/pool.md#2025-04-21_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_pool\" \"example\" {\n  poolid  = \"example-pool\" \n  comment = \"Example of a pool\"\n}\n```\n\n----------------------------------------\n\nTITLE: Debugging the Terraform Proxmox Provider with Delve\nDESCRIPTION: Example command for debugging the Terraform Proxmox provider using the Delve debugger. This demonstrates how to start the provider in headless debug mode with the necessary debugging flag.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndlv exec --headless ./terraform-provider-my-provider -- --debug\n```\n\n----------------------------------------\n\nTITLE: Custom Cloud-Init VM with Custom Configuration\nDESCRIPTION: Deploys a Proxmox VM using custom Cloud-Init configuration files and specific disk configuration for Cloud-Init drive.\nSOURCE: https://github.com/telmate/terraform-provider-proxmox/blob/master/docs/guides/cloud_init.md#2025-04-21_snippet_2\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"proxmox_vm_qemu\" \"cloudinit-test\" {\n  depends_on = [\n    null_resource.cloud_init_config_files,\n  ]\n\n  name        = \"tftest1.xyz.com\"\n  desc        = \"tf description\"\n  target_node = \"proxmox1-xx\"\n\n  clone = \"ci-ubuntu-template\"\n  pool = \"pool0\"\n\n  storage = \"local\"\n  cores   = 3\n  sockets = 1\n  memory  = 2560\n  disk_gb = 4\n  nic     = \"virtio\"\n  bridge  = \"vmbr0\"\n\n  ssh_user        = \"root\"\n  ssh_private_key = <<EOF\n-----BEGIN RSA PRIVATE KEY-----\nprivate ssh key root\n-----END RSA PRIVATE KEY-----\nEOF\n\n  os_type   = \"cloud-init\"\n  ipconfig0 = \"ip=10.0.2.99/16,gw=10.0.2.2\"\n\n  cicustom                = \"user=local:snippets/user_data_vm-${count.index}.yml\"\n  disks {\n    ide {\n      ide3 {\n        cloudinit {\n          storage = \"local-lvm\"\n        }\n      }\n    }\n  }\n\n  provisioner \"remote-exec\" {\n    inline = [\n      \"ip a\"\n    ]\n  }\n}\n```"
  }
]
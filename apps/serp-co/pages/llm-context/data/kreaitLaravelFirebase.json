[
  {
    "owner": "kreait",
    "repo": "laravel-firebase",
    "content": "TITLE: Installing kreait/laravel-firebase via Composer - Bash\nDESCRIPTION: Installs the kreait/laravel-firebase package using Composer, which is required to integrate Firebase with Laravel. Make sure Composer is installed and run this command in the root directory of your Laravel project. No additional parameters are needed, and this will update your composer.json dependencies.\nSOURCE: https://github.com/kreait/laravel-firebase/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require kreait/laravel-firebase\n```\n\n----------------------------------------\n\nTITLE: Publishing Firebase Configuration File with Artisan - Bash\nDESCRIPTION: Publishes the default configuration file for kreait/laravel-firebase to your Laravel app's config directory using Laravel's artisan CLI. This enables customization of Firebase settings within config/firebase.php. Ensure you have artisan available and that the package has been installed.\nSOURCE: https://github.com/kreait/laravel-firebase/blob/main/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Laravel\nphp artisan vendor:publish --provider=\"Kreait\\Laravel\\Firebase\\ServiceProvider\" --tag=config\n```\n\n----------------------------------------\n\nTITLE: Setting Firebase Credentials Path via Environment Variable - dotenv\nDESCRIPTION: Specifies the path to the Service Account JSON credentials file for Firebase in the .env environment file. This disables Google auto-discovery and lets you explicitly point to your credentials. The path should be accessible by the Laravel application.\nSOURCE: https://github.com/kreait/laravel-firebase/blob/main/README.md#_snippet_3\n\nLANGUAGE: dotenv\nCODE:\n```\nFIREBASE_CREDENTIALS=storage/app/firebase-auth.json\n```\n\n----------------------------------------\n\nTITLE: Setting Firebase Database URL via Environment Variables - dotenv\nDESCRIPTION: Sets the Firebase Realtime Database URL in the Laravel environment file (.env), making it available to the kreait/laravel-firebase package for configuration. Replace <your-project> with your actual Firebase project ID. This is required for database interactions with Firebase.\nSOURCE: https://github.com/kreait/laravel-firebase/blob/main/README.md#_snippet_1\n\nLANGUAGE: dotenv\nCODE:\n```\n# You can find the database URL for your project at\n# https://console.firebase.google.com/project/_/database\nFIREBASE_DATABASE_URL=https://<your-project>.firebaseio.com\n```\n\n----------------------------------------\n\nTITLE: Accessing Firebase Auth Components via Facades - PHP\nDESCRIPTION: Illustrates how to access Firebase Auth components in a Laravel application using the Firebase facade from kreait/laravel-firebase. Dependency injection is abstracted by the package; you don't need to instantiate the Factory manually. The code retrieves Auth components for the default and specific named Firebase projects.\nSOURCE: https://github.com/kreait/laravel-firebase/blob/main/README.md#_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nuse Kreait\\Laravel\\Firebase\\Facades\\Firebase;\n\n// Return an instance of the Auth component for the default Firebase project\n$defaultAuth = Firebase::auth();\n// Return an instance of the Auth component for a specific Firebase project\n$appAuth = Firebase::project('app')->auth();\n$anotherAppAuth = Firebase::project('another-app')->auth();\n```\n\n----------------------------------------\n\nTITLE: Defining Firebase Service Account Credentials in Configuration - PHP\nDESCRIPTION: Demonstrates how to manually define Firebase Service Account credentials as a PHP array within config/firebase.php rather than referencing a separate file. Each key corresponds to fields from the Service Account JSON. This approach offers greater control and allows for direct editing and versioning of credentials.\nSOURCE: https://github.com/kreait/laravel-firebase/blob/main/README.md#_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n'credentials' => [\n    'type' => 'service_account',\n    'project_id' => 'some-project-123',\n    'private_key_id' => '123456789',\n    'private_key' => '-----BEGIN PRIVATE KEY-----\\nFOO_BAR_123456789\\n-----END PRIVATE KEY-----\\n',\n    'client_email' => 'firebase-adminsdk-cwiuo@some-project-123.iam.gserviceaccount.com',\n    'client_id' => '123456789',\n    'auth_uri' => 'https://accounts.google.com/o/oauth2/auth',\n    'token_uri' => 'https://oauth2.googleapis.com/token',\n    'auth_provider_x509_cert_url' => 'https://www.googleapis.com/oauth2/v1/certs',\n    'client_x509_cert_url' => 'https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-cwiuo%40some-project-123.iam.gserviceaccount.com',\n    'universe_domain' => 'googleapis.com',\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Dynamic Links in Firebase Config (Laravel, PHP)\nDESCRIPTION: This PHP snippet shows how to add the dynamic_links configuration section to the config/firebase.php file in a Laravel project. It maps the environment variable FIREBASE_DYNAMIC_LINKS_DEFAULT_DOMAIN to the default_domain array key, allowing runtime configuration. This setup depends on Laravel's config system and the kreait/laravel-firebase package. Inputs: environment variable; output: correct configuration structure for Dynamic Links integration. Place this associative array inside the return statement of config/firebase.php.\nSOURCE: https://github.com/kreait/laravel-firebase/blob/main/CHANGELOG.md#_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\\n\\nreturn [\\n    // ...\\n    'dynamic_links' => [\\n        'default_domain' => env('FIREBASE_DYNAMIC_LINKS_DEFAULT_DOMAIN')\\n    ],\\n    // ...\\n];\n```\n\n----------------------------------------\n\nTITLE: Publishing Vendor Configuration with Artisan (Laravel, Bash)\nDESCRIPTION: This Bash snippet uses Laravel's artisan CLI to publish the Firebase package's vendor configuration file. The --provider option specifies the service provider, and --tag limits publishing to the package's configuration files. This command is necessary after upgrades to ensure local configuration matches the package requirements. Expected input: none, run from Laravel project root; output: configuration files copied to config directory.\nSOURCE: https://github.com/kreait/laravel-firebase/blob/main/CHANGELOG.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan vendor:publish --provider=\\\"Kreait\\\\Laravel\\\\Firebase\\\\ServiceProvider\\\" --tag=config\n```"
  }
]
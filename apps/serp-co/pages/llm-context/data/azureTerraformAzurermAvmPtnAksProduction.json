[
  {
    "owner": "azure",
    "repo": "terraform-azurerm-avm-ptn-aks-production",
    "content": "TITLE: Deploying AKS Production Module with Virtual Network and Private DNS Zones in Terraform\nDESCRIPTION: Complete example of deploying an AKS cluster with a custom virtual network, private DNS zones, and ACR integration. The module configures RBAC with Azure AD, network policy using Calico, and private connectivity for both AKS and ACR.\nSOURCE: https://github.com/azure/terraform-azurerm-avm-ptn-aks-production/blob/main/examples/default/README.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nterraform {\n  required_version = \">= 1.9, < 2.0\"\n  required_providers {\n    azurerm = {\n      source  = \"hashicorp/azurerm\"\n      version = \">= 4, <5\"\n    }\n    random = {\n      source  = \"hashicorp/random\"\n      version = \">= 3.5.0, < 4.0.0\"\n    }\n  }\n}\n\nprovider \"azurerm\" {\n  features {\n    resource_group {\n      prevent_deletion_if_contains_resources = false\n    }\n  }\n}\n\n\n## Section to provide a random Azure region for the resource group\n# This allows us to randomize the region for the resource group.\nmodule \"regions\" {\n  source  = \"Azure/avm-utl-regions/azurerm\"\n  version = \"0.3.0\"\n}\n\n# This allows us to randomize the region for the resource group.\nresource \"random_integer\" \"region_index\" {\n  max = length(module.regions.regions) - 1\n  min = 0\n}\n## End of section to provide a random Azure region for the resource group\n\n# This ensures we have unique CAF compliant names for our resources.\nmodule \"naming\" {\n  source  = \"Azure/naming/azurerm\"\n  version = \">= 0.3.0\"\n}\n\n# This is required for resource modules\nresource \"azurerm_resource_group\" \"this\" {\n  location = \"East US 2\" # Hardcoded instead of using module.regions because The \"for_each\" map includes keys derived from resource attributes that cannot be determined until apply, and so Terraform cannot determine the full set of keys that will identify the instances of this resource.\n  name     = module.naming.resource_group.name_unique\n}\n\n# Datasource of current tenant ID\ndata \"azurerm_client_config\" \"current\" {}\n\n# This is the module call\n# Do not specify location here due to the randomization above.\n# Leaving location as `null` will cause the module to use the resource group location\n# with a data source.\nmodule \"test\" {\n  source                      = \"../../\"\n  kubernetes_version          = \"1.30\"\n  enable_telemetry            = var.enable_telemetry # see variables.tf\n  name                        = module.naming.kubernetes_cluster.name_unique\n  resource_group_name         = azurerm_resource_group.this.name\n  location                    = azurerm_resource_group.this.location\n  private_dns_zone_id         = azurerm_private_dns_zone.mydomain.id\n  private_dns_zone_id_enabled = true\n  rbac_aad_tenant_id          = data.azurerm_client_config.current.tenant_id\n  network_policy              = \"calico\"\n  network = {\n    name                = module.avm_res_network_virtualnetwork.name\n    resource_group_name = azurerm_resource_group.this.name\n    node_subnet_id      = module.avm_res_network_virtualnetwork.subnets[\"subnet\"].resource_id\n    pod_cidr            = \"192.168.0.0/16\"\n  }\n  acr = {\n    name                          = module.naming.container_registry.name_unique\n    subnet_resource_id            = module.avm_res_network_virtualnetwork.subnets[\"private_link_subnet\"].resource_id\n    private_dns_zone_resource_ids = [azurerm_private_dns_zone.this.id]\n  }\n}\n\nresource \"azurerm_private_dns_zone\" \"this\" {\n  name                = \"privatelink.azurecr.io\"\n  resource_group_name = azurerm_resource_group.this.name\n}\n\nresource \"azurerm_private_dns_zone\" \"mydomain\" {\n  name                = \"privatelink.eastus2.azmk8s.io\"\n  resource_group_name = azurerm_resource_group.this.name\n}\n\nmodule \"avm_res_network_virtualnetwork\" {\n  source  = \"Azure/avm-res-network-virtualnetwork/azurerm\"\n  version = \"0.7.1\"\n\n  address_space       = [\"10.31.0.0/16\"]\n  location            = azurerm_resource_group.this.location\n  name                = \"myvnet\"\n  resource_group_name = azurerm_resource_group.this.name\n  subnets = {\n    \"subnet\" = {\n      name             = \"nodecidr\"\n      address_prefixes = [\"10.31.0.0/17\"]\n    }\n    \"private_link_subnet\" = {\n      name             = \"private_link_subnet\"\n      address_prefixes = [\"10.31.129.0/24\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying an AKS Cluster with Availability Zone Support Using Terraform\nDESCRIPTION: This Terraform configuration deploys an AKS cluster in a region with availability zones (East US 2). It sets up the required infrastructure including resource group, virtual network, subnets, private DNS zone, and user-assigned managed identity. The AKS cluster includes multiple node pools for workload and ingress.\nSOURCE: https://github.com/azure/terraform-azurerm-avm-ptn-aks-production/blob/main/examples/with_availability_zone/README.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nterraform {\n  required_version = \">= 1.9, < 2.0\"\n  required_providers {\n    azurerm = {\n      source  = \"hashicorp/azurerm\"\n      version = \">= 4, <5\"\n    }\n  }\n}\n\nprovider \"azurerm\" {\n  features {\n    resource_group {\n      prevent_deletion_if_contains_resources = false\n    }\n  }\n}\n\n# This is required for resource modules\nresource \"azurerm_resource_group\" \"this\" {\n  location = \"East US 2\" # Hardcoded because we have to test in a region with availability zones\n  name     = module.naming.resource_group.name_unique\n}\n\n\n# This ensures we have unique CAF compliant names for our resources.\nmodule \"naming\" {\n  source  = \"Azure/naming/azurerm\"\n  version = \">= 0.3.0\"\n}\n\nresource \"azurerm_user_assigned_identity\" \"this\" {\n  location            = azurerm_resource_group.this.location\n  name                = \"uami-${var.kubernetes_cluster_name}\"\n  resource_group_name = azurerm_resource_group.this.name\n}\n\n# Datasource of current tenant ID\ndata \"azurerm_client_config\" \"current\" {}\n\n# This is the module call\n# Do not specify location here due to the randomization above.\n# Leaving location as `null` will cause the module to use the resource group location\n# with a data source.\nmodule \"test\" {\n  source              = \"../../\"\n  kubernetes_version  = \"1.30\"\n  enable_telemetry    = var.enable_telemetry # see variables.tf\n  name                = module.naming.kubernetes_cluster.name_unique\n  resource_group_name = azurerm_resource_group.this.name\n  network = {\n    name                = module.avm_res_network_virtualnetwork.name\n    resource_group_name = azurerm_resource_group.this.name\n    node_subnet_id      = module.avm_res_network_virtualnetwork.subnets[\"subnet\"].resource_id\n    pod_cidr            = \"192.168.0.0/16\"\n  }\n  acr = {\n    name                          = module.naming.container_registry.name_unique\n    subnet_resource_id            = module.avm_res_network_virtualnetwork.subnets[\"private_link_subnet\"].resource_id\n    private_dns_zone_resource_ids = [azurerm_private_dns_zone.this.id]\n  }\n  managed_identities = {\n    user_assigned_resource_ids = [\n      azurerm_user_assigned_identity.this.id\n    ]\n  }\n  rbac_aad_tenant_id = data.azurerm_client_config.current.tenant_id\n\n  location = \"East US 2\" # Hardcoded because we have to test in a region with availability zones\n  node_pools = {\n    workload = {\n      name                 = \"workloadworkload\" #Long name to test the truncate to 12 characters\n      vm_size              = \"Standard_D2d_v5\"\n      orchestrator_version = \"1.30\"\n      max_count            = 10\n      min_count            = 2\n      os_sku               = \"Ubuntu\"\n      mode                 = \"User\"\n      os_disk_size_gb      = 128\n    },\n    ingress = {\n      name                 = \"ingress\"\n      vm_size              = \"Standard_D2d_v5\"\n      orchestrator_version = \"1.30\"\n      max_count            = 4\n      min_count            = 2\n      os_sku               = \"Ubuntu\"\n      mode                 = \"User\"\n      os_disk_size_gb      = 128\n      labels = {\n        \"ingress\" = \"true\"\n      }\n    }\n  }\n}\n\nresource \"azurerm_private_dns_zone\" \"this\" {\n  name                = \"privatelink.azurecr.io\"\n  resource_group_name = azurerm_resource_group.this.name\n}\n\nmodule \"avm_res_network_virtualnetwork\" {\n  source  = \"Azure/avm-res-network-virtualnetwork/azurerm\"\n  version = \"0.7.1\"\n\n  address_space       = [\"10.31.0.0/16\"]\n  location            = azurerm_resource_group.this.location\n  name                = \"myvnet\"\n  resource_group_name = azurerm_resource_group.this.name\n  subnets = {\n    \"subnet\" = {\n      name             = \"nodecidr\"\n      address_prefixes = [\"10.31.0.0/17\"]\n    }\n    \"private_link_subnet\" = {\n      name             = \"private_link_subnet\"\n      address_prefixes = [\"10.31.129.0/24\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Cluster without Availability Zones using Terraform\nDESCRIPTION: Complete Terraform configuration for deploying an AKS cluster in a region without availability zones. It sets up the required provider configurations, networking resources, private DNS zones, and deploys an AKS cluster with multiple node pools. The configuration uses the Azure Verified Module pattern and includes user-assigned managed identities.\nSOURCE: https://github.com/azure/terraform-azurerm-avm-ptn-aks-production/blob/main/examples/without_availability_zone/README.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nterraform {\n  required_version = \">= 1.9, < 2.0\"\n  required_providers {\n    azurerm = {\n      source  = \"hashicorp/azurerm\"\n      version = \">= 4, <5\"\n    }\n  }\n}\n\nprovider \"azurerm\" {\n  features {\n    resource_group {\n      prevent_deletion_if_contains_resources = false\n    }\n  }\n}\n\n# This ensures we have unique CAF compliant names for our resources.\nmodule \"naming\" {\n  source  = \"Azure/naming/azurerm\"\n  version = \">= 0.3.0\"\n}\n\n# This is required for resource modules\nresource \"azurerm_resource_group\" \"this\" {\n  location = \"West US\" # Hardcoded because we have to test in a region without availability zones\n  name     = module.naming.resource_group.name_unique\n}\n\nresource \"azurerm_user_assigned_identity\" \"this\" {\n  location            = azurerm_resource_group.this.location\n  name                = \"uami-${var.kubernetes_cluster_name}\"\n  resource_group_name = azurerm_resource_group.this.name\n}\n\n# Datasource of current tenant ID\ndata \"azurerm_client_config\" \"current\" {}\n\n# This is the module call\n# Do not specify location here due to the randomization above.\n# Leaving location as `null` will cause the module to use the resource group location\n# with a data source.\nmodule \"test\" {\n  source              = \"../../\"\n  kubernetes_version  = \"1.30\"\n  enable_telemetry    = var.enable_telemetry # see variables.tf\n  name                = module.naming.kubernetes_cluster.name_unique\n  resource_group_name = azurerm_resource_group.this.name\n  network = {\n    name                = module.avm_res_network_virtualnetwork.name\n    resource_group_name = azurerm_resource_group.this.name\n    node_subnet_id      = module.avm_res_network_virtualnetwork.subnets[\"subnet\"].resource_id\n    pod_cidr            = \"192.168.0.0/16\"\n  }\n  acr = {\n    name                          = module.naming.container_registry.name_unique\n    subnet_resource_id            = module.avm_res_network_virtualnetwork.subnets[\"private_link_subnet\"].resource_id\n    private_dns_zone_resource_ids = [azurerm_private_dns_zone.this.id]\n    zone_redundancy_enabled       = false\n  }\n  managed_identities = {\n    user_assigned_resource_ids = [\n      azurerm_user_assigned_identity.this.id\n    ]\n  }\n\n  rbac_aad_tenant_id = data.azurerm_client_config.current.tenant_id\n\n  location = \"West US\" # Hardcoded because we have to test in a region without availability zones\n  node_pools = {\n    workload = {\n      name                 = \"workload\"\n      vm_size              = \"Standard_D2d_v5\"\n      orchestrator_version = \"1.30\"\n      max_count            = 110\n      min_count            = 2\n      os_sku               = \"AzureLinux\"\n      mode                 = \"User\"\n    },\n    ingress = {\n      name                 = \"ingress\"\n      vm_size              = \"Standard_D2d_v5\"\n      orchestrator_version = \"1.30\"\n      max_count            = 4\n      min_count            = 2\n      os_sku               = \"AzureLinux\"\n      mode                 = \"User\"\n      labels = {\n        \"ingress\" = \"true\"\n      }\n    }\n  }\n}\n\nresource \"azurerm_private_dns_zone\" \"this\" {\n  name                = \"privatelink.azurecr.io\"\n  resource_group_name = azurerm_resource_group.this.name\n}\n\nmodule \"avm_res_network_virtualnetwork\" {\n  source  = \"Azure/avm-res-network-virtualnetwork/azurerm\"\n  version = \"0.7.1\"\n\n  address_space       = [\"10.31.0.0/16\"]\n  location            = azurerm_resource_group.this.location\n  name                = \"myvnet\"\n  resource_group_name = azurerm_resource_group.this.name\n  subnets = {\n    \"subnet\" = {\n      name             = \"nodecidr\"\n      address_prefixes = [\"10.31.0.0/17\"]\n    }\n    \"private_link_subnet\" = {\n      name             = \"private_link_subnet\"\n      address_prefixes = [\"10.31.129.0/24\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring AKS Node Pools in Terraform\nDESCRIPTION: Example configuration of multiple node pools in an AKS cluster with specific workload and ingress configurations including VM size, version, and scaling parameters\nSOURCE: https://github.com/azure/terraform-azurerm-avm-ptn-aks-production/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: terraform\nCODE:\n```\n  node_pools = {\n    workload = {\n      name                 = \"workload\"\n      vm_size              = \"Standard_D2d_v5\"\n      orchestrator_version = \"1.28\"\n      max_count            = 110\n      min_count            = 2\n      os_sku               = \"Ubuntu\"\n      mode                 = \"User\"\n    },\n    ingress = {\n      name                 = \"ingress\"\n      vm_size              = \"Standard_D2d_v5\"\n      orchestrator_version = \"1.28\"\n      max_count            = 4\n      min_count            = 2\n      os_sku               = \"Ubuntu\"\n      mode                 = \"User\"\n    }\n  }\n```\n\n----------------------------------------\n\nTITLE: AKS Node Pool Schema Definition in Terraform\nDESCRIPTION: Detailed HCL schema definition for node pool configuration including required and optional parameters for customizing AKS node pools\nSOURCE: https://github.com/azure/terraform-azurerm-avm-ptn-aks-production/blob/main/README.md#2025-04-23_snippet_6\n\nLANGUAGE: hcl\nCODE:\n```\nmap(object({\n    name                 = string\n    vm_size              = string\n    orchestrator_version = string\n    # do not add nodecount because we enforce the use of auto-scaling\n    max_count       = optional(number)\n    min_count       = optional(number)\n    os_sku          = optional(string, \"AzureLinux\")\n    mode            = optional(string)\n    os_disk_size_gb = optional(number, null)\n    tags            = optional(map(string), {})\n    labels          = optional(map(string), {})\n  }))\n```\n\n----------------------------------------\n\nTITLE: Defining Network Configuration Object in Terraform for AKS\nDESCRIPTION: This snippet defines the required network configuration object for an AKS cluster, including the network name, resource group, subnet ID, and CIDR blocks for pods and services.\nSOURCE: https://github.com/azure/terraform-azurerm-avm-ptn-aks-production/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nobject({\n    name                = string\n    resource_group_name = string\n    node_subnet_id      = string\n    pod_cidr            = string\n    service_cidr        = optional(string)\n  })\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Container Registry Integration for AKS\nDESCRIPTION: This snippet defines the optional ACR configuration object for AKS integration, including ACR name, private DNS zone configuration, subnet connectivity, and zone redundancy settings.\nSOURCE: https://github.com/azure/terraform-azurerm-avm-ptn-aks-production/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: hcl\nCODE:\n```\nobject({\n    name                          = string\n    private_dns_zone_resource_ids = set(string)\n    subnet_resource_id            = string\n    zone_redundancy_enabled       = optional(bool)\n  })\n```\n\n----------------------------------------\n\nTITLE: Defining Managed Identity Configuration for AKS\nDESCRIPTION: This snippet defines the managed identity configuration for the AKS cluster, supporting both system-assigned and user-assigned identities with appropriate defaults.\nSOURCE: https://github.com/azure/terraform-azurerm-avm-ptn-aks-production/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: hcl\nCODE:\n```\nobject({\n    system_assigned            = optional(bool, false)\n    user_assigned_resource_ids = optional(set(string), [])\n  })\n```\n\n----------------------------------------\n\nTITLE: Defining Prometheus Monitor Metrics Object in Terraform\nDESCRIPTION: HCL object definition for configuring Prometheus monitoring add-on profile with customizable annotation and label configurations for Kubernetes resources\nSOURCE: https://github.com/azure/terraform-azurerm-avm-ptn-aks-production/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: hcl\nCODE:\n```\nobject({\n    annotations_allowed = optional(string)\n    labels_allowed      = optional(string)\n  })\n```\n\n----------------------------------------\n\nTITLE: Defining Resource Lock Configuration for AKS Resources\nDESCRIPTION: This snippet defines an object for configuring resource locks on AKS resources, allowing for CanNotDelete or ReadOnly locks with optional custom naming.\nSOURCE: https://github.com/azure/terraform-azurerm-avm-ptn-aks-production/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: hcl\nCODE:\n```\nobject({\n    kind = string\n    name = optional(string, null)\n  })\n```"
  }
]
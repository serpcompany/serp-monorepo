[
  {
    "owner": "manotluijiu",
    "repo": "translation_tools",
    "content": "TITLE: Installing the Translation Tools App\nDESCRIPTION: This snippet demonstrates the steps to install the Translation Tools app within an ERPNext bench environment. It involves navigating to the bench directory, getting the app from GitHub, installing the app on a specific site, and running the setup script.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Navigate to your bench directory\ncd frappe-bench\n\n# Get the app from GitHub\nbench get-app https://github.com/ManotLuijiu/translation_tools.git\n\n# Install the app on your site\nbench --site your-site.local install-app translation_tools\n\n# ./apps/translation_tools/setup.sh would be run automatically\n# if not\n# Manual run the setup script\n./apps/translation_tools/translation_tools/setup.sh\n```\n\n----------------------------------------\n\nTITLE: Install App Using Bench (Bash)\nDESCRIPTION: This snippet demonstrates how to install the Translation Tools app using the `bench` command-line tool for ERPNext. It first navigates to the bench directory, then uses `bench get-app` to fetch the app from a GitHub repository, and finally uses `bench install-app` to install the app within the ERPNext instance.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/INSTALLATION.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Navigate to your ERPNext bench directory\ncd /path/to/your/bench\n\n# Get the app from GitHub\nbench get-app https://github.com/your-username/translation_tools\n\n# Install the app\nbench install-app translation_tools\n```\n\n----------------------------------------\n\nTITLE: Translating a PO File to Thai\nDESCRIPTION: This snippet shows the basic usage of the `translate-po` command to translate a PO file to Thai.  It assumes the default target language is Thai and uses the default model provider and model.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./bin/translate-po apps/frappe/frappe/locale/th.po\n```\n\n----------------------------------------\n\nTITLE: Generate PO Files (Bash)\nDESCRIPTION: This snippet demonstrates how to generate POT (Portable Object Template) files and convert CSV translations to PO (Portable Object) format using the `bench` command. The first command generates the POT file, which serves as a template for translations. The second command converts CSV files containing translations for a specific locale (e.g., Thai) into the PO format.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/INSTALLATION.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# Generate POT file (run only the first time)\nbench generate-pot-file --app [app-name]\n\n# Convert CSV translations to PO format\nbench migrate-csv-to-po --app [app-name] --locale th\n```\n\n----------------------------------------\n\nTITLE: Translating with Advanced Options\nDESCRIPTION: This snippet showcases various advanced options for the `translate-po` command. It includes examples for specifying a different target language, using Anthropic Claude instead of OpenAI, specifying a particular OpenAI model, adjusting the batch size, saving the output to a specific file, and performing a dry run.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Specify a different target language\n./bin/translate-po --target-lang=ja apps/erpnext/erpnext/locale/ja.po\n\n# Use Anthropic Claude instead of OpenAI\n./bin/translate-po --model-provider=claude apps/frappe/frappe/locale/th.po\n\n# Use a specific OpenAI model\n./bin/translate-po --model=gpt-4-1106-preview apps/erpnext/erpnext/locale/th.po\n\n# Adjust batch size for processing\n./bin/translate-po --batch-size=20 apps/frappe/frappe/locale/th.po\n\n# Save output to a specific file\n./bin/translate-po --output=my-translations.po apps/frappe/frappe/locale/th.po\n\n# Do a dry run without making API calls\n./bin/translate-po --dry-run apps/frappe/frappe/locale/th.po\n```\n\n----------------------------------------\n\nTITLE: Updating Translations\nDESCRIPTION: This snippet demonstrates how to update translations for a specific app and language using the `bench update-translations` command.  It is a prerequisite for translating the PO file.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbench update-translations --app frappe --language th\n```\n\n----------------------------------------\n\nTITLE: Test Installation (Bash)\nDESCRIPTION: This snippet shows how to test the installation of the Translation Tools by running the `translate-po` command with the `--help` flag. This will display the help message, confirming that the command is accessible and the installation was successful.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/INSTALLATION.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n./bin/translate-po --help\n```\n\n----------------------------------------\n\nTITLE: Installing Python Dependencies\nDESCRIPTION: This snippet demonstrates how to install the required Python dependencies for the Translation Tools app using pip. This ensures that all necessary libraries are available for the app to function correctly.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/README.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npip install -r apps/translation_tools/requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Run Setup Script (Bash)\nDESCRIPTION: This snippet shows how to execute the setup script located within the Translation Tools app directory. This script performs post-installation tasks like installing dependencies, setting up API keys, and creating command-line tools.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/INSTALLATION.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Navigate to your ERPNext bench directory\ncd /path/to/your/bench\n\n# Run the setup script\n./apps/translation_tools/setup.sh\n```\n\n----------------------------------------\n\nTITLE: Building the App\nDESCRIPTION: This snippet shows how to rebuild the app using the `bench build` command. This step is necessary after translating a PO file to apply the changes.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbench build\n```\n\n----------------------------------------\n\nTITLE: Resolve ImportError (Bash)\nDESCRIPTION: This snippet provides a solution for resolving an `ImportError` that might occur when running the `translate-po` command. It navigates to the bench directory, activates the Python virtual environment, and installs the required dependencies using pip.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/INSTALLATION.md#_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncd /path/to/your/bench\nsource env/bin/activate\npip install -r apps/translation_tools/requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Customizing the Thai Glossary\nDESCRIPTION: This snippet provides an example of how to customize the Thai glossary by adding new terms to the `GLOSSARY` dictionary in the `thai_glossary.py` file. This allows users to ensure consistency in terminology within their translations.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/README.md#_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nGLOSSARY = {\n    \"Invoice\": \"ใบแจ้งหนี้\",\n    \"Customer\": \"ลูกค้า\",\n    # Add your terms here\n}\n```\n\n----------------------------------------\n\nTITLE: Fix Permission Denied Error (Bash)\nDESCRIPTION: This snippet addresses a \"Permission denied\" error that might occur when executing the `setup.sh` or `translate-po` scripts. It uses the `chmod +x` command to grant execute permissions to these scripts.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/INSTALLATION.md#_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nchmod +x ./apps/translation_tools/setup.sh\nchmod +x ./bin/translate-po\n```\n\n----------------------------------------\n\nTITLE: Define after_install hook in hooks.py (Python)\nDESCRIPTION: This Python code snippet defines the `app_name`, `app_title`, `app_publisher`, `app_description`, `app_email`, `app_license`, and `after_install` variables within the `hooks.py` file. The `after_install` hook is crucial as it triggers a specific function after the app is installed, facilitating initial setup or configuration.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/INSTALLATION.md#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n# hooks.py\napp_name = \"translation_tools\"\napp_title = \"Translation Tools\"\napp_publisher = \"Your Name\"\napp_description = \"AI-powered translation tools for ERPNext\"\napp_email = \"your.email@example.com\"\napp_license = \"MIT\"\n\n# Add this line to register the after_install hook\nafter_install = \"translation_tools.install.after_install\"\n```\n\n----------------------------------------\n\nTITLE: Declare Dependencies in requirements.txt\nDESCRIPTION: This snippet shows the content of the `requirements.txt` file, which lists the Python package dependencies required for the Translation Tools app, including their minimum versions. These packages will be installed when the app is installed using pip.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/INSTALLATION.md#_snippet_2\n\nLANGUAGE: txt\nCODE:\n```\nopenai>=1.3.0\npolib>=1.2.0\ntqdm>=4.64.0\nanthropic>=0.5.0\n```\n\n----------------------------------------\n\nTITLE: Push App to GitHub Repository (Bash)\nDESCRIPTION: This snippet initializes a Git repository for the Translation Tools app, adds all files, commits the changes, creates a main branch, adds a remote origin, and pushes the code to a GitHub repository. It assumes the current directory is the app's root directory.\nSOURCE: https://github.com/manotluijiu/translation_tools/blob/main/INSTALLATION.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd /path/to/your/bench/apps/translation_tools\ngit init\ngit add .\ngit commit -m \"Initial commit\"\ngit branch -M main\ngit remote add origin https://github.com/your-username/translation_tools.git\ngit push -u origin main\n```"
  }
]
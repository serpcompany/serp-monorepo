[
  {
    "owner": "couchbase",
    "repo": "docs-server",
    "content": "TITLE: Basic Highlight.js Integration for Web Pages with HTML and JavaScript\nDESCRIPTION: Demonstrates the minimal setup required to use Highlight.js on a web page. This includes linking the library and a style sheet, then initializing automatic syntax highlighting for code blocks.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\" href=\"/path/to/styles/default.css\">\n<script src=\"/path/to/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n```\n\n----------------------------------------\n\nTITLE: Node.js Integration with Selective Language Loading\nDESCRIPTION: Shows how to use Highlight.js in Node.js while loading only specific languages to reduce bundle size. This approach requires the core library and explicit registration of languages.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst hljs = require(\"highlight.js/lib/core\");  // require only the core library\n// separately require languages\nhljs.registerLanguage('xml', require('highlight.js/lib/languages/xml'));\n\nconst highlightedCode = hljs.highlight('xml', '<span>Hello World!</span>').value\n```\n\n----------------------------------------\n\nTITLE: ES6 Module Import with Selective Language Loading\nDESCRIPTION: Shows how to import Highlight.js as an ES6 module with selective language loading for improved efficiency. This approach requires importing the core library and each language separately.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nimport hljs from 'highlight.js/lib/core';\nimport javascript from 'highlight.js/lib/languages/javascript';\nhljs.registerLanguage('javascript', javascript);\n```\n\n----------------------------------------\n\nTITLE: CDN Integration with jsdelivr\nDESCRIPTION: Demonstrates how to include Highlight.js from the jsdelivr CDN. This approach serves files directly from GitHub releases and requires no local installation or building.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\"\n      href=\"//cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.0.0/build/styles/default.min.css\">\n<script src=\"//cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.0.0/build/highlight.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: CDN Integration with cdnjs\nDESCRIPTION: Shows how to include Highlight.js from the cdnjs CDN, including both the core library and additional language modules. This approach requires no local installation or building.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\"\n      href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.0.0/styles/default.min.css\">\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.0.0/highlight.min.js\"></script>\n<!-- and it's easy to individually load additional languages -->\n<script charset=\"UTF-8\"\n src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.0.0/languages/go.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Specifying Language for Syntax Highlighting with HTML Class\nDESCRIPTION: Shows how to explicitly specify the language for syntax highlighting by using the class attribute on code elements, which is useful when automatic language detection doesn't work correctly.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"html\">...</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Node.js Integration with Full Language Bundle\nDESCRIPTION: Demonstrates how to use Highlight.js in a Node.js environment with all languages included. This requires the complete package and returns formatted HTML that can be sent to the browser.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// require the highlight.js library, including all languages\nconst hljs = require('./highlight.js');\nconst highlightedCode = hljs.highlightAuto('<span>Hello World!</span>').value\n```\n\n----------------------------------------\n\nTITLE: ES6 Module Import with Full Language Bundle\nDESCRIPTION: Demonstrates how to import Highlight.js as an ES6 module with all languages included. This is the simplest approach but may result in larger bundle sizes.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nimport hljs from 'highlight.js';\n```\n\n----------------------------------------\n\nTITLE: Implementing Highlight.js in Web Workers for Large Code Blocks\nDESCRIPTION: Shows how to run syntax highlighting in a web worker to prevent freezing the browser when processing large chunks of code. The main script posts the code content to a worker and then updates the DOM with the result.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\naddEventListener('load', () => {\n  const code = document.querySelector('#code');\n  const worker = new Worker('worker.js');\n  worker.onmessage = (event) => { code.innerHTML = event.data; }\n  worker.postMessage(code.textContent);\n});\n```\n\n----------------------------------------\n\nTITLE: Web Worker Implementation for Highlight.js\nDESCRIPTION: Shows the implementation of a web worker that processes code highlighting. The worker imports the Highlight.js library, performs the highlighting, and sends the result back to the main thread.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nonmessage = (event) => {\n  importScripts('<path>/highlight.min.js');\n  const result = self.hljs.highlightAuto(event.data);\n  postMessage(result.value);\n};\n```\n\n----------------------------------------\n\nTITLE: ES6 Module Import with CSS Stylesheet\nDESCRIPTION: Demonstrates how to import both the Highlight.js library and its CSS stylesheet as ES6 modules. This approach is useful when your build tool processes CSS from JavaScript entry points.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nimport hljs from 'highlight.js/lib/core';\nimport 'highlight.js/styles/github.css';\n```\n\n----------------------------------------\n\nTITLE: Custom Initialization with Vanilla JavaScript\nDESCRIPTION: Shows how to manually initialize Highlight.js using vanilla JavaScript instead of the automatic initialization function. This provides more control over what elements get highlighted and when.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.addEventListener('DOMContentLoaded', (event) => {\n  document.querySelectorAll('pre code').forEach((block) => {\n    hljs.highlightBlock(block);\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Using Language Prefix for Syntax Highlighting\nDESCRIPTION: Demonstrates the alternative method for specifying the language using the 'language-' or 'lang-' prefix in the class attribute of code elements.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"language-html\">...</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Configuring Highlight.js for Non-Standard Containers\nDESCRIPTION: Demonstrates how to configure Highlight.js to use custom container elements and handle line breaks with the BR tag, useful when you can't use the standard pre and code elements.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nhljs.configure({useBR: true});\n\ndocument.querySelectorAll('div.code').forEach((block) => {\n  hljs.highlightBlock(block);\n});\n```\n\n----------------------------------------\n\nTITLE: Marking Code as Plaintext without Highlighting\nDESCRIPTION: Shows how to style text as code without applying any syntax highlighting by using the 'plaintext' class, useful for plain text that should be displayed in a code-like format.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"plaintext\">...</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Disabling Syntax Highlighting Completely\nDESCRIPTION: Demonstrates how to completely disable syntax highlighting for a code block by using the 'nohighlight' class, useful when you want the code styling but not the syntax coloring.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/README.md#2025-04-23_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<pre><code class=\"nohighlight\">...</code></pre>\n```\n\n----------------------------------------\n\nTITLE: Configuring Highlight.js Class Prefix\nDESCRIPTION: Example showing how to configure Highlight.js to use no prefix for CSS classes, maintaining backwards compatibility with older versions.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/CHANGES.md#2025-04-23_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/javascript\">\n    hljs.configure({classPrefix: ''});\n    hljs.initHighlightingOnLoad();\n</script>\n```\n\n----------------------------------------\n\nTITLE: Adding CLI tool for checking relevance conflicts in JavaScript\nDESCRIPTION: This snippet shows the addition of a CLI tool to quickly check for relevance conflicts in Highlight.js. It's part of the improvements in version 9.16.1.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/CHANGES.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n- Add CLI tool to quickly check for relevance conflicts [Mark Ellis][] (#1554)\n```\n\n----------------------------------------\n\nTITLE: Adding support for CSS custom properties in JavaScript\nDESCRIPTION: This improvement adds support for CSS custom properties in Highlight.js version 9.15.10.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/CHANGES.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n  - support css custom properties (#2082)\n```\n\n----------------------------------------\n\nTITLE: Improving parser for regex look-ahead in JavaScript\nDESCRIPTION: This improvement enhances the parser to properly support look-ahead regex in begin matchers for Highlight.js version 9.16.1.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/CHANGES.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n- improve parser to properly support look-ahead regex in begin matchers (#2135)\n```\n\n----------------------------------------\n\nTITLE: Updating Twig filter and tag list in JavaScript\nDESCRIPTION: This improvement updates the list of filters and tags for the Twig language in Highlight.js version 9.16.1.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/CHANGES.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n- enhance(twig) update list of filter and tags (#2090)\n```\n\n----------------------------------------\n\nTITLE: Adding support for Ruby's squiggly heredoc in JavaScript\nDESCRIPTION: This improvement adds support for Ruby's squiggly heredoc syntax in Highlight.js version 9.15.10.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/CHANGES.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n  - support for ruby's squiggly heredoc (#2049)\n```\n\n----------------------------------------\n\nTITLE: Fixing Crystal language highlighting in JavaScript\nDESCRIPTION: This fix corrects the highlighting of the '!~' method definition in the Crystal language for Highlight.js version 9.16.1.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/CHANGES.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n- fix(crystal): correctly highlight `!~` method definition (#2222)\n```\n\n----------------------------------------\n\nTITLE: Fixing Kotlin parenthesized types in JavaScript\nDESCRIPTION: This fix addresses issues with parenthesized types in Kotlin function declarations for Highlight.js version 9.15.10.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/CHANGES.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n  - fix(Kotlin): parenthesized types in function declaration (#2107)\n```\n\n----------------------------------------\n\nTITLE: Updating PureBASIC language support in JavaScript\nDESCRIPTION: This fix updates the PureBASIC language support to version 5.60 in Highlight.js version 9.15.10.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/CHANGES.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n  - fix(PureBASIC): update to 5.60 (#1508)\n```\n\n----------------------------------------\n\nTITLE: Clojure Function Call Example\nDESCRIPTION: Demonstrates Clojure's support for function calls at the beginning of s-expressions.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/CHANGES.md#2025-04-23_snippet_10\n\nLANGUAGE: Clojure\nCODE:\n```\n(($filter \"myCount\") (arr 1 2 3 4 5))\n```\n\n----------------------------------------\n\nTITLE: Ruby Character Support Example\nDESCRIPTION: Example showing Ruby's support for special characters and regex patterns.\nSOURCE: https://github.com/couchbase/docs-server/blob/release/7.6/modules/cheatsheets/highlight/CHANGES.md#2025-04-23_snippet_9\n\nLANGUAGE: Ruby\nCODE:\n```\n?A ?1 ?\\012 %r{..}\n```"
  }
]
[
  {
    "owner": "slimphp",
    "repo": "slim",
    "content": "TITLE: Creating a Basic Slim \"Hello World\" Application (PHP)\nDESCRIPTION: This is a complete example of a basic Slim application (`public/index.php`). It includes the Composer autoloader, uses `AppFactory::create()` for easy setup (requires a PSR-7 implementation installed for auto-detection), adds basic error middleware, defines two GET routes ('/' and '/hello/{name}'), and runs the application. The routes demonstrate handling requests, generating responses, and accessing route parameters.\nSOURCE: https://github.com/slimphp/slim/blob/4.x/README.md#_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\nuse Psr\\Http\\Message\\ResponseInterface as Response;\nuse Psr\\Http\\Message\\ServerRequestInterface as Request;\nuse Slim\\Factory\\AppFactory;\n\nrequire __DIR__ . '/../vendor/autoload.php';\n\n// Instantiate App\n$app = AppFactory::create();\n\n// Add error middleware\n$app->addErrorMiddleware(true, true, true);\n\n// Add routes\n$app->get('/', function (Request $request, Response $response) {\n    $response->getBody()->write('<a href=\"/hello/world\">Try /hello/world</a>');\n    return $response;\n});\n\n$app->get('/hello/{name}', function (Request $request, Response $response, $args) {\n    $name = $args['name'];\n    $response->getBody()->write(\"Hello, $name\");\n    return $response;\n});\n\n$app->run();\n```\n\n----------------------------------------\n\nTITLE: Installing Slim Framework via Composer (Bash)\nDESCRIPTION: This command uses Composer, the PHP dependency manager, to download and install the Slim Framework (`slim/slim`) package and its required dependencies into your project. It requires Composer to be installed and assumes a PHP version of 7.4 or newer.\nSOURCE: https://github.com/slimphp/slim/blob/4.x/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ composer require slim/slim\n```\n\n----------------------------------------\n\nTITLE: Installing Slim-Http Decorators via Composer (Bash)\nDESCRIPTION: This command uses Composer to install the `slim/http` package. This package provides helpful decorators for PSR-7 request and response objects, which are recommended for use with the Slim Framework. Requires Composer.\nSOURCE: https://github.com/slimphp/slim/blob/4.x/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require slim/http\n```\n\n----------------------------------------\n\nTITLE: Running the PHP Built-in Server for Testing (Bash)\nDESCRIPTION: This command starts PHP's built-in web server, making the Slim application accessible for testing. It listens on `localhost` port `8000` and sets the document root (`-t`) to the `public` directory where the `index.php` file resides. Requires PHP to be installed and accessible in the system path.\nSOURCE: https://github.com/slimphp/slim/blob/4.x/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ php -S localhost:8000 -t public\n```\n\n----------------------------------------\n\nTITLE: Cloning, Installing Dependencies, and Running Tests (Bash)\nDESCRIPTION: This sequence of commands outlines the steps to set up the Slim Framework development environment and run its test suite. It involves cloning the official repository using Git, installing all project dependencies (including development dependencies) using Composer, and then executing the defined test suite using the `composer test` script. Requires Git and Composer.\nSOURCE: https://github.com/slimphp/slim/blob/4.x/README.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/slimphp/Slim\n$ composer install\n$ composer test\n```\n\n----------------------------------------\n\nTITLE: Disabling Automatic Slim-Http Decorator Detection (PHP)\nDESCRIPTION: This PHP code snippet demonstrates how to prevent Slim from automatically applying decorators from the `slim/http` package to PSR-7 request and response objects. It uses static methods on `AppFactory` and `ServerRequestCreatorFactory` before creating the main `$app` instance. This is useful if you have `slim/http` installed but prefer manual control over decoration.\nSOURCE: https://github.com/slimphp/slim/blob/4.x/README.md#_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Slim\\Factory\\AppFactory;\nuse Slim\\Factory\\ServerRequestCreatorFactory;\n\nAppFactory::setSlimHttpDecoratorsAutomaticDetection(false);\nServerRequestCreatorFactory::setSlimHttpDecoratorsAutomaticDetection(false);\n\n$app = AppFactory::create();\n\n// ...\n```"
  }
]
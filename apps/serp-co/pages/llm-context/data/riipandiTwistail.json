[
  {
    "owner": "riipandi",
    "repo": "twistail",
    "content": "TITLE: Installing Dependencies for Twistail UI Components\nDESCRIPTION: This snippet shows the command to install the required dependencies for Twistail UI components using npm. It includes packages like radix-ui, tailwind-variants, and various React-related libraries.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/install/index.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui tailwind-variants lucide-react sonner next-themes cmdk \\ninput-otp date-fns react-day-picker recharts allotment\n```\n\n----------------------------------------\n\nTITLE: Using Twistail Button Component in React\nDESCRIPTION: Demonstrates how to import and use a Button component from the Twistail library in a React application. This example shows a primary variant button with text content.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/blog/introduction-to-twistail.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Button } from 'twistail-react/button'\n\nfunction MyComponent() {\n  return (\n    <Button variant=\"primary\">\n      Get Started\n    </Button>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Dropdown Menu Component Anatomy in React\nDESCRIPTION: A complete structural example showing how the Dropdown Menu components are composed together to create a fully functional dropdown menu with various features including groups, checkboxes, and radio items.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/dropdown-menu.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<DropdownMenu>\n  <DropdownMenuTrigger />\n\n  <DropdownMenuPortal>\n    <DropdownMenuContent>\n      <DropdownMenuLabel />\n      <DropdownMenuItem />\n\n      <DropdownMenuGroup>\n        <DropdownMenuItem />\n      </DropdownMenuGroup>\n\n      <DropdownMenuCheckboxItem>\n        <DropdownMenuItemIndicator />\n      </DropdownMenuCheckboxItem>\n\n      <DropdownMenuRadioGroup>\n        <DropdownMenuRadioItem>\n          <DropdownMenuItemIndicator />\n        </DropdownMenuRadioItem>\n      </DropdownMenuRadioGroup>\n\n      <DropdownMenuSub>\n        <DropdownMenuSubTrigger />\n        <DropdownMenuPortal>\n          <DropdownMenuSubContent />\n        </DropdownMenuPortal>\n      </DropdownMenuSub>\n\n      <DropdownMenuSeparator />\n      <DropdownMenuArrow />\n    </DropdownMenuContent>\n  </DropdownMenuPortal>\n</DropdownMenu>\n```\n\n----------------------------------------\n\nTITLE: Installing Twistail Package\nDESCRIPTION: Installs the Twistail package using npm. This is required before using any Twistail components in your React project.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/blog/introduction-to-twistail.mdx#2025-04-08_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpm install twistail\n```\n\n----------------------------------------\n\nTITLE: Installing Twistail React with Package Managers\nDESCRIPTION: This snippet demonstrates how to install Twistail React using different package managers: npm, pnpm, and yarn. It provides the commands for each package manager to add the twistail-react package to a project.\nSOURCE: https://github.com/riipandi/twistail/blob/main/packages/ui-react/README.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Install with npm\nnpm install twistail-react\n\n# Install with pnpm\npnpm add twistail-react\n\n# Install with yarn\nyarn add twistail-react\n```\n\n----------------------------------------\n\nTITLE: Menubar Component Structure Example\nDESCRIPTION: Example showing the complete component structure of the Menubar for understanding the component hierarchy and relationships.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/menubar.mdx#2025-04-08_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<Menubar>\n  <MenubarMenu>\n    <MenubarTrigger />\n    <MenubarPortal>\n      <MenubarContent>\n        <MenubarLabel />\n        <MenubarItem />\n\n        <MenubarGroup>\n          <MenubarItem />\n        </MenubarGroup>\n\n        <MenubarCheckboxItem>\n          <MenubarItemIndicator />\n        </MenubarCheckboxItem>\n\n        <MenubarRadioGroup>\n          <MenubarRadioItem>\n            <MenubarItemIndicator />\n          </MenubarRadioItem>\n        </MenubarRadioGroup>\n\n        <MenubarSub>\n          <MenubarSubTrigger />\n          <MenubarPortal>\n            <MenubarSubContent />\n          </MenubarPortal>\n        </MenubarSub>\n\n        <MenubarSeparator />\n        <MenubarArrow />\n      </MenubarContent>\n    </MenubarPortal>\n  </MenubarMenu>\n</Menubar>\n```\n\n----------------------------------------\n\nTITLE: Installing Development Dependencies for Tailwind CSS\nDESCRIPTION: This command installs the necessary development dependencies for Tailwind CSS, including the Tailwind CSS package itself and related PostCSS plugins.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/install/index.mdx#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -D tailwindcss @tailwindcss/postcss postcss postcss-load-config\n```\n\n----------------------------------------\n\nTITLE: Select Component Anatomy\nDESCRIPTION: The complete structure of the Select component showing the hierarchy of nested components and their relationships.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/select.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<Select>\n  <SelectTrigger>\n    <SelectValue />\n    <SelectIcon />\n  </SelectTrigger>\n\n  <SelectPortal>\n    <SelectContent>\n      <SelectScrollUpButton />\n      <SelectViewport>\n        <SelectItem>\n          <SelectItemText />\n          <SelectItemIndicator />\n        </SelectItem>\n\n        <SelectGroup>\n          <SelectLabel />\n          <SelectItem>\n            <SelectItemText />\n            <SelectItemIndicator />\n          </SelectItem>\n        </SelectGroup>\n\n        <SelectSeparator />\n      </SelectViewport>\n      <SelectScrollDownButton />\n      <SelectArrow />\n    </SelectContent>\n  </SelectPortal>\n</Select>\n```\n\n----------------------------------------\n\nTITLE: Collapsible Component Basic Structure\nDESCRIPTION: Demonstrates the basic anatomy of the collapsible component structure\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/collapsible.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<Collapsible>\n  <CollapsibleTrigger/>\n  <CollapsibleContent />\n</Collapsible>\n```\n\n----------------------------------------\n\nTITLE: Dialog Component Structure\nDESCRIPTION: Demonstrates the basic anatomy of the Dialog component structure with all available sub-components\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/dialog.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<Dialog>\n  <DialogTrigger />\n  <DialogContent>\n    <DialogHeader>\n      <DialogTitle />\n      <DialogDescription />\n    </DialogHeader>\n    <DialogDivider />\n    <DialogFooter>\n      <DialogClose />\n    </DialogFooter>\n  </DialogContent>\n</Dialog>\n```\n\n----------------------------------------\n\nTITLE: Structuring Card Component in React\nDESCRIPTION: Demonstrates the basic structure and anatomy of the Card component when used in a React application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/card.mdx#2025-04-08_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\n<Card>\n  <CardHeader>\n    <CardTitle />\n    <CardDescription />\n  </CardHeader>\n  <CardDivider />\n  <CardContent />\n  <CardDivider />\n  <CardFooter />\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Context Menu Component Anatomy Example\nDESCRIPTION: Code example showing the structure and nesting pattern of the context menu components.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/context-menu.mdx#2025-04-08_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<ContextMenu>\n  <ContextMenuTrigger />\n\n  <ContextMenuPortal>\n    <ContextMenuContent>\n      <ContextMenuLabel />\n      <ContextMenuItem />\n\n      <ContextMenuGroup>\n        <ContextMenuItem />\n      </ContextMenuGroup>\n\n      <ContextMenuCheckboxItem>\n        <ContextMenuItemIndicator />\n      </ContextMenuCheckboxItem>\n\n      <ContextMenuRadioGroup>\n        <ContextMenuRadioItem>\n          <ContextMenuItemIndicator />\n        </ContextMenuRadioItem>\n      </ContextMenuRadioGroup>\n\n      <ContextMenuSub>\n        <ContextMenuSubTrigger />\n        <ContextMenuPortal>\n          <ContextMenuSubContent />\n        </ContextMenuPortal>\n      </ContextMenuSub>\n\n      <ContextMenuSeparator />\n    </ContextMenuContent>\n  </ContextMenuPortal>\n</ContextMenu>\n```\n\n----------------------------------------\n\nTITLE: Radio Group Component Structure\nDESCRIPTION: Basic anatomy of the radio group component showing the component hierarchy.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/radio-group.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<RadioGroup>\n  <RadioGroupItem>\n    <RadioGroupIndicator />\n  </RadioGroupItem>\n</RadioGroup>\n```\n\n----------------------------------------\n\nTITLE: Hover Card Component Structure\nDESCRIPTION: Basic anatomy of the hover card component showing the proper nesting of subcomponents.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/hover-card.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<HoverCard>\n  <HoverCardTrigger />\n  <HoverCardPortal>\n    <HoverCardContent>\n      <HoverCardArrow />\n    </HoverCardContent>\n  </HoverCardPortal>\n</HoverCard>\n```\n\n----------------------------------------\n\nTITLE: Implementing Card Component in React\nDESCRIPTION: Defines the Card component and its subcomponents using React and Radix UI. It includes various props for customization and accessibility features.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/card.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cn } from '../../lib/utils'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nconst cardVariants = cva(\n  'rounded-lg border bg-card text-card-foreground shadow-sm',\n  {\n    variants: {\n      variant: {\n        default: '',\n        outline: 'bg-background border-2 shadow-none',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n)\n\nexport interface CardProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof cardVariants> {\n  asChild?: boolean\n}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, variant, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'div'\n    return (\n      <Comp\n        ref={ref}\n        className={cn(cardVariants({ variant }), className)}\n        {...props}\n      />\n    )\n  }\n)\nCard.displayName = 'Card'\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n))\nCardHeader.displayName = 'CardHeader'\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = 'CardTitle'\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n))\nCardDescription.displayName = 'CardDescription'\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n))\nCardContent.displayName = 'CardContent'\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n))\nCardFooter.displayName = 'CardFooter'\n\nconst CardDivider = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('-mx-6 h-px bg-neutral-200 dark:bg-neutral-800', className)}\n    {...props}\n  />\n))\nCardDivider.displayName = 'CardDivider'\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  CardDivider,\n}\n```\n\n----------------------------------------\n\nTITLE: Form Component Basic Structure\nDESCRIPTION: Basic anatomy of the Form component showing the hierarchical structure and component relationships.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/form.mdx#2025-04-08_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<Form>\n  <FormField>\n    <FormLabel />\n    <FormControl />\n    <FormMessage />\n    <FormValidityState />\n  </FormField>\n\n  <FormMessage />\n  <FormValidityState />\n\n  <FormSubmit />\n</Form>\n```\n\n----------------------------------------\n\nTITLE: Navigation Menu Component Structure in React\nDESCRIPTION: Demonstrates the anatomy of the Navigation Menu component, showing the nested structure and relationships between different sub-components.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/navigation-menu.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<NavigationMenu>\n  <NavigationMenuList>\n    <NavigationMenuItem>\n      <NavigationMenuTrigger />\n      <NavigationMenuContent>\n        <NavigationMenuLink />\n      </NavigationMenuContent>\n    </NavigationMenuItem>\n\n    <NavigationMenuItem>\n      <NavigationMenuLink />\n    </NavigationMenuItem>\n\n    <NavigationMenuItem>\n      <NavigationMenuTrigger />\n      <NavigationMenuContent>\n        <NavigationMenuSub>\n          <NavigationMenuList />\n          <NavigationMenuViewport />\n        </NavigationMenuSub>\n      </NavigationMenuContent>\n    </NavigationMenuItem>\n\n    <NavigationMenuIndicator />\n  </NavigationMenuList>\n\n  <NavigationMenuViewport />\n</NavigationMenu>\n```\n\n----------------------------------------\n\nTITLE: ScrollArea Component Structure\nDESCRIPTION: Demonstrates the basic anatomy of the ScrollArea component showing the proper nesting of subcomponents.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/scroll-area.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<ScrollArea>\n  <ScrollAreaViewport />\n  <ScrollAreaScrollbar orientation=\"horizontal\">\n    <ScrollAreaThumb />\n  </ScrollAreaScrollbar>\n  <ScrollAreaScrollbar orientation=\"vertical\">\n    <ScrollAreaThumb />\n  </ScrollAreaScrollbar>\n  <ScrollAreaCorner />\n</ScrollArea>\n```\n\n----------------------------------------\n\nTITLE: Implementing Text Component in React\nDESCRIPTION: This code defines the Text component using React and Radix UI. It includes various props for customizing the text appearance and behavior.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/text.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '#/utils'\n\nconst textVariants = cva('', {\n  variants: {\n    variant: {\n      default: 'text-foreground',\n      muted: 'text-muted-foreground',\n    },\n    size: {\n      xs: 'text-xs',\n      sm: 'text-sm',\n      base: 'text-base',\n      lg: 'text-lg',\n      xl: 'text-xl',\n      '2xl': 'text-2xl',\n      '3xl': 'text-3xl',\n      '4xl': 'text-4xl',\n      '5xl': 'text-5xl',\n      '6xl': 'text-6xl',\n      '7xl': 'text-7xl',\n      '8xl': 'text-8xl',\n      '9xl': 'text-9xl',\n    },\n    weight: {\n      thin: 'font-thin',\n      extralight: 'font-extralight',\n      light: 'font-light',\n      normal: 'font-normal',\n      medium: 'font-medium',\n      semibold: 'font-semibold',\n      bold: 'font-bold',\n      extrabold: 'font-extrabold',\n      black: 'font-black',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n    size: 'base',\n    weight: 'normal',\n  },\n})\n\nexport interface TextProps\n  extends React.ParamHTMLAttributes<HTMLParagraphElement>,\n    VariantProps<typeof textVariants> {\n  asChild?: boolean\n}\n\nconst Text = React.forwardRef<HTMLParagraphElement, TextProps>((\n  { className, variant, size, weight, asChild = false, ...props },\n  ref\n) => {\n  const Comp = asChild ? Slot : 'p'\n  return (\n    <Comp\n      className={cn(textVariants({ variant, size, weight, className }))}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n\nText.displayName = 'Text'\n\nexport { Text, textVariants }\n```\n\n----------------------------------------\n\nTITLE: Implementing Switch Component in React\nDESCRIPTION: This code defines the Switch component using React and Radix UI. It includes the main Switch component, SwitchThumb, and various styling options.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/switch.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as React from 'react'\nimport * as SwitchPrimitives from '@radix-ui/react-switch'\n\nimport { cn } from '../../lib/utils'\nimport { switchStyle } from './switch.css'\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(switchStyle.root, className)}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb className={switchStyle.thumb} />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n```\n\n----------------------------------------\n\nTITLE: Implementing Tabs Component in React\nDESCRIPTION: This code snippet shows the main implementation of the Tabs component using React and Radix UI. It includes the component structure and styling.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tabs.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as React from 'react'\nimport * as TabsPrimitive from '@radix-ui/react-tabs'\n\nimport { cn } from '../../lib/utils'\nimport { tabsStyles as styles } from './tabs.css'\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(styles.tabsList, className)}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(styles.tabsTrigger, className)}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(styles.tabsContent, className)}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n```\n\n----------------------------------------\n\nTITLE: Avatar Component Anatomy\nDESCRIPTION: Basic structure showing how to compose the Avatar component with its subcomponents\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/avatar.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<AvatarGroup>\n  <Avatar>\n    <AvatarImage />\n    <AvatarFallback />\n  </Avatar>\n</AvatarGroup>\n```\n\n----------------------------------------\n\nTITLE: Basic Accordion Component Structure\nDESCRIPTION: Example of the basic structure and anatomy of the Accordion component implementation.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/accordion.mdx#2025-04-08_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<Accordion>\n  <AccordionItem>\n    <AccordionTrigger />\n    <AccordionContent />\n  </AccordionItem>\n</Accordion>\n```\n\n----------------------------------------\n\nTITLE: Defining Calendar Component in React\nDESCRIPTION: Defines the Calendar component using React and various dependencies. It includes styling and functionality for date selection and navigation.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/calendar.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as React from 'react'\nimport { DayContent, DayPicker } from 'react-day-picker'\nimport { tv } from 'tailwind-variants'\nimport { ChevronLeft, ChevronRight } from 'lucide-react'\n\nimport { buttonVariants } from '../button'\nimport { twix } from '../../lib/utils'\n\nimport { calendarStyles } from './calendar.css'\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({ className, classNames, showOutsideDays = true, ...props }: CalendarProps) {\n  const calendarCss = calendarStyles()\n\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={twix(calendarCss.base(), className)}\n      classNames={{\n        months: calendarCss.months(),\n        month: calendarCss.month(),\n        caption: calendarCss.caption(),\n        caption_label: calendarCss.captionLabel(),\n        nav: calendarCss.nav(),\n        nav_button: twix(\n          buttonVariants({ variant: 'outline' }),\n          calendarCss.navButton(),\n        ),\n        nav_button_previous: calendarCss.navButtonPrevious(),\n        nav_button_next: calendarCss.navButtonNext(),\n        table: calendarCss.table(),\n        head_row: calendarCss.headRow(),\n        head_cell: calendarCss.headCell(),\n        row: calendarCss.row(),\n        cell: calendarCss.cell({\n          outside: !!showOutsideDays && 'outside',\n        }),\n        day: calendarCss.day(),\n        day_selected: calendarCss.daySelected(),\n        day_today: calendarCss.dayToday(),\n        day_outside: calendarCss.dayOutside(),\n        day_disabled: calendarCss.dayDisabled(),\n        day_range_middle: calendarCss.dayRangeMiddle(),\n        day_hidden: calendarCss.dayHidden(),\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = 'Calendar'\n\nexport { Calendar }\n```\n\n----------------------------------------\n\nTITLE: Popover Component Anatomy in React\nDESCRIPTION: The structure of a Popover component showing the relationship between its sub-components including trigger, anchor, content, close, and arrow elements.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/popover.mdx#2025-04-08_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<Popover>\n  <PopoverTrigger />\n  <PopoverAnchor />\n  <PopoverPortal>\n    <PopoverContent>\n      <PopoverClose />\n      <PopoverArrow />\n    </PopoverContent>\n  </PopoverPortal>\n</Popover>\n```\n\n----------------------------------------\n\nTITLE: Basic Structure of Tabs Component in React\nDESCRIPTION: This code snippet demonstrates the basic structure and usage of the Tabs component in a React application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tabs.mdx#2025-04-08_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\n<Tabs>\n  <TabsList>\n    <TabsTrigger />\n  </TabsList>\n  <TabsContent />\n</Tabs>\n```\n\n----------------------------------------\n\nTITLE: Importing Accordion Components (NPM)\nDESCRIPTION: Example showing how to import Accordion components when installing from npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/accordion.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger\n} from 'twistail-react/accordion'\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Twistail vs shadcn/ui Comparison\nDESCRIPTION: A markdown table comparing features between Twistail and shadcn/ui libraries, detailing distribution methods, styling approaches, theming capabilities, and maintenance aspects.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/blog/comparing-ui-libraries.mdx#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Feature      | Twistail                      | shadcn/ui                  |\n|--------------|-------------------------------|----------------------------|\n| Distribution | Copy-paste code & NPM package | Copy-paste code            |\n| Styling      | Separate style files          | Inline with components     |\n| Theming      | CSS variables and Tailwind    | Tailwind and CSS variables |\n| Maintenance  | Centralized updates           | Manual updates             |\n```\n\n----------------------------------------\n\nTITLE: Basic Checkbox Usage\nDESCRIPTION: Basic example showing the minimal implementation of the Checkbox component\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/checkbox.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<Checkbox />\n```\n\n----------------------------------------\n\nTITLE: Basic Tooltip Component Structure\nDESCRIPTION: Shows the basic anatomy of how to structure the tooltip component in JSX\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tooltip.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<Tooltip>\n  <TooltipTrigger />\n  <TooltipContent />\n</Tooltip>\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Divider Component in React\nDESCRIPTION: Simple example showing the basic implementation of the Divider component in JSX.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/divider.mdx#2025-04-08_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<Divider />\n```\n\n----------------------------------------\n\nTITLE: Example AI Assistant Prompts for Twistail UI\nDESCRIPTION: Sample prompts demonstrating how to effectively request help from AI assistants when working with Twistail UI components\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/llms.mdx#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n\"I'm using Twistail UI. Can you help me implement a form with Input, Select, and Button components?\"\n\n\"Using Twistail UI, how would I create a responsive layout with Card components?\"\n\n\"I need to implement a Dialog component from Twistail UI with custom styling. Can you show me how?\"\n```\n\n----------------------------------------\n\nTITLE: Refactored Card Component Structure in TSX\nDESCRIPTION: This code snippet illustrates the new composition of the Card component after refactoring. It shows the nested structure of CardHeader, CardTitle, CardDescription, CardDivider, CardContent, and CardFooter within the main Card component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/changelog/0.5.1.mdx#2025-04-08_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n<Card>\n  <CardHeader>\n    <CardTitle />\n    <CardDescription />\n  </CardHeader>\n  <CardDivider />\n  <CardContent />\n  <CardDivider />\n  <CardFooter />\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Defining Slider Component Structure in React\nDESCRIPTION: This snippet outlines the basic structure and anatomy of the Slider component, showing how to compose its subcomponents.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/slider.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<Slider>\n  <SliderTrack>\n    <SliderRange />\n  </SliderTrack>\n  <SliderThumb />\n</Slider>\n```\n\n----------------------------------------\n\nTITLE: Running Twistail CLI with pnpm dlx\nDESCRIPTION: This command shows how to run the latest version of Twistail CLI using pnpm dlx, which is similar to npx but for the pnpm package manager.\nSOURCE: https://github.com/riipandi/twistail/blob/main/packages/cli/README.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npnpm dlx twistail@latest\n```\n\n----------------------------------------\n\nTITLE: Using Switch Component in React JSX\nDESCRIPTION: This code shows the basic structure for using the Switch component in a React JSX template.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/switch.mdx#2025-04-08_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\n<Switch>\n  <SwitchThumb />\n</Switch>\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Label Component\nDESCRIPTION: Simple example showing the basic anatomy and usage of the Label component in a React application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/label.mdx#2025-04-08_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<Label />\n```\n\n----------------------------------------\n\nTITLE: Basic Structure of Split Pane Component in React\nDESCRIPTION: This code snippet demonstrates the basic structure and anatomy of the Split Pane component, showing how to nest SplitPane and SplitPanel within a Split container.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/split-pane.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<Split>\n  <SplitPane>\n    <SplitPanel />\n  </SplitPane>\n</Split>\n```\n\n----------------------------------------\n\nTITLE: Basic AspectRatio Usage\nDESCRIPTION: Basic example showing the anatomy of using the AspectRatio component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/aspect-ratio.mdx#2025-04-08_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<AspectRatio />\n```\n\n----------------------------------------\n\nTITLE: Alert Dialog Component Structure\nDESCRIPTION: Basic structure and anatomy of the Alert Dialog component showing the proper nesting of subcomponents\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/alert-dialog.mdx#2025-04-08_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<AlertDialog>\n  <AlertDialogTrigger />\n  <AlertDialogPortal>\n    <AlertDialogContent>\n      <AlertDialogHeader>\n        <AlertDialogTitle />\n        <AlertDialogDescription />\n      </AlertDialogHeader>\n      <AlertDialogDivider />\n      <AlertDialogFooter>\n        <AlertDialogCancel />\n        <AlertDialogAction />\n      </AlertDialogFooter>\n    </AlertDialogContent>\n  </AlertDialogPortal>\n</AlertDialog>\n```\n\n----------------------------------------\n\nTITLE: Exporting Card Component and Subcomponents\nDESCRIPTION: Exports the Card component and its subcomponents for use in other parts of the application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/card.mdx#2025-04-08_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nexport * from './card'\n```\n\n----------------------------------------\n\nTITLE: Exporting Text Component and Styles\nDESCRIPTION: This code exports the Text component and its associated styles for use in other parts of the application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/text.mdx#2025-04-08_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nexport { Text, type TextProps } from './text'\nexport { text } from './text.css'\n```\n\n----------------------------------------\n\nTITLE: Toggle Component Anatomy\nDESCRIPTION: Shows the basic structure of using Toggle components together, with a ToggleGroup containing ToggleGroupItems.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/toggle.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<ToggleGroup>\n  <ToggleGroupItem />\n</ToggleGroup>\n```\n\n----------------------------------------\n\nTITLE: Exporting Bar Chart Component in TypeScript\nDESCRIPTION: This code exports the Bar Chart component and its props type, making them available for use in other parts of the application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/bar-chart.mdx#2025-04-08_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nexport { BarChart } from './bar-chart'\nexport type { BarChartProps } from './bar-chart'\n```\n\n----------------------------------------\n\nTITLE: Styling Card Component with CSS-in-JS\nDESCRIPTION: Defines CSS styles for the Card component using CSS-in-JS approach. It includes styles for different variants and states of the card.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/card.mdx#2025-04-08_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { css } from '../../styled-system/css'\n\nexport const card = css({\n  rounded: 'lg',\n  border: '1px solid',\n  borderColor: 'border',\n  bg: 'card',\n  color: 'card.foreground',\n  boxShadow: 'sm',\n})\n\nexport const cardHeader = css({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '1.5',\n  p: '6',\n})\n\nexport const cardTitle = css({\n  fontSize: '2xl',\n  fontWeight: 'semibold',\n  lineHeight: 'none',\n  letterSpacing: 'tight',\n})\n\nexport const cardDescription = css({\n  fontSize: 'sm',\n  color: 'muted.foreground',\n})\n\nexport const cardContent = css({\n  p: '6',\n  pt: '0',\n})\n\nexport const cardFooter = css({\n  display: 'flex',\n  alignItems: 'center',\n  p: '6',\n  pt: '0',\n})\n\nexport const cardDivider = css({\n  mx: '-6',\n  h: 'px',\n  bg: 'neutral.200',\n  _dark: {\n    bg: 'neutral.800',\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Exporting Calendar Component in TypeScript\nDESCRIPTION: Exports the Calendar component and its associated types from the index file.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/calendar.mdx#2025-04-08_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nexport { Calendar, type CalendarProps } from './calendar'\n```\n\n----------------------------------------\n\nTITLE: Including Tab Navigation Component\nDESCRIPTION: Demonstrates the usage of doc-gen:file JSON configuration for including tab navigation component files.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tab-navigation.mdx#2025-04-08_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": \"../packages/ui-react/src/components/tab-navigation/tab-navigation.tsx\",\n  \"codeblock\": { \"lang\": \"tsx\", \"meta\": \"title=\\\"components/tab-navigation/tab-navigation.tsx\\\"\" }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": \"../packages/ui-react/src/components/tab-navigation/tab-navigation.css.ts\",\n  \"codeblock\": { \"lang\": \"ts\", \"meta\": \"title=\\\"components/tab-navigation/tab-navigation.css.ts\\\"\" }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": \"../packages/ui-react/src/components/tab-navigation/index.ts\",\n  \"codeblock\": { \"lang\": \"ts\", \"meta\": \"title=\\\"components/tab-navigation/index.ts\\\"\" }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Tabs Component in React\nDESCRIPTION: This code shows how to import the Tabs component and its subcomponents in a React application, either from an internal source or from an npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tabs.mdx#2025-04-08_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '#/components/tabs'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from 'twistail-react/tabs'\n```\n\n----------------------------------------\n\nTITLE: Defining Bar Chart Component in React\nDESCRIPTION: This code defines the main Bar Chart component using React and Recharts. It includes various subcomponents and props for customization.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/bar-chart.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as React from 'react'\nimport { BarChart as RechartsBarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'\n\nimport { cn } from '@twistail/utils'\n\nimport * as styles from './bar-chart.css'\n\ntype BarChartProps = {\n  data: Array<{ name: string; [key: string]: number | string }>\n  keys: string[]\n  colors?: string[]\n  className?: string\n  title?: string\n  subtitle?: string\n  xAxisLabel?: string\n  yAxisLabel?: string\n  layout?: 'horizontal' | 'vertical'\n  yAxisDomain?: [number, number]\n  xAxisDomain?: [number, number]\n  innerRef?: React.ForwardedRef<HTMLDivElement>\n}\n\nconst BarChart = ({\n  data,\n  keys,\n  colors = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'],\n  className,\n  title,\n  subtitle,\n  xAxisLabel,\n  yAxisLabel,\n  layout = 'vertical',\n  yAxisDomain,\n  xAxisDomain,\n  innerRef,\n}: BarChartProps) => {\n  return (\n    <div ref={innerRef} className={cn(styles.root, className)}>\n      {title && <h3 className={styles.title}>{title}</h3>}\n      {subtitle && <p className={styles.subtitle}>{subtitle}</p>}\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <RechartsBarChart\n          data={data}\n          layout={layout}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis\n            dataKey=\"name\"\n            label={{ value: xAxisLabel, position: 'insideBottom', offset: -5 }}\n            domain={xAxisDomain}\n          />\n          <YAxis\n            label={{ value: yAxisLabel, angle: -90, position: 'insideLeft' }}\n            domain={yAxisDomain}\n          />\n          <Tooltip />\n          <Legend />\n          {keys.map((key, index) => (\n            <Bar key={key} dataKey={key} fill={colors[index % colors.length]} />\n          ))}\n        </RechartsBarChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nexport { BarChart }\nexport type { BarChartProps }\n```\n\n----------------------------------------\n\nTITLE: Area Chart Component Anatomy Placeholder\nDESCRIPTION: Placeholder for the Area Chart component structure, marked as work in progress.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/area-chart.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n// WIP\n```\n\n----------------------------------------\n\nTITLE: Component Anatomy Placeholder\nDESCRIPTION: Placeholder for component structure demonstration marked as work in progress\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/line-chart.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n// WIP\n```\n\n----------------------------------------\n\nTITLE: Configuring Storybook Meta Component for Documentation View in JSX\nDESCRIPTION: This code configures the Storybook Meta component to display the introduction page in documentation mode, hiding the canvas preview tab and toolbar for a cleaner documentation experience.\nSOURCE: https://github.com/riipandi/twistail/blob/main/packages/ui-react/src/stories/introduction.mdx#2025-04-08_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Meta } from '@storybook/blocks'\n\n<Meta\n  title=\"Introduction\"\n  parameters={{\n    viewMode: 'docs',\n    previewTabs: { canvas: { hidden: true } },\n    toolbar: { hidden: true }\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration for the documentation page, setting the title and full-width display property.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/install/react-router.mdx#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: React Router\nfull: false\n---\n```\n\n----------------------------------------\n\nTITLE: Styling Switch Component with CSS-in-JS\nDESCRIPTION: This code defines the styling for the Switch component using CSS-in-JS. It includes styles for the root element and the thumb.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/switch.mdx#2025-04-08_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { style } from '@vanilla-extract/css'\nimport { recipe } from '@vanilla-extract/recipes'\n\nexport const switchStyle = {\n  root: style([\n    {\n      all: 'unset',\n      width: '42px',\n      height: '25px',\n      backgroundColor: 'rgba(0, 0, 0, 0.2)',\n      borderRadius: '9999px',\n      position: 'relative',\n      boxShadow: '0 2px 10px rgba(0, 0, 0, 0.2)',\n      WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\n      ':focus': {\n        boxShadow: '0 0 0 2px black',\n      },\n      '&[data-state=\"checked\"]': {\n        backgroundColor: 'black',\n      },\n    },\n  ]),\n  thumb: style([\n    {\n      display: 'block',\n      width: '21px',\n      height: '21px',\n      backgroundColor: 'white',\n      borderRadius: '9999px',\n      boxShadow: '0 2px 2px rgba(0, 0, 0, 0.2)',\n      transition: 'transform 100ms',\n      transform: 'translateX(2px)',\n      willChange: 'transform',\n      '&[data-state=\"checked\"]': {\n        transform: 'translateX(19px)',\n      },\n    },\n  ]),\n}\n\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Contributors Page\nDESCRIPTION: This YAML frontmatter block defines metadata for a page listing project contributors. It sets the title, provides a description, and enables a full-width layout.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/contributors.mdx#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Contributors\ndescription: People who have contributed to this project.\nfull: true\n---\n```\n\n----------------------------------------\n\nTITLE: Implementing Toast Component in React\nDESCRIPTION: Defines the main Toast component using Radix UI primitives and custom styling. It includes various subcomponents for different parts of the toast notification.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/toast.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as React from 'react'\nimport * as ToastPrimitives from '@radix-ui/react-toast'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport { X } from 'lucide-react'\n\nimport { cn } from '#/utils'\nimport { styles } from './toast.css'\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(styles.viewport, className)}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(styles.base, {\n  variants: {\n    variant: {\n      default: styles.default,\n      destructive: styles.destructive,\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n})\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(styles.action, className)}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(styles.close, className)}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(styles.title, className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(styles.description, className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Text Component Styles with CSS-in-JS\nDESCRIPTION: This code defines the styles for the Text component using CSS-in-JS. It includes various utility classes for text styling.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/text.mdx#2025-04-08_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { tv } from 'tailwind-variants'\n\nexport const text = tv({\n  base: 'text-base',\n  variants: {\n    color: {\n      default: 'text-foreground',\n      muted: 'text-muted-foreground',\n      primary: 'text-primary',\n      secondary: 'text-secondary',\n      destructive: 'text-destructive',\n    },\n    size: {\n      xs: 'text-xs',\n      sm: 'text-sm',\n      base: 'text-base',\n      lg: 'text-lg',\n      xl: 'text-xl',\n      '2xl': 'text-2xl',\n      '3xl': 'text-3xl',\n      '4xl': 'text-4xl',\n      '5xl': 'text-5xl',\n      '6xl': 'text-6xl',\n      '7xl': 'text-7xl',\n      '8xl': 'text-8xl',\n      '9xl': 'text-9xl',\n    },\n    weight: {\n      thin: 'font-thin',\n      extralight: 'font-extralight',\n      light: 'font-light',\n      normal: 'font-normal',\n      medium: 'font-medium',\n      semibold: 'font-semibold',\n      bold: 'font-bold',\n      extrabold: 'font-extrabold',\n      black: 'font-black',\n    },\n  },\n  defaultVariants: {\n    color: 'default',\n    size: 'base',\n    weight: 'normal',\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Defining Calendar Styles in TypeScript\nDESCRIPTION: Defines the styles for the Calendar component using the 'tv' function from tailwind-variants. It includes various class definitions for different parts of the calendar.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/calendar.mdx#2025-04-08_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { tv } from 'tailwind-variants'\n\nexport const calendarStyles = tv({\n  base: 'p-3',\n  variants: {\n    outside: {\n      true: 'opacity-50',\n    },\n  },\n  slots: {\n    months: 'flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0',\n    month: 'space-y-4',\n    caption: 'flex justify-center pt-1 relative items-center',\n    captionLabel: 'text-sm font-medium',\n    nav: 'space-x-1 flex items-center',\n    navButton: 'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100',\n    navButtonPrevious: 'absolute left-1',\n    navButtonNext: 'absolute right-1',\n    table: 'w-full border-collapse space-y-1',\n    headRow: 'flex',\n    headCell: 'text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]',\n    row: 'flex w-full mt-2',\n    cell: 'h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20',\n    day: 'h-9 w-9 p-0 font-normal aria-selected:opacity-100',\n    daySelected:\n      'bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground',\n    dayToday: 'bg-accent text-accent-foreground',\n    dayOutside: 'opacity-50',\n    dayDisabled: 'text-muted-foreground opacity-50',\n    dayRangeMiddle: 'aria-selected:bg-accent aria-selected:text-accent-foreground',\n    dayHidden: 'invisible',\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Importing Button Component\nDESCRIPTION: Examples showing how to import the Button component either from internal components or npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/button.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Button } from '#/components/button'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Button } from 'twistail-react/button'\n```\n\n----------------------------------------\n\nTITLE: Importing Split Pane Components in React\nDESCRIPTION: These import statements show how to import the Split, SplitPane, and SplitPanel components from either an internal source or an npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/split-pane.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Split, SplitPane, SplitPanel } from '#/components/split-pane'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Split, SplitPane, SplitPanel } from 'twistail-react/split-pane'\n```\n\n----------------------------------------\n\nTITLE: Importing Line Chart Component\nDESCRIPTION: Examples showing how to import the line chart component either from internal source or NPM package\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/line-chart.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from '#/components/line-chart'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from 'twistail-react/line-chart'\n```\n\n----------------------------------------\n\nTITLE: Importing Breadcrumb Components\nDESCRIPTION: Example showing how to import breadcrumb components either through internal copy-paste method or from npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/breadcrumb.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n} from '#/components/breadcrumb'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n} from 'twistail-react/breadcrumb'\n```\n\n----------------------------------------\n\nTITLE: Styling Tabs Component with CSS-in-JS\nDESCRIPTION: This code defines the styles for the Tabs component using CSS-in-JS. It includes styles for the tabs list, trigger, and content.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tabs.mdx#2025-04-08_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { style } from '@vanilla-extract/css'\nimport { recipe } from '@vanilla-extract/recipes'\n\nimport { twsx } from '../../lib/helpers'\n\nexport const tabsStyles = {\n  tabsList: style([\n    twsx(\n      'inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground'\n    ),\n  ]),\n  tabsTrigger: style([\n    twsx(\n      'inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm'\n    ),\n  ]),\n  tabsContent: style([\n    twsx(\n      'mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2'\n    ),\n  ]),\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Avatar Component\nDESCRIPTION: Examples showing how to import the Avatar component either through internal copy-paste or NPM package\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/avatar.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Avatar, AvatarImage, AvatarFallback, AvatarGroup } from '#/components/avatar'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Avatar, AvatarImage, AvatarFallback, AvatarGroup } from 'twistail-react/avatar'\n```\n\n----------------------------------------\n\nTITLE: Importing Calendar Component in React\nDESCRIPTION: Shows how to import the Calendar component from either an internal source or an npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/calendar.mdx#2025-04-08_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Calendar } from '#/components/calendar'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Calendar } from 'twistail-react/calendar'\n```\n\n----------------------------------------\n\nTITLE: Importing Slider Component in React\nDESCRIPTION: This snippet demonstrates how to import the Slider component in a React application, showing both internal and npm import methods.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/slider.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Slider } from '#/components/slider'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Slider } from 'twistail-react/slider'\n```\n\n----------------------------------------\n\nTITLE: Importing Radio Group Component\nDESCRIPTION: Examples showing how to import the RadioGroup components either from internal files or NPM package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/radio-group.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { RadioGroup, RadioGroupItem } from '#/components/radio-group'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { RadioGroup, RadioGroupItem } from 'twistail-react/radio-group'\n```\n\n----------------------------------------\n\nTITLE: Importing Listbox Components from NPM Package in React\nDESCRIPTION: Import statement for using Listbox components when installed via the Twistail npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/listbox.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Listbox,\n  ListboxContent,\n  ListboxGroup,\n  ListboxGroupLabel,\n  ListboxItem,\n  ListboxPortal,\n  ListboxSeparator,\n  ListboxTrigger,\n  ListboxValue,\n} from 'twistail-react/listbox'\n```\n\n----------------------------------------\n\nTITLE: Importing Multi Select Component\nDESCRIPTION: Examples showing how to import the Multi Select component either from internal source or npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/multi-select.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { MultiSelect } from '#/components/multi-select'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { MultiSelect } from 'twistail-react/multi-select'\n```\n\n----------------------------------------\n\nTITLE: Styling Bar Chart Component with CSS-in-JS\nDESCRIPTION: This code defines the styles for the Bar Chart component using CSS-in-JS. It includes styles for the root container, title, and subtitle.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/bar-chart.mdx#2025-04-08_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nimport { style } from '@vanilla-extract/css'\n\nexport const root = style({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: '1rem',\n})\n\nexport const title = style({\n  fontSize: '1.5rem',\n  fontWeight: 'bold',\n  marginBottom: '0.5rem',\n})\n\nexport const subtitle = style({\n  fontSize: '1rem',\n  color: '#666',\n  marginBottom: '1rem',\n})\n```\n\n----------------------------------------\n\nTITLE: Importing Sidebar Components in React Application\nDESCRIPTION: Code snippet showing how to import all Sidebar component parts when using them in a React application. Two options are provided: one for internal copy-paste usage and another for npm package usage.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/sidebar.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n} from '#/components/sidebar'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n} from 'twistail-react/sidebar'\n```\n\n----------------------------------------\n\nTITLE: Importing Progress Circle Component\nDESCRIPTION: Examples showing how to import the Progress Circle component either through internal copy-paste or NPM package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/progress-circle.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ProgressCircle } from '#/components/progress-circle'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ProgressCircle } from 'twistail-react/progress-circle'\n```\n\n----------------------------------------\n\nTITLE: Importing Label Component from NPM Package\nDESCRIPTION: Code example showing how to import the Label component when using the npm package installation.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/label.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Label } from 'twistail-react/label'\n```\n\n----------------------------------------\n\nTITLE: Importing Menubar Components from Internal Source\nDESCRIPTION: Example of importing all Menubar-related components when using the internal copy-paste approach.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/menubar.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n} from '#/components/menubar'\n```\n\n----------------------------------------\n\nTITLE: Importing Toggle Components\nDESCRIPTION: Shows how to import Toggle components using either internal imports (copy-paste method) or npm package imports.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/toggle.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Toggle, ToggleGroup, ToggleGroupItem } from '#/components/toggle'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Toggle, ToggleGroup, ToggleGroupItem } from 'twistail-react/toggle'\n```\n\n----------------------------------------\n\nTITLE: Styling Toast Component with CSS-in-JS\nDESCRIPTION: Defines styles for the Toast component using CSS-in-JS. It includes styles for different variants and states of the toast notification.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/toast.mdx#2025-04-08_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { style, styleVariants } from '@vanilla-extract/css'\nimport { vars } from '#/styles/vars.css'\n\nconst base = style({\n  '::before': {\n    content: '',\n    clipPath: 'polygon(0 45%, 17% 62%, 17% 100%, 0 100%)',\n    backgroundColor: vars.color.zinc[200],\n    position: 'absolute',\n    width: '6px',\n    height: '100%',\n    left: '0',\n    top: '0',\n  },\n  '::after': {\n    content: '',\n    position: 'absolute',\n    width: '6px',\n    height: '100%',\n    left: '0',\n    top: '0',\n    backgroundColor: vars.color.zinc[200],\n  },\n})\n\nexport const styles = {\n  base,\n  viewport: style({\n    position: 'fixed',\n    top: '0',\n    right: '0',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '25px',\n    gap: '10px',\n    width: '390px',\n    maxWidth: '100vw',\n    margin: '0',\n    listStyle: 'none',\n    zIndex: '9999',\n    outline: 'none',\n  }),\n  default: style({\n    backgroundColor: vars.color.background,\n    borderRadius: vars.radii.md,\n    boxShadow: vars.shadow.md,\n    padding: '15px',\n    display: 'grid',\n    gridTemplateAreas: '\"title action\" \"description action\"',\n    gridTemplateColumns: 'auto max-content',\n    columnGap: '15px',\n    alignItems: 'center',\n    border: '1px solid',\n    borderColor: vars.color.border,\n    transition: 'all 0.2s ease',\n    selectors: {\n      '&[data-state=\"open\"]': {\n        animation: 'slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1)',\n      },\n      '&[data-state=\"closed\"]': {\n        animation: 'hide 100ms ease-in',\n      },\n      '&[data-swipe=\"move\"]': {\n        transform: 'translateX(var(--radix-toast-swipe-move-x))',\n      },\n      '&[data-swipe=\"cancel\"]': {\n        transform: 'translateX(0)',\n        transition: 'transform 200ms ease-out',\n      },\n      '&[data-swipe=\"end\"]': {\n        animation: 'swipeOut 100ms ease-out',\n      },\n    },\n  }),\n  destructive: style({\n    '::before': {\n      backgroundColor: vars.color.red[500],\n    },\n    '::after': {\n      backgroundColor: vars.color.red[500],\n    },\n  }),\n  title: style({\n    gridArea: 'title',\n    marginBottom: '5px',\n    fontWeight: '500',\n    color: vars.color.foreground,\n    fontSize: '14px',\n  }),\n  description: style({\n    gridArea: 'description',\n    margin: '0',\n    color: vars.color.foreground,\n    fontSize: '13px',\n    lineHeight: '1.3',\n  }),\n  action: style({\n    gridArea: 'action',\n  }),\n  close: style({\n    position: 'absolute',\n    top: '10px',\n    right: '10px',\n    width: '20px',\n    height: '20px',\n    borderRadius: '9999px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: vars.color.foreground,\n    transition: 'all 0.2s ease',\n    opacity: '0.5',\n    ':hover': {\n      opacity: '1',\n    },\n  }),\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Spark Chart Component\nDESCRIPTION: Examples showing how to import the Spark Chart component either through internal copy-paste method or from npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/spark-chart.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from '#/components/spark-chart'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from 'twistail-react/spark-chart'\n```\n\n----------------------------------------\n\nTITLE: Importing Area Chart Component in React Applications\nDESCRIPTION: Import statements for the Area Chart component using either internal imports or npm package imports.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/area-chart.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from '#/components/area-chart'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from 'twistail-react/area-chart'\n```\n\n----------------------------------------\n\nTITLE: Importing Popover Components in React (NPM Method)\nDESCRIPTION: Example of importing Popover components when installing the package via NPM in a React application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/popover.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Popover,\n  PopoverAnchor,\n  PopoverClose,\n  PopoverContent,\n  PopoverTrigger,\n  PopoverPortal\n} from 'twistail-react/popover'\n```\n\n----------------------------------------\n\nTITLE: Importing Alert Dialog Components - NPM Method\nDESCRIPTION: Import statement for using the alert dialog components when installing via npm package\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/alert-dialog.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogDivider,\n} from 'twistail-react/alert-dialog'\n```\n\n----------------------------------------\n\nTITLE: Importing Radio Card Group Components\nDESCRIPTION: Example showing how to import the Radio Card Group components either through internal copy-paste or NPM package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/radio-card-group.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  RadioCardGroup,\n  RadioCardIndicator,\n  RadioCardItem\n} from '#/components/radio-card-group'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  RadioCardGroup,\n  RadioCardIndicator,\n  RadioCardItem\n} from 'twistail-react/radio-card-group'\n```\n\n----------------------------------------\n\nTITLE: Importing Kbd Component in React Applications\nDESCRIPTION: Shows two different ways to import the Kbd component: from an internal path for copy-paste approach or from the npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/kbd.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Kbd } from '#/components/kbd'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Kbd } from 'twistail-react/kbd'\n```\n\n----------------------------------------\n\nTITLE: Importing Dropdown Menu Components in React\nDESCRIPTION: Code example showing how to import all the Dropdown Menu related components from either internal (copy-paste) source or an npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/dropdown-menu.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuSubMenuTrigger,\n  DropdownMenuSubMenu,\n  DropdownMenuSubMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuIconWrapper,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuPortal,\n} from '#/components/dropdown-menu'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuSubMenuTrigger,\n  DropdownMenuSubMenu,\n  DropdownMenuSubMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuIconWrapper,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuPortal,\n} from 'twistail-react/dropdown-menu'\n```\n\n----------------------------------------\n\nTITLE: Importing Checkbox Component\nDESCRIPTION: Examples showing how to import the Checkbox component either from internal files or npm package\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/checkbox.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Checkbox } from '#/components/checkbox'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Checkbox } from 'twistail-react/checkbox'\n```\n\n----------------------------------------\n\nTITLE: Importing AspectRatio Component - NPM\nDESCRIPTION: Example of importing the AspectRatio component when installing from NPM.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/aspect-ratio.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { AspectRatio } from 'twistail-react/aspect-ratio'\n```\n\n----------------------------------------\n\nTITLE: Importing Table Components from Internal Source\nDESCRIPTION: Example showing how to import Table components when using the copy-paste method from internal source files.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/table.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFoot,\n  TableHead,\n  TableHeaderCell,\n  TableRoot,\n  TableRow,\n} from '#/components/table'\n```\n\n----------------------------------------\n\nTITLE: Importing Heading Component from Local Files\nDESCRIPTION: Example of importing the Heading component from local project files when using the copy-paste installation method.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/heading.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Heading } from '#/components/heading'\n```\n\n----------------------------------------\n\nTITLE: Importing Input Component - NPM\nDESCRIPTION: Example of importing the Input component when installed via NPM package\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/input.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Input } from 'twistail-react/input'\n```\n\n----------------------------------------\n\nTITLE: Importing Skeleton Component from Internal Files\nDESCRIPTION: Example of importing the Skeleton component from internal project files when using the copy-paste installation method.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/skeleton.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Skeleton } from '#/components/skeleton'\n```\n\n----------------------------------------\n\nTITLE: Importing Pagination components in React (npm)\nDESCRIPTION: Example of importing Pagination components when using the npm package installation.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/pagination.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from 'twistail-react/pagination'\n```\n\n----------------------------------------\n\nTITLE: Importing Callout Component - Internal\nDESCRIPTION: Example of importing the Callout component when using internal copy-paste implementation.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/callout.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Callout } from '#/components/callout'\n```\n\n----------------------------------------\n\nTITLE: Importing Divider Component from Internal Source in React\nDESCRIPTION: Example of importing the Divider component when using copy-paste implementation within a project.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/divider.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Divider } from '#/components/divider'\n```\n\n----------------------------------------\n\nTITLE: Importing Drawer components with internal path\nDESCRIPTION: Code snippet showing how to import the Drawer components when using the copy-paste installation approach with internal paths.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/drawer.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerClose,\n  DrawerContent,\n  DrawerDescription,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerPortal,\n  DrawerTitle,\n  DrawerTrigger,\n} from '#/components/drawer'\n```\n\n----------------------------------------\n\nTITLE: Importing AspectRatio Component - Internal\nDESCRIPTION: Example of importing the AspectRatio component when using internal copy-paste method.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/aspect-ratio.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { AspectRatio } from '#/components/aspect-ratio'\n```\n\n----------------------------------------\n\nTITLE: Exporting Switch Component in React\nDESCRIPTION: This code exports the Switch component, making it available for use in other parts of the application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/switch.mdx#2025-04-08_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nexport { Switch } from './switch'\n\n```\n\n----------------------------------------\n\nTITLE: Importing Bar List Component\nDESCRIPTION: Examples showing how to import the BarList component either from internal files or npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/bar-list.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { BarList } from '#/components/bar-list'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { BarList } from 'twistail-react/bar-list'\n```\n\n----------------------------------------\n\nTITLE: Importing Command Components\nDESCRIPTION: Example showing how to import Command components either through internal copy-paste or from npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/command.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n} from '#/components/command'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n} from 'twistail-react/command'\n```\n\n----------------------------------------\n\nTITLE: Importing Tab Navigation Component\nDESCRIPTION: Shows how to import the TabNavigation and TabNavigationLink components either through internal copy-paste or NPM package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tab-navigation.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { TabNavigation, TabNavigationLink } from '#/components/tab-navigation'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { TabNavigation, TabNavigationLink } from 'twistail-react/tab-navigation'\n```\n\n----------------------------------------\n\nTITLE: Importing Context Menu Components (Internal Copy-Paste)\nDESCRIPTION: Import statement for using context menu components when they are copied directly into the project.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/context-menu.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuIconWrapper,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSubMenu,\n  ContextMenuSubMenuContent,\n  ContextMenuSubMenuTrigger,\n  ContextMenuRadioGroup,\n} from '#/components/context-menu'\n```\n\n----------------------------------------\n\nTITLE: Importing Listbox Components with Internal Copy-Paste Method in React\nDESCRIPTION: Import statement for using Listbox components when they are copied directly into your project structure.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/listbox.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Listbox,\n  ListboxContent,\n  ListboxGroup,\n  ListboxGroupLabel,\n  ListboxItem,\n  ListboxPortal,\n  ListboxSeparator,\n  ListboxTrigger,\n  ListboxValue,\n} from '#/components/listbox'\n```\n\n----------------------------------------\n\nTITLE: Importing Divider Component from NPM Package in React\nDESCRIPTION: Example of importing the Divider component when installed via NPM package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/divider.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Divider } from 'twistail-react/divider'\n```\n\n----------------------------------------\n\nTITLE: Documentation Reference Prompt for AI Implementation\nDESCRIPTION: Example of how to direct AI assistants to Twistail's documentation when requesting implementation help\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/llms.mdx#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n\"Please refer to https://twistail.com/llms-full.txt for the Twistail UI documentation and help me implement a Dropdown Menu component.\"\n```\n\n----------------------------------------\n\nTITLE: Importing Drawer components from npm package\nDESCRIPTION: Code snippet showing how to import the Drawer components when installed via npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/drawer.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerClose,\n  DrawerContent,\n  DrawerDescription,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerPortal,\n  DrawerTitle,\n  DrawerTrigger,\n} from 'twistail-react/drawer'\n```\n\n----------------------------------------\n\nTITLE: Installing Context Menu Dependencies with NPM\nDESCRIPTION: Command to install the required Radix UI dependencies for the context menu component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/context-menu.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Skeleton Component from NPM Package\nDESCRIPTION: Example of importing the Skeleton component from the Twistail npm package when installing via npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/skeleton.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Skeleton } from 'twistail-react/skeleton'\n```\n\n----------------------------------------\n\nTITLE: Importing Callout Component - NPM\nDESCRIPTION: Example of importing the Callout component when installed via NPM package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/callout.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Callout } from 'twistail-react/callout'\n```\n\n----------------------------------------\n\nTITLE: Importing Badge Component - NPM\nDESCRIPTION: Example of importing the Badge component when installed via NPM package\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/badge.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Badge } from 'twistail-react/badge'\n```\n\n----------------------------------------\n\nTITLE: Importing Context Menu Components (NPM Package)\nDESCRIPTION: Import statement for using context menu components when installed from the NPM package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/context-menu.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuIconWrapper,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSubMenu,\n  ContextMenuSubMenuContent,\n  ContextMenuSubMenuTrigger,\n  ContextMenuRadioGroup,\n} from 'twistail-react/context-menu'\n```\n\n----------------------------------------\n\nTITLE: Installing Progress Bar Dependencies\nDESCRIPTION: Command to install the required Radix UI dependency for the Progress Bar component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/progress-bar.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Dialog Dependencies\nDESCRIPTION: Command to install required Radix UI dependencies for the Dialog component\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/dialog.mdx#2025-04-08_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Navigation Menu in Node.js\nDESCRIPTION: Command to install the required radix-ui dependency for the Navigation Menu component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/navigation-menu.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Package Dependencies\nDESCRIPTION: Command to install the required Radix UI dependency for the Callout component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/callout.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Package Dependencies\nDESCRIPTION: Command to install the required Radix UI dependency for the breadcrumb component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/breadcrumb.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Description List Dependencies\nDESCRIPTION: Command to install the required dependencies for the Description List component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/description-list.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Radio Card Group\nDESCRIPTION: Command to install the required Radix UI dependency for the radio card group component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/radio-card-group.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Progress Circle Dependencies\nDESCRIPTION: Command to install required Radix UI dependencies for the Progress Circle component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/progress-circle.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Package Manager\nDESCRIPTION: Command to install the required Radix UI dependency for the alert dialog component\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/alert-dialog.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Pagination components in React (internal)\nDESCRIPTION: Example of importing Pagination components when using the internal copy-paste approach.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/pagination.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from '#/components/pagination'\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependencies for Dropdown Menu in TypeScript\nDESCRIPTION: Commands to install the required Radix UI dependencies for the Dropdown Menu component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/dropdown-menu.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with NPM\nDESCRIPTION: Command to install the required Radix UI dependency for the radio group component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/radio-group.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Split Pane Component in React\nDESCRIPTION: This command installs the necessary dependencies for the Split Pane component, including Radix UI, Lucide React, and Allotment.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/split-pane.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui lucide-react allotment\n```\n\n----------------------------------------\n\nTITLE: Installing Table Component Dependencies with NPM\nDESCRIPTION: Command to install the required Radix UI dependency for the Table component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/table.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependencies\nDESCRIPTION: Command to install the required Radix UI dependencies for the form component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/form.mdx#2025-04-08_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependencies\nDESCRIPTION: Command to install required Radix UI dependencies for the Combobox component\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/combobox.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependencies\nDESCRIPTION: Command to install the required Radix UI dependencies for the collapsible component\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/collapsible.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependencies for Sidebar Component\nDESCRIPTION: Command to install Radix UI, which is a required dependency for the Sidebar component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/sidebar.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Area Chart Component in React\nDESCRIPTION: Command to install radix-ui dependencies required for the Area Chart component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/area-chart.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Popover Dependencies with NPM\nDESCRIPTION: Command to install the required Radix UI dependency for the Popover component using NPM package manager.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/popover.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependencies for Listbox Component in React\nDESCRIPTION: Command to install the Radix UI dependency required for implementing the Listbox component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/listbox.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Documenting Fix for Missing Export in Twistail React Component\nDESCRIPTION: This snippet documents a fix for a missing export from the Form component in the twistail-react package. It's part of the release notes for version 0.2.1.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/changelog/0.2.1.mdx#2025-04-08_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n- Fix missing export form Form component in `twistail-react`\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with NPM\nDESCRIPTION: Command to install the required Radix UI dependency for the hover card component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/hover-card.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Form Component Import Statements (NPM)\nDESCRIPTION: Import statements for using form components when installing from NPM package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/form.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Form,\n  FormField,\n  FormLabel,\n  FormControl,\n  FormMessage,\n  FormValidityState,\n  FormSubmit\n} from 'twistail-react/form'\n```\n\n----------------------------------------\n\nTITLE: Installing Card Component Dependencies\nDESCRIPTION: Installs the required dependencies for the Card component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/card.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Donut Chart Dependencies using npm\nDESCRIPTION: Command to install the required Radix UI dependency for the donut chart component using npm package manager.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/donut-chart.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Textarea Component\nDESCRIPTION: Command to install required Radix UI dependencies for the Textarea component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/textarea.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with NPM\nDESCRIPTION: Command to install the required radix-ui dependency for the Spark Chart component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/spark-chart.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry in Markdown\nDESCRIPTION: Markdown formatted changelog entry documenting the addition of info variant and default neutral variant to Badge component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/changelog/0.1.2.mdx#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: v0.1.2 (2025/03/22)\n---\n\n- Add `info` variant to [Badge](/docs/components/badge) component.\n- Set default variant to [Badge](/docs/components/badge) component to `neutral`.\n\n**Contributors:**\n[@riipandi](https://github.com/riipandi)\n```\n\n----------------------------------------\n\nTITLE: Installing Toggle Component Dependencies with npm\nDESCRIPTION: Command to install the required Radix UI dependency for the Toggle component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/toggle.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Dialog Components\nDESCRIPTION: Shows two ways to import Dialog components: via internal copy-paste method or from npm package\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/dialog.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n  DialogDivider,\n} from '#/components/dialog'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n  DialogDivider,\n} from 'twistail-react/dialog'\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Category Bar Component in React\nDESCRIPTION: This snippet shows how to install the required dependencies for the Category Bar component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/category-bar.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Badge Dependencies\nDESCRIPTION: Command to install the required Radix UI dependency for the Badge component\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/badge.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI dependencies for Drawer component\nDESCRIPTION: Command to install the required Radix UI dependencies for the Drawer component via npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/drawer.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Running Twistail CLI with npx\nDESCRIPTION: This command demonstrates how to execute the latest version of Twistail CLI using npx, which allows running npm packages without installing them globally.\nSOURCE: https://github.com/riipandi/twistail/blob/main/packages/cli/README.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx twistail@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Toast Component in React\nDESCRIPTION: Installs the required Radix UI dependency for the Toast component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/toast.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with NPM\nDESCRIPTION: Command to install required Radix UI dependencies for the line chart component\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/line-chart.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Pagination dependencies with npm\nDESCRIPTION: Command to install the required dependencies for the Pagination component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/pagination.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Bar Chart Dependencies with npm\nDESCRIPTION: This command installs the required dependencies for the Bar Chart component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/bar-chart.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependency for Label Component\nDESCRIPTION: Command to install the required Radix UI dependency for the Label component via npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/label.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependencies for Kbd Component\nDESCRIPTION: Command to install the required Radix UI dependency for the Kbd component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/kbd.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: React Warning Callout Component\nDESCRIPTION: JSX markup for displaying a warning callout component with a work in progress message using the Callout component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/install/react-router.mdx#2025-04-08_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Callout type='warn' title='Attention'>\n  This documentation is still in progress. Please check back later.\n</Callout>\n```\n\n----------------------------------------\n\nTITLE: Installing Text Component Dependencies with npm\nDESCRIPTION: This command installs the required dependencies for the Text component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/text.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Menubar Dependencies with npm\nDESCRIPTION: Command to install the required Radix UI dependency for the Menubar component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/menubar.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Defining Combo Chart Component Structure in React\nDESCRIPTION: This code snippet represents the anatomy of the Combo Chart component. It's currently a work in progress and doesn't contain actual implementation details.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/combo-chart.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n// WIP\n```\n\n----------------------------------------\n\nTITLE: Importing Menubar Components from npm Package\nDESCRIPTION: Example of importing all Menubar-related components when using the package from npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/menubar.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n} from 'twistail-react/menubar'\n```\n\n----------------------------------------\n\nTITLE: Importing Combobox Component\nDESCRIPTION: Examples showing how to import the Combobox component either through internal copy-paste method or from npm package\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/combobox.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Combobox } from '#/components/combobox'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Combobox } from 'twistail-react/combobox'\n```\n\n----------------------------------------\n\nTITLE: Importing Blockquote Component\nDESCRIPTION: Examples of how to import the Blockquote component either from internal components or NPM package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/blockquote.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Blockquote, BlockquoteAuthor } from '#/components/blockquote'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Blockquote, BlockquoteAuthor } from 'twistail-react/blockquote'\n```\n\n----------------------------------------\n\nTITLE: Installing Package Dependencies\nDESCRIPTION: Command to install required Radix UI dependencies for the checkbox component\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/checkbox.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Textarea Component\nDESCRIPTION: Examples showing how to import the Textarea component either through internal copy-paste or npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/textarea.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Textarea, useTextArea } from '#/components/textarea'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Textarea, useTextArea } from 'twistail-react/textarea'\n```\n\n----------------------------------------\n\nTITLE: Importing Input PIN components from npm package\nDESCRIPTION: Shows how to import Input PIN components when installing from npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/input-pin.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  InputPin,\n  InputPinGroup,\n  InputPinSlot,\n  InputPinSeparator\n} from 'twistail-react/input-pin'\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Tracker Component\nDESCRIPTION: Command to install the required dependencies for the Tracker component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tracker.mdx#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Input PIN dependencies with npm\nDESCRIPTION: Installs the required dependencies for the Input PIN component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/input-pin.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Command Dependencies\nDESCRIPTION: Installing required dependencies radix-ui and cmdk using npm package manager.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/command.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui cmdk\n```\n\n----------------------------------------\n\nTITLE: Installing Heading Component Dependencies with npm\nDESCRIPTION: Command to install required dependencies for the Heading component using npm package manager.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/heading.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Switch Component in React\nDESCRIPTION: This code demonstrates how to import the Switch component for use in a React application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/switch.mdx#2025-04-08_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Switch } from '#/components/switch'\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependency for Accordion Component\nDESCRIPTION: Command to install the required Radix UI dependency for the Accordion component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/accordion.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Adding Toaster Component to Layout in React\nDESCRIPTION: Demonstrates how to add the Toaster component to a layout for displaying toast notifications.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/toast.mdx#2025-04-08_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Toaster } from '#/components/toast'\n\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"en\">\n      <body>\n        {children}\n        <Toaster />\n      </body>\n    </html>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Alert Dialog Components - Internal Method\nDESCRIPTION: Import statement for using the alert dialog components when using internal copy-paste method\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/alert-dialog.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogDivider,\n} from '#/components/alert-dialog'\n```\n\n----------------------------------------\n\nTITLE: Importing Category Bar Component in React\nDESCRIPTION: This snippet demonstrates how to import the Category Bar component in a React application, showing both internal and npm import methods.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/category-bar.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from '#/components/category-bar'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from 'twistail-react/category-bar'\n```\n\n----------------------------------------\n\nTITLE: Displaying Warning Callout in Markdown\nDESCRIPTION: This snippet demonstrates how to create a warning callout in Markdown, likely using a custom component. It informs users that the theming documentation is not yet available.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/theming.mdx#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<Callout type='warn' title='Work in Progress'>\n  This documentation not available yet. Please check back later.\n</Callout>\n```\n\n----------------------------------------\n\nTITLE: Configuring Robots.txt for Web Crawlers\nDESCRIPTION: This robots.txt file sets permissions for all user agents, allows access to the entire website, and specifies the location of the sitemap. It ensures proper indexing by search engines and other web crawlers.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/public/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-Agent: *\nAllow: /\nSitemap: https://twistail.com/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Importing Tooltip Components\nDESCRIPTION: Example showing how to import tooltip components either through internal copy-paste or npm package\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tooltip.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n  TooltipPortal\n} from '#/components/tooltip'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n  TooltipPortal\n} from 'twistail-react/tooltip'\n```\n\n----------------------------------------\n\nTITLE: Installing Combo Chart Dependencies with npm\nDESCRIPTION: This command installs the required dependencies for the Combo Chart component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/combo-chart.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Bar Chart Component in React\nDESCRIPTION: These code snippets show how to import the Bar Chart component in a React application, either from an internal source or from an npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/bar-chart.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from '#/components/bar-chart'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from 'twistail-react/bar-chart'\n```\n\n----------------------------------------\n\nTITLE: Loading Theme CSS Styles for Twistail UI\nDESCRIPTION: This JSON configuration is used to load the theme-specific CSS styles for Twistail UI components. It defines the file path and language for the code block.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/install/index.mdx#2025-04-08_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": \"../packages/ui-react/src/styles/theme.css\",\n  \"codeblock\": { \"lang\": \"css\", \"meta\": \"title=\\\"styles/theme.css\\\"\" }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Heading Component from npm Package\nDESCRIPTION: Example of importing the Heading component when installed via npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/heading.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Heading } from 'twistail-react/heading'\n```\n\n----------------------------------------\n\nTITLE: Installing Package Dependencies\nDESCRIPTION: Command to install required Radix UI dependency for the input component\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/input.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing ScrollArea Component\nDESCRIPTION: Shows two different ways to import the ScrollArea component - either through internal copy-paste or from NPM package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/scroll-area.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ScrollArea, ScrollBar } from '#/components/scroll-area'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ScrollArea, ScrollBar } from 'twistail-react/scroll-area'\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependencies for Slider Component in React\nDESCRIPTION: This snippet shows how to install the necessary Radix UI dependencies for the Slider component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/slider.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Label Component from Internal Source\nDESCRIPTION: Code example showing how to import the Label component when using copy-paste approach with internal components.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/label.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Label } from '#/components/label'\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Switch Component in React\nDESCRIPTION: This code snippet shows how to install the required dependencies for the Switch component using npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/switch.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Input Component - Internal\nDESCRIPTION: Example of importing the Input component when using copy-paste installation method\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/input.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Input } from '#/components/input'\n```\n\n----------------------------------------\n\nTITLE: Installing Select Dependencies with NPM\nDESCRIPTION: Command to install Radix UI dependencies required for the select component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/select.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependency for Skeleton Component\nDESCRIPTION: Command to install the required Radix UI dependency for the Skeleton component using npm package manager.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/skeleton.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Popover Components in React (Internal Copy-Paste Method)\nDESCRIPTION: Example of importing Popover components when using the internal copy-paste method in a React application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/popover.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Popover,\n  PopoverAnchor,\n  PopoverClose,\n  PopoverContent,\n  PopoverTrigger,\n  PopoverPortal\n} from '#/components/popover'\n```\n\n----------------------------------------\n\nTITLE: Importing Combo Chart Component in React\nDESCRIPTION: These code snippets show how to import the Combo Chart component in a React application, either from an internal source or from an npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/combo-chart.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from '#/components/combo-chart'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from 'twistail-react/combo-chart'\n```\n\n----------------------------------------\n\nTITLE: Importing Description List Components\nDESCRIPTION: Shows how to import the Description List components from either internal files or npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/description-list.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  DescriptionList,\n  DescriptionTerm,\n  DescriptionDetails,\n} from '#/components/description-list'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  DescriptionList,\n  DescriptionTerm,\n  DescriptionDetails,\n} from 'twistail-react/description-list'\n```\n\n----------------------------------------\n\nTITLE: Anatomy of Category Bar Component in React\nDESCRIPTION: This snippet is a placeholder for the anatomy of the Category Bar component, which is currently work in progress.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/category-bar.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n// WIP\n```\n\n----------------------------------------\n\nTITLE: Importing Card Component for Usage\nDESCRIPTION: Shows how to import the Card component and its subcomponents for use in a React application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/card.mdx#2025-04-08_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  CardFooter,\n  CardDivider\n} from '#/components/card'\n```\n\n----------------------------------------\n\nTITLE: Exporting Tabs Component\nDESCRIPTION: This code exports the Tabs component and its subcomponents for use in other parts of the application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tabs.mdx#2025-04-08_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nexport { Tabs, TabsContent, TabsList, TabsTrigger } from './tabs'\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with NPM\nDESCRIPTION: Command to install the required Radix UI dependency for the Multi Select component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/multi-select.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Collapsible Components\nDESCRIPTION: Shows how to import the collapsible components either through internal copy-paste or npm package\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/collapsible.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Collapsible,\n  CollapsibleTrigger,\n  CollapsibleContent\n} from '#/components/collapsible'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Collapsible,\n  CollapsibleTrigger,\n  CollapsibleContent\n} from 'twistail-react/collapsible'\n```\n\n----------------------------------------\n\nTITLE: Importing Navigation Menu Components in React\nDESCRIPTION: Example of importing Navigation Menu components from an internal source or npm package in a React application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/navigation-menu.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n} from '#/components/navigation-menu'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n} from 'twistail-react/navigation-menu'\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with NPM\nDESCRIPTION: Command to install the required Radix UI dependency for the ScrollArea component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/scroll-area.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Progress Bar Component\nDESCRIPTION: Examples of how to import the Progress Bar component, both for internal use and when installed via npm.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/progress-bar.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ProgressBar } from '#/components/progress-bar'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ProgressBar } from 'twistail-react/progress-bar'\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependency\nDESCRIPTION: Command to install the required Radix UI dependency for the Aspect Ratio component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/aspect-ratio.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Donut Chart Anatomy Template\nDESCRIPTION: A placeholder for the component's structure and composition, currently marked as work in progress.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/donut-chart.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n// WIP\n```\n\n----------------------------------------\n\nTITLE: Importing Accordion Components (Internal)\nDESCRIPTION: Example showing how to import Accordion components when using the internal copy-paste approach.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/accordion.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger\n} from '#/components/accordion'\n```\n\n----------------------------------------\n\nTITLE: Importing Hover Card Components\nDESCRIPTION: Example showing how to import the hover card components either through internal copy-paste or npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/hover-card.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  HoverCard,\n  HoverCardTrigger,\n  HoverCardContent,\n  HoverCardPortal\n} from '#/components/hover-card'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  HoverCard,\n  HoverCardTrigger,\n  HoverCardContent,\n  HoverCardPortal\n} from 'twistail-react/hover-card'\n```\n\n----------------------------------------\n\nTITLE: Exporting Toast Component and Utilities\nDESCRIPTION: Exports the Toast component and related utilities for easy import and use in other parts of the application.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/toast.mdx#2025-04-08_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nexport * from './toast'\nexport { toast, useToast } from './use-toast'\n\nexport type { ToastActionElement, ToastProps } from './toast'\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependencies\nDESCRIPTION: Command to install the required Radix UI dependency for the button component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/button.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Twistail Utils with Package Managers\nDESCRIPTION: Commands for installing the twistail-utils package using npm, pnpm, or yarn. The package is available on NPM and is ESM-only compatible.\nSOURCE: https://github.com/riipandi/twistail/blob/main/packages/utils/README.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Install with npm\nnpm install twistail-utils\n\n# Install with pnpm\npnpm add twistail-utils\n\n# Install with yarn\nyarn add twistail-utils\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with NPM\nDESCRIPTION: Command to install the required Radix UI dependency for the tab navigation component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tab-navigation.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Table Components from NPM Package\nDESCRIPTION: Example showing how to import Table components when using the npm package installation method.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/table.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFoot,\n  TableHead,\n  TableHeaderCell,\n  TableRoot,\n  TableRow,\n} from 'twistail-react/table'\n```\n\n----------------------------------------\n\nTITLE: Rendering Warning Callout in JSX\nDESCRIPTION: This code snippet renders a warning callout component to inform users that the documentation is still in progress. It uses JSX syntax, likely within a React or similar framework.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/install/tanstack-start.mdx#2025-04-08_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Callout type='warn' title='Attention'>\n  This documentation is still in progress. Please check back later.\n</Callout>\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Twistail vs Tremor Comparison\nDESCRIPTION: A markdown table comparing features between Twistail and Tremor UI libraries, including architecture, icons, customization, and bundle size differences.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/blog/comparing-ui-libraries.mdx#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Feature       | Twistail                            | Tremor                |\n|---------------|-------------------------------------|-----------------------|\n| Architecture  | Modular with separate style files   | Monolithic components |\n| Icons         | Uses Lucide icons                   | Uses Remix icons      |\n| Customization | High flexibility with CSS variables | Configuration options |\n| Bundle Size   | Smaller due to modularity           | Larger                |\n```\n\n----------------------------------------\n\nTITLE: Importing Badge Component - Internal\nDESCRIPTION: Example of importing the Badge component when using internal copy-paste method\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/badge.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Badge } from '#/components/badge'\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependency for Divider Component in React\nDESCRIPTION: Command to install the Radix UI dependency required for the Divider component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/divider.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Installing Avatar Dependencies\nDESCRIPTION: Command to install required Radix UI dependencies for the Avatar component\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/avatar.mdx#2025-04-08_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Form Component Import Statements (Internal)\nDESCRIPTION: Import statements for using form components when using internal copy-paste implementation.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/form.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Form,\n  FormField,\n  FormLabel,\n  FormControl,\n  FormMessage,\n  FormValidityState,\n  FormSubmit\n} from '#/components/form'\n```\n\n----------------------------------------\n\nTITLE: Importing Donut Chart Component in React Projects\nDESCRIPTION: Examples showing how to import the donut chart component either via internal project paths or from the npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/donut-chart.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from '#/components/donut-chart'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {} from 'twistail-react/donut-chart'\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependencies\nDESCRIPTION: Command to install required Radix UI dependencies for the tooltip component\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tooltip.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Text Component in React Application\nDESCRIPTION: These code snippets show how to import the Text component in a React application, either from an internal source or from an npm package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/text.mdx#2025-04-08_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Text } from '#/components/text'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Text } from 'twistail-react/text'\n```\n\n----------------------------------------\n\nTITLE: Installing Radix UI Dependency for Tabs Component\nDESCRIPTION: This command installs the required Radix UI dependency for the Tabs component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tabs.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Select Component\nDESCRIPTION: Example of how to import the Select component either from local components or from the NPM package.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/select.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Select } from '#/components/select'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Select } from 'twistail-react/select'\n```\n\n----------------------------------------\n\nTITLE: Installing DateTime Picker Dependencies\nDESCRIPTION: Command to install required dependencies for the DateTime Picker components including radix-ui, lucide-react, date-fns, and react-day-picker.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/datetime-picker.mdx#2025-04-08_snippet_0\n\nLANGUAGE: package-install\nCODE:\n```\nnpm install radix-ui lucide-react date-fns react-day-picker\n```\n\n----------------------------------------\n\nTITLE: Loading Motion CSS Styles for Twistail UI\nDESCRIPTION: This JSON snippet configures the loading of motion-related CSS styles for Twistail UI components. It specifies the file path and language for the code block.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/install/index.mdx#2025-04-08_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": \"../packages/ui-react/src/styles/motion.css\",\n  \"codeblock\": { \"lang\": \"css\", \"meta\": \"title=\\\"styles/motion.css\\\"\" }\n}\n```\n\n----------------------------------------\n\nTITLE: Component Anatomy Placeholder\nDESCRIPTION: Placeholder for the component's structural anatomy documentation, marked as work in progress.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/spark-chart.mdx#2025-04-08_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n// WIP\n```\n\n----------------------------------------\n\nTITLE: Loading Global CSS Styles for Twistail UI\nDESCRIPTION: This snippet represents a JSON configuration to load the global CSS styles for Twistail UI components. It specifies the file path and language for the code block.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/install/index.mdx#2025-04-08_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": \"../packages/ui-react/src/styles/global.css\",\n  \"codeblock\": { \"lang\": \"css\", \"meta\": \"title=\\\"styles/global.css\\\"\" }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Twistail CLI Globally\nDESCRIPTION: Command to install the Twistail CLI tool globally using npm package manager. The global installation makes the CLI available system-wide.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/cli/index.mdx#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install -g twistail\n```\n\n----------------------------------------\n\nTITLE: Rendering Warning Callout in JSX for Next.js Documentation\nDESCRIPTION: This code snippet renders a warning callout component in JSX, likely using a custom Callout component. It informs users that the documentation is still in progress and to check back later.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/install/nextjs.mdx#2025-04-08_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Callout type='warn' title='Attention'>\n  This documentation is still in progress. Please check back later.\n</Callout>\n```\n\n----------------------------------------\n\nTITLE: Installing Bar List Dependencies\nDESCRIPTION: Command to install the required Radix UI dependency for the bar list component.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/bar-list.mdx#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install radix-ui\n```\n\n----------------------------------------\n\nTITLE: Importing Input PIN components from internal source\nDESCRIPTION: Shows how to import Input PIN components when using copy-paste installation method.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/input-pin.mdx#2025-04-08_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  InputPin,\n  InputPinGroup,\n  InputPinSlot,\n  InputPinSeparator\n} from '#/components/input-pin'\n```\n\n----------------------------------------\n\nTITLE: Importing Tracker Component in React\nDESCRIPTION: Example of how to import the Tracker component in a React application, showing both internal (copy-paste) and npm package import methods.\nSOURCE: https://github.com/riipandi/twistail/blob/main/website/src/content/docs/components/tracker.mdx#2025-04-08_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Tracker } from '#/components/tracker'\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Tracker } from 'twistail-react/tracker'\n```"
  }
]
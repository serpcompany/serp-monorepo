[
  {
    "owner": "roovetgit",
    "repo": "roo-code.git",
    "content": "TITLE: Installing Roo Code Local Development Environment\nDESCRIPTION: Commands for setting up local development environment for Roo Code. Includes cloning the repository, installing dependencies, and starting the webview development server.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/pt-BR/README.md#2025-04-06_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run install:all\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Accessing and Using the Roo Code API in TypeScript\nDESCRIPTION: This snippet demonstrates how to access the Roo Code API and use various methods such as starting new tasks, sending messages, and simulating button presses. It shows the complete workflow from extension activation to API method invocation.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/src/exports/README.md#2025-04-06_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst extension = vscode.extensions.getExtension<RooCodeAPI>(\"rooveterinaryinc.roo-cline\")\n\nif (!extension?.isActive) {\n\tthrow new Error(\"Extension is not activated\")\n}\n\nconst api = extension.exports\n\nif (!api) {\n\tthrow new Error(\"API is not available\")\n}\n\n// Start a new task with an initial message.\nawait api.startNewTask(\"Hello, Roo Code API! Let's make a new project...\")\n\n// Start a new task with an initial message and images.\nawait api.startNewTask(\"Use this design language\", [\"data:image/webp;base64,...\"])\n\n// Send a message to the current task.\nawait api.sendMessage(\"Can you fix the @problems?\")\n\n// Simulate pressing the primary button in the chat interface (e.g. 'Save' or 'Proceed While Running').\nawait api.pressPrimaryButton()\n\n// Simulate pressing the secondary button in the chat interface (e.g. 'Reject').\nawait api.pressSecondaryButton()\n```\n\n----------------------------------------\n\nTITLE: Creating Class Relationship Diagram for Cache Strategy System in Mermaid\nDESCRIPTION: A class diagram showing the relationships between key components of the cache strategy system, including CacheStrategy, MultiPointStrategy, AwsBedrockHandler, and various configuration and result classes.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-06_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nclassDiagram\n    class CacheStrategy {\n        <<abstract>>\n        #config: CacheStrategyConfig\n        #systemTokenCount: number\n        +determineOptimalCachePoints(): CacheResult\n        #initializeMessageGroups(): void\n        #calculateSystemTokens(): void\n        #createCachePoint(): ContentBlock\n        #messagesToContentBlocks(messages): Message[]\n        #meetsMinTokenThreshold(tokenCount): boolean\n        #estimateTokenCount(message): number\n        #applyCachePoints(messages, placements): Message[]\n        #formatResult(systemBlocks, messages): CacheResult\n    }\n\n    class MultiPointStrategy {\n        +determineOptimalCachePoints(): CacheResult\n        -determineMessageCachePoints(minTokensPerPoint, remainingCachePoints): CachePointPlacement[]\n        -formatWithoutCachePoints(): CacheResult\n        -findOptimalPlacementForRange(startIndex, endIndex, minTokensPerPoint): CachePointPlacement\n    }\n\n    class AwsBedrockHandler {\n        -client: BedrockRuntimeClient\n        -costModelConfig: object\n        -previousCachePointPlacements: Map<string, CachePointPlacement[]>\n        +createMessage(systemPrompt, messages): ApiStream\n        +completePrompt(prompt): Promise<string>\n        -supportsAwsPromptCache(modelConfig): boolean\n        -getModelByName(modelName): object\n        +getModel(): object\n        -removeCachePoints(content): any\n        -convertToBedrockConverseMessages(anthropicMessages, systemMessage, usePromptCache, modelInfo, conversationId): object\n    }\n\n    class CacheStrategyConfig {\n        +modelInfo: ModelInfo\n        +systemPrompt?: string\n        +messages: MessageParam[]\n        +usePromptCache: boolean\n        +previousCachePointPlacements?: CachePointPlacement[]\n    }\n\n    class ModelInfo {\n        +maxTokens: number\n        +contextWindow: number\n        +supportsPromptCache: boolean\n        +maxCachePoints: number\n        +minTokensPerCachePoint: number\n        +cachableFields: Array<string>\n    }\n\n    class CacheResult {\n        +system: SystemContentBlock[]\n        +messages: Message[]\n        +messageCachePointPlacements?: CachePointPlacement[]\n    }\n\n    class CachePointPlacement {\n        +index: number\n        +type: string\n        +tokensCovered: number\n    }\n\n    CacheStrategy <|-- MultiPointStrategy : extends\n    CacheStrategy o-- CacheStrategyConfig : uses\n    CacheStrategyConfig o-- ModelInfo : contains\n    CacheStrategy ..> CacheResult : produces\n    CacheStrategy ..> CachePointPlacement : creates\n    AwsBedrockHandler ..> MultiPointStrategy : creates\n    AwsBedrockHandler ..> CachePointPlacement : tracks\n    MultiPointStrategy ..> CachePointPlacement : preserves\n```\n\n----------------------------------------\n\nTITLE: Building Roo Code Extension Package\nDESCRIPTION: Command to build the Roo Code extension package, creating a .vsix file in the bin/ directory.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/fr/README.md#2025-04-06_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Adding Extension State Interface Properties for Settings in TypeScript\nDESCRIPTION: Example of adding a new setting to the ExtensionState interface in ExtensionMessage.ts. This demonstrates how to properly type a setting that will be used throughout the extension.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/settings.md#2025-04-06_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\npreferredLanguage: string\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension Dependencies in package.json\nDESCRIPTION: This snippet shows how to configure your extension's package.json to ensure the Roo Code extension is activated before your extension by adding it to extensionDependencies.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/src/exports/README.md#2025-04-06_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"extensionDependencies\": [\"rooveterinaryinc.roo-cline\"]\n```\n\n----------------------------------------\n\nTITLE: Directory Structure Example\nDESCRIPTION: Shows the folder structure for integration tests, including the main test runner and test suite files.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-06_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ne2e/src/\n├── runTest.ts          # Main test runner\n├── suite/\n│   ├── index.ts        # Test suite configuration\n│   ├── modes.test.ts   # Mode switching tests\n│   ├── tasks.test.ts   # Task execution tests\n│   └── extension.test.ts # Extension activation tests\n```\n\n----------------------------------------\n\nTITLE: Klonen des Roo Code Repositories mit Git\nDESCRIPTION: Befehl zum Klonen des Roo Code GitHub-Repositories auf den lokalen Rechner. Dies ist der erste Schritt für Entwickler, die am Projekt mitarbeiten möchten.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/de/README.md#2025-04-06_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Visualizing Model Identification Flow with Mermaid Sequence Diagram\nDESCRIPTION: A sequence diagram illustrating the flow of model identification in AWS Bedrock, showing the interaction between Constructor, parseArn, parseBaseModelId, getModelById, and getModel functions.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/model-identification.md#2025-04-06_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant Constructor\n    participant parseArn\n    participant parseBaseModelId\n    participant getModelById\n    participant getModel\n\n    Constructor->>parseArn: Initialize (if awsCustomArn provided)\n    parseArn->>parseBaseModelId: Extract region prefix from modelId\n    parseBaseModelId-->>parseArn: Return modelId without prefix\n    parseArn->>parseArn: Determine if cross-region inference\n    parseArn-->>Constructor: Return arnInfo with modelId and crossRegionInference flag\n    Constructor->>getModel: Call getModel()\n    getModel->>getModelById: Lookup model\n    getModelById-->>getModel: Return model info\n    getModel-->>Constructor: Return model config\n    Constructor->>Constructor: Set this.costModelConfig\n```\n\n----------------------------------------\n\nTITLE: Implementing Sequence Diagram for Multi-Point Strategy in Mermaid\nDESCRIPTION: A sequence diagram illustrating the process flow when using the MultiPointStrategy with multiple cache points in messages, showing the interaction between Client Code, AwsBedrockHandler, MultiPointStrategy, and AWS Bedrock Service.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-06_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant Client as Client Code\n    participant Bedrock as AwsBedrockHandler\n    participant Strategy as MultiPointStrategy\n    participant AWS as AWS Bedrock Service\n\n    Client->>Bedrock: createMessage(systemPrompt, messages)\n    Note over Bedrock: Generate conversationId to track cache points\n    Bedrock->>Bedrock: getModel() to get model info\n    Bedrock->>Bedrock: Check if model supports prompt cache\n\n    Bedrock->>Strategy: new MultiPointStrategy(config)\n    Note over Strategy: config contains modelInfo, systemPrompt, messages, usePromptCache, previousCachePointPlacements\n\n    Bedrock->>Strategy: determineOptimalCachePoints()\n\n    alt usePromptCache is false or no messages\n        Strategy->>Strategy: formatWithoutCachePoints()\n    else\n        Strategy->>Strategy: Check if system cache is supported\n        alt supportsSystemCache and systemPrompt exists\n            Strategy->>Strategy: meetsMinTokenThreshold(systemTokenCount)\n            alt systemTokenCount >= minTokensPerCachePoint\n                Strategy->>Strategy: Add cache point after system prompt\n                Note over Strategy: Decrement remainingCachePoints\n            end\n        end\n\n        Strategy->>Strategy: determineMessageCachePoints(minTokensPerPoint, remainingCachePoints)\n        alt previousCachePointPlacements exists\n            Note over Strategy: Analyze previous placements\n            Note over Strategy: Preserve N-1 cache points when possible\n            Note over Strategy: Determine which points to keep or combine\n        else\n            loop while currentIndex < messages.length and remainingCachePoints > 0\n                Strategy->>Strategy: findOptimalPlacementForRange(currentIndex, totalMessages-1, minTokensPerPoint)\n                alt placement found\n                    Strategy->>Strategy: Add placement to placements array\n                    Strategy->>Strategy: Update currentIndex and decrement remainingCachePoints\n                end\n            end\n        end\n        Strategy->>Strategy: applyCachePoints(messages, placements)\n        Strategy->>Strategy: Store cache point placements in result\n    end\n\n    Strategy-->>Bedrock: Return CacheResult with system blocks, messages, and messageCachePointPlacements\n\n    Bedrock->>Bedrock: Store cache point placements for conversationId\n    Bedrock->>AWS: Send request with multiple cache points\n    AWS-->>Bedrock: Stream response\n    Bedrock-->>Client: Yield response chunks\n```\n\n----------------------------------------\n\nTITLE: Adding Extension State Context Type for Checkbox Settings in React/TypeScript\nDESCRIPTION: Example of extending the ExtensionStateContextType interface in ExtensionStateContext.tsx to include a boolean setting and its setter function. This enables state management for checkbox settings in the React component.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/settings.md#2025-04-06_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ExtensionStateContextType {\n\tmultisearchDiffEnabled: boolean\n\tsetMultisearchDiffEnabled: (value: boolean) => void\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing AWS Bedrock Handler with Standard Model Selection\nDESCRIPTION: Example of initializing the AWS Bedrock handler with a standard model selection, showing the basic configuration for connecting to Claude 3.5 Sonnet.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/model-identification.md#2025-04-06_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst handler = new AwsBedrockHandler({\n\tapiModelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n\tawsAccessKey: \"ACCESS_KEY\",\n\tawsSecretKey: \"SECRET_KEY\",\n\tawsRegion: \"us-east-1\",\n})\n```\n\n----------------------------------------\n\nTITLE: Initializing Configuration for Initial Cache Point Placement in JavaScript\nDESCRIPTION: Sets up the initial configuration for cache point placement, including model information, system prompt, and conversation messages. This configuration is used to demonstrate how the determineMessageCachePoints method places cache points in a new conversation.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-06_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n\tmodelInfo: {\n\t\tmaxTokens: 4096,\n\t\tcontextWindow: 200000,\n\t\tsupportsPromptCache: true,\n\t\tmaxCachePoints: 3,\n\t\tminTokensPerCachePoint: 100,\n\t\tcachableFields: [\"system\", \"messages\"],\n\t},\n\tsystemPrompt: \"You are a helpful assistant.\", // ~10 tokens\n\tmessages: [\n\t\t{ role: \"user\", content: \"Tell me about machine learning.\" }, // ~50 tokens\n\t\t{ role: \"assistant\", content: \"Machine learning is a field of study...\" }, // ~150 tokens\n\t\t{ role: \"user\", content: \"What about deep learning?\" }, // ~40 tokens\n\t\t{ role: \"assistant\", content: \"Deep learning is a subset of machine learning...\" }, // ~160 tokens\n\t],\n\tusePromptCache: true,\n}\n```\n\n----------------------------------------\n\nTITLE: Installation der Roo Code VSIX-Datei in Visual Studio Code\nDESCRIPTION: Befehl zur direkten Installation der erstellten Roo Code VSIX-Datei in Visual Studio Code über die Kommandozeile.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/de/README.md#2025-04-06_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Configuration\nDESCRIPTION: Example of required environment variables in .env.local file for test configuration.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-06_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nOPENROUTER_API_KEY=sk-or-v1-...\n```\n\n----------------------------------------\n\nTITLE: Handling Checkbox Settings in ClineProvider for VS Code Extension\nDESCRIPTION: Example case statement for handling checkbox setting updates in the ClineProvider.ts file. This handles messages from the webview, updates the global state, and synchronizes the state between extension and webview.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/settings.md#2025-04-06_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ncase \"multisearchDiffEnabled\":\n  await this.updateGlobalState(\"multisearchDiffEnabled\", message.bool)\n  await this.postStateToWebview()\n  break\n```\n\n----------------------------------------\n\nTITLE: Initializing AWS Bedrock Handler with Custom Foundation Model ARN\nDESCRIPTION: Example of initializing the AWS Bedrock handler with a custom ARN for a foundation model, which allows targeting a specific model version with an AWS resource name.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/model-identification.md#2025-04-06_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst handler = new AwsBedrockHandler({\n\tapiModelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n\tawsAccessKey: \"ACCESS_KEY\",\n\tawsSecretKey: \"SECRET_KEY\",\n\tawsRegion: \"us-east-1\",\n\tawsCustomArn: \"arn:aws:bedrock:us-east-1::foundation-model/anthropic.claude-3-5-sonnet-20241022-v2:0\",\n})\n```\n\n----------------------------------------\n\nTITLE: Outputting Cache Point Placements for Initial Conversation in JavaScript\nDESCRIPTION: Demonstrates the output of cache point placements after processing the initial conversation. This shows how the algorithm places a single cache point after the second user message, covering 240 tokens.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-06_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n[\n\t{\n\t\tindex: 2, // After the second user message (What about deep learning?)\n\t\ttype: \"message\",\n\t\ttokensCovered: 240, // ~240 tokens covered (first 3 messages)\n\t},\n]\n```\n\n----------------------------------------\n\nTITLE: Running Integration Tests Command\nDESCRIPTION: Command to execute the integration test suite via npm.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-06_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test:integration\n```\n\n----------------------------------------\n\nTITLE: Global TypeScript Declarations\nDESCRIPTION: TypeScript declarations for global objects available in tests including API, provider, extension, and panel references.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-06_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ndeclare global {\n\tvar api: RooCodeAPI\n\tvar provider: ClineProvider\n\tvar extension: vscode.Extension<RooCodeAPI>\n\tvar panel: vscode.WebviewPanel\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Checkbox UI Component in React for VS Code Extension Settings\nDESCRIPTION: Example of implementing a checkbox UI component in SettingsView.tsx using the VSCodeCheckbox component. This renders the checkbox with appropriate styling and connects it to the state management functions.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/settings.md#2025-04-06_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n<VSCodeCheckbox\n  checked={multisearchDiffEnabled}\n  onChange={(e: any) => setMultisearchDiffEnabled(e.target.checked)}\n>\n  <span style={{ fontWeight: \"500\" }}>Enable multi-search diff matching</span>\n</VSCodeCheckbox>\n```\n\n----------------------------------------\n\nTITLE: Initializing AWS Bedrock Handler with Prompt Router ARN\nDESCRIPTION: Example of initializing the AWS Bedrock handler with a custom ARN for a prompt router, which allows using Bedrock's prompt routing capabilities to direct requests to the appropriate model.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/model-identification.md#2025-04-06_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst handler = new AwsBedrockHandler({\n\tapiModelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n\tawsAccessKey: \"ACCESS_KEY\",\n\tawsSecretKey: \"SECRET_KEY\",\n\tawsRegion: \"us-west-2\",\n\tawsCustomArn: \"arn:aws:bedrock:us-west-2:123456789012:prompt-router/my-router\",\n})\n```\n\n----------------------------------------\n\nTITLE: Updating Configuration for Cache Point Preservation in JavaScript\nDESCRIPTION: Updates the input configuration to include new messages and previous cache point placements. This setup is used to demonstrate how the algorithm preserves existing cache points while adapting to new messages in the conversation.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-06_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n\t// Same modelInfo and systemPrompt as before\n\tmessages: [\n\t\t// Previous 4 messages...\n\t\t{ role: \"user\", content: \"How do neural networks work?\" }, // ~50 tokens\n\t\t{ role: \"assistant\", content: \"Neural networks are composed of layers of nodes...\" }, // ~180 tokens\n\t],\n\tusePromptCache: true,\n\t// Pass the previous cache point placements from Example 1\n\tpreviousCachePointPlacements: [\n\t\t{\n\t\t\tindex: 2, // After the second user message (What about deep learning?)\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 240,\n\t\t},\n\t],\n}\n```\n\n----------------------------------------\n\nTITLE: Test Suite Structure Example\nDESCRIPTION: Example of how to structure a test suite using Mocha's TDD interface with TypeScript.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-06_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport * as assert from \"assert\"\nimport * as vscode from \"vscode\"\n\nsuite(\"Your Test Suite Name\", () => {\n\ttest(\"Should do something specific\", async function () {\n\t\t// Your test code here\n\t})\n})\n```\n\n----------------------------------------\n\nTITLE: Posting Checkbox Setting Messages to Extension in React Component\nDESCRIPTION: Example of posting a checkbox setting value to the VS Code extension via the vscode.postMessage API in SettingsView.tsx. This sends the current state of the checkbox when the user clicks Done.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/settings.md#2025-04-06_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nvscode.postMessage({ type: \"multisearchDiffEnabled\", bool: multisearchDiffEnabled })\n```\n\n----------------------------------------\n\nTITLE: Initializing AWS Bedrock Handler with Cross-Region Inference\nDESCRIPTION: Example of initializing the AWS Bedrock handler with cross-region inference enabled, which allows models to be used in regions where they might not be natively available.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/model-identification.md#2025-04-06_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst handler = new AwsBedrockHandler({\n\tapiModelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n\tawsAccessKey: \"ACCESS_KEY\",\n\tawsSecretKey: \"SECRET_KEY\",\n\tawsRegion: \"eu-west-1\",\n\tawsUseCrossRegionInference: true,\n})\n```\n\n----------------------------------------\n\nTITLE: Outputting Cache Point Placements with Preservation in JavaScript\nDESCRIPTION: Shows the output of cache point placements after processing the updated conversation with preservation logic. This demonstrates how the algorithm preserves the previous cache point and adds a new one for the additional messages.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-06_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n[\n\t{\n\t\tindex: 2, // After the second user message (What about deep learning?) - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 240, // ~240 tokens covered (first 3 messages)\n\t},\n\t{\n\t\tindex: 4, // After the third user message (How do neural networks work?) - NEW PLACEMENT\n\t\ttype: \"message\",\n\t\ttokensCovered: 230, // ~230 tokens covered (messages between cache points)\n\t},\n]\n```\n\n----------------------------------------\n\nTITLE: Test Configuration Example\nDESCRIPTION: Example of setting test timeouts and intervals for async operations.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-06_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst timeout = 30000\nconst interval = 1000\n```\n\n----------------------------------------\n\nTITLE: Adding Extension State Context Type for Dropdown Settings in React/TypeScript\nDESCRIPTION: Example of extending the ExtensionStateContextType interface in ExtensionStateContext.tsx to include a string setting and its setter function. This enables state management for dropdown settings in the React component.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/settings.md#2025-04-06_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ExtensionStateContextType {\n\tpreferredLanguage: string\n\tsetPreferredLanguage: (value: string) => void\n}\n```\n\n----------------------------------------\n\nTITLE: Example Stream Event with invokedModelId for Prompt Router\nDESCRIPTION: Example of a stream event containing invokedModelId information that is used to update the costModelConfig for token counting and pricing while maintaining the prompt router as the request target.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/model-identification.md#2025-04-06_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  trace: {\n    promptRouter: {\n      invokedModelId: \"arn:aws:bedrock:us-west-2:123456789012:inference-profile/anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      usage: {\n        inputTokens: 150,\n        outputTokens: 250\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering GitHub Contributors Grid in HTML\nDESCRIPTION: HTML markup for displaying a grid of GitHub contributors with their avatars, usernames and profile links. Each contributor is represented by a 100x100 pixel avatar image with their username below.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/zh-TW/README.md#2025-04-06_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>\n```\n\n----------------------------------------\n\nTITLE: Updating Configuration for Further Cache Point Adaptation in JavaScript\nDESCRIPTION: Further updates the input configuration with additional messages and previous cache point placements. This setup is used to demonstrate how the algorithm continues to adapt and optimize cache point placement as the conversation grows.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-06_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n\t// Same modelInfo and systemPrompt as before\n\tmessages: [\n\t\t// Previous 6 messages...\n\t\t{ role: \"user\", content: \"Can you explain backpropagation?\" }, // ~40 tokens\n\t\t{ role: \"assistant\", content: \"Backpropagation is an algorithm used to train neural networks...\" }, // ~170 tokens\n\t],\n\tusePromptCache: true,\n\t// Pass the previous cache point placements from Example 2\n\tpreviousCachePointPlacements: [\n\t\t{\n\t\t\tindex: 2, // After the second user message (What about deep learning?)\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 240,\n\t\t},\n\t\t{\n\t\t\tindex: 4, // After the third user message (How do neural networks work?)\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 230,\n\t\t},\n\t],\n}\n```\n\n----------------------------------------\n\nTITLE: State Management Example\nDESCRIPTION: Example of resetting extension state before/after tests using the API.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-06_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nawait globalThis.api.setConfiguration({\n\tmode: \"Ask\",\n\talwaysAllowModeSwitch: true,\n})\n```\n\n----------------------------------------\n\nTITLE: Handling Dropdown Settings in ClineProvider for VS Code Extension\nDESCRIPTION: Example case statement for handling dropdown setting updates in the ClineProvider.ts file. This handles messages from the webview, updates the global state with the selected text value, and synchronizes the state.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/settings.md#2025-04-06_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ncase \"preferredLanguage\":\n  await this.updateGlobalState(\"preferredLanguage\", message.text)\n  await this.postStateToWebview()\n  break\n```\n\n----------------------------------------\n\nTITLE: Initializing AwsBedrockHandler with Cross-Region ARN in JavaScript\nDESCRIPTION: This snippet demonstrates the initialization of an AwsBedrockHandler instance with a cross-region ARN. It uses the Anthropic Claude 3.5 Sonnet model and specifies a custom ARN for inference in a different region (us-west-2) than the default region (us-east-1).\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/model-identification.md#2025-04-06_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst handler = new AwsBedrockHandler({\n\tapiModelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n\tawsAccessKey: \"ACCESS_KEY\",\n\tawsSecretKey: \"SECRET_KEY\",\n\tawsRegion: \"us-east-1\",\n\tawsCustomArn:\n\t\t\"arn:aws:bedrock:us-west-2:123456789012:inference-profile/us.anthropic.claude-3-5-sonnet-20241022-v2:0\",\n})\n```\n\n----------------------------------------\n\nTITLE: Outputting Final Cache Point Placements with Preservation in JavaScript\nDESCRIPTION: Demonstrates the final output of cache point placements after processing the fully updated conversation. This shows how the algorithm preserves both previous cache points and adds a new one for the latest messages, optimizing cache usage across the entire conversation.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-06_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n[\n\t{\n\t\tindex: 2, // After the second user message (What about deep learning?) - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 240, // ~240 tokens covered (first 3 messages)\n\t},\n\t{\n\t\tindex: 4, // After the third user message (How do neural networks work?) - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 230, // ~230 tokens covered (messages between cache points)\n\t},\n\t{\n\t\tindex: 6, // After the fourth user message (Can you explain backpropagation?) - NEW PLACEMENT\n\t\ttype: \"message\",\n\t\ttokensCovered: 210, // ~210 tokens covered (messages between cache points)\n\t},\n]\n```\n\n----------------------------------------\n\nTITLE: Rendering Contributor Avatar and Link in HTML\nDESCRIPTION: This snippet demonstrates how to create a linked avatar image for a project contributor using HTML. It includes the contributor's GitHub avatar, username, and a link to their profile.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/pl/README.md#2025-04-06_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>\n```\n\n----------------------------------------\n\nTITLE: Error Handling Example\nDESCRIPTION: Example of proper error handling and resource cleanup in tests.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-06_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ntry {\n\t// Test code\n} finally {\n\t// Cleanup code\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Dropdown UI Component in React for VS Code Extension Settings\nDESCRIPTION: Example of implementing a select/dropdown UI component in SettingsView.tsx with VSCode-matching styling. This creates a dropdown with options and connects it to the state management functions.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/settings.md#2025-04-06_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\n<select\n  value={preferredLanguage}\n  onChange={(e) => setPreferredLanguage(e.target.value)}\n  style={{\n    width: \"100%\",\n    padding: \"4px 8px\",\n    backgroundColor: \"var(--vscode-input-background)\",\n    color: \"var(--vscode-input-foreground)\",\n    border: \"1px solid var(--vscode-input-border)\",\n    borderRadius: \"2px\"\n  }}>\n  <option value=\"English\">English</option>\n  <option value=\"Spanish\">Spanish</option>\n  ...\n</select>\n```\n\n----------------------------------------\n\nTITLE: Initializing AwsBedrockHandler with Single-Region ARN in JavaScript\nDESCRIPTION: This snippet shows the initialization of an AwsBedrockHandler instance with a single-region ARN. It uses the Anthropic Claude 3.5 Sonnet model in the ap-northeast-3 (Osaka) region, demonstrating how region-specific prefixes are handled.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/model-identification.md#2025-04-06_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst handler = new AwsBedrockHandler({\n\tapiModelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n\tawsAccessKey: \"ACCESS_KEY\",\n\tawsSecretKey: \"SECRET_KEY\",\n\tawsRegion: \"ap-northeast-3\", // Osaka region\n\tawsCustomArn:\n\t\t\"arn:aws:bedrock:ap-northeast-3:123456789012:inference-profile/apne3.anthropic.claude-3-5-sonnet-20241022-v2:0\",\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Prompt Cache with Previous Cache Points (Token Comparison Example)\nDESCRIPTION: Configuration object for the prompt cache algorithm showing how previous cache points are passed and maintained when new messages have fewer tokens than the smallest gap between existing cache points.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-06_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n\t// Same modelInfo and systemPrompt as before\n\tmessages: [\n\t\t// Previous 10 messages...\n\t\t{\n\t\t\trole: \"user\",\n\t\t\tcontent: \"Can you explain the difference between supervised and unsupervised learning in detail?\",\n\t\t}, // ~80 tokens\n\t\t{\n\t\t\trole: \"assistant\",\n\t\t\tcontent:\n\t\t\t\t\"Certainly! Supervised learning and unsupervised learning are two fundamental paradigms in machine learning with..\",\n\t\t}, // ~130 tokens\n\t],\n\tusePromptCache: true,\n\t// Pass the previous cache point placements from Example 3\n\tpreviousCachePointPlacements: [\n\t\t{\n\t\t\tindex: 2, // After the second user message\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 240,\n\t\t},\n\t\t{\n\t\t\tindex: 6, // After the fourth user message\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 440,\n\t\t},\n\t\t{\n\t\t\tindex: 8, // After the fifth user message\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 260,\n\t\t},\n\t],\n}\n```\n\n----------------------------------------\n\nTITLE: Async Operation Polling Example\nDESCRIPTION: Example of implementing a polling mechanism for waiting on async operations.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-06_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nlet startTime = Date.now()\n\nwhile (Date.now() - startTime < timeout) {\n\tif (condition) {\n\t\tbreak\n\t}\n\n\tawait new Promise((resolve) => setTimeout(resolve, interval))\n}\n```\n\n----------------------------------------\n\nTITLE: Posting Dropdown Setting Messages to Extension in React Component\nDESCRIPTION: Example of posting a dropdown setting value to the VS Code extension via the vscode.postMessage API in SettingsView.tsx. This sends the selected value when the user clicks Done.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/settings.md#2025-04-06_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nvscode.postMessage({ type: \"preferredLanguage\", text: preferredLanguage })\n```\n\n----------------------------------------\n\nTITLE: Test Grading Example\nDESCRIPTION: Example of implementing test grading functionality using a specific format.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-06_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nawait globalThis.api.startNewTask({\n\ttext: `Given this prompt: ${testPrompt} grade the response from 1 to 10 in the format of \"Grade: (1-10)\": ${output} \\n Be sure to say 'I AM DONE GRADING' after the task is complete`,\n})\n```\n\n----------------------------------------\n\nTITLE: Output Cache Point Placements (Unchanged) for Token Comparison Example\nDESCRIPTION: Shows the unchanged cache point placements when new messages have fewer tokens than the smallest existing gap, demonstrating the algorithm's efficiency in preserving existing cache points when optimal.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-06_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n[\n\t{\n\t\tindex: 2, // After the second user message - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 240,\n\t},\n\t{\n\t\tindex: 6, // After the fourth user message - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 440,\n\t},\n\t{\n\t\tindex: 8, // After the fifth user message - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 260,\n\t},\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Prompt Cache for Cache Point Reallocation Example\nDESCRIPTION: Configuration for the prompt cache algorithm demonstrating a scenario where new messages have significantly more tokens than the smallest gap between existing cache points, triggering a reallocation.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-06_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n\t// Same modelInfo and systemPrompt as before\n\tmessages: [\n\t\t// Previous 10 messages...\n\t\t{\n\t\t\trole: \"user\",\n\t\t\tcontent: \"Can you provide a detailed example of implementing a neural network for image classification?\",\n\t\t}, // ~100 tokens\n\t\t{\n\t\t\trole: \"assistant\",\n\t\t\tcontent:\n\t\t\t\t\"Certainly! Here's a detailed example of implementing a convolutional neural network (CNN) for image classification using TensorFlow and Keras...\",\n\t\t}, // ~300 tokens\n\t],\n\tusePromptCache: true,\n\t// Pass the previous cache point placements from Example 3\n\tpreviousCachePointPlacements: [\n\t\t{\n\t\t\tindex: 2, // After the second user message\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 240,\n\t\t},\n\t\t{\n\t\t\tindex: 6, // After the fourth user message\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 440,\n\t\t},\n\t\t{\n\t\t\tindex: 8, // After the fifth user message\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 260,\n\t\t},\n\t],\n}\n```\n\n----------------------------------------\n\nTITLE: Output Cache Point Placements with Reallocation\nDESCRIPTION: Shows how cache points are reallocated when new messages have significantly more tokens than the smallest gap, demonstrating the algorithm's adaptive placement strategy for growing conversations.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-06_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n[\n\t{\n\t\tindex: 2, // After the second user message - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 240,\n\t},\n\t{\n\t\tindex: 6, // After the fourth user message - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 440,\n\t},\n\t{\n\t\tindex: 10, // After the sixth user message - NEW PLACEMENT\n\t\ttype: \"message\",\n\t\ttokensCovered: 660, // Tokens from messages 7 through 10 (260 + 400)\n\t},\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Storybook Meta Title\nDESCRIPTION: Sets up the Meta component with a 'Welcome' title for the Storybook page.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/webview-ui/src/stories/Welcome.mdx#2025-04-06_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<Meta title=\"Welcome\" />\n```\n\n----------------------------------------\n\nTITLE: Cloning Roo Code Repository\nDESCRIPTION: Command to clone the Roo Code repository from GitHub\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/README.md#2025-04-06_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies\nDESCRIPTION: Command to install all required dependencies for the Roo Code project\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/README.md#2025-04-06_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the webview development server with hot module reloading\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/README.md#2025-04-06_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Building and Installing Extension\nDESCRIPTION: Commands to build the VS Code extension and install it directly\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/README.md#2025-04-06_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm run build\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Generating Contributor Grid in Markdown\nDESCRIPTION: This snippet demonstrates how to create a grid of contributor information using Markdown tables and inline HTML. It includes avatars, usernames, and links to GitHub profiles for each contributor.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/README.md#2025-04-06_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n|                     <a href=\"https://github.com/mrubens\"><img src=\"https://avatars.githubusercontent.com/u/2600?v=4\" width=\"100\" height=\"100\" alt=\"mrubens\"/><br /><sub><b>mrubens</b></sub></a>                      |         <a href=\"https://github.com/saoudrizwan\"><img src=\"https://avatars.githubusercontent.com/u/7799382?v=4\" width=\"100\" height=\"100\" alt=\"saoudrizwan\"/><br /><sub><b>saoudrizwan</b></sub></a>         |\n| :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: |\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML Contributors Grid\nDESCRIPTION: HTML markup for displaying a responsive grid of contributor avatars, names, and GitHub profile links using table-based layout.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/README.md#2025-04-06_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n|              <a href=\"https://github.com/adamwlarson\"><img src=\"https://avatars.githubusercontent.com/u/1392315?v=4\" width=\"100\" height=\"100\" alt=\"adamwlarson\"/><br /><sub><b>adamwlarson</b></sub></a>              |                <a href=\"https://github.com/alarno\"><img src=\"https://avatars.githubusercontent.com/u/4355547?v=4\" width=\"100\" height=\"100\" alt=\"alarno\"/><br /><sub><b>alarno</b></sub></a>                 |\n```\n\n----------------------------------------\n\nTITLE: Markdown License Section\nDESCRIPTION: Markdown content showing the project license and community links with formatted headings and links.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/README.md#2025-04-06_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n## License\n\n[Apache 2.0 © 2025 Roo Code, Inc.](./LICENSE)\n\n---\n\n**Enjoy Roo Code!** Whether you keep it on a short leash or let it roam autonomously, we can't wait to see what you build. If you have questions or feature ideas, drop by our [Reddit community](https://www.reddit.com/r/RooCode/) or [Discord](https://discord.gg/roocode). Happy coding!\n```\n\n----------------------------------------\n\nTITLE: Cloning the Roo Code Repository\nDESCRIPTION: Command to clone the Roo Code repository from GitHub using Git.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/zh-CN/README.md#2025-04-06_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Roo Code\nDESCRIPTION: Command to install all dependencies for the Roo Code project using npm.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/zh-CN/README.md#2025-04-06_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Starting the Web View Development Server for Roo Code\nDESCRIPTION: Command to start the Vite/React application with hot module replacement for Roo Code's web view.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/zh-CN/README.md#2025-04-06_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Building Roo Code Extension Package\nDESCRIPTION: Command to build the Roo Code extension, creating a .vsix file in the bin/ directory.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/zh-CN/README.md#2025-04-06_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Extension in VS Code\nDESCRIPTION: Command to install the built Roo Code extension (.vsix file) in Visual Studio Code.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/zh-CN/README.md#2025-04-06_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Displaying GitHub Contributors Grid in HTML\nDESCRIPTION: HTML markup for rendering a grid of GitHub contributors with their avatars and profile links. Each contributor cell contains a linked avatar image and username displayed in a table format.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/zh-CN/README.md#2025-04-06_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n|<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>|...\n```\n\n----------------------------------------\n\nTITLE: Cloning the Roo Code Repository\nDESCRIPTION: Command to clone the Roo Code repository from GitHub.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/zh-TW/README.md#2025-04-06_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Roo Code\nDESCRIPTION: Command to install all dependencies for the Roo Code project.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/zh-TW/README.md#2025-04-06_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Starting the Web View for Roo Code\nDESCRIPTION: Command to start the web view (Vite/React application) with Hot Module Replacement (HMR) support.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/zh-TW/README.md#2025-04-06_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Building Roo Code Extension\nDESCRIPTION: Command to build the .vsix file for the Roo Code extension.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/zh-TW/README.md#2025-04-06_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Extension in VSCode\nDESCRIPTION: Command to install the built Roo Code extension (.vsix file) in Visual Studio Code.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/zh-TW/README.md#2025-04-06_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Cloning the Roo Code Repository\nDESCRIPTION: Command to clone the Roo Code Git repository to a local machine.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/vi/README.md#2025-04-06_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Roo Code\nDESCRIPTION: Command to install all necessary dependencies for the Roo Code project.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/vi/README.md#2025-04-06_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Starting the Roo Code Webview Development Server\nDESCRIPTION: Command to start the development server for the Roo Code webview (Vite/React app with Hot Module Replacement).\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/vi/README.md#2025-04-06_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Building Roo Code Extension Package\nDESCRIPTION: Command to build the Roo Code extension package, creating a .vsix file in the bin/ directory.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/vi/README.md#2025-04-06_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Extension in VS Code\nDESCRIPTION: Command to install the built Roo Code extension (.vsix file) directly in Visual Studio Code.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/vi/README.md#2025-04-06_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Rendering GitHub Contributor Avatar and Username in HTML\nDESCRIPTION: This HTML snippet creates a linked avatar image and username for a GitHub contributor. It uses inline styling to set the image dimensions and formats the username as a sub-element.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/vi/README.md#2025-04-06_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>\n```\n\n----------------------------------------\n\nTITLE: Rendering GitHub Contributor Avatar and Link in HTML\nDESCRIPTION: This HTML snippet creates a linked avatar image for a GitHub contributor. It displays the user's avatar, links to their profile, and shows their username. This pattern is repeated for each contributor in the gallery.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/tr/README.md#2025-04-06_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>\n```\n\n----------------------------------------\n\nTITLE: Building and Installing Roo Code VSIX Package\nDESCRIPTION: Commands for building a VSIX package for Roo Code and installing it directly in VS Code.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/pt-BR/README.md#2025-04-06_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run build\n```\n\nLANGUAGE: shell\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Rendering GitHub Contributors Grid in HTML\nDESCRIPTION: HTML markup that creates a grid layout of GitHub contributor avatars and usernames, each linking to their respective GitHub profiles. The layout uses table-like formatting with consistent 100x100 pixel avatars and username labels.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/pt-BR/README.md#2025-04-06_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n|<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>|...\n```\n\n----------------------------------------\n\nTITLE: Cloning and Installing Roo Code Repository\nDESCRIPTION: Commands for cloning the Roo Code repository and installing dependencies locally for development.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/pl/README.md#2025-04-06_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Running Roo Code Development Environment\nDESCRIPTION: Commands for starting the development server and running the webview application with hot module reloading.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/pl/README.md#2025-04-06_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Building and Installing Roo Code Extension\nDESCRIPTION: Commands for building the VSCode extension package and installing it directly in VSCode.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/pl/README.md#2025-04-06_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Rendering GitHub Contributors Grid in HTML\nDESCRIPTION: Creates a table-based layout of GitHub contributor avatars and profile links. Each cell contains a linked 100x100 avatar image and the contributor's username.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/ko/README.md#2025-04-06_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n|<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>|\n```\n\n----------------------------------------\n\nTITLE: Cloning the Roo Code Repository\nDESCRIPTION: Command to clone the Roo Code repository from GitHub.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/ja/README.md#2025-04-06_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Roo Code\nDESCRIPTION: Command to install all dependencies for the Roo Code project.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/ja/README.md#2025-04-06_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Starting the Webview Development Server\nDESCRIPTION: Command to start the Vite/React app with Hot Module Replacement for Roo Code development.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/ja/README.md#2025-04-06_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Building the Roo Code VSIX Package\nDESCRIPTION: Command to build the VSIX package for Roo Code installation in VS Code.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/ja/README.md#2025-04-06_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code VSIX in VS Code\nDESCRIPTION: Command to install the built Roo Code VSIX package in VS Code.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/ja/README.md#2025-04-06_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing and Setting Up Roo Code Repository\nDESCRIPTION: Commands for cloning the repository, installing dependencies, starting the development environment, and building/installing the extension.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/it/README.md#2025-04-06_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run install:all\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run build\n```\n\nLANGUAGE: shell\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Rendering GitHub Contributor Avatar and Username in HTML\nDESCRIPTION: This HTML snippet creates a linked avatar and username for a GitHub contributor. It uses inline styling for image dimensions and formatting.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/it/README.md#2025-04-06_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>\n```\n\n----------------------------------------\n\nTITLE: HTML Contributor Profile Grid\nDESCRIPTION: A grid layout implemented in HTML that displays contributor information including profile images, links and usernames. Each contributor is represented by a table cell containing their 100x100 avatar image and GitHub username as a link.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/hi/README.md#2025-04-06_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>\n```\n\n----------------------------------------\n\nTITLE: Cloning the Roo Code Repository\nDESCRIPTION: Command to clone the Roo Code GitHub repository to your local machine.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/fr/README.md#2025-04-06_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Dependencies\nDESCRIPTION: Command to install all dependencies for the Roo Code project.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/fr/README.md#2025-04-06_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Starting Roo Code Web View\nDESCRIPTION: Command to start the Roo Code web view, which is a Vite/React application with Hot Module Replacement.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/fr/README.md#2025-04-06_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Extension in VS Code\nDESCRIPTION: Command to install the built Roo Code extension package in Visual Studio Code.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/fr/README.md#2025-04-06_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Rendering GitHub Contributors Grid in HTML\nDESCRIPTION: HTML markup that creates a grid of contributor profiles using table cells. Each cell contains a linked avatar image and username for a project contributor, with consistent styling and dimensions.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/fr/README.md#2025-04-06_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up Roo Code Repository\nDESCRIPTION: Commands for cloning the repository and installing dependencies for local development.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/es/README.md#2025-04-06_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Starting Development Environment\nDESCRIPTION: Commands for starting the web view development server with hot module reloading.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/es/README.md#2025-04-06_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Building and Installing VSIX Extension\nDESCRIPTION: Commands for building the extension package and installing it directly in VS Code.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/es/README.md#2025-04-06_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Rendering Contributor Profile in HTML\nDESCRIPTION: This snippet demonstrates how to create a single contributor profile element using HTML. It includes an avatar image, username, and link to the contributor's GitHub profile.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/es/README.md#2025-04-06_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>\n```\n\n----------------------------------------\n\nTITLE: Installation der Abhängigkeiten für Roo Code\nDESCRIPTION: NPM-Befehl zum Installieren aller notwendigen Abhängigkeiten für das Roo Code-Projekt. Dies sollte nach dem Klonen des Repositories ausgeführt werden.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/de/README.md#2025-04-06_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Starten der Webview-Entwicklungsumgebung für Roo Code\nDESCRIPTION: Befehl zum Starten der Vite/React-App mit Hot Module Replacement (HMR) für die Entwicklung der Webview-Komponente von Roo Code.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/de/README.md#2025-04-06_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Erstellung der Roo Code VSIX-Datei\nDESCRIPTION: NPM-Befehl zum Erstellen einer VSIX-Datei für Roo Code, die direkt in Visual Studio Code installiert werden kann.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/de/README.md#2025-04-06_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Rendering GitHub Contributors Grid in HTML\nDESCRIPTION: HTML markup that creates a grid of contributor profiles using table rows. Each cell contains a linked avatar image and username from GitHub. The layout uses consistent 100x100 pixel avatars with usernames displayed below.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/de/README.md#2025-04-06_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n|<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>|<a href=\"https://github.com/eonghk\"><img src=\"https://avatars.githubusercontent.com/u/139964?v=4\" width=\"100\" height=\"100\" alt=\"eonghk\"/><br /><sub><b>eonghk</b></sub></a>|...\n```\n\n----------------------------------------\n\nTITLE: Rendering GitHub Contributor Profiles in HTML\nDESCRIPTION: This HTML snippet creates a table-like structure to display GitHub contributor profiles. Each cell contains an avatar image, username, and link to the user's GitHub profile. The layout is designed to be responsive and visually appealing.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/locales/ca/README.md#2025-04-06_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://github.com/arthurauffray\"><img src=\"https://avatars.githubusercontent.com/u/51604173?v=4\" width=\"100\" height=\"100\" alt=\"arthurauffray\"/><br /><sub><b>arthurauffray</b></sub></a>\n```\n\n----------------------------------------\n\nTITLE: Generating Database Migration Files in RooVetGit Project\nDESCRIPTION: This command generates new migration files based on changes made to the src/schema.ts file. It creates SQL scripts in the drizzle/ directory for review before applying to the database.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/evals/packages/db/README.md#2025-04-06_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm db:generate\n```\n\n----------------------------------------\n\nTITLE: Applying Database Migrations in RooVetGit Project\nDESCRIPTION: This command runs the migration files to apply the schema changes to the database. It should be executed after reviewing the generated SQL scripts in the drizzle/ directory.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/evals/packages/db/README.md#2025-04-06_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npnpm db:migrate\n```\n\n----------------------------------------\n\nTITLE: Cloning Roo Code Repository using Git\nDESCRIPTION: These commands clone the Roo Code repository from GitHub and navigate into the project directory.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/evals/README.md#2025-04-06_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\ncd Roo-Code\n```\n\n----------------------------------------\n\nTITLE: Running Roo Code Setup Script\nDESCRIPTION: These commands navigate to the 'evals' directory and execute the setup script to prepare the environment for running evaluations.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/evals/README.md#2025-04-06_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd evals\n./scripts/setup.sh\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Meta Component\nDESCRIPTION: Imports the Meta component from Storybook blocks package to configure the welcome page title.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/webview-ui/src/stories/Welcome.mdx#2025-04-06_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Meta } from \"@storybook/blocks\";\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up Roo Code Development Environment\nDESCRIPTION: Instructions for setting up the Roo Code development environment, including cloning the repository, installing dependencies, starting the development server, and building/installing the extension.\nSOURCE: https://github.com/RooVetGit/Roo-Code.git/blob/main/CONTRIBUTING.md#2025-04-06_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```"
  }
]
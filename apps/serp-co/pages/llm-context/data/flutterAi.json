[
  {
    "owner": "flutter",
    "repo": "ai",
    "content": "TITLE: Implementing Gemini AI Chat Application\nDESCRIPTION: Complete implementation of a Flutter application using Gemini AI provider with the Flutter AI Toolkit.\nSOURCE: https://github.com/flutter/ai/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:flutter/material.dart';\nimport 'package:flutter_ai_toolkit/flutter_ai_toolkit.dart';\nimport 'package:google_generative_ai/google_generative_ai.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Demo',\n      theme: ThemeData(\n        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\n        useMaterial3: true,\n      ),\n      home: const ChatPage(title: 'Generative AI Chat'),\n    );\n  }\n}\n\nclass ChatPage extends StatelessWidget {\n  const ChatPage({super.key, required this.title});\n  final String title;\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: Text(title)),\n      body: LlmChatView(\n        provider: GeminiProvider(\n          model: GenerativeModel(\n            model: 'gemini-1.5-flash',\n            apiKey: 'GEMINI-API-KEY',\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Vertex AI Chat View\nDESCRIPTION: Implementation of a chat page widget using Vertex AI provider with the Flutter AI Toolkit.\nSOURCE: https://github.com/flutter/ai/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nclass ChatPage extends StatelessWidget {\n  const ChatPage({super.key});\n\n  @override\n  Widget build(BuildContext context) => Scaffold(\n        appBar: AppBar(title: const Text(App.title)),\n        // Create the chat view, passing in the Vertex provider.\n        body: LlmChatView(\n          provider: VertexProvider(\n            chatModel: FirebaseVertexAI.instance.generativeModel(\n              model: 'gemini-1.5-flash',\n            ),\n          ),\n        ),\n      );\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Firebase for Vertex AI\nDESCRIPTION: Setup code for initializing Firebase in a Flutter application to use Vertex AI integration.\nSOURCE: https://github.com/flutter/ai/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:firebase_core/firebase_core.dart';\nimport 'package:firebase_vertexai/firebase_vertexai.dart';\nimport 'package:flutter_ai_toolkit/flutter_ai_toolkit.dart';\n\n// Other app imports...\n\nimport 'firebase_options.dart'; // Generated by `flutterfire config`.\n\nvoid main() async {\n  WidgetsFlutterBinding.ensureInitialized();\n  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);\n  runApp(const App());\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Flutter AI Dependencies\nDESCRIPTION: Command to add required Flutter packages including flutter_ai_toolkit, google_generative_ai, and firebase_core.\nSOURCE: https://github.com/flutter/ai/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ flutter pub add flutter_ai_toolkit google_generative_ai firebase_core\n```\n\n----------------------------------------\n\nTITLE: Android Network Permission Configuration\nDESCRIPTION: Android manifest configuration for enabling internet access in Android applications.\nSOURCE: https://github.com/flutter/ai/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    ...\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n</manifest>\n```\n\n----------------------------------------\n\nTITLE: MacOS Network Access Configuration\nDESCRIPTION: Entitlements configuration for enabling network access in macOS applications.\nSOURCE: https://github.com/flutter/ai/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<plist version=\"1.0\">\n    <dict>\n      ...\n      <key>com.apple.security.network.client</key>\n      <true/>\n    </dict>\n</plist>\n```\n\n----------------------------------------\n\nTITLE: Opening Xcode Project for Flutter iOS App\nDESCRIPTION: Command to open the Xcode project workspace for a Flutter iOS app. This allows access to the Assets.xcassets folder for customizing launch screen assets.\nSOURCE: https://github.com/flutter/ai/blob/main/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nopen ios/Runner.xcworkspace\n```"
  }
]
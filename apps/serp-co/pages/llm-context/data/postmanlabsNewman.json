[
  {
    "owner": "postmanlabs",
    "repo": "newman",
    "content": "TITLE: Running a Postman Collection from URL with Newman CLI\nDESCRIPTION: Example of running a Postman Collection from a URL using the Newman CLI.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ newman run https://www.getpostman.com/collections/631643-f695cab7-6878-eb55-7943-ad88e1ccfd65-JsLv\n```\n\n----------------------------------------\n\nTITLE: Setting up Newman Run with Collection and Environments in JavaScript\nDESCRIPTION: This snippet demonstrates how to run a Postman collection using Newman with custom data, globals, and environment variables. It also shows how to listen for start and done events to handle run completion and errors.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nnewman.run({\n    collection: require('./sample-collection.json'),\n    iterationData: [{ \"var\": \"data\", \"var_beta\": \"other_val\" }],\n    globals: {\n        \"id\": \"5bfde907-2a1e-8c5a-2246-4aff74b74236\",\n        \"name\": \"test-env\",\n        \"values\": [\n            {\n                \"key\": \"alpha\",\n                \"value\": \"beta\",\n                \"type\": \"text\",\n                \"enabled\": true\n            }\n        ],\n        \"timestamp\": 1404119927461,\n        \"_postman_variable_scope\": \"globals\",\n        \"_postman_exported_at\": \"2016-10-17T14:31:26.200Z\",\n        \"_postman_exported_using\": \"Postman/4.8.0\"\n    },\n    globalVar: [\n        { \"key\":\"glboalSecret\", \"value\":\"globalSecretValue\" },\n        { \"key\":\"globalAnotherSecret\", \"value\":`${process.env.GLOBAL_ANOTHER_SECRET}`}\n    ],\n    environment: {\n        \"id\": \"4454509f-00c3-fd32-d56c-ac1537f31415\",\n        \"name\": \"test-env\",\n        \"values\": [\n            {\n                \"key\": \"foo\",\n                \"value\": \"bar\",\n                \"type\": \"text\",\n                \"enabled\": true\n            }\n        ],\n        \"timestamp\": 1404119927461,\n        \"_postman_variable_scope\": \"environment\",\n        \"_postman_exported_at\": \"2016-10-17T14:26:34.940Z\",\n        \"_postman_exported_using\": \"Postman/4.8.0\"\n    },\n    envVar: [\n        { \"key\":\"secret\", \"value\":\"secretValue\" },\n        { \"key\":\"anotherSecret\", \"value\":`${process.env.ANOTHER_SECRET}`}\n    ],\n}).on('start', function (err, args) { // on start of run, log to console\n    console.log('running a collection...');\n}).on('done', function (err, summary) {\n    if (err || summary.error) {\n        console.error('collection run encountered an error.');\n    }\n    else {\n        console.log('collection run completed.');\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Running Local Collection with Environment and JSON Reporter\nDESCRIPTION: Command to run a local collection with a specified environment file and save JSON test results to the host. Uses volume mounting to access local files.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/README.md#2025-04-16_snippet_6\n\nLANGUAGE: terminal\nCODE:\n```\ndocker run -v ~/collections:/etc/newman -t postman/newman:ubuntu \\\n    run \"HTTPBinNewmanTest.json.postman_collection\" \\\n    --environment=\"HTTPBinNewmanTestEnv.json.postman_environment\" \\\n    --reporters=\"json,cli\" --reporter-json-export=\"newman-results.json\"\n```\n\n----------------------------------------\n\nTITLE: Using Newman as a Node.js Library\nDESCRIPTION: Example of using Newman programmatically in a Node.js project to run a Postman Collection from a JSON file.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst newman = require('newman'); // require newman in your project\n\n// call newman.run to pass `options` object and wait for callback\nnewman.run({\n    collection: require('./sample-collection.json'),\n    reporters: 'cli'\n}, function (err) {\n\tif (err) { throw err; }\n    console.log('collection run complete!');\n});\n```\n\n----------------------------------------\n\nTITLE: Running a Collection with Custom-Built Image\nDESCRIPTION: Command to run a Postman collection using a custom-built Newman Docker image. Demonstrates how to access a collection via URL.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/README.md#2025-04-16_snippet_4\n\nLANGUAGE: terminal\nCODE:\n```\ndocker run -t postman/newman:ubuntu run https://www.getpostman.com/collections/8a0c9bc08f062d12dcda\n```\n\n----------------------------------------\n\nTITLE: Basic Newman Run Command\nDESCRIPTION: The fundamental command for running a Postman collection using Newman CLI, with support for environment files, global variables, and iteration data.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnewman run <collection-file-source> [options]\n```\n\n----------------------------------------\n\nTITLE: Running Newman with a Remote Collection URL\nDESCRIPTION: Command for running Newman in Docker using a remote collection URL. This approach doesn't require mounting any local directories when the collection is available online.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/images/alpine/README.md#2025-04-16_snippet_5\n\nLANGUAGE: terminal\nCODE:\n```\ndocker run -t postman/newman:alpine run https://www.getpostman.com/collections/8a0c9bc08f062d12dcda\n```\n\n----------------------------------------\n\nTITLE: Running a Postman Collection with Newman CLI\nDESCRIPTION: Example of running a Postman Collection JSON file using the Newman CLI.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ newman run examples/sample-collection.json\n```\n\n----------------------------------------\n\nTITLE: Newman File Upload Usage\nDESCRIPTION: Command line example demonstrating how to run Newman with file uploads\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_16\n\nLANGUAGE: console\nCODE:\n```\n$ ls\nfile-upload.postman_collection.json  sample-file.txt\n\n$ newman run file-upload.postman_collection.json\n```\n\n----------------------------------------\n\nTITLE: Installing Newman globally via NPM\nDESCRIPTION: Command to install Newman globally on your system using NPM, allowing you to run it from anywhere.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ npm install -g newman\n```\n\n----------------------------------------\n\nTITLE: Using Newman Alpine Docker Image with Custom HTML Reporter\nDESCRIPTION: Command to use the Newman Alpine Docker image with a custom HTML reporter. Note that Alpine uses /bin/sh instead of /bin/bash as its shell.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/README.md#2025-04-16_snippet_10\n\nLANGUAGE: terminal\nCODE:\n```\ndocker run -v \"~/collections:/etc/newman\" --entrypoint /bin/sh postman/newman:alpine -c \"npm i -g newman-reporter-html; newman run sample-collection.json -r html\"\n```\n\n----------------------------------------\n\nTITLE: Running Newman with Custom Reporters\nDESCRIPTION: Examples of running Newman with custom reporters both via command line and programmatically using Node.js\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_13\n\nLANGUAGE: console\nCODE:\n```\n$ newman run /path/to/collection.json -r htmlextra,csv\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst newman = require('newman');\n\nnewman.run({\n    collection: '/path/to/collection.json',\n    reporters: ['htmlextra', 'csv']\n}, process.exit);\n```\n\n----------------------------------------\n\nTITLE: Newman V3 CLI Collection Run Example\nDESCRIPTION: Equivalent Newman V3 CLI command for running a collection with basic options\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_14\n\nLANGUAGE: terminal\nCODE:\n```\nnewman run collection.json --environment env.json --iteration-data data.csv --globals globals.json --iteration-count 2 --export-globals globalOut.json --export-environment envOut.json --delay-request 10 --timeout-request 5000 --disable-unicode --suppress-exit-code --ignore-redirects --bail\n```\n\n----------------------------------------\n\nTITLE: Newman Environment Variables via CLI\nDESCRIPTION: Examples of setting environment and global variables through command line arguments in Newman.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n--global-var \"foo=bar\" --global-var \"alpha=beta\"\n--env-var \"foo=bar\" --env-var \"alpha=beta\"\n```\n\n----------------------------------------\n\nTITLE: Building the Newman Docker Image\nDESCRIPTION: Docker build command to create a custom Newman Docker image. This allows specifying a particular Newman version through the NEWMAN_VERSION build argument.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/README.md#2025-04-16_snippet_3\n\nLANGUAGE: terminal\nCODE:\n```\ndocker build -t postman/newman:ubuntu --build-arg NEWMAN_VERSION=\"full semver version\" .;\n```\n\n----------------------------------------\n\nTITLE: Running Remote Collection with Environment and JUnit Reporter\nDESCRIPTION: Command to run a remote collection with a local environment file and generate JUnit XML reports. Demonstrates accessing remote collections while using local environment files.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/README.md#2025-04-16_snippet_7\n\nLANGUAGE: terminal\nCODE:\n```\ndocker run -v ~/collections:/etc/newman -t postman/newman:ubuntu \\\n    run https://www.getpostman.com/collections/8a0c9bc08f062d12dcda \\\n    --environment=\"HTTPBinNewmanTestEnv.json.postman_environment\" \\\n    --reporters=\"junit,cli\" --reporter-junit-export=\"newman-report.xml\"\n```\n\n----------------------------------------\n\nTITLE: Newman V3 CLI Reporter Example\nDESCRIPTION: Equivalent Newman V3 CLI command with reporter options\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_16\n\nLANGUAGE: terminal\nCODE:\n```\nnewman run https://a.com/collection.json --environment https://a.com/env.json --reporters cli,html,json,junit --reporter-json-export jsonOut.json --reporter-junit-export xmlOut.xml --reporter-html-export htmlOutput.html\n```\n\n----------------------------------------\n\nTITLE: Installing and Using HTML Reporter in Newman\nDESCRIPTION: This snippet demonstrates how to install and use the Newman HTML Reporter. It shows both the CLI command for installation and how to integrate the reporter in both CLI and programmatic usage.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_12\n\nLANGUAGE: console\nCODE:\n```\n$ npm install -g newman-reporter-html\n```\n\nLANGUAGE: console\nCODE:\n```\n$ newman run /path/to/collection.json -r cli,html\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst newman = require('newman');\n\nnewman.run({\n    collection: '/path/to/collection.json',\n    reporters: ['cli', 'html']\n}, process.exit);\n```\n\n----------------------------------------\n\nTITLE: Pulling Newman Docker Image from Docker Hub\nDESCRIPTION: Command to download the Newman Ubuntu Docker image from Docker Hub registry. This is the first step in using Newman with Docker.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/README.md#2025-04-16_snippet_0\n\nLANGUAGE: terminal\nCODE:\n```\ndocker pull postman/newman:ubuntu\n```\n\n----------------------------------------\n\nTITLE: Running Newman with Postman API\nDESCRIPTION: Example showing how to run Newman using Postman API endpoints for collections and environments\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_17\n\nLANGUAGE: console\nCODE:\n```\n$ newman run \"https://api.getpostman.com/collections/$uid?apikey=$apiKey\" \\\n    --environment \"https://api.getpostman.com/environments/$uid?apikey=$apiKey\"\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image for Newman Alpine\nDESCRIPTION: Command to build a custom Newman Alpine Docker image. The NEWMAN_VERSION build argument allows specifying the exact Newman version to install.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/images/alpine/README.md#2025-04-16_snippet_0\n\nLANGUAGE: terminal\nCODE:\n```\ndocker build -t postman/newman:alpine --build-arg NEWMAN_VERSION=\"full semver version\" .\n```\n\n----------------------------------------\n\nTITLE: Scripting Newman Tests with Deployment Logic\nDESCRIPTION: Bash script that runs Newman tests and conditionally performs actions based on test results. This demonstrates integration with CI/CD pipelines to trigger deployments only when tests pass.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/README.md#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n#/bin/bash\n\n# stop on first error\nset -e;\n\nfunction onExit {\n    if [ \"$?\" != \"0\" ]; then\n        echo \"Tests failed\";\n        # build failed, don't deploy\n        exit 1;\n    else\n        echo \"Tests passed\";\n        # deploy build\n    fi\n}\n\n# call onExit when the script exits\ntrap onExit EXIT;\n\ndocker run --entrypoint -t postman/newman:ubuntu run https://www.getpostman.com/collections/8a0c9bc08f062d12dcda --suppress-exit-code;\n```\n\n----------------------------------------\n\nTITLE: Building a Custom Newman Docker Image on Ubuntu\nDESCRIPTION: Command to build the Newman Docker image for Ubuntu. You can specify a specific Newman version using the NEWMAN_VERSION build argument.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/images/ubuntu/README.md#2025-04-16_snippet_0\n\nLANGUAGE: terminal\nCODE:\n```\ndocker build -t postman/newman:ubuntu --build-arg NEWMAN_VERSION=\"full semver version\" .\n```\n\n----------------------------------------\n\nTITLE: Newman Run Method Signature in JavaScript\nDESCRIPTION: The method signature for newman.run() which takes an options object and a callback function, returning an EventEmitter instance. This is the core method for executing Postman collections programmatically.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nnewman.run(options: _object_ , callback: _function_) => run: EventEmitter\n```\n\n----------------------------------------\n\nTITLE: Disabling Colored Output in Newman V3 Library\nDESCRIPTION: JavaScript code to disable colored output when using Newman V3 as a library by setting the noColor option to true.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nnewman.run({\n    collection: 'collection.json',\n    reporters: ['cli'],\n    noColor: true\n}, callback);\n```\n\n----------------------------------------\n\nTITLE: Using Multiple Reporters with Newman CLI\nDESCRIPTION: Example of running Newman with multiple reporters (CLI and JSON) using command line options.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n$ newman run examples/sample-collection.json -r cli,json\n```\n\n----------------------------------------\n\nTITLE: Disabling Colored Output in Newman V3 CLI\nDESCRIPTION: Command to disable colored output in Newman V3 using the --no-color flag.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_6\n\nLANGUAGE: console\nCODE:\n```\n$ newman run collection.json --no-color\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Newman Reporter\nDESCRIPTION: Template for creating a custom Newman reporter module that can process collection run events\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nfunction CustomNewmanReporter (emitter, reporterOptions, collectionRunOptions) {\n  // emitter is an event emitter that triggers the following events: https://github.com/postmanlabs/newman#newmanrunevents\n  // reporterOptions is an object of the reporter specific options. See usage examples below for more details.\n  // collectionRunOptions is an object of all the collection run options: https://github.com/postmanlabs/newman#newmanrunoptions-object--callback-function--run-eventemitter\n}\nmodule.exports = CustomNewmanReporter\n```\n\n----------------------------------------\n\nTITLE: CSV Format Example in Newman V4\nDESCRIPTION: Example of CSV input format used in Newman V4 with backslash as the escape character.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_2\n\nLANGUAGE: csv\nCODE:\n```\nid, name\n\"\\\"1\\\"\", \"foo \\\"bar\\\" baz\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Newman with SOCKS Proxy\nDESCRIPTION: JavaScript example showing how to configure Newman to use a SOCKS proxy for HTTP/HTTPS requests\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nconst newman = require('newman');\nconst SocksProxyAgent = require('socks-proxy-agent');\nconst requestAgent = new SocksProxyAgent({ host: 'localhost', port: '1080' });\n\nnewman.run({\n    collection: require('./sample-collection.json'),\n    requestAgents: {\n        http: requestAgent, // agent used for HTTP requests\n        https: requestAgent, // agent used for HTTPS requests\n    }\n}, function (err) {\n    if (err) { throw err; }\n    console.log('collection run complete!');\n});\n```\n\n----------------------------------------\n\nTITLE: Signing CSR with CA using OpenSSL\nDESCRIPTION: OpenSSL command to sign a Certificate Signing Request with a Certificate Authority. This generates a server.crt file valid for 10000 days, using the CA certificate and private key, with specific extensions defined in v3.ext.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/test/fixtures/ssl/SSL.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nopenssl x509 -req -days 10000 -in server.csr -CA ca.crt -CAkey ca.key -out server.crt -set_serial 1 -outform pem -extfile v3.ext -sha256\n```\n\n----------------------------------------\n\nTITLE: Running Newman in Docker with a Mounted Volume\nDESCRIPTION: Command to run Newman Docker container with a host directory mounted to access collection files and save report outputs. This mounts a local directory to /etc/newman, which is the default working directory.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/images/ubuntu/README.md#2025-04-16_snippet_2\n\nLANGUAGE: terminal\nCODE:\n```\ndocker --volume=\"/home/postman/collections:/etc/newman\" -t postman/newman:ubuntu run JSONBlobCoreAPI.json.postman_collection -r json --reporter-json-export newman-report.json\n```\n\n----------------------------------------\n\nTITLE: Running Newman with Volume Mounting for Collections\nDESCRIPTION: Command for running Newman in Docker with a volume mount to access local collections and save reports. This mounts a local directory to /etc/newman in the container.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/images/alpine/README.md#2025-04-16_snippet_2\n\nLANGUAGE: terminal\nCODE:\n```\ndocker --volume=\"/home/postman/collections:/etc/newman\" -t postman/newman:alpine run JSONBlobCoreAPI.json.postman_collection -r json --reporter-json-export newman-report.json\n```\n\n----------------------------------------\n\nTITLE: Running Local Collection Files with Volume Mounting\nDESCRIPTION: Docker command that mounts a local collection directory to the container, allowing Newman to access local collection files.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/README.md#2025-04-16_snippet_5\n\nLANGUAGE: terminal\nCODE:\n```\ndocker run -v ~/collections:/etc/newman -t postman/newman:ubuntu run \"HTTPBinNewmanTestNoEnv.json.postman_collection\"\n```\n\n----------------------------------------\n\nTITLE: File Upload Collection Example\nDESCRIPTION: JSON example showing how to configure a Postman collection for file uploads using Newman\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"info\": {\n        \"name\": \"file-upload\"\n    },\n    \"item\": [\n        {\n            \"request\": {\n                \"url\": \"https://postman-echo.com/post\",\n                \"method\": \"POST\",\n                \"body\": {\n                    \"mode\": \"formdata\",\n                    \"formdata\": [\n                        {\n                            \"key\": \"file\",\n                            \"type\": \"file\",\n                            \"enabled\": true,\n                            \"src\": \"sample-file.txt\"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Newman to Latest Version via npm\nDESCRIPTION: Commands to update Newman globally and verify the installation by checking the version.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ npm update -g newman\n```\n\n----------------------------------------\n\nTITLE: Checking Newman Installation Version\nDESCRIPTION: Commands to verify the Newman installation by checking the installed version and comparing it with the latest available version.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ newman --version          # Should show the latest version of Newman\n$ npm show newman version   # Should show the same version as of above\n```\n\n----------------------------------------\n\nTITLE: Using Newman Ubuntu Docker Image with Custom HTML Reporter\nDESCRIPTION: Command to use the Newman Ubuntu Docker image with a custom HTML reporter. This shows how to install and use third-party reporters with the Ubuntu-based image.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/README.md#2025-04-16_snippet_11\n\nLANGUAGE: terminal\nCODE:\n```\ndocker run -v \"~/collections:/etc/newman\" --entrypoint /bin/bash postman/newman:ubuntu -c \"npm i -g newman-reporter-html; newman run sample-collection.json -r html\"\n```\n\n----------------------------------------\n\nTITLE: Running Newman in Docker with an Online Collection URL\nDESCRIPTION: Command to run Newman Docker container with a collection URL instead of a local file. This approach doesn't require mounting volumes if the collection is available online and doesn't need environment files.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/images/ubuntu/README.md#2025-04-16_snippet_5\n\nLANGUAGE: terminal\nCODE:\n```\ndocker run -t postman/newman:ubuntu run https://www.getpostman.com/collections/8a0c9bc08f062d12dcda\n```\n\n----------------------------------------\n\nTITLE: Running Newman Commands on Docker Image\nDESCRIPTION: Basic command to run a Postman collection directly using the Newman Docker image. The collection is accessed via a URL.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/README.md#2025-04-16_snippet_1\n\nLANGUAGE: terminal\nCODE:\n```\ndocker run -t postman/newman:ubuntu run https://www.getpostman.com/collections/8a0c9bc08f062d12dcda\n```\n\n----------------------------------------\n\nTITLE: Installing Newman via Homebrew\nDESCRIPTION: Command to install Newman globally on your system using Homebrew package manager.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ brew install newman\n```\n\n----------------------------------------\n\nTITLE: Pulling Newman Alpine Docker Image from Docker Hub\nDESCRIPTION: Command to pull the pre-built Newman Alpine Docker image from Docker Hub instead of building it locally.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/images/alpine/README.md#2025-04-16_snippet_1\n\nLANGUAGE: terminal\nCODE:\n```\ndocker pull postman/newman:alpine\n```\n\n----------------------------------------\n\nTITLE: Pulling the Newman Docker Image for Ubuntu from Docker Hub\nDESCRIPTION: Command to pull the pre-built Newman Docker image for Ubuntu from Docker Hub without having to build it locally.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/images/ubuntu/README.md#2025-04-16_snippet_1\n\nLANGUAGE: terminal\nCODE:\n```\ndocker pull postman/newman:ubuntu\n```\n\n----------------------------------------\n\nTITLE: Installing HTML Reporter for Newman V4\nDESCRIPTION: Command to install the standalone HTML reporter for Newman V4 as a global package using npm.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_12\n\nLANGUAGE: console\nCODE:\n```\n$ npm install -g newman-reporter-html\n```\n\n----------------------------------------\n\nTITLE: Running Newman with Custom Working Directory\nDESCRIPTION: Command for running Newman in Docker with a custom working directory. This uses the -w or --workdir flag to change the working directory to match the mounted location.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/images/alpine/README.md#2025-04-16_snippet_4\n\nLANGUAGE: terminal\nCODE:\n```\ndocker run --volume=\"/home/postman/collections:/etc/newman\" -t postman/newman:alpine run JSONBlobCoreAPI.json.postman_collection -r json --reporter-json-export newman-report.json\n```\n\n----------------------------------------\n\nTITLE: Running Newman in Docker with a Custom Working Directory\nDESCRIPTION: Command to run Newman Docker container with a custom working directory specified using the -w or --workdir flag. This changes the working directory to the mounted location.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/images/ubuntu/README.md#2025-04-16_snippet_4\n\nLANGUAGE: terminal\nCODE:\n```\ndocker run --volume=\"/home/postman/collections:/etc/newman\" -t postman/newman:ubuntu run JSONBlobCoreAPI.json.postman_collection -r json --reporter-json-export newman-report.json\n```\n\n----------------------------------------\n\nTITLE: Running Newman in Docker with Full Path References\nDESCRIPTION: Command to run Newman Docker container by passing the full path to collection and environment files. This approach is useful when mounting to a custom location.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/images/ubuntu/README.md#2025-04-16_snippet_3\n\nLANGUAGE: terminal\nCODE:\n```\ndocker --volume=\"/home/postman/collection:/etc/newman\" -t postman/newman:ubuntu run JSONBlobCoreAPI.json.postman_collection -r json --reporter-json-export newman-report.json\n```\n\n----------------------------------------\n\nTITLE: Running Newman with Custom Mount Path and Full Collection Path\nDESCRIPTION: Command for running Newman in Docker specifying the full path to the collection file. This approach is used when mounting to the default working directory.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/images/alpine/README.md#2025-04-16_snippet_3\n\nLANGUAGE: terminal\nCODE:\n```\ndocker --volume=\"/home/postman/collection:/etc/newman\" -t postman/newman:alpine run JSONBlobCoreAPI.json.postman_collection\" -r json --reporter-json-export newman-report.json\n```\n\n----------------------------------------\n\nTITLE: Newman V2 JavaScript Reporter Usage\nDESCRIPTION: Example of using Newman V2 JavaScript library with reporter options\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nnewman.execute({\n    collection: 'https://a.com/collection.json',\n    environment: {\n        \"id\": \"my-id\",\n        \"name\": \"testEnv\",\n        \"values\": [\n            {\n                \"key\": \"env\",\n                \"value\": \"env2\",\n            },\n            {\n                \"key\": \"data\",\n                \"value\": \"env2\",\n            }\n        ]\n    },\n    globals: [\n        {\n            key: \"var1\",\n            value: \"/get\",\n            enabled: true\n        },\n        {\n            key: \"var2\",\n            value: \"Global Bar\",\n        }\n    ],\n    outputFile: 'jsonOut.json',\n    testReportFile: 'xmlOut.xml',\n    html: 'htmlOutput.html',\n    outputFileVerbose: 'verboseOut.log'\n}, callback);\n```\n\n----------------------------------------\n\nTITLE: Newman V3 JavaScript Reporter Usage\nDESCRIPTION: Equivalent Newman V3 JavaScript library usage with reporter options\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nnewman.run({\n    collection: 'https://a.com/collection.json',\n    environment: {\n        \"id\": \"my-id\",\n        \"name\": \"testEnv\",\n        \"values\": [\n            {\n             \"key\": \"env\",\n             \"value\": \"env2\",\n            },\n            {\n             \"key\": \"data\",\n             \"value\": \"env2\",\n            }\n        ]\n    },\n    iterationData: [ {a: 1}, {a: 2} ],\n    globals: [\n        {\n            key: \"var1\",\n            value: \"/get\",\n            enabled: true\n        },\n        {\n            key: \"var2\",\n            value: \"Global Bar\",\n        }\n    ],\n    reporters: ['html', 'junit', 'json'],\n    reporter: {\n        html: {\n            export: 'htmlOutput.html'\n        },\n        junit: {\n            export: 'xmlOut.xml'\n        },\n        json: {\n            export: 'jsonOut.json'\n        }\n    }\n}, callback);\n```\n\n----------------------------------------\n\nTITLE: Newman V2 JavaScript Basic Usage\nDESCRIPTION: Example of using Newman V2 JavaScript library with basic options\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nnewman.execute({\n    collection: 'collection.json',\n    environment: 'env.json',\n    data: 'data.csv',\n    globals: 'globals.json',\n    number: 2,\n    exportGlobals: 'globalOut.json',\n    exportEnvironment: 'envOut.json',\n    delay: 10,\n    stopOnError: true,\n    requestTimeout: 5000,\n    noTestSymbols: true,\n    tls: true,\n    exitCode: true,\n    whiteScreen: true,\n    avoidRedirects: true\n}, callback);\n```\n\n----------------------------------------\n\nTITLE: Newman V3 JavaScript Basic Usage\nDESCRIPTION: Equivalent Newman V3 JavaScript library usage with basic options\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nnewman.run({\n    collection: 'collection.json',\n    environment: 'env.json',\n    iterationData: 'data.csv',\n    globals: 'globals.json',\n    iterationCount: 2,\n    exportGlobals: 'globalOut.json',\n    exportEnvironment: 'envOut.json',\n    delayRequest: 10,\n    bail: true,\n    timeoutRequest: 5000,\n    disableUnicode: true,\n    suppressExitCode: true,\n    ignoreRedirects: true\n}, callback);\n```\n\n----------------------------------------\n\nTITLE: Newman V2 CLI Reporter Example\nDESCRIPTION: Example of running Newman V2 with various reporter options\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_15\n\nLANGUAGE: terminal\nCODE:\n```\nnewman --url https://a.com/collection.json --environment-url https://a.com/env.json --noColor --outputFile jsonOut.json --testReportFile xmlOut.xml --html htmlOutput.html --outputFileVerbose verboseOut.log\n```\n\n----------------------------------------\n\nTITLE: Newman V2 CLI Collection Run Example\nDESCRIPTION: Example of running a Newman collection with basic options in V2 CLI format\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_13\n\nLANGUAGE: terminal\nCODE:\n```\nnewman --collection collection.json --environment env.json --data data.csv --globals globals.json --number 2 --exportGlobals globalOut.json --exportEnvironment envOut.json --delay 10 --requestTimeout 5000 --noTestSymbols --tls --exitCode --whiteScreen --avoidRedirects --stopOnError\n```\n\n----------------------------------------\n\nTITLE: Disabling Colored Output in Newman V4 Library\nDESCRIPTION: JavaScript code to disable colored output when using Newman V4 as a library by setting the color option to 'off'.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nnewman.run({\n    collection: 'collection.json',\n    reporters: ['cli'],\n    color: 'off'\n}, callback);\n```\n\n----------------------------------------\n\nTITLE: Enabling Colored Output in Newman V3 Library\nDESCRIPTION: JavaScript code to enable colored output when using Newman V3 as a library by setting the color option to true.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nnewman.run({\n    collection: 'collection.json',\n    reporters: ['cli'],\n    color: true\n}, callback);\n```\n\n----------------------------------------\n\nTITLE: Disabling Colored Output in Newman V4 CLI\nDESCRIPTION: Command to disable colored output in Newman V4 using the --color flag with the 'off' parameter.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_7\n\nLANGUAGE: console\nCODE:\n```\n$ newman run collection.json --color off\n```\n\n----------------------------------------\n\nTITLE: Enabling Colored Output in Newman V4 CLI\nDESCRIPTION: Command to enable colored output in Newman V4 using the --color flag with the 'on' parameter.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n$ newman run collection.json --color on\n```\n\n----------------------------------------\n\nTITLE: Enabling Colored Output in Newman V3 CLI\nDESCRIPTION: Command to enable colored output in Newman V3 using the --color flag.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n$ newman run collection.json --color\n```\n\n----------------------------------------\n\nTITLE: CSV Format Example in Newman V5\nDESCRIPTION: Example of CSV input format used in Newman V5 with double quotes as the escape character, showing the equivalent of the V4 example.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_3\n\nLANGUAGE: csv\nCODE:\n```\nid, name\n\"\"\"1\"\"\", \"foo \"\"bar\"\" baz\"\n```\n\n----------------------------------------\n\nTITLE: Using Newman Docker with Custom Reporters (Generic)\nDESCRIPTION: Generic command pattern for running Newman with custom reporters. This command installs a custom reporter and runs a collection with it.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/README.md#2025-04-16_snippet_9\n\nLANGUAGE: terminal\nCODE:\n```\ndocker run -v \"<collection-directory>:/etc/newman\" --entrypoint /bin/<bash-or-sh> <image:tag> -c \"npm i -g newman-reporter-<reporter-name>; newman run sample-collection.json -r <reporter-name>\"\n```\n\n----------------------------------------\n\nTITLE: Generating CSR from a Private Key using OpenSSL\nDESCRIPTION: OpenSSL command to generate a Certificate Signing Request (CSR) from an existing private key. This command creates a server.csr file using server.key as the private key.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/test/fixtures/ssl/SSL.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -new -key server.key -out server.csr\n```\n\n----------------------------------------\n\nTITLE: Newman Folder Execution Command\nDESCRIPTION: Command syntax for running specific folders or requests within a collection using multiple folder flags.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n--folder f1 --folder f2 --folder r1 --folder r2\n```\n\n----------------------------------------\n\nTITLE: Newman Run Callback Function Signature in JavaScript\nDESCRIPTION: The callback function signature for newman.run() which receives error and summary objects. The summary contains detailed information about the collection run results.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/README.md#2025-04-16_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nnewman.run~callback(error: _object_ , summary: _object_)\n```\n\n----------------------------------------\n\nTITLE: Cloning the Newman Repository\nDESCRIPTION: Git command to clone the Newman repository from GitHub, necessary if you want to build the Docker image yourself.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/docker/README.md#2025-04-16_snippet_2\n\nLANGUAGE: terminal\nCODE:\n```\ngit clone https://github.com/postmanlabs/newman.git\n```\n\n----------------------------------------\n\nTITLE: Enabling Colored Output in Newman V4 Library\nDESCRIPTION: JavaScript code to enable colored output when using Newman V4 as a library by setting the color option to 'on'.\nSOURCE: https://github.com/postmanlabs/newman/blob/develop/MIGRATION.md#2025-04-16_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nnewman.run({\n    collection: 'collection.json',\n    reporters: ['cli'],\n    color: 'on'\n}, callback);\n```"
  }
]
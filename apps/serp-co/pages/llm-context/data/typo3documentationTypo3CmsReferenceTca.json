[
  {
    "owner": "typo3-documentation",
    "repo": "typo3cms-reference-tca",
    "content": "TITLE: Inline Type Code Snippet\nDESCRIPTION: Example of inline type usage in TYPO3 TCA configuration, demonstrating how to define parent-child relations and handle different relationship types\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\ntype='inline'\n```\n\n----------------------------------------\n\nTITLE: Foreign Table Field Configuration\nDESCRIPTION: Defines the foreign table relation field configuration in TCA columns section.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Type.rst.txt#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n'foreign_table' => [\n    'exclude' => true,\n    'label' => 'Foreign table',\n    'config' => [\n        'type' => 'select',\n        'renderType' => 'selectSingle',\n        'foreign_table' => 'tx_styleguide_type',\n        'maxitems' => 1,\n        'default' => 0\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Language Fields in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet demonstrates how to enable a table for localization and translation in TYPO3's TCA. It sets up the necessary ctrl settings for language handling, including languageField, transOrigPointerField, translationSource, and transOrigDiffSourceField.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/BestPractises/LanguageFields.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nreturn [\n    'ctrl' => [\n        'languageField' => 'sys_language_uid',\n        'transOrigPointerField' => 'l10n_parent',\n        'translationSource' => 'l10n_source',\n        'transOrigDiffSourceField' => 'l10n_diffsource',\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring a Rich Text Editor Field with Minimal Configuration in TYPO3 TCA\nDESCRIPTION: This snippet shows how to define a Rich Text Editor field in TYPO3's TCA. It enables the rich text editor with a 'minimal' configuration preset, which provides a simplified toolbar and reduced feature set compared to default RTE configurations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Rte4.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'rte_4' => [\n            'label' => 'rte_4 richtextConfiguration=minimal',\n            'config' => [\n                'type' => 'text',\n                'enableRichtext' => true,\n                'richtextConfiguration' => 'minimal',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Select Field with L10n Display\nDESCRIPTION: Demonstrates setting defaultAsReadonly option for a select field with language display configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/Examples.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['tt_content']['columns']['header']['l10n_mode'] = ''\n```\n\n----------------------------------------\n\nTITLE: Override Foreign Selector Field Target\nDESCRIPTION: The snippet demonstrates how to override the foreign selector field target config in TYPO3's TCA within FAL inline relations. It is configured through 'foreign_selector' property adjustments.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Examples.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\nliteralinclude:: _Snippets/_overrideChildTcaForeignSelector.php\n    :caption: EXT:my_extension/Configuration/TCA/Overrides/tt_content.php\n```\n\n----------------------------------------\n\nTITLE: Configuring a Simple Text Area in TYPO3 TCA\nDESCRIPTION: This code snippet shows how to configure a simple text area field in TYPO3's Table Configuration Array (TCA). It defines a text type with various configuration options including cols, rows, eval rules, and placeholder text.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'bodytext' => [\n            'label' => 'Text',\n            'config' => [\n                'type' => 'text',\n                'cols' => 40,\n                'rows' => 15,\n                'eval' => 'trim',\n                'placeholder' => 'Insert your text here',\n                'default' => '',\n            ],\n        ]\n    ]\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Simple Category Field in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to set up a simple category field in TYPO3 TCA. It allows multiple categories to be selected and displays a category tree. The relationship is stored in the sys_category_record_mm table.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/Examples.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA']['someTable']['columns']['categories'] = [\n    'exclude' => true,\n    'label' => 'Categories',\n    'config' => [\n        'type' => 'category',\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Using Custom Evaluation in TCA Configuration\nDESCRIPTION: Example of implementing a custom evaluation rule in a TCA configuration for a TYPO3 extension table.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/Index.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n'title' => [\n    'label' => 'Title',\n    'config' => [\n        'type' => 'input',\n        'size' => 30,\n        'eval' => '\\\\MyVendor\\\\MyExtension\\\\Evaluation\\\\ExampleEvaluation',\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Custom Evaluation Class for TYPO3 TCA Input Fields\nDESCRIPTION: Example implementation of a custom evaluation class for TCA input fields with client-side and server-side validation methods.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/Index.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\ndeclare(strict_types=1);\n\nnamespace MyVendor\\MyExtension\\Evaluation;\n\n/**\n * Class for field value validation/evaluation to be used in 'eval' of TCA\n */\nclass ExampleEvaluation\n{\n    /**\n     * JavaScript code for client side validation/evaluation\n     */\n    public function returnFieldJS(): string\n    {\n        return 'return value;';\n    }\n\n    /**\n     * Server-side validation/evaluation on opening the record\n     *\n     * @param string $value The field value to be evaluated\n     * @return string Evaluated field value\n     */\n    public function deevaluateFieldValue(string $value): string\n    {\n        return $value;\n    }\n\n    /**\n     * Server-side validation/evaluation on saving the record\n     *\n     * @param string $value The field value to be evaluated\n     * @return string Evaluated field value\n     */\n    public function evaluateFieldValue(string $value): string\n    {\n        return $value;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Tree Element in TYPO3 TCA (PHP)\nDESCRIPTION: This code snippet defines the TCA configuration for a 'select_tree_1' field. It sets up a select tree element linked to the 'pages' table, with options for showing headers, expanding all items, and including static items. The configuration also specifies size, ordering, and allows language synchronization.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectTree1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'select_tree_1' => [\n            'label' => 'select_tree_1 pages, showHeader=true, expandAll=true, size=20, order by sorting, static items, description',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectTree',\n                'foreign_table' => 'pages',\n                'foreign_table_where' => 'ORDER BY pages.sorting',\n                'size' => 20,\n                'items' => [\n                    [\n                        'label' => 'static from tca 4711',\n                        'value' => 4711,\n                    ],\n                    [\n                        'label' => 'static from tca 4712',\n                        'value' => 4712,\n                    ],\n                ],\n                'behaviour' => [\n                    'allowLanguageSynchronization' => true,\n                ],\n                'treeConfig' => [\n                    'parentField' => 'pid',\n                    'appearance' => [\n                        'expandAll' => true,\n                        'showHeader' => true,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Implementing ItemsProcFunc Method for Checkbox Processing\nDESCRIPTION: Shows the implementation of an itemsProcFunc method that populates checkbox items dynamically. The method fills the $params['items'] array with the desired checkbox options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/Examples.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nnamespace MyVendor\\MyExtension\\UserFunction;\n\nclass ItemsProcFunc\n{\n    public function getItems(array &$params): void\n    {\n        $params['items'] = [\n            ['Green', 0],\n            ['Red', 1],\n            ['Blue', 2],\n        ];\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining readOnly in TCA\nDESCRIPTION: This snippet defines the 'readOnly' property within the TCA configuration for a field. When set to true, the field will be rendered as read-only in the backend, preventing direct user editing. However, the DataHandler can still modify the field's value.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: TYPO3 TCA\nCODE:\n```\n..  confval:: readOnly\n    :name: select-checkbox-readOnly\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n    :type: boolean\n    :Scope: Display\n\n    Renders the field in a way that the user can see the value but cannot edit it.\n\n    ..  warning::\n        This property affects only the display. It is still possible to\n        write to those fields when using the :ref:`DataHandler <t3coreapi:tce>`.\n```\n\n----------------------------------------\n\nTITLE: Simple FlexForm XML DataStructure Configuration\nDESCRIPTION: Demonstrates a basic FlexForm configuration with a page selection field, loaded from an external XML file\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/Examples.rst#2025-04-16_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\nActual XML content not fully provided in input text\n```\n\n----------------------------------------\n\nTITLE: Configuring Rich Text Editor Field in TYPO3 TCA (PHP)\nDESCRIPTION: This code snippet demonstrates how to configure a rich text editor field in TYPO3's Table Configuration Array (TCA). It defines a field 'rte_1' with a label, description, and enables rich text functionality.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Rte1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'rte_1' => [\n            'label' => 'rte_1 description',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'text',\n                'enableRichtext' => true,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Detailed Configuration of a TYPO3 Table (PHP)\nDESCRIPTION: This code snippet demonstrates the internal structure of a TCA entry for a specific table, detailing how to organize various sections such as 'ctrl', 'columns', 'types', and 'palettes'. This structure allows full customization of how the table is displayed and processed in TYPO3.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Introduction/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['tx_examples_haiku'] = [\n    'ctrl' => [\n        // ....\n    ],\n    'columns' => [\n        // ....\n    ],\n    'types' => [\n        // ....\n    ],\n    'palettes' => [\n        // ....\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Evaluation Rules in TYPO3 ext_localconf.php\nDESCRIPTION: Example of registering a custom evaluation class for TCA input fields in the ext_localconf.php file of a TYPO3 extension.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/Index.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\ndeclared(strict_types=1);\n\n// Register evaluations for TCA\n$GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']['tce']['formevals']['\\\\MyVendor\\\\MyExtension\\\\Evaluation\\\\ExampleEvaluation'] = '';\n\n```\n\n----------------------------------------\n\nTITLE: Configuring TYPO3 TCA Control Section in PHP\nDESCRIPTION: Defines the control section of a TCA configuration for a TYPO3 table. Includes settings for title, timestamps, sorting, versioning, language handling, and access control fields. The configuration is from the TYPO3 styleguide extension example.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/TxStyleguideCtrlCommon.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'ctrl' => [\n        'title' => 'Form engine - Common table control',\n        'label' => 'title',\n        'descriptionColumn' => 'description',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'delete' => 'deleted',\n        'sortby' => 'sorting',\n        'default_sortby' => 'title',\n        'versioningWS' => true,\n        'rootLevel' => -1,\n        'iconfile' => 'EXT:styleguide/Resources/Public/Icons/tx_styleguide.svg',\n        'languageField' => 'sys_language_uid',\n        'transOrigPointerField' => 'l10n_parent',\n        'transOrigDiffSourceField' => 'l10n_diffsource',\n        'translationSource' => 'l10n_source',\n        'searchFields' => 'title,description',\n        'enablecolumns' => [\n            'disabled' => 'hidden',\n            'starttime' => 'starttime',\n            'endtime' => 'endtime',\n        ],\n        'security' => [\n            'ignorePageTypeRestriction' => true,\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Inline Field with Combination and Localization in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet defines the TCA configuration for an inline field 'inline_1'. It sets up a relation to a foreign table 'tx_styleguide_inline_usecombination_mm' with a selector and unique constraint. The configuration includes appearance settings for combination usage, collapsing, and localization features.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/InlineUsecombinationcInline1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'inline_1' => [\n            'label' => 'inline_1',\n            'config' => [\n                'type' => 'inline',\n                'foreign_table' => 'tx_styleguide_inline_usecombination_mm',\n                'foreign_field' => 'select_parent',\n                'foreign_selector' => 'select_child',\n                'foreign_unique' => 'select_child',\n                'maxitems' => 9999,\n                'appearance' => [\n                    'newRecordLinkAddTitle' => 1,\n                    'useCombination' => true,\n                    'collapseAll' => false,\n                    'levelLinksPosition' => 'top',\n                    'showSynchronizationLink' => 1,\n                    'showPossibleLocalizationRecords' => 1,\n                    'showAllLocalizationLink' => 1,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Input Field in TYPO3 TCA PHP\nDESCRIPTION: This snippet demonstrates the basic structure of a field definition in TYPO3's Table Configuration Array (TCA). It configures an input field named 'input_1' with a label, type, and various configuration options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n'input_1' => [\n    'label' => 'input_1',\n    'config' => [\n        'type' => 'input',\n        'size' => 30,\n        'eval' => 'trim',\n        'max' => 255,\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Group Field with Backend Users and Groups Selection in PHP\nDESCRIPTION: This code configures a TYPO3 TCA group field named 'group_db_1' that allows selection of backend users and groups. It enables three field controls: editPopup for editing selected records, addRecord for creating new records, and listModule for opening the list module with the selected table.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/GroupDb1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'group_db_1' => [\n            'label' => 'group_db_1 allowed=be_users,be_groups description',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'group',\n                'allowed' => 'be_users,be_groups',\n                'fieldControl' => [\n                    'editPopup' => [\n                        'disabled' => false,\n                    ],\n                    'addRecord' => [\n                        'disabled' => false,\n                    ],\n                    'listModule' => [\n                        'disabled' => false,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Field with Long Default Text in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet demonstrates how to configure a text field in TYPO3's TCA. It sets up a field named 'text_5' with wrap set to 'off' and a long default text. This configuration is typically used in the TYPO3 backend for content management.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text5.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'text_5' => [\n            'label' => 'text_5',\n            'description' => 'wrap=off, long default text',\n            'config' => [\n                'type' => 'text',\n                'wrap' => 'off',\n                'default' => 'This textbox has wrap set to \"off\", so these long paragraphs should appear in one line: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean non luctus elit. In sed nunc velit. Donec gravida eros sollicitudin ligula mollis id eleifend mauris laoreet. Donec turpis magna, pulvinar id pretium eu, blandit et nisi. Nulla facilisi. Vivamus pharetra orci sed nunc auctor condimentum. Aenean volutpat posuere scelerisque. Nullam sed dolor justo. Pellentesque id tellus nunc, id sodales diam. Sed rhoncus risus a enim lacinia tincidunt. Aliquam ut neque augue.',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Adding Custom FieldInformation for Inline Type\nDESCRIPTION: This snippet demonstrates adding a custom 'fieldInformation' for an inline type field in TYPO3's 'tt_content'. It outlines the creation of a field information node, its registration, and inclusion in the container configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Examples.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nliteralinclude:: _Snippets/_DemoFieldInformation.php\n    :caption: EXT:my_extension/Classes/FormEngine/FieldInformation/DemoFieldInformation.php\n```\n\nLANGUAGE: php\nCODE:\n```\nliteralinclude:: _Snippets/_ext_localconf.php\n    :caption: EXT:my_extension/ext_localconf.php\n```\n\nLANGUAGE: php\nCODE:\n```\nliteralinclude:: _Snippets/_tt_content.php\n    :caption: EXT:my_extension/Configuration/TCA/Overrides/tt_content.php\n```\n\n----------------------------------------\n\nTITLE: SelectSingle Example 10: Single Value from List\nDESCRIPTION: This snippet showcases selecting a single value from a predefined list of elements. It demonstrates how to define the options directly within the TCA configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/Index.rst#2025-04-16_snippet_2\n\nLANGUAGE: typoscript\nCODE:\n```\n\"\"\"\n\\t\\t'some_field' => [\n\\t\\t\\t'label' => 'LLL:EXT:your_ext/Resources/Private/Language/locallang_db.xlf:your_table.some_field',\n\\t\\t\\t'config' => [\n\\t\\t\\t\\t'type' => 'select',\n\\t\\t\\t\\t'renderType' => 'selectSingle',\n\\t\\t\\t\\t'items' => [\n\\t\\t\\t\\t\\t['LLL:EXT:your_ext/Resources/Private/Language/locallang_db.xlf:your_table.some_field.item_1', 1],\n\\t\\t\\t\\t\\t['LLL:EXT:your_ext/Resources/Private/Language/locallang_db.xlf:your_table.some_field.item_2', 2],\n\\t\\t\\t\\t\\t['LLL:EXT:your_ext/Resources/Private/Language/locallang_db.xlf:your_table.some_field.item_3', 3],\n\\t\\t\\t\\t],\n\\t\\t\\t\\t'size' => 1,\n\\t\\t\\t\\t'minitems' => 0,\n\\t\\t\\t\\t'maxitems' => 1,\n\\t\\t\\t],\n\\t\\t],\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: SelectSingle Example 3: Static and Database Values\nDESCRIPTION: This snippet demonstrates a simple select dropdown with both static and database values. It shows how to configure a `selectSingle` field to display options from a predefined list and a database table.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n\"\"\"\n\\t\\t'some_field' => [\n\\t\\t\\t'label' => 'LLL:EXT:your_ext/Resources/Private/Language/locallang_db.xlf:your_table.some_field',\n\\t\\t\\t'config' => [\n\\t\\t\\t\\t'type' => 'select',\n\\t\\t\\t\\t'renderType' => 'selectSingle',\n\\t\\t\\t\\t'items' => [\n\\t\\t\\t\\t\\t['LLL:EXT:your_ext/Resources/Private/Language/locallang_db.xlf:your_table.some_field.item_1', 'item_1'],\n\\t\\t\\t\\t\\t['LLL:EXT:your_ext/Resources/Private/Language/locallang_db.xlf:your_table.some_field.item_2', 'item_2'],\n\\t\\t\\t\\t],\n\\t\\t\\t\\t'foreign_table' => 'your_foreign_table',\n\\t\\t\\t\\t'size' => 1,\n\\t\\t\\t\\t'minitems' => 0,\n\\t\\t\\t\\t'maxitems' => 1,\n\\t\\t\\t],\n\\t\\t],\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Storing FlexForm Data as XML in TYPO3\nDESCRIPTION: The content of FlexForm elements is saved as XML using the `\\TYPO3\\CMS\\Core\\Utility\\GeneralUtility::array2xml()` function. This function converts the internal PHP array into an XML structure that can be stored in the database field associated with the FlexForm.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/FlexformSyntax.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"\\TYPO3\\CMS\\Core\\Utility\\GeneralUtility::array2xml()\"\n```\n\n----------------------------------------\n\nTITLE: Trimmed Input Field Configuration in TYPO3 TCA\nDESCRIPTION: Example of an input field with the 'trim' evaluation rule, which removes whitespace before storing the value in the database.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/Index.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n'title' => [\n    'label' => 'Title',\n    'config' => [\n        'type' => 'input',\n        'size' => 30,\n        'eval' => 'trim'\n    ]\n],\n```\n\n----------------------------------------\n\nTITLE: Adding a Focus Area to Crop Variants in PHP\nDESCRIPTION: This snippet adds a focus area within crop variants in TYPO3's TCA, ensuring key sections of an image remain visible. Data is persisted to the database, usable with the `<f:image />` ViewHelper.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/Index.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n..  literalinclude:: _Snippets/_focusAreaCropVariants.php\n```\n\n----------------------------------------\n\nTITLE: Configuring TYPO3 TCA Palettes with Various Options\nDESCRIPTION: This code defines multiple palette configurations in TYPO3's Table Configuration Array (TCA). It demonstrates various palette options including basic field grouping, labeled palettes with descriptions, linebreaks for visual structuring, and hidden palettes. Each palette groups related fields with different formatting options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Palettes.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'palettes' => [\n        'palette_1' => [\n            'label' => 'palette_1',\n            'description' => 'palette description',\n            'showitem' => 'palette_1_1, palette_1_3',\n        ],\n        'palette_2' => [\n            'showitem' => 'palette_2_1',\n        ],\n        'palette_3' => [\n            'showitem' => 'palette_3_1, palette_3_2',\n        ],\n        'palette_4' => [\n            'showitem' => 'palette_4_1, palette_4_2, palette_4_3, --linebreak--, palette_4_4',\n        ],\n        'palette_5' => [\n            'showitem' => 'palette_5_1, --linebreak--, palette_5_2',\n        ],\n        'palette_6' => [\n            'showitem' => 'palette_6_1',\n            'isHiddenPalette' => true,\n        ],\n        'palette_7' => [\n            'showitem' => 'palette_7_1',\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Columns in Parent Table with 1:n Relation\nDESCRIPTION: This snippet demonstrates how to configure columns in a parent TYPO3 table to manage a 1:n relation with inline children. The setup involves defining the TCA for a parent table and its relation to child records.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Examples.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\ninclude:: /CodeSnippets/Inline1nInline1.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Select Field with Sorted Items in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a single select field named 'select_single_18' with four tree options that are automatically sorted alphabetically by label. The configuration includes renderType specification, item definitions with labels and values, and sorting preferences.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle18.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_single_18' => [\n            'label' => 'select_single_18',\n            'description' => 'sortItems label asc',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'Plum tree',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'Walnut tree',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'Apple tree',\n                        'value' => 3,\n                    ],\n                    [\n                        'label' => 'Cherry tree',\n                        'value' => 4,\n                    ],\n                ],\n                'sortItems' => [\n                    'label' => 'asc',\n                ],\n                'size' => 4,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Backend Layout Wizard in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a text field using the belayoutwizard render type. The configuration creates a 2x2 grid layout with left sidebar, main content, and footer areas, specifying column positions and layout structure.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text20.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'text_20' => [\n            'label' => 'text_20',\n            'description' => 'renderType=belayoutwizard',\n            'config' => [\n                'type' => 'text',\n                'renderType' => 'belayoutwizard',\n                'default' => '\nbackend_layout {\n  colCount = 2\n  rowCount = 2\n  rows {\n    1 {\n      columns {\n        1 {\n          name = Left\n          rowspan = 2\n          colPos = 1\n        }\n        2 {\n          name = Main\n          colPos = 0\n        }\n      }\n    }\n    2 {\n      columns {\n        1 {\n          name = Footer\n          colPos = 24\n        }\n      }\n    }\n  }\n}',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Override Crop Variants in TCA Config\nDESCRIPTION: The snippet overrides the default crop variants within a FAL relation configuration in TYPO3's TCA. It demonstrates customization of visual media cropping settings for child records.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Examples.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nliteralinclude:: _Snippets/_overrideChildTcaCropVariants.php\n    :caption: EXT:my_extension/Configuration/TCA/Overrides/tt_content.php\n```\n\n----------------------------------------\n\nTITLE: Configuring a Single-Select Field with MM Relation in TYPO3 TCA\nDESCRIPTION: This code configures a single-select form field that establishes a many-to-many relationship between tables. It references a foreign table 'tx_styleguide_staticdata' and defines the junction table 'tx_styleguide_elements_select_single_15_mm' for storing the relation data.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle15.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_single_15' => [\n            'label' => 'select_single_15 foreign_table',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'foreign_table' => 'tx_styleguide_staticdata',\n                'MM' => 'tx_styleguide_elements_select_single_15_mm',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring a Backend Layout Editor in TYPO3 TCA\nDESCRIPTION: This code snippet demonstrates how to configure a backend layout editor in TYPO3's TCA. It uses the 'belayoutwizard' renderType to create an interface for configuring backend layouts with a specified number of columns and rows.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Index.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'config' => [\n            'label' => 'LLL:EXT:frontend/Resources/Private/Language/locallang_tca.xlf:backend_layout.config',\n            'config' => [\n                'type' => 'text',\n                'renderType' => 'belayoutwizard',\n                'default' => '',\n            ]\n        ]\n    ]\n];\n```\n\n----------------------------------------\n\nTITLE: Value Picker Configuration for Input Fields in TYPO3 TCA\nDESCRIPTION: An example of an input field with a value picker that allows users to select from predefined values. The valuePicker property provides a dropdown menu with these values.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/Index.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'title' => [\n    'label' => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:examples.input_33.title',\n    'description' => 'Input field with a value picker.',\n    'config' => [\n        'type' => 'input',\n        'size' => 30,\n        'eval' => 'trim',\n        'valuePicker' => [\n            'items' => [\n                ['Pick 1', 'pick1'],\n                ['Pick 2', 'pick2'],\n                ['Pick 3', 'pick3'],\n            ],\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Complex Display Conditions in FlexForm (XML)\nDESCRIPTION: This XML snippet demonstrates how to define complex display conditions within a FlexForm, using 'and' and 'or' elements.  The structure mirrors the PHP example, ensuring that the field is only shown if the specified conditions are met.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/DisplayConditions.rst#2025-04-16_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n    <displayCond>\n        <and>\n            <value1>FIELD:sys_language_uid:=:0</value1>\n            <or>\n                <value1>FIELD:CType:=:text</value1>\n                <value2>FIELD:header:=:Example</value2>\n            </or>\n        </and>\n    </displayCond>\n```\n\n----------------------------------------\n\nTITLE: FlexForm with Two Section Containers\nDESCRIPTION: Shows a FlexForm configuration utilizing two flex section containers for complex form structures\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/Examples.rst#2025-04-16_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\nFlexForm with multiple section containers\n```\n\n----------------------------------------\n\nTITLE: Configuring a Single Select Field with Custom Sorting in TYPO3 TCA\nDESCRIPTION: This snippet defines a TCA configuration for a single select field named 'select_single_20'. It includes predefined items representing tree types and implements a custom sorting function. The field is rendered as a dropdown with 4 visible options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle20.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'select_single_20' => [\n            'label' => 'select_single_20',\n            'description' => 'sortItems custom',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'Plum tree',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'Walnut tree',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'Apple tree',\n                        'value' => 3,\n                    ],\n                    [\n                        'label' => 'Cherry tree',\n                        'value' => 4,\n                    ],\n                ],\n                'sortItems' => [\n                    'tx_styleguide' => 'TYPO3\\\\CMS\\\\Styleguide\\\\UserFunctions\\\\FormEngine\\\\SelectItemSorter->sortReverseTitles',\n                ],\n                'size' => 4,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring SelectTree Rendering for Pages Selection in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a select field with tree rendering for page selection. It allows selecting up to 4 items, shows 10 items at once, makes levels 0 and 1 non-selectable, and hides the header of the tree. This field uses the 'pid' field as the parent field for creating the tree structure.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectTree2.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_tree_2' => [\n            'label' => 'select_tree_2 pages, showHeader=false, nonSelectableLevels=0,1, maxitems=4, size=10',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectTree',\n                'foreign_table' => 'pages',\n                'maxitems' => 4,\n                'size' => 10,\n                'treeConfig' => [\n                    'parentField' => 'pid',\n                    'appearance' => [\n                        'expandAll' => true,\n                        'showHeader' => false,\n                        'nonSelectableLevels' => '0,1',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Record Type Column in TYPO3 TCA\nDESCRIPTION: This snippet defines the \\\"record_type\\\" column as a select field with options in the TYPO3 TCA configuration. This column determines the type of records and drives the dynamic form adjustments in TYPO3 backends.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Examples/_40_OptionalTypes.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n..  include:: /CodeSnippets/RecordType.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring a Text Table Editor in TYPO3 TCA\nDESCRIPTION: This code snippet shows how to configure a text table editor in TYPO3's TCA. It uses the 'textTable' renderType to create an interface for managing tabular content with controls for table rows, columns, and cell content.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Index.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'bodytext' => [\n            'label' => 'Content:',\n            'config' => [\n                'type' => 'text',\n                'renderType' => 'textTable',\n                'cols' => 40,\n                'rows' => 15,\n                'default' => '',\n            ],\n            'defaultExtras' => 'nowrap',\n        ]\n    ]\n];\n```\n\n----------------------------------------\n\nTITLE: Creating TYPO3 Styleguide Elements Table\nDESCRIPTION: SQL CREATE TABLE statement that defines a basic TYPO3 styleguide elements table with a checkbox field. The table includes a single integer column 'checkbox_3' with a default value of 0.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Manual/SqlCheckbox3.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE tx_styleguide_elements_basic (\n   checkbox_3 int(11) DEFAULT '0' NOT NULL,\n);\n```\n\n----------------------------------------\n\nTITLE: Defining TCA Palettes\nDESCRIPTION: This snippet demonstrates how palettes are defined within the 'palettes' section of a table's TCA array in TYPO3. Palettes allow for grouping related fields together in the backend interface.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Palettes/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"..  include:: /CodeSnippets/Palettes.rst.txt\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Checkbox with Maximum Records Checked Validation in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to configure a checkbox field in TYPO3's TCA with a validation that limits the number of records that can have this checkbox checked. It uses the 'maximumRecordsChecked' evaluation feature with a limit of 1 record.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Checkbox7.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'checkbox_7' => [\n            'label' => 'checkbox_7',\n            'description' => 'eval=maximumRecordsChecked, table wide',\n            'config' => [\n                'type' => 'check',\n                'eval' => 'maximumRecordsChecked',\n                'validation' => [\n                    'maximumRecordsChecked' => 1,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining otherLanguageContent in TYPO3\nDESCRIPTION: This snippet specifies the configuration path for 'otherLanguageContent' in the field wizard. It is designed to be an array and plays a crucial role in managing content across different languages.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n..  confval:: otherLanguageContent\n    :name: select-byside-fieldWizard-otherLanguageContent\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n    :type: array\n\n    For details see :confval:`fieldWizard-otherLanguageContent`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Search AND WHERE Conditions in TYPO3 TCA\nDESCRIPTION: Demonstrates how to add additional SQL WHERE conditions when searching a specific field. This example restricts searching the 'some_date' field to only content elements of types 'type_x' or 'type_y', using the special field quoting syntax for DBAL compatibility.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Search.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$temporaryColumns['some_date'] => [\n    'config' => [\n        'search' => [\n            'andWhere' => '{#CType}=\\'type_x\\' OR {#CType}=\\'type_y\\'',\n        ],\n        // ...\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Defining Fields for Asymmetric Intermediate Table\nDESCRIPTION: The code defines the necessary fields for the intermediate table used in an anti-symmetric relationship setup in TYPO3. It showcases field configurations used in linking parent and child records.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Examples.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\ninclude:: /CodeSnippets/Manual/InlineMnMm.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Input Field with Language Settings in TYPO3\nDESCRIPTION: Defines a TCA configuration for an input field with language synchronization capabilities. Includes localization mode settings, field label, description, and behavior configuration for language handling.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Input1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'input_1' => [\n            'l10n_mode' => 'prefixLangTitle',\n            'label' => 'input_1 description',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'input',\n                'behaviour' => [\n                    'allowLanguageSynchronization' => true,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Single Field with Item Groups in TYPO3 TCA\nDESCRIPTION: This code snippet demonstrates how to configure a single select field with items organized into groups. The configuration uses 'itemGroups' to define logical groupings of select options, and assigns individual items to these groups using the 'group' property in each item definition.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle16.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_single_16' => [\n            'label' => 'select_single_16',\n            'description' => 'itemGroups',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'item 1',\n                        'value' => 1,\n                        'group' => 'group1',\n                    ],\n                    [\n                        'label' => 'item 2',\n                        'value' => 2,\n                        'group' => 'group1',\n                    ],\n                    [\n                        'label' => 'item 3',\n                        'value' => 3,\n                        'group' => 'group3',\n                    ],\n                    [\n                        'label' => 'item 4',\n                        'value' => 3,\n                    ],\n                ],\n                'itemGroups' => [\n                    'group1' => 'Group 1 with items',\n                    'group2' => 'Group 2 with no items',\n                    'group3' => 'Group 3 with items',\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Implementing itemsProcFunc Handler in TYPO3\nDESCRIPTION: Implementation of a custom itemsProcFunc handler class that adds additional items to the select field options. The method demonstrates how to append new items to the existing items array passed by reference.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/ItemsProcFunc.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n/**\n * A user function used in select_2\n */\nclass TypeSelect2ItemsProcFunc\n{\n    /**\n     * Add two items to existing ones\n     *\n     * @param array $params\n     */\n    public function itemsProcFunc(&$params): void\n    {\n        $params['items'][] = ['label' => 'item 1 from itemProcFunc()', 'value' => 'val1'];\n        $params['items'][] = ['label' => 'item 2 from itemProcFunc()', 'value' => 'val2'];\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Checkbox Field with Icons in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a select checkbox field named 'select_checkbox_3' with multiple items. Each item can have a label, value, icon, and description. Shows how to include both direct descriptions and language reference descriptions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectCheckbox3.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_checkbox_3' => [\n            'label' => 'select_checkbox_3 icons, description',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectCheckBox',\n                'items' => [\n                    [\n                        'label' => 'foo 1',\n                        'value' => 1,\n                        'description' => [\n                            'title' => 'optional title',\n                            'description' => 'optional description',\n                        ],\n                    ],\n                    [\n                        'label' => 'foo 2',\n                        'value' => 2,\n                        'icon' => 'EXT:styleguide/Resources/Public/Icons/tx_styleguide.svg',\n                        'description' => 'LLL:EXT:styleguide/Resources/Private/Language/locallang.xlf:translatedHelpTextForSelectCheckBox3',\n                    ],\n                    [\n                        'label' => 'foo 3',\n                        'value' => 3,\n                        'icon' => 'EXT:styleguide/Resources/Public/Icons/tx_styleguide.svg',\n                    ],\n                    [\n                        'label' => 'foo 4',\n                        'value' => 4,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring 'none' Field Type in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet demonstrates how to configure a 'none' field type in TYPO3's Table Configuration Array (TCA). The 'none' type is used for fields that should not be editable in the backend but may be used for other purposes.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/None1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'none_1' => [\n            'label' => 'none_1',\n            'description' => 'default',\n            'config' => [\n                'type' => 'none',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring TYPO3 TCA Slug Field with Generator Options\nDESCRIPTION: Defines a TCA configuration for a slug field named 'slug_5' that generates URL segments from two input fields. The configuration specifies generator options, disables parent page slug prefixing, sets fallback character, and enforces site-wide uniqueness.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Slug5.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'slug_5' => [\n            'label' => 'slug_5',\n            'config' => [\n                'type' => 'slug',\n                'generatorOptions' => [\n                    'fields' => [\n                        [\n                            'input_1',\n                            'input_2',\n                        ],\n                    ],\n                    'prefixParentPageSlug' => false,\n                ],\n                'fallbackCharacter' => '-',\n                'eval' => 'uniqueInSite',\n                'default' => '',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Select Field with Descending Value Sorting in TYPO3\nDESCRIPTION: This code defines a TCA configuration for a select field with items sorted in descending order by value. It creates a dropdown with tree types as options and specifies the sorting direction using the 'sortItems' parameter with a 'value' => 'desc' setting.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle19.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_single_19' => [\n            'label' => 'select_single_19',\n            'description' => 'sortItems value desc',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'Plum tree',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'Walnut tree',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'Apple tree',\n                        'value' => 3,\n                    ],\n                    [\n                        'label' => 'Cherry tree',\n                        'value' => 4,\n                    ],\n                ],\n                'sortItems' => [\n                    'value' => 'desc',\n                ],\n                'size' => 4,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Form Evaluation in TYPO3 TCA\nDESCRIPTION: Syntax for specifying vendor-specific custom form evaluations in TYPO3's Table Configuration Array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Eval.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nVendor\\Extension\\*\n```\n\n----------------------------------------\n\nTITLE: Configuring Anti-Symmetric Intermediate Table Attributes\nDESCRIPTION: The code snippet illustrates the configuration of an anti-symmetric intermediate table in a TYPO3 TCA setup. It shows how to utilize attributes for defining relationships between parent and child tables, including checkboxes.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Examples.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\ninclude:: /CodeSnippets/InlineMnInline1.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Defining Basic FlexForm Data Structure in TYPO3 CMS\nDESCRIPTION: This XML snippet defines a basic FlexForm data structure with a single sheet (sDEF) containing one input field. The structure includes the root T3DataStructure element, sheet definition, and field configuration specifications typical for TYPO3 FlexForms.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/FlexFormFile1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<T3DataStructure>\n    <sheets>\n        <sDEF>\n            <ROOT>\n                <sheetTitle>Sheet Title</sheetTitle>\n                <type>array</type>\n                <el>\n                    <input_1>\n                        <label>input_1</label>\n                        <config>\n                            <type>input</type>\n                        </config>\n                    </input_1>\n                </el>\n            </ROOT>\n        </sDEF>\n    </sheets>\n</T3DataStructure>\n```\n\n----------------------------------------\n\nTITLE: Configuring a Group Database Field in TYPO3 TCA\nDESCRIPTION: Example configuration for a TCA group field that allows multiple selections of 'tx_styleguide_staticdata' records. The configuration specifies the field type, enables the suggestion feature, restricts allowed records to 'tx_styleguide_staticdata', and enables selection of multiple records.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/GroupDb8.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'group_db_8' => [\n            'label' => 'group_db_8 allowed=tx_styleguide_staticdata, multiple',\n            'config' => [\n                'type' => 'group',\n                'hideSuggest' => false,\n                'allowed' => 'tx_styleguide_staticdata',\n                'multiple' => true,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring a TCA Select Field with onChange Reload in TYPO3\nDESCRIPTION: This snippet demonstrates how to configure a select field in TYPO3's TCA with the onChange property set to 'reload'. The configuration creates a single-select dropdown with three options and triggers a page reload when the value changes. This is useful for dynamically updating form fields based on selection.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectRequestupdate1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_requestUpdate_1' => [\n            'label' => 'select_requestUpdate_1',\n            'onChange' => 'reload',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'Just an item',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'bar',\n                        'value' => 'bar',\n                    ],\n                    [\n                        'label' => 'and yet another one',\n                        'value' => -1,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Grouped Select Field in TYPO3 TCA\nDESCRIPTION: This configuration defines a single select field with items organized into groups. It demonstrates how to create a select dropdown with options categorized into named groups, specify values and labels, and control the size of the select box.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle17.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_single_17' => [\n            'label' => 'select_single_16',\n            'description' => 'itemGroups, size=6',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'item 1',\n                        'value' => 1,\n                        'group' => 'group1',\n                    ],\n                    [\n                        'label' => 'item 2',\n                        'value' => 2,\n                        'group' => 'group1',\n                    ],\n                    [\n                        'label' => 'item 3',\n                        'value' => 3,\n                        'group' => 'group3',\n                    ],\n                    [\n                        'label' => 'item 4',\n                        'value' => 3,\n                    ],\n                ],\n                'itemGroups' => [\n                    'group1' => 'Group 1 with items',\n                    'group2' => 'Group 2 with no items',\n                    'group3' => 'Group 3 with items',\n                ],\n                'size' => 6,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Enabling Cascading Deletes in TYPO3\nDESCRIPTION: Describes the configuration for handling cascading deletes of sys_file_references when a parent record is deleted in TYPO3CMS. By default, deletion of a parent automatically deletes associated file references. This behavior can be disabled using this configuration and can also be overridden at the TSconfig level.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/File/_Properties/_Behaviour.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['enableCascadingDelete']\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimum File Attachments in TCA\nDESCRIPTION: This code snippet demonstrates how to configure TYPO3 TCA to enforce a minimum of one attached image using the 'minitems' property. This ensures that at least one file is required for saving the record. The configuration specifies the field type as 'file' and restricts the allowed file types to common image formats.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/File/_Properties/_Minitems.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'columns' => [\n        'image' => [\n            'label' => 'My one and only image',\n            'config' => [\n                'type' => 'file',\n                'minitems' => 1,\n                'maxitems' => 1,\n                'allowed' => 'common-image-types'\n            ],\n        ],\n    ],\n```\n\n----------------------------------------\n\nTITLE: Configuring Numeric Input Field with Slider in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to configure a numeric input field with slider functionality in TYPO3's Table Configuration Array (TCA). It includes settings for field size, validation, range constraints, default value, and slider properties like step size and width.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Input30.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'columns' => [\n    'input_30' => [\n        'exclude' => 1,\n        'label' => 'input_30',\n        'description' => 'slider step=10 width=200 eval=trim,int',\n        'config' => [\n            'type' => 'input',\n            'size' => 5,\n            'eval' => 'trim,int',\n            'range' => [\n                'lower' => -90,\n                'upper' => 90,\n            ],\n            'default' => 0,\n            'slider' => [\n                'step' => 10,\n                'width' => 200,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Inline MM Relation in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet defines a TCA configuration for an inline field with a many-to-many relation. It specifies the foreign table, MM table, and appearance settings for localization and synchronization features.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/InlineMmInline1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'inline_1' => [\n            'label' => 'inline_1',\n            'config' => [\n                'type' => 'inline',\n                'foreign_table' => 'tx_styleguide_inline_mm_child',\n                'MM' => 'tx_styleguide_inline_mm_child_rel',\n                'appearance' => [\n                    'showSynchronizationLink' => 1,\n                    'showAllLocalizationLink' => 1,\n                    'showPossibleLocalizationRecords' => 1,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Required Field Property in TYPO3 TCA\nDESCRIPTION: Sets whether a field requires a non-empty value before form submission is allowed. When set to true, the form cannot be saved if the field is empty. This property affects both display and processing behavior.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Required.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: required\n    :name: input-required\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display / Proc.\n    :Default: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Symmetric Inline Relations in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a symmetric many-to-many relationship between branches using inline fields. The configuration includes foreign table relations, sorting capabilities, and localization features with a maximum of 10 items allowed.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/InlineMnSymmetricBranches.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'branches' => [\n            'label' => 'branches',\n            'config' => [\n                'type' => 'inline',\n                'foreign_table' => 'tx_styleguide_inline_mnsymmetric_mm',\n                'foreign_field' => 'hotelid',\n                'foreign_sortby' => 'hotelsort',\n                'foreign_label' => 'branchid',\n                'symmetric_field' => 'branchid',\n                'symmetric_sortby' => 'branchsort',\n                'symmetric_label' => 'hotelid',\n                'maxitems' => 10,\n                'appearance' => [\n                    'showSynchronizationLink' => 1,\n                    'showAllLocalizationLink' => 1,\n                    'showPossibleLocalizationRecords' => 1,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Inline Checkbox Field in TYPO3 CMS TCA\nDESCRIPTION: This snippet defines a TCA configuration for a checkbox field named 'checkbox_16'. It sets up inline columns for days of the week, allowing users to select multiple days. The configuration uses the 'check' type and specifies labels for each day.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Checkbox16.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'checkbox_16' => [\n            'label' => 'checkbox_16',\n            'description' => 'cols=inline',\n            'config' => [\n                'type' => 'check',\n                'items' => [\n                    [\n                        'label' => 'Mo',\n                    ],\n                    [\n                        'label' => 'Tu',\n                    ],\n                    [\n                        'label' => 'We',\n                    ],\n                    [\n                        'label' => 'Th',\n                    ],\n                    [\n                        'label' => 'Fr',\n                    ],\n                    [\n                        'label' => 'Sa',\n                    ],\n                    [\n                        'label' => 'Su',\n                    ],\n                ],\n                'cols' => 'inline',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Basic TCA Check Field Code Reference\nDESCRIPTION: Code demonstrates how to configure a basic checkbox field in TYPO3 TCA. Shows the field type declaration and available render types including default checkbox, toggle, and labeled toggle options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\nrenderTypes are available:\n\n*   :ref:`default <columns-check-default>`: One or more checkboxes are displayed.\n*   :ref:`checkboxToggle <columns-check-checkboxToggle>`: Instead of checkboxes,\n    a toggle item is displayed.\n*   :ref:`checkboxLabeledToggle <columns-check-checkboxLabeledToggle>`: A toggle\n    switch where both states can be labelled (ON/OFF, Visible / Hidden or alike).\n    Its state can be inverted via :code:`invertStateDisplay`\n```\n\n----------------------------------------\n\nTITLE: Configuring a Single Select Field with File Folder Integration in TYPO3 TCA\nDESCRIPTION: This code configures a TCA select field that loads items from a file folder. It uses fileFolderConfig to specify the source folder (SVG icons), includes a dummy first entry, and enables the selectIcons field wizard to display thumbnails of the icons in the dropdown.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle7.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_single_7' => [\n            'label' => 'select_single_7 fileFolder, dummy first entry, selectIcons',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => '',\n                        'value' => 0,\n                    ],\n                ],\n                'fileFolderConfig' => [\n                    'folder' => 'EXT:styleguide/Resources/Public/Icons',\n                    'allowedExtensions' => 'svg',\n                    'depth' => 1,\n                ],\n                'fieldWizard' => [\n                    'selectIcons' => [\n                        'disabled' => false,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: FlexForm with Two Sheets Configuration\nDESCRIPTION: Demonstrates a FlexForm implementation with two separate sheets, each potentially having different structures and descriptions\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/Examples.rst#2025-04-16_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\nTwo-sheet FlexForm data structure configuration\n```\n\n----------------------------------------\n\nTITLE: Email TCA Type\nDESCRIPTION: The TCA type `email` is used to input email addresses. TYPO3 automatically generates the database field for this type, so developers don't need to define it in `ext_tables.sql`. Additionally, the softref definition `'softref' => 'email[subst]'` is automatically applied to all `email` fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Email/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\":php:`email`\"\n```\n\nLANGUAGE: PHP\nCODE:\n```\n:php:`'softref' => 'email[subst]'`\n```\n\nLANGUAGE: PHP\nCODE:\n```\n:php:`email`\n```\n\n----------------------------------------\n\nTITLE: Configuring a Single Select Field with Localization Display Settings in TYPO3 TCA\nDESCRIPTION: This code defines a TCA configuration for a 'select_single_13' field that uses the selectSingle renderType with localization display set to 'defaultAsReadonly'. The field includes two options ('foo' and 'bar') and is excluded from localization using l10n_mode.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle13.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_single_13' => [\n            'label' => 'select_single_13 l10n_display=defaultAsReadonly',\n            'l10n_mode' => 'exclude',\n            'l10n_display' => 'defaultAsReadonly',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'foo',\n                        'value' => 'foo',\n                    ],\n                    [\n                        'label' => 'bar',\n                        'value' => 'bar',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom User Function Formatting for None-Type Field in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to implement custom formatting for a none-type field using a user-defined function. It uses the 'user' format type and specifies a userFunc that references a custom PHP method from the Evoweb\\Example\\Utility\\MyCustomValue class.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/None/_Properties/_Format.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'aField' => [\n  'config' => [\n    'type' => 'none',\n    'format' => 'user',\n    'format.' => [\n        'userFunc' => 'Evoweb\\\\Example\\\\Utility\\\\MyCustomValue->getErrorMssg',\n    ],\n  ],\n],\n```\n\n----------------------------------------\n\nTITLE: Basic Link Field Configuration in TYPO3 TCA\nDESCRIPTION: Example configuration of a basic link field in TYPO3's TCA, demonstrating the basic structure and properties of a link field definition.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n_basic.php content not provided in input\n```\n\n----------------------------------------\n\nTITLE: Configuring a Rich Text Editor Field in TYPO3 TCA\nDESCRIPTION: This code snippet demonstrates how to configure a rich text editor (RTE) field in TYPO3's Table Configuration Array (TCA). It sets up a text field with a rich text editor enabled and configures various properties like default value, eval options, and related RTE configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'bodytext' => [\n            'label' => 'Text',\n            'config' => [\n                'type' => 'text',\n                'enableRichtext' => true,\n                'richtextConfiguration' => 'default',\n                'fieldControl' => [\n                    'fullScreenRichtext' => [\n                        'disabled' => false,\n                    ],\n                ],\n                'cols' => 40,\n                'rows' => 15,\n                'eval' => 'trim',\n                'default' => '',\n            ],\n        ]\n    ]\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Checkbox Items in TYPO3 TCA\nDESCRIPTION: Demonstrates how to configure multiple checkbox items in a TYPO3 TCA field. Each item in the array represents a checkbox with a label. The resulting value stored in the database will be an integer representing a bitmask based on the selected checkboxes.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_Items.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'items' => [\n    ['label' => 'Green tomatoes'], // Note these should be LLL references\n    ['label' => 'Red peppers'],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring a select_tree field for categories in TYPO3 TCA\nDESCRIPTION: This code snippet defines a TCA configuration for a selectTree field that displays and allows selection of sys_category records. It configures a hierarchical tree structure with specific appearance settings and filtering options for retrieving only root-level categories or their translations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectTree6.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_tree_6' => [\n            'label' => 'select_tree_6 categories',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectTree',\n                'foreign_table' => 'sys_category',\n                'foreign_table_where' => 'AND ({#sys_category}.{#sys_language_uid} = 0 OR {#sys_category}.{#l10n_parent} = 0) ORDER BY sys_category.sorting',\n                'size' => 20,\n                'treeConfig' => [\n                    'parentField' => 'parent',\n                    'appearance' => [\n                        'expandAll' => true,\n                        'showHeader' => true,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Select Field with itemsProcFunc in TYPO3\nDESCRIPTION: Example configuration for a select_single_2 field in TYPO3 TCA that uses itemsProcFunc to dynamically add items to a select dropdown. The configuration includes basic items and references a custom class method for additional items.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/ItemsProcFunc.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'select_single_2' => [\n    'exclude' => 1,\n    'label' => 'select_single_2 itemsProcFunc',\n    'config' => [\n        'type' => 'select',\n        'renderType' => 'selectSingle',\n        'items' => [\n            ['label' => 'foo', 'value' => 1],\n            ['label' => 'bar', 'value' => 'bar'],\n        ],\n        'itemsProcFunc' => TYPO3\\CMS\\Styleguide\\UserFunctions\\FormEngine\\TypeSelect2ItemsProcFunc::class . '->itemsProcFunc',\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Overriding Auto-created Columns in TCA Overrides File\nDESCRIPTION: Example of overriding an auto-created TCA column definition in a TCA Overrides file. This specific example changes the default value of the 'hidden' field to 1, making new pages disabled by default.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/AutoCreatedColumns.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['pages']['columns']['hidden']['config']['default'] = 1;\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Side-by-Side Select Field in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a multiple select field using many-to-many (MM) relations. The field uses selectMultipleSideBySide render type to display options from a foreign table with dynamic sizing between 3 and 10 items.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectMultiplesidebyside8.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_multiplesidebyside_8' => [\n            'label' => 'select_multiplesidebyside_8 foreign_table mm',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectMultipleSideBySide',\n                'foreign_table' => 'tx_styleguide_staticdata',\n                'MM' => 'tx_styleguide_elements_select_multiplesidebyside_8_mm',\n                'size' => 3,\n                'autoSizeMax' => 10,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring recordsOverview Field Wizard in TCA\nDESCRIPTION: The `recordsOverview` field wizard renders an overview of selected records, including their icons, click menus, and titles. It allows users to perform actions on the selected records directly and links record titles to their editing forms. This configuration resides under the `fieldWizard` property within the TCA column configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n        :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']\n        :type: array\n        :Scope: fieldWizard\n```\n\n----------------------------------------\n\nTITLE: Configuring TYPO3 TCA Checkbox with Labeled Toggle\nDESCRIPTION: Demonstrates how to configure a TCA checkbox field using checkboxLabeledToggle render type. The configuration includes labeled states for checked and unchecked conditions with inverted state display functionality.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Checkbox21.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'checkbox_21' => [\n            'label' => 'checkbox_21',\n            'description' => 'renderType=checkboxLabeledToggle single inverted state display',\n            'config' => [\n                'type' => 'check',\n                'renderType' => 'checkboxLabeledToggle',\n                'items' => [\n                    [\n                        'label' => 'foo',\n                        'labelChecked' => 'Enabled',\n                        'labelUnchecked' => 'Disabled',\n                        'invertStateDisplay' => true,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Group Fields with Filters\nDESCRIPTION: This snippet shows an example configuration for a TYPO3 TCA group field, specifically for a 'mother' field that only allows selection of female entries. The filter is applied using a user function from a custom PHP class, specifying criteria in the parameters.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_Filter.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'mother' => [\n    'label' => 'Mother',\n    'config' => [\n        'type' => 'group',\n        'allowed' => 'tx_myext_person',\n        'size' => 1,\n        'filter' => [\n            [\n                'userFunc' => \\Vendor\\Extension\\MyClass::class . '->doFilter',\n                'parameters' => [\n                    'evaluateGender' => 'female',\n                ],\n            ],\n        ],\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Code Inline Relation Types\nDESCRIPTION: Demonstrates the various relation types supported by the inline type, including 1:n, nested 1:n, and m:n relations with intermediate tables\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n1:n relations\nm:n relations with intermediate tables\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Checkbox Field with Dividers in TYPO3 TCA (PHP)\nDESCRIPTION: This code snippet defines a TCA configuration for a select checkbox field named 'select_checkbox_5'. It includes dividers and enables the expandAll option. The field is configured with multiple items, some of which are dividers.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectCheckbox5.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'select_checkbox_5' => [\n            'label' => 'select_checkbox_5 dividers, expandAll',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectCheckBox',\n                'appearance' => [\n                    'expandAll' => true,\n                ],\n                'items' => [\n                    [\n                        'label' => 'div 1',\n                        'value' => '--div--',\n                    ],\n                    [\n                        'label' => 'foo 1',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'foo 2',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'foo 3',\n                        'value' => 3,\n                    ],\n                    [\n                        'label' => 'div 2',\n                        'value' => '--div--',\n                    ],\n                    [\n                        'label' => 'foo 4',\n                        'value' => 4,\n                    ],\n                    [\n                        'label' => 'foo 5',\n                        'value' => 5,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Overriding Simple Group Field Entry Point in Typoscript\nDESCRIPTION: This Typoscript snippet demonstrates how to override the entry point for the simple group field defined in PHP. It specifically sets the entry point for 'tt_content' elements to a new page ID.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_ElementBrowserEntryPoints.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: typoscript\nCODE:\n```\nTCEFORM.my_table.simple_group.config.elementBrowserEntryPoints.tt_content = 321\n```\n\n----------------------------------------\n\nTITLE: Configuring typeicon_classes in TYPO3 TCA - PHP\nDESCRIPTION: Example configuration of typeicon_classes from the tt_content table showing how to map content types to icon identifiers. The configuration defines default and header content type icons using the TYPO3 Icon API.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_TypeiconClasses.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'typeicon_classes' => [\n    'default' => 'mimetypes-x-content-text',\n    'header' => 'mimetypes-x-content-header',\n    ...\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring editlock in TCA for preventing record editing by non-admin users\nDESCRIPTION: This example shows how to implement the editlock feature in a TYPO3 TCA configuration. It defines a checkbox field that, when checked, prevents non-admin users from editing the record. The configuration includes field definition in ctrl section and column configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Editlock.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\ndeclared(strict_types=1);\n\nreturn [\n    'ctrl' => [\n        'title' => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_haiku',\n        'label' => 'title',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'editlock' => 'is_locked',\n        'sortby' => 'sorting',\n        'delete' => 'deleted',\n        'enablecolumns' => [\n            'disabled' => 'hidden',\n        ],\n    ],\n    'columns' => [\n        'hidden' => [\n            'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.enabled',\n            'config' => [\n                'type' => 'check',\n                'renderType' => 'checkboxToggle',\n                'items' => [\n                    [\n                        0 => '',\n                        1 => '',\n                    ],\n                ],\n                'default' => 0,\n            ],\n        ],\n        'is_locked' => [\n            'label' => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_haiku.is_locked',\n            'config' => [\n                'type' => 'check',\n                'renderType' => 'checkboxToggle',\n                'items' => [\n                    [\n                        0 => '',\n                        1 => '',\n                    ]\n                ],\n            ],\n        ],\n        // other fields\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring select_singlebox_1 Field in TYPO3 TCA\nDESCRIPTION: This snippet shows how to define a select field with renderType 'selectSingleBox' in TYPO3 TCA. It includes configuration of multiple items with labels and values, as well as a divider to separate options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSinglebox1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_singlebox_1' => [\n            'label' => 'select_singlebox_1 description',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingleBox',\n                'items' => [\n                    [\n                        'label' => 'foo 1',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'foo 2',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'divider',\n                        'value' => '--div--',\n                    ],\n                    [\n                        'label' => 'foo 3',\n                        'value' => 3,\n                    ],\n                    [\n                        'label' => 'foo 4',\n                        'value' => 4,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Including File Field Configuration in TYPO3 TCA - PHP\nDESCRIPTION: This snippet demonstrates how to include a PHP file that defines TCA for a file field in TYPO3. It serves to set up the configuration for file attachments in TYPO3 records. The snippet requires TYPO3 CMS version 13.0 or higher, as it utilizes the automatic database field generation feature introduced in this version.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/File/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nreturn [\n    'ctrl' => [\n        'title' => 'My Table',\n        'label' => 'my_field',\n    ],\n    'columns' => [\n        'my_file_field' => [\n            'config' => [\n                'type' => 'file',\n                'uploadfolder' => 'user_uploads',\n                'maxitems' => 1,\n            ],\n        ],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Other Language Content Field Wizard\nDESCRIPTION: Specifies the configuration path for other language content field wizard in TYPO3 TCA, used to handle multilingual content display\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n```\n\n----------------------------------------\n\nTITLE: Input Field with Placeholder and NULL Handling in TYPO3 TCA\nDESCRIPTION: Configuration for an input field that includes a placeholder text and handles NULL values. It demonstrates the use of the 'placeholder' property and proper NULL value handling.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'title' => [\n    'label' => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:examples.input_28.title',\n    'description' => 'An input field with placeholder and proper NULL handling.',\n    'config' => [\n        'type' => 'input',\n        'size' => 30,\n        'placeholder' => 'Insert something interesting here',\n        'nullable' => true,\n        'eval' => 'trim',\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Defining Multiple Crop Variants in PHP\nDESCRIPTION: This snippet helps define multiple crop variants in TYPO3's TCA, utilizing array keys as identifiers for various ratios required as PHP floats.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/Index.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n..  literalinclude:: _Snippets/_multipleCropVariants.php\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Side-by-Side Select Field with Exclusive Keys in TYPO3 TCA\nDESCRIPTION: This TCA configuration snippet creates a multiple select field with side-by-side rendering that includes divider sections and mutually exclusive options. The 'exclusiveKeys' parameter ensures that items with values 1 and 2 cannot be selected together with other options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectMultiplesidebyside2.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_multiplesidebyside_2' => [\n            'label' => 'select_multiplesidebyside_2 exclusiveKeys=1,2',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectMultipleSideBySide',\n                'items' => [\n                    [\n                        'label' => 'two exclusive items',\n                        'value' => '--div--',\n                    ],\n                    [\n                        'label' => 'foo 1',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'foo 2',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'casual multiple items',\n                        'value' => '--div--',\n                    ],\n                    [\n                        'label' => 'foo 3',\n                        'value' => 3,\n                    ],\n                    [\n                        'label' => 'foo 4',\n                        'value' => 4,\n                    ],\n                    [\n                        'label' => 'foo 5',\n                        'value' => 5,\n                    ],\n                    [\n                        'label' => 'foo 6',\n                        'value' => 6,\n                    ],\n                ],\n                'multiple' => true,\n                'exclusiveKeys' => '1,2',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring a Custom Wizard in TCA Overrides for tt_content\nDESCRIPTION: This code adds a custom fieldWizard to the tt_content table by modifying its TCA configuration. It enables the custom wizard for specific content types and configures its behavior.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/Examples.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\ndeclared(strict_types=1);\n\n(static function() {\n    $GLOBALS['TCA']['tt_content']['columns']['bodytext']['config']['fieldWizard']['myOwnOuterWrapWizard'] = [\n        'disabled' => false,\n        'options' => [\n            'additionalAttributes' => [\n                'for' => 'content-types',\n            ],\n        ],\n    ];\n})();\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimal TCA Structure in TYPO3\nDESCRIPTION: Defines a minimal TCA configuration including control settings, column definition for a title field, and basic type configuration. Includes table title localization, label field specification, icon file path, and security settings.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/TxStyleguideCtrlMinimal.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'ctrl' => [\n        'title' => 'LLL:EXT:styleguide/Resources/Private/Language/locallang.xlf:minimalTableTitle',\n        'label' => 'title',\n        'iconfile' => 'EXT:styleguide/Resources/Public/Icons/tx_styleguide.svg',\n        'security' => [\n            'ignorePageTypeRestriction' => true,\n        ],\n    ],\n    'columns' => [\n        'title' => [\n            'label' => 'LLL:EXT:styleguide/Resources/Private/Language/locallang.xlf:minimalTableTitleField',\n            'config' => [\n                'type' => 'input',\n            ],\n        ],\n    ],\n    'types' => [\n        [\n            'showitem' => 'title',\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Managing Symmetric Relationships in TYPO3 Tables\nDESCRIPTION: This snippet provides the configuration for symmetric relationships within the same TYPO3 table, allowing records to have mutual inline relations. The setup includes defining fields in the main table and intermediate table relationships.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Examples.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\ninclude:: /CodeSnippets/InlineMnSymmetricBranches.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring FAL Field in TYPO3 TCA with Selection Icon\nDESCRIPTION: This snippet demonstrates how to configure a File Abstraction Layer (FAL) field in TYPO3's TCA. It defines a single-item file reference field that also serves as the selection icon field for a table, using ExtensionManagementUtility to generate the proper TCA configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Manual/SelectSingle12ForeignPart.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n   'ctrl' => [\n      'title' => 'Form engine elements - select foreign single_12',\n      'label' => 'fal_1',\n      'selicon_field' => 'fal_1',\n      // ...\n   ],\n\n   'columns' => [\n      // ...\n      'fal_1' => [\n         'label' => 'fal_1 selicon_field',\n         'config' => \\TYPO3\\CMS\\Core\\Utility\\ExtensionManagementUtility::getFileFieldTCAConfig(\n            'fal_1',\n            [\n               'maxitems' => 1,\n            ],\n            $GLOBALS['TYPO3_CONF_VARS']['SYS']['mediafile_ext']\n         ),\n      ],\n   ],\n   // ...\n\n];\n```\n\n----------------------------------------\n\nTITLE: Defining Filters in TYPO3 TCA Group Fields\nDESCRIPTION: This snippet demonstrates setting up a \"filter\" configuration in TYPO3's TCA group fields using user-defined functions. Each filter is associated with a PHP class method and can include additional parameters. These functions filter the selectable values based on criteria specified in the parameters.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_Filter.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'filter' => [\n    [\n        'userFunc' => \\Vendor\\Extension\\MyClass::class . '->doFilter',\n        'parameters' => [\n            // optional parameters for the filter go here\n        ],\n    ],\n    [\n        'userFunc' => \\Vendor\\Extension\\OtherClass::class . '->myFilter',\n        'parameters' => [\n            // optional parameters for the filter go here\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining TCA Structure for TYPO3 Tables (PHP)\nDESCRIPTION: This code snippet illustrates how to define the first level of the TCA structure in TYPO3 with specific database table names. Each table entry corresponds to its configuration array, where the table names are used as keys for the array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Introduction/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['pages'] = [\n    // ...\n];\n\n$GLOBALS['TCA']['tt_content'] = [\n    // ...\n];\n\n$GLOBALS['TCA']['tx_examples_haiku'] = [\n    // ...\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring a Multiple Side-by-Side Select Field with Filter Items in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to configure a multiple side-by-side select field with filter options in TYPO3's Table Configuration Array (TCA). The configuration includes predefined items and filter options that allow users to filter the selection list. The multiSelectFilterItems property defines filter categories that help organize longer item lists.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectMultiplesidebyside5.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_multiplesidebyside_5' => [\n            'label' => 'select_multiplesidebyside_5 multiSelectFilterItems',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectMultipleSideBySide',\n                'items' => [\n                    [\n                        'label' => 'foo 1',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'foo 2',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'foo 3',\n                        'value' => 3,\n                    ],\n                    [\n                        'label' => 'bar',\n                        'value' => 4,\n                    ],\n                ],\n                'multiSelectFilterItems' => [\n                    [\n                        '',\n                        '',\n                    ],\n                    [\n                        'foo',\n                        'foo',\n                    ],\n                    [\n                        'bar',\n                        'bar',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: TCA Group Field - Disable Element Browser\nDESCRIPTION: This code snippet demonstrates how to disable the element browser control for a 'group' field within TYPO3's TCA. Setting 'disabled' to true within the 'elementBrowser' configuration effectively hides the button from the user interface.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_FieldControl.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nreturn [\n    'ctrl' => [\n        'label' => 'uid',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'cruser_id' => 'cruser_id',\n        'title' => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_table',\n        'delete' => 'deleted',\n        'enablecolumns' => [\n            'disabled' => 'hidden',\n        ],\n        'typeicon_classes' => [\n            'default' => 'tx_examples_domain_model_table'\n        ],\n    ],\n    'types' => [\n        '1' => [\n            'showitem' => 'title, relation' # Put the fields in a line separated by comma\n        ],\n    ],\n    'columns' => [\n        'title' => [\n            'label' => 'Title',\n            'config' => [\n                'type' => 'input',\n                'size' => 30,\n                'eval' => 'trim'\n            ],\n        ],\n        'relation' => [\n            'label' => 'Relation',\n            'config' => [\n                'type' => 'group',\n                'internal_type' => 'db',\n                'allowed' => 'tx_examples_domain_model_table',\n                'size' => 5,\n                'maxitems' => 5,\n                'minitems' => 0,\n                'show_thumbs' => 1,\n                'fieldControl' => [\n                    'elementBrowser' => [\n                        'disabled' => true,\n                    ],\n                ]\n            ],\n        ],\n    ],\n];\n\n```\n\n----------------------------------------\n\nTITLE: Configuring a checkboxToggle Field with Inverted State Display in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to configure a checkbox field using the 'checkboxToggle' render type with inverted state display in TYPO3's TCA. The configuration uses 'invertStateDisplay' set to true to reverse the visual indication of the toggle state.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Checkbox18.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'checkbox_18' => [\n            'label' => 'checkbox_18',\n            'description' => 'renderType=checkboxToggle single inverted state display',\n            'config' => [\n                'type' => 'check',\n                'renderType' => 'checkboxToggle',\n                'items' => [\n                    [\n                        'label' => 'foo',\n                        'invertStateDisplay' => true,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring a Labeled Toggle Checkbox in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet shows how to configure a checkbox field with a labeled toggle in TYPO3's TCA. It uses the 'checkboxLabeledToggle' render type and defines custom labels for checked and unchecked states.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Checkbox19.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'checkbox_19' => [\n            'label' => 'checkbox_19',\n            'description' => 'renderType=checkboxLabeledToggle single',\n            'config' => [\n                'type' => 'check',\n                'renderType' => 'checkboxLabeledToggle',\n                'items' => [\n                    [\n                        'label' => 'foo',\n                        'labelChecked' => 'Enabled',\n                        'labelUnchecked' => 'Disabled',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Simple Language Field Configuration for TYPO3 TCA\nDESCRIPTION: Example configuration for setting up a basic language field in TYPO3 TCA. This configuration is typically used in table configuration overrides.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Language/Examples.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n..  literalinclude:: _languageField.php\n    :caption: EXT:myExtension/Configuration/Overrides/someTable.php\n```\n\n----------------------------------------\n\nTITLE: Configuring Input Field with Placeholder in TYPO3 TCA\nDESCRIPTION: Demonstrates configuration of a TCA input field with placeholder functionality, nullable property, and useOrOverridePlaceholder mode. The field references another field's value as placeholder and allows null values.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Input28.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'input_28' => [\n            'label' => 'input_28',\n            'description' => 'placeholder=__row|input_26 mode=useOrOverridePlaceholder nullable=true default=null',\n            'config' => [\n                'type' => 'input',\n                'placeholder' => '__row|input_26',\n                'nullable' => true,\n                'default' => null,\n                'mode' => 'useOrOverridePlaceholder',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Creating URLs from Link Fields in PHP\nDESCRIPTION: Example service class showing how to create URLs from link fields using TYPO3's LinkFactory in PHP code.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n_SomeService.php content not provided in input\n```\n\n----------------------------------------\n\nTITLE: Configuring One-to-One Category Relation in TYPO3 TCA\nDESCRIPTION: This example shows how to configure a one-to-one category relation in TYPO3 TCA. It displays a category tree but allows only one category to be selected.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/Examples.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA']['someTable']['columns']['categories'] = [\n    'exclude' => true,\n    'label' => 'Category',\n    'config' => [\n        'type' => 'category',\n        'relationship' => 'oneToOne',\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Defining Enable Cascading Delete Configuration in PHP\nDESCRIPTION: This snippet sets the `enableCascadingDelete` flag which governs whether or not child records are deleted when their parent is removed. It allows for independent retention of child records when a parent record is deleted, which can be useful in certain user scenarios.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_Behaviour.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['enableCascadingDelete'] = [\n    'type' => 'boolean',\n    'default' => true\n];\n?>\n```\n\n----------------------------------------\n\nTITLE: Complex Display Conditions in TCA\nDESCRIPTION: This snippet showcases a more complex set of display conditions in TCA, combining 'AND' and 'OR'.  The field 'example_field' will be displayed only if 'sys_language_uid' is 0 AND either 'CType' is 'text' OR 'header' is 'Example'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/DisplayConditions.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n    'displayCond' => [\n        'AND' => [\n            'FIELD:sys_language_uid:=:0',\n            'OR' => [\n                'FIELD:CType:=:text',\n                'FIELD:header:=:Example'\n            ]\n        ]\n    ],\n```\n\n----------------------------------------\n\nTITLE: Configuring Inline 1:n Relations in TYPO3 TCA\nDESCRIPTION: TCA configuration example demonstrating how to set up inline 1:n relations in TYPO3 CMS. The configuration includes foreign table relationships, parent field mappings, and localization settings.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Inline1nInline1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'inline_1' => [\n            'label' => 'inline_1 description',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'inline',\n                'foreign_table' => 'tx_styleguide_inline_1n_inline_1_child',\n                'foreign_field' => 'parentid',\n                'foreign_table_field' => 'parenttable',\n                'appearance' => [\n                    'showSynchronizationLink' => true,\n                    'showAllLocalizationLink' => true,\n                    'showPossibleLocalizationRecords' => true,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring FlexForm with Section Containers in TYPO3 TCA\nDESCRIPTION: This code defines a FlexForm field 'flex_2' with a section container structure in TYPO3's TCA. It shows how to set up a hierarchical data structure with sheets, sections, and containers that hold various field types including input, color, and text fields with their respective configurations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Flex2.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'flex_2' => [\n            'label' => 'flex_2 section container',\n            'config' => [\n                'type' => 'flex',\n                'ds' => [\n                    'default' => '\n                        <T3DataStructure>\n                            <sheets>\n                                <sSection>\n                                    <ROOT>\n                                        <sheetTitle>section</sheetTitle>\n                                        <type>array</type>\n                                        <el>\n                                            <section_1>\n                                                <title>section_1</title>\n                                                <type>array</type>\n                                                <section>1</section>\n                                                <el>\n                                                    <container_1>\n                                                        <type>array</type>\n                                                        <title>container_1</title>\n                                                        <el>\n                                                            <input_1>\n                                                                <label>input_1 description</label>\n                                                                <description>field description</description>\n                                                                <config>\n                                                                    <type>input</type>\n                                                                </config>\n                                                            </input_1>\n                                                            <color_1>\n                                                                <label>color_1</label>\n                                                                <config>\n                                                                    <type>color</type>\n                                                                    <size>10</size>\n                                                                </config>\n                                                            </color_1>\n                                                        </el>\n                                                    </container_1>\n                                                    <container_2>\n                                                        <type>array</type>\n                                                        <title>container_2</title>\n                                                        <el>\n                                                            <text_1>\n                                                                <label>text_1 default \"foo\"</label>\n                                                                <config>\n                                                                    <type>text</type>\n                                                                    <default>foo</default>\n                                                                </config>\n                                                            </text_1>\n                                                        </el>\n                                                    </container_2>\n                                                </el>\n                                            </section_1>\n                                        </el>\n                                    </ROOT>\n                                </sSection>\n                            </sheets>\n                        </T3DataStructure>\n                    ',\n                ],\n            ],\n        ],\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Checkbox Selection\nDESCRIPTION: This configuration allows for the same item to be included multiple times in a selection list using checkboxes in TYPO3. It is critical for bidirectional MM relations as the setting must be applied to both native and foreign fields. The configuration is stored in the TCA under the specified path.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_Multiple.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: multiple\n    :name: select-checkbox-multiple\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display / Proc.\n\n    Allows the *same item* more than once in a list.\n\n    If used with bidirectional MM relations it must be set for both the native\n    and foreign field configuration.\n\n    ..  versionchanged:: 13.0\n        The property :confval:`select-checkbox-mm-hasUidField` is\n        obsolete. It had to be defined previously when using `multiple`.\n```\n\n----------------------------------------\n\nTITLE: Example: A basic slug field in TYPO3 TCA PHP\nDESCRIPTION: This snippet demonstrates how to create a slug field in TYPO3's TCA, limiting the length to 50 characters and using `input_1` for slug generation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Slug/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nreturn [\n    'columns' => [\n        'slug' => [\n            'exclude' => true,\n            'label' => 'Slug',\n            'config' => [\n                'type' => 'slug',\n                'length' => 50,\n                'source' => 'input_1',\n            ],\n        ],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring a Code Editor with Syntax Highlighting in TYPO3 TCA\nDESCRIPTION: This code snippet shows how to set up a code editor with syntax highlighting in TYPO3's Table Configuration Array. It uses the 'codeEditor' renderType to enable syntax highlighting for code input fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Index.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n[\n    // ...\n    'type' => 'text',\n    'renderType' => 'codeEditor',\n    // ...\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring foreign_table_item_group in TYPO3 TCA\nDESCRIPTION: Defines a property that references a specific field in a foreign table for item group identification. Used in select field configurations to group and organize related items.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_ForeignTableItemGroup.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: foreign_table_item_group\n    :name: select-checkbox-foreign-table-item-group\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string (column name)\n    :Scope: Proc. / Display\n```\n\n----------------------------------------\n\nTITLE: Rich Text Editor in FlexForms\nDESCRIPTION: Demonstrates how to enable Rich Text Editor functionality within a FlexForm field by using the enableRichtext attribute\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/Examples.rst#2025-04-16_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\nFlexForm RTE configuration\n```\n\n----------------------------------------\n\nTITLE: Defining Number Type in TCA\nDESCRIPTION: The number type in TYPO3 TCA is used for numerical input fields. It supports automatic database field generation, slider configuration, and range definition. Added in TYPO3 v13.0.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\ntype = 'number'\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Value Fields in TYPO3 TCA\nDESCRIPTION: Example configuration from the pages table showing how to specify which fields should be used for default values when creating new records. The configuration lists doktype, fe_group, and hidden as fields to copy from previous records.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_UseColumnsForDefaultValues.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    'useColumnsForDefaultValues' => 'doktype,fe_group,hidden',\n    // ...\n],\n```\n\n----------------------------------------\n\nTITLE: RootLevel TCA Configuration Parameter\nDESCRIPTION: Configuration value that determines if table records can exist in the page tree, root level, or both. The value can be 0 (page tree only), 1 (root only), or -1 (both page tree and root). This setting affects record placement and admin access restrictions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_RootLevel.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: configuration\nCODE:\n```\n$GLOBALS['TCA'][$table]['ctrl']['rootLevel']\n```\n\n----------------------------------------\n\nTITLE: Specifying File Folder Configuration in TYPO3 TCA\nDESCRIPTION: Defines the source folder for file selection with support for relative paths and extension-specific folder references. Controls file selection behavior based on depth and allowed extensions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FileFolderConfig.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fileFolderConfig']['folder']\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Search Fields in TYPO3\nDESCRIPTION: Demonstrates how to specify searchable fields for a table in the TYPO3 Table Configuration Array (TCA). This example shows searchable fields for the 'tt_content' table, including header, header link, subheader, bodytext, and flexform content.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_SearchFields.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    'searchFields' => 'header,header_link,subheader,bodytext,pi_flexform',\n    ...\n],\n```\n\n----------------------------------------\n\nTITLE: Defining a MM Relation in TYPO3\nDESCRIPTION: This snippet demonstrates how to configure a Many-to-Many (MM) relationship in TYPO3 using TCA. It specifies the label, allowed tables, foreign table, and the MM table name. The configuration is designed to integrate smoothly with Extbase framework, ensuring proper relational handling.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_Mm.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// table tx_myextension_domain_model_mymodel1\n$fields = [\n    'relation_table1_table2' => [\n        'label' => 'Some relation from table 1 to table 2',\n        'config' => [\n            'type' => 'group',\n            'allowed' => 'tx_myextension_domain_model_mymodel2',\n            'foreign_table' => 'tx_myextension_domain_model_mymodel2', // needed by Extbase\n            'MM' => 'tx_myextension_domain_model_mymodel1_mymodel2_mm',\n        ],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Dynamically Selecting Data Structure based on Field Value in TYPO3\nDESCRIPTION: This code snippet shows how to configure a FlexForm field in TYPO3 TCA to dynamically select a data structure based on the value of another field.  The `ds_pointerField` property specifies the field whose value will determine which data structure to use, and the `ds` array maps field values to data structure file paths.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/AboutDataStructures.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n'config' => [\n    'type' => 'flex',\n    'ds_pointerField' => 'selector'\n    'ds' => [\n        'default' => 'FILE:EXT:my_extension/Configuration/FlexForms/Default.xml',\n        'foo' => 'FILE:EXT:my_extension/Configuration/FlexForms/Foo.xml',\n        'bar' => 'FILE:EXT:my_extension/Configuration/FlexForms/Bar.xml',\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Inline Many-to-Many Child Relationship in TYPO3 TCA\nDESCRIPTION: TCA configuration for a 'parents' field in a child table that establishes a many-to-many relationship. It configures the foreign_table as an intermediate MM table, with foreign_field, foreign_sortby, and foreign_label properties defining the relationship. The appearance section enables synchronization and localization features.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/InlineMnChildParents.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'parents' => [\n            'label' => 'parents',\n            'config' => [\n                'type' => 'inline',\n                'foreign_table' => 'tx_styleguide_inline_mn_mm',\n                'foreign_field' => 'childid',\n                'foreign_sortby' => 'childsort',\n                'foreign_label' => 'parentid',\n                'maxitems' => 10,\n                'appearance' => [\n                    'showSynchronizationLink' => 1,\n                    'showAllLocalizationLink' => 1,\n                    'showPossibleLocalizationRecords' => 1,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Example: Select Multiple Values (selectSingleBox)\nDESCRIPTION: This snippet demonstrates how to configure a TCA 'select' field with the 'selectSingleBox' renderType to allow selecting multiple values from a box.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n\"<?php\nreturn [\n    'ctrl' => [\n        'label' => 'title',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'cruser_id' => 'cruser_id',\n        'delete' => 'deleted',\n        'title' => 'Example',\n        'adminOnly' => 1,\n        'rootLevel' => 1,\n        'default_sortby' => 'ORDER BY title',\n        'iconfile' => 'EXT:extension/Resources/Public/Icons/Example.gif',\n    ],\n    'interface' => [\n        'showRecordFieldList' => 'title,select_field',\n    ],\n    'columns' => [\n        'title' => [\n            'label' => 'Title',\n            'config' => [\n                'type' => 'input',\n                'size' => '30',\n                'max' => '255',\n                'eval' => 'required',\n            ]\n        ],\n        'select_field' => [\n            'label' => 'Select Field',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingleBox',\n                'foreign_table' => 'another_table',\n                'size' => 5,\n                'minitems' => 0,\n                'maxitems' => 5,\n            ]\n        ],\n    ],\n    'types' => [\n        '0' => [\n            'showitem' => 'title,select_field',\n        ],\n    ],\n];\n\"\n```\n\n----------------------------------------\n\nTITLE: Defining a Simple Category Column in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to define a basic category column in a TYPO3 TCA configuration file. It sets up a column named 'categories' with the type 'category'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA']['someTable']['columns']['categories'] = [\n    'exclude' => true,\n    'label' => 'Categories',\n    'config' => [\n        'type' => 'category',\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Specifying Opposite Usage in MM Relations\nDESCRIPTION: The 'MM_oppositeUsage' configuration is detailed here, which allows managing match fields for operations that require information about the opposite side in bidirectional MM relationships.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_Mm.rst.txt#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n\"MM_oppositeUsage\" => [\"name\" => \"select-single-mm-oppositeUsage\", \"type\" => \"array\", \"Path\" => \"$GLOBALS['TCA'][$table]['columns'][$field]['config']\", \"Scope\" => \"Proc.\"]\n```\n\n----------------------------------------\n\nTITLE: MM Table WHERE Clause Example\nDESCRIPTION: This code snippet demonstrates how to use the MM_table_where configuration option in TCA to add an additional WHERE clause when reading MM relations. The example shows how to use the special field quoting syntax {#...} around identifiers to ensure DBAL compatibility.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_Mm.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"{#uid_local} = ###THIS_UID###\"\n```\n\n----------------------------------------\n\nTITLE: Defining Allowed File Types in TYPO3 TCA\nDESCRIPTION: The snippet demonstrates how to configure the allowed file types for a specific column in TYPO3 CMS TCA. It uses predefined reserved strings to substitute common file types or explicitly lists the extensions. The example contrasts string and array notations and advises on version-specific limitations affecting configuration in older TYPO3 versions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/File/_Properties/_Allowed.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config'] = [\n    'allowed' => 'common-image-types, common-text-types, gz, zip',\n    // Using array notation available in TYPO3 13.1.0 and v12.4.1 and up\n    // 'allowed' => ['jpg','png','svg'] or ['common-image-types', 'gz', 'zip']\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Password Field with Generator in TYPO3 TCA\nDESCRIPTION: Advanced configuration example showing how to set up a password field with an integrated password generator that includes special characters.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'password_field' => [\n    'label' => 'Password',\n    'config' => [\n        'type' => 'password',\n        'passwordGenerator' => 'secure',\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring DS Pointer Field in TYPO3\nDESCRIPTION: This snippet outlines the configuration for the 'ds_pointerField' in TYPO3. It captures the necessary details for setting up this pointer field, including its location within the global TCA structure, its type, and its intended scope.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/_Properties/_DsPointerField.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: TYPO3 Documentation\nCODE:\n```\n..  confval:: ds_pointerField\n    :name: flex-ds-pointerField\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string\n    :Scope: Display  / Proc.\n\n    Field name(s) in the record which point to the field where the key for\n    'ds' is found. Up to two field names can be specified comma separated.\n```\n\n----------------------------------------\n\nTITLE: Configuring Group Field with Disabled Element Browser in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet defines a TCA configuration for a group field 'group_db_3'. It allows only 'tx_styleguide_staticdata' records and disables the element browser. This setup is useful for restricting record selection and simplifying the user interface.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/GroupDb3.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'group_db_3' => [\n            'label' => 'group_db_3 allowed=tx_styleguide_staticdata, disabled elementBrowser',\n            'config' => [\n                'type' => 'group',\n                'allowed' => 'tx_styleguide_staticdata',\n                'fieldControl' => [\n                    'elementBrowser' => [\n                        'disabled' => true,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Filter Class in TYPO3\nDESCRIPTION: This piece of code defines a PHP class with a method to be used as a filter function within TYPO3's TCA configuration. The method processes and returns filtered values based on specified criteria. This class can be customized to include any necessary filter logic.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_Filter.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nclass MyClass\n{\n    public function doFilter(array $parameters, $parentObject)\n    {\n        $fieldValues = $parameters['values'];\n        // do the filtering here\n        return $fieldValues;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Flexible Content Element with External FlexForm in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet defines a TCA configuration for a flexible content element named 'flex_file_1'. It uses an external FlexForm XML file to define the structure. The configuration specifies the field label, description, and the path to the external FlexForm file.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/FlexFile1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'flex_file_1' => [\n            'label' => 'flex_file_1 simple flexform in external file',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'flex',\n                'ds' => [\n                    'default' => 'FILE:EXT:styleguide/Configuration/FlexForms/Simple.xml',\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Group Field Type in TYPO3 TCA\nDESCRIPTION: Defines a group database field configuration in TYPO3's TCA with multiple selection enabled, suggestion hiding, and static data integration. The field allows selection of multiple tx_styleguide_staticdata records with a maximum size of 10 items.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/GroupDb11.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'group_db_11' => [\n            'label' => 'group_db_11 hideSuggest=true allowed=tx_styleguide_staticdata, multiple, autoSizeMax=10',\n            'config' => [\n                'type' => 'group',\n                'hideSuggest' => true,\n                'allowed' => 'tx_styleguide_staticdata',\n                'multiple' => true,\n                'autoSizeMax' => 10,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Initial Crop Area in PHP\nDESCRIPTION: The code snippet customizes the initial crop area in TYPO3’s TCA for image manipulation, using relative floating point definitions for positioning.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/Index.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n..  literalinclude:: _Snippets/_cropAreaCropVariants.php\n```\n\n----------------------------------------\n\nTITLE: Configuring a Slug Field in TYPO3 CMS TCA\nDESCRIPTION: Defines a TCA configuration for a slug field with custom generator options. The configuration specifies input fields to use for slug generation, separator character, parent page slug integration, character replacements, custom prefix function, fallback character, and validation rules.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Slug1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'slug_1' => [\n            'label' => 'slug_1',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'slug',\n                'generatorOptions' => [\n                    'fields' => [\n                        'input_1',\n                        'input_2',\n                    ],\n                    'fieldSeparator' => '/',\n                    'prefixParentPageSlug' => true,\n                    'replacements' => [\n                        '/' => '',\n                    ],\n                ],\n                'appearance' => [\n                    'prefix' => 'TYPO3\\\\CMS\\\\Styleguide\\\\UserFunctions\\\\FormEngine\\\\SlugPrefix->getPrefix',\n                ],\n                'fallbackCharacter' => '-',\n                'eval' => 'uniqueInSite',\n                'default' => '',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic Timestamp Fields in TYPO3 TCA\nDESCRIPTION: This code snippet demonstrates how to configure automatic timestamp fields in the TYPO3 TCA ctrl section. It shows the setup for crdate (creation date), tstamp (modification date), and starttime/endtime fields for controlling record visibility.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Crdate.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n$GLOBALS['TCA'][$table] = [\n    'ctrl' => [\n        'crdate' => 'crdate',\n        'tstamp' => 'tstamp',\n        'enablecolumns' => [\n            'starttime' => 'starttime',\n            'endtime' => 'endtime',\n        ],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Using Category Field in TYPO3 FlexForm\nDESCRIPTION: This snippet illustrates how to use a category field in a TYPO3 FlexForm data structure. Due to FlexForm limitations, it uses a 'oneToMany' relationship. The example is from EXT:news, allowing display of news from specific categories in the list view.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/Examples.rst#2025-04-16_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<T3DataStructure>\n    <sheets>\n        <sDEF>\n            <ROOT>\n                <TCEforms>\n                    <sheetTitle>LLL:EXT:news/Resources/Private/Language/locallang_be.xlf:flexforms_tab.settings</sheetTitle>\n                </TCEforms>\n                <type>array</type>\n                <el>\n                    <settings.categories>\n                        <TCEforms>\n                            <label>LLL:EXT:news/Resources/Private/Language/locallang_be.xlf:flexforms_general.categories</label>\n                            <config>\n                                <type>category</type>\n                                <relationship>oneToMany</relationship>\n                            </config>\n                        </TCEforms>\n                    </settings.categories>\n                </el>\n            </ROOT>\n        </sDEF>\n    </sheets>\n</T3DataStructure>\n```\n\n----------------------------------------\n\nTITLE: Configuring Slug Field in TYPO3 TCA\nDESCRIPTION: Demonstrates the configuration of a slug field in TYPO3's TCA with generator options, fallback character, and validation rules. The configuration includes parent page slug prefixing and unique-in-site validation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Slug2.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'slug_2' => [\n            'label' => 'slug_2',\n            'config' => [\n                'type' => 'slug',\n                'size' => 50,\n                'generatorOptions' => [\n                    'fields' => [\n                        'input_1',\n                    ],\n                    'fieldSeparator' => '/',\n                    'prefixParentPageSlug' => true,\n                ],\n                'fallbackCharacter' => '-',\n                'eval' => 'uniqueInSite',\n                'default' => '',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Disallowed File Extensions in TYPO3 TCA\nDESCRIPTION: This snippet details the configuration for defining an array of file extensions that are not allowed in TYPO3 despite possibly being listed as allowed. It is essential for managing file uploads and ensuring security.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/File/_Properties/_Disallowed.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: disallowed\n    :name: file-disallowed\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: array\n    :Scope: Proc. / Display\n\n    An array of file extensions that are not allowed even though they are\n    listed in the property `allowed`, for example :php:`['doc','docx']`.\n```\n\n----------------------------------------\n\nTITLE: Configuring TYPO3 TCA Palette Structure in PHP\nDESCRIPTION: Defines a palette configuration in TYPO3's TCA. The palette includes a label, description, and showitem property that specifies which fields should be displayed together in the backend form interface.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/PaletteDescription.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'palettes' => [\n        'palette_1' => [\n            'label' => 'palette_1',\n            'description' => 'palette description',\n            'showitem' => 'palette_1_1, palette_1_3',\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Directly Entering XML for Data Structures in TYPO3\nDESCRIPTION: This code snippet illustrates how to directly enter XML into the TYPO3 TCA configuration for data structures. Direct XML entry allows for inline configuration without dependency on external files, though care must be taken to ensure XML is correctly formatted. The ds array keys match ds_pointerField values to determine which XML configuration is applied. Keep in mind limitations of inline XML expansions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/_Properties/_Ds.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\nContent of /CodeSnippets/Flex2.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom FormElement Class in TYPO3 PHP\nDESCRIPTION: This code snippet explains how to implement the renderType by extending the AbstractFormElement class. The custom class must override the render() function and handle the rendering logic for the custom field. Special attention is needed for HTML output to avoid XSS vulnerabilities.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/User/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n... literalinclude:: _includes/_SpecialFieldElement.php\n    :caption: EXT:my_extension/Classes/Form/Element/SpecialFieldElement.php\n```\n\n----------------------------------------\n\nTITLE: Configuring Required JSON Fields in TYPO3 TCA\nDESCRIPTION: Sets a JSON field as required in the TYPO3 form interface. When set to true, the form cannot be saved unless the field contains a non-empty value. This configuration option affects both display and processing behavior.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Json/_Properties/_Required.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: required\n    :name: json-required\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['required']\n    :type: boolean\n    :Scope: Display / Proc.\n    :Default: false\n\n    If set to true a non-empty value is required in the field. Otherwise the\n    form cannot be saved.\n```\n\n----------------------------------------\n\nTITLE: Show Specific Fields in Child Table\nDESCRIPTION: This example shows how to override the fields displayed in the child table within a parent-child inline relationship in TYPO3. It involves configuration changes in the TCA 'showitem' property.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Examples.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nliteralinclude:: _Snippets/_overrideChildTcaShowItems.php\n    :caption: EXT:my_extension/Configuration/TCA/Overrides/tt_content.php\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Showitem with a Single Tab in PHP\nDESCRIPTION: This snippet demonstrates how to configure TCA to display three fields ('hidden', 'title', 'poem') in a form without additional tabs. When only one tab configuration is provided, FormEngine suppresses the tab and displays all fields directly, without a tabbing indicator. This configuration is useful for simple forms.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Examples/_10_ShowItem.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'types' => [\n    '0' => [\n        'showitem' => 'hidden, title, poem,',\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Language Synchronization for Password Fields in TYPO3 TCA\nDESCRIPTION: Demonstrates how to configure allowLanguageSynchronization behavior for password fields in TYPO3's TCA. This setting enables field value synchronization between different language versions and adds a localization state selector wizard to the backend interface.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['allowLanguageSynchronization'] = true;\n```\n\n----------------------------------------\n\nTITLE: Defining displayCond Property in TYPO3 TCA\nDESCRIPTION: Configuration value definition for the displayCond property that controls conditional field visibility in TYPO3's Table Configuration Array. The property can accept either string or array values and is used within the columns configuration of a table field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/_Properties/_DisplayCond.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: displayCond\n    :name: columns-displayCond\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]\n    :Required: false\n    :type: string / array\n    :Scope: Display\n    :Example: :ref:`columns-displaycond-examples`\n```\n\n----------------------------------------\n\nTITLE: Configuring a Simple 'none' Field in TYPO3 TCA\nDESCRIPTION: This code snippet demonstrates how to configure a basic 'none' field in the TYPO3 TCA. It sets up a field named 'tx_examples_none' with type 'none' and defines its label using language file references.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/None/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n    'tx_examples_none' => [\n        'label' => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_none',\n        'config' => [\n            'type' => 'none',\n        ],\n    ],\n```\n\n----------------------------------------\n\nTITLE: TCA Group Field Configuration\nDESCRIPTION: This code snippet demonstrates the configuration of a 'group' field within TYPO3's TCA. It showcases how to enable various field control options like addRecord, editPopup, and listModule for managing related records.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_FieldControl.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nreturn [\n    'ctrl' => [\n        'label' => 'uid',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'cruser_id' => 'cruser_id',\n        'title' => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_table',\n        'delete' => 'deleted',\n        'enablecolumns' => [\n            'disabled' => 'hidden',\n        ],\n        'typeicon_classes' => [\n            'default' => 'tx_examples_domain_model_table'\n        ],\n    ],\n    'types' => [\n        '1' => [\n            'showitem' => 'title, relation' # Put the fields in a line separated by comma\n        ],\n    ],\n    'columns' => [\n        'title' => [\n            'label' => 'Title',\n            'config' => [\n                'type' => 'input',\n                'size' => 30,\n                'eval' => 'trim'\n            ],\n        ],\n        'relation' => [\n            'label' => 'Relation',\n            'config' => [\n                'type' => 'group',\n                'internal_type' => 'db',\n                'allowed' => 'tx_examples_domain_model_table',\n                'size' => 5,\n                'maxitems' => 5,\n                'minitems' => 0,\n                'show_thumbs' => 1,\n                'fieldControl' => [\n                    'addRecord' => [\n                        'disabled' => false,\n                        'options' => [\n                            'title' => 'Create new record'\n                        ]\n                    ],\n                    'editPopup' => [\n                        'disabled' => false,\n                    ],\n                    'listModule' => [\n                        'disabled' => false,\n                    ],\n                ]\n            ],\n        ],\n    ],\n];\n\n```\n\n----------------------------------------\n\nTITLE: Customizing Suggest Search Conditions in PHP\nDESCRIPTION: This example demonstrates adding a custom search condition to a field's suggest options within TYPO3's TCA, searching specifically for pages with a doktype of 1. Dependencies include familiarity with SQL WHERE clauses in TCA context. The input involves defining a search condition, and the output tailors search results in the suggest wizard.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_SuggestOptions.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'storage_pid' => [\n   'config' => [\n      'suggestOptions' => [\n         'pages' => [\n            'searchCondition' => 'doktype=1',\n         ],\n      ],\n   ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Password Field with Generator in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a password field named 'password_6' with an integrated password generator field control. The generator includes special characters and can be triggered through a custom UI element with the title 'Create random password'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Snippets/_Password_6.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'password_6' => [\n            'label' => 'password_6',\n            'description' => 'type=password fieldControl=passwordGenerator - all character sets',\n            'config' => [\n                'type' => 'password',\n                'fieldControl' => [\n                    'passwordGenerator' => [\n                        'renderType' => 'passwordGenerator',\n                        'options' => [\n                            'title' => 'Create random password',\n                            'passwordRules' => [\n                                'specialCharacters' => true,\n                            ],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining ctrl Settings in Base TCA File\nDESCRIPTION: Example of how to define ctrl settings in a base TCA file for pages. These settings will trigger auto-creation of corresponding column definitions by the TYPO3 core.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/AutoCreatedColumns.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    // ...\n    'tstamp' => 'tstamp',\n    'sortby' => 'sorting',\n    'delete' => 'deleted',\n    'origUid' => 't3_origuid',\n    'languageField' => 'sys_language_uid',\n    'transOrigPointerField' => 'l10n_parent',\n    'translationSource' => 'l10n_source',\n    'transOrigDiffSourceField' => 'l10n_diffsource',\n    'enablecolumns' => [\n        'disabled' => 'hidden',\n        'starttime' => 'starttime',\n        'endtime' => 'endtime',\n        'fe_group' => 'fe_group',\n    ],\n    // ...\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Field with textTable Render Type in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to configure a text field with the 'textTable' render type in TYPO3's Table Configuration Array (TCA). It sets up a field for managing table content with specific display options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/TextTable/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"tx_examples_noewizard\" => [\n    \"label\" => \"LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_noewizard\",\n    \"description\" => \"LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_noewizard.description\",\n    \"config\" => [\n        \"type\" => \"text\",\n        \"renderType\" => \"textTable\",\n        \"cols\" => 40,\n        \"rows\" => 15,\n        \"wrap\" => \"off\",\n        \"max\" => 256,\n        \"table\" => [\n            \"columns\" => 2,\n            \"colorScheme\" => 0,\n            \"trim\" => 1,\n            \"removeTrailingSpaces\" => 1,\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Simple Checkbox with Label in TYPO3 TCA\nDESCRIPTION: Defines a basic TCA configuration for a single checkbox with a label. When checked, the field value is 1, when unchecked it's 0.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/Default.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"tx_styleguide_elements_basic\" => [\n    \"ctrl\" => [],\n    \"columns\" => [\n        \"checkbox_2\" => [\n            \"label\" => \"checkbox_2 single checkbox with label\",\n            \"config\" => [\n                \"type\" => \"check\",\n                \"renderType\" => \"check\",\n                \"items\" => [\n                    [\n                        \"This is the checkbox label\",\n                    ],\n                ],\n            ],\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Image Manipulation Field in PHP\nDESCRIPTION: This snippet demonstrates how to set up a basic image manipulation field in TYPO3's TCA. The type automatically generates a database field, so no manual entry in ext_tables.sql is needed.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n..  literalinclude:: _Snippets/_basic.php\n```\n\n----------------------------------------\n\nTITLE: Configuring Number Field with Value Picker in TYPO3 TCA\nDESCRIPTION: Example of how to configure a valuePicker for a number input field in TYPO3's TCA. The configuration demonstrates different modes (default, append, prepend) and defines selectable items for each mode with their respective labels and values.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_ValuePicker.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\ndeclare(strict_types=1);\n\n$GLOBALS['TCA']['tx_example_domain_model_demo']['columns']['number_with_value_picker_default'] = [\n    'label' => 'Number with value picker (mode=default)',\n    'config' => [\n        'type' => 'number',\n        'valuePicker' => [\n            'items' => [\n                ['Three', 3],\n                ['Minus five', -5],\n                ['Hundred', 100],\n            ],\n        ],\n    ],\n];\n\n$GLOBALS['TCA']['tx_example_domain_model_demo']['columns']['number_with_value_picker_append'] = [\n    'label' => 'Number with value picker (mode=append)',\n    'config' => [\n        'type' => 'number',\n        'valuePicker' => [\n            'mode' => 'append',\n            'items' => [\n                ['Add ten', 10],\n                ['Add fifty', 50],\n                ['Add hundred', 100],\n            ],\n        ],\n    ],\n];\n\n$GLOBALS['TCA']['tx_example_domain_model_demo']['columns']['number_with_value_picker_prepend'] = [\n    'label' => 'Number with value picker (mode=prepend)',\n    'config' => [\n        'type' => 'number',\n        'valuePicker' => [\n            'mode' => 'prepend',\n            'items' => [\n                ['Hundred and', 100],\n                ['Two hundred and', 200],\n                ['Minus', -1],\n            ],\n        ],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Language Synchronization in TYPO3 TCA\nDESCRIPTION: This code snippet configures the 'allowLanguageSynchronization' option in the Table Configuration Array (TCA) for TYPO3. It enables editors to control whether values in a localized record are copied from the default or source records, or if they have their own unique values. The configuration requires the table to support localization and is stored in a JSON encoded array 'l10n_state'. Dependencies include proper TCA configuration and relevant localization support in the TYPO3 environment.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['allowLanguageSynchronization'] = false;\n```\n\n----------------------------------------\n\nTITLE: Registering Custom renderType in TYPO3 PHP\nDESCRIPTION: This snippet demonstrates how to register a new renderType node element in the TYPO3 configuration. It requires adding a node to the formEngine nodeRegistry, specifying the nodeName, priority, and associated class. This registration enables further customization of how fields are rendered in the backend.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/User/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TYPO3_CONF_VARS']['SYS']['formEngine']['nodeRegistry'][<current timestamp>] = [\n    'nodeName' => 'specialField',\n    'priority' => 40,\n    'class' => \\MyVendor\\MyExtension\\Form\\Element\\SpecialFieldElement::class,\n];\n```\n\n----------------------------------------\n\nTITLE: Enable Columns Configuration Example in TCA\nDESCRIPTION: Example showing how to configure the enablecolumns section in a TCA configuration file. This setup defines which fields control record visibility based on various conditions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/EnableColumns.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nreturn [\n    'ctrl' => [\n        // ...\n        'enablecolumns' => [\n            'disabled' => 'hidden',\n            'starttime' => 'starttime',\n            'endtime' => 'endtime',\n            'fe_group' => 'fe_group',\n        ],\n    ],\n    // ...\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Email Link Options in TYPO3 TCA Link Field\nDESCRIPTION: This configuration restricts available email link options to only body and cc fields. This controls which email parameters can be pre-filled when creating email links.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Appearance.rst.txt#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n'appearance' => [\n    'allowedOptions' => ['body', 'cc'],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring a selectSingle Field with Divider in TYPO3 TCA\nDESCRIPTION: Defines a single select field with size=6 that contains three options and a divider. The configuration uses 'selectSingle' renderType and demonstrates how to structure items with labels, values, and dividers.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle10.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_single_10' => [\n            'label' => 'select_single_10 size=6, three options',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'foo 1',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'foo 2',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'a divider',\n                        'value' => '--div--',\n                    ],\n                    [\n                        'label' => 'foo 3',\n                        'value' => 3,\n                    ],\n                ],\n                'size' => 6,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Simple Select Checkbox Configuration in TYPO3 TCA\nDESCRIPTION: Basic configuration for a select checkbox field with 3 possible values. Values are stored as comma-separated strings in the database.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'columns' => [\n    'select_checkbox_1' => [\n        'label' => 'select_checkbox_1',\n        'config' => [\n            'type' => 'select',\n            'renderType' => 'selectCheckBox',\n            'items' => [\n                ['Bonn', 'bonn'],\n                ['Cologne', 'cologne'],\n                ['Paris', 'paris'],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Using is_in Property with Whitespace in TYPO3 TCA\nDESCRIPTION: Example of how to include whitespace as an allowed character in the 'is_in' property. The example shows that to allow whitespace, it should be placed between other characters.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_IsIn.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\na b\n```\n\n----------------------------------------\n\nTITLE: Configuring passwordGenerator Field Control in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to enable the passwordGenerator field control for a password field in TYPO3's Table Configuration Array (TCA). It adds a button next to the password field that generates a random password based on defined rules.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_PasswordGenerator.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA']['tx_myextension_table']['columns']['password'] = [\n    'config' => [\n        'type' => 'password',\n        'fieldControl' => [\n            'passwordGenerator' => [\n                'enabled' => true,\n            ],\n        ],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Migrating Special Languages Field to Language Type in TYPO3 TCA\nDESCRIPTION: This code shows the migration of a 'special=languages' select field to the new 'language' type in TYPO3's TCA. The previous configuration required defining items with language labels, values, and flag icons, whereas the new configuration is simplified to just specifying the type as 'language'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Language/Migration.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n// Before\n\n'config' => [\n    'type' => 'select',\n    'renderType' => 'selectSingle',\n    'special' => 'languages',\n    'items' => [\n        [\n            'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.allLanguages',\n            -1,\n            'flags-multiple'\n        ],\n    ],\n    'default' => 0,\n]\n\n// After\n\n'config' => [\n    'type' => 'language'\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Slug Generation with a Custom Class - PHP\nDESCRIPTION: This snippet demonstrates how to set up a custom class method for modifying a slug's value during the generation process within TYPO3's TCA. The method receives an array of parameters that informs the custom logic for slug creation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Slug/_Properties/_GeneratorOptions.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['pages']['columns']['slug']['config']['generatorOptions']['postModifiers'][] =\n                MyClass::class . '->modifySlug';\n```\n\n----------------------------------------\n\nTITLE: Configuring TYPO3 TCA Control Settings in PHP\nDESCRIPTION: Defines the control section of a TCA configuration for a TYPO3 form engine type. Includes settings for labels, timestamps, versioning, language handling, and security settings. Located in the styleguide extension's configuration file.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/CtrlTypeCtrl.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'ctrl' => [\n        'title' => 'Form engine - type',\n        'label' => 'input_1',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'delete' => 'deleted',\n        'sortby' => 'sorting',\n        'iconfile' => 'EXT:styleguide/Resources/Public/Icons/tx_styleguide.svg',\n        'versioningWS' => true,\n        'languageField' => 'sys_language_uid',\n        'transOrigPointerField' => 'l10n_parent',\n        'transOrigDiffSourceField' => 'l10n_diffsource',\n        'translationSource' => 'l10n_source',\n        'enablecolumns' => [\n            'disabled' => 'hidden',\n        ],\n        'type' => 'record_type',\n        'security' => [\n            'ignorePageTypeRestriction' => true,\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Checkboxes in TYPO3 TCA\nDESCRIPTION: Demonstrates the configuration of three checkbox items in TYPO3's TCA, including labeled and unlabeled options with custom icon identifiers. The configuration shows how to set up different checkbox variants with varying display properties.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Checkbox3.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'checkbox_3' => [\n            'label' => 'checkbox_3',\n            'description' => 'three checkboxes, two with labels, one without',\n            'config' => [\n                'type' => 'check',\n                'items' => [\n                    [\n                        'label' => 'foo',\n                    ],\n                    [\n                        'label' => '',\n                    ],\n                    [\n                        'label' => 'foobar',\n                        'iconIdentifierChecked' => 'content-beside-text-img-below-center',\n                        'iconIdentifierUnchecked' => 'content-beside-text-img-below-center',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Column with TextTable Render Type in TYPO3 TCA\nDESCRIPTION: This snippet defines a TCA configuration for a 'text_17' column using the 'textTable' render type. It specifies the label, description, and configuration type for the field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text17.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'text_17' => [\n            'label' => 'text_17',\n            'description' => 'renderType=textTable',\n            'config' => [\n                'type' => 'text',\n                'renderType' => 'textTable',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring a Simple Input Field in TYPO3 TCA\nDESCRIPTION: Configuration example for a basic input field in TYPO3's TCA with a max length of 30 characters. Includes size, eval, and default configurations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'title' => [\n    'label' => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:examples.input_1.title',\n    'description' => 'Simple input title',\n    'config' => [\n        'type' => 'input',\n        'size' => 30,\n        'max' => 255,\n        'eval' => 'trim',\n        'default' => 'Default title',\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Starttime and Endtime Fields in TCA\nDESCRIPTION: Sets up starttime and endtime fields in TCA configuration to enable time-based visibility control. Records can appear at a specific time and/or disappear at another specific time.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/BestPractises/CommonFields.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    // ...\n    'enablecolumns' => [\n        'starttime' => 'starttime',\n        'endtime' => 'endtime',\n    ],\n    // ...\n],\n```\n\n----------------------------------------\n\nTITLE: Defining Disable Moving Children with Parent Configuration in PHP\nDESCRIPTION: This snippet defines the behaviour property `disableMovingChildrenWithParent` in TYPO3 to prevent child records from moving when their parent record is relocated. This is particularly useful for keeping child records in a designated storage area regardless of their parent's position in the tree.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_Behaviour.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['disableMovingChildrenWithParent'] = [\n    'type' => 'boolean',\n    'default' => false\n];\n?>\n```\n\n----------------------------------------\n\nTITLE: Configuring pid property in addRecord field control in TCA\nDESCRIPTION: This configuration sets the PID for new records created via the addRecord field control. It can be a hardcoded PID, or one of the markers: ###CURRENT_PID###, ###THIS_UID###, ###SITEROOT###. If not set, it defaults to the current PID.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FieldControl/_AddRecord.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']['addRecord']['options']['pid']\"\n```\n\n----------------------------------------\n\nTITLE: Defining a Single Data Structure for FlexForm in TYPO3\nDESCRIPTION: This code snippet demonstrates how to configure a FlexForm field in TYPO3 TCA to use a single, specific data structure.  The `ds` property under the `config` array is used to specify the path to the XML file defining the data structure.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/AboutDataStructures.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"config' => [\n    'type' => 'flex',\n    'ds' => [\n        'default' => 'FILE:EXT:my_extension/Configuration/FlexForms/Main.xml',\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring UUID Field Type in TYPO3 TCA\nDESCRIPTION: Basic configuration example for using the UUID field type in TYPO3's Table Configuration Array (TCA). The UUID field type simplifies working with Universally Unique Identifiers in TYPO3 by handling the database field generation automatically.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Uuid/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n..  literalinclude:: _Snippets/_basic.php\n```\n\n----------------------------------------\n\nTITLE: Disable Text Wrapping in Textarea (TYPO3 TCA)\nDESCRIPTION: This code snippet demonstrates how to disable text wrapping in a textarea field using the 'wrap' configuration option in TYPO3's TCA. Setting 'wrap' to 'off' prevents the textarea from automatically wrapping lines, which is useful for editing code or other content where line breaks should be explicitly defined. The code sets the 'wrap' property to 'off' inside the 'config' array for a specific field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/TextTable/_Properties/_Wrap.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n\"code\": \"'config' => [\n    'wrap' => 'off',\n]\"\n```\n\n----------------------------------------\n\nTITLE: Enable Virtual Text Wrapping in Textarea (TYPO3 TCA)\nDESCRIPTION: This code snippet illustrates how to enable virtual text wrapping in a textarea field using the 'wrap' configuration option in TYPO3's TCA. By default, if no wrap is specified, it's virtual. It will automatically wrap the lines like it would be expected for editing a text. The code sets the 'wrap' property to 'virtual' inside the 'config' array for a specific field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/TextTable/_Properties/_Wrap.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: typoscript\nCODE:\n```\n\"code\": \"'config' => [\n    'wrap' => 'virtual',\n]\"\n```\n\n----------------------------------------\n\nTITLE: Configuring addRecord Field Control for Select Field in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to configure the addRecord field control for a select field in TYPO3 TCA. It sets up a multiple-selection field for selecting pages with various options including the addRecord control.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldControl/AddRecord.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n'columns' => [\n    'select_multiplesidebyside' => [\n        'label' => 'select_multiplesidebyside',\n        'config' => [\n            'type' => 'select',\n            'renderType' => 'selectMultipleSideBySide',\n            'foreign_table' => 'pages',\n            'foreign_table_where' => 'ORDER BY pages.sorting',\n            'size' => 10,\n            'autoSizeMax' => 30,\n            'fieldControl' => [\n                'addRecord' => [\n                    'disabled' => false,\n                    'options' => [\n                        'title' => 'LLL:EXT:myext/Resources/Private/Language/locallang.xlf:addPage',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Placeholder Text in TYPO3 TCA Configuration\nDESCRIPTION: This snippet shows the structure for defining a placeholder text for an input field in TYPO3's TCA. It specifies the global path, data type, scope, and applicable field types for the placeholder configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_Placeholder.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n..  confval:: placeholder\n    :name: text-placeholder\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string\n    :Scope: Display\n    :Types: :ref:`input <columns-input>`\n\n    Placeholder text for the field.\n```\n\n----------------------------------------\n\nTITLE: Setting minimum length for TCA input field in TYPO3\nDESCRIPTION: This example shows how to configure the 'min' property in a TCA input field configuration. The property adds a minlength HTML attribute to the field and enables validation both in the FormEngine and DataHandler. Empty fields are not validated, so combining with 'required => true' is recommended for mandatory fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Min.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nmin\n```\n\n----------------------------------------\n\nTITLE: Custom Form Evaluation Class Implementation in TYPO3\nDESCRIPTION: Example implementation of a custom form evaluation class in TYPO3 with deevaluateFieldValue and evaluateFieldValue methods for field processing.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_Eval.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nnamespace TYPO3\\CMS\\Styleguide\\UserFunctions\\FormEngine;\n\nclass TypeText9Eval {\n    public function deevaluateFieldValue($value) {\n        return strtolower($value);\n    }\n\n    public function evaluateFieldValue($value) {\n        return strtoupper($value);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring addRecord Field Control with Options in TYPO3 TCA\nDESCRIPTION: This snippet illustrates the configuration of the addRecord field control with additional options in TYPO3 TCA. It sets up a field for selecting file mount points with custom options for the addRecord control.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldControl/AddRecord.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n'columns' => [\n    'file_mountpoints' => [\n        'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_tca.xlf:be_groups.file_mountpoints',\n        'config' => [\n            'type' => 'select',\n            'renderType' => 'selectMultipleSideBySide',\n            'foreign_table' => 'sys_filemounts',\n            'foreign_table_where' => ' AND sys_filemounts.pid=0 ORDER BY sys_filemounts.title',\n            'size' => 3,\n            'autoSizeMax' => 10,\n            'fieldControl' => [\n                'addRecord' => [\n                    'disabled' => false,\n                    'options' => [\n                        'title' => 'LLL:EXT:core/Resources/Private/Language/locallang_tca.xlf:file_mountpoints.addFileMount',\n                        'setValue' => 'prepend',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Enabling Language Synchronization for Radio Buttons in TCA\nDESCRIPTION: This code snippet demonstrates how to enable the `allowLanguageSynchronization` option for a radio button field in a TYPO3 TCA configuration. This allows editors to control whether the value of the radio button is synchronized with the default or source language record in localized records. It's important to note that this feature requires a table that supports localization.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Radio/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?php\n\nuse TYPO3\\CMS\\Core\\Utility\\ExtensionManagementUtility;\n\nExtensionManagementUtility::addTCAcolumns(\n    'some_table',\n    [\n        'some_field' => [\n            'config' => [\n                'type' => 'radio',\n                'behaviour' => [\n                    'allowLanguageSynchronization' => true,\n                ],\n                'items' => [\n                    ['LLL:EXT:my_extension/Resources/Private/Language/locallang_db.xlf:some_table.some_field.item_1', 0],\n                    ['LLL:EXT:my_extension/Resources/Private/Language/locallang_db.xlf:some_table.some_field.item_2', 1],\n                ],\n            ],\n        ],\n    ]\n);\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Rich Text Editor Field in TYPO3 TCA\nDESCRIPTION: This snippet shows how to configure a text field with rich text editing enabled in TYPO3's TCA. The configuration includes setting a label, specifying the field type as 'text', providing a default value, and enabling the rich text editor functionality.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Rte2.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'rte_2' => [\n            'label' => 'rte_2 default value',\n            'config' => [\n                'type' => 'text',\n                'default' => 'rte_2',\n                'enableRichtext' => true,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Number Field Range Validation in TYPO3 TCA\nDESCRIPTION: This example demonstrates how to limit the valid input range for a number field in TYPO3's TCA configuration. The range property is used to restrict the value between a lower bound of 10 and an upper bound of 1000.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_Range.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'aField' => [\n    'label' => 'aLabel',\n    'config' => [\n        'type' => 'number',\n        'range' => [\n            'lower' => 10,\n            'upper' => 1000\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA for tt_content Table in TYPO3 CMS\nDESCRIPTION: This PHP code snippet defines the 'ctrl' section of the Table Configuration Array (TCA) for the tt_content table in TYPO3 CMS. It specifies various control settings such as labels, timestamps, versioning, language handling, and icon classes for different content types.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/TtContentCtrl.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'ctrl' => [\n        'label' => 'header',\n        'label_alt' => 'subheader,bodytext',\n        'descriptionColumn' => 'rowDescription',\n        'sortby' => 'sorting',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'editlock' => 'editlock',\n        'title' => 'LLL:EXT:frontend/Resources/Private/Language/locallang_tca.xlf:tt_content',\n        'delete' => 'deleted',\n        'versioningWS' => true,\n        'groupName' => 'content',\n        'type' => 'CType',\n        'hideAtCopy' => true,\n        'prependAtCopy' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.prependAtCopy',\n        'copyAfterDuplFields' => 'colPos,sys_language_uid',\n        'useColumnsForDefaultValues' => 'colPos,sys_language_uid,CType',\n        'transOrigPointerField' => 'l18n_parent',\n        'transOrigDiffSourceField' => 'l18n_diffsource',\n        'languageField' => 'sys_language_uid',\n        'translationSource' => 'l10n_source',\n        'previewRenderer' => 'TYPO3\\\\CMS\\\\Backend\\\\Preview\\\\StandardContentPreviewRenderer',\n        'enablecolumns' => [\n            'disabled' => 'hidden',\n            'starttime' => 'starttime',\n            'endtime' => 'endtime',\n            'fe_group' => 'fe_group',\n        ],\n        'typeicon_column' => 'CType',\n        'typeicon_classes' => [\n            'header' => 'mimetypes-x-content-header',\n            'text' => 'mimetypes-x-content-text',\n            'default' => 'mimetypes-x-content-text',\n        ],\n        'searchFields' => 'header,header_link,subheader,bodytext,pi_flexform',\n        'security' => [\n            'ignorePageTypeRestriction' => true,\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring 1:n Inline Relations in TYPO3 TCA\nDESCRIPTION: This code defines a TCA configuration for a 1:n inline relation. It configures the 'inline_1' field to store related records from the 'tx_styleguide_inline_1n1n_child' table, using 'parentid' as the foreign field and 'parenttable' as the foreign table field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Inline1n1nInline1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'inline_1' => [\n            'label' => 'inline_1',\n            'config' => [\n                'type' => 'inline',\n                'foreign_table' => 'tx_styleguide_inline_1n1n_child',\n                'foreign_field' => 'parentid',\n                'foreign_table_field' => 'parenttable',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Auto-generated MM table structure in SQL\nDESCRIPTION: SQL structure of an automatically generated intermediate MM table by TYPO3's Database Analyzer. This table is created based on the TCA configuration and handles the many-to-many relationship.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/Mm.rst#2025-04-16_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE TABLE tx_myextension_myfield_mm (\n    uid_local int(11) DEFAULT '0' NOT NULL,\n    uid_foreign int(11) DEFAULT '0' NOT NULL,\n    sorting int(11) DEFAULT '0' NOT NULL,\n    sorting_foreign int(11) DEFAULT '0' NOT NULL,\n\n    KEY uid_local (uid_local),\n    KEY uid_foreign (uid_foreign)\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Single Items\nDESCRIPTION: This snippet outlines how to define select single items using TYPO3 TCA, including parameters such as label, value, icon, and description. It also notes the significance of ensuring default values are set appropriately to avoid issues with MySQL strict mode.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_Items.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: items\n    :name: select-single-items\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: array\n    :Scope: Display  / Proc.\n    :RenderType: all\n\n    Contains the elements for the selector box unless the property\n    :php:`foreign_table` or :php:`special` has been set in which case\n    automated values are set in addition to any values listed in this array.\n\n    Each element in this array is in itself an associative array.\n\n    label (string or LLL reference)\n        The displayed title.\n    \n    value (integer or string)\n        The value stored in the database.\n\n        *  The special value `--div--` was used to insert a non-selectable\n            value that appears as a divider label in the selector box. It is kept\n            for backwards-compatible reasons. Use :ref:`item groups\n            <columns-select-single-properties-item-groups>` for custom selects instead.\n        *  Values must not contain `,` (comma) and `|` (vertical bar). If you want to use :php:`authMode`, you should\n            also refrain from using `:` (colon).\n    \n    icon (EXT: path or icon identifier)\n        Optional icon. For custom icons use a path prepended with `EXT:` to refer to an image\n        file found inside an extension or use an registered icon identifier. If configured on the :php:`foreign_table`,\n        :ref:`selicon-field<ctrl-reference-selicon-field>` is respected.\n    \n    group (string)\n        The key of the :ref:`item group <columns-select-single-properties-item-groups>`.\n    \n    description (string or array)\n        Fifth value is an optional description text. This is only shown when the list is shown\n        with `renderType='selectCheckBox'.\n\n    ..  note::\n\n        When having a zero as :php:`value` and the field is of type :code:`int(10)` in the database, make sure to define\n        the :ref:`default value <columns-select-single-properties-default>` as well in TCA: :php:`'default' => 0`. Otherwise\n        issues may arise, e.g. with MySQL strict mode.\n```\n\n----------------------------------------\n\nTITLE: Defining SQL Search Conditions in TYPO3 TCA\nDESCRIPTION: This PHP snippet specifies additional SQL conditions for filtering search results in a TYPO3 database table. It adds an 'andWhere' clause to enhance search relevance based on content type. It is crucial to correctly structure the SQL statement to ensure compatibility with TYPO3's database layer.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/_Properties/_Search.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$temporaryColumns['some_date'] => [\n                'config' => [\n                    'search' => [\n                        'andWhere' => '{#CType}=\\'type_x\\' OR {#CType}=\\'type_y\\'',\n                    ],\n                    // ...\n                ],\n            ];\n```\n\n----------------------------------------\n\nTITLE: Defining Cover Areas in Image Cropping in PHP\nDESCRIPTION: This configuration allows defining cover areas to inform editors of sections affected by overlays, ensuring focus areas do not intersect with cover areas.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/Index.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n..  literalinclude:: _Snippets/_coverAreaCropVariants.php\n```\n\n----------------------------------------\n\nTITLE: Creating Inline Floating Checkboxes in TYPO3 TCA\nDESCRIPTION: Sets up checkboxes that float inline in a single row. This configuration allows for maximum use of horizontal space by fitting as many checkboxes as possible in one row.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/Default.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n\"tx_styleguide_elements_basic\" => [\n    \"ctrl\" => [],\n    \"columns\" => [\n        \"checkbox_16\" => [\n            \"label\" => \"checkbox_16 inline\",\n            \"config\" => [\n                \"type\" => \"check\",\n                \"renderType\" => \"check\",\n                \"inline\" => true,\n                \"items\" => [\n                    [\n                        \"foo1\",\n                    ],\n                    [\n                        \"foo2\",\n                    ],\n                    [\n                        \"foo3\",\n                    ],\n                    [\n                        \"foo4\",\n                    ],\n                ],\n            ],\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configure default folder for element browser in TCA (PHP)\nDESCRIPTION: This code snippet demonstrates how to configure the `elementBrowserEntryPoints` property within a TCA configuration for a folder column.  It sets the `_default` entry point to a specific folder, so that when the element browser is opened for this column, it will directly navigate to that folder. The folder path is specified as a string.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Folder/_Properties/_ElementBrowserEntryPoints.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"folder_group\" => [\n    'label' => 'Folder field',\n    'config' => [\n        'type' => 'folder',\n        'elementBrowserEntryPoints' => [\n            '_default' => '1:/styleguide/'\n        ]\n    ]\n],\n```\n\n----------------------------------------\n\nTITLE: Example: TCA select field definition\nDESCRIPTION: This snippet demonstrates how to define a TCA `select` field with `foreign_table_where` clause. It includes setting the `foreign_table` and using markers for dynamic filtering within the `foreign_table_where` condition. The example showcases using `###REC_FIELD_sys_language_uid###` to filter by the current record's language and uses the `{#...}` syntax for field quoting.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_ForeignTableWhere.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"foreign_table_where\" => 'AND {#sys_category}.{#sys_language_uid} IN (-1,0) AND {#sys_category}.{#hidden}=0 AND ###REC_FIELD_sys_language_uid### IN (-1,0)',\n```\n\n----------------------------------------\n\nTITLE: Defining Read-Only Field in TYPO3 TCA\nDESCRIPTION: Sets the 'readOnly' property for a field in the TYPO3 Table Configuration Array. When set to true, this renders the field as non-editable in the backend interface, allowing users to see but not modify the value.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n```\n\n----------------------------------------\n\nTITLE: Configuring Specific Record Link Types in TYPO3 TCA\nDESCRIPTION: Example showing how to configure link field to allow page, URL and specific custom link handlers like tx_news.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_AllowedTypes.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// 'tx_news' and 'custom_identifier' are both custom link handlers\n'allowedTypes' => ['page', 'url', 'tx_news', 'custom_identifier']\n```\n\n----------------------------------------\n\nTITLE: Configuring Password Field with Generator in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a password field named 'password_5' with an integrated password generator. The generator is configured to create base64 random strings of 35 characters length, with editing disabled.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Snippets/_Password_5.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'password_5' => [\n            'label' => 'password_5',\n            'description' => 'type=password fieldControl=passwordGenerator random=base64 allowEdit=false',\n            'config' => [\n                'type' => 'password',\n                'fieldControl' => [\n                    'passwordGenerator' => [\n                        'renderType' => 'passwordGenerator',\n                        'options' => [\n                            'title' => 'Create random base64 string',\n                            'allowEdit' => false,\n                            'passwordRules' => [\n                                'length' => 35,\n                                'random' => 'base64',\n                            ],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Suppress Combination Warning in TCA\nDESCRIPTION: This code snippet demonstrates how to suppress the default warning message displayed when using the `useCombination` option for inline relations in TYPO3 TCA. It also illustrates how to override the default warning message with a custom localized string.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_Appearance.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"$GLOBALS['TCA']['tx_demo_domain_model_demoinline']['columns']['irre_records']['config'] = [\n     'appearance' => [\n        'overwriteCombinationWarningMessage' => 'LLL:EXT:demo/Resources/Private/Language/locallang_db.xlf:tx_demo_domain_model_demoinline.irre_records.useCombinationWarning',\n        'useCombination' => TRUE\n     ],\n],\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Flexible Content Element in TYPO3 TCA\nDESCRIPTION: This snippet defines a TCA configuration for a flexible content element named 'flex_1'. It includes two sheets with descriptions, short descriptions, and input fields. The configuration uses a combination of PHP array structure and XML for the data structure.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Flex1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'flex_1' => [\n            'label' => 'flex_1 sheet description',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'flex',\n                'ds' => [\n                    'default' => '\n                        <T3DataStructure>\n                            <sheets>\n                                <sSheetdescription_1>\n                                    <ROOT>\n                                        <sheetTitle>sheet description 1</sheetTitle>\n                                        <sheetDescription>\n                                            sheetDescription: Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                                            Nam id ante ornare, iaculis elit a, malesuada augue. Etiam neque odio,\n                                            condimentum sed dolor vitae, sollicitudin varius lacus. Pellentesque sit amet aliquam arcu.\n                                            Phasellus ut euismod felis. Fusce at tempor turpis.\n\n                                            Nam eu arcu id lorem vestibulum tristique vel in erat. Phasellus maximus, arcu nec\n                                            condimentum venenatis, mauris nisl venenatis tellus, eget suscipit arcu nunc et purus.\n                                            Nunc luctus congue vulputate. Donec placerat, lorem vitae rhoncus euismod, ipsum ligula\n                                            tempor sapien, ac sodales metus mauris et lacus. Donec in ante a lectus semper rutrum nec\n                                            ut orci. Quisque id mi ultrices lacus fermentum consequat quis sed odio. Sed quis turpis\n                                            rutrum, convallis sem vitae, cursus enim. Maecenas sit amet sem nisi.\n                                        </sheetDescription>\n                                        <sheetShortDescr>\n                                            sheetShortDescr: Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                                            Nam id ante ornare, iaculis elit a, malesuada augue. Etiam neque odio,\n                                            condimentum sed dolor vitae, sollicitudin varius lacus. Pellentesque sit amet aliquam arcu.\n                                            Phasellus ut euismod felis. Fusce at tempor turpis.\n                                        </sheetShortDescr>\n                                        <type>array</type>\n                                        <el>\n                                            <input_1>\n                                                <label>input_1</label>\n                                                <config>\n                                                    <type>input</type>\n                                                </config>\n                                            </input_1>\n                                        </el>\n                                    </ROOT>\n                                </sSheetdescription_1>\n                                <sSheetdescription_2>\n                                    <ROOT>\n                                        <sheetTitle>sheet description 2</sheetTitle>\n                                        <sheetDescription>\n                                            foo\n                                        </sheetDescription>\n                                        <sheetShortDescr>\n                                            bar\n                                       </sheetShortDescr>\n                                        <type>array</type>\n                                        <el>\n                                            <input_2>\n                                                <label>input_2</label>\n                                                <config>\n                                                    <type>input</type>\n                                                </config>\n                                            </input_2>\n                                        </el>\n                                    </ROOT>\n                                </sSheetdescription_2>\n                            </sheets>\n                        </T3DataStructure>\n                    ',\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Group Field in TYPO3 TCA\nDESCRIPTION: This snippet defines a TCA configuration for a 'group_db_10' field. It sets up a group field that allows selection of pages, with a size of 1 and specific suggest options. The configuration includes relationship type, minimum items, and additional search fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/GroupDb10.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'group_db_10' => [\n            'label' => 'group_db_10 allowed=pages size=1',\n            'config' => [\n                'type' => 'group',\n                'allowed' => 'pages',\n                'relationship' => 'manyToOne',\n                'minitems' => 0,\n                'size' => 1,\n                'suggestOptions' => [\n                    'default' => [\n                        'additionalSearchFields' => 'nav_title, url',\n                        'addWhere' => 'AND pages.doktype = 1',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Integer Slider with Default Range in TYPO3 TCA\nDESCRIPTION: This example shows a slider configuration without specifying a range, which will default to values between 0 and 10,000. The step size is set to 1.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_Slider.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'config' => [\n    'type' => 'number',\n    'slider' => [\n        'step' => 1,\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Record Type Selection in TYPO3 TCA\nDESCRIPTION: This snippet defines the 'record_type' field in TYPO3's TCA. It configures a select field with multiple options for different record types, including standard, changed fields, column overrides, and types without fields to render.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/RecordType.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'record_type' => [\n            'label' => 'type',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'type 0',\n                        'value' => '0',\n                    ],\n                    [\n                        'label' => 'Type with changed fields',\n                        'value' => 'withChangedFields',\n                    ],\n                    [\n                        'label' => 'Type with columnsOverrides',\n                        'value' => 'withColumnsOverrides',\n                    ],\n                    [\n                        'label' => 'Type with no fields',\n                        'value' => 'withoutFieldsToRender',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring File Mountpoints Select Field in TYPO3 TCA\nDESCRIPTION: Defines a select field configuration for managing file mountpoints in backend user groups. The configuration includes a multiple-side-by-side select interface with popup controls for editing, adding, and listing mountpoints. It references the sys_filemounts table and includes various field control options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/FileMountpoints.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'file_mountpoints' => [\n            'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_tca.xlf:file_mountpoints',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectMultipleSideBySide',\n                'foreign_table' => 'sys_filemounts',\n                'foreign_table_where' => ' AND {#sys_filemounts}.{#pid}=0',\n                'size' => 3,\n                'autoSizeMax' => 10,\n                'fieldControl' => [\n                    'editPopup' => [\n                        'disabled' => false,\n                        'options' => [\n                            'title' => 'LLL:EXT:core/Resources/Private/Language/locallang_tca.xlf:file_mountpoints_edit_title',\n                        ],\n                    ],\n                    'addRecord' => [\n                        'disabled' => false,\n                        'options' => [\n                            'title' => 'LLL:EXT:core/Resources/Private/Language/locallang_tca.xlf:file_mountpoints_add_title',\n                            'setValue' => 'prepend',\n                        ],\n                    ],\n                    'listModule' => [\n                        'disabled' => false,\n                        'options' => [\n                            'title' => 'LLL:EXT:core/Resources/Private/Language/locallang_tca.xlf:file_mountpoints_list_title',\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Language Field in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to configure a language field in TYPO3's Table Configuration Array (TCA). It sets up a 'language' type field named 'sys_language_uid' with specific configuration options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Language/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n$GLOBALS['TCA']['someTable']['columns']['sys_language_uid'] = [\n    'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.language',\n    'config' => [\n        'type' => 'language',\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: TCA Configuration: Select Field with foreign table via MM table (SelectSingle15)\nDESCRIPTION: This code snippet demonstrates how to configure a select field in TYPO3 TCA that uses a foreign table and an MM table for storing the selected values. The `MM` property links the field to the intermediate table.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_ForeignTable.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: TYPO3 TCA\nCODE:\n```\n\"columns\" => [\n    'aField' => [\n        'config' => [\n            'type' => 'select',\n            'renderType' => 'selectSingle',\n            'foreign_table' => 'tableName',\n            'MM' => 'mm_table',\n            'minitems' => 1,\n            'maxitems' => 1,\n        ],\n    ],\n],\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Alternative Label Fields in TYPO3 TCA\nDESCRIPTION: Demonstrates how to specify alternative label fields for a database table in TYPO3's Table Configuration Array (TCA). The 'label_alt' property allows defining comma-separated alternative field names to use when the primary label field is empty.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_LabelAlt.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    'label' => 'header',\n    'label_alt' => 'subheader,bodytext',\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Field with editPopup Control in TYPO3 TCA\nDESCRIPTION: TCA configuration example showing how to implement a select field with editPopup control enabled. The configuration demonstrates a multiple-select field with side-by-side display and edit capabilities.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldControl/EditPopup.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'columns' => [\n    'select_multiplesidebyside_6' => [\n        'label' => 'select_multiplesidebyside_6',\n        'config' => [\n            'type' => 'select',\n            'renderType' => 'selectMultipleSideBySide',\n            'items' => [\n                ['Label 1', 1],\n                ['Label 2', 2],\n                ['Label 3', 3],\n            ],\n            'fieldControl' => [\n                'editPopup' => [\n                    'disabled' => false,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Implementing Four Checkboxes in Three Columns in TYPO3 TCA\nDESCRIPTION: Configures a group of four checkboxes arranged in three columns. The field value is a bitmap combination of checked values (1|2|4|8 = 15 when all are checked).\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/Default.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"tx_styleguide_elements_basic\" => [\n    \"ctrl\" => [],\n    \"columns\" => [\n        \"checkbox_12\" => [\n            \"label\" => \"checkbox_12 cols=3\",\n            \"config\" => [\n                \"type\" => \"check\",\n                \"renderType\" => \"check\",\n                \"cols\" => 3,\n                \"items\" => [\n                    [\n                        \"foo1\",\n                    ],\n                    [\n                        \"foo2\",\n                    ],\n                    [\n                        \"foo3\",\n                    ],\n                    [\n                        \"foo4\",\n                    ],\n                ],\n            ],\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: TCA Configuration: Select Single Field with selectIcons (SelectSingle12)\nDESCRIPTION: This code snippet shows how to configure a select single field with enabled selectIcons in TYPO3 TCA. The `foreign_table` property is used to specify the table from which the options are fetched.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_ForeignTable.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: TYPO3 TCA\nCODE:\n```\n\"columns\" => [\n    'aField' => [\n        'config' => [\n            'type' => 'select',\n            'renderType' => 'selectSingle',\n            'foreign_table' => 'tableName',\n            'minitems' => 1,\n            'maxitems' => 1,\n        ],\n    ],\n],\n\n```\n\n----------------------------------------\n\nTITLE: Auto-created TCA Column Definitions from ctrl Settings\nDESCRIPTION: The TCA column definitions automatically created by TYPO3 core based on the ctrl settings. These include language fields, timestamp fields, and enable columns like hidden, starttime, and endtime.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/AutoCreatedColumns.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'columns' => [\n    'deleted' => [\n        'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.deleted',\n        'config' => ['type' => 'check', 'default' => 0],\n    ],\n    'tstamp' => [\n        'label' => 'tstamp',\n        'config' => ['type' => 'input', 'renderType' => 'inputDateTime', 'eval' => 'datetime,int'],\n    ],\n    'sorting' => [\n        'label' => 'sorting',\n        'config' => ['type' => 'passthrough'],\n    ],\n    't3_origuid' => [\n        'config' => ['type' => 'passthrough'],\n    ],\n    'sys_language_uid' => [\n        'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.language',\n        'config' => [\n            'type' => 'language',\n        ],\n    ],\n    'l10n_parent' => [\n        'displayCond' => 'FIELD:sys_language_uid:>:0',\n        'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.l18n_parent',\n        'config' => [\n            'type' => 'select',\n            'renderType' => 'selectSingle',\n            'items' => [\n                ['label' => '', 'value' => 0],\n            ],\n            'foreign_table' => 'pages',\n            'foreign_table_where' => 'AND {#pages}.{#pid}=###CURRENT_PID### AND {#pages}.{#sys_language_uid} IN (-1,0)',\n            'default' => 0,\n        ],\n    ],\n    'l10n_source' => [\n        'config' => [\n            'type' => 'passthrough',\n        ],\n    ],\n    'l10n_diffsource' => [\n        'config' => [\n            'type' => 'passthrough',\n            'default' => '',\n        ],\n    ],\n    'hidden' => [\n        'exclude' => true,\n        'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.enabled',\n        'config' => [\n            'type' => 'check',\n            'renderType' => 'checkboxToggle',\n            'items' => [\n                [\n                    'label' => '',\n                    'invertStateDisplay' => true,\n                ],\n            ],\n        ],\n    ],\n    'starttime' => [\n        'exclude' => true,\n        'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.starttime',\n        'config' => [\n            'type' => 'input',\n            'renderType' => 'inputDateTime',\n            'eval' => 'datetime,int',\n            'default' => 0,\n        ],\n    ],\n    'endtime' => [\n        'exclude' => true,\n        'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.endtime',\n        'config' => [\n            'type' => 'input',\n            'renderType' => 'inputDateTime',\n            'eval' => 'datetime,int',\n            'default' => 0,\n            'range' => [\n                'upper' => mktime(0, 0, 0, 1, 1, 2038),\n            ],\n        ],\n    ],\n    'fe_group' => [\n        'exclude' => true,\n        'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.fe_group',\n        'config' => [\n            'type' => 'select',\n            'renderType' => 'selectMultipleSideBySide',\n            'size' => 5,\n            'maxitems' => 20,\n            'items' => [\n                [\n                    'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.hide_at_login',\n                    'value' => -1,\n                ],\n                [\n                    'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.any_login',\n                    'value' => -2,\n                ],\n                [\n                    'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.usergroups',\n                    'value' => '--div--',\n                ],\n            ],\n            'exclusiveKeys' => '-1,-2',\n            'foreign_table' => 'fe_groups',\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Area with Virtual Wrapping in TYPO3 TCA\nDESCRIPTION: Shows configuration for a text area field with virtual wrapping enabled (default behavior), suitable for normal text editing. Uses the 'virtual' wrap setting.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_Wrap.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n   'virtualWrap' => [\n      'label' => 'Text with virtual wrapping',\n      'config' => [\n         'type' => 'text',\n         'wrap' => 'virtual'\n      ]\n   ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Simple Group Field in PHP for Element Browser Entry Points\nDESCRIPTION: This PHP snippet defines a simple group field configuration in TYPO3 that specifies which page to open the element browser on for 'tt_content'. It requires an array structure with the 'elementBrowserEntryPoints' key to indicate the entry point for the tt_content table.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_ElementBrowserEntryPoints.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'simple_group' => [\n        'label' => 'Simple group field',\n        'config' => [\n            'type' => 'group',\n            'allowed' => 'tt_content',\n            'elementBrowserEntryPoints' => [\n                'tt_content' => 123,\n            ]\n        ]\n    ],\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Field with onChange Property in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to set up a select field in TYPO3's TCA with the onChange property set to 'reload'. This configuration triggers a form reload when the field value changes, useful for fields that are targets of display conditions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/_Properties/_OnChange.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$GLOBALS['TCA']['tt_content']['columns']['section_frame'] = [\n    'exclude' => true,\n    'label' => 'LLL:EXT:frontend/Resources/Private/Language/locallang_ttc.xlf:section_frame',\n    'config' => [\n        'type' => 'select',\n        'renderType' => 'selectSingle',\n        'items' => [\n            ['LLL:EXT:frontend/Resources/Private/Language/locallang_ttc.xlf:section_frame.I.1', '1'],\n            ['LLL:EXT:frontend/Resources/Private/Language/locallang_ttc.xlf:section_frame.I.2', '5'],\n            ['LLL:EXT:frontend/Resources/Private/Language/locallang_ttc.xlf:section_frame.I.3', '6'],\n        ],\n        'onChange' => 'reload'\n    ]\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring default_sortby for Multiple Field Sorting in TYPO3 TCA (PHP)\nDESCRIPTION: This example shows how to set up the default_sortby property in TYPO3's TCA to sort records by multiple fields (title ascending, then creation date descending) when listed in the TYPO3 backend. This configuration is used when there's no explicit sortby field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_DefaultSortby.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n'ctrl' => [\n    'default_sortby' => 'title ASC, crdate DESC',\n    ...\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring tableList Field Wizard in TCA\nDESCRIPTION: The `tableList` field wizard renders a list of allowed tables and links to the element browser, facilitating easy record selection from a popup window. This wizard is enabled by default. The configuration resides within the `fieldWizard` section of a TCA column's configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n        :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']\n        :type: array\n        :Scope: fieldWizard\n```\n\n----------------------------------------\n\nTITLE: YAML Site Configuration for Tree Starting Points\nDESCRIPTION: This YAML snippet demonstrates how to define a site configuration setting, specifically for the 'categories.root', which can then be used as a starting point for a tree structure in TCA configurations.  This allows for dynamic configuration based on the current site context.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_TreeConfig.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\"# Site config\nbase: /\nrootPageId: 1\ncategories:\n    root: 123\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Checkbox with Item Groups in TYPO3 TCA\nDESCRIPTION: Defines a select checkbox field configuration with multiple items organized into groups. The configuration includes labels, values, icons, and group assignments for checkbox items, along with defined item groups for organizational structure.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectCheckbox7.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_checkbox_7' => [\n            'label' => 'select_checkbox_7',\n            'description' => 'itemGroups',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectCheckBox',\n                'items' => [\n                    [\n                        'label' => 'foo 1',\n                        'value' => 1,\n                        'group' => 'group1',\n                    ],\n                    [\n                        'label' => 'foo 2',\n                        'value' => 2,\n                        'icon' => 'EXT:styleguide/Resources/Public/Icons/tx_styleguide.svg',\n                        'group' => 'group1',\n                    ],\n                    [\n                        'label' => 'foo 3',\n                        'value' => 3,\n                        'icon' => 'EXT:styleguide/Resources/Public/Icons/tx_styleguide.svg',\n                    ],\n                    [\n                        'label' => 'foo 4',\n                        'value' => 4,\n                    ],\n                    [\n                        'label' => 'foo 5',\n                        'value' => 1,\n                        'group' => 'group3',\n                    ],\n                ],\n                'itemGroups' => [\n                    'group1' => 'Group 1 with items',\n                    'group2' => 'Group 2 with no items',\n                    'group3' => 'Group 3 with items',\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Migrating Standard Language Select Field to Language Type in TYPO3 TCA\nDESCRIPTION: This code demonstrates how to migrate a standard language selector from a 'select' type to the new 'language' type in TYPO3's TCA. The old implementation requires specifying the foreign table, items, and default value, while the new implementation is much simpler with just the type definition.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Language/Migration.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n// Before\n\n'config' => [\n    'type' => 'select',\n    'renderType' => 'selectSingle',\n    'foreign_table' => 'sys_language',\n    'items' => [\n        ['LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.allLanguages', -1],\n        ['LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.default_value', 0]\n    ],\n    'default' => 0\n]\n\n// After\n\n'config' => [\n    'type' => 'language'\n]\n```\n\n----------------------------------------\n\nTITLE: Extended Content Element with Custom Fields in PHP\nDESCRIPTION: Shows an advanced content element configuration with custom fields and integration of system-added tabs and palettes\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/TtContent.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['tt_content']['types']['my_extended_element'] = [\n    'showitem' => 'header, my_custom_field, bodytext, --div--'\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Select Side-by-Side Field in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet defines a TCA configuration for a multiple-select field with side-by-side rendering. It includes options for field label, description, items, size limits, and multiple selections. The field is configured with a maximum of 10 visible items and an initial size of 3.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectMultiplesidebyside1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'select_multiplesidebyside_1' => [\n            'label' => 'select_multiplesidebyside_1 autoSizeMax=10, size=3 description',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectMultipleSideBySide',\n                'items' => [\n                    [\n                        'label' => 'foo 1',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'foo 2',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'a divider',\n                        'value' => '--div--',\n                    ],\n                    [\n                        'label' => 'foo 3',\n                        'value' => 3,\n                    ],\n                    [\n                        'label' => 'foo 4',\n                        'value' => 4,\n                    ],\n                    [\n                        'label' => 'foo 5',\n                        'value' => 5,\n                    ],\n                    [\n                        'label' => 'foo 6',\n                        'value' => 6,\n                    ],\n                ],\n                'size' => 3,\n                'autoSizeMax' => 10,\n                'multiple' => true,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Sorting in TYPO3\nDESCRIPTION: Demonstrates how to configure the sortby field in the ctrl section of TCA for automatic record ordering. This property manages the integer-based sorting of records within a table, typically using a dedicated 'sorting' field managed by the DataHandler.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Sortby.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$GLOBALS['TCA']['tx_myextension_domain_model_something'] = [\n    'ctrl' => [\n        'sortby' => 'sorting',\n        // Other TCA configuration...\n    ],\n    // Additional TCA configuration...\n];\n```\n\n----------------------------------------\n\nTITLE: Defining Items Processing Function in TYPO3 TCA\nDESCRIPTION: This snippet describes the itemsProcFunc configuration in TYPO3 TCA, allowing developers to specify a PHP method to manipulate the items array dynamically. It highlights the recommended usage of fully qualified class names (FQCN) for better IDE support.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Radio/_Properties/_ItemsProcFunc.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"\\VENDOR\\Extension\\UserFunction\\FormEngine\\YourClass::class . '->yourMethod'\"\n```\n\n----------------------------------------\n\nTITLE: Defining Default Value for Select-Tree Properties in TYPO3 TCA\nDESCRIPTION: This snippet defines the default value for a select-tree field in TYPO3's TCA configuration. It specifies the configuration path, expected data type, and the behavior when creating new records without a specified value. The first item in the selection array is chosen if no default is defined.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_Default.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: default\n    :name: select-tree-default\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string\n    :Scope: Display  / Proc.\n    :RenderType: all\n\n    Default value set if a new record is created. If empty, the first element in\nthe items array is selected.\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Password Policy in TYPO3 TCA\nDESCRIPTION: Example showing how to implement the default password policy configuration in TYPO3's TCA. Uses the basic password policy settings.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/PasswordPolicies.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'password' => [\n    'label' => 'Password field',\n    'config' => [\n        'type' => 'password',\n        'passwordPolicy' => 'default',\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Increase dbFieldLength for select field in TYPO3 TCA (PHP)\nDESCRIPTION: This code snippet shows how to increase the `dbFieldLength` for a `select` field in a TYPO3 extension's TCA configuration.  It defines the `dbFieldLength` to be 512 for the field `my_select_field` of type `select` within the `columns` array. This allows the developer to optimize the database field length for the select field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_DbFieldLength.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nreturn [\n    'ctrl' => [\n        'label' => 'title',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'cruser_id' => 'cruser_id',\n        'delete' => 'deleted',\n        'enablecolumns' => [\n            'disabled' => 'hidden',\n            'starttime' => 'starttime',\n            'endtime' => 'endtime',\n        ],\n        'searchFields' => 'title',\n        'iconfile' => 'EXT:my_extension/Resources/Public/Icons/MyTable.svg'\n    ],\n    'types' => [\n        '1' => ['showitem' => 'title, --div--;LLL:EXT:core/Resources/Private/Language/Form/locallang_tabs.xlf:language, --div--;LLL:EXT:core/Resources/Private/Language/Form/locallang_tabs.xlf:access, hidden, starttime, endtime'],\n    ],\n    'columns' => [\n        'title' => [\n            'label' => 'Title',\n            'config' => [\n                'type' => 'input',\n                'size' => 30,\n                'eval' => 'trim'\n            ],\n        ],\n        'my_select_field' => [\n            'label' => 'My Select Field',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    ['Option 1', 1],\n                    ['Option 2', 2],\n                    ['Option 3', 3],\n                ],\n                'dbFieldLength' => 512, // Increase the dbFieldLength\n            ],\n        ],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Field Wizard for Color Field in TYPO3 TCA\nDESCRIPTION: This snippet defines the configuration values for the color field wizard in the TYPO3 CMS using the TCA (Table Configuration Array). It includes parameters for default language differences, localization state selector, and other language content. Each configuration value is intended to facilitate the management of translations and content variation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Color/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n..  confval:: fieldWizard\n    :name: color-fieldWizard\n\n    ..  confval:: defaultLanguageDifferences\n        :name: color-fieldWizard-defaultLanguageDifferences\n        :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n        :type: array\n\n        For details see :confval:`fieldWizard-defaultLanguageDifferences`.\n\n    ..  confval:: localizationStateSelector\n        :name: color-fieldWizard-localizationStateSelector\n        :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n        :type: array\n\n        For details see :confval:`fieldWizard-localizationStateSelector`.\n\n    ..  confval:: otherLanguageContent\n        :name: color-fieldWizard-otherLanguageContent\n        :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n        :type: array\n\n        For details see :confval:`fieldWizard-otherLanguageContent`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Slug Field with String Replacements in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to define a slug field in TYPO3's TCA with specific generator options. It configures the field to generate URL path segments from another field (input_3), removes specific strings like '(f/m)', replaces slashes with hyphens, prepends a slash, and ensures uniqueness within the page.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Slug3.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'slug_3' => [\n            'label' => 'slug_3',\n            'description' => 'remove string (f/m)',\n            'config' => [\n                'type' => 'slug',\n                'generatorOptions' => [\n                    'fields' => [\n                        'input_3',\n                    ],\n                    'replacements' => [\n                        '(f/m)' => '',\n                        '/' => '-',\n                    ],\n                ],\n                'fallbackCharacter' => '-',\n                'prependSlash' => true,\n                'eval' => 'uniqueInPid',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: SelectSingle field with itemGroups Configuration\nDESCRIPTION: This snippet demonstrates how to configure a 'selectSingle' field with 'itemGroups' in TYPO3's TCA. The 'itemGroups' array defines the groups that will be used to categorize the options in the select field. The keys of the array are the group IDs, and the values are the labels for the groups.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_ItemGroups.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n\"columns\" => [\n        \"a_select_field\" => [\n            \"label\" => \"A select field\",\n            \"config\" => [\n                \"type\" => \"select\",\n                \"renderType\" => \"selectSingle\",\n                \"items\" => [\n                    [ 'Option one', 1 ],\n                    [ 'Option two', 2 ],\n                    [ 'Option three', 3 ],\n                    [ 'Option four', 4 ],\n                ],\n                'itemGroups' => [\n                    1 => 'Group one',\n                    3 => 'Group two'\n                ]\n            ]\n        ]\n    ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Extended Group Field in PHP for Multiple Element Browser Entry Points\nDESCRIPTION: This PHP snippet outlines an extended group field configuration that allows multiple tables ('tt_content' and 'tx_news_domain_model_news'). It specifies entry points using the special '_default' key along with individual table IDs.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_ElementBrowserEntryPoints.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'extended_group' => [\n        'label' => 'Extended group field',\n        'config' => [\n            'type' => 'group',\n            'allowed' => 'tt_content,tx_news_domain_model_news',\n            'elementBrowserEntryPoints' => [\n                '_default' => '###CURRENT_PID###', // E.g. use a special marker\n                'tt_content' => 123,\n                'tx_news_domain_model_news' => 124,\n            ]\n        ]\n    ],\n```\n\n----------------------------------------\n\nTITLE: Configuring Foreign Table Select Field in TYPO3 TCA\nDESCRIPTION: Defines a select field configuration that pulls data from a foreign table in TYPO3's TCA. The field uses selectSingle renderType and requires at least one selection (minitems=1). The data is sourced from the 'tx_styleguide_type' table.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/TypeForeignForeignTable.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'foreign_table' => [\n            'label' => 'type from foreign table',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'foreign_table' => 'tx_styleguide_type',\n                'minitems' => 1,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Ctrl Type in TYPO3 TCA Configuration\nDESCRIPTION: The PHP snippet initializes the ctrl section\\'s type property of the TCA configuration. It indicates which field in the database specifies the type of each record. This setup is used to dynamically change form fields based on the record type.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Examples/_40_OptionalTypes.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n..  include:: /CodeSnippets/CtrlTypeCtrl.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring TYPO3 TCA Input Field with valuePicker for Seasonal Values\nDESCRIPTION: This code defines a TCA configuration for an input field named 'input_33' with a valuePicker that provides a dropdown of seasonal options. It demonstrates how to set up predefined values that users can select from while still allowing manual input. Each option has both a value (stored in the database) and a label (displayed to the user).\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Input33.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'input_33' => [\n            'label' => 'input_33',\n            'description' => 'valuePicker',\n            'config' => [\n                'type' => 'input',\n                'size' => 20,\n                'eval' => 'trim',\n                'valuePicker' => [\n                    'items' => [\n                        [\n                            'value' => 'spring',\n                            'label' => 'Spring',\n                        ],\n                        [\n                            'value' => 'summer',\n                            'label' => 'Summer',\n                        ],\n                        [\n                            'value' => 'autumn',\n                            'label' => 'Autumn',\n                        ],\n                        [\n                            'value' => 'winter',\n                            'label' => 'Winter',\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring MM Table Relation in TCA\nDESCRIPTION: Defines a many-to-many (MM) relation configuration in TYPO3 Table Configuration Array, specifying how database relations are stored and managed between tables\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_Mm.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['MM']\n```\n\n----------------------------------------\n\nTITLE: Configuring Timestamp Fields in TYPO3 TCA\nDESCRIPTION: Example TCA configuration showing automatic timestamp fields handled by the DataHandler. Demonstrates the standard fields for creation and modification timestamps in a TYPO3 database table.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Tstamp.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[   \n    'tstamp' => 'tstamp',         // last modification timestamp\n    'crdate' => 'crdate',         // creation timestamp\n    'cruser_id' => 'cruser_id'    // user ID of creator\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Side-by-Side Select Field in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a multiple select field with side-by-side display. The field includes grouped items, size limitations (size=3, autoSizeMax=10), and supports multiple selections. Items are organized into groups with labels and values.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectMultiplesidebyside10.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_multiplesidebyside_10' => [\n            'label' => 'select_multiplesidebyside_1 autoSizeMax=10, size=3 description',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectMultipleSideBySide',\n                'items' => [\n                    [\n                        'label' => 'item 1',\n                        'value' => 1,\n                        'group' => 'group1',\n                    ],\n                    [\n                        'label' => 'item 2',\n                        'value' => 2,\n                        'group' => 'group1',\n                    ],\n                    [\n                        'label' => 'item 3',\n                        'value' => 3,\n                        'group' => 'group3',\n                    ],\n                    [\n                        'label' => 'item 4',\n                        'value' => 4,\n                    ],\n                ],\n                'itemGroups' => [\n                    'group1' => 'Group 1 with items',\n                    'group2' => 'Group 2 with no items',\n                    'group3' => 'Group 3 with items',\n                ],\n                'size' => 3,\n                'autoSizeMax' => 10,\n                'multiple' => true,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring a folder-type group field in TYPO3 TCA\nDESCRIPTION: This snippet defines a TCA configuration for a group field with internal_type 'folder'. The configuration includes basic properties like exclude, label, description, and type settings. This allows users to select folders in the TYPO3 backend.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/GroupFolder1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'columns' => [\n    'group_folder_1' => [\n        'exclude' => 1,\n        'label' => 'group_folder_1 desription',\n        'description' => 'field description',\n        'config' => [\n            'type' => 'group',\n            'internal_type' => 'folder',\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Adding Select Item Groups to TCA in PHP\nDESCRIPTION: This snippet demonstrates how to add a custom select item group to an existing TCA table using the `ExtensionManagementUtility::addTcaSelectItemGroup` method.  It specifies the table name, field name, item group identifier, label, and positioning relative to other items.  This is typically used within `Configuration/TCA/Overrides/` files.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Properties/ItemGroups.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nExtensionManagementUtility::addTcaSelectItemGroup(\n        'tt_content',\n        'CType',\n        'sliders',\n        'LLL:EXT:my_slider_mixtape/Resources/Private/Language/locallang_tca.xlf:tt_content.group.sliders',\n        'after:lists'\n    );\n```\n\n----------------------------------------\n\nTITLE: Configuring allowLanguageSynchronization for a TCA field in TYPO3\nDESCRIPTION: This code snippet demonstrates how to enable language synchronization for a field in a TYPO3 TCA configuration. When enabled, this allows editors to choose whether a field's value should be synchronized with the default language or have its own value in translated content.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Json/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n$GLOBALS['TCA']['someTable']['columns']['someField']['config'] = [\n    'type' => 'json',\n    'behaviour' => [\n        'allowLanguageSynchronization' => true,\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Specifying Fields by Type in TYPO3 TCA Configuration\nDESCRIPTION: The PHP snippet outlines the types section of the TCA, specifying which fields should be displayed for each type value. This configuration defines the order and presence of form elements based on the record\\'s type, enabling flexible form customization.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Examples/_40_OptionalTypes.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n..  include:: /CodeSnippets/CtrlTypeTypes.rst.txt\n```\n\n----------------------------------------\n\nTITLE: TCA 'ctrl' Minimal Configuration Example\nDESCRIPTION: This snippet demonstrates a minimal 'ctrl' configuration within a TCA definition for TYPO3, highlighting the usage of basic properties.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Label.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n\"<?php\\n\\nreturn [\\n    'ctrl' => [\\n        'title' => 'LLL:EXT:styleguide/Resources/Private/Language/locallang_db.xlf:tx_styleguide_minimal',\n        'label' => 'title',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'cruser_id' => 'cruser_id',\n        'delete' => 'deleted',\n        'enablecolumns' => ['disabled' => 'hidden'],\n        'searchFields' => 'title',\n        'iconfile' => 'EXT:styleguide/Resources/Public/Icons/tx_styleguide_minimal.svg',\n    ],\n    'types' => [\n        '1' => ['showitem' => 'title, hidden'],\n    ],\n    'columns' => [\n        'hidden' => [\n            'exclude' => true,\n            'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.visible',\n            'config' => [\n                'type' => 'check',\n                'renderType' => 'checkboxToggle',\n                'items' => [\n                    [\n                        'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.visible',                        '',\n                    ]\n                ],\n            ]\n        ],\n        'title' => [\n            'exclude' => true,\n            'label' => 'LLL:EXT:styleguide/Resources/Private/Language/locallang_db.xlf:tx_styleguide_minimal.title',\n            'config' => [\n                'type' => 'input',\n                'size' => 30,\n                'eval' => 'trim,required'\n            ],\n        ],\n    ],\n];\\n\"\n```\n\n----------------------------------------\n\nTITLE: Defining Text Format Configuration in TYPO3 TCA\nDESCRIPTION: This snippet documents the 'format' configuration option within the TYPO3 TCA, specifying the expected values that define the language the code editor should process. It outlines the context of this configuration and lists the accepted values for text formatting.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/T3Editor/_Properties/_Format.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: format\n    :name: text-format\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string (keyword)\n    :Scope: Display\n\n    The value specifies the language the code editor should handle. Allowed\n    values:\n\n    *   :php:`css`\n    *   :php:`html`\n    *   :php:`javascript`\n    *   :php:`php`\n    *   :php:`typoscript`\n    *   :php:`xml`\n\n    See also :ref:`tca_example_codeEditor_1`.\n```\n\n----------------------------------------\n\nTITLE: SelectSingle field with itemGroups configuration\nDESCRIPTION: This example shows how to configure a SelectSingle field with itemGroups in TYPO3 TCA. It defines an array of key-value pairs for the itemGroups, where the key is the item group ID and the value is the label of the item group. This configuration will render the select field with the specified item groups.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_ItemGroups.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n\"code\": \"'selectSingle16' => [\n    'exclude' => true,\n    'label' => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle16',\n    'config' => [\n        'type' => 'select',\n        'renderType' => 'selectSingle',\n        'items' => [\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle16.item0', 0],\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle16.item1', 1],\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle16.item2', 2],\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle16.item3', 3],\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle16.item4', 4],\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle16.item5', 5],\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle16.item6', 6],\n        ],\n        'itemGroups' => [\n            1 => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle16.group1',\n            2 => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle16.group2',\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring valuePicker for Link Fields in TYPO3 TCA\nDESCRIPTION: Demonstrates how to configure a valuePicker property in TYPO3's TCA for link fields. The configuration includes mode settings and items array with labels and values for the select dropdown. Supports blank/append/prepend modes and localized labels.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_ValuePicker.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n..  literalinclude:: _Snippets/_valuePicker.php\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Column Authorization Mode in TYPO3 TCA\nDESCRIPTION: Defines the authorization mode for a selector box in TYPO3, specifically using the 'explicitAllow' mode which requires explicit user permissions for static values\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_AuthMode.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['authMode'] = 'explicitAllow'\n```\n\n----------------------------------------\n\nTITLE: Setting allowLanguageSynchronization in TCA Configuration\nDESCRIPTION: Configuration example showing how to enable language synchronization behavior for a TCA field. This allows editors to control whether field values should be synchronized across language versions. The setting is stored in the l10n_state database field as JSON.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nEXT:my_extension/Configuration/TCA/Overrides/someTable.php\n```\n\n----------------------------------------\n\nTITLE: Configuring allowLanguageSynchronization in TCA\nDESCRIPTION: This snippet demonstrates how to enable the `allowLanguageSynchronization` behavior in a TCA configuration for a specific field. This setting enables the LocalizationStateSelector field wizard, allowing editors to control synchronization between localized and default/source language records. The state is then stored within the `l10n_state` field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n$GLOBALS['TCA']['some_table']['columns']['some_field']['config']['behaviour']['allowLanguageSynchronization'] = true;\n\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Field with Dynamic Placeholder in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to set up a text field in TYPO3's TCA that uses another field's value as a placeholder. It enables the 'useOrOverridePlaceholder' mode and sets the field as nullable, allowing it to store NULL values in the database.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text14.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'text_14' => [\n            'label' => 'text_14',\n            'description' => 'placeholder=__row|text_12, mode=useOrOverridePlaceholder, nullable=true',\n            'config' => [\n                'type' => 'text',\n                'placeholder' => '__row|text_12',\n                'nullable' => true,\n                'mode' => 'useOrOverridePlaceholder',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Field with Static Values and Foreign Table in TYPO3 TCA\nDESCRIPTION: This code snippet demonstrates how to configure a single select field in TYPO3's TCA. It includes static values, dividers to organize options, and data from a foreign table with a specific WHERE condition. The configuration uses 'selectSingle' renderType and adds a prefix to foreign table values.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle3.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_single_3' => [\n            'label' => 'select_single_3 static values, dividers, foreign_table_where',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'Static values',\n                        'value' => '--div--',\n                    ],\n                    [\n                        'label' => 'static -2',\n                        'value' => -2,\n                    ],\n                    [\n                        'label' => 'static -1',\n                        'value' => -1,\n                    ],\n                    [\n                        'label' => 'DB values',\n                        'value' => '--div--',\n                    ],\n                ],\n                'foreign_table' => 'tx_styleguide_staticdata',\n                'foreign_table_where' => 'AND {#tx_styleguide_staticdata}.{#value_1} LIKE \\'%foo%\\' ORDER BY uid',\n                'foreign_table_prefix' => 'A prefix: ',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Select Field with Item Groups in TYPO3\nDESCRIPTION: This code snippet demonstrates how to configure a select field in TYPO3's TCA with the 'selectSingleBox' render type and organize items into groups. It uses the 'itemGroups' property to define multiple groups and assigns items to specific groups through the 'group' property in each item configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSinglebox3.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_singlebox_3' => [\n            'label' => 'select_singlebox_3',\n            'description' => 'itemGroups',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingleBox',\n                'items' => [\n                    [\n                        'label' => 'item 1',\n                        'value' => 1,\n                        'group' => 'group1',\n                    ],\n                    [\n                        'label' => 'item 2',\n                        'value' => 2,\n                        'group' => 'group1',\n                    ],\n                    [\n                        'label' => 'item 3',\n                        'value' => 3,\n                        'group' => 'group3',\n                    ],\n                    [\n                        'label' => 'item 4',\n                        'value' => 3,\n                    ],\n                ],\n                'itemGroups' => [\n                    'group1' => 'Group 1 with items',\n                    'group2' => 'Group 2 with no items',\n                    'group3' => 'Group 3 with items',\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Palette Types in TYPO3 TCA\nDESCRIPTION: This code configures various palette options in a TYPO3 TCA definition. It demonstrates different palette syntax variations including unnamed palettes, labeled palettes, and hidden palettes. The code shows how to organize form elements into logical groups using the --palette-- keyword.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/PalettesTypes.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'types' => [\n        [\n            'showitem' => '\n                --div--;palette,\n                    --palette--;;palette_1,\n                    --palette--;palette_2;palette_2,\n                    --palette--;palette_3;palette_3,\n                    --palette--;;palette_4,\n                    --palette--;palette_5;palette_5,\n                --div--;hidden palette,\n                    --palette--;palette_6;palette_6,\n                    --palette--;palette_7 (palette_6 hidden);palette_7,\n            ',\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: PHP TCA Configuration with Tree Starting Points\nDESCRIPTION: This PHP code shows an example of a TCA configuration that uses a site configuration value within the 'startingPoints' array of the 'treeConfig'. It demonstrates how to reference a site configuration value using the `###SITE:###` syntax within a TCA configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_TreeConfig.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"// Example TCA config\n'config' => [\n     'treeConfig' => [\n          'startingPoints' => '1,2,###SITE:categories.root###',\n     ],\n],\n\"\n```\n\n----------------------------------------\n\nTITLE: Configuring MM Property in TCA Category Field\nDESCRIPTION: Shows the path and usage of the MM property in TYPO3's TCA configuration. The MM property specifies the intermediate table name for many-to-many relationships.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_Mm.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['MM']\n```\n\n----------------------------------------\n\nTITLE: Configuring Autocomplete for TCA Input Fields in TYPO3 CMS (PHP)\nDESCRIPTION: This snippet demonstrates how to enable browser autocomplete for an input field in TYPO3's TCA configuration. Setting 'autocomplete' to true adds the HTML attribute autocomplete=\"on\" to the input field, allowing browsers to suggest values based on the user's history.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Autocomplete.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'title' => [\n    'label' => 'LLL:EXT:lang/locallang_tca.xlf:sys_file_reference.title',\n    'config' => [\n        'type' => 'input',\n        'size' => 20,\n        'nullable' => true,\n        'autocomplete' => true\n    ]\n],\n```\n\n----------------------------------------\n\nTITLE: Basic Display Condition in TCA\nDESCRIPTION: This snippet demonstrates a basic display condition in TCA. It checks if the field 'tx_templavoila_ds' has a 'true' value. If it does not, the field with this condition will not be displayed.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/DisplayConditions.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"displayCond' => 'FIELD:tx_templavoila_ds:REQ:true',\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Integer Slider Between 0 and 100 in TYPO3 TCA\nDESCRIPTION: This example demonstrates how to configure a slider for an integer field with a range between 0 and 100 and a step size of 1. The slider has a width of 200 pixels.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_Slider.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'config' => [\n    'type' => 'number',\n    'range' => [\n        'lower' => 0,\n        'upper' => 100,\n    ],\n    'slider' => [\n        'step' => 1,\n        'width' => 200,\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Defining fieldWizard Configuration Path in TYPO3 TCA\nDESCRIPTION: ReStructuredText configuration value definition specifying the path and type for fieldWizard settings in TYPO3's TCA global configuration array. The fieldWizard setting is used to configure additional UI elements for form fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Json/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n..  confval:: fieldWizard\n    :type: string\n    :name: json-fieldWizard\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']\n\n    See :confval:`fieldWizard` for details.\n```\n\n----------------------------------------\n\nTITLE: Configuring Fixed Font Text Field in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet demonstrates how to configure a text field with fixed-width font and enabled tabulators in TYPO3's TCA. It sets up a 'bodytext' field with specific display properties.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_FixedFont.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"bodytext\" => [\n    \"label\" => \"Text with tabs\",\n    \"config\" => [\n        \"type\" => \"text\",\n        \"cols\" => 40,\n        \"rows\" => 5,\n        \"fixedFont\" => true,\n        \"enableTabulator\" => true,\n        \"wrap\" => \"off\"\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Setting PID List and Depth in TCA Suggest Options in PHP\nDESCRIPTION: This snippet configures the PID list and depth for a storage_pid field in TYPO3's TCA. It restricts suggest searches to certain page IDs and their subpages. Dependencies include TYPO3's table configuration structure. Input consists of specific PID values, and the output affects which pages are considered in the suggest wizard.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_SuggestOptions.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'storage_pid' => [\n   'config' => [\n      'suggestOptions' => [\n         'default' => [\n            'pidList' => '1,2,3,45',\n         ],\n      ],\n   ],\n]\n```\n\nLANGUAGE: php\nCODE:\n```\n'storage_pid' => [\n   'config' => [\n      'suggestOptions' => [\n         'default' => [\n            'pidList' => '6,7',\n            'pidDepth' => 4\n         ],\n      ],\n   ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Foreign Table Prefix in TYPO3 TCA\nDESCRIPTION: Specifies a prefix for the label of records from a foreign table, which can be a static string or a language reference. Used in display configuration within the Table Configuration Array (TCA).\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_ForeignTablePrefix.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['foreign_table_prefix']\n```\n\n----------------------------------------\n\nTITLE: Configuring invertStateDisplay in TYPO3 TCA\nDESCRIPTION: Configuration property that controls the visual display state of checkboxes in TYPO3's TCA. When set to true, it inverts the visual representation of the checkbox state. This property is used in the global TCA configuration array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_InvertStateDisplay.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: invertStateDisplay\n    :name: check-invertStateDisplay\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display\n    :Default: false\n    :Example: :ref:`columns-checkbox-examples-18`\n```\n\n----------------------------------------\n\nTITLE: Accessing FlexForm Values with Display Conditions\nDESCRIPTION: This XML snippet shows various examples of accessing field values from different sources within a FlexForm's display conditions. It covers referencing parent records, neighboring fields on the same sheet, and fields on different sheets, allowing for highly flexible visibility rules.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/DisplayConditions.rst#2025-04-16_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n    <!-- Hide field if value of record field \"header\" is not \"true\" -->\n    <displayCond>FIELD:parentRec.header:REQ:true</displayCond>\n    <!-- Hide field if value of parent record field \"field_1\" is not \"foo\" -->\n    <displayCond>FIELD:parentRec.field_1:!=:foo</displayCond>\n    <!-- Hide field if value of neighbour field \"flexField_1 on same sheet is not \"foo\" -->\n    <displayCond>FIELD:flexField_1:!=:foo</displayCond>\n    <!-- Hide field if value of field \"flexField_1\" from sheet \"sheet_1\" is not \"foo\" -->\n    <displayCond>FIELD:sheet_1.flexField_1:!=:foo</displayCond>\n```\n\n----------------------------------------\n\nTITLE: Foreign Table Type Configuration in TCA\nDESCRIPTION: Configures type relation using a foreign table reference in the ctrl section.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Type.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    'title' => 'LLL:EXT:styleguide/Resources/Private/Language/locallang_db.xlf:tx_styleguide_type_foreign',\n    'label' => 'title',\n    'tstamp' => 'tstamp',\n    'crdate' => 'crdate',\n    'delete' => 'deleted',\n    'sortby' => 'sorting',\n    'type' => 'foreign_table:record_type',\n    'iconfile' => 'EXT:styleguide/Resources/Public/Icons/tx_styleguide.svg'\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring localizationStateSelector Field Wizard in TYPO3 TCA (PHP)\nDESCRIPTION: Configures the localizationStateSelector field wizard for a text field in TYPO3's TCA. This wizard allows selection of localization states for the field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n```\n\n----------------------------------------\n\nTITLE: Example: Table Type Content Rendering Override\nDESCRIPTION: Shows how columnsOverrides can modify rendering for 'table' type content by changing renderType and adding specific wrap configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Properties/_ColumnsOverrides.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n// Core example of columnsOverrides for table type\n'columnsOverrides' => [\n    'bodytext' => [\n        'config' => [\n            'renderType' => 'textTable',\n            'wrap' => 'off'\n        ]\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: TCA Overrides for Plugin FlexForm Registration\nDESCRIPTION: Shows how to add a FlexForm field to the tt_content table and register a FlexForm for a plugin using ExtensionManagementUtility\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/Examples.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nTCA Overrides configuration for plugin FlexForm\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Select Field with Icon Display in TYPO3 TCA\nDESCRIPTION: This snippet shows how to configure a select field with renderType 'selectSingle' that displays icons for options using the foreign_table property. The configuration enables the selectIcons fieldWizard to show selectable icons in the backend interface.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle12.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_single_12' => [\n            'label' => 'select_single_12 foreign_table selicon_field',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'foreign_table' => 'tx_styleguide_elements_select_single_12_foreign',\n                'fieldWizard' => [\n                    'selectIcons' => [\n                        'disabled' => false,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Field Behavior with Localization in TYPO3 PHP\nDESCRIPTION: This PHP code snippet illustrates how to configure the `allowLanguageSynchronization` behavior for a TYPO3 TCA field. This setting allows editors to decide if localized records should synchronize with the default language or maintain individual field values. Key configurations are included, such as path specifications in the TCA array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_Behaviour.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n// Configuration for allowing language synchronization for a single-select field\n$TCA['someTable']['columns']['someField']['config']['behaviour']['allowLanguageSynchronization'] = true;\n?>\n```\n\n----------------------------------------\n\nTITLE: SelectSingle Example 12: Foreign Rows with Icons\nDESCRIPTION: This example demonstrates selecting foreign rows with icons. It configures the `selectSingle` field to display options from a related table and include icons next to each option.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: typoscript\nCODE:\n```\n\"\"\"\n\\t\\t'some_field' => [\n\\t\\t\\t'label' => 'LLL:EXT:your_ext/Resources/Private/Language/locallang_db.xlf:your_table.some_field',\n\\t\\t\\t'config' => [\n\\t\\t\\t\\t'type' => 'select',\n\\t\\t\\t\\t'renderType' => 'selectSingle',\n\\t\\t\\t\\t'foreign_table' => 'your_foreign_table',\n\\t\\t\\t\\t'foreign_table_where' => 'AND your_foreign_table.pid=###REC_FIELD_pid###',\n\\t\\t\\t\\t'itemsProcFunc' => Your\\Extension\\Utility\\ItemsProcFunc::class . '->addIconReference',\n\\t\\t\\t\\t'size' => 1,\n\\t\\t\\t\\t'minitems' => 0,\n\\t\\t\\t\\t'maxitems' => 1,\n\\t\\t\\t],\n\\t\\t],\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Accessing the default property in TYPO3 TCA configuration\nDESCRIPTION: Shows the path to the 'default' property within the TYPO3 TCA structure. This property sets the default value for an input field when a new record is created. If left empty, no input will be selected initially.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Default.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n:Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['default']\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA ItemsProcFunc for Checkbox Items\nDESCRIPTION: Demonstrates how to configure a custom itemsProcFunc for dynamically generating checkbox items in TYPO3 TCA. Specifies the field configuration for a select_single_2 field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/Examples.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'select_single_2' => [\n    'exclude' => true,\n    'label' => 'Select single 2',\n    'config' => [\n        'type' => 'check',\n        'items' => [],\n        'itemsProcFunc' => MyVendor\\MyExtension\\UserFunction\\ItemsProcFunc::class . '->getItems'\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Decimal Slider Between 0 and 1 in TYPO3 TCA\nDESCRIPTION: This example illustrates how to configure a slider for decimal values between 0 and 1 with a step size of 0.01. The slider is given a width of 200 pixels.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_Slider.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'config' => [\n    'type' => 'number',\n    'range' => [\n        'lower' => 0,\n        'upper' => 1,\n    ],\n    'slider' => [\n        'step' => 0.01,\n        'width' => 200,\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: TYPO3 TCA Checkbox Evaluation Parameter\nDESCRIPTION: Example of the maximumRecordsChecked evaluation keyword reference in TCA configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_Eval.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nmaximumRecordsChecked\n```\n\n----------------------------------------\n\nTITLE: Defining Foreign Table for Category Field in TYPO3 TCA\nDESCRIPTION: Specifies the 'foreign_table' property in the TCA configuration for a category field. This property defines the table from which category items will be populated. The selected item UIDs are stored as a comma-separated list by default, but can be stored in an MM table if specified.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_ForeignTable.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nforeign_table\n```\n\n----------------------------------------\n\nTITLE: Configuring allowNonIdValues for TYPO3 TCA\nDESCRIPTION: This configuration option allows the use of non-integer values when the 'select-tree-foreign-table' option is enabled. Setting this option to true enables additional item entries to the list, including string-value elements. Note that mixing non-database relations with database relations can lead to issues if not handled correctly.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_AllowNonIdValues.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: allowNonIdValues\n    :name: select-tree-allowNonIdValues\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Proc.\n    :RenderType: all\n\n    Only useful if :confval:`select-tree-foreign-table` is enabled.\n\n    If set, then values which are not integer ids will be allowed. May be needed\n    if you use itemsProcFunc or just enter additional items in the items array\n    to produce some string-value elements for the list.\n\n    ..  note::\n        If you mix non-database relations with database relations like this, DO\n        NOT use integers for values and DO NOT use \"_\" (underscore) in values\n        either! Will not work if you also use \"MM\" relations!\n```\n\n----------------------------------------\n\nTITLE: Configuring foreign_table_prefix in TYPO3 TCA Select Field\nDESCRIPTION: Demonstrates how to add a label prefix to records from a foreign table in a select tree configuration. This property allows prepending a custom text or label to the record titles.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_ForeignTablePrefix.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n'config' => [\n    'type' => 'select',\n    'renderType' => 'selectTree',\n    'foreign_table' => 'your_table',\n    'foreign_table_prefix' => 'Prefix: ',\n    'foreign_where' => '...'\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Crop Variants Configuration in TYPO3\nDESCRIPTION: Defines the cropVariants configuration for image manipulation in TYPO3. This includes the path to the TCA configuration and specifies the type and scope. The cropVariants setting is used to manage crop, focus, and cover area configurations for images.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/_Properties/_CropVariants.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n..  confval:: cropVariants\n    :name: imageManipulation-cropVariants\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: array\n    :Scope: Proc. / Display\n\n    Main crop, focus area and cover area configuration. For details see\n    :ref:`columns-imageManipulation-crop-variant`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Language Synchronization in TYPO3 TCA\nDESCRIPTION: Demonstrates how to enable language synchronization for a specific field in a TYPO3 table configuration (TCA). This allows editors to choose whether field values are copied from default/source language or have their own localized value.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_Behaviour.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n..  literalinclude:: _Snippets\\/_AllowLanguageSynchronization.php\n```\n\n----------------------------------------\n\nTITLE: Configuring MM Relations in TYPO3 TCA\nDESCRIPTION: Defines an inline field configuration for many-to-many relationships in TYPO3's TCA. The configuration establishes a relationship between parent and child records using an intermediate MM table, with localization and synchronization features enabled.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/InlineMmChildParents.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'parents' => [\n            'label' => 'parents',\n            'config' => [\n                'type' => 'inline',\n                'foreign_table' => 'tx_styleguide_inline_mm',\n                'MM' => 'tx_styleguide_inline_mm_child_rel',\n                'MM_opposite_field' => 'inline_1',\n                'maxitems' => 10,\n                'appearance' => [\n                    'showSynchronizationLink' => 1,\n                    'showAllLocalizationLink' => 1,\n                    'showPossibleLocalizationRecords' => 1,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Items for Selector Box in TYPO3 TCA\nDESCRIPTION: This code snippet details the configuration of items for a selector box in TYPO3's TCA. The items are expected to be defined as an associative array containing label, value, optional icon, and description which customizes how elements are displayed within the backend. This snippet is useful for developers creating custom content types in TYPO3 as it allows for the dynamic registration of elements used in content management.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_Items.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n..  confval:: items\n    :name: select-byside-items\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: array\n    :Scope: Display  / Proc.\n    :RenderType: all\n\n    Contains the elements for the selector box unless the property\n    :php:`foreign_table` or :php:`special` has been set in which case\n    automated values are set in addition to any values listed in this array.\n\n    ..  versionchanged:: 13.0\n        Auto-registration of New content element wizard via TCA introduced.\n        If your extension supports both TYPO3 v12 and v13, keep the page TSconfig\n        option :confval:`newContentElement.wizardItems <t3tsref:mod-wizards-newcontentelement-wizarditems>`\n        until dropping TYPO3 v12 support.\n\n    Items registered for the field :sql:`CType` of table :sql:`tt_content` get\n    automatically added to the :guilabel:`New content element` wizard. Settings\n    from the items property can be overridden via page TSconfig\n    :confval:`newContentElement.wizardItems <t3tsref:mod-wizards-newcontentelement-wizarditems>`.\n\n    Each element in this array is in itself an associative array.\n\n    label (string or LLL reference)\n        The displayed title.\n\n    value (integer or string)\n        The value stored in the database.\n\n        *  Values must not contain `,` (comma) and `|` (vertical bar). If you want to use :php:`authMode`, you should\n            also refrain from using `:` (colon).\n\n    icon (EXT: path or icon identifier)\n        Optional icon. For custom icons use a path prepended with `EXT:` to refer to an image\n        file found inside an extension or use an registered icon identifier. If configured on the :php:`foreign_table`,\n        :ref:`selicon-field<ctrl-reference-selicon-field>` is respected.\n\n    description (string or array)\n        Fifth value is an optional description text. This is only shown when the list is shown\n        with `renderType='selectCheckBox'`.\n\n    ..  note::\n\n        When having a zero as :php:`value` and the field is of type :code:`int(10)` in the database, make sure to define\n        the :ref:`default value <columns-select-byside-properties-default>` as well in TCA: :php:`'default' => 0`. Otherwise\n        issues may arise, e.g. with MySQL strict mode.\n\n    For example see :ref:`Side-by-side view with filter <tca_example_select_multiplesidebyside_5>`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Slug Field in TYPO3 TCA\nDESCRIPTION: This code snippet demonstrates how to configure a slug field in TYPO3's TCA. It shows configuration options including generatorOptions to define which fields should be used for slug generation, disabling prefix parent page slug, setting fallback character, and adding uniqueInSite validation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Slug4.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'slug_4' => [\n            'label' => 'slug_4',\n            'config' => [\n                'type' => 'slug',\n                'generatorOptions' => [\n                    'fields' => [\n                        'input_1',\n                        'input_2',\n                    ],\n                    'prefixParentPageSlug' => false,\n                ],\n                'fallbackCharacter' => '-',\n                'eval' => 'uniqueInSite',\n                'default' => '',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Select TCA Field with Icons in TYPO3\nDESCRIPTION: Demonstrates how to configure a TCA select field with the renderType 'selectSingle' and adds SVG icons to the select options. The configuration defines two items, each with a label, value, and an icon path pointing to the styleguide extension resources.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle4.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_single_4' => [\n            'label' => 'select_single_4 items with icons',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'foo 1',\n                        'value' => 'foo1',\n                        'icon' => 'EXT:styleguide/Resources/Public/Icons/tx_styleguide.svg',\n                    ],\n                    [\n                        'label' => 'foo 2',\n                        'value' => 'foo2',\n                        'icon' => 'EXT:styleguide/Resources/Public/Icons/tx_styleguide.svg',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Allowing All File Extensions in TYPO3 TCA Link Field\nDESCRIPTION: This configuration allows linking to files with any extension by using the wildcard '*' notation. This is equivalent to skipping the configuration entirely.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Appearance.rst.txt#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n// Allow all file extensions (or skip this option).\n'appearance' => [\n    'allowedFileExtensions' => ['*'],\n],\n```\n\n----------------------------------------\n\nTITLE: RST Configuration Value Definition\nDESCRIPTION: Configuration value definition for the defaultLanguageDifferences property including path, type, scope and applicable field types\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldWizard/DefaultLanguageDifferences.rst#2025-04-16_snippet_2\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: defaultLanguageDifferences\n    :name: fieldWizard-defaultLanguageDifferences\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']\n    :type: array\n    :Scope: fieldWizard\n    :Types: :ref:`check <columns-check>`, :ref:`flex <columns-flex>`,\n        :ref:`group <columns-group>`,\n        :ref:`imageManipulation <columns-imageManipulation>`,\n        :ref:`input <columns-input>`, :ref:`radio <columns-radio>`\n```\n\n----------------------------------------\n\nTITLE: Defining Size Configuration for Color Field - TYPO3 TCA - Markdown\nDESCRIPTION: This snippet documents the size configuration for color input fields in TYPO3 TCA, specifying the type, name, path, and constraints for the size value. The configuration helps set the width of the associated input field appropriately within a form.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Color/_Properties/_Size.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n..  confval:: size\n    :name: color-size\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: integer\n    :Scope: Display\n\n    Abstract value for the width of the :code:`<input>` field. To set the\n    field to the full width of the form area, use the value 50. Minimum is 10.\n    Default is 30.\n```\n\n----------------------------------------\n\nTITLE: Disabling Default Wizard in TYPO3 TCA Field Configuration\nDESCRIPTION: This example demonstrates how to disable the default 'localizationStateSelector' wizard in the TCA configuration for a specific field. It uses the 'fieldWizard' property to override the default configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldWizard/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n'aField' => [\n    'config' => [\n        'fieldWizard' => [\n            'localizationStateSelector' => [\n                'disabled' => true,\n            ],\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Post Modifiers for Slug Generation - PHP\nDESCRIPTION: This snippet shows how to register a post-modifier for slug generation in TYPO3's TCA. The post-modifier allows users to customize the slug creation process by appending a method from a custom class that processes the slug after its initial generation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Slug/_Properties/_GeneratorOptions.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$tableName]['columns'][$fieldName]['config']['generatorOptions']['postModifiers'][]\n                = MyClass::class . '->method';\n```\n\n----------------------------------------\n\nTITLE: Configuring localizationStateSelector Wizard in TCA Text Tables\nDESCRIPTION: Path configuration for the localizationStateSelector wizard that allows selection of localization states. Used in the TCA configuration array for text table fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/TextTable/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n```\n\n----------------------------------------\n\nTITLE: Advanced Select Checkbox with Icons and Groups in TYPO3 TCA\nDESCRIPTION: Enhanced configuration for a select checkbox field featuring icons and grouped options. Demonstrates usage of itemGroups and icon integration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'columns' => [\n    'select_checkbox_7' => [\n        'label' => 'select_checkbox_7',\n        'config' => [\n            'type' => 'select',\n            'renderType' => 'selectCheckBox',\n            'itemGroups' => [\n                'germany' => 'Germany',\n                'france' => 'France',\n            ],\n            'items' => [\n                ['Bonn', 'bonn', 'mimetypes-x-content-domain', 'germany'],\n                ['Cologne', 'cologne', 'mimetypes-x-content-domain', 'germany'],\n                ['Paris', 'paris', 'mimetypes-x-content-domain', 'france'],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Checkbox Appearance in TYPO3 TCA\nDESCRIPTION: Demonstrates configuration of select checkbox fields with expandAll option to control initial group expansion state in TYPO3 TCA\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_Appearance.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['appearance']['selectCheckBox'] = [\n    'expandAll' => true\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring 'exclude' property in TCA column\nDESCRIPTION: This code snippet demonstrates how to set the 'exclude' property to 'true' within a TCA configuration. This will prevent regular backend users from editing the specified field unless they belong to a backend user group with appropriate permissions or are an administrator. The example provided shows an 'input' field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/_Properties/_Exclude.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\n    [\n         'columns' => [\n              'input_2' => [\n                    'label' => 'input_2 description',\n                    'exclude' => true,\n                    'config' => [\n                         'type' => 'input',\n\n                    ],\n              ],\n         ],\n    ]\n    \n```\n\n----------------------------------------\n\nTITLE: Disabling Aspect Ratios in Crop Variants in PHP\nDESCRIPTION: Shows how to disable certain aspect ratios within crop variants by adding a \"disabled\" key, applicable for any sys_file_reference uses.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/Index.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n..  literalinclude:: _Snippets/_disabledAspectRatioCropVariant.php\n```\n\n----------------------------------------\n\nTITLE: Configuring Language Synchronization for Files in TYPO3\nDESCRIPTION: This code snippet describes the configuration for allowing language synchronization in TYPO3 records. It specifies that if enabled, editors can control whether values in localized records are copied from default or source records, or if they should have distinct values. It requires table localization support and, when enabled, shows radio buttons to control synchronization states. The configuration can be overridden by page TSconfig.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/File/_Properties/_Behaviour.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['allowLanguageSynchronization']\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Browser Title with LLL Reference in TYPO3 TCA Link Field\nDESCRIPTION: This example demonstrates setting a custom browser title for the link browser using a language label reference (LLL). This is the recommended approach for multilingual sites.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Appearance.rst.txt#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n// Either provide a LLL-reference (recommended)\n'appearance' => [\n    'browserTitle' => 'LLL:EXT:Resources/Private/Language/locallang.xlf:my_custom_title',\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Soft Delete in TYPO3 TCA\nDESCRIPTION: This code snippet demonstrates how to enable the soft delete feature for a TYPO3 table by setting the 'delete' field in the TCA ctrl section. It specifies the field name that will be used to mark records as deleted.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Delete.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nreturn [\n    'ctrl' => [\n        'delete' => 'deleted',\n        // ...\n    ],\n];\n\n```\n\n----------------------------------------\n\nTITLE: Configuring localizationStateSelector Wizard for T3Editor Text Fields in TYPO3 TCA\nDESCRIPTION: Configures the localizationStateSelector wizard for a text field using T3Editor in TYPO3's TCA. This wizard allows selection of the localization state for the field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/T3Editor/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n```\n\n----------------------------------------\n\nTITLE: TCA Column Configuration Path\nDESCRIPTION: Reference to the configuration path for TCA field types, showing where type and renderType are specified in the column configuration array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n['columns'][*]['config']\n```\n\n----------------------------------------\n\nTITLE: Configuring addRecord Field Control for Group Field in TYPO3 TCA\nDESCRIPTION: This snippet shows the configuration of the addRecord field control for a group field in TYPO3 TCA. It sets up a field for selecting database records with various options including the addRecord control.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldControl/AddRecord.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n'columns' => [\n    'group_db_1' => [\n        'label' => 'group_db_1',\n        'config' => [\n            'type' => 'group',\n            'allowed' => 'pages',\n            'size' => 5,\n            'maxitems' => 20,\n            'fieldControl' => [\n                'addRecord' => [\n                    'disabled' => false,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Backend Permissions in TYPO3 PHP\nDESCRIPTION: This code registers custom permission options for backend user groups in TYPO3. It defines a set of custom permissions under the 'tx_styleguide_custom' key, including options with labels, icons, and descriptions. These permissions will be available for selection in the backend user group access lists.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Manual/SpecialCustomOptions.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n// Register some custom permission options shown in BE group access lists\n$GLOBALS['TYPO3_CONF_VARS']['BE']['customPermOptions']['tx_styleguide_custom'] = [\n    'header' => 'Custom styleguide permissions',\n        'items' => [\n            'key1' => [\n                'Option 1',\n                // Icon has been registered above\n                'tcarecords-tx_styleguide_forms-default',\n                'Description 1',\n            ],\n        'key2' => [\n            'Option 2'\n        ],\n    ]\n];\n```\n\n----------------------------------------\n\nTITLE: Disabling All Link Options in TYPO3 TCA Link Field\nDESCRIPTION: This example shows how to deny all optional link attributes by providing an empty array for allowedOptions, restricting editors from setting any additional link properties.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Appearance.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n// Deny all options\n'appearance' => [\n    'allowedOptions' => [],\n],\n```\n\n----------------------------------------\n\nTITLE: TCA items Property Definition\nDESCRIPTION: Defines the structure and scope of the `items` property within the TCA configuration for a `select` column. It specifies that this property, accessible via `$GLOBALS['TCA'][$table]['columns'][$field]['config']`, is an array and is relevant for both display and processing purposes. Additionally, the renderType is set to all.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_Items.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"items\": [\n    // Array of items to display in the select box\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Directory Recursion Depth in TYPO3 TCA\nDESCRIPTION: Specifies the maximum depth of directory recursion when selecting files. Ranges from 0-99, with 0 indicating no subdirectory traversal and 99 as the default maximum depth.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FileFolderConfig.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fileFolderConfig']['depth']\n```\n\n----------------------------------------\n\nTITLE: Defining a Placeholder for JSON Fields in TYPO3 TCA\nDESCRIPTION: This configuration setting defines a placeholder text to be displayed in a JSON field when it's empty. The placeholder is specified in the TCA configuration array for a specific table column field and only affects the display in the TYPO3 backend.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Json/_Properties/_Placeholder.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: placeholder\n    :type: string\n    :name: json-placeholder\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['placeholder']\n    :Scope: Display\n\n    Placeholder text for the field.\n```\n\n----------------------------------------\n\nTITLE: Define a translation origin in TCA\nDESCRIPTION: This code snippet demonstrates how to define a translation origin field (`transOrigPointerField`) within a TYPO3 TCA configuration file for a specific table. It is used to link translated records back to their original language versions. The example shows a basic configuration for a domain model.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_TransOrigPointerField.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?php\n\nreturn [\n    'ctrl' => [\n        'label' => 'title',\n        'label_alt' => 'subtitle',\n        'transOrigPointerField' => 'l10n_parent',\n    ],\n    'types' => [\n        '1' => ['showitem' => 'title, subtitle'],\n    ],\n    'columns' => [\n        'title' => [\n            'label' => 'Title',\n            'config' => [\n                'type' => 'input',\n                'size' => 30,\n                'eval' => 'trim,required'\n            ],\n        ],\n        'subtitle' => [\n            'label' => 'Subtitle',\n            'config' => [\n                'type' => 'input',\n                'size' => 30,\n                'eval' => 'trim'\n            ],\n        ],\n    ],\n];\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Opposite Field on Foreign Side\nDESCRIPTION: This snippet explains the usage of 'MM_opposite_field' to make relationships editable from a foreign side in MM relationships. It illustrates how to achieve bidirectional control over records in different tables.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_Mm.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n\"MM_opposite_field\" => [\"name\" => \"select-single-mm-opposite-field\", \"type\" => \"string\", \"Path\" => \"$GLOBALS['TCA'][$table]['columns'][$field]['config']\", \"Scope\" => \"Proc.\"]\n```\n\n----------------------------------------\n\nTITLE: Accessing TCA Inline Size Property in TYPO3 CMS\nDESCRIPTION: This snippet shows the path to access the 'size' property for inline fields in the TYPO3 Table Configuration Array (TCA). The size property determines whether a foreign_selector field appears as a dropdown or select box.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_Size.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n:Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Group Field Suggest Options in PHP\nDESCRIPTION: This code snippet configures the suggest options for a TCA group field, allowing different search conditions to be applied. It specifies allowed tables, search conditions for pages with doktype=1, and whole phrase searching. Dependencies include TYPO3's TCA array structure. Inputs require knowledge of TCA field configurations, while outputs modify the field's suggest behavior.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_SuggestOptions.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'related_records' => [\n    'label' => 'Related records',\n    'config' => [\n        'type' => 'group',\n        'allowed' => 'pages, tt_content',\n        'suggestOptions' => [\n            'default' => [\n                'searchWholePhrase' => 1\n            ],\n            'pages' => [\n                'searchCondition' => 'doktype = 1'\n            ]\n        ]\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Generic Record Link Types in TYPO3 TCA\nDESCRIPTION: Example showing how to configure link field to allow page, URL and any custom record link handlers.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_AllowedTypes.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// 'record' will match any custom link handler\n'allowedTypes' => ['page', 'url', 'record']\n```\n\n----------------------------------------\n\nTITLE: Configuring setValue property in addRecord field control in TCA\nDESCRIPTION: This configuration determines how a newly created record is added to the selection.  It can be set to 'set', 'prepend', or 'append', which respectively substitutes, prepends, or appends the new record to the list.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FieldControl/_AddRecord.rst.txt#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n\"$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']['addRecord']['options']['setValue']\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Elements in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates the basic structure for configuring render containers in the TYPO3 TCA. It shows how to define fieldWizards with render types, positioning (before/after), enabling/disabling functionality, and custom options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Container.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    'container' => [\n        '<containerRenderType>' => [\n            'fieldWizard' => [\n                '<aName>' => [\n                    'renderType' => '<aRenderType>',\n                    'before' => ['<anotherName>'],\n                    'after' => ['<yetAnotherName>'],\n                    'disabled' => false,\n                    'options' => [],\n                ],\n            ],\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configure PreviewRenderer for Record Type\nDESCRIPTION: This code snippet demonstrates how to configure a preview renderer for a specific record type within the 'tt_content' table in TYPO3's TCA. It assigns a class name to the 'previewRenderer' property within the type configuration, which will be used to render the preview for records of the specified type. The `$type` variable should be replaced with the actual type value.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Examples/_60_PreviewRenderer.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['tt_content']['types'][$type]['previewRenderer']\n    = \\MyVendor\\MyExtension\\Preview\\PreviewRenderer::class;\n```\n\n----------------------------------------\n\nTITLE: Configuring Symmetric Inline Relations in TYPO3 TCA\nDESCRIPTION: Defines TCA configuration for tx_styleguide_inline_mnsymmetric_mm table with two main columns: input_1 for basic input field and branches for symmetric many-to-many relations. The branches field implements a bidirectional relationship between hotels and branches with sorting capabilities.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Manual/InlineMnSymetricMm.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n   'columns' => [\n      'input_1' => [\n         'exclude' => 1,\n         'l10n_mode' => 'prefixLangTitle',\n         'label' => 'input_1',\n         'config' => [\n            'type' => 'input',\n            'size' => '30',\n            'eval' => 'required',\n         ],\n      ],\n      'branches' => [\n         'exclude' => 1,\n         'label' => 'branches',\n         'config' => [\n            'type' => 'inline',\n            'foreign_table' => 'tx_styleguide_inline_mnsymmetric_mm',\n            'foreign_field' => 'hotelid',\n            'foreign_sortby' => 'hotelsort',\n            'foreign_label' => 'branchid',\n            'symmetric_field' => 'branchid',\n            'symmetric_sortby' => 'branchsort',\n            'symmetric_label' => 'hotelid',\n            'maxitems' => 10,\n            'appearance' => [\n               'showSynchronizationLink' => 1,\n               'showAllLocalizationLink' => 1,\n               'showPossibleLocalizationRecords' => 1,\n            ],\n         ],\n      ],\n   ],\n];\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Slug Prefix Provider in TYPO3 CMS\nDESCRIPTION: This code defines a SlugPrefix class that implements a custom slug prefix generator for TYPO3's Form Engine. The class provides a getPrefix method that returns a static string to be used as a prefix for slugs in the TYPO3 backend.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SlugPrefix.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\ndeclare(strict_types=1);\n\n/*\n * This file is part of the TYPO3 CMS project.\n *\n * It is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License, either version 2\n * of the License, or any later version.\n *\n * For the full copyright and license information, please read the\n * LICENSE.txt file that was distributed with this source code.\n *\n * The TYPO3 project - inspiring people to share!\n */\n\nnamespace TYPO3\\CMS\\Styleguide\\UserFunctions\\FormEngine;\n\n/**\n * A user function to compare two fields\n *\n * @internal\n */\nuse TYPO3\\CMS\\Backend\\Form\\FormDataProvider\\TcaSlug;\n\nfinal class SlugPrefix\n{\n    public function getPrefix(array $parameters, TcaSlug $reference): string\n    {\n        return 'custom slug prefix';\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Nullable Text Field in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to configure a nullable text field in TYPO3's TCA. When 'nullable' is set to true, a checkbox appears allowing the field to be deactivated and stored as NULL in the database. The database field must be configured to allow NULL values.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_Nullable.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n$GLOBALS['TCA'][$table]['columns'][$field]['config'] = [\n    'type' => 'text',\n    'nullable' => true,\n    // other configuration options...\n];\n```\n\n----------------------------------------\n\nTITLE: Implementing Frontend Password Policy in TYPO3 TCA\nDESCRIPTION: Shows how to configure the frontend-specific password policy in TCA by referencing the globally defined frontend password policy settings.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/PasswordPolicies.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'password' => [\n    'label' => 'Password field',\n    'config' => [\n        'type' => 'password',\n        'passwordPolicy' => 'frontend',\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: TCA Link Mode Value\nDESCRIPTION: Example of the mode property value for placeholder override functionality.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Mode.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nuseOrOverridePlaceholder\n```\n\n----------------------------------------\n\nTITLE: Configuring Group Field with editPopup Control in TYPO3 TCA\nDESCRIPTION: TCA configuration example for a group field with editPopup control enabled. The configuration shows a database relation field with specific table selection and edit capabilities.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldControl/EditPopup.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'columns' => [\n    'group_db_1' => [\n        'label' => 'group_db_1',\n        'config' => [\n            'type' => 'group',\n            'allowed' => 'be_users',\n            'fieldControl' => [\n                'editPopup' => [\n                    'disabled' => false,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining readOnly Property in TYPO3 TCA Configuration\nDESCRIPTION: The readOnly property is used in the TYPO3 TCA configuration to make a field non-editable in the backend interface. When set to true, users can see the field value but cannot modify it. This setting affects only the display and can be overridden via page TSconfig.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Json/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: confval\nCODE:\n```\n..  confval:: readOnly\n    :name: json-readonly\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display\n```\n\n----------------------------------------\n\nTITLE: Configuring Table Icon in TYPO3 TCA\nDESCRIPTION: Demonstrates how to set the iconfile property in the TCA ctrl section. Icons should preferably be square SVG files, with PNG files of 64x64 pixels accepted as an alternative.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Iconfile.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    'iconfile' => 'EXT:examples/Resources/Public/Images/Haiku.svg',\n    ...\n],\n```\n\n----------------------------------------\n\nTITLE: Accessing richtextConfiguration in TYPO3 TCA\nDESCRIPTION: This snippet shows the path to access the 'richtextConfiguration' property in the TYPO3 TCA. It is used to specify the YAML configuration source for rich text editor fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_RichtextConfiguration.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['richtextConfiguration']\n```\n\n----------------------------------------\n\nTITLE: Defining MM Match Fields\nDESCRIPTION: This snippet introduces the 'MM_match_fields' configuration value, which is an array of key-value pairs to insert and match against when managing MM relations. This is essential for ensuring consistency between different table entries.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_Mm.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"MM_match_fields\" => [\"name\" => \"select-single-mm-match-fields\", \"type\" => \"array\", \"Path\" => \"$GLOBALS['TCA'][$table]['columns'][$field]['config']\", \"Scope\" => \"Display / Proc.\"]\n```\n\n----------------------------------------\n\nTITLE: Type Definitions for Different Record Types\nDESCRIPTION: Configures form field display for different record types (0-2) in the TCA types section.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Type.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'types' => [\n    '0' => ['showitem' => 'record_type, title'],\n    '1' => ['showitem' => 'record_type, title, color'],\n    '2' => ['showitem' => 'record_type, title, image']\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Float Formatting for None-Type Field in TYPO3 TCA\nDESCRIPTION: This example shows how to format a none-type field as a floating-point number. It uses the 'float' format with a precision option set to 8 decimal places, allowing for high-precision numeric display.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/None/_Properties/_Format.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'aField' => [\n  'config' => [\n     'type' => 'none',\n     'format' => 'float'\n     'format.' => [\n        'precision' => 8\n     ],\n  ],\n],\n```\n\n----------------------------------------\n\nTITLE: MM Opposite Field Configuration Example\nDESCRIPTION: Demonstrates setting up a bidirectional MM relation between companies and employees using MM_opposite_field property in TCA configuration\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_Mm.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// Example of setting MM_opposite_field for bidirectional relation\n$GLOBALS['TCA']['persons']['columns']['employers']['config']['MM_opposite_field'] = 'employees'\n```\n\n----------------------------------------\n\nTITLE: Defining Prepend Slash Configuration for Slug Field in TYPO3 TCA\nDESCRIPTION: This snippet defines the 'prependSlash' configuration for slug fields within TYPO3's TCA. It indicates whether the slug should start with a slash, useful for structuring nested categories. If the option is not set, it defaults to false; however, for the 'pages.slug' field, it defaults to true and cannot be altered.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Slug/_Properties/_PrependSlash.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n..  confval:: prependSlash\n    :name: slug-prependSlash\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Proc. / Display\n\n    Defines whether a slug field should contain a prepending slash, for example\n    for nested categories with speaking segments.\n\n    If not set, this defaults to :php:`false`. (Exception: for the\n    :sql:`pages.slug` field this defaults to :php:`true` and cannot be\n    changed.)\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Side-by-Side Select with Field Controls in TYPO3 TCA\nDESCRIPTION: Configuration for a multiple side-by-side select field with enabled field controls. The field relates to a foreign table 'tx_styleguide_staticdata' and includes options for editing in a popup, adding new records, and accessing the list module.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectMultiplesidebyside6.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_multiplesidebyside_6' => [\n            'label' => 'select_multiplesidebyside_6 fieldControl',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectMultipleSideBySide',\n                'foreign_table' => 'tx_styleguide_staticdata',\n                'size' => 5,\n                'autoSizeMax' => 20,\n                'fieldControl' => [\n                    'editPopup' => [\n                        'disabled' => false,\n                        'options' => [\n                            'windowOpenParameters' => 'height=300,width=500,status=0,menubar=0,scrollbars=1',\n                        ],\n                    ],\n                    'addRecord' => [\n                        'disabled' => false,\n                    ],\n                    'listModule' => [\n                        'disabled' => false,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Hidden Field in TCA\nDESCRIPTION: Defines the 'hidden' field in TCA configuration to enable hiding records in the frontend. This is part of the enablecolumns configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/BestPractises/CommonFields.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    // ...\n    'enablecolumns' => [\n        'disabled' => 'hidden',\n    ],\n    // ...\n],\n```\n\n----------------------------------------\n\nTITLE: Setting l10n_display Configuration in TYPO3 TCA\nDESCRIPTION: Example showing how to configure the l10n_display property in a TCA column definition. This affects how localized fields are displayed in the TYPO3 backend form interface. The property accepts keywords like 'hideDiff' and 'defaultAsReadonly' that control display behavior.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/_Properties/_L10nDisplay.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['l10n_display']\n```\n\n----------------------------------------\n\nTITLE: Using the useOrOverridePlaceholder Mode in TYPO3 TCA Number Fields\nDESCRIPTION: When the 'useOrOverridePlaceholder' mode is set, a checkbox appears above the field. If checked, the user can enter values normally. If unchecked, the field becomes read-only and NULL is stored in the database. This requires the database column to allow NULL values and the 'nullable' property to be true.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_Mode.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nuseOrOverridePlaceholder\n```\n\nLANGUAGE: sql\nCODE:\n```\nNULL\n```\n\nLANGUAGE: php\nCODE:\n```\nnullable\n```\n\nLANGUAGE: php\nCODE:\n```\ntrue\n```\n\n----------------------------------------\n\nTITLE: Combining Conditions with OR in TCA\nDESCRIPTION: This snippet demonstrates how to combine multiple conditions using the 'OR' operator within TCA. It evaluates whether 'tx_mask_otherfield' is equal to 1, 2, or 4.  If any of these conditions are true, the field will be displayed.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/DisplayConditions.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n    $GLOBALS['TCA']['tx_mask_table']['columns']['tx_mask_field']['displayCond']['OR'] = [\n        'FIELD:tx_mask_otherfield:=:1',\n        'FIELD:tx_mask_otherfield:=:2',\n        'FIELD:tx_mask_otherfield:=:4',\n    ];\n```\n\n----------------------------------------\n\nTITLE: Configuring File Folder Selection in TYPO3 TCA\nDESCRIPTION: Demonstrates configuration of file selection options for a TCA select field, including allowed extensions, recursion depth, and folder path\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_FileFolderConfig.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fileFolderConfig'] = [\n    'allowedExtensions' => 'svg',\n    'depth' => 99,\n    'folder' => 'EXT:my_extension/Resources/Public/Icons/'\n]\n```\n\n----------------------------------------\n\nTITLE: Default Field Wizard Configuration in PHP for TYPO3 TCA\nDESCRIPTION: This snippet shows the default field wizard configuration for certain TYPO3 TCA field types. It includes wizards for localization state selection, other language content, and default language differences.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldWizard/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nprotected $defaultFieldWizard = [\n    'localizationStateSelector' => [\n        'renderType' => 'localizationStateSelector',\n    ],\n    'otherLanguageContent' => [\n        'renderType' => 'otherLanguageContent',\n        'after' => [\n            'localizationStateSelector'\n        ],\n    ],\n    'defaultLanguageDifferences' => [\n        'renderType' => 'defaultLanguageDifferences',\n        'after' => [\n            'otherLanguageContent',\n        ],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Migration Example for Removing Enable Column Definitions in TCA\nDESCRIPTION: A diff showing how to migrate TCA by removing enable column definitions while keeping palette and types definitions. This applies when dropping TYPO3 v12.4 support from extensions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/EnableColumns.rst#2025-04-16_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n-    'columns' => [\n-        'hidden' => [\n-            'exclude' => true,\n-            'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.visible',\n-            'config' => [\n-                'type' => 'check',\n-                'renderType' => 'checkboxToggle',\n-                'items' => [\n-                    [\n-                        0 => '',\n-                        1 => '',\n-                        'invertStateDisplay' => true\n-                    ]\n-                ],\n-            ],\n-        ],\n-        'starttime' => [\n-            'exclude' => true,\n-            'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.starttime',\n-            'config' => [\n-                'type' => 'input',\n-                'renderType' => 'inputDateTime',\n-                'eval' => 'datetime,int',\n-                'default' => 0,\n-                'behaviour' => [\n-                    'allowLanguageSynchronization' => true\n-                ]\n-            ],\n-        ],\n-        'endtime' => [\n-            'exclude' => true,\n-            'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.endtime',\n-            'config' => [\n-                'type' => 'input',\n-                'renderType' => 'inputDateTime',\n-                'eval' => 'datetime,int',\n-                'default' => 0,\n-                'range' => [\n-                    'upper' => mktime(0, 0, 0, 1, 1, 2038)\n-                ],\n-                'behaviour' => [\n-                    'allowLanguageSynchronization' => true\n-                ]\n-            ],\n-        ],\n-        'fe_group' => [\n-            'exclude' => true,\n-            'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.fe_group',\n-            'config' => [\n-                'type' => 'select',\n-                'renderType' => 'selectMultipleSideBySide',\n-                'size' => 5,\n-                'maxitems' => 20,\n-                'items' => [\n-                    [\n-                        'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.hide_at_login',\n-                        -1,\n-                    ],\n-                    [\n-                        'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.any_login',\n-                        -2,\n-                    ],\n-                    [\n-                        'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.usergroups',\n-                        '--div--',\n-                    ],\n-                ],\n-                'exclusiveKeys' => '-1,-2',\n-                'foreign_table' => 'fe_groups',\n-                'foreign_table_where' => 'ORDER BY fe_groups.title',\n-            ],\n-        ],\n\n```\n\n----------------------------------------\n\nTITLE: Configuring ReadOnly Property in TYPO3 TCA\nDESCRIPTION: This snippet details the configuration of the readOnly property for a field in TYPO3 TCA, specifying its type, path, and scope. The readOnly property visually disables field editing for users, although it can still be manipulated via the DataHandler. It is crucial for scenarios where display-only data is needed, ensuring users can view, but not modify, certain fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n..  confval:: readOnly\n    :name: select-byside-readOnly\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n    :type: boolean\n    :Scope: Display\n\n    Renders the field in a way that the user can see the value but cannot edit it.\n\n    ..  warning::\n        This property affects only the display. It is still possible to\n        write to those fields when using the :ref:`DataHandler <t3coreapi:tce>`.\n```\n\n----------------------------------------\n\nTITLE: Defining readOnly Property in TYPO3 TCA Configuration\nDESCRIPTION: The readOnly property for input fields in TYPO3's TCA causes fields to be displayed in read-only mode. This property only affects the user interface display and doesn't prevent programmatic changes via the DataHandler.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: readOnly\n    :name: input-readOnly\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n    :type: boolean\n    :Scope: Display\n```\n\n----------------------------------------\n\nTITLE: Defining label_userFunc in TCA Configuration\nDESCRIPTION: This snippet specifies the use of a user-defined function for label generation in a TYPO3CMS table configuration. It references a class and method handling the custom label creation, replacing standard label settings.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_LabelUserfunc.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: Configuration\nCODE:\n```\n'ctrl' => [\n    'label' => 'title',\n    'label_userFunc' => \\Documentation\\Examples\\Userfuncs\\Tca::class . '->haikuTitle',\n]\n```\n\n----------------------------------------\n\nTITLE: PHP Example - TCA Number Field Language Synchronization\nDESCRIPTION: Example configuration showing how to enable language synchronization for a number field in TYPO3's TCA. The code demonstrates setting the allowLanguageSynchronization behavior property.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$GLOBALS['TCA']['someTable']['columns']['someField']['config'] = [\n    'type' => 'number',\n    'behaviour' => [\n        'allowLanguageSynchronization' => true\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: SQL Schema for Nullable Datetime Field\nDESCRIPTION: This SQL snippet shows the schema for a datetime field configured with `nullable = true`.  The field `mydatefield` is defined as a bigint with a default value of NULL.  This allows the field to store explicit NULL values when no date or time is provided.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/_Properties/_Nullable.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n\"`mydatefield` bigint(20) DEFAULT NULL\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Select Field in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet defines a TCA configuration for a single select field named 'select_single_1'. It includes two items with labels and values, where one item has an exceptionally long description to demonstrate text wrapping in the form.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'select_single_1' => [\n            'label' => 'select_single_1 two items, long text description',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'foo and this here is very long text that maybe does not really fit into the form in one line. Ok let us add even more text to see how this looks like if wrapped. Is this enough now? No? Then let us add some even more useless text here!',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'bar',\n                        'value' => 'bar',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Autocomplete for Password Fields in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to set the 'autocomplete' property for a password field in TYPO3's TCA. Setting it to true will use 'current-password' as the autocomplete attribute value, while false (default) will use 'new-password'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_Autocomplete.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n$GLOBALS['TCA']['tt_content']['columns']['password'] = [\n    'label' => 'Password',\n    'config' => [\n        'type' => 'password',\n        'autocomplete' => true,\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Referencing MM opposite field in TCA\nDESCRIPTION: This configures a bidirectional MM relation, demonstrating how to set the MM_opposite_field on the foreign side to the field name on the local side. For example, referencing companies.employees from persons.employers requires setting MM_opposite_field in the TCA config.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_Mm.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\":php:`MM_opposite_field`\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Nullable Password Field in TYPO3 TCA\nDESCRIPTION: Demonstrates how to configure a nullable password field in TYPO3's TCA. The nullable property allows the field to be deactivated and stored as NULL in the database. When activated but empty, it stores an empty string instead of NULL.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_Nullable.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'password_field' => [\n    'label' => 'Password field',\n    'config' => [\n        'type' => 'password',\n        'nullable' => true\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring otherLanguageContent in TYPO3 TCA\nDESCRIPTION: This snippet shows the configuration for 'otherLanguageContent' within the 'fieldWizard' of a TYPO3 TCA. It configures how content from other languages is displayed or managed in the backend interface. The path indicates the location of this configuration within the global TCA array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/BeLayoutWizard/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n\"$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Security in sys_file Table TCA\nDESCRIPTION: Demonstrates how to set web mount and root level restriction bypasses in the sys_file table configuration\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Security.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nreturn [\n    'ctrl' => [\n        // ...\n        'security' => [\n            'ignoreWebMountRestriction' => true,\n            'ignoreRootLevelRestriction' => true,\n        ],\n        // ...\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Passthrough Field in TYPO3 TCA\nDESCRIPTION: Example configuration of a passthrough field 'tx_impexp_origuid' used in the pages table by the impexp system extension to store import/export information. The field allows data to pass through to the database without rendering in the backend form.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Passthrough/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'tx_impexp_origuid' => [\n    'config' => [\n        'type' => 'passthrough'\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Password Field with Hex Generator in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a password field with an integrated password generator that creates random hex strings. The configuration includes field controls and options for generating 30-character hex passwords.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Snippets/_Password_4.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'password_4' => [\n            'label' => 'password_4',\n            'description' => 'type=password fieldControl=passwordGenerator random=hex',\n            'config' => [\n                'type' => 'password',\n                'fieldControl' => [\n                    'passwordGenerator' => [\n                        'renderType' => 'passwordGenerator',\n                        'options' => [\n                            'title' => 'Create random hex string',\n                            'passwordRules' => [\n                                'length' => 30,\n                                'random' => 'hex',\n                            ],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring checkboxToggle render type in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to configure a checkbox toggle element in TYPO3's Table Configuration Array (TCA). It shows the structure with a label, description, configuration type 'check', renderType 'checkboxToggle', and a single item in the items array with a label 'foo'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Checkbox17.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'checkbox_17' => [\n            'label' => 'checkbox_17',\n            'description' => 'renderType=checkboxToggle single',\n            'config' => [\n                'type' => 'check',\n                'renderType' => 'checkboxToggle',\n                'items' => [\n                    [\n                        'label' => 'foo',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Radio Button Field in TYPO3 TCA\nDESCRIPTION: This snippet defines a radio button field 'radio_1' in TYPO3's TCA. It includes three options, with labels 'foo', an empty label, and 'foobar', corresponding to values 1, 2, and 3 respectively. The configuration demonstrates how to set up radio button options with and without labels.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Radio1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'radio_1' => [\n            'label' => 'radio_1',\n            'description' => 'radio_1 three options, one without label',\n            'config' => [\n                'type' => 'radio',\n                'items' => [\n                    [\n                        'label' => 'foo',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => '',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'foobar',\n                        'value' => 3,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining localizationStateSelector fieldWizard in TCA\nDESCRIPTION: This code snippet shows how to configure the 'localizationStateSelector' fieldWizard within TYPO3's TCA. It allows customization of the display and behavior related to the localization state of records. The configuration is accessed through the global TCA array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Folder/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\"\n```\n\n----------------------------------------\n\nTITLE: Configuring defaultLanguageDifferences Wizard in TCA Text Tables\nDESCRIPTION: Path configuration for the defaultLanguageDifferences wizard that shows differences between default and translated content. Used in the TCA configuration array for text table fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/TextTable/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n```\n\n----------------------------------------\n\nTITLE: Accessing passwordPolicy Configuration in TYPO3 TCA\nDESCRIPTION: Shows the path to access the passwordPolicy configuration for a password field in TYPO3's Table Configuration Array (TCA). This setting assigns a password policy to fields of type 'password' for validation during data processing.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_PasswordPolicy.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']['passwordPolicy']\n```\n\n----------------------------------------\n\nTITLE: Configuring itemsProcFunc in TYPO3 TCA\nDESCRIPTION: Defines a PHP method reference used to dynamically populate or modify item arrays in TYPO3 form configurations. Allows custom processing of select and tree form field options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_ItemsProcFunc.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['itemsProcFunc']\n```\n\n----------------------------------------\n\nTITLE: TYPO3 TCA PID-Scoped Checkbox Evaluation\nDESCRIPTION: Example of the maximumRecordsCheckedInPid evaluation keyword that limits checkbox validation to records within the same page ID.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_Eval.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nmaximumRecordsCheckedInPid\n```\n\n----------------------------------------\n\nTITLE: Referencing symmetric_field configuration in TYPO3 TCA\nDESCRIPTION: This is a reference to a confval directive that documents the symmetric_field property in TCA configuration. It defines in which field on the foreign table the uid of the other parent is stored when using bidirectional symmetric relations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_SymmetricField.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: symmetric_field\n    :name: inline-symmetric-field\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string\n    :Scope: Display  / Proc.\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimum Tree Items in TYPO3 TCA\nDESCRIPTION: Defines the minimum number of child items required in a tree selection field. When set, JavaScript validation prevents record saving if the minimum item count is not met.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_Minitems.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nminitems: 1\n```\n\n----------------------------------------\n\nTITLE: Setting Default Value for JSON Field in TYPO3 TCA\nDESCRIPTION: This configuration sets the default value for a JSON field when a new record is created in TYPO3. It is defined in the TCA array under the specific table, column, and field configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Json/_Properties/_Default.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: TYPO3 Configuration\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['default']\n```\n\n----------------------------------------\n\nTITLE: Defining MM Table Configuration\nDESCRIPTION: This snippet describes the 'MM' configuration value used to specify the intermediate table for many-to-many relations in TYPO3's TCA configuration. It outlines how developers can leverage this setting in conjunction with their field definitions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_Mm.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"MM\" => [\"name\" => \"select-single-mm\", \"type\" => \"string\", \"Path\" => \"$GLOBALS['TCA'][$table]['columns'][$field]['config']\", \"Scope\" => \"Proc.\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Group Field Size in TYPO3 TCA\nDESCRIPTION: Specifies the minimum size (height) of a group-type select field in TYPO3's Table Configuration Array. The field will automatically adjust its height based on selected items while respecting minimum and maximum size constraints.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_Size.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['size'] = integer\n```\n\n----------------------------------------\n\nTITLE: Referencing Foreign Table in TCA Configuration\nDESCRIPTION: Example showing the path to the foreign_table property in the TYPO3 TCA configuration. This property defines which table contains the child records in a parent-child relationship and must reference a table that is configured in the global TCA array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_ForeignTable.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: Configuring Selector Box Items in TCA\nDESCRIPTION: This configuration defines the items to be displayed in a select tree for a given field within TYPO3's TCA. It describes the circumstances under which these items will be populated, particularly noting the impact of foreign_table and special properties. This is essential for developers working with TYPO3's content management system to understand how to dynamically manage selector options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_Items.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n..  confval:: items\n    :name: select-tree-items\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: array\n    :Scope: Display  / Proc.\n    :RenderType: all\n\n    Contains the elements for the selector box unless the property\n    :php:`foreign_table` or :php:`special` has been set in which case\n    automated values are set in addition to any values listed in this array.\n\n    For examples see also :confval:`property items of singleSelect <select-single-items>`.\n```\n\n----------------------------------------\n\nTITLE: Example TCA configuration for selectTree\nDESCRIPTION: This example shows a basic TCA configuration using the `selectTree` render type for a `select` column. It demonstrates the required properties such as `foreign_table` and `treeConfig` to establish the connection to the relevant database table.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n\"\"\"\n'a_field' => [\n    'label' => 'A label',\n    'config' => [\n        'type' => 'select',\n        'renderType' => 'selectTree',\n        'foreign_table' => 'a_table',\n        'treeConfig' => [\n            'parentField' => 'pid',\n            'appearance' => [\n                'showHeader' => true,\n                'expandAll' => true,\n            ],\n        ],\n    ],\n],\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Defining TCA Control Section for Foreign Table Type in TYPO3\nDESCRIPTION: This snippet configures the control section of a TCA for a custom table that uses a foreign table for its type. It includes settings for versioning, language handling, and security. The configuration is part of the TYPO3 Styleguide extension.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/TypeForeignTableCtrl.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'ctrl' => [\n        'title' => 'Form engine - type from foreign table',\n        'label' => 'input_1',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'delete' => 'deleted',\n        'sortby' => 'sorting',\n        'iconfile' => 'EXT:styleguide/Resources/Public/Icons/tx_styleguide.svg',\n        'versioningWS' => true,\n        'languageField' => 'sys_language_uid',\n        'transOrigPointerField' => 'l10n_parent',\n        'transOrigDiffSourceField' => 'l10n_diffsource',\n        'translationSource' => 'l10n_source',\n        'enablecolumns' => [\n            'disabled' => 'hidden',\n        ],\n        'type' => 'foreign_table:record_type',\n        'security' => [\n            'ignorePageTypeRestriction' => true,\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring allowLanguageSynchronization for T3Editor Fields in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to configure the allowLanguageSynchronization behavior for a T3Editor field in a TCA override file. This setting enables the LocalizationStateSelector wizard which allows editors to control whether field values should be synchronized across languages.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/T3Editor/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\ndeclared(strict_types=1);\n\n// Configure the field 'description' to allow language synchronization\n$GLOBALS['TCA']['someTable']['columns']['description']['config']['behaviour']['allowLanguageSynchronization'] = true;\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Checkbox Field in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet defines a TCA configuration for a checkbox field named 'checkbox_12'. It sets up 4 checkbox items with labels and specifies a 3-column layout. The configuration is part of the 'tx_styleguide_elements_basic' table.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Checkbox12.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'checkbox_12' => [\n            'label' => 'checkbox_12',\n            'description' => 'cols=3',\n            'config' => [\n                'type' => 'check',\n                'items' => [\n                    [\n                        'label' => 'foo1',\n                    ],\n                    [\n                        'label' => 'foo2',\n                    ],\n                    [\n                        'label' => 'foo3',\n                    ],\n                    [\n                        'label' => 'foo4',\n                    ],\n                ],\n                'cols' => '3',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring localizationStateSelector Wizard in TYPO3 TCA\nDESCRIPTION: TCA configuration path for the localizationStateSelector field wizard that manages localization states for link fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n```\n\n----------------------------------------\n\nTITLE: Configuring maxitems in TYPO3 TCA Global Configuration\nDESCRIPTION: Defines the maximum number of child items allowed for a category relationship in TYPO3's TCA. This setting is enforced through JavaScript validation during record saving. The property expects a positive integer value and defaults to a high number if not specified.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_Maxitems.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['maxitems']\n```\n\n----------------------------------------\n\nTITLE: Configuring a Nullable Input Field in TYPO3 TCA\nDESCRIPTION: Example of configuring an input field with the 'nullable' property set to true. When enabled, this adds a checkbox that allows the field to be saved as NULL in the database when deactivated. The database field must allow NULL values.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Nullable.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'columns' => [\n     'nullable_column' => [\n          'title' => 'A nullable field',\n          'config' => [\n                'type' => 'input',\n                'nullable' => true,\n                'eval' => 'trim',\n          ],\n     ],\n],\n```\n\n----------------------------------------\n\nTITLE: MM_opposite_field Configuration\nDESCRIPTION: This snippet describes the configuration of the MM_opposite_field, which allows bidirectional editing of MM relations. It requires defining the corresponding local field name that must be edited from the foreign side of the relation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_Mm.rst.txt#2025-04-16_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Configuring Textarea Rows in TYPO3 TCA\nDESCRIPTION: This example demonstrates configuring the 'rows' parameter for a textarea field in TYPO3's Table Configuration Array (TCA). It sets a simple text editor with width of 20 rows, which affects the visual display size of the textarea in the backend.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_Rows.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n'notes' => [\n   'label' => 'Notes (text with default 20 rows)',\n   'config' => [\n      'type' => 'text',\n      'cols' => 48,\n      'rows' => 20,\n   ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring readOnly Property for Text Fields with T3Editor in TYPO3 TCA\nDESCRIPTION: This configuration property makes text fields displayed through T3Editor read-only in the TYPO3 backend interface. Setting this to true allows users to see content but prevents editing through the UI. However, the warning notes that this is only a display restriction and field values can still be modified programmatically through the DataHandler.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/T3Editor/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n..  confval:: readOnly\n    :name: text-t3editor-readOnly\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n    :type: boolean\n    :Scope: Display\n```\n\n----------------------------------------\n\nTITLE: Disabling the Link Browser in TYPO3 TCA Link Field\nDESCRIPTION: This configuration disables the link browser functionality entirely for a link field by setting enableBrowser to false. This prevents editors from using the visual link browser interface.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Appearance.rst.txt#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n// Disable the link browser\n'appearance' => [\n    'enableBrowser' => false,\n],\n```\n\n----------------------------------------\n\nTITLE: Defining Required Field Configuration in TYPO3 TCA\nDESCRIPTION: This snippet defines a configuration value in TYPO3's TCA to enforce the requirement of a non-empty value for a specific field. The configuration is a boolean that defaults to false, indicating that the field is optional unless explicitly set to true. Thus, if set to true, the form cannot be saved without filling out the field. This is particularly useful in ensuring data integrity.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Color/_Properties/_Required.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: required\n    :name: color-required\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display / Proc.\n    :Default: false\n\n    If set to true a non-empty value is required in the field. Otherwise the\n    form cannot be saved.\n```\n\n----------------------------------------\n\nTITLE: SQL Field Reference for MM Relations in TYPO3 TCA\nDESCRIPTION: This snippet shows the SQL field name used for sorting in intermediate MM tables for inline relations. When using MM relations, the sorting field is hardcoded to 'sorting_foreign' regardless of the foreign_sortby property value.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_ForeignSortby.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nsorting_foreign\n```\n\n----------------------------------------\n\nTITLE: Configuring otherLanguageContent Wizard in TYPO3 TCA\nDESCRIPTION: TCA configuration path for the otherLanguageContent field wizard that handles content from other languages in link fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n```\n\n----------------------------------------\n\nTITLE: Configuring copyAfterDuplFields in TCA for tt_content Table\nDESCRIPTION: This code snippet shows how to configure the copyAfterDuplFields property in the ctrl section of a TCA configuration. It specifies that when records are copied and placed after another record, the colPos and sys_language_uid fields will have their values automatically transferred from the previous record.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_CopyAfterDuplFields.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    'copyAfterDuplFields' => 'colPos, sys_language_uid',\n    // ...\n],\n```\n\n----------------------------------------\n\nTITLE: Enabling Language Synchronization in TYPO3 TCA Field Configuration\nDESCRIPTION: This code snippet demonstrates how to enable the language synchronization behavior for a field in the TCA configuration. This setting is required for the localizationStateSelector wizard to function.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldWizard/LocalizationStateSelector.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n['config']['behaviour']['allowLanguageSynchronization'] = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Soft Delete in TCA\nDESCRIPTION: Sets up the 'deleted' field in a TCA configuration to enable soft delete functionality. The DataHandler will set this field to 1 when a record is deleted instead of removing it from the database.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/BestPractises/CommonFields.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    // ...\n    'delete' => 'deleted',\n    // ...\n],\n```\n\n----------------------------------------\n\nTITLE: Combining Conditions with IN in TCA\nDESCRIPTION: This snippet showcases an alternative way to combine multiple conditions using the 'IN' operator in TCA, achieving the same result as the previous example using 'OR'. It checks if the value of 'tx_mask_otherfield' is present in the list 1, 2, or 4.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/DisplayConditions.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n          $GLOBALS['TCA']['tx_mask_table']['columns']['tx_mask_field']['displayCond']\n\t\t  = 'FIELD:tx_mask_otherfield:IN:1,2,4';\n```\n\n----------------------------------------\n\nTITLE: Selecting Records with Unique Fields in TYPO3\nDESCRIPTION: Example of how to properly query records with unique fields in TYPO3, ensuring to exclude versioned records with PID=-1 which might contain duplicate values.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Eval.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nAND pid>=0\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Checkbox Field in TYPO3 TCA (PHP)\nDESCRIPTION: This code snippet defines a TCA configuration for a select checkbox field named 'select_checkbox_1'. It sets up the field with a label, description, and multiple checkbox options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectCheckbox1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'select_checkbox_1' => [\n            'label' => 'select_checkbox_1 description',\n            'description' => 'field description',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectCheckBox',\n                'items' => [\n                    [\n                        'label' => 'foo 1',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'foo 2',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'foo 3',\n                        'value' => 3,\n                    ],\n                    [\n                        'label' => 'foo 4 (empty)',\n                        'value' => '',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Number Format Properties in TYPO3 TCA\nDESCRIPTION: Configuration property for specifying the number format in TCA columns. Can be set to either 'integer' for whole numbers or 'decimal' for float values with two decimal places.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_Format.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['format']\n```\n\n----------------------------------------\n\nTITLE: Defining Category Foreign Table Prefix in TCA\nDESCRIPTION: Configuration property that specifies a label prefix for records from a foreign table in category relations. Can be a string literal or language label reference (LLL).\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_ForeignTablePrefix.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: foreign_table_prefix\n    :name: category-foreign-table-prefix\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string or LLL reference\n    :Scope: Display\n```\n\n----------------------------------------\n\nTITLE: Referencing Input Field maxlength Attribute in TYPO3 TCA\nDESCRIPTION: Shows the path to the 'max' property in TCA configuration which sets the maxlength attribute for an input field. This value limits the number of characters that can be entered in the input field and should match the database field length.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Max.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Item Selection in TYPO3 TCA\nDESCRIPTION: Defines a TCA column configuration that allows the same item to be selected multiple times in a list. Particularly important for bidirectional MM relations where the multiple flag must be set on both native and foreign field configurations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_Multiple.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['multiple'] = true;\n```\n\n----------------------------------------\n\nTITLE: Defining translationSource in TCA ctrl section in PHP\nDESCRIPTION: This PHP snippet demonstrates how to configure the `translationSource` property within the 'ctrl' section of a TCA (TypoScript Configuration Array) file in a TYPO3 extension. The snippet showcases a typical configuration for a domain model, defining basic properties and indicating the use of translation features.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_TranslationSource.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"<?php\\n\\nreturn [\n    'ctrl' => [\n        'title' => 'LLL:EXT:my_extension/Resources/Private/Language/locallang_db.xlf:tx_myextension_domain_model_something',\n        'label' => 'title',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'cruser_id' => 'cruser_id',\n        'delete' => 'deleted',\n        'enablecolumns' => [\n            'disabled' => 'hidden',\n            'starttime' => 'starttime',\n            'endtime' => 'endtime',\n        ],\n        'searchFields' => 'title,subtitle',\n        'iconfile' => 'EXT:my_extension/Resources/Public/Icons/tx_myextension_domain_model_something.gif'\n    ],\n    'interface' => [\n        'showRecordFieldList' => 'hidden, title, subtitle, content',\n    ],\n    'types' => [\n        '1' => ['showitem' => 'hidden, --palette--;;title, subtitle, content, --div--;LLL:EXT:frontend/Resources/Private/Language/locallang_ttc.xlf:tabs.access, starttime, endtime'],\n    ],\n    'palettes' => [\n        'title' => ['showitem' => 'title, subtitle'],\n    ],\n    'columns' => [\n        'hidden' => [\n            'exclude' => true,\n            'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.visible',\n            'config' => [\n                'type' => 'check',\n                'renderType' => 'checkboxToggle',\n                'items' => [\n                    ['LLL:EXT:core/Resources/Private/Language/locallang_core.xlf:labels.enabled', '1', 'invertStateDisplay' => true]\n                ],\n            ]\n        ],\n        'starttime' => [\n            'exclude' => true,\n            'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.starttime',\n            'config' => [\n                'type' => 'input',\n                'renderType' => 'inputDateTime',\n                'eval' => 'datetime,int',\n                'default' => 0,\n                'behaviour' => [\n                    'allowLanguageSynchronization' => true,\n                ],\n            ],\n        ],\n        'endtime' => [\n            'exclude' => true,\n            'label' => 'LLL:EXT:core/Resources/Private/Language/locallang_general.xlf:LGL.endtime',\n            'config' => [\n                'type' => 'input',\n                'renderType' => 'inputDateTime',\n                'eval' => 'datetime,int',\n                'default' => 0,\n                'range' => [\n                    'upper' => mktime(0, 0, 0, 1, 1, 2038)\n                ],\n                'behaviour' => [\n                    'allowLanguageSynchronization' => true,\n                ],\n            ],\n        ],\n        'title' => [\n            'exclude' => true,\n            'label' => 'LLL:EXT:my_extension/Resources/Private/Language/locallang_db.xlf:tx_myextension_domain_model_something.title',\n            'config' => [\n                'type' => 'input',\n                'size' => 30,\n                'eval' => 'trim,required'\n            ],\n        ],\n        'subtitle' => [\n            'exclude' => true,\n            'label' => 'LLL:EXT:my_extension/Resources/Private/Language/locallang_db.xlf:tx_myextension_domain_model_something.subtitle',\n            'config' => [\n                'type' => 'input',\n                'size' => 30,\n                'eval' => 'trim'\n            ],\n        ],\n        'content' => [\n            'exclude' => true,\n            'label' => 'LLL:EXT:my_extension/Resources/Private/Language/locallang_db.xlf:tx_myextension_domain_model_something.content',\n            'config' => [\n                'type' => 'text',\n                'enableRichtext' => true,\n                'richtextConfiguration' => 'default',\n                'fieldControl' => [\n                    'fulltext' => [\n                        'disabled' => false,\n                    ],\n                ],\n                'cols' => 40,\n                'rows' => 15,\n                'eval' => 'trim',\n            ],\n            \n        ],\n    ],\n\n];\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Allow Language Synchronization in TYPO3 TCA (PHP)\nDESCRIPTION: Defines the 'allowLanguageSynchronization' configuration option for folders in TYPO3. This boolean value controls whether editors can choose to synchronize the value of a field from the default or source language record while editing localized records. If true, it enables a FieldWizard that allows administrators to manage localization settings through a simple UI. The corresponding field can be found in the global TCA array under the given path.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Folder/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n..  confval:: allowLanguageSynchronization\n    :type: boolean\n    :name: folder-behaviour-allowLanguageSynchronization\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['allowLanguageSynchronization']\n    :Scope: Proc.\n    :default: false\n```\n\n----------------------------------------\n\nTITLE: Restricting File Extensions in TYPO3 TCA Link Field\nDESCRIPTION: This example limits the allowed file extensions to jpg and png when linking to files. This provides control over which file types can be linked from the file browser.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Appearance.rst.txt#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n// Allow only jpg and png file extensions\n'appearance' => [\n    'allowedFileExtensions' => ['jpg', 'png'],\n],\n```\n\n----------------------------------------\n\nTITLE: Defining allowed groups in TYPO3 TCA\nDESCRIPTION: This code snippet outlines how to declare a list of allowed groups for a field in TYPO3's TCA configuration. It describes the expected format which includes a string of table names that are allowed in a multi-relational context. Additionally, it highlights the importance of matching this configuration with Extbase foreign table settings.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_Allowed.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config'] = array(\n    'allowed' => 'pages,be_users',\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring allowLanguageSynchronization in TCA\nDESCRIPTION: This code snippet demonstrates how to configure the `allowLanguageSynchronization` option within the TCA for a group field. Setting it to `true` enables the LocalizationStateSelector FieldWizard in localized records, allowing editors to choose whether the field's value should be synchronized with the default or source language. The synchronization state is stored in the `l10n_state` database column.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n$GLOBALS['TCA']['some_table']['columns']['some_field']['config']['behaviour']['allowLanguageSynchronization'] = true;\n\n\n```\n\n----------------------------------------\n\nTITLE: RenderType Configuration Definition in ReStructuredText\nDESCRIPTION: ReStructuredText configuration definition for the renderType property in TYPO3's TCA. It specifies the configuration path, type, scope, default value and provides examples of different checkbox render types.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_RenderType.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n..  confval:: renderType\n    :name: check-renderType\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display\n    :Default: check\n    :Examples: :ref:`default <columns-checkbox-examples-2>`, :ref:`checkboxToggle <tca_example_checkbox_17>`, :ref:`checkboxLabeledToggle <tca_example_checkbox_19>`\n```\n\n----------------------------------------\n\nTITLE: Configuring Field Wizard with Localization State Selector in TYPO3\nDESCRIPTION: This snippet provides documentation for the 'localizationStateSelector' configuration option within the TYPO3 field wizard, detailing its structure and usage in TCA. The dependency is the TCA structure available in the TYPO3 configuration. Parameters include 'Path' indicating the location of the configuration in the TCA array and 'type' which is specified as an array to define the expected format.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: localizationStateSelector\n    :name: select-tree-fieldWizard-localizationStateSelector\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n    :type: array\n\n    For details see :confval:`fieldWizard-localizationStateSelector`.\n```\n\n----------------------------------------\n\nTITLE: Defining a Folder Column in TCA\nDESCRIPTION: This snippet demonstrates how to define a 'folder' type column within the 'columns' array of a TCA configuration.  The 'type' is set to 'folder', instructing TYPO3 to create a field where folders can be associated with the record. The database field is automatically generated.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Folder/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"columns\" => [\n    'aColumn' => [\n        'config' => [\n            'type' => 'folder',\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Frontend User Group Access in TCA\nDESCRIPTION: Defines the 'fe_group' field in TCA configuration to restrict visibility of records to specific frontend user groups.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/BestPractises/CommonFields.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    // ...\n    'enablecolumns' => [\n        'fe_group' => 'fe_group',\n    ],\n    // ...\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring otherLanguageContent Wizard in TCA Text Tables\nDESCRIPTION: Path configuration for the otherLanguageContent wizard that displays content from other languages. Used in the TCA configuration array for text table fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/TextTable/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n```\n\n----------------------------------------\n\nTITLE: Setting Default Category in TYPO3 TCA Configuration\nDESCRIPTION: Defines the 'default' configuration option for category fields in TYPO3's TCA. This property sets the default category when a new record is created. If left empty, no category is initially selected.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_Default.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: TYPO3 Configuration\nCODE:\n```\ndefault\n:name: category-default\n:Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n:type: string\n:Scope: Display  / Proc.\n:RenderType: all\n```\n\n----------------------------------------\n\nTITLE: Configuring valuePicker in TCA\nDESCRIPTION: This PHP snippet demonstrates how to configure the `valuePicker` within the TYPO3 Table Configuration Array (TCA). It shows how to define selectable items using an associative array with 'label' and 'value' keys. This configuration renders a select box next to the input field, allowing users to pick predefined hex color values.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Color/_Properties/_ValuePicker.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nuse TYPO3\\CMS\\Core\\Utility\\ExtensionManagementUtility;\n\nExtensionManagementUtility::addTCAcolumns(\n    'some_table',\n    [\n        'color' => [\n            'exclude' => 1,\n            'label' => 'Color',\n            'config' => [\n                'type' => 'input',\n                'size' => 10,\n                'max' => 7,\n                'valuePicker' => [\n                    'items' => [\n                        [\n                            'label' => 'Red',\n                            'value' => '#FF0000',\n                        ],\n                        [\n                            'label' => 'Green',\n                            'value' => '#00FF00',\n                        ],\n                        [\n                            'label' => 'Blue',\n                            'value' => '#0000FF',\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ]\n);\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Textarea with Maximum Character Limit in TYPO3 TCA\nDESCRIPTION: This code snippet shows how to configure a textarea field in TYPO3's Table Configuration Array (TCA) with a maximum character limit of 30. The 'max' property adds an HTML5 maxlength attribute for client-side validation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_Max.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'text_11' => [\n    'label' => 'text_11',\n    'config' => [\n        'type' => 'text',\n        'cols' => 30,\n        'rows' => 5,\n        'max' => 30,\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Field Information in TYPO3 TCA\nDESCRIPTION: This snippet defines a configuration entry for the 'fieldInformation' property in TYPO3's TCA. It provides options for displaying additional information about file fields within the form fields of a TYPO3 backend module. The configuration specifies the property type, its scope, and relates to the general display of metadata without a core default. It is essential for developers customizing TYPO3 forms to leverage this functionality properly.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/File/_Properties/_FieldInformation.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n..  confval:: fieldInformation\n    :name: file-fieldInformation\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: array\n    :Scope: Display\n\n    Show information between an element label and the main element input area. Configuration\n    works identical to the \"fieldWizard\" property, no default configuration in the core exists (yet).\n    In contrast to \"fieldWizard\", HTML returned by fieldInformation is limited, see\n    :ref:`FormEngine docs <t3coreapi:FormEngine-Rendering-NodeExpansion>` for more details.\n```\n\n----------------------------------------\n\nTITLE: Defining Category Field Configuration in TYPO3 TCA\nDESCRIPTION: Configuration path and property definition for the foreign_table_item_group property in TCA category fields. This property specifies a column from the foreign table that contains item group identifiers.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_ForeignTableItemGroup.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: foreign_table_item_group\n    :name: category-foreign-table-item-group\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string (column name)\n    :Scope: Proc. / Display\n```\n\n----------------------------------------\n\nTITLE: Configuring Max Items in TCA for TYPO3\nDESCRIPTION: This excerpt defines the configuration value 'maxitems', which sets the maximum number of child items for a given TCA field. The value must be an integer greater than zero. It is important for enforcing limits on item counts and includes JavaScript validation to prevent record saving when limits are exceeded.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_Maxitems.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n..  confval:: maxitems\n    :name: select-tree-maxitems\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: integer > 0\n    :Scope: Display / Proc.\n\n    Maximum number of child items. Defaults to a high value. JavaScript record\n    validation prevents the record from being saved if the limit is not satisfied.\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Column Authorization Mode in TYPO3 TCA\nDESCRIPTION: Defines the authorization mode for selector boxes in TYPO3 backend configurations. The 'explicitAllow' mode requires explicit selection of static values for non-admin users.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_AuthMode.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\nauthMode = explicitAllow\n```\n\n----------------------------------------\n\nTITLE: Setting Date Range for TCA Field in PHP\nDESCRIPTION: This snippet demonstrates how to define a date range for a field in TYPO3's TCA using PHP. It utilizes an array to set both upper and lower limits for date values, with specified timestamps.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/_Properties/_Range.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$temporaryColumns['my-date']['config']['range'] => [\n            'upper' => gmmktime(23, 59, 59, 12, 31, 2022),\n            'lower' => gmmktime(0, 0, 0, 1, 1, 2014),\n        ];\n```\n\n----------------------------------------\n\nTITLE: Sort Select Items by Label in TCA\nDESCRIPTION: This snippet demonstrates how to configure a select field in TCA to sort items alphabetically by their labels. The `sortItems` property is set to 'label'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_SortItems.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"code\": \"<?php\\nreturn [\\n    'ctrl' => [\\n        'label' => 'title',\\n    ],\\n    'columns' => [\\n        'select_field' => [\\n            'label' => 'Select Field',\\n            'config' => [\\n                'type' => 'select',\\n                'renderType' => 'selectSingle',\\n                'items' => [\\n                    ['Option C', 'c'],\\n                    ['Option A', 'a'],\\n                    ['Option B', 'b'],\\n                ],\\n                'sortItems' => 'label',\\n            ],\\n        ],\\n    ],\\n];\\n\"\n```\n\n----------------------------------------\n\nTITLE: Configuring default_sortby for Single Field Sorting in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet demonstrates how to configure the default_sortby property in TYPO3's TCA to sort records by a single field (title) when displayed in the TYPO3 backend. It's used when no explicit sortby field is defined.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_DefaultSortby.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n'ctrl' => [\n    'default_sortby' => 'title',\n    ...\n],\n```\n\n----------------------------------------\n\nTITLE: Defining Data Structures in External XML Files for TYPO3\nDESCRIPTION: This snippet involves referencing an external XML file to define a data structure in TYPO3's TCA. The XML format allows for clear structure and separation of configuration concerns. Dependencies include appropriate XML files placed in the specified path. The keys in the ds array are used to point to different XML configurations based on the ds_pointerField value. Ensure XML files are correctly formatted and accessible.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/_Properties/_Ds.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\nContent of /CodeSnippets/FlexFile1.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring readOnly Property in TYPO3 CMS TCA\nDESCRIPTION: This snippet shows the configuration path for the readOnly property in TYPO3 CMS TCA. When set to true, it renders the field as non-editable, allowing users to see but not modify the values. The property affects only the display and does not prevent programmatic changes via DataHandler.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n```\n\n----------------------------------------\n\nTITLE: TYPO3 v13.3 TCA Migration Diff\nDESCRIPTION: Illustrates the migration process for removing system fields from showitems when dropping support for TYPO3 v12.4\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/TtContent.rst#2025-04-16_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n- 'showitem' => 'header, bodytext, sys_language_uid, hidden, starttime, endtime'\n+ 'showitem' => 'header, bodytext'\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnly Property for File Fields in TYPO3 TCA\nDESCRIPTION: This code snippet configures the 'readOnly' property for file fields in TYPO3's TCA, indicating that files can be displayed but not modified in the backend interface. It describes the property details, including its name, type, and scope.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/File/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: readOnly\n    :name: file-readOnly\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display\n\n    The files attached to this record are displayed but cannot be changed\n    in the backend form.\n\n    This property can also be overridden by page TSconfig.\n\n    ..  warning::\n        This property affects only the display. It is still possible to write\n        to those fields when using the :ref:`DataHandler <t3coreapi:tce>`.\n```\n\n----------------------------------------\n\nTITLE: Override Default Child Field Value\nDESCRIPTION: This snippet allows overriding the default value of a child table's field when a new inline record is created. It demonstrates setting a new default in TCA for inline field relations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Examples.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nliteralinclude:: _Snippets/_overrideChildTcaDefault.php\n    :caption: EXT:my_extension/Configuration/TCA/Overrides/tt_content.php\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Color Picker Field in TYPO3 TCA\nDESCRIPTION: Demonstrates the basic configuration for a color picker field in TYPO3's TCA. This configuration creates a JavaScript-based color selector that automatically handles database field generation. The field supports color palette integration through page TSconfig.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Color/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$aColorField' = [\n    'label' => 'Color field',\n    'config' => [\n        'type' => 'color',\n    ]\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring maxitems in TYPO3 TCA\nDESCRIPTION: Sets the maximum number of items allowed in a select field. JavaScript validation prevents saving records that exceed the limit. Defaults to a high value if not explicitly set.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_Maxitems.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['maxitems']\n```\n\n----------------------------------------\n\nTITLE: Reset Selection Field Control Definition in TYPO3 TCA\nDESCRIPTION: RST documentation block defining the resetSelection field control property in TYPO3's TCA. This control adds a button to reset select fields to their initial state before user modifications.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldControl/ResetSelection.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: resetSelection\n    :name: fieldControl-resetSelection\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']\n    :type: array\n    :Scope: fieldControl\n    :Types: :aspect:`Description`\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimum Character Limit for Text Input in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to set the 'min' property in the TCA configuration for a text input field. It defines the minimum number of characters required and adds a 'minlength' attribute to the HTML input element. This affects both client-side and server-side validation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_Min.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['min'] = 5;\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<input minlength=\"5\" ... >\n```\n\n----------------------------------------\n\nTITLE: Configuring Allow Language Synchronization Setting\nDESCRIPTION: This PHP snippet defines a behavior configuration for allowing language synchronization in TYPO3 TCA. It controls whether editors can specify if a localized record's field should inherit content from the default language or maintain its own value. The default value is set to false and it relies on the TCA structure defined earlier. The associated setting's state is stored in a JSON-encoded array in the database to manage localization states effectively.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['allowLanguageSynchronization'] = false;\n```\n\n----------------------------------------\n\nTITLE: Defining maxitems Configuration for TCA\nDESCRIPTION: This snippet outlines the configuration for 'maxitems' in TYPO3's TCA. It specifies that the maximum number of child items is an integer greater than zero. The setting is part of the display and processing functionalities in TYPO3, with JavaScript validation ensuring compliance during record saving.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_Maxitems.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: maxitems\n    :name: select-checkbox-maxitems\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: integer > 0\n    :Scope: Display / Proc.\n\n    Maximum number of child items. Defaults to a high value. JavaScript record\n    validation prevents the record from being saved if the limit is not satisfied.\n```\n\n----------------------------------------\n\nTITLE: Password Field Mode Configuration in TYPO3 TCA\nDESCRIPTION: Configuration path and value for setting up a password field's mode in TYPO3's TCA. The useOrOverridePlaceholder mode enables a checkbox that toggles between using a placeholder value or allowing custom input. Requires the database column to be nullable.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_Mode.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['mode']\n```\n\nLANGUAGE: php\nCODE:\n```\nuseOrOverridePlaceholder\n```\n\nLANGUAGE: php\nCODE:\n```\nnullable\n```\n\nLANGUAGE: sql\nCODE:\n```\nNULL\n```\n\n----------------------------------------\n\nTITLE: Sort Select Items by Custom Method in TCA\nDESCRIPTION: This snippet demonstrates how to configure a select field in TCA to sort items using a custom PHP function. The `sortItems` property is set to the name of the PHP function to be called for sorting.  Requires the `SelectItemSorter` class.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_SortItems.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n\"code\": \"<?php\\nreturn [\\n    'ctrl' => [\\n        'label' => 'title',\\n    ],\\n    'columns' => [\\n        'select_field' => [\\n            'label' => 'Select Field',\\n            'config' => [\\n                'type' => 'select',\\n                'renderType' => 'selectSingle',\\n                'items' => [\\n                    ['Option C', 'c'],\\n                    ['Option A', 'a'],\\n                    ['Option B', 'b'],\\n                ],\\n                'sortItems' => 'Vendor\\\\Extension\\\\Utility\\\\SelectItemSorter->sortByReversedLabel',\\n            ],\\n        ],\\n    ],\\n];\\n\"\n```\n\nLANGUAGE: php\nCODE:\n```\n\"code\": \"<?php\\n\\nnamespace Vendor\\\\Extension\\\\Utility;\\n\\nuse TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility;\\n\\nclass SelectItemSorter\\n{\\n    /**\\n     * Sort select items by reversed label\\n     *\\n     * @param array $items\\n     * @return array\\n     */\\n    public function sortByReversedLabel(array $items): array\\n    {\\n        GeneralUtility::trimExplode(' ', 'reverse it');\\n\\n        uasort($items, static function ($item1, $item2) {\\n            return strrev($item1[0]) <=> strrev($item2[0]);\\n        });\\n\\n        return $items;\\n    }\\n}\\n\"\n```\n\n----------------------------------------\n\nTITLE: Configuring foreign_label in TCA for inline elements\nDESCRIPTION: The `foreign_label` configuration option in TYPO3's TCA is used to specify which field from the foreign table should be used as the label for the inline element. This overrides the default label defined in the foreign table's control section (ctrl).\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_ForeignLabel.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n$GLOBALS['TCA'][$table]['columns'][$field]['config'] = [\n    'foreign_label' => 'header' // Example: Use the 'header' field as the label\n];\n?>\n```\n\n----------------------------------------\n\nTITLE: Fields for Symmetric Intermediate Table\nDESCRIPTION: This example defines the fields required for the intermediate table used to manage symmetric relationships in TYPO3. It includes fields for both sides of the relation and custom sorting.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Examples.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\ninclude:: /CodeSnippets/Manual/InlineMnSymetricMm.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Using useOrOverridePlaceholder Mode in TYPO3 TCA Configuration\nDESCRIPTION: This property allows conditional field behavior with placeholders. When enabled, a checkbox appears above the field that toggles between using the default placeholder value (field becomes read-only and saves NULL) or allowing user input.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Mode.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nuseOrOverridePlaceholder\n```\n\nLANGUAGE: php\nCODE:\n```\nNULL\n```\n\nLANGUAGE: php\nCODE:\n```\nnullable\n```\n\nLANGUAGE: php\nCODE:\n```\ntrue\n```\n\nLANGUAGE: sql\nCODE:\n```\nNULL\n```\n\n----------------------------------------\n\nTITLE: Configuring defaultLanguageDifferences Wizard for T3Editor Text Fields in TYPO3 TCA\nDESCRIPTION: Sets up the defaultLanguageDifferences wizard for a text field using T3Editor in TYPO3's TCA. This wizard helps manage differences between default and translated content.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/T3Editor/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Color Mode in reStructuredText\nDESCRIPTION: This snippet defines and describes the usage of the 'mode' configuration option in TYPO3's TCA. It details how a checkbox can toggle the read-only state of a field, contingent on database and nullable property settings. To implement this configuration, the database column must allow NULL values and the 'nullable' property should be true.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Color/_Properties/_Mode.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: mode\n    :name: color-mode\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['mode']\n    :type: string (keywords)\n    :Scope: Display\n\n    Possible keywords: :code:`useOrOverridePlaceholder`\n\n    This property is related to the `placeholder` property. When defined, a\n    checkbox will appear above the field. If that box is checked, the field can\n    be used to enter whatever the user wants as usual. If the box is **not**\n    checked, the field becomes read-only and the value saved to the database\n    will be :code:`NULL`.\n```\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  warning::\n    In order for this property to apply properly, the DB column must be allowed\n    to be :sql:`NULL`, and property :php:`nullable` must be set to :php:`true`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Datetime Field Age Display in TYPO3 TCA\nDESCRIPTION: Allows disabling the age display for datetime fields in the TYPO3 backend. Applies specifically to date-type fields in the list module and other backend interfaces.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/_Properties/_DisableAgeDisplay.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['disableAgeDisplay'] = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Nullable Datetime Field in TCA\nDESCRIPTION: This PHP snippet demonstrates how to define the `nullable` property for a datetime field within a TYPO3 TCA configuration file. Setting `'nullable' => true` allows the field to store SQL NULL values when no input is provided. This example is placed within the `Configuration/TCA/tx_sometable.php` file of a TYPO3 extension.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/_Properties/_Nullable.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"<?php\\n\\nreturn [\n    'ctrl' => [\n        'label' => 'title',\n    ],\n    'columns' => [\n        'mydatefield' => [\n            'config' => [\n                'type' => 'input',\n                'renderType' => 'inputDateTime',\n                'nullable' => true,\n            ],\n        ],\n    ],\n];\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Rich Text Editor Field in TYPO3 TCA XML\nDESCRIPTION: This XML snippet defines a Rich Text Editor field named 'rte_1' in TYPO3's Table Configuration Array (TCA). It sets the field type to 'text' and enables rich text functionality.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Manual/FlexRte1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<rte_1>\n   <label>rte_1</label>\n   <config>\n       <type>text</type>\n       <enableRichtext>1</enableRichtext>\n   </config>\n</rte_1>\n```\n\n----------------------------------------\n\nTITLE: Custom Field in tt_content TCA\nDESCRIPTION: This code snippet illustrates the creation of a new custom field in the 'tt_content' TCA configuration in TYPO3. It includes the necessary configuration in the Overrides setup.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Examples.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nliteralinclude:: _Snippets/_tt_content2.php\n    :caption: EXT:my_extension/Configuration/TCA/Overrides/tt_content.php\n```\n\n----------------------------------------\n\nTITLE: Defining palette display with label in TCA showitem\nDESCRIPTION: This code snippet demonstrates how to display a palette within the 'showitem' configuration of a TYPO3 TCA type. It shows both how to display a palette without an additional label and how to display it with a custom label. The palette name must correspond to a defined palette in the 'palettes' section of the TCA.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Properties/_Showitem.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"--palette--;;caching // Show palette \\\"caching\\\" without additional label\n--palette--;Caching;caching // Show palette \\\"caching\\\" with label \\\"Caching\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Field with Enhanced Formatting in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a text field named 'text_15' with enabled tabulator support and fixed-width font rendering. The configuration demonstrates how to set up enhanced text input formatting options in TYPO3's backend forms.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text15.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'text_15' => [\n            'label' => 'text_15',\n            'description' => 'enableTabulator, fixedFont',\n            'config' => [\n                'type' => 'text',\n                'enableTabulator' => true,\n                'fixedFont' => true,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring a Select Field with Dividers in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet demonstrates how to configure a select field with dividers in TYPO3's Table Configuration Array (TCA). It creates a dropdown menu with grouped options, using '--div--' as dividers between groups of items.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectSingle8.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'select_single_8' => [\n            'label' => 'select_single_8 drop down with empty div',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    [\n                        'label' => 'First div with items',\n                        'value' => '--div--',\n                    ],\n                    [\n                        'label' => 'item 1',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'item 2',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'Second div without items',\n                        'value' => '--div--',\n                    ],\n                    [\n                        'label' => 'Third div with items',\n                        'value' => '--div--',\n                    ],\n                    [\n                        'label' => 'item 3',\n                        'value' => 3,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: DataHandler Fields Configuration in TCA (PHP)\nDESCRIPTION: This code snippet demonstrates how fields are automatically set by the DataHandler when creating or updating records, provided they are configured in the 'ctrl' section of the TCA. These fields are typically used for tracking record creation and modification timestamps, as well as user information.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_OrigUid.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n// EXT:my_extension/Configuration/TCA/tx_myextension_domain_model_something.php\n\nreturn [\n    'ctrl' => [\n        // ... other ctrl configurations ...\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'cruser_id' => 'cruser_id',\n        'versioningWS' => true,\n        'origUid' => 't3_origuid',\n        // ... more configurations ...\n    ],\n    'columns' => [\n        // ... column definitions ...\n    ],\n    'types' => [\n        // ... type definitions ...\n    ],\n];\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Nullable Email Field in TYPO3 TCA\nDESCRIPTION: Demonstrates how to set up a nullable email field with unique in page identifier validation. When enabled, the field allows null values and can be optionally activated.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Email/_Properties/_Nullable.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'columns' => [\n     'nullable_column' => [\n          'title' => 'A nullable field',\n          'config' => [\n                'type' => 'email',\n                'nullable' => true,\n                'eval' => 'uniqueInPid',\n          ],\n     ],\n],\n```\n\n----------------------------------------\n\nTITLE: Adding 'nowrap' to a Text Type Field in TCA\nDESCRIPTION: This PHP snippet demonstrates how to configure the 'types' property in TYPO3's Table Configuration Array (TCA) to add the 'nowrap' attribute to a text type field. The example specifies the 'columnsOverrides' property to modify the text field settings by turning off wrapping. Ensure the configuration file is properly included in the TYPO3 extension.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Examples/_50_ColumnsOverrides.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'types' => [\n    'text' => [\n        'showitem' => 'hidden, myText',\n        'columnsOverrides' => [\n            'myText' => [\n                'config' => [\n                    'wrap' => 'off',\n                ],\n            ],\n        ],\n    ],\n    // ...\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring maxitems for select-singlebox in TYPO3\nDESCRIPTION: This snippet describes the configuration of the maxitems option in TYPO3's TCA for select singlebox fields. It outlines the applicable path in the configuration array, type, and scope of the setting. This is important for ensuring that the maximum limit for child items is respected, contributing to JavaScript validation in the record saving process.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_Maxitems.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: maxitems\n    :name: select-singlebox-maxitems\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: integer > 0\n    :Scope: Display / Proc.\n\n    Maximum number of child items. Defaults to a high value. JavaScript record\n    validation prevents the record from being saved if the limit is not satisfied.\n```\n\n----------------------------------------\n\nTITLE: Configuring Category Relationship in TYPO3 TCA\nDESCRIPTION: Example configuration for setting up a one-to-one category relationship in TYPO3's TCA. This configuration allows displaying a category tree where only one category can be selected. The relationship type automatically sets appropriate constraints like maxitems=1.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_Relationship.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$myTable]['columns']['mainCategory'] = [\n    'config' => [\n        'type' => 'category',\n        'relationship' => 'oneToOne'\n    ]\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Required Password Field in TYPO3 TCA\nDESCRIPTION: Configuration setting that makes a password field mandatory in TYPO3's TCA. When set to true, the form cannot be saved unless the password field contains a value.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_Required.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['required'] = true;\n```\n\n----------------------------------------\n\nTITLE: Configuring DateTime Database Type in TYPO3 TCA\nDESCRIPTION: Specifies how to set the dbType property to store datetime values as native database types instead of timestamps. Impacts storage method and timezone handling.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/_Properties/_DbType.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE tx_example_domain_model_foo (\n  synced_at datetime default NULL\n)\n```\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE tx_example_domain_model_foo (\n  synced_at time default NULL\n)\n```\n\n----------------------------------------\n\nTITLE: Example: RichText Enabling for Text Type Content\nDESCRIPTION: Demonstrates how TYPO3 core uses columnsOverrides to enable RichText Editor for 'text' type content records by adding enableRichtext configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Properties/_ColumnsOverrides.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// Core example of columnsOverrides for bodytext\n'columnsOverrides' => [\n    'bodytext' => [\n        'config' => [\n            'enableRichtext' => 1\n        ]\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: TCA Nullable Property\nDESCRIPTION: PHP configuration setting required for allowing null values in the field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Mode.rst.txt#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\ntrue\n```\n\n----------------------------------------\n\nTITLE: Defining File Field Configuration in TYPO3\nDESCRIPTION: This snippet describes the configuration for a file field used in TYPO3, enumerating its attributes such as name, path, type, and scope. It indicates the purpose of the field in relation to image manipulation and specifies the default setting for the uid of the file record.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/_Properties/_FileField.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: file_field\n    :name: imageManipulation-file-field\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string (field name)\n    :Scope: Proc. / Display\n\n    Name of the database field that contains the uid of the file record. By default set to `uid_local`.\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnly Property in TYPO3 TCA\nDESCRIPTION: This snippet defines the readOnly configuration for a specific TCA field, implementing a boolean type to restrict field editing in the user interface while permitting backend data modifications. The configuration utilizes the global TCA array to specify the readOnly state for the given field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: readOnly\n    :name: imageManipulation-readOnly\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n    :type: boolean\n    :Scope: Display\n\n    Renders the field in a way that the user can see the value but cannot edit it.\n\n    ..  warning::\n        This property affects only the display. It is still possible to\n        write to those fields when using the :ref:`DataHandler <t3coreapi:tce>`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Live Edit Access in TYPO3 TCA\nDESCRIPTION: TCA configuration setting that allows a table to be edited live even when in a workspace context. This is particularly useful for administrative tables like backend users and groups that need flexible editing access regardless of workspace state.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_VersioningWSAlwaysAllowLiveEdit.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['ctrl']['versioningWS_alwaysAllowLiveEdit'] = true;\n```\n\n----------------------------------------\n\nTITLE: Referencing File Paths for TYPO3 TCA Configuration\nDESCRIPTION: Shows the file path convention for TYPO3 TCA configuration. Original table definitions should be placed in Configuration/TCA/<tablename>.php, while overrides belong in Configuration/TCA/Overrides/something.php. This distinction affects the auto-creation of columns based on ctrl properties.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_CodeSnippets/_AutoCreatedColumns/_AutoCreateWarning.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:file:`Configuration/TCA/<tablename>.php`\n```\n\n----------------------------------------\n\nTITLE: TCA Checkbox Configuration Property\nDESCRIPTION: Demonstrates the 'default' configuration property for TCA checkbox fields, showing how decimal values map to checkbox states through binary representation. The property is set in the TCA configuration array and supports multiple checkbox selection through bitwise mapping.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_Default.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['default']\n```\n\n----------------------------------------\n\nTITLE: Configuring TYPO3 TCA Types with Field Overrides and Custom Rendering\nDESCRIPTION: Demonstrates different TCA type configurations including basic field lists, column overrides with modified properties, and custom rendering settings. Shows how to configure read-only fields, adjust field sizes, and implement code editor rendering for text fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/CtrlTypeTypes.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'types' => [\n        0 => [\n            'showitem' => 'record_type, input_1, text_1',\n        ],\n        'withChangedFields' => [\n            'showitem' => 'record_type, input_1, color_1, text_1',\n        ],\n        'withColumnsOverrides' => [\n            'showitem' => 'record_type, input_1, color_1, text_1',\n            'columnsOverrides' => [\n                'color_1' => [\n                    'label' => 'color_1, readOnly, size=10',\n                    'config' => [\n                        'readOnly' => true,\n                        'size' => 10,\n                    ],\n                ],\n                'text_1' => [\n                    'config' => [\n                        'renderType' => 'codeEditor',\n                        'format' => 'html',\n                    ],\n                ],\n            ],\n        ],\n        'withoutFieldsToRender' => [\n            'showitem' => '',\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Required Link Field in TYPO3 TCA\nDESCRIPTION: TCA configuration path for setting a link field as required. When set to true, the field must contain a non-empty value for the form to be saved.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Required.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['required'] = true;\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Select Field with List Module Control\nDESCRIPTION: Example configuration for a select field in TYPO3's TCA with enabled list module control. Shows setup for multiple sidebyside selection with listModule field control enabled.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldControl/ListModule.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'select_1' => [\n            'label' => 'select_1',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectMultipleSideBySide',\n                'foreign_table' => 'tx_styleguide_elements_select_single',\n                'fieldControl' => [\n                    'listModule' => [\n                        'disabled' => false\n                    ]\n                ]\n            ]\n        ]\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Using foreign_unique in TYPO3 TCA\nDESCRIPTION: Example showing how to reference the foreign_unique property in TCA configuration. This property defines which field must be unique across all child records.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_ForeignUnique.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nforeign_unique\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Multiple in TYPO3 TCA\nDESCRIPTION: This snippet describes the configuration value for allowing the same item to be selected multiple times in a TYPO3 backend form. It highlights the association with relational fields and notes the need for configuration in both directions when using bidirectional many-to-many relationships. It also mentions a deprecated property that was relevant in earlier versions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_Multiple.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: multiple\n    :name: select-singlebox-multiple\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display / Proc.\n\n    Allows the *same item* more than once in a list.\n\n    If used with bidirectional MM relations it must be set for both the native\n    and foreign field configuration.\n\n    ..  versionchanged:: 13.0\n        The property :confval:`select-singlebox-mm-hasUidField` is\n        obsolete. It had to be defined previously when using `multiple`.\n```\n\n----------------------------------------\n\nTITLE: Defining TSconfig key for folder selection\nDESCRIPTION: This snippet defines the TSconfig setting that corresponds to the key used in the previous PHP snippet. It sets the `PAGE_TSCONFIG_ID` for the `folder_group` field of the `my_table` table to a specific folder path. This allows the element browser to open directly to this path when the folder field is used.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Folder/_Properties/_ElementBrowserEntryPoints.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: typoscript\nCODE:\n```\nTCEFORM.my_table.folder_group.PAGE_TSCONFIG_ID = 1:/styleguide/subfolder\n```\n\n----------------------------------------\n\nTITLE: Defining readOnly Property for Radio Control in TYPO3 TCA\nDESCRIPTION: This configuration snippet defines the readOnly property for radio fields in TYPO3's TCA, indicating that the field is display-only while still allowing backend modification via DataHandler. The property is of boolean type and influences the rendering behavior in the backend.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Radio/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: readOnly\n    :name: radio-readOnly\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n    :type: boolean\n    :Scope: Display\n\n    Renders the field in a way that the user can see the value but cannot edit it.\n\n    ..  warning::\n        This property affects only the display. It is still possible to\n        write to those fields when using the :ref:`DataHandler <t3coreapi:tce>`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimal TCA Type in TYPO3 PHP\nDESCRIPTION: This snippet defines a minimal TCA configuration for a TYPO3 backend form. It sets up a single type with only a 'title' field displayed in the form interface. This configuration is typically used in the Styleguide extension to demonstrate basic TCA setup.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/TypeMinimal.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'types' => [\n        [\n            'showitem' => 'title',\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Password Generator Configuration - Digits Only\nDESCRIPTION: Configuration for generating numeric-only passwords with a minimum length of 8 digits.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/PasswordGenerator.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'config' => [\n    'type' => 'password',\n    'fieldControl' => [\n        'passwordGenerator' => [\n            'options' => [\n                'passwordRules' => [\n                    'length' => 8,\n                    'lowerCaseCharacters' => false,\n                    'upperCaseCharacters' => false,\n                    'digitCharacters' => true,\n                    'specialCharacters' => false\n                ]\n            ]\n        ]\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Defining TCA Number Field Default Value in TYPO3\nDESCRIPTION: RST documentation block specifying the default value configuration for number fields in TYPO3's TCA. This setting allows specifying a default numeric value when creating new records.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_Default.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n..  confval:: default\n    :name: number-default\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['default']\n    :type: string\n    :Scope: Display  / Proc.\n```\n\n----------------------------------------\n\nTITLE: TYPO3 itemsProcFunc Class Method Reference\nDESCRIPTION: Example of the recommended way to reference a class method for itemsProcFunc in TYPO3 TCA configuration. Uses FQCN (Fully Qualified Class Name) with ::class notation for better IDE support.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_ItemsProcFunc.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\VENDOR\\Extension\\UserFunction\\FormEngine\\YourClass::class . '->yourMethod'\n```\n\n----------------------------------------\n\nTITLE: Configuring Non-Hashed Password Field in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a password field named 'password_2' that stores the value without hashing. The configuration specifies the field type as password and explicitly sets hashed to false.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Snippets/_Password_2.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'password_2' => [\n            'label' => 'password_2',\n            'description' => 'type=password hashed=false',\n            'config' => [\n                'type' => 'password',\n                'hashed' => false,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring prepend_tname in TCA\nDESCRIPTION: Defines the 'prepend_tname' configuration value, specifying that table names should be prepended to stored relation identifiers. This setting is important for maintaining clarity when multiple tables are involved in relations, helping to identify which table a relation belongs to.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_PrependTname.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: prepend_tname\n    :name: group-prepend-tname\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Proc.\n\n    Will prepend the table name to the stored relations (so instead of storing \"23\" you will\n    store e.g. \"tt_content_23\"). This is automatically turned on if multiple different tables are\n    allowed for one relation.\n```\n\n----------------------------------------\n\nTITLE: Enabling Whole Phrase Search in TCA Suggest Options in PHP\nDESCRIPTION: This snippet configures the whole phrase search setting for a storage_pid field in TYPO3's TCA. It allows the suggest wizard to search for the entire phrase instead of parts. It requires understanding of TCA array structures. Inputs involve searchWholePhrase parameter setting, and outputs modify search matching behavior.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_SuggestOptions.rst.txt#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n'storage_pid' => [\n   'config' => [\n      'suggestOptions' => [\n         'default' => [\n            'searchWholePhrase' => 1,\n         ],\n      ],\n   ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring minitems in TYPO3 TCA\nDESCRIPTION: This snippet defines the 'minitems' configuration value for TYPO3 TCA, which specifies the minimum number of child items required. If the specified threshold is not met, JavaScript validation will prevent the record from being saved. This is vital for ensuring data integrity and user error prevention.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_Minitems.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: minitems\n    :name: select-single-minitems\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: integer > 0\n    :Scope: Display\n\n    Minimum number of child items. Defaults to 0. JavaScript record validation\n    prevents the record from being saved if the limit is not satisfied.\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Crop Variants in PHP\nDESCRIPTION: If crop variants are not explicitly defined, this snippet applies a default configuration in TYPO3's TCA for image manipulation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n..  literalinclude:: _Snippets/_defaultCropVariants.php\n```\n\n----------------------------------------\n\nTITLE: Configuring Nullable Link Field in TYPO3 CMS TCA\nDESCRIPTION: This code snippet demonstrates how to configure a nullable link field in TYPO3 CMS TCA. It sets the 'nullable' property to true, allowing the field to be saved as NULL in the database when deactivated.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Nullable.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n..  literalinclude:: _Snippets/_nullable.php\n    :caption: EXT:some_extension/Configuration/TCA/Overrides/tx_sometable.php\n```\n\n----------------------------------------\n\nTITLE: Inline MM Relation Documentation Screenshot\nDESCRIPTION: Automatic screenshot illustrating an inline field with a many-to-many relation in the TYPO3 backend interface\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/InlineMmInline1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/InlineMmInline1.png\n   :alt: An inline field with MM relation\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: Defining fieldInformation in TYPO3 TCA Configuration\nDESCRIPTION: This snippet shows how to define the 'fieldInformation' option in the TCA configuration for a specific table column. It specifies the type, name, and path for the configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Json/_Properties/_FieldInformation.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: fieldInformation\n    :type: string\n    :name: json-fieldInformation\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldInformation']\n\n    See :confval:`fieldInformation` for details.\n```\n\n----------------------------------------\n\nTITLE: Configuring fieldWizard for Input Fields in TYPO3 TCA\nDESCRIPTION: This code snippet shows the configuration path for fieldWizard properties in the TYPO3 Table Configuration Array (TCA). It includes paths for defaultLanguageDifferences, localizationStateSelector, and otherLanguageContent wizards which are used for content localization features.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n```\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n```\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n```\n\n----------------------------------------\n\nTITLE: Increase dbFieldLength for select field in TCA\nDESCRIPTION: This snippet demonstrates how to increase the database field length for a `select` field using the `dbFieldLength` option in a TYPO3 TCA configuration file. The `dbFieldLength` option allows developers to adjust the length of varchar fields created automatically by TYPO3, optimizing database storage and preventing truncation of data.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_DbFieldLength.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nreturn [\n    'ctrl' => [\n        'label' => 'title',\n    ],\n    'columns' => [\n        'title' => [\n            'label' => 'Title',\n            'config' => [\n                'type' => 'input',\n                'size' => 30,\n                'eval' => 'trim,required'\n            ],\n        ],\n        'state' => [\n            'label' => 'State',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    ['Draft', 0],\n                    ['Published', 1],\n                    ['Archived', 2],\n                ],\n                'dbFieldLength' => 64,\n            ],\n        ],\n    ],\n    'types' => [\n        '1' => ['showitem' => 'title, state'],\n    ],\n];\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Column Overrides in TYPO3 TCA\nDESCRIPTION: Defines how to override column display settings for specific record types in the TYPO3 Table Configuration Array (TCA). Allows modifying form field display without changing data handling, with a focus on properties like renderType.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Properties/_ColumnsOverrides.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['types'][$type]['columnsOverrides']\n```\n\n----------------------------------------\n\nTITLE: Setting Required Field in TYPO3 TCA Configuration (PHP)\nDESCRIPTION: This snippet demonstrates how to configure a field as required in TYPO3's Table Configuration Array (TCA). When set to true, it ensures that the field must have a non-empty value before the form can be saved.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Uuid/_Properties/_Required.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['required'] = true;\n```\n\n----------------------------------------\n\nTITLE: Defining datetime-mode Configuration in TYPO3 TCA\nDESCRIPTION: This snippet defines the 'datetime-mode' configuration property for TYPO3 TCA, determining how datetime fields behave in forms. It specifies that if the mode allows for user input ('useOrOverridePlaceholder'), the field can be edited; otherwise, it becomes read-only. Additionally, it emphasizes prerequisites for proper functioning, such as the database column accepting NULL and setting the nullable property to true.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/_Properties/_Mode.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: mode\n    :name: datetime-mode\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['mode']\n    :type: string (keywords)\n    :Scope: Display\n\n    Possible keywords: :code:`useOrOverridePlaceholder`\n\n    This property is related to the `placeholder` property. When defined, a\n    checkbox will appear above the field. If that box is checked, the field can\n    be used to enter whatever the user wants as usual. If the box is **not**\n    checked, the field becomes read-only and the value saved to the database\n    will be :code:`NULL`.\n\n    ..  warning::\n        In order for this property to apply properly, the DB column must be allowed\n        to be :sql:`NULL`, and property :php:`nullable` must be set to :php:`true`.\n```\n\n----------------------------------------\n\nTITLE: TCA Slug fallbackCharacter Configuration\nDESCRIPTION: The `fallbackCharacter` configuration option defines the character used as a separator for slug sections. This is applicable when the `fieldSeparator` is configured in the generatorOptions. The default value is a hyphen (-).\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Slug/_Properties/_FallbackCharacter.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: TYPO3\nCODE:\n```\n..  confval:: fallbackCharacter\n    :name: slug-fallbackCharacter\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string\n    :Scope: Proc. / Display\n    :Default: \\-\n\n    Character that represents the separator of slug sections, that contain the\n    :ref:`fieldSeparator <columns-slug-properties-generatorOptions>`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Nullable Number Field in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet demonstrates how to configure a nullable number field in TYPO3's Table Configuration Array (TCA). It shows the structure and properties needed to make a number field nullable, allowing it to be saved as NULL in the database when deactivated.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_Nullable.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nreturn [\n    'columns' => [\n        'number_field' => [\n            'config' => [\n                'type' => 'number',\n                'nullable' => true,\n            ],\n        ],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Link Field Autocomplete in TYPO3 TCA\nDESCRIPTION: Example configuration for enabling autocomplete on a link field in TYPO3's TCA. Sets the autocomplete attribute to 'on' to allow browser auto-filling functionality.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Autocomplete.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n..  literalinclude:: _Snippets/_autocomplete.php\n    :caption: EXT:some_extension/Configuration/TCA/Overrides/tx_sometable.php\n```\n\n----------------------------------------\n\nTITLE: Configuring DataHandler Fields in TCA\nDESCRIPTION: Sets up fields that are automatically managed by the DataHandler, including creation timestamp, modification timestamp, and original record reference. These fields are automatically updated when records are created or modified.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/BestPractises/CommonFields.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    // ...\n    'tstamp' => 'tstamp',\n    'crdate' => 'crdate',\n    'origUid' => 't3_origuid',\n    // ...\n],\n```\n\n----------------------------------------\n\nTITLE: Override Crop Variants per Content Element in PHP\nDESCRIPTION: This snippet showcases how to customize the cropping configuration for specific TYPO3 content elements using the `image` field configuration and `columnsOverrides` feature.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/Index.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n..  literalinclude:: _Snippets/_overrideCropVariants.php\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Field with Table Wizard in TYPO3 TCA\nDESCRIPTION: Defines a text field configuration in TYPO3's Table Configuration Array (TCA) with a table wizard control. The field uses renderType=textTable and includes options for adding new rows through the table wizard interface.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text21.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'columns' => [\n    'text_21' => [\n        'label' => 'text_21',\n        'description' => 'renderType=textTable tableWizard numNewRows=3',\n        'config' => [\n            'type' => 'text',\n            'renderType' => 'textTable',\n            'cols' => 40,\n            'rows' => 5,\n            'fieldControl' => [\n                'tableWizard' => [\n                    'options' => [\n                        'numNewRows' => 3,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Allowing All Link Options in TYPO3 TCA Link Field\nDESCRIPTION: This snippet configures a link field to allow all possible link options in the link browser. Using the wildcard character '*' enables all available options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Appearance.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// Allow all options (or skip this option).\n'appearance' => [\n    'allowedOptions' => ['*'],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring allowLanguageSynchronization for Link Fields in TYPO3 TCA\nDESCRIPTION: This code snippet demonstrates how to enable the language synchronization option for a link field in a TYPO3 TCA configuration. When enabled, this allows editors to select whether a field's value should be synchronized with the default/source language record or have its own value in localized records.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n// EXT:my_extension/Configuration/TCA/Overrides/someTable.php\n$GLOBALS['TCA']['someTable']['columns']['some_link_field']['config']['behaviour']['allowLanguageSynchronization'] = true;\n```\n\n----------------------------------------\n\nTITLE: Configuring Title Property in TYPO3 TCA\nDESCRIPTION: Example configuration for the 'title' property in a TYPO3 TCA ctrl section, demonstrating the use of language labels (LLL) for internationalization. The example shows how to reference a localized string from the frontend extension's language file.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Title.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    'title' => 'LLL:EXT:frontend/Resources/Private/Language/locallang_tca.xlf:sys_template',\n],\n```\n\n----------------------------------------\n\nTITLE: Defining AllowLanguageSynchronization Configuration in TYPO3 TCA\nDESCRIPTION: This snippet outlines the configuration for allowing language synchronization in TYPO3's TCA. It describes the parameters like type, default value, and their significance in localization management for fields. It enables editors to decide if a field should inherit values from the source language or maintain its own localized value.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Email/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n..  confval:: allowLanguageSynchronization\n        :type: boolean\n        :name: email-behaviour-allowLanguageSynchronization\n        :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['allowLanguageSynchronization']\n        :Scope: Proc.\n        :default: false\n\n        Allows an editor to select in a localized record whether the value is copied\n        over from default or source language record, or if the field has an own value\n        in the localization. If set to true and if the table supports localization\n        and if a localized record is edited, this setting enables FieldWizard\n        :ref:`LocalizationStateSelector <columns-input-properties-fieldWizard-localizationStateSelector>`:\n        Two or three radio buttons shown below the field input. The state of this is\n        stored in a json encoded array in the database table called :code:`l10n_state`.\n        It tells the DataHandler which fields of the localization records should be kept\n        in sync if the underlying default or source record changes.\n```\n\nLANGUAGE: PHP\nCODE:\n```\n..  literalinclude:: _Properties/_AllowLanguageSynchronization.php\n            :caption: EXT:my_extension/Configuration/TCA/Overrides/someTable.php\n```\n\n----------------------------------------\n\nTITLE: Referencing foreign_unique property in TYPO3 TCA\nDESCRIPTION: Code path showing where the foreign_unique property is defined in the TYPO3 TCA configuration structure. This property specifies a field that must have unique values among all child records of a parent record.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_ForeignUnique.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: MM_table_where Additional Clause\nDESCRIPTION: This snippet shows how to set an additional SQL WHERE clause for reading MM relations in TYPO3. This clause enhances query specificity by employing TYPO3's special field quoting syntax.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_Mm.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n{#uid_local} = ###THIS_UID###\n```\n\n----------------------------------------\n\nTITLE: Configuring defaultLanguageDifferences Wizard in TYPO3 TCA\nDESCRIPTION: TCA configuration path for the defaultLanguageDifferences field wizard that handles language-specific differences in link fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n```\n\n----------------------------------------\n\nTITLE: Defining foreign_selector Configuration in TYPO3 TCA\nDESCRIPTION: This snippet details the configuration of the 'foreign_selector', a field in TYPO3 that allows for selecting child records to establish a relationship with a parent record. It explains its type, path, and the required field association for proper functioning.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_ForeignSelector.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n..  confval:: foreign_selector\n    :name: inline-foreign-selector\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string\n    :Scope: Display  / Proc.\n```\n\n----------------------------------------\n\nTITLE: Defining Palettes Description Property in TYPO3 TCA\nDESCRIPTION: This snippet defines a description property for palettes in TYPO3's TCA, allowing titles to have additional localized help text displayed in the user interface. It specifies the path and type, along with a note regarding its non-overwritable nature on a record type basis.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Palettes/_Properties/_Description.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: description\n    :name: palettes-description\n    :Path: $GLOBALS['TCA'][$table]['palettes']\n    :type: string\n\n    Allows to display a localized description text into the palette declaration.\n    It will be displayed below the\n    :ref:`palette label<palettes-properties-label>`.\n\n    This additional help text can be used to clarify some field usages directly\n    in the UI.\n\n    ..  note::\n\n        In contrast to the palette label, the description property can not\n        be overwritten on a record type basis.\n```\n\n----------------------------------------\n\nTITLE: Configuring Password Field Hashing in TYPO3 TCA\nDESCRIPTION: Example configuration showing how to set up a password field to store plaintext values in the database. This configuration sets 'hashed' to false, though it's noted this is not recommended for security reasons and will not work for be_users and fe_users tables.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_Hashed.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n'password_field' => [\n    'label' => 'Password field',\n    'config' => [\n        'type' => 'password',\n        'hashed' => false\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring RTE Field with Full Richtext in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a rich text editor field named 'rte_5' with full richtext capabilities enabled. This configuration specifies a text field type with enhanced rich text editing features using the 'full' preset configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Rte5.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'rte_5' => [\n            'label' => 'rte_5 richtextConfiguration=full',\n            'config' => [\n                'type' => 'text',\n                'enableRichtext' => true,\n                'richtextConfiguration' => 'full',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining a Custom Function for TCA Custom Controls in PHP\nDESCRIPTION: This snippet demonstrates how to reference a user-defined function for custom header controls in TYPO3's TCA inline configuration. The 'userFunc' key must point to the function in the format of 'class->method'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_CustomControls.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Vendor\\Extension\\MyClass::class . '->myUserFuncMethod'\n```\n\n----------------------------------------\n\nTITLE: Basic Content Element TCA Configuration in PHP\nDESCRIPTION: Demonstrates a simple content element configuration with header and bodytext fields using TYPO3's TCA override mechanism\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/TtContent.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['tt_content']['types']['my_custom_element'] = [\n    'showitem' => 'header, bodytext'\n];\n```\n\n----------------------------------------\n\nTITLE: TCA Column Type Configuration\nDESCRIPTION: Shows the path structure for defining a column's type in TCA. The type property determines how the field is rendered in the backend and how data is processed when saving.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/_Properties/_Config.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['type']\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Area with No Wrapping in TYPO3 TCA\nDESCRIPTION: Demonstrates setting up a text area field with wrapping disabled, useful for code editing scenarios where line wrapping would interfere with content structure. Uses the 'off' wrap setting.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_Wrap.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n   'noWrap' => [\n      'label' => 'Text without wrapping',\n      'config' => [\n         'type' => 'text',\n         'wrap' => 'off'\n      ]\n   ]\n```\n\n----------------------------------------\n\nTITLE: Configuring File Extensions in TYPO3 TCA Select\nDESCRIPTION: Defines allowed file extensions for a select field in TYPO3 TCA configuration. Enables filtering files by extension type and supports lowercase extension specification.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FileFolderConfig.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fileFolderConfig']['allowedExtensions']\n```\n\n----------------------------------------\n\nTITLE: TCA Types Configuration After Label Property\nDESCRIPTION: This PHP code snippet demonstrates the TCA 'types' and 'palettes' configuration after using the 'label' property. The label for the palette is now defined directly within the 'palettes' configuration using the 'label' key, promoting reusability and reducing duplication. The 'showitem' property defines the fields to be displayed.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Palettes/_Properties/_Label.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"<?php\n        'types' => [\n            'myType' => [\n                'showitem' => 'aField, --palette--;;aPalette, someOtherField',\n            ],\n        ],\n        'palettes' => [\n            'aPalette' => [\n                'label' => 'LLL:EXT:myExt/Resources/Private/Language/locallang.xlf:aPaletteDescription',\n                'showitem' => 'aFieldInAPalette, anotherFieldInPalette',\n            ],\n        ],\n\"\n```\n\n----------------------------------------\n\nTITLE: Configuring AllowLanguageSynchronization in TYPO3 PHP\nDESCRIPTION: This snippet defines the configuration for the allowLanguageSynchronization setting within TYPO3's TCA. It specifies how language fields are managed across localizations, allowing editors to choose how values should be synchronized between the default language and its localizations. The setting is boolean and influences the FieldWizard UI that appears in localized records.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n/*\n * Configuration for allowLanguageSynchronization in TYPO3 TCA\n */\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['allowLanguageSynchronization'] = [\n    'type' => 'boolean',\n    'default' => false\n];\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Field with Tabulators in TYPO3 TCA\nDESCRIPTION: This code snippet demonstrates how to configure a text field in TYPO3's TCA to enable tabulators and use a fixed-width font. It sets up a 'bodytext' field with specific rendering options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/TextTable/_Properties/_EnableTabulator.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$GLOBALS['TCA']['tx_examples_haiku']['columns']['bodytext'] = [\n    'label' => 'Body Text',\n    'config' => [\n        'type' => 'text',\n        'renderType' => 'textTable',\n        'cols' => 48,\n        'rows' => 15,\n        'enableTabulator' => true,\n        'fixedFont' => true,\n        'wrap' => 'off',\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring otherLanguageContent Field Wizard in TYPO3 TCA (PHP)\nDESCRIPTION: Sets up the otherLanguageContent field wizard for a text field in TYPO3's TCA. This wizard provides functionality related to content in other languages.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n```\n\n----------------------------------------\n\nTITLE: Configuring Password Field with Generator in TYPO3 TCA - PHP\nDESCRIPTION: This code snippet defines a configuration for a password input field in TYPO3. It specifies the label, description, and details for the field including its type, length, and additional password generator options. This is useful for developers looking to implement a secure password entry with controlled generation settings.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Snippets/_Password_7.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n        'columns' => [\n            'password_7' => [\n                'label' => 'password_7',\n                'description' => 'type=password fieldControl=passwordGenerator length=8 - only digits',\n                'config' => [\n                    'type' => 'password',\n                    'fieldControl' => [\n                        'passwordGenerator' => [\n                            'renderType' => 'passwordGenerator',\n                            'options' => [\n                                'title' => 'Create random number',\n                                'passwordRules' => [\n                                    'length' => 8,\n                                    'lowerCaseCharacters' => false,\n                                    'upperCaseCharacters' => false,\n                                ],\n                            ],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ]\n```\n\n----------------------------------------\n\nTITLE: Configuring autoSizeMax in TYPO3 TCA\nDESCRIPTION: Sets the maximum height for a select field in TYPO3 backend forms, dynamically adjusting field size based on selected items. Only applicable when multiple items are allowed.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_AutoSizeMax.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n'config' => [\n    'autoSizeMax' => 10\n]\n```\n\n----------------------------------------\n\nTITLE: Defining showitem in TCA Palette (PHP)\nDESCRIPTION: This code snippet demonstrates how to configure the 'showitem' property within a TYPO3 TCA palette. It shows examples of specifying field names, overriding labels using a semicolon, and inserting line breaks using the '--linebreak--' keyword. The showitem property defines the order and display of fields in the palette.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Palettes/_Properties/_Showitem.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\n        [\n            'showitem' => 'aFieldName, anotherFieldName',\n            'showitem' => 'aFieldName;labelOverride, anotherFieldName',\n            'showitem' => 'aFieldName, anotherFieldName, --linebreak--, yetAnotherFieldName',\n        ]\n    \n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Placeholder in TYPO3\nDESCRIPTION: Demonstrates setting a placeholder value in a TCA configuration for a field. The placeholder provides a default display value for the field. Note that dynamic values like now() cannot be used since TCA is cached.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Placeholder.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['placeholder'] = 'default value';\n```\n\n----------------------------------------\n\nTITLE: Hidden Field Configuration in TCA\nDESCRIPTION: Configuration example showing how to implement a hidden field in a TCA table. This allows content editors to toggle record visibility in the backend.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/EnableColumns.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nreturn [\n    'ctrl' => [\n        // ...\n        'enablecolumns' => [\n            'disabled' => 'hidden',\n        ],\n    ],\n    // ...\n];\n```\n\n----------------------------------------\n\nTITLE: Defining 'is_in' Property for Text Fields in TYPO3 TCA\nDESCRIPTION: This snippet shows the configuration structure for the 'is_in' property in TYPO3's TCA for text fields. It specifies the property's path, type, scope, and applicable render types. The 'is_in' value is passed as an argument to user-defined evaluation functions but does not apply to RTE fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_IsIn.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: is_in\n    :name: text-is-in\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string\n    :Scope: Display  / Proc.\n    :RenderType: :ref:`textTable <columns-text-renderType-textTable>`,\n        :ref:`default <columns-text-renderType-default>`\n```\n\n----------------------------------------\n\nTITLE: Defining a datetime field in TCA\nDESCRIPTION: This snippet demonstrates how to define a simple date field in TYPO3's TCA. The field will be stored as a `bigint` in the database. This example configures a 'datetime' field within the 'columns' array of a TCA configuration file.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"code\": \"<?php\\n\\nreturn [\\n    'ctrl' => [\\n        'label' => 'title',\\n    ],\\n    'columns' => [\\n        'datetime_field' => [\\n            'label' => 'Datetime Field',\\n            'config' => [\\n                'type' => 'datetime',\\n            ]\\n        ]\\n    ]\\n];\"\n```\n\n----------------------------------------\n\nTITLE: Disabling Child Record Movement in TYPO3\nDESCRIPTION: This shows the configuration for disabling the movement of child records when a parent record is relocated. By default, when a parent is moved, its children move along with it. This setting can override this default behavior and is applicable under a parent-child relational structure. This setting can also be overridden by page TSconfig.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/File/_Properties/_Behaviour.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['disableMovingChildrenWithParent']\n```\n\n----------------------------------------\n\nTITLE: Defining Minimal Configuration for Required Type in TYPO3 TCA - PHP\nDESCRIPTION: This snippet shows a minimal configuration of type '0' in TYPO3's TCA, which is essential for proper functionality. It demonstrates how to define the 'showitem' property as required. Ensure that TYPO3 is properly installed and referenced for proper execution.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Examples/_30_RequiredType.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n..  _types-required:\n\nRequired type examples\n----------------------\n\n..  _types-examples-required-minimal:\n\nRequired type - minimal configuration\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe type :php:`0` is required to be defined. It has to have at least the\nproperty :ref:`showitem <types-properties-showitem>` defined. A minimal\nconfiguration can be seen here, for example:\n\n..  include:: /CodeSnippets/TypeMinimal.rst.txt\n\nIt displays nothing but a single field.\n\n```\n\n----------------------------------------\n\nTITLE: Configuring dbFieldLength for select fields in TYPO3 TCA - PHP\nDESCRIPTION: This code snippet demonstrates how to configure the dbFieldLength for select fields within TYPO3's TCA. Since TYPO3 v13, developers can directly specify the length of varchar database fields for select fields using this configuration option. This setting does not apply to fields that resolve to an integer type.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_DbFieldLength.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\\nreturn [\\n    'ctrl' => [\\n        'title' => 'My Table',\\n        // Other control options\\n    ],\\n    'interface' => [\\n        // Interface configurations\\n    ],\\n    'columns' => [\\n        'myfield' => [\\n            'config' => [\\n                'type' => 'select',\\n                'dbFieldLength' => 300, // Adjust the length\\n                // Other select field configurations\\n            ]\\n        ]\\n    ],\\n    'types' => [\\n        '0' => ['showitem' => 'myfield']\\n    ]\\n];\n```\n\n----------------------------------------\n\nTITLE: Defining localization state selector in TYPO3 TCA\nDESCRIPTION: This configuration option allows users to define a localization state selector for a flexible field in TYPO3, stored as an array in the TCA. This enables retrieval and management of localization states for content.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: TypoScript\nCODE:\n```\n..  confval:: localizationStateSelector\n        :name: flex-fieldWizard-localizationStateSelector\n        :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n        :type: array\n\n        For details see :confval:`fieldWizard-localizationStateSelector`.\n```\n\n----------------------------------------\n\nTITLE: TCA Datetime Format Configuration\nDESCRIPTION: This snippet describes how the `format` property within the TCA configuration affects the display of datetime fields in read-only mode. The format option defines how the field value will be displayed in FormEngine, using keywords like \"date\", \"datetime\", \"time\", and \"timesec\". The actual storage format is defined separately using the `dbType` configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/_Properties/_Format.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: TypoScript\nCODE:\n```\n\n..  confval:: format\n    :name: datetime-format\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['format']\n    :type: string (keyword)\n    :Scope: Display\n\n    Sets the output format if the field is set to read-only. Read-only fields\n    with :code:`format` set to \"date\" will be formatted as \"date\", \"datetime\"\n    as \"datetime\", \"time\" as \"time\" and \"timesec\" as \"timesec\".\n\n    ..  note::\n        The :php:`format` option defines how the field value will be displayed,\n        for example, in FormEngine. The storage format is defined via\n        :ref:`dbType <columns-datetime-properties-dbtype>` and falls back to\n        `eval=integer`.\n\n```\n\n----------------------------------------\n\nTITLE: Configuring localizationStateSelector Field Wizard in TYPO3 TCA Number Fields\nDESCRIPTION: Path configuration for the localizationStateSelector field wizard in TCA for number fields. This wizard enables selecting the localization state for translated content.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n```\n\n----------------------------------------\n\nTITLE: Using TSconfig key for elementBrowserEntryPoints (PHP)\nDESCRIPTION: This example showcases the use of a TSconfig key within the `elementBrowserEntryPoints` configuration. By setting `_default` to `###PAGE_TSCONFIG_ID###`, the actual folder path is defined in TSconfig. This allows for dynamic configuration of the element browser entry point based on the current page TSconfig.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Folder/_Properties/_ElementBrowserEntryPoints.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"folder_group\" => [\n    'label' => 'Folder field',\n    'config' => [\n        'type' => 'folder',\n        'elementBrowserEntryPoints' => [\n            '_default' => '###PAGE_TSCONFIG_ID###'\n        ]\n    ]\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring formattedLabel_userFunc_options in TYPO3 TCA\nDESCRIPTION: Configuration array for formattedLabel_userFunc that allows passing custom options to user-defined label formatting functions. These options are accessible in the parameters array with the key 'options' when the user function is called.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_FormattedLabelUserFuncOptions.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['ctrl']['formattedLabel_userFunc_options'] = [];\n```\n\n----------------------------------------\n\nTITLE: Configuring MM relationship in TCA for PHP\nDESCRIPTION: Example of configuring a many-to-many relationship in TYPO3's TCA using the MM property. This snippet shows how to set up a group field with a foreign table and an intermediate MM table.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/Mm.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n...\n'columns' => [\n    ...\n    'myField' => [\n        'label' => 'myField',\n        'config' => [\n            'type' => 'group',\n            'foreign_table' => 'tx_myextension_myfield_child',\n            'MM' => 'tx_myextension_myfield_mm',\n        ]\n    ],\n    ...\n],\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Search Conditions in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to set up additional SQL WHERE conditions for searching a specific field in TYPO3's TCA. It uses the 'andWhere' option to limit the search to certain content types.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Search.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$temporaryColumns['some_date'] => [\n    'config' => [\n        'search' => [\n            'andWhere' => '{#CType}=\\'type_x\\' OR {#CType}=\\'type_y\\'',\n        ],\n        // ...\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Type Restriction in sys_note Table TCA\nDESCRIPTION: Shows how to ignore page type restrictions for the sys_note table using TCA configuration\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Security.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nreturn [\n    'ctrl' => [\n        // ...\n        'security' => [\n            'ignorePageTypeRestriction' => true,\n        ],\n        // ...\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Foreign Match Fields in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to configure foreign match fields in the TYPO3 Table Configuration Array (TCA) to manage Inline Relational Record Editing (IRRE) relationships. By using foreign match fields, developers can differentiate the inclusion of the same child table in various parent table fields based on specified field-value pairs. Requirements include a grandparent table, a parent inline field configuration, and corresponding match fields in the child table. This configuration enables selective assignment based on match field values, such as differentiating 'employees' and 'customers' in the company's inline fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_ForeignMatchFields.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\\$GLOBALS['TCA']['tx_myextension_domain_model_company'] = [\n    'columns' => [\n        'employees' => [\n            'config' => [\n                'type' => 'inline',\n                'foreign_table' => 'tx_myextension_domain_model_person',\n                'foreign_match_fields' => [\n                    'role' => 'employee'\n                ],\n                // ...\n            ],\n        ],\n        'customers' => [\n            'config' => [\n                'type' => 'inline',\n                'foreign_table' => 'tx_myextension_domain_model_person',\n                'foreign_match_fields' => [\n                    'role' => 'customer'\n                ],\n                // ...\n            ],\n        ],\n    ],\n    // ...\n];\n?>\n```\n\n----------------------------------------\n\nTITLE: Password Generator Configuration - Hexadecimal Format\nDESCRIPTION: Configuration for generating 30-character hexadecimal random passwords, suitable for secret tokens.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/PasswordGenerator.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'config' => [\n    'type' => 'password',\n    'fieldControl' => [\n        'passwordGenerator' => [\n            'options' => [\n                'passwordRules' => [\n                    'length' => 30,\n                    'random' => 'hex'\n                ]\n            ]\n        ]\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA for Many-to-Many Relationship in TYPO3 PHP\nDESCRIPTION: This code snippet defines the TCA configuration for a many-to-many relationship table in TYPO3. It includes select fields for parent and child references with foreign table relationships, and passthrough fields for sorting. The configuration also implements localization for the references.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Manual/InlineMnMm.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nreturn [\n   'columns' => [\n      'parentid' => [\n         'label' => 'parentid',\n         'config' => [\n            'type' => 'select',\n            'renderType' => 'selectSingle',\n            'foreign_table' => 'tx_styleguide_inline_mn',\n            'foreign_table_where' => 'AND {#tx_styleguide_inline_mn}.{#pid}=###CURRENT_PID### AND {#tx_styleguide_inline_mn}.{#sys_language_uid}=\\'###REC_FIELD_sys_language_uid###\\'',\n            'maxitems' => 1,\n            'localizeReferences' => 1,\n         ],\n      ],\n      'childid' => [\n         'label' => 'childid',\n         'config' => [\n            'type' => 'select',\n            'renderType' => 'selectSingle',\n            'foreign_table' => 'tx_styleguide_inline_mn_child',\n            'foreign_table_where' => 'AND {#tx_styleguide_inline_mn_child}.{#pid}=###CURRENT_PID### AND {#tx_styleguide_inline_mn_child}.{#sys_language_uid}=\\'###REC_FIELD_sys_language_uid###\\'',\n            'maxitems' => 1,\n            'localizeReferences' => 1,\n         ],\n      ],\n      'parentsort' => [\n         'config' => [\n            'type' => 'passthrough',\n         ],\n      ],\n      'childsort' => [\n         'config' => [\n            'type' => 'passthrough',\n         ],\n      ],\n   ]\n];\n```\n\n----------------------------------------\n\nTITLE: Enabling Language Synchronization in TCA\nDESCRIPTION: This PHP snippet demonstrates how to enable the 'allowLanguageSynchronization' behavior in a TCA configuration for a specific table and field. Setting it to true enables the LocalizationStateSelector FieldWizard, providing radio buttons for controlling field synchronization in localized records. This example assumes you have a table named 'someTable' and are overriding it in 'EXT:my_extension'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_Behaviour.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nuse TYPO3\\CMS\\Core\\Utility\\ExtensionManagementUtility;\n\nExtensionManagementUtility::addToAllTCAtypes(\n    'someTable',\n    '--div--;LLL:EXT:my_extension/Resources/Private/Language/locallang_db.xlf:tabs.localized, my_localized_field',\n    '',\n    'after:hidden'\n);\n\n$GLOBALS['TCA']['someTable']['columns']['my_localized_field'] = [\n    'label' => 'LLL:EXT:my_extension/Resources/Private/Language/locallang_db.xlf:my_localized_field',\n    'config' => [\n        'type' => 'input',\n        'behaviour' => [\n            'allowLanguageSynchronization' => true,\n        ],\n    ],\n];\n\n```\n\n----------------------------------------\n\nTITLE: Defining Tabs and Palettes Configuration for Required Type in TYPO3 TCA - PHP\nDESCRIPTION: This snippet illustrates the configuration of a required type using tabs and palettes, specifically the default type '0'. This configuration includes two tabs: 'general' with fields 'category', 'subject', and 'message', and an 'access' tab with the field 'personal'. This is useful for organizing form fields in TYPO3 back-end modules.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Examples/_30_RequiredType.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n..  _types-examples-required-tabs:\n\nRequired type - tabs and palettes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following configuration specifies two tabs: the first one labelled 'general'\nwith three fields 'category' 'subject' and 'message', and the second one\nlabelled 'access' with the field 'personal'. Only the default type '0' is\nspecified. Opening such a record looks like this:\n\n..  include:: /Images/Rst/TxStyleguideCtrlCommon.rst.txt\n\n```\n\n----------------------------------------\n\nTITLE: Configuring select-tree-multiple in TYPO3 TCA\nDESCRIPTION: This configuration option allows the same item to be selected multiple times in a list when using TYPO3's TCA. It is essential for scenarios involving bidirectional MM (many-to-many) relationships where the property must be set for both the native and foreign field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_Multiple.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: multiple\n    :name: select-tree-multiple\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display / Proc.\n\n    Allows the *same item* more than once in a list.\n\n    If used with bidirectional MM relations it must be set for both the native\n    and foreign field configuration.\n\n    ..  versionchanged:: 13.0\n        The property :confval:`select-tree-mm-hasUidField` is\n        obsolete. It had to be defined previously when using `multiple`.\n```\n\n----------------------------------------\n\nTITLE: Overriding Security Settings in Custom Extension\nDESCRIPTION: Demonstrates how to override security settings for a custom table in a TCA override file\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Security.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['my_table']['ctrl']['security']['ignoreWebMountRestriction'] = true;\n$GLOBALS['TCA']['my_table']['ctrl']['security']['ignoreRootLevelRestriction'] = true;\n$GLOBALS['TCA']['my_table']['ctrl']['security']['ignorePageTypeRestriction'] = true;\n```\n\n----------------------------------------\n\nTITLE: Maximum Records Check Parameters\nDESCRIPTION: Code reference for maximum records validation parameters in check fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_Validation.rst.txt#2025-04-16_snippet_3\n\nLANGUAGE: restructuredtext\nCODE:\n```\n:code:`maximumRecordsChecked` and :code:`maximumRecordsCheckedInPid`\n```\n\n----------------------------------------\n\nTITLE: Registering Custom FieldInformation in TYPO3 CMS ext_localconf.php\nDESCRIPTION: This snippet demonstrates how to register a custom FieldInformation class in the ext_localconf.php file of a TYPO3 extension. It adds the 'NewsStaticText' node to the formEngine nodeRegistry.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldInformation.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TYPO3_CONF_VARS']['SYS']['formEngine']['nodeRegistry'][1552726986] = [\n    'nodeName' => 'NewsStaticText',\n    'priority' => 70,\n    'class' => \\GeorgRinger\\News\\Backend\\FieldInformation\\StaticText::class\n];\n```\n\n----------------------------------------\n\nTITLE: Defining Foreign Table Prefix Configuration in TYPO3 TCA\nDESCRIPTION: This snippet defines the configuration value 'foreign_table_prefix', which is used to specify a label prefix for records from a foreign table in TYPO3's TCA. It is meant for reference within the TCA setup to manage how foreign records are displayed.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_ForeignTablePrefix.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: foreign_table_prefix\n    :name: select-checkbox-foreign-table-prefix\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string or LLL reference\n    :Scope: Display\n    :RenderType: all\n\n    Label prefix to the title of the records from the foreign-table.\n```\n\n----------------------------------------\n\nTITLE: Configuring Fixed Font Text Field with Tabulators in TYPO3 TCA\nDESCRIPTION: This code snippet demonstrates how to configure a text field with fixed font and enabled tabulators in TYPO3's Table Configuration Array (TCA). It sets up a 'bodytext' field with specific rendering options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/TextTable/_Properties/_FixedFont.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$GLOBALS['TCA']['tt_content']['columns']['bodytext']['config'] = [\n    'type' => 'text',\n    'cols' => 40,\n    'rows' => 15,\n    'fixedFont' => true,\n    'enableTabulator' => true,\n    'wrap' => 'off',\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring nullable property in TCA\nDESCRIPTION: This snippet shows how to configure the 'nullable' property for a field in TYPO3's TCA. When set to `true`, a checkbox appears in the backend, allowing the field to be set to NULL in the database. The database field must allow NULL values.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Color/_Properties/_Nullable.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nreturn [\n    'ctrl' => [\n        'label' => 'title',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'cruser_id' => 'cruser_id',\n        'delete' => 'deleted',\n        'title' => 'LLL:EXT:some_extension/Resources/Private/Language/locallang_db.xlf:tx_sometable',\n        'iconfile' => 'EXT:some_extension/Resources/Public/Icons/tx_sometable.gif',\n    ],\n    'types' => [\n        '1' => ['showitem' => 'title, color_field'],\n    ],\n    'columns' => [\n        'title' => [\n            'label' => 'LLL:EXT:some_extension/Resources/Private/Language/locallang_db.xlf:tx_sometable.title',\n            'config' => [\n                'type' => 'input',\n                'size' => 30,\n                'eval' => 'trim,required'\n            ],\n        ],\n        'color_field' => [\n            'label' => 'Color Field',\n            'config' => [\n                'type' => 'color',\n                'nullable' => true,\n            ],\n        ],\n    ],\n];\n\n```\n\n----------------------------------------\n\nTITLE: Configuring otherLanguageContent Field Wizard in TYPO3 TCA\nDESCRIPTION: This snippet shows how to configure the otherLanguageContent field wizard in the TYPO3 TCA (Table Configuration Array). The wizard displays values from the default language and other localized records for supported field types in localized content.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldWizard/OtherLanguageContent.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent'] = [];\n```\n\n----------------------------------------\n\nTITLE: Configuring defaultLanguageDifferences Field Wizard in TYPO3 TCA (PHP)\nDESCRIPTION: Sets up the defaultLanguageDifferences field wizard for a text field in TYPO3's TCA. This wizard helps in managing differences between default and translated content.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n```\n\n----------------------------------------\n\nTITLE: Configuring Email Field Autocomplete in TYPO3 TCA\nDESCRIPTION: Sets the autocomplete attribute for an email input field in TYPO3 configuration. When set to true, enables browser auto-fill functionality for the email field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Email/_Properties/_Autocomplete.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['autocomplete'] = true;\n```\n\n----------------------------------------\n\nTITLE: Defining Soft Reference Configuration in TYPO3 TCA\nDESCRIPTION: This snippet shows the structure for configuring soft references in TYPO3's TCA. It is used to attach soft reference parsers to input fields. The value is a comma-separated list of keys, with optional parameters separated by semicolons.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/TextTable/_Properties/_Softref.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['softref'] = 'key1,key2[parameter1;parameter2;...],...'\n```\n\n----------------------------------------\n\nTITLE: Defining maxitems Configuration in TYPO3 TCA\nDESCRIPTION: This code snippet defines the 'maxitems' configuration for file properties in TYPO3's TCA. It specifies the maximum number of files that can be attached and highlights its use in validation during record processing. The configuration can also be overridden using TSconfig.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/File/_Properties/_Maxitems.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: maxitems\n    :name: file-maxitems\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: integer > 0\n    :Scope: Display / Proc.\n\n    Maximum number of files that can be attached. Defaults to a high value.\n    JavaScript record validation prevents the record from being saved if the\n    limit is not satisfied.\n\n    This property can also be overridden by page TSconfig.\n```\n\n----------------------------------------\n\nTITLE: Configuring Nullable Text Field in TYPO3 TCA (PHP)\nDESCRIPTION: This code defines a TCA configuration for a text field named 'text_18'. The field is set to be nullable, allowing it to have no value. It uses the 'text' type for input and explicitly sets the 'nullable' option to true.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text18.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'text_18' => [\n            'label' => 'text_18',\n            'description' => 'nullable=true',\n            'config' => [\n                'type' => 'text',\n                'nullable' => true,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Link Field Size in TYPO3 TCA Configuration\nDESCRIPTION: Sets the width of the input field for links in TYPO3's TCA. The 'size' property is an integer value that abstractly represents the field width. A value of 50 sets the field to full width, with a minimum of 10 and a default of 30.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Size.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: size\n    :name: link-size\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: integer\n    :Scope: Display\n\n    Abstract value for the width of the :code:`<input>` field. To set the link\n    field to the full width of the form area, use the value 50. Minimum is 10.\n    Default is 30.\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Field with Foreign Table Item Group in TYPO3 TCA\nDESCRIPTION: Demonstrates how to use the foreign_table_item_group property to reference an item group identifier in a foreign table for a select field configuration in TYPO3 CMS\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_ForeignTableItemGroup.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// Note: Actual code snippet was not provided in the input text\n```\n\n----------------------------------------\n\nTITLE: Defining fieldControl Configuration in TYPO3 TCA\nDESCRIPTION: This reStructuredText snippet defines a configuration value 'fieldControl' for password fields in TYPO3's Table Configuration Array. It directs users to a more detailed explanation of the 'fieldControl' option.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_FieldControl.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: fieldControl\n    :name: password-fieldControl\n\n    For details see :confval:`fieldControl`.\n```\n\n----------------------------------------\n\nTITLE: LLL Reference for Localized Strings in TYPO3\nDESCRIPTION: Demonstrates the syntax for referencing localized strings from language files using the LLL prefix in TYPO3 configuration. Allows dynamic string translation based on language context.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Introduction/Index.rst#2025-04-16_snippet_2\n\nLANGUAGE: TYPO3\nCODE:\n```\nLLL:EXT:myextension/Resources/Private/Language/locallang.xlf:key\n```\n\n----------------------------------------\n\nTITLE: Using symmetric_sortby in TYPO3 TCA inline field configuration\nDESCRIPTION: Example showing the syntax of symmetric_sortby property in TYPO3 TCA. This property defines a field on the foreign table where the sorting of the other side of a symmetric relation is stored. It requires using the foreign_field approach.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_SymmetricSortby.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nsymmetric_sortby\n```\n\n----------------------------------------\n\nTITLE: TYPO3 Site Configuration Example\nDESCRIPTION: Example YAML configuration showing site settings including category root definition.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_TreeConfig.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Site config\nbase: /\nrootPageId: 1\ncategories:\n    root: 123\n```\n\n----------------------------------------\n\nTITLE: Configuring Checkbox Columns in TYPO3 TCA\nDESCRIPTION: Configuration example showing how to set up a checkbox field in TYPO3's TCA with specific column settings. The 'cols' property determines how many columns the checkboxes will be displayed in, with values ranging from 1 to 31 or 'inline'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_Cols.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config'] = [\n    'type' => 'check',\n    'cols' => 2\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring otherLanguageContent Wizard for T3Editor Text Fields in TYPO3 TCA\nDESCRIPTION: Sets up the otherLanguageContent wizard for a text field using T3Editor in TYPO3's TCA. This wizard displays content from other languages for reference during translation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/T3Editor/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n```\n\n----------------------------------------\n\nTITLE: Defining fieldControl Property in TYPO3 TCA Configuration\nDESCRIPTION: This snippet shows the configuration structure for the fieldControl property in TYPO3's TCA. It specifies the property path, type, scope, and applicable field types.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldControl/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: fieldControl\n    :name: fieldControl\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: array\n    :Scope: Display\n    :Types: :ref:`group <columns-group>`,\n        :ref:`imageManipulation <columns-imageManipulation>`,\n        :ref:`input <columns-input>`, :ref:`radio <columns-radio>`\n```\n\n----------------------------------------\n\nTITLE: Configuring Localization State Selector Wizard in TYPO3 TCA\nDESCRIPTION: TCA configuration path for the localizationStateSelector field wizard that handles content localization states.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n```\n\n----------------------------------------\n\nTITLE: Configuring Allowed Link Options in TYPO3 TCA Link Field\nDESCRIPTION: This code demonstrates how to configure specific allowed options (class and params) in the link browser for a TCA link field. This controls which link attributes will be available to editors.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Appearance.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// Display only 'class' and 'params'\n'appearance' => [\n    'allowedOptions' => ['class', 'params'],\n],\n```\n\n----------------------------------------\n\nTITLE: Example: A slug field with prefix hook in TYPO3 TCA PHP\nDESCRIPTION: This code snippet illustrates how to implement a slug field in TYPO3 TCA with a custom prefix hook by utilizing the configuration option `config['appearance']['prefix']`. It takes into account both `input_1` and `input_2` for generating the slug.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Slug/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nreturn [\n    'columns' => [\n        'slug' => [\n            'exclude' => true,\n            'label' => 'Slug',\n            'config' => [\n                'type' => 'slug',\n                'prefix' => 'CustomPrefix-',\n                'source' => ['input_1', 'input_2'],\n            ],\n        ],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Renaming TCA Showitem Tabs Using Localization in PHP\nDESCRIPTION: This example demonstrates renaming the first tab in a TCA configuration using localization strings. It configures two tabs, the first tab being labeled with a localized name, and the second tab retains its localized label as defined earlier. This technique allows dynamic renaming of tab labels using language files.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Examples/_10_ShowItem.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'types' => [\n    '0' => [\n        'showitem' => '\n            --div--;LLL:EXT:examples/locallang_db.xml:tx_examples_haiku.images, hidden, title, poem,\n            --div--;LLL:EXT:examples/locallang_db.xml:tx_examples_haiku.images, image1, image2,\n        '\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Search WHERE Conditions in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to add a custom SQL WHERE condition to a specific field when it's being searched. It restricts search for the 'my_editor' field to only include records with specific types (X and Y).\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_Search.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA']['tx_mytable']['columns']['my_editor']['config']['search']['andWhere'] =\n    \"{#tx_mytable}.{#type} IN ('X', 'Y')\"\n```\n\n----------------------------------------\n\nTITLE: Sort Select Items by Value in TCA\nDESCRIPTION: This snippet shows how to configure a select field in TCA to sort items numerically or alphabetically by their values.  The `sortItems` property is set to 'value'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_SortItems.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"code\": \"<?php\\nreturn [\\n    'ctrl' => [\\n        'label' => 'title',\\n    ],\\n    'columns' => [\\n        'select_field' => [\\n            'label' => 'Select Field',\\n            'config' => [\\n                'type' => 'select',\\n                'renderType' => 'selectSingle',\\n                'items' => [\\n                    ['Option C', 'c'],\\n                    ['Option A', 'a'],\\n                    ['Option B', 'b'],\\n                ],\\n                'sortItems' => 'value',\\n            ],\\n        ],\\n    ],\\n];\\n\"\n```\n\n----------------------------------------\n\nTITLE: Referencing File Paths for TYPO3 TCA Overrides\nDESCRIPTION: Shows the file path convention for TYPO3 TCA overrides configuration. The warning emphasizes that auto-created columns only work properly when defined in the original TCA file, not in overrides files.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_CodeSnippets/_AutoCreatedColumns/_AutoCreateWarning.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n:file:`Configuration/TCA/Overrides/something.php`\n```\n\n----------------------------------------\n\nTITLE: Configuring Other Language Content Wizard in TYPO3 TCA\nDESCRIPTION: TCA configuration path for the otherLanguageContent field wizard that displays content from other languages.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n```\n\n----------------------------------------\n\nTITLE: Defining Path to TCA JSON Field Configuration\nDESCRIPTION: Configuration path definition for the 'cols' property in TYPO3's TCA that controls the width of JSON textarea fields. The default value is 30, and it can be adjusted up to 50 for full-width display.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Json/_Properties/_Cols.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: TCA Types Configuration Before Label Property\nDESCRIPTION: This PHP code snippet demonstrates the TCA 'types' and 'palettes' configuration before using the 'label' property.  The label for the palette is embedded directly within the 'types' configuration, leading to potential duplication if the palette is reused. The 'showitem' property defines the fields to be displayed.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Palettes/_Properties/_Label.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"<?php\n        'types' => [\n            'myType' => [\n                'showitem' => 'aField, --palette--;LLL:EXT:myExt/Resources/Private/Language/locallang.xlf:aPaletteDescription;aPalette, someOtherField',\n            ],\n        ],\n        'palettes' => [\n            'aPalette' => [\n                'showitem' => 'aFieldInAPalette, anotherFieldInPalette',\n            ],\n        ],\n\"\n```\n\n----------------------------------------\n\nTITLE: Allowing All Link Types in TYPO3 TCA\nDESCRIPTION: Example showing how to configure link field to allow all possible link types using wildcard.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_AllowedTypes.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n// Allow all types (or skip this option).\n'allowedTypes' => ['*']\n```\n\n----------------------------------------\n\nTITLE: TCA: Configuring Default Value for select-singlebox\nDESCRIPTION: This configuration sets the default value for a 'select-singlebox' field when a new record is created. If the value is empty, the first element from the 'items' array will be selected. This configuration is part of the TYPO3 TCA.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_Default.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: TYPO3 TCA\nCODE:\n```\n..  confval:: default\n    :name: select-singlebox-default\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string\n    :Scope: Display  / Proc.\n    :RenderType: all\n\n    Default value set if a new record is created. If empty, the first element in\n    the items array is selected.\n```\n\n----------------------------------------\n\nTITLE: Referencing Palettes in TCA Types\nDESCRIPTION: This snippet shows how palettes, once defined, are referenced within the 'types' section of a table's TCA in TYPO3. This allows the defined groups of fields to be displayed together for specific record types.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Palettes/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\"..  include:: /CodeSnippets/PalettesTypes.rst.txt\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Field in TYPO3 TCA (PHP)\nDESCRIPTION: This snippet shows the configuration for a text field named 'text_4' in TYPO3's TCA. It sets the label, description, and defines the input as a text area with 20 columns and 2 rows.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text4.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'text_4' => [\n            'label' => 'text_4',\n            'description' => 'cols=20, rows=2',\n            'config' => [\n                'type' => 'text',\n                'cols' => 20,\n                'rows' => 2,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Appending Custom WHERE Clauses in TYPO3 TCA Configuration\nDESCRIPTION: This SQL snippet demonstrates how to append custom WHERE clauses to existing constraints in TYPO3 TCA configuration. It uses TYPO3's special field quoting syntax for DBAL compatibility. The WHERE clause must begin with 'AND'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_ForeignTableWhere.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nAND {#some_field} = ###REC_FIELD_some_field###\n```\n\n----------------------------------------\n\nTITLE: Password Generator Configuration - Include Special Characters\nDESCRIPTION: Configuration example for generating passwords that include special characters. This will produce passwords like 'qe8)i2W1it-msR8'.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/PasswordGenerator.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'config' => [\n    'type' => 'password',\n    'fieldControl' => [\n        'passwordGenerator' => [\n            'options' => [\n                'passwordRules' => [\n                    'length' => 14,\n                    'lowerCaseCharacters' => true,\n                    'upperCaseCharacters' => true,\n                    'digitCharacters' => true,\n                    'specialCharacters' => true\n                ]\n            ]\n        ]\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Password Field in TYPO3 TCA\nDESCRIPTION: Defines a basic password field configuration in TYPO3's Table Configuration Array (TCA). The snippet shows how to set up a password input field with minimal configuration including label and field type specification.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Snippets/_Password_1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'password_1' => [\n            'label' => 'password_1',\n            'description' => 'type=password',\n            'config' => [\n                'type' => 'password',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Edit Popup Field Control in TYPO3 TCA\nDESCRIPTION: This configuration snippet sets the parameters for the edit popup field control in TYPO3's TCA. It provides options for displaying an edit icon and configuring the popup behavior when clicked.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FieldControl/_EditPopup.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']['editPopup']\n```\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']['editPopup']['options']['title']\n```\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']['editPopup']['options']['windowOpenParameters']\n```\n\n----------------------------------------\n\nTITLE: Adding Additional Conditions for MM Queries\nDESCRIPTION: This snippet covers the 'MM_table_where' configuration value that adds SQL WHERE clauses for reading MM relationships. It provides an example of using the special quoting syntax for identifiers.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_Mm.rst.txt#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n\"MM_table_where\" => [\"name\" => \"select-single-mm-table-where\", \"type\" => \"string\", \"Path\" => \"$GLOBALS['TCA'][$table]['columns'][$field]['config']\", \"Scope\" => \"Proc.\"]\n```\n\n----------------------------------------\n\nTITLE: TYPO3 Webhooks JSON Field Configuration\nDESCRIPTION: RST file inclusion directive referencing an example configuration for JSON fields in the TYPO3 webhooks system extension\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Json/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  include:: _Examples/SysWebHook.rst.php\n```\n\n----------------------------------------\n\nTITLE: TYPO3 Pages Types Global Configuration Reference\nDESCRIPTION: Reference to the global configuration array for TYPO3 pages types that contains special icon handling logic.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_TypeiconColumn.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n$GLOBALS['PAGES_TYPES']\n```\n\n----------------------------------------\n\nTITLE: Configuring Preview Renderer in TYPO3 Documentation\nDESCRIPTION: This snippet provides the configuration value definition for the preview renderer used in TYPO3's TCA. It details the purpose and scope of the previewRenderer configuration option, which is to set up a backend preview for content elements. It includes references to related configurations and documentation for further details.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Properties/_PreviewRenderer.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: previewRenderer\n    :name: types-previewRenderer\n    :Path: $GLOBALS['TCA'][$table]['types'][$type]['previewRenderer']\n    :type: string\n    :Scope: Display\n    :Examples: `types-example-previewRenderer`\n```\n\n----------------------------------------\n\nTITLE: Configuring Datetime Softref in TYPO3 TCA\nDESCRIPTION: Specifies soft reference parser configuration for datetime fields in TYPO3 Configuration Array. Allows attaching soft reference parsers with a specific syntax of key1,key2[parameter1;parameter2;...],...\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/_Properties/_Softref.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: softref\n    :name: datetime-softref\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string\n    :Scope: Proc.\n    :Types: :ref:`input <columns-input>`\n```\n\n----------------------------------------\n\nTITLE: TYPO3 TCA Tree Configuration Example\nDESCRIPTION: PHP configuration example showing treeConfig setup with startingPoints including site configuration reference.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_TreeConfig.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// Example TCA config\n'config' => [\n    'treeConfig' => [\n        'startingPoints' => '1,2,###SITE:categories.root###',\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Attaching Select Items to Item Groups in PHP\nDESCRIPTION: This snippet shows how to attach a select item to a specific item group when using the `ExtensionManagementUtility::addTcaSelectItem` method.  A fourth parameter in the item array specifies the ID of the item group the item should belong to.  This method extends the functionality of the `addTcaSelectItem` function to support grouping.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Properties/ItemGroups.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nExtensionManagementUtility::addTcaSelectItem(\n        'tt_content',\n        'CType',\n        [\n            'LLL:EXT:my_slider_mixtape/Resources/Private/Locallang/locallang_tca.xlf:tt_content.CType.slickslider',\n            'slickslider',\n            'EXT:my_slider_mixtape/Resources/Public/Icons/slickslider.png',\n            'sliders'\n        ]\n    );\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Field with Trim Evaluation in TYPO3 TCA\nDESCRIPTION: This snippet defines a TCA configuration for a text field named 'text_7'. It specifies the field label, description, and configuration options including the field type and evaluation method.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text7.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'text_7' => [\n            'label' => 'text_7',\n            'description' => 'eval=trim',\n            'config' => [\n                'type' => 'text',\n                'eval' => 'trim',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Input Field with Value Picker in TYPO3 TCA\nDESCRIPTION: Example configuration for an input field with a valuePicker dropdown that offers seasonal options. When selected, these values are transferred to the input field according to the configured mode.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_ValuePicker.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'input_33' => [\n    'label' => 'input_33',\n    'config' => [\n        'type' => 'input',\n        'valuePicker' => [\n            'items' => [\n                ['spring', 'Spring'],\n                ['summer', 'Summer'],\n                ['autumn', 'Autumn'],\n                ['winter', 'Winter'],\n            ],\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring otherLanguageContent Wizard for Password Fields in TYPO3 TCA\nDESCRIPTION: Path configuration for the otherLanguageContent wizard which displays content from other languages for password fields in TYPO3.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n```\n\n----------------------------------------\n\nTITLE: MM Table Where Clause Example\nDESCRIPTION: This example demonstrates how to use the MM_table_where property to add an additional WHERE clause when reading MM relations. The special field quoting syntax {#...} ensures DBAL compatibility.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_Mm.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"{#uid_local} = ###THIS_UID###\"\n```\n\n----------------------------------------\n\nTITLE: Configuring TYPO3 TCA Text Field with Virtual Wrapping in PHP\nDESCRIPTION: Defines a TCA configuration for a text field named 'text_6' with virtual wrapping enabled and a long default text value. The configuration demonstrates how to set up text field properties including label, description, and wrapping behavior in TYPO3's TCA.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text6.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'text_6' => [\n            'label' => 'text_6',\n            'description' => 'wrap=virtual, long default text',\n            'config' => [\n                'type' => 'text',\n                'wrap' => 'virtual',\n                'default' => 'This textbox has wrap set to \"virtual\", so these long paragraphs should appear in multiple lines (wrapped at the end of the textbox): Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean non luctus elit. In sed nunc velit. Donec gravida eros sollicitudin ligula mollis id eleifend mauris laoreet. Donec turpis magna, pulvinar id pretium eu, blandit et nisi. Nulla facilisi. Vivamus pharetra orci sed nunc auctor condimentum. Aenean volutpat posuere scelerisque. Nullam sed dolor justo. Pellentesque id tellus nunc, id sodales diam. Sed rhoncus risus a enim lacinia tincidunt. Aliquam ut neque augue.',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: SelectSingle field with itemGroups and size configuration\nDESCRIPTION: This example demonstrates configuring a SelectSingle field with both itemGroups and a specified size in TYPO3 TCA. The 'size' property determines the number of options displayed at once. It defines an array of key-value pairs for the itemGroups, where the key is the item group ID and the value is the label of the item group.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_ItemGroups.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: typoscript\nCODE:\n```\n\"code\": \"'selectSingle17' => [\n    'exclude' => true,\n    'label' => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle17',\n    'config' => [\n        'type' => 'select',\n        'renderType' => 'selectSingle',\n        'size' => 6,\n        'items' => [\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle17.item0', 0],\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle17.item1', 1],\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle17.item2', 2],\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle17.item3', 3],\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle17.item4', 4],\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle17.item5', 5],\n            ['LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle17.item6', 6],\n        ],\n        'itemGroups' => [\n            1 => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle17.group1',\n            2 => 'LLL:EXT:examples/Resources/Private/Language/locallang_db.xlf:tx_examples_domain_model_example.selectSingle17.group2',\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Disabling Edit Popup Field Control in TYPO3 TCA\nDESCRIPTION: This configuration allows for disabling the edit popup field control, which needs to be set to false to enable the 'Create new' button in TYPO3.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FieldControl/_EditPopup.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']['editPopup']['disabled']\n```\n\n----------------------------------------\n\nTITLE: Configuring Localization State Selector Field Wizard\nDESCRIPTION: Defines the configuration path for localization state selector field wizard in TYPO3 TCA, used to manage translation and localization states\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n```\n\n----------------------------------------\n\nTITLE: Implementing haikuTitle Method in User Function\nDESCRIPTION: The haikuTitle method fetches and modifies a record's title in TYPO3CMS. It retrieves the record using its UID and appends a preview of the poem content. It updates the title in the parameters array, from which it will be used.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_LabelUserfunc.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\npublic function haikuTitle(&$parameters)\n{\n    $record = BackendUtility::getRecord($parameters['table'], $parameters['row']['uid']);\n    $newTitle = $record['title'];\n    $newTitle .= ' (' . substr(strip_tags($record['poem']), 0, 10) . '...)';\n    $parameters['title'] = $newTitle;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining autoSizeMax Configuration for Select Fields in TYPO3\nDESCRIPTION: This snippet defines the `autoSizeMax` configuration value for select fields in TYPO3. The purpose is to limit the maximum height of the select field, allowing it to adjust based on the number of selected items while adhering to specified size constraints. The adjustment only takes effect if the `maxitems` configuration value allows multiple selections.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Folder/_Properties/_AutoSizeMax.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n..  confval:: autoSizeMax\n    :name: folder-autoSizeMax\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: integer\n    :Scope: Display\n\n    The maximum size (height) of the select field.\n\n    The size of the select field will be automatically adjusted based on\n    the number of selected items. The select field will never be smaller than\n    the specified :confval:`size <folder-size>` and never larger than\n    the value of `autoSizeMax`.\n\n    ..  note::\n        Only has an effect if :confval:`maxitems <folder-maxitems>` is greater than 1.\n```\n\n----------------------------------------\n\nTITLE: Defining readOnly property in TCA\nDESCRIPTION: This configuration defines the 'readOnly' property within the TCA configuration for a specific field. It is a boolean value that determines whether the field should be rendered as read-only in the TYPO3 backend. Setting it to true will make the field non-editable, though values can still be written to the field via the DataHandler.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Email/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: TYPO3 TCA\nCODE:\n```\n..  confval:: readOnly\n    :name: email-readOnly\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display\n\n    Renders the field in a way that the user can see the values but cannot edit them. The rendering is as similar\n    as possible to the normal rendering but may differ in layout and size.\n\n    ..  warning::\n        This property affects only the display. It is still possible to write to those fields when using\n        the :ref:`DataHandler <t3coreapi:tce>`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Preview Renderer for TYPO3 TCA Record\nDESCRIPTION: Sets a custom preview renderer for a specific table in TYPO3's Table Configuration Array (TCA). This allows defining a custom preview for backend record display using a vendor-specific preview renderer class.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_PreviewRenderer.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['tx_myextension_domain_model_mytable']['ctrl']['previewRenderer'] = \\MyVendor\\MyExtension\\Preview\\PreviewRenderer::class;\n```\n\n----------------------------------------\n\nTITLE: Including TCA Configuration for Code Editor\nDESCRIPTION: This snippet includes the configuration for the code editor in TYPO3 from a PHP file. It illustrates how to integrate the enhanced textarea for TypoScript input with syntax highlighting and autocomplete.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/T3Editor/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nreturn [\n    'columns' => [\n        'your_field' => [\n            'config' => [\n                'renderType' => 'codeEditor',\n                // additional configurations\n            ],\n        ],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Checkbox Field Path Definition in TYPO3 TCA\nDESCRIPTION: Demonstrates the configuration path for checkbox field evaluation settings in TYPO3's TCA structure.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_Eval.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: Configuring localizationStateSelector Wizard for Password Fields in TYPO3 TCA\nDESCRIPTION: Path configuration for the localizationStateSelector wizard which provides language state selection functionality for password fields in TYPO3.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n```\n\n----------------------------------------\n\nTITLE: Configuring Unique Email Field in TYPO3 TCA\nDESCRIPTION: Demonstrates how to configure an email field to be unique within a storage page (PID) in TYPO3 TCA. Uses the uniqueInPid evaluation keyword to ensure email address uniqueness within the current page context.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Email/_Properties/_Eval.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['table_name']['columns']['email_field']['config']['eval'] = 'uniqueInPid'\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Password Field in TYPO3 TCA\nDESCRIPTION: Basic configuration example of a password field in TYPO3's TCA. Shows how to define a simple password input field with default settings.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'password_field' => [\n    'label' => 'Password',\n    'config' => [\n        'type' => 'password',\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining readOnly Property in TYPO3 TCA\nDESCRIPTION: This code snippet defines a configuration value called 'readOnly' for a field in TYPO3's Table Configuration Array (TCA). When set to true, the field is rendered so that users can see its value but are unable to edit it. This is particularly useful for fields that need to be displayed without allowing modifications directly in the interface.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: readOnly\n    :name: select-tree-readOnly\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n    :type: boolean\n    :Scope: Display\n\n    Renders the field in a way that the user can see the value but cannot edit it.\n\n    ..  warning::\n        This property affects only the display. It is still possible to\n        write to those fields when using the :ref:`DataHandler <t3coreapi:tce>`.\n```\n\n----------------------------------------\n\nTITLE: Defining selectIcons in TYPO3\nDESCRIPTION: This snippet outlines the configuration path for 'selectIcons' within the field wizard context. It indicates that this array setting controls whether to render thumbnails of icons below the select drop-down, which is disabled by default.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n..  confval:: selectIcons\n    :name: select-byside-fieldWizard-selectIcons\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['selectIcons']\n    :type: array\n    :Scope: fieldWizard\n\n    Render thumbnails of icons below the select drop-down. Disabled by default.\n```\n\n----------------------------------------\n\nTITLE: Including RST Document Header\nDESCRIPTION: RestructuredText include directive for common header definitions used across TYPO3 documentation\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/BestPractises/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  include:: /Includes.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Language Differences Field Wizard\nDESCRIPTION: Specifies the configuration path for default language differences field wizard in TYPO3 TCA, used to manage language-specific field display and behavior\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n```\n\n----------------------------------------\n\nTITLE: Configuring defaultLanguageDifferences in TYPO3 TCA\nDESCRIPTION: This snippet represents the configuration for 'defaultLanguageDifferences' within the 'fieldWizard' of a TYPO3 TCA. This configuration allows for customizing how differences between the default language and translations are handled in the backend interface. The path specifies the location of this configuration within the global TCA array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/BeLayoutWizard/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\"\n```\n\n----------------------------------------\n\nTITLE: Defining other language content in TYPO3 TCA\nDESCRIPTION: This configuration option allows for the definition of other language content for a flexible field within TYPO3's TCA. It utilizes an array to manage various language content efficiently.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: TypoScript\nCODE:\n```\n..  confval:: otherLanguageContent\n        :name: flex-fieldWizard-otherLanguageContent\n        :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n        :type: array\n\n        For details see :confval:`fieldWizard-otherLanguageContent`.\n```\n\n----------------------------------------\n\nTITLE: MM has UID Field obsolescence notice\nDESCRIPTION: Starting version 13.0, this setting is obsolete. Remove all occurrences of :php:`MM_hasUidField` from TCA. The :sql:`uid` column is added as primary key automatically, if :php:`multiple = true` is set, otherwise a combined primary key of fields :sql:`uid_local`, :sql:`uid_foreign` plus eventually :sql:`tablenames` and :sql:`fieldname` is used.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_Mm.rst.txt#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n:php:`MM_hasUidField`\n```\n\n----------------------------------------\n\nTITLE: Defining Radio Field Wizard's Default Language Differences\nDESCRIPTION: Defines the configuration path for default language differences in the radio field wizard within TYPO3's TCA. It specifies that this configuration is an array type and serves to handle multilingual content effectively.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Radio/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: defaultLanguageDifferences\n        :name: radio-fieldWizard-defaultLanguageDifferences\n        :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n        :type: array\n\n        For details see :confval:`fieldWizard-defaultLanguageDifferences`.\n```\n\n----------------------------------------\n\nTITLE: Migration Diff for Code Editor\nDESCRIPTION: This snippet provides the diff output for migrating from the render type 't3editor' to 'codeEditor'. It shows the necessary changes required in the configuration files for a smooth transition.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/T3Editor/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\ndiff --git a/path/to/old_file.php b/path/to/new_file.php\nindex 123abc..456def 100644\n--- a/path/to/old_file.php\n+++ b/path/to/new_file.php\n@@ -1,6 +1,6 @@\n return [\n     'columns' => [\n         'your_field' => [\n-            'config' => [\n-                'renderType' => 't3editor',\n+            'config' => [\n+                'renderType' => 'codeEditor',\n                 // additional configurations\n             ],\n         ],\n     ],\n ];\n```\n\n----------------------------------------\n\nTITLE: Configuring label_alt_force in TYPO3 TCA\nDESCRIPTION: The label_alt_force configuration option is a boolean that determines whether the label and alternate label fields are displayed in the title separated by a comma. When this option is set to true, both fields will be shown. Note that label_userFunc can override this setting.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_LabelAltForce.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n..  confval:: label_alt_force\n    :name: ctrl-label-alt-force\n    :type: boolean\n    :Scope: Display\n\n    If set, then the :ref:`label <ctrl-reference-label>` field and the\n    :ref:`label_alt <ctrl-reference-label-alt>` fields\n    are shown in the title separated by comma.\n\n    ..  note::\n        :ref:`label_userFunc <ctrl-reference-label-userfunc>` overrides this\n        property.\n```\n\n----------------------------------------\n\nTITLE: Configuring authorization mode for selector box in TYPO3\nDESCRIPTION: This snippet describes the configuration option 'authMode' for a selector box in TYPO3's TCA (Table Configuration Array). The configuration is stored in the TCA and dictates that only explicitly allowed values from the 'items' array can be selected by backend users who are not administrators.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_AuthMode.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: authMode\n    :name: select-checkbox-authMode\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string (keyword)\n    :Scope: Display  / Proc.\n    :RenderType: all\n\n    Authorization mode for the selector box. The only possible option is:\n\n    explicitAllow\n        All static values from the \"items\" array of the selector box will be added to a matrix in the backend user\n        configuration where a value must be explicitly selected if a user (other than admin) is allowed to use it!)\n```\n\n----------------------------------------\n\nTITLE: Defining exclusiveKeys Property for Category Fields in TYPO3 TCA\nDESCRIPTION: Specifies a list of keys that are mutually exclusive with other options in a multi-select field. This configuration is applied to the TCA structure for a specific table and field. It affects both the display and processing of the field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_ExclusiveKeys.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nexclusiveKeys\n:name: category-exclusiveKeys\n:Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n:type: string (list of)\n:Scope: Display  / Proc.\n:RenderType: all\n```\n\n----------------------------------------\n\nTITLE: Basic Type Configuration in TCA Ctrl Section\nDESCRIPTION: Defines the type configuration for tx_examples_dummy table using record_type field as type indicator.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Type.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    'type' => 'record_type'\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Checkbox with Maximum Records Validation in TYPO3 TCA\nDESCRIPTION: This code configures a checkbox field with the 'maximumRecordsCheckedInPid' validation rule in TYPO3's TCA. It restricts the number of records that can have this checkbox checked within the same page to a maximum of 1.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Checkbox8.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'checkbox_8' => [\n            'label' => 'checkbox_8',\n            'description' => 'eval=maximumRecordsCheckedInPid, for this PID',\n            'config' => [\n                'type' => 'check',\n                'eval' => 'maximumRecordsCheckedInPid',\n                'validation' => [\n                    'maximumRecordsCheckedInPid' => 1,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Allow Language Synchronization in TCA for TYPO3 PHP\nDESCRIPTION: This snippet illustrates the configuration of the `allowLanguageSynchronization` parameter in TYPO3's TCA (Table Configuration Array). This setting enables support for localization in data records, allowing editors to decide if certain fields should retain synchronization with default or source language records. The feature enhances record management by incorporating a FieldWizard that provides visual controls for localization state, stored as JSON in the database. Key parameters include the table name, field name, and associated paths that reflect the configuration structure.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_Behaviour.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['allowLanguageSynchronization']\n```\n\n----------------------------------------\n\nTITLE: Configuring ReadOnly TCA Column Property\nDESCRIPTION: Demonstrates how to set a TCA column as read-only, preventing user editing in the frontend while allowing backend writes via DataHandler\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly'] = true;\n```\n\n----------------------------------------\n\nTITLE: Configuring disableNoMatchingValueElement in TCA\nDESCRIPTION: This snippet documents the 'disableNoMatchingValueElement' configuration option for a select tree in TYPO3. It defines the path within the TCA array and specifies that this option is a boolean, affecting the display of elements based on matching values. When enabled, it prevents the insertion of an element if there is no existing match for the value provided.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_DisableNonMatchingValueElement.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: disableNoMatchingValueElement\n    :name: select-tree-disableNoMatchingValueElement\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display\n    \n    If set, then no element is inserted if the current value does not match\n    any of the existing elements. A corresponding options is also found in Page\n    TSconfig.\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Language Differences Wizard in TYPO3 TCA\nDESCRIPTION: TCA configuration path for the defaultLanguageDifferences field wizard that shows differences between default and translated content.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n```\n\n----------------------------------------\n\nTITLE: Referencing Eval Properties\nDESCRIPTION: Internal documentation reference to check field eval properties.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_Validation.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: restructuredtext\nCODE:\n```\n:ref:`eval <columns-check-properties-eval>`\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Checkbox Field in TYPO3 TCA\nDESCRIPTION: This snippet defines the TCA configuration for a select checkbox field named 'select_checkbox_2'. It specifies a many-to-one relationship and includes three predefined items with labels and values.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectCheckbox2.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'select_checkbox_2' => [\n            'label' => 'select_checkbox_2, relationship=manyToOne',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectCheckBox',\n                'relationship' => 'manyToOne',\n                'items' => [\n                    [\n                        'label' => 'foo 1',\n                        'value' => 1,\n                    ],\n                    [\n                        'label' => 'foo 2',\n                        'value' => 2,\n                    ],\n                    [\n                        'label' => 'foo 3',\n                        'value' => 3,\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Referencing Foreign Table Label in PHP\nDESCRIPTION: Demonstrates the path to the standard label configuration that can be overridden by symmetric_label. This references the label field defined in the foreign table's ctrl section.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_SymmetricLabel.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][<foreign_table>]['ctrl']['label']\n```\n\n----------------------------------------\n\nTITLE: Referencing TCA symmetric_label Configuration in PHP\nDESCRIPTION: Shows the path to access the symmetric_label configuration for an inline field in TYPO3's TCA. This property overrides the default label when viewing a symmetric relation from the other side.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_SymmetricLabel.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: Rendering Crop Variants in HTML ViewHelpers\nDESCRIPTION: Demonstrates how to use crop variants within the `<f:image />` ViewHelper in HTML to render images with specific cropping configurations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/ImageManipulation/Index.rst#2025-04-16_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<f:image image=\\\"{data.image}\\\" cropVariant=\\\"mobile\\\" width=\\\"800\\\" />\n```\n\n----------------------------------------\n\nTITLE: Example prependAtCopy value\nDESCRIPTION: Illustrates the typical usage of the `prependAtCopy` option, which appends a string (usually indicating a copy) to the title of a copied record. The `%s` token is replaced by the copy number.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_PrependAtCopy.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"(copy %s)\"\n```\n\n----------------------------------------\n\nTITLE: Defining Default Value for Select Checkbox\nDESCRIPTION: This snippet specifies the default value configuration for select-checkbox elements in TYPO3. It illustrates the configuration path, type, and the behavior expected when initiating a new record.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_Default.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: default\n    :name: select-checkbox-default\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string\n    :Scope: Display  / Proc.\n    :RenderType: all\n\n    Default value set if a new record is created. If empty, the first element in\n    the items array is selected.\n```\n\n----------------------------------------\n\nTITLE: Configuring Inline Many-to-Many Relationship in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for an inline field that manages many-to-many relationships. The configuration specifies foreign table relationships, sorting, and localization options through the appearance settings.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/InlineMnInline1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'inline_1' => [\n            'label' => 'inline_1',\n            'config' => [\n                'type' => 'inline',\n                'foreign_table' => 'tx_styleguide_inline_mn_mm',\n                'foreign_field' => 'parentid',\n                'foreign_sortby' => 'parentsort',\n                'foreign_label' => 'childid',\n                'appearance' => [\n                    'showSynchronizationLink' => 1,\n                    'showAllLocalizationLink' => 1,\n                    'showPossibleLocalizationRecords' => 1,\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring itemsProcFunc in TYPO3 TCA\nDESCRIPTION: Defines a PHP method for dynamically populating or manipulating items in a select field configuration. Used to customize dropdown or selection field options at runtime.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_ItemsProcFunc.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['itemsProcFunc']\n```\n\n----------------------------------------\n\nTITLE: Configuring readOnly Property in TYPO3 TCA\nDESCRIPTION: Demonstrates the configuration path for setting a field as read-only in the TYPO3 Table Configuration Array. The property affects display only and does not prevent programmatic modifications.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n```\n\n----------------------------------------\n\nTITLE: Configuring MM Table Where Clause in TCA\nDESCRIPTION: This example demonstrates how to use the 'MM_table_where' property in TCA configuration to add an additional WHERE clause when reading MM relations. It illustrates the usage of special field quoting syntax for DBAL compatibility.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_Mm.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\n    ..  code-block:: text\n\n        {#uid_local} = ###THIS_UID###\n\n    The above example uses the special field quoting syntax :php:`{#...}`\n    around identifiers to be as :ref:`DBAL <t3coreapi:database>`-compatible as\n    possible.\n\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Browser Title with Plain String in TYPO3 TCA Link Field\nDESCRIPTION: This code shows how to set a custom browser title for the link browser using a plain string value instead of a language reference. This approach is simpler but doesn't support multiple languages.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Appearance.rst.txt#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n// Or a simple string value\n'appearance' => [\n    'browserTitle' => 'My custom title',\n],\n```\n\n----------------------------------------\n\nTITLE: Defining otherLanguageContent fieldWizard in TCA\nDESCRIPTION: This code snippet shows how to configure the 'otherLanguageContent' fieldWizard within TYPO3's TCA. It allows customization of the display and behavior related to content in other languages. The configuration is accessed through the global TCA array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Folder/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n\"$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\"\n```\n\n----------------------------------------\n\nTITLE: Defining isHiddenPalette for TCA in TYPO3\nDESCRIPTION: This snippet defines a configuration value 'isHiddenPalette' for TYPO3's TCA, allowing for a palette that is hidden in the FormEngine. It provides boolean type handling, enabling fields to be processed without being shown in the UI, useful for setting values via JavaScript or when using foreign selectors in inline relationships.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Palettes/_Properties/_IsHiddenPalette.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: isHiddenPalette\n    :name: palettes-isHiddenPalette\n    :Path: $GLOBALS['TCA'][$table]['palettes']\n    :type: boolean\n\n    If set to true, this palette will never be shown, but the fields of the palette are technically\n    rendered as hidden elements in FormEngine.\n\n    This is sometimes useful when you want to set a field's value by JavaScript from another user-defined field.\n    You can also use it along with the IRRE (TCA columns type :ref:`inline <columns-inline>`)\n    :ref:`foreign_selector <columns-inline-properties-foreign-selector>` feature if you don't want the relation\n    field to be displayed (it must be technically present and rendered though, that's why you should put it to\n    a hidden palette in that case).\n\n    ..  note::\n        The \"isHiddenPalette\" concept is more a hack than a solution in current FormEngine code. It has been\n        introduced for the \"FAL\" file resource handling to have virtual fields which can be handled in JavaScript\n        but are not displayed to the editor. It comes with the price of a bunch of HTML that is disabled\n        via CSS if editing those records in the backend. The core will sooner or later reconsider this solution\n        and substitute it with something more appropriate. Extension authors should stay away from this property\n        if possible to not run into upgrade troubles if that happens.\n```\n\n----------------------------------------\n\nTITLE: Configuring hideAtCopy in TYPO3 TCA\nDESCRIPTION: This snippet defines the 'hideAtCopy' configuration option in TYPO3 TCA, detailing how it controls the visibility of records when copied. It also references related configuration options, such as 'enablecolumns', indicating how this feature can be disabled on various levels through TSconfig.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_HideAtCopy.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n..  confval:: hideAtCopy\n    :name: ctrl-hideAtCopy\n    :Path: $GLOBALS['TCA'][$table]['ctrl']\n    :type: boolean\n    :Scope: Proc.\n\n\n    If set, and the \"disabled\" field from :ref:`enablecolumns <ctrl-reference-enablecolumns>` is\n    specified, then records will be disabled/hidden when they are copied.\n\n    ..  seealso::\n        It is possible to disable this feature on a page and user or group level using the Page\n        TSconfig option :ref:`disableHideAtCopy <t3tsref:pagetcemaintables-disablehideatcopy>`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Email Mode in TYPO3 TCA\nDESCRIPTION: Defines the configuration path for the email mode property in TYPO3 Table Configuration Array (TCA). Controls field editability and placeholder behavior.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Email/_Properties/_Mode.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: mode\n    :name: email-mode\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['mode']\n    :type: string (keywords)\n    :Scope: Display\n```\n\n----------------------------------------\n\nTITLE: Registering a Custom Wizard in TYPO3 ext_localconf.php\nDESCRIPTION: This code registers a custom wizard node in the ext_localconf.php file of a TYPO3 extension. It defines a new wizard class and registers it with the FormEngine.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/Examples.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\ndeclared(strict_types=1);\n\n(static function() {\n    \\TYPO3\\CMS\\Core\\Utility\\ExtensionManagementUtility::addPageTSConfig('@import \"EXT:my_extension/Configuration/TSconfig/Page/myWizard.tsconfig\"');\n    $GLOBALS['TYPO3_CONF_VARS']['SYS']['formEngine']['nodeRegistry'][1603744080] = [\n        'nodeName' => 'myOwnOuterWrapWizard',\n        'priority' => 40,\n        'class' => \\MyVendor\\MyExtension\\Form\\FieldWizard\\MyFieldWizard::class,\n    ];\n})();\n```\n\n----------------------------------------\n\nTITLE: Defining Foreign Table for Record Selection in SQL\nDESCRIPTION: This snippet demonstrates how to define a foreign table in SQL that can be referenced in another table. This setup is integral to facilitating a drop-down selection in TYPO3, where records from this foreign table appear in a selector box.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_SeliconField.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n::include:: /CodeSnippets/Manual/SelectSingle12ForeignPart.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Allowing Language Synchronization in TYPO3 TCA\nDESCRIPTION: This snippet configures the behaviour of text tables in TYPO3 regarding language synchronization. It allows editors to choose whether to copy values from the source language or maintain separate values in a localized record. The setting impacts how synchronization is managed within the database via a JSON-encoded array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/TextTable/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['allowLanguageSynchronization'] = [\n    'type' => 'boolean',\n    'default' => false,\n];\n?>\n```\n\n----------------------------------------\n\nTITLE: Form Evaluation Registration in TYPO3 Extension Configuration\nDESCRIPTION: Extension configuration code to register a custom form evaluation class in TYPO3's form engine.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_Eval.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']['tce']['formevals'][\\TYPO3\\CMS\\Styleguide\\UserFunctions\\FormEngine\\TypeText9Eval::class] = '';\n```\n\n----------------------------------------\n\nTITLE: Configuring title property in addRecord field control in TCA\nDESCRIPTION: This configuration allows setting a custom title attribute for the popup icon associated with the addRecord field control. The title can be a string or an LLL reference.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FieldControl/_AddRecord.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n\"$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']['addRecord']['options']['title']\"\n```\n\n----------------------------------------\n\nTITLE: Defining hideDeleteIcon Configuration Value - TYPO3\nDESCRIPTION: This snippet outlines a configuration value used in TYPO3 to hide the delete icon next to selector boxes. It is defined as a boolean type and affects the display of UI elements.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_HideDeleteIcon.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: hideDeleteIcon\n    :name: group-hideDeleteIcon\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display\n\n    Removes the delete icon next to the selector box.\n```\n\n----------------------------------------\n\nTITLE: Setting Category Size in TYPO3 CMS TCA Configuration\nDESCRIPTION: This snippet shows how to configure the 'size' option for a category field in TYPO3 CMS TCA. It sets the maximum number of elements to be displayed by default for the field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_Size.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['size']\n```\n\n----------------------------------------\n\nTITLE: Defining minitems in TCA Configuration\nDESCRIPTION: The `minitems` property specifies the minimum number of child items required. It is an integer value greater than 0. JavaScript validation prevents saving the record if the minimum requirement is not met.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_Minitems.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: TYPO3 Configuration\nCODE:\n```\n..  confval:: minitems\n    :name: select-singlebox-minitems\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: integer > 0\n    :Scope: Display\n\n    Minimum number of child items. Defaults to 0. JavaScript record validation\n    prevents the record from being saved if the limit is not satisfied.\n```\n\n----------------------------------------\n\nTITLE: Defining Figure with Localization State Selector in RST\nDESCRIPTION: RST markup for displaying a screenshot of a localization state selector on an input field, including alt text and styling class.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/ManualScreenshots/LocalizationStateSelector.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/ManualScreenshots/LocalizationStateSelector.png\n   :alt: Example localization state selector on a type=input field\n   :class: with-shadow\n\n   Example localization state selector on an type=input field\n```\n\n----------------------------------------\n\nTITLE: Defining default language differences in TYPO3 TCA\nDESCRIPTION: This configuration option allows users to specify default language differences for a flexible field in TYPO3, utilizing an array to retrieve TCA configurations. It helps in managing language-specific elements effectively.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: TypoScript\nCODE:\n```\n..  confval:: defaultLanguageDifferences\n        :name: flex-fieldWizard-defaultLanguageDifferences\n        :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n        :type: array\n\n        For details see :confval:`fieldWizard-defaultLanguageDifferences`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Frontend User Table Extensions in TYPO3 TCA\nDESCRIPTION: Demonstrates how to add custom fields to the frontend user table using TCA configuration in TYPO3. This allows developers to extend the default fe_users table with additional custom fields for more comprehensive user data management.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/ExtendingTcaFeUsers.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/ExtendingTcaFeUsers.png\n   :alt: New fields for fe_users table\n   :class: with-shadow\n\n   New fields for fe_users table\n```\n\n----------------------------------------\n\nTITLE: SQL NULL Constraint\nDESCRIPTION: SQL constraint required for the database column when using mode property.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Mode.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nNULL\n```\n\n----------------------------------------\n\nTITLE: Configuring Checkbox Field in TYPO3 TCA\nDESCRIPTION: Demonstrates how to configure a single checkbox field in TYPO3's TCA with a label 'foo'. The configuration uses the 'check' type and defines a single checkbox item with a custom label.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Checkbox2.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'checkbox_2' => [\n            'label' => 'checkbox_2',\n            'description' => 'one checkbox with label',\n            'config' => [\n                'type' => 'check',\n                'items' => [\n                    [\n                        'label' => 'foo',\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring localizationStateSelector in TYPO3 TCA\nDESCRIPTION: This snippet shows the configuration for 'localizationStateSelector' within the 'fieldWizard' of a TYPO3 TCA. This configuration is used to control the display and behavior of the localization state selector in the backend. The path identifies where this configuration resides within the global TCA array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/BeLayoutWizard/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\"\n```\n\n----------------------------------------\n\nTITLE: Rendering SingleSelect Field with PHP in TYPO3\nDESCRIPTION: This PHP snippet illustrates how to utilize the 'singleSelect' render type in TYPO3 to establish a foreign relation in another table. The setup allows the use of icons for better visual representation when selecting related records in forms.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_SeliconField.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n::include:: /CodeSnippets/SelectSingle12.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Migrating from 'cols' to 'size' property in TCA None type configuration\nDESCRIPTION: Diff showing how to migrate from the deprecated 'cols' property to the new 'size' property in TYPO3 TCA configuration for None type fields. The change is a direct rename of the property.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/None/_Properties/_Size.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n--- Old\n+++ New\n@@ -2,6 +2,6 @@\n 'config' => [\n     'type' => 'none',\n     'itemsProcFunc' => 'User\\Demo\\Proc\\ItemsProcFunc->getItems',\n-    'cols' => 30\n+    'size' => 30\n ]\n\n```\n\n----------------------------------------\n\nTITLE: Configuring disableNoMatchingValueElement in TCA\nDESCRIPTION: A boolean configuration option for select fields that prevents inserting an element when the current value does not match existing options. Used in TYPO3's Table Configuration Array (TCA) to control form field behavior.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_DisableNonMatchingValueElement.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: typoscript\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['disableNoMatchingValueElement'] = true;\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Area Field in TYPO3 TCA\nDESCRIPTION: This snippet defines a text area field named 'text_11' in the TYPO3 TCA. It sets the label, description, and configures the input as a text area with 30 columns, 4 rows, and a maximum of 30 characters.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text11.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'text_11' => [\n            'label' => 'text_11',\n            'description' => 'max=30',\n            'config' => [\n                'type' => 'text',\n                'cols' => 30,\n                'rows' => 4,\n                'max' => 30,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring allowLanguageSynchronization in TCA\nDESCRIPTION: This PHP code demonstrates how to configure the allowLanguageSynchronization property in a TCA configuration file. When set to true, it enables the localization state selector wizard for fields in localized records, allowing editors to choose synchronization behavior.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\ndeclared(strict_types=1);\n\n$GLOBALS['TCA']['someTable']['columns']['myField']['config']['behaviour'] = [\n    'allowLanguageSynchronization' => true,\n];\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Field Length for Select Field in TYPO3 TCA\nDESCRIPTION: Demonstrates how to use the dbFieldLength option to adjust the varchar field length for a select field in TYPO3 configuration. This option allows developers to customize the database field length beyond the default 255 characters.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_DbFieldLength.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\$GLOBALS['TCA']['mytable']['columns']['myfield']['config'] = [\n    'type' => 'select',\n    'dbFieldLength' => 500\n]\n```\n\n----------------------------------------\n\nTITLE: Including an image with shadow using reStructuredText\nDESCRIPTION: This snippet demonstrates how to include an image in reStructuredText with a specified path and a CSS class to apply a shadow effect. The `:class:` option within the `figure` directive is used to assign the `with-shadow` class to the image.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/Text5.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/Text5.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: Defining RST Navigation Tree\nDESCRIPTION: RestructuredText toctree directive defining the navigation structure for best practices documentation sections\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/BestPractises/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n..  toctree::\n    :titlesonly:\n\n    CommonFields\n    LanguageFields\n```\n\n----------------------------------------\n\nTITLE: Configuring localizationStateSelector Field Wizard in TYPO3 TCA\nDESCRIPTION: This snippet shows the TCA configuration path for the localizationStateSelector field wizard. It is used to display radio buttons for managing the localization state of fields in translated records.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldWizard/LocalizationStateSelector.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n```\n\n----------------------------------------\n\nTITLE: TCA Link Mode Path Definition\nDESCRIPTION: Global TCA configuration path for the mode property of a link field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Mode.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['mode']\n```\n\n----------------------------------------\n\nTITLE: Referencing Field Information Configuration in reStructuredText\nDESCRIPTION: A reStructuredText directive that defines the fieldInformation configuration option for input elements in TYPO3 CMS TCA. It creates a cross-reference to the main fieldInformation documentation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_FieldInformation.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: fieldInformation\n    :name: input-fieldInformation\n\n    For details see :confval:`fieldInformation`.\n```\n\n----------------------------------------\n\nTITLE: Defining defaultLanguageDifferences in TYPO3\nDESCRIPTION: This snippet defines the configuration path for the 'defaultLanguageDifferences' setting in the field wizard context. It outlines that this configuration should be an array, indicating potential differences in field settings based on the default language.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n..  confval:: defaultLanguageDifferences\n    :name: select-byside-fieldWizard-defaultLanguageDifferences\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n    :type: array\n\n    For details see :confval:`fieldWizard-defaultLanguageDifferences`.\n```\n\n----------------------------------------\n\nTITLE: TYPO3 TCA typeicon_column Property Reference\nDESCRIPTION: The typeicon_column property in TYPO3 TCA specifies a field name that determines alternative icons for table records. The field values must match entries in typeicon_classes array. Pages table uses special $GLOBALS['PAGES_TYPES'] configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_TypeiconColumn.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n$GLOBALS['TCA'][$table]['ctrl']['typeicon_column']\n```\n\n----------------------------------------\n\nTITLE: SelectSingle field with itemGroups and size Configuration\nDESCRIPTION: This snippet demonstrates how to configure a 'selectSingle' field with 'itemGroups' and the 'size' property in TYPO3's TCA.  The 'size' property increases the visible number of options in the select box. The 'itemGroups' array defines the groups that will be used to categorize the options in the select field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_ItemGroups.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: typoscript\nCODE:\n```\n\"columns\" => [\n        \"a_select_field\" => [\n            \"label\" => \"A select field\",\n            \"config\" => [\n                \"type\" => \"select\",\n                \"renderType\" => \"selectSingle\",\n                \"size\" => 6,\n                \"items\" => [\n                    [ 'Option one', 1 ],\n                    [ 'Option two', 2 ],\n                    [ 'Option three', 3 ],\n                    [ 'Option four', 4 ],\n                ],\n                'itemGroups' => [\n                    1 => 'Group one',\n                    3 => 'Group two'\n                ]\n            ]\n        ]\n    ]\n```\n\n----------------------------------------\n\nTITLE: Installing TYPO3 Styleguide Extension via Composer\nDESCRIPTION: Command to install the TYPO3 styleguide extension using Composer in development mode. This should be executed in the root directory of a TYPO3 project.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Examples/StyleGuide.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ncomposer require --dev typo3/cms-styleguide\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Selection in TCA\nDESCRIPTION: This snippet defines a boolean configuration for allowing the same item to be selected multiple times in a TYPO3 TCA list. It emphasizes the need for this configuration in bidirectional MM relations for both native and foreign field configurations. It also mentions an obsolete property 'select-single-mm-hasUidField' in version 13.0.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_Multiple.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: multiple\n    :name: select-single-multiple\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display / Proc.\n\n    Allows the *same item* more than once in a list.\n\n    If used with bidirectional MM relations it must be set for both the native\n    and foreign field configuration.\n\n    ..  versionchanged:: 13.0\n        The property :confval:`select-single-mm-hasUidField` is\n        obsolete. It had to be defined previously when using `multiple`.\n```\n\n----------------------------------------\n\nTITLE: Asymmetric Child Table Parent Display\nDESCRIPTION: This snippet provides configuration examples for child tables that display their parent records in a TYPO3 TCA setup. It showcases how child records can define their own columns to reflect their parents.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/Examples.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\ninclude:: /CodeSnippets/InlineMnChildParents.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring Language Synchronization in TYPO3 TCA\nDESCRIPTION: Example code showing how to configure allowLanguageSynchronization in TCA configuration. This setting enables field value synchronization between different language versions and adds a language state selector wizard to the backend form.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Color/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['allowLanguageSynchronization'] = true;\n```\n\n----------------------------------------\n\nTITLE: Configuring MM Property in TCA\nDESCRIPTION: An example of configuring the 'config']['MM'] property within the TCA (Table Configuration Array) to define an MM relationship between two tables. It points to the intermediate MM table used to store the relation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_Mm.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n:php:`['config']['MM']`\n```\n\n----------------------------------------\n\nTITLE: Displaying Image in RST Documentation\nDESCRIPTION: ReStructuredText markup for including an automatic screenshot figure with shadow styling in TYPO3 documentation\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/InlineFalInline1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/InlineFalInline1.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: Including Screenshot in RST Documentation\nDESCRIPTION: ReStructuredText directive for including a screenshot image with shadow styling in TYPO3 documentation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/GroupDb8.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/GroupDb8.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: Referencing Input Field in TYPO3 TCA\nDESCRIPTION: Shows how to reference an input field in TYPO3 TCA documentation. This is typically used in conjunction with the 'size' property to describe the affected HTML element.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Size.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n:code:`<input>`\n```\n\n----------------------------------------\n\nTITLE: Setting AllowLanguageSynchronization in TCA Configuration for TYPO3\nDESCRIPTION: This snippet demonstrates how to configure language synchronization for fields in TYPO3 TCA overrides. It likely shows setting up additional conditions for the search functionality referenced in the surrounding documentation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/T3Editor/_Properties/_Search.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n..  literalinclude:: _Snippets/_AllowLanguageSynchronization.php\n    :caption: EXT:my_extension/Configuration/TCA/Overrides/someTable.php\n```\n\n----------------------------------------\n\nTITLE: Including External File in reStructuredText\nDESCRIPTION: This directive includes an external file named 'Includes.rst.txt' into the current document. It's commonly used to import shared content or configurations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  include:: /Includes.rst.txt\n```\n\n----------------------------------------\n\nTITLE: TYPO3 Version Control SQL Field Definitions\nDESCRIPTION: SQL field definitions required for implementing versioning in TYPO3 tables. Includes fields for tracking version origins, workspace IDs, version states, and staging information.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_VersioningWS.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nt3ver_oid int(11) DEFAULT '0' NOT NULL,\nt3ver_wsid int(11) DEFAULT '0' NOT NULL,\nt3ver_state tinyint(4) DEFAULT '0' NOT NULL,\nt3ver_stage int(11) DEFAULT '0' NOT NULL,\n```\n\n----------------------------------------\n\nTITLE: Configuring ReadOnly Password Field in TYPO3 TCA\nDESCRIPTION: TCA configuration path to set a password field as read-only in the TYPO3 backend. When enabled, users can see but cannot edit the field value through the interface. Note that this is only a UI restriction and does not prevent programmatic modifications via DataHandler.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n```\n\n----------------------------------------\n\nTITLE: SQL: be_groups Table Migration\nDESCRIPTION: This snippet refers to the SQL 'be_groups' table and the handling of 'DENY' fields during the migration process. The upgrade wizard drops any 'DENY' fields and instructs administrators to avoid setting new access rights.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_AuthMode.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n\":sql:`be_groups`\"\n```\n\nLANGUAGE: sql\nCODE:\n```\n\":sql:`DENY`\"\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Group Field with List Module Control\nDESCRIPTION: Example configuration for a group field in TYPO3's TCA with enabled list module control. Demonstrates setup for database record selection with listModule field control enabled.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldControl/ListModule.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'group_db_1' => [\n            'label' => 'group_db_1',\n            'config' => [\n                'type' => 'group',\n                'allowed' => 'tx_styleguide_elements_group',\n                'fieldControl' => [\n                    'listModule' => [\n                        'disabled' => false\n                    ]\n                ]\n            ]\n        ]\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Table Field in TYPO3 TCA\nDESCRIPTION: Defines a read-only text field configuration using the textTable render type. The field is set to 40 columns wide and 5 rows tall, with a label 'text_19' and appropriate description.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text19.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'text_19' => [\n            'label' => 'text_19',\n            'description' => 'renderType=textTable readOnly',\n            'config' => [\n                'type' => 'text',\n                'renderType' => 'textTable',\n                'readOnly' => true,\n                'cols' => '40',\n                'rows' => '5',\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Color Field with Opacity in TYPO3 TCA Using PHP\nDESCRIPTION: This code snippet shows how to add a color field with adjustable opacity in TYPO3's TCA. It sets the field type to 'color' and enables opacity adjustments. A prerequisite for this functionality is TYPO3 version 13.3 or higher. The expected input is a color code that supports opacity, and the output will be a color value in 'RRGGBBAA' notation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Color/_Properties/_Opacity.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$temporaryColumns['aColorField'] = [\n    'label' => 'My Color',\n    'config' => [\n        'type' => 'color',\n        'opacity' => true,\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: TCA Configuration Path for minitems\nDESCRIPTION: Specifies the exact global configuration path for setting minimum items in a tree selection field within TYPO3's Table Configuration Array (TCA).\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_Minitems.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['minitems'] = 1;\n```\n\n----------------------------------------\n\nTITLE: Displaying Multi-Language Header Field Image in RST\nDESCRIPTION: ReStructuredText directive for displaying a screenshot of a TYPO3 header field showing content in multiple languages. The image includes shadow styling and alternative text for accessibility.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/ManualScreenshots/OtherLanguageContent.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/ManualScreenshots/OtherLanguageContent.png\n   :alt: Header field showing values from two other languages\n   :class: with-shadow\n\n   Header field showing values from two other languages\n```\n\n----------------------------------------\n\nTITLE: Including Checkbox Screenshot in RST Documentation\nDESCRIPTION: ReStructuredText directive for including a screenshot of a checkbox configuration in the TYPO3 CMS TCA documentation. The figure directive specifies the image path and adds a shadow class for styling.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/Checkbox7.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/Checkbox7.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: Creating Table of Contents in reStructuredText\nDESCRIPTION: This directive generates a table of contents for the document. It uses a glob pattern to include all files in the current directory and any subdirectories that have an 'Index' file.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  toctree::\n    :glob:\n\n    *\n    */Index\n```\n\n----------------------------------------\n\nTITLE: Referencing 'size' Property in TYPO3 TCA Configuration\nDESCRIPTION: Demonstrates the path to the 'size' property in the TYPO3 TCA configuration array. This property is used to set the width of input fields in the TYPO3 backend forms.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Size.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n:Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: Automatic Screenshot Configuration in TYPO3 Documentation\nDESCRIPTION: Documentation directive for embedding an automatically generated screenshot with styling\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/Slug1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/Slug1.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: RST Reference Label Definition\nDESCRIPTION: Reference label definition for the defaultLanguageDifferences TCA property\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldWizard/DefaultLanguageDifferences.rst#2025-04-16_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n..  _tca_property_fieldWizard_defaultLanguageDifferences:\n```\n\n----------------------------------------\n\nTITLE: Including Screenshot with Figure Directive in reST\nDESCRIPTION: ReStructuredText markup for including an automatic screenshot with shadow styling applied to the figure. The image path references an automatic screenshot and includes a CSS class for shadow effect.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/InlineMnChildParents.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/InlineMnChildParents.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: Configuring Date Formatting for None-Type Field in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to configure a none-type field to format its value as a date. It uses the strftime function with a custom format option. The strftime parameter is set to TRUE to use strftime() instead of date(), and the option parameter specifies a locale-dependent date format (%x).\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/None/_Properties/_Format.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'aField' => [\n  'config' => [\n     'type' => 'none',\n     'format' => 'date'\n     'format.' => [\n        'strftime' => TRUE,\n        'option' => '%x'\n     ],\n  ],\n],\n```\n\n----------------------------------------\n\nTITLE: Removed TCA Interface Configuration - PHP\nDESCRIPTION: TCA configuration paths that were removed in TYPO3 14.0. These include maxSingleDBListItems and maxDBListItems interface settings.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/404.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['interface']['maxSingleDBListItems']\n$GLOBALS['TCA'][$table]['interface']['maxDBListItems']\n```\n\n----------------------------------------\n\nTITLE: Default SQL WHERE Clause for Category Language Filter\nDESCRIPTION: Default SQL WHERE condition used to filter category records based on system language settings. Selects categories that have either default language (-1) or base language (0).\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_ForeignTableWhere.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nAND {#sys_category}.{#sys_language_uid} IN (-1, 0)\n```\n\n----------------------------------------\n\nTITLE: Configuring Read-Only Text Field in TYPO3 TCA\nDESCRIPTION: This code snippet defines a TCA configuration for a text field named 'text_9' with read-only property set to true. It demonstrates how to set up a non-editable text field in the TYPO3 backend.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Text9.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n[\n    'columns' => [\n        'text_9' => [\n            'label' => 'text_9',\n            'description' => 'readOnly=1',\n            'config' => [\n                'type' => 'text',\n                'readOnly' => 1,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Referencing foreign_table_field in TYPO3 TCA Configuration\nDESCRIPTION: Shows the path to the foreign_table_field property in the TYPO3 TCA configuration. This property defines the field in the child record that stores the table name of the parent record, enabling weak entity relationships.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_ForeignTableField.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nforeign_table_field\n```\n\n----------------------------------------\n\nTITLE: Defining localizationStateSelector in TYPO3\nDESCRIPTION: This snippet provides the configuration path for the 'localizationStateSelector' option in the field wizard. It specifies that this should also be an array, which allows for the management of localization states for fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n..  confval:: localizationStateSelector\n    :name: select-byside-fieldWizard-localizationStateSelector\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['localizationStateSelector']\n    :type: array\n\n    For details see :confval:`fieldWizard-localizationStateSelector`.\n```\n\n----------------------------------------\n\nTITLE: Displaying Figure with Alt Text in RST\nDESCRIPTION: RST markup for displaying a figure image with alt text, shadow styling and caption showing field changes in default language record.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/ManualScreenshots/DefaultLanguageDifferences.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/ManualScreenshots/DefaultLanguageDifferences.png\n   :alt: A field has been changed in default language record\n   :class: with-shadow\n\n   A field has been changed in default language record\n```\n\n----------------------------------------\n\nTITLE: Including Screenshot in RST Documentation\nDESCRIPTION: reStructuredText directive for including a screenshot image with shadow styling, generated by the TYPO3 Screenshots project.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/InlineMnSymmetric11Branches.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. =========================================================\n.. Automatically generated by the TYPO3 Screenshots project.\n.. https://github.com/TYPO3-Documentation/t3docs-screenshots\n.. =========================================================\n\n.. figure:: /Images/AutomaticScreenshots/InlineMnSymmetric11Branches.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Figure Directive\nDESCRIPTION: This reStructuredText snippet includes a figure directive to embed an image.  The image is located at `/Images/AutomaticScreenshots/CtrlDescriptionColumn.png`.  The `alt` attribute provides alternative text for accessibility, and the `class` attribute applies the `with-shadow` CSS class for styling.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/CtrlDescriptionColumn.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/CtrlDescriptionColumn.png\n   :alt: Record information shown editing an example record\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Display in reStructuredText\nDESCRIPTION: Defines the display of an automatic screenshot using rST figure directive with shadow styling. The comment indicates this is an automatic screenshot that can be manually modified if needed.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/GroupDb11.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. Automatic screenshot: Remove this line if you want to manually change this file\n\n.. figure:: /Images/AutomaticScreenshots/GroupDb11.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: RST Image Include Statement\nDESCRIPTION: Include directive for screenshot showing the defaultLanguageDifferences feature\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldWizard/DefaultLanguageDifferences.rst#2025-04-16_snippet_3\n\nLANGUAGE: rst\nCODE:\n```\n..  include:: /Images/ManualScreenshots/DefaultLanguageDifferences.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Deprecated TCA Subtype Configuration - PHP\nDESCRIPTION: TCA configuration paths for subtypes that were deprecated in TYPO3 13.4 and removed in 14.0, including subtypes_addlist, subtypes_excludelist, and subtype_value_field.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/404.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['types'][$type]['subtypes_addlist']\n$GLOBALS['TCA'][$table]['types'][$type]['subtypes_excludelist']\n$GLOBALS['TCA'][$table]['types'][$type]['subtype_value_field']\n```\n\n----------------------------------------\n\nTITLE: Including Figure with Shadow in RST Documentation\nDESCRIPTION: ReStructuredText directive for including an automatic screenshot image with shadow styling. The image is located in the Images/AutomaticScreenshots directory.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/Inline1n1nInline1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/Inline1n1nInline1.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: Configuring Manual Sorting in TCA\nDESCRIPTION: Sets up the 'sorting' field in TCA configuration to enable manual sorting of records in the backend. This field contains an integer value managed by the DataHandler.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/BestPractises/CommonFields.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n'ctrl' => [\n    // ...\n    'sortby' => 'sorting',\n    // ...\n],\n```\n\n----------------------------------------\n\nTITLE: TCA l10n_mode Configuration Path Definition\nDESCRIPTION: Defines the global configuration path for l10n_mode property in TYPO3's TCA. This setting affects how fields behave during record localization and is only active when languageField is set in the ctrl section.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/_Properties/_L10nMode.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['l10n_mode']\n```\n\n----------------------------------------\n\nTITLE: Defining defaultLanguageDifferences fieldWizard in TCA\nDESCRIPTION: This code snippet shows how to configure the 'defaultLanguageDifferences' fieldWizard within TYPO3's TCA. It allows customization of the display and behavior related to language differences in fields. The configuration is accessed through the global TCA array.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Folder/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\"$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\"\n```\n\n----------------------------------------\n\nTITLE: MM Table Where Clause Example\nDESCRIPTION: Shows how to use MM_table_where for adding custom filtering conditions when reading MM relations, with field quoting for DBAL compatibility\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_Mm.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n{#uid_local} = ###THIS_UID###\n```\n\n----------------------------------------\n\nTITLE: Using authMode='explicitDeny'\nDESCRIPTION: This snippet highlights the deprecation of the 'explicitDeny' option for the 'authMode' property.  Extensions using this configuration should be updated to use 'explicitAllow' instead, which requires explicit authorization within the backend user configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_AuthMode.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\":php:`explicitDeny`\"\n```\n\n----------------------------------------\n\nTITLE: Including Checkbox Screenshot in RST Documentation\nDESCRIPTION: ReStructuredText directive for including a screenshot image of a checkbox interface element, with shadow styling applied.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/Checkbox3.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/Checkbox3.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: Including Allow Language Synchronization Configuration File\nDESCRIPTION: This snippet includes an external PHP file that contains the configuration for the allowLanguageSynchronization setting in TYPO3. It helps in organizing TCA configurations by separating them into manageable files which can be reused across different TCA configurations. This enhances the maintainability and clarity of the overall configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nrequire_once '_Properties/_AllowLanguageSynchronization.php';\n```\n\n----------------------------------------\n\nTITLE: Defining fieldInformation Configuration in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to reference the 'fieldInformation' configuration option in TYPO3's TCA documentation. It uses reStructuredText syntax to create a configuration value definition.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_FieldInformation.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: fieldInformation\n    :name: text-fieldInformation\n\n    For details see :confval:`fieldInformation`.\n```\n\n----------------------------------------\n\nTITLE: Including Screenshot Image with Shadow in RST\nDESCRIPTION: ReStructuredText directive for including an automatic screenshot image with shadow styling. The image is referenced from the /Images/AutomaticScreenshots directory and displays a TCA inline example.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/InlineMnInline1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/InlineMnInline1.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Column Description Property\nDESCRIPTION: RST configuration snippet showing the description property definition in TYPO3's TCA. The property is used to add explanatory text between field labels and input elements in the TYPO3 backend.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/_Properties/_Description.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n..  confval:: description\n    :name: columns-description\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]\n    :Required: false\n    :type: string or LLL reference\n    :Scope: Display\n    :Example: :ref:`columns-example-basic`\n```\n\n----------------------------------------\n\nTITLE: Combining Conditions with AND in TCA\nDESCRIPTION: This snippet shows how to combine multiple display conditions using the 'AND' operator in TCA.  Both 'tx_templavoila_ds' must be 'true' and 'header' must be equal to 'Headline' for the field to be displayed.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/DisplayConditions.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n    'displayCond' => [\n        'AND' => [\n            'FIELD:tx_templavoila_ds:REQ:true',\n            'FIELD:header:=:Headline',\n        ],\n    ],\n```\n\n----------------------------------------\n\nTITLE: Configuring defaultLanguageDifferences Wizard for Password Fields in TYPO3 TCA\nDESCRIPTION: Path configuration for the defaultLanguageDifferences wizard which handles differences between default and translated languages for password fields in TYPO3.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n```\n\n----------------------------------------\n\nTITLE: Configuring disabled property in addRecord field control in TCA\nDESCRIPTION: This configuration disables or enables the addRecord field control. Setting it to false enables the Create New button.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/MultipleSideBySide/_Properties/_FieldControl/_AddRecord.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']['addRecord']\"\n```\n\n----------------------------------------\n\nTITLE: Overriding Extended Group Field Default Entry Point in Typoscript\nDESCRIPTION: This Typoscript snippet shows how to override the default entry point for the extended group field specified in the PHP configuration. It sets the '_default' key to a different page ID.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_ElementBrowserEntryPoints.rst.txt#2025-04-16_snippet_3\n\nLANGUAGE: typoscript\nCODE:\n```\nTCEFORM.my_table.extended_group.config.elementBrowserEntryPoints._default = 122\n```\n\n----------------------------------------\n\nTITLE: Defining Radio Field Wizard's Other Language Content\nDESCRIPTION: Defines the configuration path for handling other language content in the radio field wizard within TYPO3's TCA, detailing that it is also an array type used for multilingual configurations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Radio/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: otherLanguageContent\n        :name: radio-fieldWizard-otherLanguageContent\n        :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n        :type: array\n\n        For details see :confval:`fieldWizard-otherLanguageContent`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Password Field Size in TYPO3 TCA\nDESCRIPTION: Defines the width of a password input field in the TYPO3 backend form interface. The size value is an abstract integer that determines the input field width, with a minimum value of 10 and default of 30. Setting it to 50 will use the full form area width.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_Size.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: Defining Minimum Category Items in TYPO3 TCA Configuration\nDESCRIPTION: Sets the minimum number of child items for a category field in TYPO3's TCA. This configuration prevents the record from being saved if the specified minimum is not met, enforced by JavaScript validation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Category/_Properties/_Minitems.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: TYPO3 Configuration\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['minitems'] = 0;\n```\n\n----------------------------------------\n\nTITLE: TCA Column Rendertype Configuration\nDESCRIPTION: Demonstrates the path structure for defining a column's rendertype in TCA. The rendertype property provides additional rendering options for specific field types like select fields and text areas.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/_Properties/_Config.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['rendertype']\n```\n\n----------------------------------------\n\nTITLE: GroupName Configuration in TYPO3 TCA\nDESCRIPTION: Configuration value definition for groupName property in TCA ctrl section. This property allows grouping of records in the new record wizard and associates tables with specific extensions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_GroupName.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nconfval:: groupName\n    :name: ctrl-groupName\n    :Path: $GLOBALS['TCA'][$table]['ctrl']\n    :type: string\n    :Scope: Special\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Password Value in TYPO3 TCA\nDESCRIPTION: Defines the default configuration property for password fields in TYPO3's Table Configuration Array. This property sets the initial password value when a new record is created. If left empty, no password will be set by default.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/_Properties/_Default.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: default\n    :name: password-default\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['default']\n    :type: string\n    :Scope: Display  / Proc.\n```\n\n----------------------------------------\n\nTITLE: Configuring Read-Only Number Fields in TYPO3 TCA\nDESCRIPTION: Sets the 'readOnly' property for a number field in TYPO3's TCA. When set to true, the field is displayed but cannot be edited by users in the frontend. However, it's important to note that this only affects the display, and the field can still be modified using the DataHandler in the backend.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n..  confval:: readOnly\n    :name: number-readOnly\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n    :type: boolean\n    :Scope: Display\n```\n\n----------------------------------------\n\nTITLE: Documenting hideMoveIcons Configuration\nDESCRIPTION: This snippet documents the hideMoveIcons configuration option in TYPO3, specifying its name, path, type, and scope. It describes the effect of disabling move icons in the selector box for the specified TCA columns.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Group/_Properties/_HideMoveIcons.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: hideMoveIcons\n    :name: group-hideMoveIcons\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: boolean\n    :Scope: Display\n\n    Removes the move icons next to the selector box.\n```\n\n----------------------------------------\n\nTITLE: Increase dbFieldLength for select field in TCA - PHP\nDESCRIPTION: This snippet demonstrates how to increase the `dbFieldLength` for a select field in a TCA configuration file. It sets the `dbFieldLength` option to 512, overriding the default length for the specified field. The field is assumed to be of type `select`.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Tree/_Properties/_DbFieldLength.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nreturn [\n    'ctrl' => [\n        'label' => 'title',\n        'tstamp' => 'tstamp',\n        'crdate' => 'crdate',\n        'cruser_id' => 'cruser_id',\n        'delete' => 'deleted',\n        'title' => 'My Table',\n        'iconfile' => 'EXT:my_extension/Resources/Public/Icons/MyTable.svg',\n    ],\n    'columns' => [\n        'title' => [\n            'label' => 'Title',\n            'config' => [\n                'type' => 'input',\n                'size' => 30,\n                'eval' => 'trim,required'\n            ],\n        ],\n        'select_field' => [\n            'label' => 'Select Field',\n            'config' => [\n                'type' => 'select',\n                'renderType' => 'selectSingle',\n                'items' => [\n                    ['Option 1', 1],\n                    ['Option 2', 2],\n                    ['Option 3', 3],\n                ],\n                'dbFieldLength' => 512, // Increase the dbFieldLength\n            ],\n        ],\n    ],\n    'types' => [\n        '1' => [\n            'showitem' => 'title, select_field',\n        ],\n    ],\n];\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Field with Row Count in TYPO3 TCA\nDESCRIPTION: Example of configuring a simple text editor field in TYPO3's TCA with a specified width of 20. The 'rows' parameter controls the height of the textarea in the form, while 'cols' controls the width.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/TextTable/_Properties/_Rows.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'myfield' => [\n    'label' => 'Simple editor',\n    'config' => [\n        'type' => 'text',\n        'rows' => 5,\n        'cols' => 20,\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: TCA Column Basic Path Structure\nDESCRIPTION: Demonstrates the basic path structure for TCA column configuration in TYPO3. Shows the global array path for accessing column configurations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/_Properties/_Config.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: Defining Placeholder Configuration for TYPO3\nDESCRIPTION: This snippet documents a configuration value in TYPO3 for a placeholder that stores a hexadecimal color representation. It details the name, path, type, and scope of the configuration value.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Color/_Properties/_Placeholder.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n..  confval:: placeholder\n    :name: color-placeholder\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['placeholder']\n    :type: string, hexadecimal color representation\n    :Scope: Display\n\n    Placeholder, containing a hexadecimal color representation.\n```\n\n----------------------------------------\n\nTITLE: Referencing Field Control Configuration in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates how to reference the 'fieldControl' configuration option in TYPO3's TCA documentation using reStructuredText directives. It points to a more detailed explanation of the 'fieldControl' option.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_FieldControl.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: fieldControl\n    :name: text-fieldControl\n\n    For details see :confval:`fieldControl`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Field in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a text field named 'text_2' with language mode prefix and specific column width. The configuration includes localization settings and basic text field properties.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/TranslatedText2.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'text_2' => [\n            'l10n_mode' => 'prefixLangTitle',\n            'label' => 'text_2',\n            'description' => 'cols=20',\n            'config' => [\n                'type' => 'text',\n                'cols' => 20,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Deprecated Backend Configuration Directives\nDESCRIPTION: Version-specific documentation notes about configuration changes and migration paths for backend list view settings. References use of TSconfig for future TYPO3 versions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Interface/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  versionchanged::\n    Remove with TYPO3 14.0. Use TSconfig\n    `mod.web_list.itemsLimitSingleTable <https://docs.typo3.org/permalink/t3tsref:pagetsconfigweblist-itemslimitsingletable>`_\n    and `listOnlyInSingleTableView <https://docs.typo3.org/permalink/t3tsref:pagetsconfigweblist-listonlyinsingletableview>`_\n    instead.\n```\n\n----------------------------------------\n\nTITLE: Defining fieldControl Configuration Reference in RST Documentation\nDESCRIPTION: A restructured text (RST) directive that documents the fieldControl configuration value for text fields using T3Editor in TYPO3 CMS. It establishes a named reference and points to the main fieldControl documentation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/T3Editor/_Properties/_FieldControl.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: fieldControl\n    :name: text-t3editor-fieldControl\n\n    For details see :confval:`fieldControl`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Extension Data in TYPO3 TCA\nDESCRIPTION: This example demonstrates the recommended way to store extension-specific configuration data in the TCA ctrl section. The pattern uses the extension key as an array key to avoid conflicts with other extensions.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_Ext.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n['ctrl']['EXT']['myext'] = ... (whatever you define)\n```\n\n----------------------------------------\n\nTITLE: Defining foreign_table_item_group in TYPO3 TCA\nDESCRIPTION: This snippet defines the configuration for the foreign_table_item_group property in TYPO3's TCA. It specifies that the property references a specific field within a foreign table, providing a way to reference item groups. The configuration is essential for setting up relational field types in TYPO3 forms.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_ForeignTableItemGroup.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: foreign_table_item_group\n    :name: select-tree-foreign-table-item-group\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: string (column name)\n    :Scope: Proc. / Display\n    :RenderType: all\n\n    ..  versionadded:: 13.0\n\n    This property references a specific field in the\n    :ref:`foreign table <columns-select-properties-foreign-table>`, which\n    holds an :ref:`item group <columns-select-properties-item-groups>`\n    identifier.\n\n    See also :confval:`select-foreign-table-item-group`.\n```\n\n----------------------------------------\n\nTITLE: Referencing Field Information in TYPO3 TCA\nDESCRIPTION: Provides a cross-reference to the field information configuration details within TYPO3 Content Type configuration\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/BeLayoutWizard/_Properties/_FieldInformation.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: fieldInformation\n    :name: text-belayout-fieldInformation\n\n    For details see :confval:`fieldInformation`.\n```\n\n----------------------------------------\n\nTITLE: Defining TCA Placeholder for Datetime Field in PHP\nDESCRIPTION: This PHP code snippet demonstrates how to define the 'placeholder' property within the TCA configuration for a datetime field. The placeholder provides a default date to display in the input field. Note that dynamic values are not supported due to TCA caching.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Datetime/_Properties/_Placeholder.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse TYPO3\\CMS\\Core\\Utility\\GeneralUtility;\nuse TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration;\n\nreturn [\n    'ctrl' => [\n        'label' => 'title',\n    ],\n    'columns' => [\n        'datetime_field' => [\n            'config' => [\n                'type' => 'input',\n                'renderType' => 'inputDateTime',\n                'eval' => 'datetime',\n                'placeholder' => strtotime('2024-01-01'),\n            ],\n        ],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Disabling PrefixLangTitle for Header Field\nDESCRIPTION: Shows how to override the default prefixLangTitle behavior for the header field in tt_content table.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Columns/Examples.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['tt_content']['columns']['header']['l10n_mode'] = ''\n```\n\n----------------------------------------\n\nTITLE: Implementing a SelectItemSorter Class for TYPO3 FormEngine\nDESCRIPTION: This class provides a custom sorting function for select field items in TYPO3 CMS. It includes a method to sort items by their reversed titles using strcasecmp() on the reversed string values. The class is marked as @internal and is part of the TYPO3 Styleguide extension.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/SelectItemSorter.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\ndeclare(strict_types=1);\n\n/*\n * This file is part of the TYPO3 CMS project.\n *\n * It is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License, either version 2\n * of the License, or any later version.\n *\n * For the full copyright and license information, please read the\n * LICENSE.txt file that was distributed with this source code.\n *\n * The TYPO3 project - inspiring people to share!\n */\n\nnamespace TYPO3\\CMS\\Styleguide\\UserFunctions\\FormEngine;\n\n/**\n * A user function to sort ites\n *\n * @internal\n */\nfinal class SelectItemSorter\n{\n    /**\n     * Sort items by their reverse titles\n     *\n     * @param array $items\n     */\n    public function sortReverseTitles(&$items): void\n    {\n        @usort(\n            $items,\n            function ($item1, $item2) {\n                return strcasecmp(strrev((string)$item1[0]), strrev((string)$item2[0]));\n            }\n        );\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Placeholder Mode Keyword Configuration\nDESCRIPTION: Demonstrates the 'useOrOverridePlaceholder' keyword usage, which enables a checkbox to control field editability and placeholder behavior.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Email/_Properties/_Mode.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\nPossible keywords: :code:`useOrOverridePlaceholder`\n```\n\n----------------------------------------\n\nTITLE: Setting Required Property in TYPO3 TCA Configuration\nDESCRIPTION: Configuration path in the TYPO3 TCA that defines whether a number field is required. When set to true, the field must contain a non-empty value for the form to be saved.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_Required.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Column Checkbox Element in TYPO3 Flexform\nDESCRIPTION: This code defines a checkbox field with 4 options arranged in 3 columns within a TYPO3 Flexform. Each checkbox item has a label (foo1-foo4) and is configured as part of a structured array with numIndex elements.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Manual/FlexformCheckbox2.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<checkbox_2>\n   <label>checkbox_2 cols=3</label>\n   <config>\n       <type>check</type>\n       <items type=\"array\">\n           <numIndex index=\"0\" type=\"array\">\n               <label>foo1</label>\n               <value></value>\n           </numIndex>\n           <numIndex index=\"1\" type=\"array\">\n               <label>foo2</label>\n               <value></value>\n           </numIndex>\n           <numIndex index=\"2\" type=\"array\">\n               <label>foo3</label>\n               <value></value>\n           </numIndex>\n           <numIndex index=\"3\" type=\"array\">\n               <label>foo4</label>\n               <value></value>\n           </numIndex>\n       </items>\n       <cols>3</cols>\n   </config>\n</checkbox_2>\n```\n\n----------------------------------------\n\nTITLE: Configuring Inline Checkbox Field with Multiple Items in TYPO3 TCA\nDESCRIPTION: This PHP snippet defines a checkbox field with multiple day-of-week options displayed inline. It sets a default value of 2 (selecting the second checkbox), specifies day abbreviations as labels, and uses 'cols=inline' to arrange the checkboxes horizontally.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Manual/CheckboxDefault.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n'columns' => [\n    'checkbox_16' => [\n        'exclude' => 1,\n        'label' => 'checkbox_16',\n        'description' => 'cols=inline',\n        'config' => [\n            'type' => 'check',\n            'default' => 2,\n            'items' => [\n                ['label' => 'Mo'],\n                ['label' => 'Tu'],\n                ['label' => 'We'],\n                ['label' => 'Th'],\n                ['label' => 'Fr'],\n                ['label' => 'Sa'],\n                ['label' => 'Su'],\n            ],\n            'cols' => 'inline',\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Allow Language Synchronization Configuration in PHP\nDESCRIPTION: This snippet configures the behaviour property `allowLanguageSynchronization` for inline records in TYPO3. It enables editors to decide whether localized records should sync values with the source language record or maintain their own values. The configuration is stored in the TCA under the specified path and has a boolean type. The property is supported in conjunction with localization features.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_Behaviour.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['behaviour']['allowLanguageSynchronization'] = [\n    'type' => 'boolean',\n    'default' => false\n];\n?>\n```\n\n----------------------------------------\n\nTITLE: Deprecating the MM hasUidField Setting\nDESCRIPTION: This snippet highlights the deprecation of the 'MM_hasUidField' setting beginning with TYPO3 version 13.0, advising developers to remove it from TCA configurations as uid fields are managed automatically.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/Single/_Properties/_Mm.rst.txt#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n\"MM_hasUidField\" => [\"name\" => \"select-single-mm-hasUidField\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring readOnly Property in TYPO3 TCA\nDESCRIPTION: Demonstrates how to set the readOnly property in TCA configuration for a link field. This property makes the field display-only in the TYPO3 backend interface, though it remains writable through the DataHandler.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_ReadOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['readOnly']\n```\n\n----------------------------------------\n\nTITLE: Configuring dontRemapTablesOnCopy in TYPO3 TCA\nDESCRIPTION: Specifies a list of tables that should not be remapped when elements are copied in a TYPO3 session. This configuration prevents automatic UID remapping for specific tables during copy operations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/CheckBox/_Properties/_DontRemapTablesOnCopy.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['dontRemapTablesOnCopy']\n```\n\n----------------------------------------\n\nTITLE: Enabling UUID Copy to Clipboard Functionality in TYPO3 TCA Configuration\nDESCRIPTION: Sets the enableCopyToClipboard property for UUID fields in TYPO3's TCA. When set to true (default), a button is rendered next to the UUID input field that allows copying the value to the system clipboard. This configuration can be overridden using page TSconfig.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Uuid/_Properties/_EnableCopyToClipboard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nenableCopyToClipboard\n```\n\nLANGUAGE: php\nCODE:\n```\ntrue\n```\n\n----------------------------------------\n\nTITLE: Configuring Placeholder Text in TYPO3 TCA\nDESCRIPTION: Example of setting a placeholder value for an input field in TYPO3's Table Configuration Array (TCA). This snippet demonstrates how to add a placeholder text that appears when the field is empty.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Input/_Properties/_Placeholder.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['some-table']['columns']['some_field']['config']['placeholder'] = 'Enter value here';\n```\n\n----------------------------------------\n\nTITLE: Including External PHP File for Allow Language Synchronization (PHP)\nDESCRIPTION: This snippet includes an external PHP file that defines additional configuration for handling 'allowLanguageSynchronization'. It is an essential part of enhancing the TCA functionality for specific tables within TYPO3. The file being included is part of an extension, which allows customization and extensibility of TYPO3's core behavior.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Folder/_Properties/_AllowLanguageSynchronization.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n..  literalinclude:: _Properties/_AllowLanguageSynchronization.php\n    :caption: EXT:my_extension/Configuration/TCA/Overrides/someTable.php\n```\n\n----------------------------------------\n\nTITLE: Configuring allowLanguageSynchronization in TCA\nDESCRIPTION: This snippet demonstrates how to enable the `allowLanguageSynchronization` setting within the TCA configuration for a specific column. This setting allows editors to choose whether a localized record should inherit the value from the default or source language record, or have its own unique value. The configuration is located within a TCA override file.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_Behaviour.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n/**\n * Example configuration for allowLanguageSynchronization\n */\n$GLOBALS['TCA']['some_table']['columns']['some_field']['config']['behaviour']['allowLanguageSynchronization'] = true;\n\n\n```\n\n----------------------------------------\n\nTITLE: Defining Default Link Value in TYPO3 TCA\nDESCRIPTION: This snippet shows the configuration for setting a default value for link fields in TYPO3's Table Configuration Array (TCA). It is used when creating new records and applies to both display and processing scopes.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Link/_Properties/_Default.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: default\n    :name: link-default\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['default']\n    :type: string\n    :Scope: Display  / Proc.\n\n    Default value set if a new record is created.\n```\n\n----------------------------------------\n\nTITLE: Defining Palette Label in TCA\nDESCRIPTION: This example shows how to define a label for a palette directly within the 'palettes' array in TYPO3 TCA. This reduces boilerplate when a palette is used multiple times, and the label is always displayed.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Palettes/Index.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n\"   'types' => [\n      'myType' => [\n         'showitem' => 'aField, --palette--;;aPalette, someOtherField',\n      ],\n   ],\n   'palettes' => [\n      'aPalette' => [\n         'label' => 'LLL:EXT:myExt/Resources/Private/Language/locallang.xlf:aPaletteDescription',\n         'showitem' => 'aFieldInAPalette, anotherFieldInPalette',\n      ],\n   ],\"\n```\n\n----------------------------------------\n\nTITLE: Configuring defaultLanguageDifferences Field Wizard in TYPO3 TCA Number Fields\nDESCRIPTION: Path configuration for the defaultLanguageDifferences field wizard in TCA for number fields. This wizard shows differences between default and translated language values.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['defaultLanguageDifferences']\n```\n\n----------------------------------------\n\nTITLE: Converting XML to Array in TYPO3 FlexForms\nDESCRIPTION: The content from the FlexForm is stored in the associated database field as an XML structure, which is handled using the `\\TYPO3\\CMS\\Core\\Utility\\GeneralUtility::xml2array()` function. This function is essential for converting the XML data back into a PHP array for further processing and use within TYPO3.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Flex/FlexformSyntax.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\"\\TYPO3\\CMS\\Core\\Utility\\GeneralUtility::xml2array()\"\n```\n\n----------------------------------------\n\nTITLE: Defining Text Code Editor Rows in TYPO3 TCA\nDESCRIPTION: Specifies the 'rows' configuration option for text code editor fields in TYPO3's TCA. This integer value sets the initial number of rows in the textarea, with a default of 5 and a maximum of 20. The actual number of rows may be adjusted automatically based on content length and for browser harmonization.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/T3Editor/_Properties/_Rows.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: rows\n    :name: text-codeEditor-rows\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: integer\n    :Scope: Display\n\n    The number of rows in the textarea. May be corrected for harmonization\n    between browsers. Will also automatically be increased if the content in\n    the field is found to be of a certain length, thus the\n    field will automatically fit the content. Default is 5. Max value is 20.\n```\n\n----------------------------------------\n\nTITLE: Configuring Soft References in TYPO3 TCA\nDESCRIPTION: Configuration path for defining soft reference parsers in TYPO3's TCA. The softref parameter accepts a comma-separated list of keys with optional parameters in square brackets. This is used to implement various types of reference handling for input fields.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_Softref.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['softref']\n```\n\n----------------------------------------\n\nTITLE: TCA Slug Field eval Example\nDESCRIPTION: This example demonstrates how to configure the 'eval' property of a TCA field to ensure the slug is unique within the current site. The `uniqueInSite` keyword enforces uniqueness across the site and language, allowing for identical slugs on different sites but preventing access to records from other sites.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Slug/_Properties/_Eval.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\"eval\" => 'uniqueInSite' \n```\n\n----------------------------------------\n\nTITLE: Creating SQL Table for TYPO3 Styleguide Elements\nDESCRIPTION: This SQL snippet creates a table named 'tx_styleguide_elements_select' with a single column 'select_checkbox_3' of type text. It's likely used in the context of TYPO3's Table Configuration Array (TCA) for demonstration or testing purposes.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Manual/SqlSelectCheckbox3.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE tx_styleguide_elements_select (\n   select_checkbox_3 text,\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring fieldInformation in TCA for TYPO3 CMS\nDESCRIPTION: This snippet demonstrates how to configure the 'fieldInformation' property in the TCA for a 'tags' field. It sets up a custom render type 'NewsStaticText' with specific options.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldInformation.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n'tags' => [\n    'config' => [\n        // ...\n        'fieldInformation' => [\n            'tagInformation' => [\n                'renderType' => 'NewsStaticText',\n                'options' => [\n                    'labels' => [\n                        [\n                            'label' => '',\n                            'bold' => true,\n                            'italic' => true,\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ]\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Nullable RTE Field in TYPO3 TCA\nDESCRIPTION: Defines a TCA configuration for a rich text editor field named 'rte_3' with nullable property set to true. The configuration enables rich text editing functionality while allowing null values in the database.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/CodeSnippets/Rte3.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n[\n    'columns' => [\n        'rte_3' => [\n            'label' => 'rte_3 nullable=true',\n            'config' => [\n                'type' => 'text',\n                'nullable' => true,\n                'enableRichtext' => true,\n            ],\n        ],\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Setting Required Field in TYPO3 TCA Configuration (PHP)\nDESCRIPTION: This snippet demonstrates how to configure a field as required in TYPO3's Table Configuration Array (TCA). When set to true, it enforces that the field must have a non-empty value for the form to be saved.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_Required.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['required'] = true;\n```\n\n----------------------------------------\n\nTITLE: Defining UUID Field Size in TYPO3 TCA\nDESCRIPTION: Sets the width of the input field for UUID columns in the TYPO3 backend. The size is an abstract value, with 50 representing full width. The minimum value is 10, and the default is 30. This configuration can be overridden by page TSconfig.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Uuid/_Properties/_Size.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: size\n    :name: uuid-size\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n    :type: integer\n    :Scope: Display\n```\n\n----------------------------------------\n\nTITLE: Referencing RTE Presets in TYPO3 Configuration\nDESCRIPTION: This code demonstrates how to access the RTE presets configuration in TYPO3. The 'richtextConfiguration' value corresponds to a key in this global array, which points to YAML configuration files for the rich text editor.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Text/Default/_Properties/_RichtextConfiguration.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TYPO3_CONF_VARS']['RTE']['Presets']\n```\n\n----------------------------------------\n\nTITLE: Radio Button Set Definition in TCA\nDESCRIPTION: This snippet shows how to define a set of radio buttons in the TCA configuration for a TYPO3 extension. It uses the 'radio' type to render a set of options for the user to choose from, and TYPO3 manages the database field automatically.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Radio/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: TYPO3 TCA\nCODE:\n```\n\n..  include:: /CodeSnippets/Radio1.rst.txt\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Element Browser for Folder in TYPO3 TCA\nDESCRIPTION: This snippet demonstrates the configuration of an element browser field control for a folder type in TYPO3 TCA. It specifies the array path, types, and scope needed to render a button for choosing a folder. The element browser is enabled by default when rendering folder elements.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Folder/_Properties/_FieldControl.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']\n```\n\n----------------------------------------\n\nTITLE: TYPO3 Versioning Schema Structure\nDESCRIPTION: Demonstrates the basic relationship between online and offline versions in TYPO3's versioning system. Shows how online versions with pid>=0 can have multiple offline versions with pid==1.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_VersioningWS.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: none\nCODE:\n```\n[Online version, pid>=0] 1- * [Offline versions, pid==1]\n```\n\n----------------------------------------\n\nTITLE: Defining fieldControl for select-singlebox in TYPO3 TCA\nDESCRIPTION: This snippet defines the field control for a select-singlebox field within the TYPO3 TCA setup. It contains information regarding its type and usage in the context of the TCA configuration array, specifically focusing on the resetSelection option which allows users to revert their selection to its default state. The expected input is a configuration array, and it outputs a functional field control in the backend interface.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_FieldControl.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..  confval:: fieldControl\n    :name: select-singlebox-fieldControl\n\n    ..  confval:: resetSelection\n        :name: select-singlebox-fieldControl-resetSelection\n        :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']\n        :type: array\n        :Scope: fieldControl\n        :Types: :aspect:`Description`\n\n        Render a button next to the select box to reset a changed selection to\n        the state before it was manipulated by the user.\n```\n\n----------------------------------------\n\nTITLE: Updating Reference Index in TYPO3 CLI\nDESCRIPTION: CLI command to clean up existing reference index after implementing the language field type. This reduces entries in the sys_refindex table by removing unnecessary language relations.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Language/History.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nbin/typo3 referenceindex:update\n```\n\n----------------------------------------\n\nTITLE: Referencing TCA Number Field Size Configuration in TYPO3\nDESCRIPTION: Code snippet showing how to reference the size property in TCA configuration for number fields. The size property defines the width of the input field with a default of 30, minimum of 10, and a value of 50 for full width.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_Size.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: RST\nCODE:\n```\n:code:`<input>`\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom FieldInformation Class in TYPO3 CMS\nDESCRIPTION: This snippet shows the implementation of a custom FieldInformation class named 'StaticText'. It extends AbstractNode and defines a render method that returns an array with required JavaScript modules and HTML content.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldInformation.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\ndeclare(strict_types=1);\n\nnamespace GeorgRinger\\News\\Backend\\FieldInformation;\n\nuse TYPO3\\CMS\\Backend\\Form\\AbstractNode;\n\nclass StaticText extends AbstractNode\n{\n    public function render(): array\n    {\n        // ...\n\n        return [\n            'requireJsModules' => [\n                'TYPO3/CMS/News/TagSuggestWizard',\n            ],\n            'html' => '...>',\n        ];\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Including an image in reStructuredText\nDESCRIPTION: This snippet demonstrates how to include an image within reStructuredText documentation. It defines the image's path relative to the project and applies the 'with-shadow' CSS class to the image for styling purposes.  This example is likely used to show how to insert screenshots or other visual aids in TYPO3 documentation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/SelectTree6.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/SelectTree6.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: Embedding Image with Shadow in TYPO3 Documentation\nDESCRIPTION: This snippet demonstrates how to embed an image with a shadow effect in TYPO3 documentation using reStructuredText syntax. It uses the ``figure`` directive to include the image and the ``:class:`` option to apply a CSS class (``with-shadow``) for styling.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/SelectSingle17.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n\n.. figure:: /Images/AutomaticScreenshots/SelectSingle17.png\n   :class: with-shadow\n\n```\n\n----------------------------------------\n\nTITLE: Setting Up Backend Password Policy in TYPO3 TCA\nDESCRIPTION: Demonstrates the configuration of backend password policy in TCA by utilizing the globally defined backend password policy configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/PasswordPolicies.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'password' => [\n    'label' => 'Password field',\n    'config' => [\n        'type' => 'password',\n        'passwordPolicy' => 'backend',\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Disabling a Built-in Wizard in TCA Configuration\nDESCRIPTION: This code snippet demonstrates how to disable the default localizationStateSelector fieldWizard of the inlineControlContainer in TYPO3 TCA configuration.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/Examples.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$GLOBALS['TCA']['tt_content']['columns']['bodytext']['config']['fieldWizard']['localizationStateSelector']['disabled'] = true;\n```\n\n----------------------------------------\n\nTITLE: Inserting Figure Reference in reStructuredText\nDESCRIPTION: ReStructuredText markup for inserting a figure with image path and CSS class specification. Uses relative path to reference an automatic screenshot image with shadow styling.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/GroupFolder1.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/GroupFolder1.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: RST Image Inclusion Directive\nDESCRIPTION: ReStructuredText directive for including an automatic screenshot of the image manipulation button with shadow styling\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/ImageManipulationButton.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/ImageManipulationButton.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: TCA Field Type Property\nDESCRIPTION: Reference showing where the field type is defined within the TCA configuration structure.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Index.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n['config']['type']\n```\n\n----------------------------------------\n\nTITLE: Adding Screenshot Figure in reStructuredText\nDESCRIPTION: reStructuredText directive for including a screenshot image with shadow styling. The image shows inline symmetric branches functionality from the TYPO3 CMS TCA.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/InlineMnSymmetricBranches.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/InlineMnSymmetricBranches.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: Installing TYPO3 Examples Extension via Composer\nDESCRIPTION: Command to install the TYPO3 examples extension as a development dependency using Composer package manager.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Examples/About.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ncomposer require --dev t3docs/examples\n```\n\n----------------------------------------\n\nTITLE: Referencing Check Field Example\nDESCRIPTION: Reference link to a checkbox configuration example in the documentation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_Validation.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: restructuredtext\nCODE:\n```\n:Example: :ref:`tca_example_checkbox_8`\n```\n\n----------------------------------------\n\nTITLE: Including an Image with reStructuredText in TYPO3 TCA Documentation\nDESCRIPTION: This reStructuredText snippet includes an image named \"Slug2.png\" from the \"/Images/AutomaticScreenshots/\" directory and applies the \"with-shadow\" CSS class to it.  This is used within TYPO3 documentation to provide visual aids, specifically using automatically generated screenshots.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Images/Rst/Slug2.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. figure:: /Images/AutomaticScreenshots/Slug2.png\n   :class: with-shadow\n```\n\n----------------------------------------\n\nTITLE: RST Configuration Include Statement\nDESCRIPTION: Include directive for common RST includes file\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/CommonProperties/FieldWizard/DefaultLanguageDifferences.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  include:: /Includes.rst.txt\n```\n\n----------------------------------------\n\nTITLE: Defining fieldControl Configuration in TYPO3 TCA\nDESCRIPTION: This RST directive defines the 'fieldControl' configuration option within the TCA structure. It specifies the type, name, and path for the option, and refers to a more detailed explanation elsewhere in the documentation.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Json/_Properties/_FieldControl.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n..  confval:: fieldControl\n    :type: string\n    :name: json-fieldControl\n    :Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldControl']\n\n    See :confval:`fieldControl` for details.\n```\n\n----------------------------------------\n\nTITLE: Referencing the overrideChildTca Property Path in TYPO3 TCA\nDESCRIPTION: Shows the configuration path for the overrideChildTca property in TYPO3's TCA. This property allows overriding display-related aspects of child records when they are displayed inline within a parent record.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Inline/_Properties/_OverrideChildTCa.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: Defining TCA Check Field Validation Path\nDESCRIPTION: Demonstrates the configuration path for TCA check field validation settings in TYPO3. Shows where validation rules should be defined in the TCA array structure.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Check/_Properties/_Validation.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n:Path: $GLOBALS['TCA'][$table]['columns'][$field]['config']\n```\n\n----------------------------------------\n\nTITLE: Setting adminOnly Flag in TYPO3 TCA Configuration\nDESCRIPTION: This code snippet demonstrates how to set the 'adminOnly' flag in the 'ctrl' section of a TYPO3 TCA configuration. When set to 1, it restricts editing of the table records to admin users only.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Ctrl/_Properties/_AdminOnly.rst.txt#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n'ctrl' => [\n    'adminOnly' => 1,\n    ...\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring TCA Showitem with Two Tabs in PHP\nDESCRIPTION: This code snippet shows how to configure TCA to organize fields into two tabs. The first tab displays 'hidden', 'title', and 'poem', while the second tab, labeled with a localized name, contains 'image1' and 'image2'. The tab label is determined through localization strings defined in \"EXT:examples/locallang_db.xml:tx_examples_haiku.images\".\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Types/_Examples/_10_ShowItem.rst.txt#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'types' => [\n    '0' => [\n        'showitem' => '\n            hidden, title, poem,\n            --div--;LLL:EXT:examples/locallang_db.xml:tx_examples_haiku.images, image1, image2,\n        '\n    ],\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring otherLanguageContent Field Wizard in TYPO3 TCA Number Fields\nDESCRIPTION: Path configuration for the otherLanguageContent field wizard in TCA for number fields. This wizard displays content from other language versions for reference.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Number/_Properties/_FieldWizard.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$GLOBALS['TCA'][$table]['columns'][$field]['config']['fieldWizard']['otherLanguageContent']\n```\n\n----------------------------------------\n\nTITLE: Including RST Documentation Structure\nDESCRIPTION: Sets up the basic RST documentation structure with include directive and toctree configuration for organizing example documentation pages. The toctree is configured to glob all files in the directory and show only titles.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/Examples/Index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. include:: /Includes.rst.txt\n\n========\nExamples\n========\n\n.. toctree::\n   :glob:\n   :titlesonly:\n\n   *\n```\n\n----------------------------------------\n\nTITLE: Using authMode='individual'\nDESCRIPTION: This snippet describes the removal of the 'individual' option for the 'authMode' property.  Extensions relying on this setting must find alternative solutions using Core hooks, events, or other APIs.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Select/SingleBox/_Properties/_AuthMode.rst.txt#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n\":php:`authMode`\"\n```\n\nLANGUAGE: php\nCODE:\n```\n\":php:`individual`\"\n```\n\n----------------------------------------\n\nTITLE: Password Generator Configuration - Base64 Readonly\nDESCRIPTION: Configuration for generating base64-encoded random passwords in readonly mode.\nSOURCE: https://github.com/TYPO3-Documentation/TYPO3CMS-Reference-TCA/blob/main/Documentation/ColumnsConfig/Type/Password/PasswordGenerator.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n'config' => [\n    'type' => 'password',\n    'fieldControl' => [\n        'passwordGenerator' => [\n            'options' => [\n                'allowEdit' => false,\n                'passwordRules' => [\n                    'length' => 32,\n                    'random' => 'base64'\n                ]\n            ]\n        ]\n    ]\n]\n```"
  }
]
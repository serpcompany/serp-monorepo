[
  {
    "owner": "bcit-ci",
    "repo": "codeigniter",
    "content": "TITLE: Using Test Mode for Transactions in CodeIgniter PHP\nDESCRIPTION: Shows how to enable test mode for transactions, which causes all queries to be rolled back regardless of their success. This is useful for testing transaction behavior without affecting the database.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$this->db->trans_start(TRUE); // Query will be rolled back\n$this->db->query('AN SQL QUERY...');\n$this->db->trans_complete();\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Controller in CodeIgniter\nDESCRIPTION: A simple 'Hello World' controller that extends the CI_Controller class. This demonstrates the minimal code required to create a functional controller in CodeIgniter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nclass Blog extends CI_Controller {\n\n\tpublic function index()\n\t{\n\t\techo 'Hello World!';\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing a Blog Model Class in CodeIgniter PHP\nDESCRIPTION: This snippet demonstrates a basic Blog model class in CodeIgniter that interacts with a database. It includes methods for retrieving the last ten entries, inserting new entries, and updating existing entries using CodeIgniter's Query Builder.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/models.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nclass Blog_model extends CI_Model {\n\n\tpublic $title;\n\tpublic $content;\n\tpublic $date;\n\n\tpublic function get_last_ten_entries()\n\t{\n\t\t$query = $this->db->get('entries', 10);\n\t\treturn $query->result();\n\t}\n\n\tpublic function insert_entry()\n\t{\n\t\t$this->title\t= $_POST['title']; // please read the below note\n\t\t$this->content\t= $_POST['content'];\n\t\t$this->date\t= time();\n\n\t\t$this->db->insert('entries', $this);\n\t}\n\n\tpublic function update_entry()\n\t{\n\t\t$this->title\t= $_POST['title'];\n\t\t$this->content\t= $_POST['content'];\n\t\t$this->date\t= time();\n\n\t\t$this->db->update('entries', $this, array('id' => $_POST['id']));\n\t}\n\n}\n```\n\n----------------------------------------\n\nTITLE: Database Connection Methods in PHP CodeIgniter\nDESCRIPTION: Core database connection methods including initialize(), db_connect(), db_pconnect(), and reconnect(). These methods handle establishing and maintaining database connections.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/db_driver_reference.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\ninitialize()\ndb_connect($persistent = TRUE)\ndb_pconnect()\nreconnect()\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Validation Callback in CodeIgniter Controller\nDESCRIPTION: Complete controller example demonstrating how to create and use a custom validation callback method. The username_check method validates that the username is not 'test' and provides a custom error message.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nclass Form extends CI_Controller {\n\n\tpublic function index()\n\t{\n\t\t$this->load->helper(array('form', 'url'));\n\n\t\t$this->load->library('form_validation');\n\n\t\t$this->form_validation->set_rules('username', 'Username', 'callback_username_check');\n\t\t$this->form_validation->set_rules('password', 'Password', 'required');\n\t\t$this->form_validation->set_rules('passconf', 'Password Confirmation', 'required');\n\t\t$this->form_validation->set_rules('email', 'Email', 'required|is_unique[users.email]');\n\n\t\tif ($this->form_validation->run() == FALSE)\n\t\t{\n\t\t\t$this->load->view('myform');\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$this->load->view('formsuccess');\n\t\t}\n\t}\n\n\tpublic function username_check($str)\n\t{\n\t\tif ($str == 'test')\n\t\t{\n\t\t\t$this->form_validation->set_message('username_check', 'The {field} field can not be the word \"test\"');\n\t\t\treturn FALSE;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn TRUE;\n\t\t}\n\t}\n\n}\n```\n\n----------------------------------------\n\nTITLE: Resetting Query Builder in CodeIgniter PHP\nDESCRIPTION: This example demonstrates how to reset the Query Builder in CodeIgniter without executing the query. It shows generating SQL using get_compiled_select() and then resetting the query before execution.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_22\n\nLANGUAGE: php\nCODE:\n```\n// Note that the second parameter of the get_compiled_select method is FALSE\n$sql = $this->db->select(array('field1','field2'))\n                ->where('field3',5)\n                ->get_compiled_select('mytable', FALSE);\n\n// ...\n// Do something crazy with the SQL code... like add it to a cron script for\n// later execution or something...\n// ...\n\n$data = $this->db->get()->result_array();\n\n// Would execute and return an array of results of the following query:\n// SELECT field1, field1 from mytable where field3 = 5;\n```\n\n----------------------------------------\n\nTITLE: Loading Database Library in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to manually load the database library in CodeIgniter. It can be used in any function where database connectivity is needed or in a class constructor for global availability.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->database();\n```\n\n----------------------------------------\n\nTITLE: Inserting Data into a Table - PHP\nDESCRIPTION: Compiles and executes an INSERT statement to add data to a specified table. It returns TRUE on success or FALSE on failure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_37\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: insert([$table = ''[, $set = NULL[, $escape = NULL]]])\n\n\t\t:param string $table: Table name to insert into\n\t\t:param array $set: Associative array of field/value pairs\n\t\t:param bool $escape: Whether to escape values\n\t\t:returns: TRUE on success, FALSE on failure\n\t\t:rtype: bool\n\n\t\tCompiles and executes an INSERT statement.\n```\n\n----------------------------------------\n\nTITLE: Basic Encryption and Decryption in PHP\nDESCRIPTION: Demonstrates basic usage of the Encryption library to encrypt and decrypt a plain text message using the configured settings.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$plain_text = 'This is a plain-text message!';\n$ciphertext = $this->encryption->encrypt($plain_text);\n\n// Outputs: This is a plain-text message!\necho $this->encryption->decrypt($ciphertext);\n```\n\n----------------------------------------\n\nTITLE: LIKE Query Operations in CodeIgniter\nDESCRIPTION: Demonstrates various ways to use the LIKE clause in queries, including simple key/value method and associative array method. Shows different wildcard placements and OR/NOT variations.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$this->db->like('title', 'match');\n// Produces: WHERE `title` LIKE '%match%' ESCAPE '!'\n\n$array = array('title' => $match, 'page1' => $match, 'page2' => $match);\n$this->db->like($array);\n```\n\n----------------------------------------\n\nTITLE: Using SET Method for Data Operations\nDESCRIPTION: Shows various ways to use the set() method for preparing data for insert/update operations, including handling of escape parameters and array/object inputs.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_17\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->set('name', $name);\n$this->db->insert('mytable');\n\n$this->db->set('field', 'field+1', FALSE);\n$this->db->where('id', 2);\n$this->db->update('mytable');\n```\n\n----------------------------------------\n\nTITLE: URI Character Restrictions in CodeIgniter\nDESCRIPTION: List of allowed characters in CodeIgniter URI strings for security purposes. Includes alphanumeric characters and specific special characters to minimize malicious data injection.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/security.rst#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAllowed characters:\n- Alpha-numeric text (latin characters only)\n- Tilde: ~\n- Percent sign: %\n- Period: .\n- Colon: :\n- Underscore: _\n- Dash: -\n- Space\n```\n\n----------------------------------------\n\nTITLE: Repopulating HTML Form with Submitted Values in CodeIgniter\nDESCRIPTION: Complete HTML form example showing how to repopulate form fields with submitted data using CodeIgniter's set_value() helper function. This preserves user input when validation errors occur.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<html lang=\"en\">\n<head>\n<title>My Form</title>\n</head>\n<body>\n\n<?php echo validation_errors(); ?>\n\n<?php echo form_open('form'); ?>\n\n<h5>Username</h5>\n<input type=\"text\" name=\"username\" value=\"<?php echo set_value('username'); ?>\" size=\"50\" />\n\n<h5>Password</h5>\n<input type=\"text\" name=\"password\" value=\"<?php echo set_value('password'); ?>\" size=\"50\" />\n\n<h5>Password Confirm</h5>\n<input type=\"text\" name=\"passconf\" value=\"<?php echo set_value('passconf'); ?>\" size=\"50\" />\n\n<h5>Email Address</h5>\n<input type=\"text\" name=\"email\" value=\"<?php echo set_value('email'); ?>\" size=\"50\" />\n\n<div><input type=\"submit\" value=\"Submit\" /></div>\n\n</form>\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Updating Data in a Table - PHP\nDESCRIPTION: Compiles and executes an UPDATE statement to modify existing records in a specified table. Returns TRUE on success or FALSE on failure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_40\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: update([$table = ''[, $set = NULL[, $where = NULL[, $limit = NULL]]]])\n\n\t\t:param string $table: Table name to update\n\t\t:param array $set: Associative array of field/value pairs\n\t\t:param string $where: WHERE clause to specify conditions\n\t\t:param int $limit: Limit the number of rows to update\n\t\t:returns: TRUE on success, FALSE on failure\n\t\t:rtype: bool\n\n\t\tCompiles and executes an UPDATE statement.\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Connection Failovers in CodeIgniter\nDESCRIPTION: This code demonstrates how to set up failover connections that CodeIgniter will try if the main database connection fails. The configuration supports multiple backup servers with complete connection settings for each failover option.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$db['default']['failover'] = array(\n\t\tarray(\n\t\t\t'hostname' => 'localhost1',\n\t\t\t'username' => '',\n\t\t\t'password' => '',\n\t\t\t'database' => '',\n\t\t\t'dbdriver' => 'mysqli',\n\t\t\t'dbprefix' => '',\n\t\t\t'pconnect' => TRUE,\n\t\t\t'db_debug' => TRUE,\n\t\t\t'cache_on' => FALSE,\n\t\t\t'cachedir' => '',\n\t\t\t'char_set' => 'utf8',\n\t\t\t'dbcollat' => 'utf8_general_ci',\n\t\t\t'swap_pre' => '',\n\t\t\t'encrypt' => FALSE,\n\t\t\t'compress' => FALSE,\n\t\t\t'stricton' => FALSE\n\t\t),\n\t\tarray(\n\t\t\t'hostname' => 'localhost2',\n\t\t\t'username' => '',\n\t\t\t'password' => '',\n\t\t\t'database' => '',\n\t\t\t'dbdriver' => 'mysqli',\n\t\t\t'dbprefix' => '',\n\t\t\t'pconnect' => TRUE,\n\t\t\t'db_debug' => TRUE,\n\t\t\t'cache_on' => FALSE,\n\t\t\t'cachedir' => '',\n\t\t\t'char_set' => 'utf8',\n\t\t\t'dbcollat' => 'utf8_general_ci',\n\t\t\t'swap_pre' => '',\n\t\t\t'encrypt' => FALSE,\n\t\t\t'compress' => FALSE,\n\t\t\t'stricton' => FALSE\n\t\t)\n\t);\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Database Connection in CodeIgniter\nDESCRIPTION: This snippet demonstrates the standard database configuration array for CodeIgniter's default connection. It includes all available configuration options such as connection details, database driver settings, character encoding, and performance options.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$db['default'] = array(\n\t'dsn'\t=> '',\n\t'hostname' => 'localhost',\n\t'username' => 'root',\n\t'password' => '',\n\t'database' => 'database_name',\n\t'dbdriver' => 'mysqli',\n\t'dbprefix' => '',\n\t'pconnect' => TRUE,\n\t'db_debug' => TRUE,\n\t'cache_on' => FALSE,\n\t'cachedir' => '',\n\t'char_set' => 'utf8',\n\t'dbcollat' => 'utf8_general_ci',\n\t'swap_pre' => '',\n\t'encrypt' => FALSE,\n\t'compress' => FALSE,\n\t'stricton' => FALSE,\n\t'failover' => array()\n);\n```\n\n----------------------------------------\n\nTITLE: Handling Database Errors in CodeIgniter\nDESCRIPTION: Demonstrates how to check for and retrieve database errors using the error() method, which returns an array with error code and message.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\nif ( ! $this->db->simple_query('SELECT `example_field` FROM `example_table`'))\n{\n\t$error = $this->db->error(); // Has keys 'code' and 'message'\n}\n```\n\n----------------------------------------\n\nTITLE: Database Backup in CodeIgniter\nDESCRIPTION: Demonstrates how to perform a full database backup, save it to a file, and force download using the Database Utility Class and helper functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\n// Load the DB utility class\n$this->load->dbutil();\n\n// Backup your entire database and assign it to a variable\n$backup = $this->dbutil->backup();\n\n// Load the file helper and write the file to your server\n$this->load->helper('file');\nwrite_file('/path/to/mybackup.gz', $backup);\n\n// Load the download helper and send the file to your desktop\n$this->load->helper('download');\nforce_download('mybackup.gz', $backup);\n```\n\n----------------------------------------\n\nTITLE: Executing Standard Query with Object Results in CodeIgniter\nDESCRIPTION: Executes a SQL query and processes the results as objects using a foreach loop. Demonstrates how to access row data as object properties and count the total results.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query('SELECT name, title, email FROM my_table');\n\nforeach ($query->result() as $row)\n{\n\techo $row->title;\n\techo $row->name;\n\techo $row->email;\n}\n\necho 'Total Results: ' . $query->num_rows();\n```\n\n----------------------------------------\n\nTITLE: Initializing the Database Class in CodeIgniter\nDESCRIPTION: Loads and initializes the CodeIgniter database class based on the configuration settings. This makes the database functionality available throughout your application.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->database();\n```\n\n----------------------------------------\n\nTITLE: Database Query Methods in PHP CodeIgniter\nDESCRIPTION: Methods for executing SQL queries including query(), simple_query(), and helper methods for managing transactions and query results.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/db_driver_reference.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nquery($sql[, $binds = FALSE[, $return_object = NULL]])\nsimple_query($sql)\naffected_rows()\ntrans_start([$test_mode = FALSE])\ntrans_complete()\n```\n\n----------------------------------------\n\nTITLE: Enabling CSRF Protection in CodeIgniter Configuration\nDESCRIPTION: Shows how to enable CSRF protection by modifying the application/config/config.php file. Also demonstrates how to use get_csrf_token_name() and get_csrf_hash() methods to manually insert CSRF fields in forms.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$config['csrf_protection'] = TRUE;\n```\n\nLANGUAGE: php\nCODE:\n```\n$csrf = array(\n\t'name' => $this->security->get_csrf_token_name(),\n\t'hash' => $this->security->get_csrf_hash()\n);\n\n...\n\n<input type=\"hidden\" name=\"<?=$csrf['name'];?>\" value=\"<?=$csrf['hash'];?>\" />\n```\n\n----------------------------------------\n\nTITLE: User Model Class Example in CodeIgniter PHP\nDESCRIPTION: This snippet demonstrates how to create a User model class in CodeIgniter. The class name must match the file name, and it must extend the CI_Model base class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/models.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nclass User_model extends CI_Model {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Blog Controller with Model Integration in CodeIgniter PHP\nDESCRIPTION: This snippet shows a complete controller example that loads a blog model, calls a method to retrieve data, and then passes that data to a view. It demonstrates the MVC workflow in CodeIgniter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/models.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\nclass Blog_controller extends CI_Controller {\n\n\tpublic function blog()\n\t{\n\t\t$this->load->model('blog');\n\n\t\t$data['query'] = $this->blog->get_last_ten_entries();\n\n\t\t$this->load->view('blog', $data);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Query Results as Objects in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to use the result() method to retrieve query results as an array of objects. It shows how to iterate over the results and access object properties.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query(\"YOUR QUERY\");\n\nforeach ($query->result() as $row)\n{\n\techo $row->title;\n\techo $row->name;\n\techo $row->body;\n}\n```\n\n----------------------------------------\n\nTITLE: Inserting News Item Data into Database using CodeIgniter Model\nDESCRIPTION: This snippet shows how to insert news item data into the database using a CodeIgniter model. It uses the Query Builder class and input library to process and store the data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/create_news_items.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\npublic function set_news()\n{\n    $this->load->helper('url');\n    \n    $slug = url_title($this->input->post('title'), 'dash', TRUE);\n    \n    $data = array(\n        'title' => $this->input->post('title'),\n        'slug' => $slug,\n        'text' => $this->input->post('text')\n    );\n    \n    return $this->db->insert('news', $data);\n}\n```\n\n----------------------------------------\n\nTITLE: Valid Controller Class Declaration in CodeIgniter\nDESCRIPTION: Shows the correct way to declare a controller class with proper capitalization. Class names must start with an uppercase letter and extend CI_Controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nclass Blog extends CI_Controller {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Email Sending with CodeIgniter\nDESCRIPTION: Demonstrates how to load the email library and send a basic email with to, cc, bcc recipients and subject/message content. Shows core email sending functionality from a controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('email');\n\n$this->email->from('your@example.com', 'Your Name');\n$this->email->to('someone@example.com');\n$this->email->cc('another@another-example.com');\n$this->email->bcc('them@their-example.com');\n\n$this->email->subject('Email Test');\n$this->email->message('Testing the email class.');\n\n$this->email->send();\n```\n\n----------------------------------------\n\nTITLE: Filtering Data with XSS Clean in PHP (CodeIgniter)\nDESCRIPTION: Demonstrates how to use the xss_clean() method to filter data through the XSS filter. An optional second parameter can be used to test images for potential XSS attacks.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$data = $this->security->xss_clean($data);\n```\n\nLANGUAGE: php\nCODE:\n```\nif ($this->security->xss_clean($file, TRUE) === FALSE)\n{\n\t// file failed the XSS test\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache .htaccess for Removing index.php from CodeIgniter URLs\nDESCRIPTION: This Apache .htaccess configuration uses mod_rewrite to remove index.php from URLs. It redirects all HTTP requests except those for existing files and directories to the index.php file, creating cleaner URLs.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/urls.rst#2025-04-16_snippet_0\n\nLANGUAGE: apache\nCODE:\n```\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^(.*)$ index.php/$1 [L]\n```\n\n----------------------------------------\n\nTITLE: DELETE Operations in CodeIgniter\nDESCRIPTION: Shows various methods for deleting data including single record deletion, multi-table deletion, and table truncation operations.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_19\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->delete('mytable', array('id' => $id));\n\n$tables = array('table1', 'table2', 'table3');\n$this->db->where('id', '5');\n$this->db->delete($tables);\n\n$this->db->truncate('mytable');\n```\n\n----------------------------------------\n\nTITLE: Setting Individual Error Delimiters with form_error() in CodeIgniter\nDESCRIPTION: Example showing how to set custom HTML delimiters for a specific field's error message using the form_error() function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_19\n\nLANGUAGE: php\nCODE:\n```\n<?php echo form_error('field name', '<div class=\"error\">', '</div>'); ?>\n```\n\n----------------------------------------\n\nTITLE: Library Constructor with Parameter Handling in CodeIgniter\nDESCRIPTION: Demonstrates how to set up a library constructor to receive parameters passed during library initialization. The constructor accepts a parameter array that can be used within the class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php defined('BASEPATH') OR exit('No direct script access allowed');\n\nclass Someclass {\n\n\tpublic function __construct($params)\n\t{\n\t\t// Do something with $params\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Order By and Result Limiting\nDESCRIPTION: Shows how to implement ORDER BY clauses with different sorting options and how to limit query results.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$this->db->order_by('title', 'DESC');\n// Produces: ORDER BY `title` DESC\n\n$this->db->limit(10, 20);\n// Produces: LIMIT 20, 10\n```\n\n----------------------------------------\n\nTITLE: Custom SELECT Fields\nDESCRIPTION: Shows how to specify custom fields in a SELECT query using select().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->select('title, content, date');\n$query = $this->db->get('mytable');\n```\n\n----------------------------------------\n\nTITLE: Proper Constructor Implementation in CodeIgniter Controllers\nDESCRIPTION: Demonstrates the correct way to implement a constructor in a controller class. The parent constructor must be called with parent::__construct() to maintain proper inheritance.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n<?php\nclass Blog extends CI_Controller {\n\n\tpublic function __construct()\n\t{\n\t\tparent::__construct();\n\t\t// Your own constructor code\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Data in Batches - PHP\nDESCRIPTION: This method compiles and executes batch UPDATE statements to modify multiple records at once. It returns the number of rows updated or FALSE on failure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_41\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: update_batch($table[, $set = NULL[, $value = NULL[, $batch_size = 100]]])\n\n\t\t:param string $table: Table name to update\n\t\t:param array $set: Field name or array of field/value pairs\n\t\t:param string $value: Field value if $set is a single field\n\t\t:param int $batch_size: Conditions to group in a query\n\t\t:returns: Number of rows updated or FALSE on failure\n\t\t:rtype: mixed\n\n\t\tCompiles and executes batch ``UPDATE`` statements.\n```\n\n----------------------------------------\n\nTITLE: Using Anonymous Function as Validation Rule in CodeIgniter\nDESCRIPTION: Example demonstrating how to use an anonymous function as a validation rule. This allows inline custom validation logic without creating a separate callback method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$this->form_validation->set_rules(\n\t'username', 'Username',\n\tarray(\n\t\t'required',\n\t\tfunction($value)\n\t\t{\n\t\t\t// Check $value\n\t\t}\n\t)\n);\n```\n\n----------------------------------------\n\nTITLE: Compiling INSERT Queries in CodeIgniter\nDESCRIPTION: Demonstrates how to compile INSERT queries without executing them using get_compiled_insert(). Shows query building with set() method and table name handling.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_14\n\nLANGUAGE: PHP\nCODE:\n```\necho $this->db->set('title', 'My Title')->get_compiled_insert('mytable', FALSE);\n\necho $this->db->set('content', 'My Content')->get_compiled_insert();\n```\n\n----------------------------------------\n\nTITLE: Basic CodeIgniter Library Class Structure in PHP\nDESCRIPTION: The basic prototype for creating a CodeIgniter library class. This shows the fundamental structure required for all custom libraries, including the BASEPATH security check and basic class declaration.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\ndefined('BASEPATH') OR exit('No direct script access allowed'); \n\nclass Someclass {\n\n\tpublic function some_method()\n\t{\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: WHERE Clause Usage\nDESCRIPTION: Various methods of applying WHERE conditions to queries including key/value pairs and arrays.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->where('name', $name);\n$this->db->where('title', $title);\n$this->db->where('status', $status);\n```\n\n----------------------------------------\n\nTITLE: Success Page View in CodeIgniter\nDESCRIPTION: Simple success message view template displayed after successful form submission.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<html lang=\"en\">\n<head>\n<title>My Form</title>\n</head>\n<body>\n\n<h3>Your form was successfully submitted!</h3>\n\n<p><?php echo anchor('form', 'Try it again!'); ?></p>\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Running Basic Transactions in CodeIgniter PHP\nDESCRIPTION: Demonstrates how to run a series of SQL queries within a transaction using CodeIgniter's database abstraction. The transaction is automatically committed or rolled back based on the success or failure of the queries.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->db->trans_start();\n$this->db->query('AN SQL QUERY...');\n$this->db->query('ANOTHER QUERY...');\n$this->db->query('AND YET ANOTHER QUERY...');\n$this->db->trans_complete();\n```\n\n----------------------------------------\n\nTITLE: Connecting to Multiple Databases in CodeIgniter\nDESCRIPTION: This snippet shows how to connect to multiple databases simultaneously in CodeIgniter. It returns database objects that can be used to issue commands to specific databases.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$DB1 = $this->load->database('group_one', TRUE);\n$DB2 = $this->load->database('group_two', TRUE);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Session Data in CodeIgniter\nDESCRIPTION: Shows three equivalent methods for retrieving data from the session. The example retrieves an item named 'name' from the session using different approaches.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$name = $_SESSION['name'];\n\n// or:\n\n$name = $this->session->name\n\n// or:\n\n$name = $this->session->userdata('name');\n```\n\n----------------------------------------\n\nTITLE: Passing Data to a View in CodeIgniter\nDESCRIPTION: Shows how to pass data from a controller to a view using an array. The data includes a title and heading which will be used in the view.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/views.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nclass Blog extends CI_Controller {\n\n\tpublic function index()\n\t{\n\t\t$data['title'] = \"My Real Title\";\n\t\t$data['heading'] = \"My Real Heading\";\n\n\t\t$this->load->view('blogview', $data);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Assigning Query Results to Variables in CodeIgniter\nDESCRIPTION: Shows how to assign the results of a database query to a variable for further processing.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query('YOUR QUERY HERE');\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Query Builder Caching in CodeIgniter PHP\nDESCRIPTION: This snippet shows how to use Query Builder caching in CodeIgniter. It demonstrates starting and stopping the cache, executing queries, and flushing the cache. The example illustrates how cached and non-cached queries are combined.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_21\n\nLANGUAGE: php\nCODE:\n```\n$this->db->start_cache();\n$this->db->select('field1');\n$this->db->stop_cache();\n$this->db->get('tablename');\n//Generates: SELECT `field1` FROM (`tablename`)\n\n$this->db->select('field2');\n$this->db->get('tablename');\n//Generates:  SELECT `field1`, `field2` FROM (`tablename`)\n\n$this->db->flush_cache();\n$this->db->select('field2');\n$this->db->get('tablename');\n//Generates:  SELECT `field2` FROM (`tablename`)\n```\n\n----------------------------------------\n\nTITLE: Basic SELECT Query with PHP Query Builder\nDESCRIPTION: Demonstrates how to retrieve all records from a table using the get() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$query = $this->db->get('mytable');\n```\n\n----------------------------------------\n\nTITLE: Preserving Flashdata for Additional Requests\nDESCRIPTION: Demonstrates how to preserve flashdata across multiple requests using the keep_flashdata() method, shown with both single item and multiple item approaches.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_18\n\nLANGUAGE: php\nCODE:\n```\n$this->session->keep_flashdata('item');\n$this->session->keep_flashdata(array('item1', 'item2', 'item3'));\n```\n\n----------------------------------------\n\nTITLE: Adding Multiple Session Data Values Using set_userdata()\nDESCRIPTION: Demonstrates how to add multiple session values at once by passing an associative array to the set_userdata() method. This example stores username, email, and login status.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$newdata = array(\n\t'username'  => 'johndoe',\n\t'email'     => 'johndoe@some-site.com',\n\t'logged_in' => TRUE\n);\n\n$this->session->set_userdata($newdata);\n```\n\n----------------------------------------\n\nTITLE: Initializing Session Library in CodeIgniter Controller\nDESCRIPTION: Shows how to load the session library in a controller constructor and access it throughout the controller. This is the manual initialization approach when auto-loading is not configured.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('session');\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration for Error Reporting\nDESCRIPTION: Configuration setting for controlling PHP error display in different environments. Set to 'production' to disable error output in live environments.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/security.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nENVIRONMENT = 'production'    // Disables error display\nENVIRONMENT = 'development'  // Enables error display\n```\n\n----------------------------------------\n\nTITLE: Performing a Standard SQL Insert in CodeIgniter\nDESCRIPTION: Executes an INSERT SQL query with properly escaped values and retrieves the number of affected rows. Demonstrates proper value escaping for SQL security.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$sql = \"INSERT INTO mytable (title, name) VALUES (\".$this->db->escape($title).\", \".$this->db->escape($name).\")\";\n$this->db->query($sql);\necho $this->db->affected_rows();\n```\n\n----------------------------------------\n\nTITLE: Executing Standard Query with Array Results in CodeIgniter\nDESCRIPTION: Executes a SQL query and processes the results as arrays using a foreach loop. Demonstrates how to access row data using array indices.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query('SELECT name, title, email FROM my_table');\n\nforeach ($query->result_array() as $row)\n{\n\techo $row['title'];\n\techo $row['name'];\n\techo $row['email'];\n}\n```\n\n----------------------------------------\n\nTITLE: Batch INSERT Operations in CodeIgniter\nDESCRIPTION: Shows how to perform batch inserts with multiple records using insert_batch(). Takes an array of data and generates a multi-row INSERT statement.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_15\n\nLANGUAGE: PHP\nCODE:\n```\n$data = array(\n\tarray(\n\t\t'title' => 'My title',\n\t\t'name' => 'My Name',\n\t\t'date' => 'My date'\n\t),\n\tarray(\n\t\t'title' => 'Another title',\n\t\t'name' => 'Another Name',\n\t\t'date' => 'Another date'\n\t)\n);\n\n$this->db->insert_batch('mytable', $data);\n```\n\n----------------------------------------\n\nTITLE: Cache Driver Method Examples\nDESCRIPTION: Examples demonstrating various cache driver methods including is_supported(), get(), save(), delete(), increment(), decrement(), clean(), cache_info(), and get_metadata().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nif ($this->cache->apc->is_supported())\n{\n\tif ($data = $this->cache->apc->get('my_cache'))\n\t{\n\t\t// do things.\n\t}\n}\n```\n\nLANGUAGE: php\nCODE:\n```\n$foo = $this->cache->get('my_cached_item');\n```\n\nLANGUAGE: php\nCODE:\n```\n$this->cache->save('cache_item_id', 'data_to_cache');\n```\n\nLANGUAGE: php\nCODE:\n```\n$this->cache->delete('cache_item_id');\n```\n\nLANGUAGE: php\nCODE:\n```\n// 'iterator' has a value of 2\n\n$this->cache->increment('iterator'); // 'iterator' is now 3\n\n$this->cache->increment('iterator', 3); // 'iterator' is now 6\n```\n\nLANGUAGE: php\nCODE:\n```\n// 'iterator' has a value of 6\n\n$this->cache->decrement('iterator'); // 'iterator' is now 5\n\n$this->cache->decrement('iterator', 2); // 'iterator' is now 3\n```\n\n----------------------------------------\n\nTITLE: Setting Validation Rules Array in CodeIgniter\nDESCRIPTION: Example of setting form validation rules using array configuration with custom error messages.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$config = array(\n\tarray(\n\t\t'field' => 'username',\n\t\t'label' => 'Username',\n\t\t'rules' => 'required'\n\t),\n\tarray(\n\t\t'field' => 'password',\n\t\t'label' => 'Password',\n\t\t'rules' => 'required',\n\t\t'errors' => array(\n\t\t\t'required' => 'You must provide a %s.',\n\t\t),\n\t),\n\tarray(\n\t\t'field' => 'passconf',\n\t\t'label' => 'Password Confirmation',\n\t\t'rules' => 'required'\n\t),\n\tarray(\n\t\t'field' => 'email',\n\t\t'label' => 'Email',\n\t\t'rules' => 'required'\n\t)\n);\n\n$this->form_validation->set_rules($config);\n```\n\n----------------------------------------\n\nTITLE: JOIN Operations\nDESCRIPTION: Examples of performing JOIN operations between tables with different join types.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->select('*');\n$this->db->from('blogs');\n$this->db->join('comments', 'comments.id = blogs.id');\n$query = $this->db->get();\n```\n\n----------------------------------------\n\nTITLE: Setting Form Validation Rules in CodeIgniter\nDESCRIPTION: Example showing how to set validation rules for password, password confirmation, and email fields using CodeIgniter's form_validation library. Rules include trimming, required fields, minimum length, matching fields, and email validation.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$this->form_validation->set_rules('password', 'Password', 'trim|required|min_length[8]');\n$this->form_validation->set_rules('passconf', 'Password Confirmation', 'trim|required|matches[password]');\n$this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');\n```\n\n----------------------------------------\n\nTITLE: Creating Upload Form in CodeIgniter\nDESCRIPTION: HTML form template with multipart encoding for file uploads. Uses CodeIgniter form helper and displays error messages if present.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/file_uploading.rst#2025-04-16_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<html lang=\"en\">\n<head>\n<title>Upload Form</title>\n</head>\n<body>\n\n<?php echo $error;?>\n\n<?php echo form_open_multipart('upload/do_upload');?>\n\n<input type=\"file\" name=\"userfile\" size=\"20\" />\n\n<br /><br />\n\n<input type=\"submit\" value=\"upload\" />\n\n</form>\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Setting tempdata using set_tempdata() in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to set tempdata using the `set_tempdata()` method, which sets the session variable and marks it as tempdata in a single step. The expiry time is specified in seconds.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_23\n\nLANGUAGE: php\nCODE:\n```\n\"$this->session->set_tempdata('item', 'value', 300);\"\n```\n\n----------------------------------------\n\nTITLE: Compiled SELECT Query Generation\nDESCRIPTION: Shows how to get the compiled SQL string without executing the query using get_compiled_select().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$sql = $this->db->get_compiled_select('mytable');\necho $sql;\n```\n\n----------------------------------------\n\nTITLE: Initializing Pagination in CodeIgniter Controller\nDESCRIPTION: Basic example of setting up pagination configuration in a CodeIgniter controller, demonstrating how to load the pagination library and configure essential parameters\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/pagination.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('pagination');\n\n$config['base_url'] = 'http://example.com/index.php/test/page/';\n$config['total_rows'] = 200;\n$config['per_page'] = 20;\n\n$this->pagination->initialize($config);\n\necho $this->pagination->create_links();\n```\n\n----------------------------------------\n\nTITLE: Disabling Transactions in CodeIgniter PHP\nDESCRIPTION: Demonstrates how to disable transactions, causing queries to be auto-committed as if they were run without transaction support. This effectively ignores transaction-related function calls.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$this->db->trans_off();\n\n$this->db->trans_start();\n$this->db->query('AN SQL QUERY...');\n$this->db->trans_complete();\n```\n\n----------------------------------------\n\nTITLE: Getting the HTTP Request Method in CodeIgniter\nDESCRIPTION: Returns the HTTP request method (GET, POST, etc.) from $_SERVER['REQUEST_METHOD']. Can optionally return the method name in uppercase or lowercase.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/input.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\necho $this->input->method(TRUE); // Outputs: POST\necho $this->input->method(FALSE); // Outputs: post\necho $this->input->method(); // Outputs: post\n```\n\n----------------------------------------\n\nTITLE: Processing Large Result Sets with Unbuffered Rows in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to use the unbuffered_row() method to process large result sets without loading the entire result into memory. It shows how to iterate through the results.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query(\"YOUR QUERY\");\n\nwhile ($row = $query->unbuffered_row())\n{\t\n\techo $row->title;\n\techo $row->name;\n\techo $row->body;\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling and Disabling Query Caching in CodeIgniter\nDESCRIPTION: Demonstrates how to manually enable and disable query caching for specific database queries using the cache_on() and cache_off() methods.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/caching.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n// Turn caching on\n$this->db->cache_on();\n$query = $this->db->query(\"SELECT * FROM mytable\");\n\n// Turn caching off for this one query\n$this->db->cache_off();\n$query = $this->db->query(\"SELECT * FROM members WHERE member_id = '$current_user'\");\n\n// Turn caching back on\n$this->db->cache_on();\n$query = $this->db->query(\"SELECT * FROM another_table\");\n```\n\n----------------------------------------\n\nTITLE: Conditional Method Remapping in CodeIgniter\nDESCRIPTION: A _remap() method that conditionally calls other methods based on the requested method name. This allows for custom routing logic within a controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\npublic function _remap($method)\n{\n\tif ($method === 'some_method')\n\t{\n\t\t$this->$method();\n\t}\n\telse\n\t{\n\t\t$this->default_method();\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP Verb Routes for RESTful APIs in CodeIgniter\nDESCRIPTION: Example of using HTTP verbs to define RESTful routes. This route maps PUT requests to the product/insert method, enabling RESTful API development.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$route['products']['put'] = 'product/insert';\n```\n\n----------------------------------------\n\nTITLE: Modifying Table Structure in CodeIgniter\nDESCRIPTION: Examples of adding, dropping, and modifying columns in existing tables.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/forge.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$fields = array(\n\t'preferences' => array('type' => 'TEXT', 'after' => 'another_field')\n);\n$this->dbforge->add_column('table_name', $fields);\n\n$this->dbforge->drop_column('table_name', 'column_to_drop');\n\n$fields = array(\n\t'old_name' => array(\n\t\t'name' => 'new_name',\n\t\t'type' => 'TEXT',\n\t),\n);\n$this->dbforge->modify_column('table_name', $fields);\n```\n\n----------------------------------------\n\nTITLE: Manual Database Connection Configuration in CodeIgniter\nDESCRIPTION: This snippet illustrates how to manually configure and connect to a database in CodeIgniter by passing an array of connection parameters to the database() function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$config['hostname'] = 'localhost';\n$config['username'] = 'myusername';\n$config['password'] = 'mypassword';\n$config['database'] = 'mydatabase';\n$config['dbdriver'] = 'mysqli';\n$config['dbprefix'] = '';\n$config['pconnect'] = FALSE;\n$config['db_debug'] = TRUE;\n$config['cache_on'] = FALSE;\n$config['cachedir'] = '';\n$config['char_set'] = 'utf8';\n$config['dbcollat'] = 'utf8_general_ci';\n$this->load->database($config);\n```\n\n----------------------------------------\n\nTITLE: Loading Models in CodeIgniter (PHP)\nDESCRIPTION: Demonstrates how to load models in CodeIgniter, including models in subdirectories and assigning custom object names.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/loader.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$this->load->model('model_name');\n```\n\nLANGUAGE: php\nCODE:\n```\n$this->load->model('blog/queries');\n```\n\nLANGUAGE: php\nCODE:\n```\n$this->load->model('model_name', 'fubar');\n$this->fubar->method();\n```\n\n----------------------------------------\n\nTITLE: Using Custom Result Objects in CodeIgniter\nDESCRIPTION: This snippet shows how to use custom result objects to return query results as instances of a custom class. It demonstrates defining a custom class and using it with the custom_result_object() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nclass User {\n\n\tpublic $id;\n\tpublic $email;\n\tpublic $username;\n\n\tprotected $last_login;\n\n\tpublic function last_login($format)\n\t{\n\t\treturn $this->last_login->format($format);\n\t}\n\n\tpublic function __set($name, $value)\n\t{\n\t\tif ($name === 'last_login')\n\t\t{\n\t\t\t$this->last_login = DateTime::createFromFormat('U', $value);\n\t\t}\n\t}\n\n\tpublic function __get($name)\n\t{\n\t\tif (isset($this->$name))\n\t\t{\n\t\t\treturn $this->$name;\n\t\t}\n\t}\n}\n\n$query = $this->db->query(\"YOUR QUERY\");\n\n$rows = $query->custom_result_object('User');\n\nforeach ($rows as $row)\n{\n\techo $row->id;\n\techo $row->email;\n\techo $row->last_login('Y-m-d');\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Standard Database Queries in CodeIgniter\nDESCRIPTION: Demonstrates how to execute a standard database query using CodeIgniter's query() method, which returns a database result object for read operations or boolean for write operations.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->db->query('YOUR QUERY HERE');\n```\n\n----------------------------------------\n\nTITLE: Using Content-ID for Inline Images in HTML Emails\nDESCRIPTION: Demonstrates embedding an inline image in HTML emails using the attachment_cid() method to get a Content-ID for an attached file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$filename = '/img/photo1.jpg';\n$this->email->attach($filename);\nforeach ($list as $address)\n{\n\t$this->email->to($address);\n\t$cid = $this->email->attachment_cid($filename);\n\t$this->email->message('<img src=\"cid:'. $cid .'\" alt=\"photo1\" />');\n\t$this->email->send();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Form View in CodeIgniter\nDESCRIPTION: Basic HTML form template with CodeIgniter form helper integration and validation error display.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<html lang=\"en\">\n<head>\n<title>My Form</title>\n</head>\n<body>\n\n<?php echo validation_errors(); ?>\n\n<?php echo form_open('form'); ?>\n\n<h5>Username</h5>\n<input type=\"text\" name=\"username\" value=\"\" size=\"50\" />\n\n<h5>Password</h5>\n<input type=\"text\" name=\"password\" value=\"\" size=\"50\" />\n\n<h5>Password Confirm</h5>\n<input type=\"text\" name=\"passconf\" value=\"\" size=\"50\" />\n\n<h5>Email Address</h5>\n<input type=\"text\" name=\"email\" value=\"\" size=\"50\" />\n\n<div><input type=\"submit\" value=\"Submit\" /></div>\n\n</form>\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Proper Comparison Operators in PHP\nDESCRIPTION: Examples of strict comparison operators (===, !==) to avoid type juggling issues when comparing return values in PHP.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nif (strpos($str, 'foo') === FALSE)\n```\n\n----------------------------------------\n\nTITLE: Setting multiple tempdata items using set_tempdata() in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to set multiple tempdata items at once using the `set_tempdata()` method with an array. An expiry time can be specified for all items.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_24\n\nLANGUAGE: php\nCODE:\n```\n\"$tempdata = array('newuser' => TRUE, 'message' => 'Thanks for joining!');\n\n\\t$this->session->set_tempdata($tempdata, NULL, $expire);\"\n```\n\n----------------------------------------\n\nTITLE: Defining Table Fields in CodeIgniter\nDESCRIPTION: Shows how to define table fields with various attributes like type, constraints, and defaults.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/forge.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$fields = array(\n\t'blog_id' => array(\n\t\t'type' => 'INT',\n\t\t'constraint' => 5,\n\t\t'unsigned' => TRUE,\n\t\t'auto_increment' => TRUE\n\t),\n\t'blog_title' => array(\n\t\t'type' => 'VARCHAR',\n\t\t'constraint' => '100',\n\t\t'unique' => TRUE,\n\t),\n\t'blog_author' => array(\n\t\t'type' =>'VARCHAR',\n\t\t'constraint' => '100',\n\t\t'default' => 'King of Town',\n\t),\n\t'blog_description' => array(\n\t\t'type' => 'TEXT',\n\t\t'null' => TRUE,\n\t),\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Wildcard Routes in CodeIgniter\nDESCRIPTION: Example of using a numeric wildcard to route product URLs to a specific controller method. This route captures numerical values in the second segment of the URL and directs them to the catalog controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$route['product/:num'] = 'catalog/product_lookup';\n```\n\n----------------------------------------\n\nTITLE: Accessing Uploaded File Data in CodeIgniter\nDESCRIPTION: This PHP snippet demonstrates how to retrieve the filename of the uploaded file using the data() method of the CI_Upload class. By passing the 'file_name' index to the method, you can access the file name of the uploaded file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/file_uploading.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n\"$this->upload->data('file_name');\t// Returns: mypic.jpg\"\n```\n\n----------------------------------------\n\nTITLE: Saving ZIP Archive to Server in CodeIgniter\nDESCRIPTION: Shows how to write a ZIP archive to a specified directory on the server using the archive method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$this->zip->archive('/path/to/folder/myarchive.zip'); // Creates a file named myarchive.zip\n```\n\n----------------------------------------\n\nTITLE: Using Query Builder to Retrieve Data in CodeIgniter\nDESCRIPTION: Demonstrates the Query Builder pattern to retrieve all rows from a table. This simplified approach abstracts SQL syntax for easier database interactions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->get('table_name');\n\nforeach ($query->result() as $row)\n{\n\techo $row->title;\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Model Class Structure in CodeIgniter PHP\nDESCRIPTION: This snippet shows the basic prototype for creating a model class in CodeIgniter. Model classes must extend the CI_Model base class and follow naming conventions with capitalized first letter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/models.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nclass Model_name extends CI_Model {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Named Anonymous Function Validation Rule in CodeIgniter\nDESCRIPTION: Example showing how to assign a rule name to an anonymous function validation rule to allow setting specific error messages for it.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$this->form_validation->set_rules(\n\t'username', 'Username',\n\tarray(\n\t\t'required',\n\t\tarray(\n\t\t\t'username_callable',\n\t\t\tfunction($str)\n\t\t\t{\n\t\t\t\t// Check validity of $str and return TRUE or FALSE\n\t\t\t}\n\t\t)\n\t)\n);\n```\n\n----------------------------------------\n\nTITLE: Encrypting Data with CI_Encryption in PHP\nDESCRIPTION: This snippet demonstrates the use of the encrypt method within the CI_Encryption class to encrypt a data string. It returns the encrypted data or FALSE on failure. Required parameter includes the data to encrypt, with optional parameters for additional configurations.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\n$ciphertext = $this->encryption->encrypt('My secret message');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Flashdata in CodeIgniter\nDESCRIPTION: Shows how to access flashdata using the native PHP $_SESSION superglobal or using CodeIgniter's flashdata() method, which ensures you're only reading flashdata items.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n$_SESSION['item']\n```\n\n----------------------------------------\n\nTITLE: Inserting Data in Batches - PHP\nDESCRIPTION: This method compiles and executes batch INSERT statements, allowing multiple records to be inserted at once. Returns the number of rows inserted or FALSE on failure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_38\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: insert_batch($table[, $set = NULL[, $escape = NULL[, $batch_size = 100]]])\n\n\t\t:param string $table: Table name to insert into\n\t\t:param array $set: Data to insert\n\t\t:param bool $escape: Whether to escape values\n\t\t:param int $batch_size: Number of rows to insert at once\n\t\t:returns: Number of rows inserted or FALSE on failure\n\t\t:rtype: mixed\n\n\t\tCompiles and executes batch ``INSERT`` statements.\n```\n\n----------------------------------------\n\nTITLE: Creating Encryption Key in CodeIgniter\nDESCRIPTION: Generates a cryptographically secure random key of specified length for use with the Encryption library.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$key = $this->encryption->create_key(16);\n```\n\n----------------------------------------\n\nTITLE: Implementing News Controller's view Method\nDESCRIPTION: Complete implementation of the view method in the News controller that retrieves a specific news item by slug and displays it, with 404 handling for missing items.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/news_section.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\npublic function view($slug = NULL)\n{\n\t$data['news_item'] = $this->news_model->get_news($slug);\n\n\tif (empty($data['news_item']))\n\t{\n\t\tshow_404();\n\t}\n\n\t$data['title'] = $data['news_item']['title'];\n\n\t$this->load->view('templates/header', $data);\n\t$this->load->view('news/view', $data);\n\t$this->load->view('templates/footer');\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Cookies in CodeIgniter\nDESCRIPTION: Example of setting a cookie using the array method in CodeIgniter's Input class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/input.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$cookie = array(\n\t'name'\t\t=> 'The Cookie Name',\n\t'value'\t\t=> 'The Value',\n\t'expire'\t=> 86500,\n\t'domain'\t=> '.some-domain.com',\n\t'path'\t\t=> '/',\n\t'prefix'\t=> 'myprefix_',\n\t'secure'\t=> TRUE,\n\t'samesite'\t=> 'Strict'\n);\n\n$this->input->set_cookie($cookie);\n```\n\n----------------------------------------\n\nTITLE: Setting Up Custom Routes in CodeIgniter\nDESCRIPTION: Configuration for CodeIgniter's routing system that defines a default controller and a wildcard route to map any URI to the pages/view method. This enables clean URLs for static pages.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/static_pages.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$route['default_controller'] = 'pages/view';\n$route['(:any)'] = 'pages/view/$1';\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Result Row as an Array in CodeIgniter\nDESCRIPTION: This snippet shows how to use the row_array() method to retrieve a single result row as an array. It demonstrates checking if a row exists and accessing array elements.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query(\"YOUR QUERY\");\n\n$row = $query->row_array();\n\nif (isset($row))\n{\n\techo $row['title'];\n\techo $row['name'];\n\techo $row['body'];\n}\n```\n\n----------------------------------------\n\nTITLE: Using Field and Parameter Tags in Error Messages\nDESCRIPTION: Example showing how to use {field} and {param} tags in custom error messages to dynamically include the field name and rule parameter values.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n$this->form_validation->set_message('min_length', '{field} must have at least {param} characters.');\n```\n\n----------------------------------------\n\nTITLE: Setting Email Configuration Preferences\nDESCRIPTION: Shows how to set email configuration options like protocol, mailpath, charset and wordwrap using the initialize method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$config['protocol'] = 'sendmail';\n$config['mailpath'] = '/usr/sbin/sendmail';\n$config['charset'] = 'iso-8859-1';\n$config['wordwrap'] = TRUE;\n\n$this->email->initialize($config);\n```\n\n----------------------------------------\n\nTITLE: Retrieving URI Segments in PHP with CodeIgniter\nDESCRIPTION: This method retrieves a specific segment from the URI. Segments are numbered from left to right. It allows specifying a default return value if the segment is not found.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/uri.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nsegment($n[, $no_result = NULL])\n```\n\n----------------------------------------\n\nTITLE: Configuring Memcached Session Driver\nDESCRIPTION: This code configures CodeIgniter to use Memcached as the session driver, specifying the Memcached server's address. The 'sess_driver' is set to 'memcached', and the 'sess_save_path' is set to the host and port of the Memcached server.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_39\n\nLANGUAGE: PHP\nCODE:\n```\n$config['sess_driver'] = 'memcached';\n\t$config['sess_save_path'] = 'localhost:11211';\n```\n\n----------------------------------------\n\nTITLE: Listing Database Tables in CodeIgniter\nDESCRIPTION: This example demonstrates how to list all tables in the currently connected database using CodeIgniter's database library.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$tables = $this->db->list_tables();\n\nforeach ($tables as $table)\n{\n\techo $table;\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Redirect Example in CodeIgniter PHP\nDESCRIPTION: Shows basic usage of the redirect() function for a login check scenario. Redirects unauthorized users to a login form.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nif ($logged_in == FALSE)\n{\n    redirect('/login/form/');\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Transaction Errors in CodeIgniter PHP\nDESCRIPTION: Illustrates how to handle transaction errors manually when debugging is turned off. It checks the transaction status after completion and allows for custom error handling or logging.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->db->trans_start();\n$this->db->query('AN SQL QUERY...');\n$this->db->query('ANOTHER QUERY...');\n$this->db->trans_complete();\n\nif ($this->db->trans_status() === FALSE)\n{\n    // generate an error... or use the log_message() function to log your error\n}\n```\n\n----------------------------------------\n\nTITLE: Iterating Query Results\nDESCRIPTION: Example of how to loop through query results and access row data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$query = $this->db->get('mytable');\n\nforeach ($query->result() as $row)\n{\n    echo $row->title;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Active Database Connection Group\nDESCRIPTION: This snippet shows how to specify which database connection group should be used by default in your CodeIgniter application. The active_group variable determines which connection configuration will be loaded.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$active_group = 'test';\n```\n\n----------------------------------------\n\nTITLE: Loading an Extended Library in CodeIgniter\nDESCRIPTION: Demonstrates how to load an extended library in CodeIgniter. The prefix is not included when loading the library; CodeIgniter will automatically use the extended version.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('email');\n```\n\n----------------------------------------\n\nTITLE: Creating Tables with CodeIgniter Forge\nDESCRIPTION: Shows different ways to create tables including optional attributes and existence checks.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/forge.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$this->dbforge->create_table('table_name');\n\n$this->dbforge->create_table('table_name', TRUE);\n\n$attributes = array('ENGINE' => 'InnoDB');\n$this->dbforge->create_table('table_name', FALSE, $attributes);\n```\n\n----------------------------------------\n\nTITLE: Configuring Advanced Pagination Options\nDESCRIPTION: Advanced configuration demonstrating various pagination customization options, including URI segment control, page number display, and query string handling\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/pagination.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$config['uri_segment'] = 3;\n$config['num_links'] = 2;\n$config['use_page_numbers'] = TRUE;\n$config['page_query_string'] = TRUE;\n$config['reuse_query_string'] = FALSE;\n```\n\n----------------------------------------\n\nTITLE: Setting Encryption Key in Config\nDESCRIPTION: Shows how to store the encryption key in the CodeIgniter configuration file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$config['encryption_key'] = 'YOUR KEY';\n```\n\n----------------------------------------\n\nTITLE: Setting Config Items Dynamically\nDESCRIPTION: Shows how to dynamically set or change configuration items using the set_item() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/config.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$this->config->set_item('item_name', 'item_value');\n```\n\n----------------------------------------\n\nTITLE: Setting Email Headers in CodeIgniter\nDESCRIPTION: Shows how to set custom headers in an email using CodeIgniter's Email library.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$this->email->set_header('Header2', 'Value2');\n```\n\n----------------------------------------\n\nTITLE: Caching Output in Custom _output Method\nDESCRIPTION: Shows how to properly implement caching in a custom _output() method. This ensures controller output is cached according to the configured cache expiration time.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nif ($this->output->cache_expiration > 0)\n{\n\t$this->output->_write_cache($output);\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Multiple Views in CodeIgniter\nDESCRIPTION: Demonstrates how to load multiple view files (header, menu, content, footer) from a single controller method. It also shows passing data to a specific view.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/views.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nclass Page extends CI_Controller {\n\n\tpublic function index()\n\t{\n\t\t$data['page_title'] = 'Your title';\n\t\t$this->load->view('header');\n\t\t$this->load->view('menu');\n\t\t$this->load->view('content', $data);\n\t\t$this->load->view('footer');\n\t}\n\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting to Database Using DSN in CodeIgniter\nDESCRIPTION: This code demonstrates how to connect to a database using a Data Source Name (DSN) string in CodeIgniter. It includes an example of overriding default config values using query string parameters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$dsn = 'dbdriver://username:password@hostname/database';\n$this->load->database($dsn);\n\n$dsn = 'dbdriver://username:password@hostname/database?char_set=utf8&dbcollat=utf8_general_ci&cache_on=true&cachedir=/path/to/cache';\n$this->load->database($dsn);\n```\n\n----------------------------------------\n\nTITLE: Using Query Bindings with Simple Values in CodeIgniter\nDESCRIPTION: Demonstrates how to use query bindings to simplify query syntax and automatically escape values.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$sql = \"SELECT * FROM some_table WHERE id = ? AND status = ? AND author = ?\";\n$this->db->query($sql, array(3, 'live', 'Rick'));\n```\n\n----------------------------------------\n\nTITLE: Basic Cache Driver Usage Example\nDESCRIPTION: Example showing how to load and use the cache driver with APC adapter and file-based backup. Demonstrates saving and retrieving cached items with TTL.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->driver('cache', array('adapter' => 'apc', 'backup' => 'file'));\n\nif ( ! $foo = $this->cache->get('foo'))\n{\n\techo 'Saving to the cache!<br />';\n\tfoo = 'foobarbaz!';\n\n\t// Save into the cache for 5 minutes\n\t$this->cache->save('foo', $foo, 300);\n}\n\necho $foo;\n```\n\n----------------------------------------\n\nTITLE: Creating News Controller in CodeIgniter\nDESCRIPTION: Basic News controller with constructor that loads the news model and URL helper. Includes index and view methods for handling different news display pages.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/news_section.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nclass News extends CI_Controller {\n\n\tpublic function __construct()\n\t{\n\t\tparent::__construct();\n\t\t$this->load->model('news_model');\n\t\t$this->load->helper('url_helper');\n\t}\n\n\tpublic function index()\n\t{\n\t\t$data['news'] = $this->news_model->get_news();\n\t}\n\n\tpublic function view($slug = NULL)\n\t{\n\t\t$data['news_item'] = $this->news_model->get_news($slug);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Manually Displaying Output and Terminating Script in CodeIgniter\nDESCRIPTION: Demonstrates how to manually send finalized JSON output with proper headers and formatting options, then exit the script execution to prevent duplicate output.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_13\n\nLANGUAGE: PHP\nCODE:\n```\n$response = array('status' => 'OK');\n\n$this->output\n\t->set_status_header(200)\n\t->set_content_type('application/json', 'utf-8')\n\t->set_output(json_encode($response, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES))\n\t->_display();\nexit;\n```\n\n----------------------------------------\n\nTITLE: Database Utility Methods in PHP CodeIgniter\nDESCRIPTION: Utility methods for database operations including escape(), escape_str(), list_tables(), table_exists(), and other helper functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/db_driver_reference.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nescape($str)\nescape_str($str[, $like = FALSE])\nlist_tables([$constrain_by_prefix = FALSE])\ntable_exists($table_name)\n```\n\n----------------------------------------\n\nTITLE: Compiling INSERT Query in CodeIgniter Query Builder\nDESCRIPTION: Method that compiles an INSERT statement into a string without executing it. Takes optional table name and reset flag parameters. Returns the compiled SQL as a string.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_48\n\nLANGUAGE: php\nCODE:\n```\nget_compiled_insert([$table = ''[, $reset = TRUE]])\n```\n\n----------------------------------------\n\nTITLE: Passing URI Segments to Controller Methods in CodeIgniter\nDESCRIPTION: Demonstrates how URI segments are passed as parameters to controller methods. In this example, the third and fourth URI segments are passed to the shoes() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\nclass Products extends CI_Controller {\n\n\tpublic function shoes($sandals, $id)\n\t{\n\t\techo $sandals;\n\t\techo $id;\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Batch UPDATE Operations in CodeIgniter\nDESCRIPTION: Demonstrates how to perform batch updates using update_batch(). Generates optimized UPDATE statements for multiple records using CASE expressions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_18\n\nLANGUAGE: PHP\nCODE:\n```\n$data = array(\n   array(\n      'title' => 'My title' ,\n      'name' => 'My Name 2' ,\n      'date' => 'My date 2'\n   ),\n   array(\n      'title' => 'Another title' ,\n      'name' => 'Another Name 2' ,\n      'date' => 'Another date 2'\n   )\n);\n\n$this->db->update_batch('mytable', $data, 'title');\n```\n\n----------------------------------------\n\nTITLE: Adding Single Session Data Value in CodeIgniter\nDESCRIPTION: Shows how to add a single key-value pair to the session using the set_userdata() method with key and value parameters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$this->session->set_userdata('some_name', 'some_value');\n```\n\n----------------------------------------\n\nTITLE: Handling Form Submission and Validation in CodeIgniter Controller\nDESCRIPTION: This snippet demonstrates how to handle form submission and validation in a CodeIgniter controller. It loads necessary helpers and libraries, sets validation rules, and either displays the form or processes the submitted data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/create_news_items.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\npublic function create()\n{\n    $this->load->helper('form');\n    $this->load->library('form_validation');\n    \n    $data['title'] = 'Create a news item';\n    \n    $this->form_validation->set_rules('title', 'Title', 'required');\n    $this->form_validation->set_rules('text', 'Text', 'required');\n    \n    if ($this->form_validation->run() === FALSE)\n    {\n        $this->load->view('templates/header', $data);   \n        $this->load->view('news/create');\n        $this->load->view('templates/footer');\n        \n    }\n    else\n    {\n        $this->news_model->set_news();\n        $this->load->view('news/success');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking for AJAX Requests in CodeIgniter\nDESCRIPTION: Determines if the current request is an AJAX request by checking the HTTP_X_REQUESTED_WITH server header. Returns TRUE for AJAX requests, FALSE otherwise.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/input.rst#2025-04-16_snippet_10\n\n\n\n----------------------------------------\n\nTITLE: Checking Table Existence in CodeIgniter\nDESCRIPTION: This snippet shows how to check if a specific table exists in the database before performing operations on it.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nif ($this->db->table_exists('table_name'))\n{\n\t// some code...\n}\n```\n\n----------------------------------------\n\nTITLE: Query Builder Method Chaining\nDESCRIPTION: Demonstrates how to chain multiple Query Builder methods together for more concise query construction.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_20\n\nLANGUAGE: PHP\nCODE:\n```\n$query = $this->db->select('title')\n\t\t->where('id', $id)\n\t\t->limit(10, 20)\n\t\t->get('mytable');\n```\n\n----------------------------------------\n\nTITLE: FTP File Upload Example\nDESCRIPTION: Demonstrates connecting to FTP server and uploading a file with specific permissions in ASCII mode.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/ftp.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('ftp');\n\n$config['hostname'] = 'ftp.example.com';\n$config['username'] = 'your-username';\n$config['password'] = 'your-password';\n$config['debug']\t= TRUE;\n\n$this->ftp->connect($config);\n\n$this->ftp->upload('/local/path/to/myfile.html', '/public_html/myfile.html', 'ascii', 0775);\n\n$this->ftp->close();\n```\n\n----------------------------------------\n\nTITLE: Removing Session Data with unset() in CodeIgniter\nDESCRIPTION: Shows how to remove session data using PHP's native unset() function, demonstrating both single and multiple value removal.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nunset($_SESSION['some_name']);\n\n// or multiple values:\n\nunset(\n\t$_SESSION['some_name'],\n\t$_SESSION['another_name']\n);\n```\n\n----------------------------------------\n\nTITLE: Loading Email Library Example\nDESCRIPTION: Shows how to load the email library in a CodeIgniter controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/loader.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('email');\n```\n\n----------------------------------------\n\nTITLE: Initializing Database Utility Class in CodeIgniter\nDESCRIPTION: Demonstrates how to load and initialize the Database Utility Class in CodeIgniter, including passing a custom database object.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->dbutil();\n\n$this->myutil = $this->load->dbutil($this->other_db, TRUE);\n```\n\n----------------------------------------\n\nTITLE: Adding a LIKE Clause - PHP\nDESCRIPTION: Adds a LIKE clause to a query, allowing for text matching in a specified field. The method returns a CI_DB_query_builder instance, which supports method chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_24\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: like($field[, $match = ''[, $side = 'both'[, $escape = NULL]]])\n\n\t\t:param string $field: Field name\n\t\t:param string $match: Text portion to match\n\t\t:param string $side: Which side to put the '%' wildcard\n\t\t:param bool $escape: Whether to escape values\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds a LIKE clause to a query, separating multiple calls with AND.\n```\n\n----------------------------------------\n\nTITLE: Basic Method Remapping in CodeIgniter\nDESCRIPTION: A simple _remap() method implementation that overrides the default URI-to-method routing. When implemented, all requests to the controller will go through this method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\npublic function _remap()\n{\n\t// Some code here...\n}\n```\n\n----------------------------------------\n\nTITLE: Using Model Method as Validation Rule in CodeIgniter\nDESCRIPTION: Example showing how to use a model method as a validation rule by passing it as a callable array. This allows leveraging existing model logic for form validation.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$this->form_validation->set_rules(\n\t'username', 'Username',\n\tarray(\n\t\t'required',\n\t\tarray($this->users_model, 'valid_username')\n\t)\n);\n```\n\n----------------------------------------\n\nTITLE: Auto-loading Model with Database Connection in CodeIgniter PHP\nDESCRIPTION: This snippet shows how to load a model with automatic database connection in CodeIgniter. By passing TRUE as the third parameter, CodeIgniter will use connectivity settings from your database config file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/models.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->model('model_name', '', TRUE);\n```\n\n----------------------------------------\n\nTITLE: Setting HTTP Headers in CodeIgniter\nDESCRIPTION: Demonstrates how to manually set various HTTP response headers using the set_header method for caching control and modification dates.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\n$this->output->set_header('HTTP/1.0 200 OK');\n$this->output->set_header('HTTP/1.1 200 OK');\n$this->output->set_header('Last-Modified: '.gmdate('D, d M Y H:i:s', $last_update).' GMT');\n$this->output->set_header('Cache-Control: no-store, no-cache, must-revalidate');\n$this->output->set_header('Cache-Control: post-check=0, pre-check=0');\n$this->output->set_header('Pragma: no-cache');\n```\n\n----------------------------------------\n\nTITLE: Generating SQL Insert Strings in CodeIgniter\nDESCRIPTION: Demonstrates how to build properly formatted SQL INSERT statements using an associative array of data. Values are automatically escaped, producing safer queries.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/helpers.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$data = array('name' => $name, 'email' => $email, 'url' => $url);\n\n$str = $this->db->insert_string('table_name', $data);\n```\n\n----------------------------------------\n\nTITLE: Custom Output Processing in CodeIgniter Controllers\nDESCRIPTION: Implementing the _output() method to process the final output before it's sent to the browser. This method will always be called by the output class instead of echoing data directly.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\npublic function _output($output)\n{\n\techo $output;\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Field Existence in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to verify if a specific field exists in a table before performing operations on it.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nif ($this->db->field_exists('field_name', 'table_name'))\n{\n\t// some code...\n}\n```\n\n----------------------------------------\n\nTITLE: Extending a Native CodeIgniter Library\nDESCRIPTION: Demonstrates how to extend a native CodeIgniter library by creating a subclass. The class must use the MY_ prefix (configurable) and extend the parent class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nclass MY_Email extends CI_Email {\n\n}\n```\n\n----------------------------------------\n\nTITLE: CI_Session flashdata Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::flashdata() which retrieves $_SESSION items that have been marked as flashdata. It can retrieve a specific flashdata item by key or all flashdata when no key is provided.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_51\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: flashdata([$key = NULL])\n\n\t:param\tmixed\t$key: Flashdata item key or NULL\n\t:returns:\tValue of the specified item key, or an array of all flashdata\n\t:rtype:\tmixed\n\n\tGets the value for a specific ``$_SESSION`` item that has\n\tbeen marked as \"flashdata\", or an array of all \"flashdata\"\n\titems if no key was specified.\n\n\t.. note:: This is a legacy method kept only for backwards\n\t\tcompatibility with older applications. You should\n\t\tdirectly access ``$_SESSION`` instead.\n```\n\n----------------------------------------\n\nTITLE: Marking multiple items as tempdata with same expiry in CodeIgniter\nDESCRIPTION: This snippet shows how to mark multiple session items as tempdata with the same expiry time using the `mark_as_temp()` method. The expiry time is specified in seconds.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_20\n\nLANGUAGE: php\nCODE:\n```\n\"// Both 'item' and 'item2' will expire after 300 seconds\n\\t$this->session->mark_as_temp(array('item', 'item2'), 300);\"\n```\n\n----------------------------------------\n\nTITLE: Implementing News Controller's index Method\nDESCRIPTION: Complete implementation of the index method in the News controller that retrieves all news items and loads the appropriate views with the data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/news_section.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\npublic function index()\n{\n\t$data['news'] = $this->news_model->get_news();\n\t$data['title'] = 'News archive';\n\n\t$this->load->view('templates/header', $data);\n\t$this->load->view('news/index', $data);\n\t$this->load->view('templates/footer');\n}\n```\n\n----------------------------------------\n\nTITLE: Checking if Session Data Exists in CodeIgniter\nDESCRIPTION: Demonstrates two methods for verifying if a session value exists: using PHP's native isset() or CodeIgniter's has_userdata() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n// returns FALSE if the 'some_name' item doesn't exist or is NULL,\n// TRUE otherwise:\nisset($_SESSION['some_name'])\n```\n\n----------------------------------------\n\nTITLE: Disabling Strict Mode for Transactions in CodeIgniter PHP\nDESCRIPTION: Shows how to disable strict mode for transactions. When strict mode is disabled, each group of transactions is treated independently, allowing some groups to succeed even if others fail.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->db->trans_strict(FALSE);\n```\n\n----------------------------------------\n\nTITLE: Accessing CodeIgniter Resources in a Library using get_instance()\nDESCRIPTION: Shows how to access CodeIgniter's native resources within a custom library using the get_instance() method. This approach allows libraries to use CodeIgniter's built-in functionality.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$CI =& get_instance();\n\n$CI->load->helper('url');\n$CI->load->library('session');\n$CI->config->item('base_url');\n```\n\n----------------------------------------\n\nTITLE: Sanitizing Filenames in CodeIgniter\nDESCRIPTION: Demonstrates how to use the sanitize_filename() method to prevent directory traversal attempts and other security threats in file names. Includes an optional parameter for preserving relative paths.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$filename = $this->security->sanitize_filename($this->input->post('filename'));\n```\n\nLANGUAGE: php\nCODE:\n```\n$filename = $this->security->sanitize_filename($this->input->post('filename'), TRUE);\n```\n\n----------------------------------------\n\nTITLE: Adding Files with Subdirectories to ZIP Archive in CodeIgniter\nDESCRIPTION: Demonstrates how to organize compressed data into subdirectories by including the path as part of the filename.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$name = 'personal/my_bio.txt';\n$data = 'I was born in an elevator...';\n\n$this->zip->add_data($name, $data);\n```\n\n----------------------------------------\n\nTITLE: Decrypting Data using CI_Encryption in PHP\nDESCRIPTION: This snippet demonstrates decrypting previously encrypted data using the decrypt method of CI_Encryption. It outputs the plain-text data or FALSE on failure. Key input includes the encrypted data with optional configuration parameters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_10\n\nLANGUAGE: PHP\nCODE:\n```\necho $this->encryption->decrypt($ciphertext);\n```\n\n----------------------------------------\n\nTITLE: Using validation_errors() for All Validation Errors\nDESCRIPTION: Demonstrates how to display all form validation errors using the validation_errors() helper function with custom HTML wrapping.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\necho validation_errors('<span class=\"error\">', '</span>');\n```\n\n----------------------------------------\n\nTITLE: Using Callbacks in CodeIgniter Routes\nDESCRIPTION: Example of using an anonymous function callback in routes to process URL parameters before directing to a controller. This allows for dynamic route processing based on the captured segments.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$route['products/([a-zA-Z]+)/edit/(\\d+)'] = function ($product_type, $id)\n{\n\treturn 'catalog/product_edit/' . strtolower($product_type) . '/' . $id;\n};\n```\n\n----------------------------------------\n\nTITLE: Displaying Basic HTML Template with Pseudo-Variables in CodeIgniter\nDESCRIPTION: An example HTML template showing the syntax for pseudo-variables in CodeIgniter's template parser. Variables are enclosed in braces and can include simple variables or variable pairs for iteration.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<html lang=\"en\">\n\t<head>\n\t\t<title>{blog_title}</title>\n\t</head>\n\t<body>\n\t\t<h3>{blog_heading}</h3>\n\n\t{blog_entries}\n\t\t<h5>{title}</h5>\n\t\t<p>{body}</p>\n\t{/blog_entries}\n\n\t</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Exporting Query Result as CSV in CodeIgniter\nDESCRIPTION: Demonstrates how to export a database query result as a CSV file using the Database Utility Class, including custom delimiter settings.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->dbutil();\n\n$query = $this->db->query(\"SELECT * FROM mytable\");\n\necho $this->dbutil->csv_from_result($query);\n\n$delimiter = \",\";\n$newline = \"\\r\\n\";\n$enclosure = '\"';\n\necho $this->dbutil->csv_from_result($query, $delimiter, $newline, $enclosure);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Field Metadata (Method 1) in CodeIgniter\nDESCRIPTION: This example shows how to get detailed metadata about all fields in a specific table, including name, type, length, and primary key status.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$fields = $this->db->field_data('table_name');\n\nforeach ($fields as $field)\n{\n\techo $field->name;\n\techo $field->type;\n\techo $field->max_length;\n\techo $field->primary_key;\n}\n```\n\n----------------------------------------\n\nTITLE: Detecting User Agent Type in CodeIgniter\nDESCRIPTION: Example of how to use the User Agent class to determine if the visitor is using a browser, robot, or mobile device, and retrieve platform information.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/user_agent.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('user_agent');\n\nif ($this->agent->is_browser())\n{\n\t$agent = $this->agent->browser().' '.$this->agent->version();\n}\nelseif ($this->agent->is_robot())\n{\n\t$agent = $this->agent->robot();\n}\nelseif ($this->agent->is_mobile())\n{\n\t$agent = $this->agent->mobile();\n}\nelse\n{\n\t$agent = 'Unidentified User Agent';\n}\n\necho $agent;\n\necho $this->agent->platform(); // Platform info (Windows, Linux, Mac, etc.)\n```\n\n----------------------------------------\n\nTITLE: Extending a CodeIgniter Library with Constructor\nDESCRIPTION: Shows how to properly extend a CodeIgniter library while overriding the constructor. The parent constructor must be called to maintain the original functionality.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nclass MY_Email extends CI_Email {\n\n\tpublic function __construct($config = array())\n\t{\n\t\tparent::__construct($config);\n\t\t// Your own constructor code\n\t}\n\n}\n```\n\n----------------------------------------\n\nTITLE: Query Grouping Operations\nDESCRIPTION: Demonstrates complex WHERE clause grouping with nested conditions using parentheses.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$this->db->select('*')->from('my_table')\n    ->group_start()\n        ->where('a', 'a')\n        ->or_group_start()\n            ->where('b', 'b')\n            ->where('c', 'c')\n        ->group_end()\n    ->group_end()\n    ->where('d', 'd')\n->get();\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Flashdata Items in CodeIgniter\nDESCRIPTION: Shows how to retrieve an array containing all flashdata items by calling the flashdata() method without any parameters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n$this->session->flashdata();\n```\n\n----------------------------------------\n\nTITLE: Extending CodeIgniter Input Class in PHP\nDESCRIPTION: Example of extending CodeIgniter's native Input class using the MY_ prefix. Shows basic class structure and inheritance pattern.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/core_classes.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nclass MY_Input extends CI_Input {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Form Opening Tag Generation\nDESCRIPTION: Shows basic usage of form_open() function to create an HTML form tag with proper base URL\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\necho form_open('email/send');\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Row as Object in CodeIgniter\nDESCRIPTION: Executes a SQL query with a LIMIT clause to retrieve a single row and access it as an object. Useful for getting individual records.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query('SELECT name FROM my_table LIMIT 1'); \n$row = $query->row();\necho $row->name;\n```\n\n----------------------------------------\n\nTITLE: Adding Multiple Attachments to Email\nDESCRIPTION: Demonstrates how to add multiple file attachments to an email using the attach() method multiple times.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$this->email->attach('/path/to/photo1.jpg');\n$this->email->attach('/path/to/photo2.jpg');\n$this->email->attach('/path/to/photo3.jpg');\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Field Name for Upload in CodeIgniter\nDESCRIPTION: This PHP snippet shows how to specify a custom field name for the uploaded file using the do_upload() method of the CI_Upload class.  Instead of relying on the default 'userfile' field, you can pass a string with your desired field name.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/file_uploading.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n\"$field_name = \\\"some_field_name\\\";\n$this->upload->do_upload($field_name);\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Result Row as an Object in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to use the row() method to retrieve a single result row as an object. It shows how to check if a row exists and access its properties.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query(\"YOUR QUERY\");\n\n$row = $query->row();\n\nif (isset($row))\n{\n\techo $row->title;\n\techo $row->name;\n\techo $row->body;\n}\n```\n\n----------------------------------------\n\nTITLE: Form Controller Implementation in CodeIgniter\nDESCRIPTION: Controller class handling form processing, validation rule setup, and view loading based on validation results.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nclass Form extends CI_Controller {\n\n\tpublic function index()\n\t{\n\t\t$this->load->helper(array('form', 'url'));\n\n\t\t$this->load->library('form_validation');\n\n\t\tif ($this->form_validation->run() == FALSE)\n\t\t{\n\t\t\t$this->load->view('myform');\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$this->load->view('formsuccess');\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Unsetting tempdata directly from $_SESSION in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to remove tempdata directly from the `$_SESSION` array using `unset()`. However, it doesn't remove the tempdata marker.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_28\n\nLANGUAGE: php\nCODE:\n```\n\"unset($_SESSION['item']);\"\n```\n\n----------------------------------------\n\nTITLE: Loading Custom Config File in CodeIgniter\nDESCRIPTION: Demonstrates how to manually load a custom configuration file in a controller. The method allows merging multiple config files and handling name collisions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/config.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->config->load('filename');\n```\n\n----------------------------------------\n\nTITLE: Parsing Templates and Returning String in CodeIgniter\nDESCRIPTION: Shows how to parse a template and return the result as a string instead of sending it to the output class, by passing TRUE as the third parameter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$string = $this->parser->parse('blog_template', $data, TRUE);\n```\n\n----------------------------------------\n\nTITLE: Reconnecting to Database in CodeIgniter\nDESCRIPTION: This snippet shows how to reconnect to the database or keep the connection alive in CodeIgniter using the reconnect() method. This is useful when the database server's idle timeout is exceeded during heavy processing.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->reconnect();\n```\n\n----------------------------------------\n\nTITLE: CI_Session set_userdata Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::set_userdata() which assigns data to the $_SESSION superglobal. It can set a single item with a key-value pair or multiple items with an array of key-value pairs.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_46\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: set_userdata($data[, $value = NULL])\n\n\t:param\tmixed\t$data: An array of key/value pairs to set as session data, or the key for a single item\n\t:param\tmixed\t$value:\tThe value to set for a specific session item, if $data is a key\n\t:rtype:\tvoid\n\n\tAssigns data to the ``$_SESSION`` superglobal.\n\n\t.. note:: This is a legacy method kept only for backwards\n\t\tcompatibility with older applications.\n```\n\n----------------------------------------\n\nTITLE: CI_Session set_flashdata Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::set_flashdata() which sets data in the $_SESSION superglobal and marks it as flashdata. This allows setting session data that will be automatically cleared after the next request.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_53\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: set_flashdata($data[, $value = NULL])\n\n\t:param\tmixed\t$data: An array of key/value pairs to set as flashdata, or the key for a single item\n\t:param\tmixed\t$value:\tThe value to set for a specific session item, if $data is a key\n\t:rtype:\tvoid\n\n\tAssigns data to the ``$_SESSION`` superglobal and marks it\n\tas \"flashdata\".\n\n\t.. note:: This is a legacy method kept only for backwards\n\t\tcompatibility with older applications.\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Pages Controller in CodeIgniter\nDESCRIPTION: Initializes a basic Pages controller class that extends CI_Controller. This creates the foundation for handling static page requests with a view method that accepts a page parameter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/static_pages.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php \nclass Pages extends CI_Controller { \n\n\tpublic function view($page = 'home') \n\t{\n        }\n}\n```\n\n----------------------------------------\n\nTITLE: Conditional Email Sending with Error Handling\nDESCRIPTION: Demonstrates how to conditionally send an email and handle errors based on the boolean result of the send() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nif ( ! $this->email->send())\n{\n\t// Generate error\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing Templates with Simple Variables in CodeIgniter\nDESCRIPTION: Demonstrates how to parse a template with simple variables by providing an associative array of data to be replaced in the template.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$data = array(\n\t'blog_title' => 'My Blog Title',\n\t'blog_heading' => 'My Blog Heading'\n);\n\n$this->parser->parse('blog_template', $data);\n```\n\n----------------------------------------\n\nTITLE: Setting Error Delimiters with validation_errors() in CodeIgniter\nDESCRIPTION: Example showing how to set custom HTML delimiters when displaying all validation errors with the validation_errors() function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_20\n\nLANGUAGE: php\nCODE:\n```\n<?php echo validation_errors('<div class=\"error\">', '</div>'); ?>\n```\n\n----------------------------------------\n\nTITLE: Manually Closing Database Connection in CodeIgniter\nDESCRIPTION: This code demonstrates how to explicitly close a database connection in CodeIgniter using the close() method, although CodeIgniter typically handles this automatically.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->close();\n```\n\n----------------------------------------\n\nTITLE: Getting Client IP Address in CodeIgniter\nDESCRIPTION: Retrieves the IP address of the current user. Returns '0.0.0.0' if the IP is not valid. Takes into account proxy IP configurations and checks various HTTP headers for forwarded IPs.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/input.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\necho $this->input->ip_address();\n```\n\n----------------------------------------\n\nTITLE: Using log_message() Function in CodeIgniter\nDESCRIPTION: The log_message() function writes messages to log files with specified log levels (error, debug, or info). It's used for logging error messages, debug information, and general informational messages.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nlog_message($level, $message)\n```\n\n----------------------------------------\n\nTITLE: Adding a HAVING IN Clause - PHP\nDESCRIPTION: Generates a HAVING clause that checks if a specified field's value is within an array of given values. It returns a DB_query_builder instance to support chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_30\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: having_in([$key[, array $values[, $escape = NULL]]])\n\n\t\t:param string $key: Field to search\n\t\t:param array $values: Values to match\n\t\t:param bool $escape: Whether to escape values\n\t\t:returns: DB_query_builder instance\n\t\t:rtype: object\n\n\t\tGenerates a HAVING field IN('item', 'item') SQL query, joined with 'AND' if appropriate.\n```\n\n----------------------------------------\n\nTITLE: Form Validation Set Rules Method Definition\nDESCRIPTION: Class method definition for setting validation rules with parameters for field name, label, rules, and custom error messages.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_22\n\nLANGUAGE: PHP\nCODE:\n```\nset_rules($field[, $label = null[, $rules = null[, $errors = array()]]])\n```\n\n----------------------------------------\n\nTITLE: Dropdown Menu Generation\nDESCRIPTION: Shows how to create dropdown select menus with options and selected values\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$options = array(\n\t'small'\t\t=> 'Small Shirt',\n\t'med'\t\t=> 'Medium Shirt',\n\t'large'\t\t=> 'Large Shirt',\n\t'xlarge'\t=> 'Extra Large Shirt',\n);\n\n$shirts_on_sale = array('small', 'large');\necho form_dropdown('shirts', $options, 'large');\n```\n\n----------------------------------------\n\nTITLE: Creating a Thumbnail Using CI_Image_lib in PHP\nDESCRIPTION: Demonstrates how to set the configuration to create a thumbnail when resizing an image using the CI_Image_lib class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$config['create_thumb'] = TRUE;\n```\n\n----------------------------------------\n\nTITLE: Creating and Dropping Databases with CodeIgniter Forge\nDESCRIPTION: Demonstrates database creation and deletion operations using Database Forge.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/forge.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nif ($this->dbforge->create_database('my_db'))\n{\n\techo 'Database created!';\n}\n\nif ($this->dbforge->drop_database('my_db'))\n{\n\techo 'Database deleted!';\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Keys to Tables in CodeIgniter\nDESCRIPTION: Examples of adding primary and regular keys to database tables.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/forge.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$this->dbforge->add_key('blog_id', TRUE);\n\n$this->dbforge->add_key('blog_id', TRUE);\n$this->dbforge->add_key('site_id', TRUE);\n\n$this->dbforge->add_key('blog_name');\n\n$this->dbforge->add_key(array('blog_name', 'blog_label'));\n```\n\n----------------------------------------\n\nTITLE: Setting File Session Permissions\nDESCRIPTION: These commands create a session directory, set permissions to restrict access to the owner, and change the directory owner to the web server user. This ensures only the web server process can read and write session files, preventing unauthorized access.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_33\n\nLANGUAGE: Shell\nCODE:\n```\nmkdir /<path to your application directory>/sessions/\n\tchmod 0700 /<path to your application directory>/sessions/\n\tchown www-data /<path to your application directory>/sessions/\n```\n\n----------------------------------------\n\nTITLE: Changing Error Delimiters Globally in CodeIgniter\nDESCRIPTION: Example showing how to globally change the HTML delimiters used around validation error messages from the default paragraph tags to div tags with a CSS class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_18\n\nLANGUAGE: php\nCODE:\n```\n$this->form_validation->set_error_delimiters('<div class=\"error\">', '</div>');\n```\n\n----------------------------------------\n\nTITLE: Setting Data for Batch Insertion - PHP\nDESCRIPTION: This method prepares field/value pairs for batch insertion into a table later. It returns a CI_DB_query_builder instance for method chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_39\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: set_insert_batch($key[, $value = ''[, $escape = NULL]])\n\n\t\t:param mixed $key: Field name or array of field/value pairs\n\t\t:param string $value: Field value if $key is a single field\n\t\t:param bool $escape: Whether to escape values\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds field/value pairs to be inserted in a table later via ``insert_batch()``.\n```\n\n----------------------------------------\n\nTITLE: Verifying CAPTCHA Submission in CodeIgniter\nDESCRIPTION: Demonstrates how to verify user CAPTCHA input by cleaning up expired entries and checking if the submitted word matches a valid CAPTCHA in the database.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/captcha_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n// First, delete old captchas\n$expiration = time() - 7200; // Two hour limit\n$this->db->where('captcha_time < ', $expiration)\n\t->delete('captcha');\n\n// Then see if a captcha exists:\n$sql = 'SELECT COUNT(*) AS count FROM captcha WHERE word = ? AND ip_address = ? AND captcha_time > ?';\n$binds = array($_POST['captcha'], $this->input->ip_address(), $expiration);\n$query = $this->db->query($sql, $binds);\n$row = $query->row();\n\nif ($row->count == 0)\n{     \n\techo 'You must submit the word that appears in the image.'\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Model Naming in CodeIgniter PHP\nDESCRIPTION: This snippet demonstrates how to load a model and assign it to a custom object name in CodeIgniter. This is useful when you want to reference the model with a different name than the class name.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/models.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->model('model_name', 'foobar');\n\n$this->foobar->method();\n```\n\n----------------------------------------\n\nTITLE: Using Regular Expressions in CodeIgniter Routes\nDESCRIPTION: Example of using regular expressions to define complex routing rules. This route matches product URLs with a text segment followed by a numeric ID and routes to the appropriate controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$route['products/([a-z]+)/(\\d+)'] = '$1/id_$2';\n```\n\n----------------------------------------\n\nTITLE: Working with Database Table Prefixes in CodeIgniter\nDESCRIPTION: Shows how to manually prepend the configured database prefix to a table name using the dbprefix() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$this->db->dbprefix('tablename'); // outputs prefix_tablename\n```\n\n----------------------------------------\n\nTITLE: HAVING Clause Implementation\nDESCRIPTION: Demonstrates various ways to use HAVING clauses including single conditions, multiple conditions, and IN/NOT IN operations.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$this->db->having('user_id = 45'); // Produces: HAVING user_id = 45\n\n$names = array('Frank', 'Todd', 'James');\n$this->db->having_in('username', $names);\n// Produces: HAVING username IN ('Frank', 'Todd', 'James')\n```\n\n----------------------------------------\n\nTITLE: Upload Class Configuration\nDESCRIPTION: Example of setting upload configuration preferences including file path, allowed types, and size restrictions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/file_uploading.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$config['upload_path'] = './uploads/';\n$config['allowed_types'] = 'gif|jpg|png';\n$config['max_size']\t= '100';\n$config['max_width'] = '1024';\n$config['max_height'] = '768';\n\n$this->load->library('upload', $config);\n\n// Alternately you can set preferences by calling the ``initialize()`` method. Useful if you auto-load the class:\n$this->upload->initialize($config);\n```\n\n----------------------------------------\n\nTITLE: Creating Cryptographic Keys in CI_Encryption using PHP\nDESCRIPTION: Using the create_key method in the CI_Encryption class, this snippet shows how to generate a cryptographic key with specified length. It depends on system sources for random data. The length of the desired key is required as input.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_11\n\nLANGUAGE: PHP\nCODE:\n```\n$key = $this->encryption->create_key(32);\n```\n\n----------------------------------------\n\nTITLE: Using flashdata() Method to Read Flashdata in CodeIgniter\nDESCRIPTION: Demonstrates the use of the flashdata() method to retrieve flashdata items specifically, which helps distinguish flashdata from regular session data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\n$this->session->flashdata('item');\n```\n\n----------------------------------------\n\nTITLE: Loading Models in CodeIgniter Controllers\nDESCRIPTION: This snippet shows how to load a model in a CodeIgniter controller. It demonstrates how to access model methods and also how to assign the model to a different object name.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/models.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->model('model_name');\n\n$this->model_name->method();\n```\n\n----------------------------------------\n\nTITLE: Using Form Validation Rules Method Example\nDESCRIPTION: Example showing how to call validation rules as discrete methods using the form_validation class instance.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_21\n\nLANGUAGE: PHP\nCODE:\n```\n$this->form_validation->required($string);\n```\n\n----------------------------------------\n\nTITLE: Creating a Table with Discrete Parameters in CodeIgniter\nDESCRIPTION: Shows how to generate an HTML table by setting headings and adding rows using discrete parameters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/table.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('table');\n\n$this->table->set_heading('Name', 'Color', 'Size');\n\n$this->table->add_row('Fred', 'Blue', 'Small');\n$this->table->add_row('Mary', 'Red', 'Large');\n$this->table->add_row('John', 'Green', 'Medium');\n\necho $this->table->generate();\n```\n\n----------------------------------------\n\nTITLE: Using Any Wildcard in CodeIgniter Routes\nDESCRIPTION: Example of using the :any wildcard to match any character in a URL segment. This routes any URL with 'product' as the first segment to the catalog controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$route['product/(:any)'] = 'catalog/product_lookup';\n```\n\n----------------------------------------\n\nTITLE: Base URL Function Example\nDESCRIPTION: Demonstrates usage of base_url() function for generating base URLs.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\necho base_url();\necho base_url(\"blog/post/123\");\necho base_url(\"images/icons/edit.png\");\n```\n\n----------------------------------------\n\nTITLE: Setting Global Custom Error Message in CodeIgniter\nDESCRIPTION: Example showing how to set a custom error message for a specific validation rule using the set_message() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$this->form_validation->set_message('rule', 'Error Message');\n```\n\n----------------------------------------\n\nTITLE: Using set_radio() with HTML Radio Buttons\nDESCRIPTION: Demonstrates how to use the set_radio() helper function to maintain selected state of radio buttons after form submission.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"radio\" name=\"myradio\" value=\"1\" <?php echo  set_radio('myradio', '1', TRUE); ?> />\n<input type=\"radio\" name=\"myradio\" value=\"2\" <?php echo  set_radio('myradio', '2'); ?> />\n```\n\n----------------------------------------\n\nTITLE: Using form_error() for Field-Specific Validation Errors\nDESCRIPTION: Shows how to display validation errors for specific form fields using the form_error() helper function with custom HTML wrapping.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\necho form_error('myfield', '<div class=\"error\">', '</div>');\n```\n\n----------------------------------------\n\nTITLE: Setting Field-Specific Error Messages in CodeIgniter\nDESCRIPTION: Example showing how to set a custom error message for a specific field on a particular rule within the set_rules() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$this->form_validation->set_rules('field_name', 'Field Label', 'rule1|rule2|rule3',\n\tarray('rule2' => 'Error Message on rule2 for this field_name')\n);\n```\n\n----------------------------------------\n\nTITLE: Setting Database Fields for Insertion - PHP\nDESCRIPTION: This method allows you to set field/value pairs for future insertion, update, or replacement operations. It returns a CI_DB_query_builder instance for method chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_36\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: set($key[, $value = ''[, $escape = NULL]])\n\n\t\t:param mixed $key: Field name or array of field/value pairs\n\t\t:param string $value: Field value if single field\n\t\t:param bool $escape: Whether to escape values\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds field/value pairs to be passed later to ``insert()``, ``update()`` or ``replace()``.\n```\n\n----------------------------------------\n\nTITLE: Configuring and Applying Text Watermark in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to set up configuration options for text watermarking and apply it to an image using CodeIgniter's Image Library. It includes settings for font, size, color, alignment, and padding.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$config['source_image']\t= '/path/to/image/mypic.jpg';\n$config['wm_text'] = 'Copyright 2006 - John Doe';\n$config['wm_type'] = 'text';\n$config['wm_font_path'] = './system/fonts/texb.ttf';\n$config['wm_font_size']\t= '16';\n$config['wm_font_color'] = 'ffffff';\n$config['wm_vrt_alignment'] = 'bottom';\n$config['wm_hor_alignment'] = 'center';\n$config['wm_padding'] = '20';\n\n$this->image_lib->initialize($config); \n\n$this->image_lib->watermark();\n```\n\n----------------------------------------\n\nTITLE: Accessing Raw Input Stream in CodeIgniter\nDESCRIPTION: Shows how to access the raw PHP input stream data using CodeIgniter's input class property.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/input.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->input->raw_input_stream;\n```\n\n----------------------------------------\n\nTITLE: Hidden Form Fields Example\nDESCRIPTION: Shows how to create hidden input fields using form_hidden()\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$data = array(\n\t'name'\t=> 'John Doe',\n\t'email'\t=> 'john@example.com',\n\t'url'\t=> 'http://example.com'\n);\n\necho form_hidden($data);\n```\n\n----------------------------------------\n\nTITLE: Conditional Image Processing with Error Handling\nDESCRIPTION: Demonstrates best practice for conditional image processing with integrated error handling.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nif ( ! $this->image_lib->resize())\n{\n\techo $this->image_lib->display_errors();\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing tempdata via $_SESSION in CodeIgniter\nDESCRIPTION: This snippet shows how to access tempdata using the `$_SESSION` superglobal array. This allows direct access to the session data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_25\n\nLANGUAGE: php\nCODE:\n```\n\"$_SESSION['item']\"\n```\n\n----------------------------------------\n\nTITLE: Passing and Looping Through Array Data in CodeIgniter\nDESCRIPTION: Shows how to pass an array of data from a controller and loop through it in a view. The controller passes a todo list, and the view creates an unordered list from the array items.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/views.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nclass Blog extends CI_Controller {\n\n\tpublic function index()\n\t{\n\t\t$data['todo_list'] = array('Clean House', 'Call Mom', 'Run Errands');\n\n\t\t$data['title'] = \"My Real Title\";\n\t\t$data['heading'] = \"My Real Heading\";\n\n\t\t$this->load->view('blogview', $data);\n\t}\n}\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<html lang=\"en\">\n<head>\n\t<title><?php echo $title;?></title>\n</head>\n<body>\n\t<h1><?php echo $heading;?></h1>\n\n\t<h3>My Todo List</h3>\n\n\t<ul>\n\t<?php foreach ($todo_list as $item):?>\n\n\t\t<li><?php echo $item;?></li>\n\n\t<?php endforeach;?>\n\t</ul>\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: CI_Session set_tempdata Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::set_tempdata() which sets data in the $_SESSION superglobal and marks it as tempdata with a specific TTL. This allows setting session data that will be automatically cleared after the specified time period.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_58\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: set_tempdata($data[, $value = NULL])\n\n\t:param\tmixed\t$data: An array of key/value pairs to set as tempdata, or the key for a single item\n\t:param\tmixed\t$value:\tThe value to set for a specific session item, if $data is a key\n\t:param\tint\t$ttl: Time-to-live value for the tempdata item(s), in seconds\n\t:rtype:\tvoid\n\n\tAssigns data to the ``$_SESSION`` superglobal and marks it\n\tas \"tempdata\".\n\n\t.. note:: This is a legacy method kept only for backwards\n\t\tcompatibility with older applications.\n```\n\n----------------------------------------\n\nTITLE: Adding Entire Directories to ZIP Archive in CodeIgniter\nDESCRIPTION: Shows how to compress a directory and all its contents recursively into a ZIP archive.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$path = '/path/to/your/directory/';\n\n$this->zip->read_dir($path);\n\n// Download the file to your desktop. Name it \"my_backup.zip\"\n$this->zip->download('my_backup.zip');\n```\n\n----------------------------------------\n\nTITLE: Getting a Specific HTTP Request Header in CodeIgniter\nDESCRIPTION: Retrieves a single HTTP request header by name. Returns NULL if the header is not found. Optional XSS filtering can be applied to the result.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/input.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$this->input->get_request_header('some-header', TRUE);\n```\n\n----------------------------------------\n\nTITLE: SELECT with WHERE Clause\nDESCRIPTION: Demonstrates how to use get_where() to add WHERE conditions to a SELECT query.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$query = $this->db->get_where('mytable', array('id' => $id), $limit, $offset);\n```\n\n----------------------------------------\n\nTITLE: Using Passed Data in a CodeIgniter View\nDESCRIPTION: Demonstrates how to use data passed from a controller within an HTML view. The view uses PHP echo statements to display the title and heading variables.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/views.rst#2025-04-16_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<html lang=\"en\">\n<head>\n\t<title><?php echo $title;?></title>\n</head>\n<body>\n\t<h1><?php echo $heading;?></h1>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: CI_Session sess_destroy Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::sess_destroy() which destroys the current session. This is an alias for PHP's native session_destroy() function and should be the last session-related method called as all session data will be lost.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_60\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: sess_destroy()\n\n\t:rtype:\tvoid\n\n\tDestroys the current session.\n\n\t.. note:: This must be the *last* session-related function\n\t\tthat you call. All session data will be lost after\n\t\tyou do that.\n\n\t.. note:: This method is just an alias for PHP's native\n\t\t`session_destroy()\n\t\t<https://secure.php.net/session_destroy>`_ function.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Database Names in CodeIgniter\nDESCRIPTION: Shows how to get a list of database names using the Database Utility Class and iterate through them.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$dbs = $this->dbutil->list_databases();\n\nforeach ($dbs as $db)\n{\n\techo $db;\n}\n```\n\n----------------------------------------\n\nTITLE: Using Array as Form Field Name with set_value() in CodeIgniter\nDESCRIPTION: Example showing how to use set_value() with form fields that use array notation in their names. When working with array-based field names, you must supply the array notation to the function as well.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" name=\"colors[]\" value=\"<?php echo set_value('colors[]'); ?>\" size=\"50\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring CSRF Token Regeneration in CodeIgniter\nDESCRIPTION: Demonstrates how to configure CSRF token regeneration behavior by modifying the csrf_regenerate config parameter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$config['csrf_regenerate'] = TRUE;\n```\n\n----------------------------------------\n\nTITLE: Creating a Table with Arrays in CodeIgniter\nDESCRIPTION: Demonstrates how to generate an HTML table by setting headings and adding rows using arrays.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/table.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('table');\n\n$this->table->set_heading(array('Name', 'Color', 'Size'));\n\n$this->table->add_row(array('Fred', 'Blue', 'Small'));\n$this->table->add_row(array('Mary', 'Red', 'Large'));\n$this->table->add_row(array('John', 'Green', 'Medium'));\n\necho $this->table->generate();\n```\n\n----------------------------------------\n\nTITLE: Loading Library with Configuration\nDESCRIPTION: Example of loading a library with configuration options passed as an array.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/loader.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$config = array (\n    'mailtype' => 'html',\n    'charset'  => 'utf-8',\n    'priority' => '1'\n);\n\n$this->load->library('email', $config);\n```\n\n----------------------------------------\n\nTITLE: Compiling UPDATE Query in CodeIgniter Query Builder\nDESCRIPTION: Method that compiles an UPDATE statement into a string without executing it. Takes optional table name and reset flag parameters. Returns the compiled SQL as a string.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_49\n\nLANGUAGE: php\nCODE:\n```\nget_compiled_update([$table = ''[, $reset = TRUE]])\n```\n\n----------------------------------------\n\nTITLE: Whitelisting URIs from CSRF Protection in CodeIgniter\nDESCRIPTION: Shows how to exclude specific URIs from CSRF protection by editing the csrf_exclude_uris config parameter. Supports both exact matches and regular expressions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$config['csrf_exclude_uris'] = array('api/person/add');\n```\n\nLANGUAGE: php\nCODE:\n```\n$config['csrf_exclude_uris'] = array(\n\t'api/record/[0-9]+',\n\t'api/title/[a-z]+'\n);\n```\n\n----------------------------------------\n\nTITLE: Using Email clear() Method in a Loop\nDESCRIPTION: Demonstrates using the clear() method to reset email variables between iterations when sending multiple emails in a loop.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nforeach ($list as $name => $address)\n{\n\t$this->email->clear();\n\n\t$this->email->to($address);\n\t$this->email->from('your@example.com');\n\t$this->email->subject('Here is your info '.$name);\n\t$this->email->message('Hi '.$name.' Here is the info you requested.');\n\t$this->email->send();\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up an XML-RPC Server in CodeIgniter\nDESCRIPTION: Example showing how to initialize and configure an XML-RPC server in CodeIgniter. Defines allowed methods and maps them to controller methods for processing incoming requests.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/xmlrpc.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('xmlrpc');\n$this->load->library('xmlrpcs');\n\n$config['functions']['new_post'] = array('function' => 'My_blog.new_entry');\n$config['functions']['update_post'] = array('function' => 'My_blog.update_entry');\n$config['object'] = $this;\n\n$this->xmlrpcs->initialize($config);\n$this->xmlrpcs->serve();\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Hook Structure in CodeIgniter\nDESCRIPTION: Example of defining a pre_controller hook with class, function, file details and parameters in the hooks.php configuration file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/hooks.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$hook['pre_controller'] = array(\n\t'class'    => 'MyClass',\n\t'function' => 'Myfunction',\n\t'filename' => 'Myclass.php',\n\t'filepath' => 'hooks',\n\t'params'   => array('beer', 'wine', 'snacks')\n);\n```\n\n----------------------------------------\n\nTITLE: Getting Filenames from a Directory with get_filenames() Function\nDESCRIPTION: Demonstrates how to retrieve an array of all filenames within a specified directory using the get_filenames() function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/file_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$controllers = get_filenames(APPPATH.'controllers/');\n```\n\n----------------------------------------\n\nTITLE: Setting and Marking Flashdata in CodeIgniter\nDESCRIPTION: Shows the two-step process of setting session data and then marking it as flashdata to be available only for the next request.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$_SESSION['item'] = 'value';\n$this->session->mark_as_flash('item');\n```\n\n----------------------------------------\n\nTITLE: Using Anchor Function Helper Example\nDESCRIPTION: Demonstrates using the anchor() helper function to create HTML links in view files.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php echo anchor('blog/comments', 'Click Here');?>\n```\n\n----------------------------------------\n\nTITLE: Custom Encryption Parameters in PHP\nDESCRIPTION: Shows how to use custom parameters for encryption and decryption when interacting with external systems that use different encryption methods.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n// Assume that we have $ciphertext, $key and $hmac_key\n// from on outside source\n\n$message = $this->encryption->decrypt(\n\t$ciphertext,\n\tarray(\n\t\t'cipher' => 'blowfish',\n\t\t'mode' => 'cbc',\n\t\t'key' => $key,\n\t\t'hmac_digest' => 'sha256',\n\t\t'hmac_key' => $hmac_key\n\t)\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Typography Class in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to load the Typography Class in a CodeIgniter controller using the load->library method. It initializes the Typography library, making it available for use throughout the controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/typography.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('typography');\n```\n\nLANGUAGE: PHP\nCODE:\n```\n$this->typography\n```\n\n----------------------------------------\n\nTITLE: Capturing Multiple Segments with Regular Expressions in CodeIgniter\nDESCRIPTION: Example showing how to capture multiple URL segments with a regular expression. This route is useful for remembering the previous page after login by capturing everything after 'login/'.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$route['login/(.+)'] = 'auth/login/$1';\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Form for News Item Input in CodeIgniter\nDESCRIPTION: This snippet shows how to create an HTML form for inputting news items. It uses CodeIgniter's form helper functions and displays validation errors.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/create_news_items.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<h2><?php echo $title; ?></h2>\n\n<?php echo validation_errors(); ?>\n\n<?php echo form_open('news/create'); ?>\n\n    <label for=\"title\">Title</label> \n    <input type=\"text\" name=\"title\" /><br />\n\n    <label for=\"text\">Text</label>\n    <textarea name=\"text\"></textarea><br />\n\n    <input type=\"submit\" name=\"submit\" value=\"Create news item\" /> \n\n</form>\n```\n\n----------------------------------------\n\nTITLE: Escaping String Data in SQL Queries with CodeIgniter\nDESCRIPTION: Shows how to escape string data before inserting it into a database query using the escape() method, which also adds single quotes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$sql = \"INSERT INTO table (title) VALUES(\".$this->db->escape($title).\")\";\n```\n\n----------------------------------------\n\nTITLE: Using Query Builder Having Methods\nDESCRIPTION: New Query Builder methods for HAVING clauses with IN conditions, including having_in(), or_having_in(), not_having_in(), and or_not_having_in().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\nhaving_in()\nor_having_in()\nnot_having_in()\nor_not_having_in()\n```\n\n----------------------------------------\n\nTITLE: Row Value Assignment in PHP - CodeIgniter\nDESCRIPTION: Method to assign values to result columns. Accepts either column name and value or array of key/value pairs.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nset_row($key[, $value = NULL])\n```\n\n----------------------------------------\n\nTITLE: Configuring Composer Auto-loading in CodeIgniter\nDESCRIPTION: Sets the configuration to enable Composer's autoloader in CodeIgniter. This can be configured in the application/config/config.php file by setting the $config['composer_autoload'] variable to TRUE or specifying a custom path.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/autoloader.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$config['composer_autoload'] = TRUE;\n```\n\n----------------------------------------\n\nTITLE: Accessing a Loaded Library Method in CodeIgniter\nDESCRIPTION: Demonstrates how to access a method from a loaded library. Object instances are always accessed using lowercase naming convention.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->someclass->some_method();\n```\n\n----------------------------------------\n\nTITLE: Translatable Field Names in CodeIgniter Validation\nDESCRIPTION: Example showing how to make field labels translatable by prefixing them with 'lang:' in the set_rules() method and storing the actual labels in a language file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n$this->form_validation->set_rules('first_name', 'lang:first_name', 'required');\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic HTML View in CodeIgniter\nDESCRIPTION: Demonstrates how to create a simple HTML view file for a blog page in CodeIgniter. The view contains basic HTML structure with a title and heading.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/views.rst#2025-04-16_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<html lang=\"en\">\n<head>\n\t<title>My Blog</title>\n</head>\n<body>\n\t<h1>Welcome to my Blog!</h1>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Creating a Copy of an Image Using CI_Image_lib in PHP\nDESCRIPTION: Shows how to set the configuration to create a copy of an image with a new path and/or filename when using the resize method of CI_Image_lib.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$config['new_image'] = '/path/to/new_image.jpg';\n```\n\n----------------------------------------\n\nTITLE: Running Manual Transactions in CodeIgniter PHP\nDESCRIPTION: Illustrates how to manually control transactions, including explicitly starting, committing, or rolling back based on custom logic. This provides more fine-grained control over the transaction process.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$this->db->trans_begin();\n\n$this->db->query('AN SQL QUERY...');\n$this->db->query('ANOTHER QUERY...');\n$this->db->query('AND YET ANOTHER QUERY...');\n\nif ($this->db->trans_status() === FALSE)\n{\n    $this->db->trans_rollback();\n}\nelse\n{\n    $this->db->trans_commit();\n}\n```\n\n----------------------------------------\n\nTITLE: Controller with Multiple Methods in CodeIgniter\nDESCRIPTION: A controller with two methods: the default index() method and a custom comments() method. This shows how different methods can be accessed via different URI segments.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\nclass Blog extends CI_Controller {\n\n\tpublic function index()\n\t{\n\t\techo 'Hello World!';\n\t}\n\n\tpublic function comments()\n\t{\n\t\techo 'Look at this!';\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Site URL Generation Example\nDESCRIPTION: Demonstrates how to generate site URLs using the site_url() function with string segments.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\necho site_url('news/local/123');\n```\n\n----------------------------------------\n\nTITLE: Adding Package Paths in CodeIgniter (PHP)\nDESCRIPTION: Shows how to add a package path to instruct the Loader class to prepend a given path for subsequent resource requests.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/loader.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$this->load->add_package_path(APPPATH.'third_party/foo_bar/')\n    ->library('foo_bar');\n```\n\n----------------------------------------\n\nTITLE: Dynamic Base URL Configuration in CodeIgniter 3.0\nDESCRIPTION: Example of creating a dynamic base_url configuration that adapts to multiple domains and both HTTP and HTTPS protocols. This is a safer alternative to relying on CodeIgniter's auto-detection functionality.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_300.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$allowed_domains = array('domain1.tld', 'domain2.tld');\n$default_domain  = 'domain1.tld';\n\nif (in_array($_SERVER['HTTP_HOST'], $allowed_domains, TRUE))\n{\n\t$domain = $_SERVER['HTTP_HOST'];\n}\nelse\n{\n\t$domain = $default_domain;\n}\n\nif ( ! empty($_SERVER['HTTPS']))\n{\n\t$config['base_url'] = 'https://'.$domain;\n}\nelse\n{\n\t$config['base_url'] = 'http://'.$domain;\n}\n```\n\n----------------------------------------\n\nTITLE: FTP Connection Configuration\nDESCRIPTION: Shows complete FTP connection configuration options including hostname, credentials, port, and debug settings.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/ftp.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('ftp');\n\n$config['hostname'] = 'ftp.example.com';\n$config['username'] = 'your-username';\n$config['password'] = 'your-password';\n$config['port']     = 21;\n$config['passive']  = FALSE;\n$config['debug']    = TRUE;\n\n$this->ftp->connect($config);\n```\n\n----------------------------------------\n\nTITLE: Handling Hex-encoded Encryption Keys\nDESCRIPTION: Demonstrates converting binary encryption keys to hex format for storage and back to binary for usage.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n// Get a hex-encoded representation of the key:\n$key = bin2hex($this->encryption->create_key(16));\n\n// Put the same value in your config with hex2bin(),\n// so that it is still passed as binary to the library:\n$config['encryption_key'] = hex2bin(<your hex-encoded key>);\n```\n\n----------------------------------------\n\nTITLE: Using call_function() method in CodeIgniter\nDESCRIPTION: Demonstrates how to call PHP database functions that aren't natively included in CodeIgniter using the call_function() method. The function name is provided without the database prefix as CodeIgniter adds it automatically based on the current database driver.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/call_function.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->db->call_function('get_client_info');\n```\n\n----------------------------------------\n\nTITLE: Getting Directory Information with get_dir_file_info() Function\nDESCRIPTION: Shows how to get an array containing information about files in a directory including filenames, sizes, dates, and permissions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/file_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$models_info = get_dir_file_info(APPPATH.'models/');\n```\n\n----------------------------------------\n\nTITLE: Deleting Files and Directories with delete_files() Function\nDESCRIPTION: Shows how to delete all files and subdirectories within a specified path by setting the second parameter to TRUE.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/file_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\ndelete_files('./path/to/directory/', TRUE);\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Write Mode with write_file() Function\nDESCRIPTION: Shows how to use the optional third parameter of write_file() to set a custom write mode when opening the file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/file_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nwrite_file('./path/to/file.php', $data, 'r+');\n```\n\n----------------------------------------\n\nTITLE: Using show_error() Function in CodeIgniter\nDESCRIPTION: The show_error() function displays error messages using the appropriate error template based on execution context. It allows specifying the error message, HTTP status code, and an optional heading.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nshow_error($message, $status_code, $heading = 'An Error Was Encountered')\n```\n\n----------------------------------------\n\nTITLE: Validating IP Addresses in CodeIgniter\nDESCRIPTION: Validates an IP address and returns TRUE if valid, FALSE if not. Can optionally specify IP protocol format (IPv4 or IPv6). The default checks for both formats.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/input.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nif ( ! $this->input->valid_ip($ip))\n{\n\techo 'Not Valid';\n}\nelse\n{\n\techo 'Valid';\n}\n```\n\n----------------------------------------\n\nTITLE: Advanced Method Remapping with Parameter Passing in CodeIgniter\nDESCRIPTION: An advanced _remap() implementation that handles method calls with parameters. It uses call_user_func_array() to emulate CodeIgniter's default routing behavior.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\npublic function _remap($method, $params = array())\n{\n\t$method = 'process_'.$method;\n\tif (method_exists($this, $method))\n\t{\n\t\treturn call_user_func_array(array($this, $method), $params);\n\t}\n\tshow_404();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Multiple CodeIgniter Libraries in PHP\nDESCRIPTION: Shows how to load multiple CodeIgniter libraries simultaneously by passing an array of library names to the load method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/libraries.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library(array('email', 'table'));\n```\n\n----------------------------------------\n\nTITLE: Downloading String Data as a File in CodeIgniter\nDESCRIPTION: Example showing how to force a download of a string as a text file. This creates a file with specified content to be downloaded by the user.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/download_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$data = 'Here is some text!';\n$name = 'mytext.txt';\nforce_download($name, $data);\n```\n\n----------------------------------------\n\nTITLE: Anchor Link Generation\nDESCRIPTION: Shows how to create HTML anchor links with various attributes using the anchor() function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\necho anchor('news/local/123', 'My News', 'title=\"News title\"');\necho anchor('news/local/123', 'My News', array('title' => 'The best news!'));\necho anchor('', 'Click here');\n```\n\n----------------------------------------\n\nTITLE: Using Query Bindings with Arrays for IN Clauses in CodeIgniter\nDESCRIPTION: Shows how to use query bindings with arrays, which are automatically transformed into SQL IN sets.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$sql = \"SELECT * FROM some_table WHERE id IN ? AND status = ? AND author = ?\";\n$this->db->query($sql, array(array(3, 6), 'live', 'Rick'));\n```\n\n----------------------------------------\n\nTITLE: Using show_404() Function in CodeIgniter\nDESCRIPTION: The show_404() function displays a 404 error message when a page isn't found. It uses the appropriate error template based on execution context and can optionally log the error.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nshow_404($page = '', $log_error = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Generating a Table from a Database Query Result in CodeIgniter\nDESCRIPTION: Demonstrates how to create an HTML table from a database query result using the Table class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/table.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('table');\n\n$query = $this->db->query('SELECT * FROM my_table');\n\necho $this->table->generate($query);\n```\n\n----------------------------------------\n\nTITLE: Marking multiple items as tempdata with different expiry in CodeIgniter\nDESCRIPTION: This snippet shows how to mark multiple session items as tempdata with different expiry times using the `mark_as_temp()` method. The expiry time is specified in seconds for each item.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_21\n\nLANGUAGE: php\nCODE:\n```\n\"// 'item' will be erased after 300 seconds, while 'item2'\n\\t// will do so after only 240 seconds\n\\t$this->session->mark_as_temp(array(\n\\t\\t'item'\\t=> 300,\n\\t\\t'item2'\\t=> 240\n\\t));\"\n```\n\n----------------------------------------\n\nTITLE: Input Stream Access with Key in CodeIgniter\nDESCRIPTION: Demonstrates accessing form-encoded input stream data with optional XSS filtering.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/input.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->input->input_stream('key');\n$this->input->input_stream('key', TRUE); // XSS Clean\n$this->input->input_stream('key', FALSE); // No XSS filter\n```\n\n----------------------------------------\n\nTITLE: Implementing a Custom Session Driver in CodeIgniter PHP\nDESCRIPTION: Template class for creating a custom session driver in CodeIgniter by extending the CI_Session_driver class and implementing the SessionHandlerInterface. This shows the required methods that need to be implemented for a functional custom session driver.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_41\n\nLANGUAGE: php\nCODE:\n```\nclass CI_Session_dummy_driver extends CI_Session_driver implements SessionHandlerInterface\n{\n\n\tpublic function __construct(&$params)\n\t{\n\t\t// DO NOT forget this\n\t\tparent::__construct($params);\n\n\t\t// Configuration & other initializations\n\t}\n\n\tpublic function open($save_path, $name)\n\t{\n\t\t// Initialize storage mechanism (connection)\n\t}\n\n\tpublic function read($session_id)\n\t{\n\t\t// Read session data (if exists), acquire locks\n\t}\n\n\tpublic function write($session_id, $session_data)\n\t{\n\t\t// Create / update session data (it might not exist!)\n\t}\n\n\tpublic function close()\n\t{\n\t\t// Free locks, close connections / streams / etc.\n\t}\n\n\tpublic function destroy($session_id)\n\t{\n\t\t// Call close() method & destroy data for current session (order may differ)\n\t}\n\n\tpublic function gc($maxlifetime)\n\t{\n\t\t// Erase data for expired sessions\n\t}\n\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Output Buffer in CodeIgniter\nDESCRIPTION: Demonstrates how to manually retrieve any output that has been sent for storage in the output class using the get_output method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n$string = $this->output->get_output();\n```\n\n----------------------------------------\n\nTITLE: Migration Controller Implementation in CodeIgniter\nDESCRIPTION: Controller class example showing how to execute migrations using the migration library. Includes error handling for failed migrations.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/migration.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nclass Migrate extends CI_Controller\n{\n\n\tpublic function index()\n\t{\n\t\t$this->load->library('migration');\n\n\t\tif ($this->migration->current() === FALSE)\n\t\t{\n\t\t\tshow_error($this->migration->error_string());\n\t\t}\n\t}\n\n}\n```\n\n----------------------------------------\n\nTITLE: Generating SQL Update Strings in CodeIgniter\nDESCRIPTION: Shows how to build properly formatted SQL UPDATE statements using an associative array of data and a WHERE clause. Values are automatically escaped for query safety.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/helpers.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$data = array('name' => $name, 'email' => $email, 'url' => $url);\n\n$where = \"author_id = 1 AND status = 'active'\";\n\n$str = $this->db->update_string('table_name', $data, $where);\n```\n\n----------------------------------------\n\nTITLE: Extending Input Class with Constructor in CodeIgniter PHP\nDESCRIPTION: Example showing how to properly extend a core CodeIgniter class while maintaining the parent constructor functionality.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/core_classes.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nclass MY_Input extends CI_Input {\n\n    public function __construct()\n    {\n        parent::__construct();\n        // Your own constructor code\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using has_userdata() to Check for Session Data\nDESCRIPTION: Shows how to use CodeIgniter's has_userdata() method to check if a specific item exists in the session data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$this->session->has_userdata('some_name');\n```\n\n----------------------------------------\n\nTITLE: Initializing CI_Encryption Library in PHP\nDESCRIPTION: This snippet demonstrates how to initialize the CI_Encryption library with specific configuration parameters such as mode. Dependencies include the CodeIgniter framework. Key parameters input include an associative array of configuration options.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\n$this->encryption->initialize(\n    array('mode' => 'ctr')\n);\n```\n\n----------------------------------------\n\nTITLE: Loading a View in a CodeIgniter Controller\nDESCRIPTION: Shows how to load a view file named 'blogview' from within a CodeIgniter controller class named 'Blog'. This demonstrates the basic method of displaying a view in CodeIgniter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/views.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nclass Blog extends CI_Controller {\n\n\tpublic function index()\n\t{\n\t\t$this->load->view('blogview');\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Setting ZIP Compression Level in CodeIgniter\nDESCRIPTION: Shows how to set the compression level for the ZIP file, with values ranging from 0 (no compression) to 9 (maximum compression).\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->zip->compression_level = 0;\n```\n\n----------------------------------------\n\nTITLE: Marking Single Item as Flashdata in CodeIgniter\nDESCRIPTION: Shows how to mark an existing session variable as flashdata, which will only be available for the next request and then automatically cleared.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$this->session->mark_as_flash('item');\n```\n\n----------------------------------------\n\nTITLE: Loading Library with Custom Object Name\nDESCRIPTION: Shows how to load a library and assign it to a custom object name.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/loader.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('calendar', NULL, 'my_calendar');\n\n// Calendar class is now accessed using:\n$this->my_calendar\n```\n\n----------------------------------------\n\nTITLE: Marking and Measuring Execution Time in CodeIgniter PHP\nDESCRIPTION: This snippet demonstrates how to use the Benchmark class to mark start and end points, and then measure the elapsed time between them. It shows basic usage with arbitrary marker names.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/benchmark.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->benchmark->mark('code_start');\n\n// Some code happens here\n\n$this->benchmark->mark('code_end');\n\necho $this->benchmark->elapsed_time('code_start', 'code_end');\n```\n\n----------------------------------------\n\nTITLE: Loading View with Return Value\nDESCRIPTION: Demonstrates loading a view file and returning its content as a string instead of sending to browser.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/loader.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$string = $this->load->view('myfile', '', TRUE);\n```\n\n----------------------------------------\n\nTITLE: Adding an ORDER BY Clause - PHP\nDESCRIPTION: Adds an ORDER BY clause to a query to specify the ordering of result rows. The method returns a CI_DB_query_builder instance to support method chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_33\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: order_by($orderby[, $direction = ''[, $escape = NULL]])\n\n\t\t:param string $orderby: Field to order by\n\t\t:param string $direction: Order direction (ASC, DESC, random)\n\t\t:param bool $escape: Whether to escape values\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds an ORDER BY clause to a query.\n```\n\n----------------------------------------\n\nTITLE: Setting Flashdata with set_flashdata() in CodeIgniter\nDESCRIPTION: Demonstrates the simplified method of creating flashdata in a single step using set_flashdata() to create temporary session data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n$this->session->set_flashdata('item', 'value');\n```\n\n----------------------------------------\n\nTITLE: Example of Using log_message() in CodeIgniter\nDESCRIPTION: This example demonstrates how to use the log_message() function to log different types of messages based on conditions. It shows logging error, debug, and info messages in different scenarios.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nif ($some_var == '')\n{\n\tlog_message('error', 'Some variable did not contain a value.');\n}\nelse\n{\n\tlog_message('debug', 'Some variable was correctly set');\n}\n\nlog_message('info', 'The purpose of some variable is to provide some value.');\n```\n\n----------------------------------------\n\nTITLE: Implementing the View Method in Pages Controller\nDESCRIPTION: Complete implementation of the view method that checks if a page exists, prepares data for the view, and loads multiple view templates with data. It handles 404 errors when pages don't exist.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/static_pages.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\npublic function view($page = 'home')\n{\n        if ( ! file_exists(APPPATH.'views/pages/'.$page.'.php'))\n\t{\n\t\t// Whoops, we don't have a page for that!\n\t\tshow_404();\n\t}\n\n\t$data['title'] = ucfirst($page); // Capitalize the first letter\n\n\t$this->load->view('templates/header', $data);\n\t$this->load->view('pages/'.$page, $data);\n\t$this->load->view('templates/footer', $data);\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Config Items\nDESCRIPTION: Shows how to retrieve configuration items using the item() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/config.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$this->config->item('item_name');\n```\n\n----------------------------------------\n\nTITLE: Retrieving all tempdata in CodeIgniter\nDESCRIPTION: This snippet shows how to retrieve all existing tempdata using the `$this->session->tempdata()` method without any parameters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_27\n\nLANGUAGE: php\nCODE:\n```\n\"$this->session->tempdata();\"\n```\n\n----------------------------------------\n\nTITLE: Adding a HAVING NOT IN Clause - PHP\nDESCRIPTION: Creates a HAVING clause that checks if a specified field's value is not within a given array of values. It returns a DB_query_builder instance to continue method chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_31\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: having_not_in([$key[, array $values[, $escape = NULL]]])\n\n\t\t:param string $key: Field to search\n\t\t:param array $values: Values to match\n\t\t:param bool $escape: Whether to escape values\n\t\t:returns: DB_query_builder instance\n\t\t:rtype: object\n\n\t\tGenerates a HAVING field NOT IN('item', 'item') SQL query, joined with 'AND' if appropriate.\n```\n\n----------------------------------------\n\nTITLE: Setting HTTP Status Headers in CodeIgniter\nDESCRIPTION: The set_status_header() function allows manual setting of HTTP response status codes. It accepts a status code and an optional custom message to accompany the status code.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nset_status_header(401);\n// Sets the header as:  Unauthorized\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Class with CodeIgniter Integration\nDESCRIPTION: Shows how to create a custom class that uses get_instance() in the constructor to access the CodeIgniter super-object. This approach allows methods within the class to use CodeIgniter's resources without repeatedly calling get_instance().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/ancillary_classes.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nclass Example {\n\n\tprotected $CI;\n\n\t// We'll use a constructor, as you can't directly call a function\n\t// from a property definition.\n\tpublic function __construct()\n\t{\n\t\t// Assign the CodeIgniter super-object\n\t\t$this->CI =& get_instance();\n\t}\n\n\tpublic function foo()\n\t{\n\t\t$this->CI->load->helper('url');\n\t\tredirect();\n\t}\n\n\tpublic function bar()\n\t{\n\t\t$this->CI->config->item('base_url');\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Content Type with Character Set in CodeIgniter\nDESCRIPTION: Shows how to set both the content type and character set by passing a second argument to the set_content_type method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$this->output->set_content_type('css', 'utf-8');\n```\n\n----------------------------------------\n\nTITLE: FTP Directory Mirroring\nDESCRIPTION: Example of mirroring a local directory structure to a remote FTP server.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/ftp.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('ftp');\n\n$config['hostname'] = 'ftp.example.com';\n$config['username'] = 'your-username';\n$config['password'] = 'your-password';\n$config['debug']\t= TRUE;\n\n$this->ftp->connect($config);\n\n$this->ftp->mirror('/path/to/myfolder/', '/public_html/myfolder/');\n\n$this->ftp->close();\n```\n\n----------------------------------------\n\nTITLE: Adding Single Files to ZIP Archive in CodeIgniter\nDESCRIPTION: Demonstrates how to add individual files with custom content to a ZIP archive using the add_data method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$name = 'mydata1.txt';\n$data = 'A Data String!';\n$this->zip->add_data($name, $data);\n\n$name = 'mydata2.txt';\n$data = 'Another Data String!';\n$this->zip->add_data($name, $data);\n```\n\n----------------------------------------\n\nTITLE: Result Navigation Methods in PHP - CodeIgniter\nDESCRIPTION: Methods for navigating through result sets with options for return type format.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nnext_row([$type = 'object'])\n```\n\nLANGUAGE: php\nCODE:\n```\nprevious_row([$type = 'object'])\n```\n\nLANGUAGE: php\nCODE:\n```\nfirst_row([$type = 'object'])\n```\n\nLANGUAGE: php\nCODE:\n```\nlast_row([$type = 'object'])\n```\n\n----------------------------------------\n\nTITLE: Random String Generation Example\nDESCRIPTION: Demonstrates how to generate a random alphanumeric string of specified length using the random_string function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/string_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho random_string('alnum', 16);\n```\n\n----------------------------------------\n\nTITLE: Converting MySQL Timestamp to UNIX Timestamp\nDESCRIPTION: Example of using mysql_to_unix() function to convert a MySQL timestamp to a UNIX timestamp. Takes MySQL format (YYYYMMDDHHMMSS) and returns seconds since Unix epoch.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$unix = mysql_to_unix('20061124092345');\n```\n\n----------------------------------------\n\nTITLE: Escaping Data for LIKE Conditions in CodeIgniter\nDESCRIPTION: Shows how to properly escape strings for LIKE conditions to handle wildcard characters using escape_like_str().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$search = '20% raise'; \n$sql = \"SELECT id FROM table WHERE column LIKE '%\" .\n    $this->db->escape_like_str($search).\"%' ESCAPE '!'\";\n```\n\n----------------------------------------\n\nTITLE: Setting Output Manually in CodeIgniter\nDESCRIPTION: Demonstrates how to manually set the final output string using the set_output method, which should be called at the end of a controller method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$this->output->set_output($data);\n```\n\n----------------------------------------\n\nTITLE: Adding Attributes to Pagination Links\nDESCRIPTION: Demonstrates how to add custom attributes to pagination links, such as CSS classes or other HTML attributes\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/pagination.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$config['attributes'] = array('class' => 'myclass');\n$config['attributes']['rel'] = FALSE;\n```\n\n----------------------------------------\n\nTITLE: Adding a GROUP BY Clause - PHP\nDESCRIPTION: This method enables the addition of a GROUP BY clause to a query, allowing grouping of result sets. It returns a CI_DB_query_builder instance to facilitate further chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_32\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: group_by($by[, $escape = NULL])\n\n\t\t:param mixed $by: Field(s) to group by\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds a GROUP BY clause to a query.\n```\n\n----------------------------------------\n\nTITLE: Replacing Data in a Table - PHP\nDESCRIPTION: This method compiles and executes a REPLACE statement to either insert or update records in a specified table. It returns TRUE on success or FALSE on failure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_43\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: replace([$table = ''[, $set = NULL]])\n\n\t\t:param string $table: Table name to replace data in\n\t\t:param array $set: Associative array of field/value pairs\n\t\t:returns: TRUE on success, FALSE on failure\n\t\t:rtype: bool\n\n\t\tCompiles and executes a REPLACE statement.\n```\n\n----------------------------------------\n\nTITLE: Routing with Static Parameters in CodeIgniter\nDESCRIPTION: Example showing how to route a specific URL pattern to a controller with hardcoded parameters. This maps 'blog/joe' to the blogs controller with user ID 34.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$route['blog/joe'] = 'blogs/users/34';\n```\n\n----------------------------------------\n\nTITLE: Destroying a session in CodeIgniter using sess_destroy()\nDESCRIPTION: This snippet shows how to destroy the current session using the CodeIgniter's `sess_destroy()` method. All session data will be lost.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_31\n\nLANGUAGE: php\nCODE:\n```\n\"$this->session->sess_destroy();\"\n```\n\n----------------------------------------\n\nTITLE: HTML Template with Variable Pairs for Iteration in CodeIgniter\nDESCRIPTION: Example of an HTML template using variable pairs that will be repeated based on the data provided, allowing for iteration through multiple entries.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<html lang=\"en\">\n\t<head>\n\t\t<title>{blog_title}</title>\n\t</head>\n\t<body>\n\t\t<h3>{blog_heading}</h3>\n\n\t{blog_entries}\n\t\t<h5>{title}</h5>\n\t\t<p>{body}</p>\n\t{/blog_entries}\n\n\t</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Displaying Total Execution Time in CodeIgniter PHP View\nDESCRIPTION: This code shows how to display the total execution time of a CodeIgniter application in a view file. It can be used as PHP code or as a pseudo-variable.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/benchmark.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n<?php echo $this->benchmark->elapsed_time();?>\n```\n\nLANGUAGE: PHP\nCODE:\n```\n{elapsed_time}\n```\n\n----------------------------------------\n\nTITLE: Switching Databases in CodeIgniter\nDESCRIPTION: This code demonstrates how to switch to a different database on the same connection in CodeIgniter using the db_select() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->db_select($database2_name);\n```\n\n----------------------------------------\n\nTITLE: Using print_debugger() for Email Troubleshooting\nDESCRIPTION: Shows how to use print_debugger() method to output debugging information for an email, with the option to specify which parts of the email to include.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n// You need to pass FALSE while sending in order for the email data\n// to not be cleared - if that happens, print_debugger() would have\n// nothing to output.\n$this->email->send(FALSE);\n\n// Will only print the email headers, excluding the message subject and body\n$this->email->print_debugger(array('headers'));\n```\n\n----------------------------------------\n\nTITLE: Attaching File from URL in Email\nDESCRIPTION: Demonstrates attaching a file from a URL to an email using the attach() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$this->email->attach('http://example.com/filename.pdf');\n```\n\n----------------------------------------\n\nTITLE: Creating News_model Class in CodeIgniter\nDESCRIPTION: Creates a basic News model class that extends CI_Model and loads the database library in the constructor for database operations.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/news_section.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nclass News_model extends CI_Model {\n\n\tpublic function __construct()\n\t{\n\t\t$this->load->database();\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Deriving Keys with HKDF in CI_Encryption using PHP\nDESCRIPTION: This snippet demonstrates deriving a stronger key from input key material using the hkdf method. It mentions usage of SHA-2 family and RFC 5869 standards with configurations like input key, digest algorithm, salt, and output length.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_12\n\nLANGUAGE: PHP\nCODE:\n```\n$hmac_key = $this->encryption->hkdf(\n    $key,\n    'sha512',\n    NULL,\n    NULL,\n    'authentication'\n);\n```\n\n----------------------------------------\n\nTITLE: Using set_checkbox() with HTML Checkboxes\nDESCRIPTION: Shows how to use the set_checkbox() helper function to maintain checked state of checkboxes after form submission.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" name=\"mycheck\" value=\"1\" <?php echo set_checkbox('mycheck', '1'); ?> />\n<input type=\"checkbox\" name=\"mycheck\" value=\"2\" <?php echo set_checkbox('mycheck', '2'); ?> />\n```\n\n----------------------------------------\n\nTITLE: Setting Up News Section Routes in CodeIgniter\nDESCRIPTION: Route configuration that handles news-specific URLs and directs them to the appropriate controller methods. Includes a route for individual news items using wildcards.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/news_section.rst#2025-04-16_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\n$route['news/(:any)'] = 'news/view/$1';\n$route['news'] = 'news';\n$route['(:any)'] = 'pages/view/$1';\n$route['default_controller'] = 'pages/view';\n```\n\n----------------------------------------\n\nTITLE: Initializing the Zip Class in CodeIgniter\nDESCRIPTION: Shows how to load the Zip library in a CodeIgniter controller and access it through the class property.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('zip');\n```\n\nLANGUAGE: php\nCODE:\n```\n$this->zip\n```\n\n----------------------------------------\n\nTITLE: Creating Image Thumbnail in CodeIgniter\nDESCRIPTION: Demonstrates how to configure and create an image thumbnail using the image library. Sets parameters for size, aspect ratio, and source image location.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$config['image_library'] = 'gd2';\n$config['source_image']\t= '/path/to/image/mypic.jpg';\n$config['create_thumb'] = TRUE;\n$config['maintain_ratio'] = TRUE;\n$config['width']\t = 75;\n$config['height']\t= 50;\n\n$this->load->library('image_lib', $config); \n\n$this->image_lib->resize();\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Link Tags with link_tag() Function\nDESCRIPTION: Examples of using the link_tag() function to create HTML link tags for stylesheets and other resources with various attributes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\necho link_tag('css/mystyles.css');\n// gives <link href=\"http://site.com/css/mystyles.css\" rel=\"stylesheet\" type=\"text/css\" />\n```\n\nLANGUAGE: php\nCODE:\n```\necho link_tag('favicon.ico', 'shortcut icon', 'image/ico');\n// <link href=\"http://site.com/favicon.ico\" rel=\"shortcut icon\" type=\"image/ico\" />\n```\n\nLANGUAGE: php\nCODE:\n```\necho link_tag('feed', 'alternate', 'application/rss+xml', 'My RSS Feed');\n// <link href=\"http://site.com/feed\" rel=\"alternate\" type=\"application/rss+xml\" title=\"My RSS Feed\" />\n```\n\nLANGUAGE: php\nCODE:\n```\n$link = array(\n\t'href'\t=> 'css/printer.css',\n\t'rel'\t=> 'stylesheet',\n\t'type'\t=> 'text/css',\n\t'media'\t=> 'print'\n);\n\necho link_tag($link);\n// <link href=\"http://site.com/css/printer.css\" rel=\"stylesheet\" type=\"text/css\" media=\"print\" />\n```\n\n----------------------------------------\n\nTITLE: Escaping Any Data Type in SQL Queries with CodeIgniter\nDESCRIPTION: Demonstrates using escape_str() to escape data regardless of type. Unlike escape(), this doesn't add single quotes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$sql = \"INSERT INTO table (title) VALUES('\".$this->db->escape_str($title).\"')\";\n```\n\n----------------------------------------\n\nTITLE: Creating Form Labels in CodeIgniter PHP\nDESCRIPTION: Examples of generating HTML label elements with custom attributes using form_label() helper function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\necho form_label('What is your Name', 'username');\n```\n\nLANGUAGE: php\nCODE:\n```\n$attributes = array(\n    'class' => 'mycustomclass',\n    'style' => 'color: #000;'\n);\n\necho form_label('What is your Name', 'username', $attributes);\n```\n\n----------------------------------------\n\nTITLE: Group By and Distinct Operations\nDESCRIPTION: Shows how to use GROUP BY and DISTINCT clauses in CodeIgniter queries, including single and multiple column grouping.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$this->db->group_by(\"title\"); // Produces: GROUP BY title\n\n$this->db->group_by(array(\"title\", \"date\")); // Produces: GROUP BY title, date\n\n$this->db->distinct();\n$this->db->get('table'); // Produces: SELECT DISTINCT * FROM table\n```\n\n----------------------------------------\n\nTITLE: Using Query Builder for Data Insertion in CodeIgniter\nDESCRIPTION: Shows how to use the Query Builder pattern to insert data into a database table. The method automatically handles value escaping and SQL generation.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$data = array(\n\t'title' => $title,\n\t'name' => $name,\n\t'date' => $date\n);\n\n$this->db->insert('mytable', $data);  // Produces: INSERT INTO mytable (title, name, date) VALUES ('{$title}', '{$name}', '{$date}')\n```\n\n----------------------------------------\n\nTITLE: Changing Database Prefix Programmatically in CodeIgniter\nDESCRIPTION: Demonstrates how to change the database prefix programmatically without creating a new connection using set_dbprefix().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$this->db->set_dbprefix('newprefix_');\n$this->db->dbprefix('tablename'); // outputs newprefix_tablename\n```\n\n----------------------------------------\n\nTITLE: Creating News Index View in CodeIgniter\nDESCRIPTION: View template for displaying a list of news items, including title, text content, and a link to the full article. Demonstrates PHP mixed with HTML in CodeIgniter views.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/news_section.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n<h2><?php echo $title; ?></h2>\n\n<?php foreach ($news as $news_item): ?>\n\n\t<h3><?php echo $news_item['title']; ?></h3>\n\t<div class=\"main\">\n\t\t<?php echo $news_item['text']; ?>\n\t</div>\n\t<p><a href=\"<?php echo site_url('news/'.$news_item['slug']); ?>\">View article</a></p>\n\n<?php endforeach; ?>\n```\n\n----------------------------------------\n\nTITLE: Configuring Routes for News Creation in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to configure routes in CodeIgniter's routes.php file to handle news creation and viewing. It ensures that 'create' is treated as a method rather than a news item slug.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/create_news_items.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$route['news/create'] = 'news/create';\n$route['news/(:any)'] = 'news/view/$1';\n$route['news'] = 'news';\n$route['(:any)'] = 'pages/view/$1';\n$route['default_controller'] = 'pages/view';\n```\n\n----------------------------------------\n\nTITLE: Formatting Time Difference with timespan() Function\nDESCRIPTION: Example of using timespan() function to display the difference between timestamps in a human-readable format (years, months, weeks, etc.), with control over the number of units to display.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$post_date = '1079621429';\n$now = time();\n$units = 2;\necho timespan($post_date, $now, $units);\n```\n\n----------------------------------------\n\nTITLE: Replacing a Native CodeIgniter Library\nDESCRIPTION: Shows how to replace a native CodeIgniter library with a custom version. This requires using the exact same class name as the native library, including the CI_ prefix.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nclass CI_Email {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Image Tags with img() Function\nDESCRIPTION: Examples of using the img() function to create HTML image tags with various configurations and attributes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\necho img('images/picture.jpg'); // gives <img src=\"http://site.com/images/picture.jpg\" />\n```\n\nLANGUAGE: php\nCODE:\n```\necho img('images/picture.jpg', TRUE); // gives <img src=\"http://site.com/index.php/images/picture.jpg\" alt=\"\" />\n```\n\nLANGUAGE: php\nCODE:\n```\n$image_properties = array(\n\t'src' \t=> 'images/picture.jpg',\n\t'alt' \t=> 'Me, demonstrating how to eat 4 slices of pizza at one time',\n\t'class' => 'post_images',\n\t'width' => '200',\n\t'height'=> '200',\n\t'title' => 'That was quite a night',\n\t'rel' \t=> 'lightbox'\n);\n\nimg($image_properties);\n// <img src=\"http://site.com/index.php/images/picture.jpg\" alt=\"Me, demonstrating how to eat 4 slices of pizza at one time\" class=\"post_images\" width=\"200\" height=\"200\" title=\"That was quite a night\" rel=\"lightbox\" />\n```\n\n----------------------------------------\n\nTITLE: OOP Implementation for CodeIgniter Library with Super-Object Access\nDESCRIPTION: A full example of implementing a library using OOP principles, storing the CodeIgniter super-object as a property. This approach makes the super-object available to all class methods.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nclass Example_library {\n\n\tprotected $CI;\n\n\t// We'll use a constructor, as you can't directly call a function\n\t// from a property definition.\n\tpublic function __construct()\n\t{\n\t\t// Assign the CodeIgniter super-object\n\t\t$this->CI =& get_instance();\n\t}\n\n\tpublic function foo()\n\t{\n\t\t$this->CI->load->helper('url');\n\t\tredirect();\n\t}\n\n\tpublic function bar()\n\t{\n\t\techo $this->CI->config->item('base_url');\n\t}\n\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Hooks for Same Hook Point in CodeIgniter\nDESCRIPTION: Example of defining multiple hooks for the same hook point using array syntax to execute multiple scripts in sequence.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/hooks.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$hook['pre_controller'][] = array(\n\t'class'    => 'MyClass',\n\t'function' => 'MyMethod',\n\t'filename' => 'Myclass.php',\n\t'filepath' => 'hooks',\n\t'params'   => array('beer', 'wine', 'snacks')\n);\n\n$hook['pre_controller'][] = array(\n\t'class'    => 'MyOtherClass',\n\t'function' => 'MyOtherMethod',\n\t'filename' => 'Myotherclass.php',\n\t'filepath' => 'hooks',\n\t'params'   => array('red', 'yellow', 'blue')\n);\n```\n\n----------------------------------------\n\nTITLE: Using elements() Function with POST Data in CodeIgniter\nDESCRIPTION: This example shows a practical application of the elements() function with the $_POST array to safely update data in a model, preventing users from sending additional unwanted fields.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/array_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$this->load->model('post_model');\n$this->post_model->update(\n\telements(array('id', 'title', 'content'), $_POST)\n);\n```\n\n----------------------------------------\n\nTITLE: Database Transaction Status Check\nDESCRIPTION: Method to check active transaction state in Database Library.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_15\n\nLANGUAGE: PHP\nCODE:\n```\ntrans_active()\n```\n\n----------------------------------------\n\nTITLE: Loading Language Files\nDESCRIPTION: Examples of loading single and multiple language files in CodeIgniter\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/language.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$this->lang->load('filename', 'language');\n\n// Loading multiple files\n$this->lang->load(array('filename1', 'filename2'));\n```\n\n----------------------------------------\n\nTITLE: Error Handling for Image Processing\nDESCRIPTION: Shows how to handle and display errors that occur during image processing operations.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\necho $this->image_lib->display_errors();\n```\n\n----------------------------------------\n\nTITLE: Creating Meta Tags with meta() Function\nDESCRIPTION: Examples of using the meta() function to generate HTML meta tags with various configurations, including simple strings and complex arrays.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\necho meta('description', 'My Great site');\n// Generates:  <meta name=\"description\" content=\"My Great Site\" />\n```\n\nLANGUAGE: php\nCODE:\n```\necho meta('Content-type', 'text/html; charset=utf-8', 'equiv');\n// Note the third parameter.  Can be \"charset\", \"http-equiv\", \"name\" or \"property\"\n// Generates:  <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n```\n\nLANGUAGE: php\nCODE:\n```\necho meta(array('name' => 'robots', 'content' => 'no-cache'));\n// Generates:  <meta name=\"robots\" content=\"no-cache\" />\n```\n\nLANGUAGE: php\nCODE:\n```\n$meta = array(\n\tarray(\n\t\t'name' => 'robots',\n\t\t'content' => 'no-cache'\n\t),\n\tarray(\n\t\t'name' => 'description',\n\t\t'content' => 'My Great Site'\n\t),\n\tarray(\n\t\t'name' => 'keywords',\n\t\t'content' => 'love, passion, intrigue, deception'\n\t),\n\tarray(\n\t\t'name' => 'robots',\n\t\t'content' => 'no-cache'\n\t),\n\tarray(\n\t\t'name' => 'Content-Type',\n\t\t'type' => 'http-equiv',\n\t\t'content' => 'text/html; charset=utf-8'\n\t),\n\tarray(\n\t\t'name' => 'UTF-8',\n\t\t'type' => 'charset'\n\t)\n);\n\necho meta($meta);\n// Generates:\n// <meta name=\"robots\" content=\"no-cache\" />\n// <meta name=\"description\" content=\"My Great Site\" />\n// <meta name=\"keywords\" content=\"love, passion, intrigue, deception\" />\n// <meta name=\"robots\" content=\"no-cache\" />\n// <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n// <meta charset=\"UTF-8\" />\n```\n\n----------------------------------------\n\nTITLE: Converting URI Segments to Associative Array in PHP with CodeIgniter\nDESCRIPTION: This method converts URI segments into an associative array of key/value pairs. It allows setting an offset and default keys.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/uri.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nuri_to_assoc([$n = 3[, $default = array()]])\n```\n\n----------------------------------------\n\nTITLE: Using get_instance() to Access CodeIgniter Resources\nDESCRIPTION: Demonstrates how to assign the CodeIgniter object to a variable using get_instance() and then use it to access CodeIgniter's native resources like helpers, libraries, and configuration items.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/ancillary_classes.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$CI =& get_instance();\n\n$CI->load->helper('url');\n$CI->load->library('session');\n$CI->config->item('base_url');\n// etc.\n```\n\n----------------------------------------\n\nTITLE: Retrieving the Last Query in CodeIgniter\nDESCRIPTION: Demonstrates how to retrieve the last database query that was executed. This method returns the SQL query string, not the result. Requires the save_queries setting to be enabled in the database configuration.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/helpers.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$str = $this->db->last_query();\n```\n\n----------------------------------------\n\nTITLE: Initializing FTP Class in CodeIgniter\nDESCRIPTION: Shows how to load and initialize the FTP class in a CodeIgniter controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/ftp.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('ftp');\n```\n\n----------------------------------------\n\nTITLE: Multiple Benchmark Markers in CodeIgniter PHP\nDESCRIPTION: This example shows how to set multiple benchmark markers and measure elapsed time between different points. It demonstrates the flexibility of marker naming and multiple time measurements.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/benchmark.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$this->benchmark->mark('dog');\n\n// Some code happens here\n\n$this->benchmark->mark('cat');\n\n// More code happens here\n\n$this->benchmark->mark('bird');\n\necho $this->benchmark->elapsed_time('dog', 'cat');\necho $this->benchmark->elapsed_time('cat', 'bird');\necho $this->benchmark->elapsed_time('dog', 'bird');\n```\n\n----------------------------------------\n\nTITLE: Creating Unordered Lists with ul() Function\nDESCRIPTION: Examples of using the ul() function to generate HTML unordered lists from simple or multi-dimensional arrays with custom attributes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$list = array(\n\t'red',\n\t'blue',\n\t'green',\n\t'yellow'\n);\n\n$attributes = array(\n\t'class'\t=> 'boldlist',\n\t'id'\t=> 'mylist'\n);\n\necho ul($list, $attributes);\n```\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"boldlist\" id=\"mylist\">\n\t<li>red</li>\n\t<li>blue</li>\n\t<li>green</li>\n\t<li>yellow</li>\n</ul>\n```\n\nLANGUAGE: php\nCODE:\n```\n$attributes = array(\n\t'class'\t=> 'boldlist',\n\t'id'\t=> 'mylist'\n);\n\n$list = array(\n\t'colors'  => array(\n\t\t'red',\n\t\t'blue',\n\t\t'green'\n\t),\n\t'shapes'  => array(\n\t\t'round',\n\t\t'square',\n\t\t'circles' => array(\n\t\t\t'ellipse',\n\t\t\t'oval',\n\t\t\t'sphere'\n\t\t)\n\t),\n\t'moods'  => array(\n\t\t'happy',\n\t\t'upset' => array(\n\t\t\t'defeated' => array(\n\t\t\t\t'dejected',\n\t\t\t\t'disheartened',\n\t\t\t\t'depressed'\n\t\t\t),\n\t\t\t'annoyed',\n\t\t\t'cross',\n\t\t\t'angry'\n\t\t)\n\t)\n);\n\necho ul($list, $attributes);\n```\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"boldlist\" id=\"mylist\">\n\t<li>colors\n\t\t<ul>\n\t\t\t<li>red</li>\n\t\t\t<li>blue</li>\n\t\t\t<li>green</li>\n\t\t</ul>\n\t</li>\n\t<li>shapes\n\t\t<ul>\n\t\t\t<li>round</li>\n\t\t\t<li>suare</li>\n\t\t\t<li>circles\n\t\t\t\t<ul>\n\t\t\t\t\t<li>elipse</li>\n\t\t\t\t\t<li>oval</li>\n\t\t\t\t\t<li>sphere</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t</li>\n\t<li>moods\n\t\t<ul>\n\t\t\t<li>happy</li>\n\t\t\t<li>upset\n\t\t\t\t<ul>\n\t\t\t\t\t<li>defeated\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>dejected</li>\n\t\t\t\t\t\t\t<li>disheartened</li>\n\t\t\t\t\t\t\t<li>depressed</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>annoyed</li>\n\t\t\t\t\t<li>cross</li>\n\t\t\t\t\t<li>angry</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Fetching Config Items from Specific Index\nDESCRIPTION: Demonstrates retrieving config items from a specific config array index and alternative access methods.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/config.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$site_name = $this->config->item('site_name', 'blog_settings');\n\n// Alternative way:\n$blog_config = $this->config->item('blog_settings');\n$site_name = $blog_config['site_name'];\n```\n\n----------------------------------------\n\nTITLE: Initializing CI_Image_lib Class in PHP\nDESCRIPTION: Initializes the CI_Image_lib class for processing an image. It takes an optional array of image processing preferences and returns a boolean indicating success or failure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\ninitialize([$props = array()])\n```\n\n----------------------------------------\n\nTITLE: Loading Config File with Array Index\nDESCRIPTION: Shows how to load a config file into a specific array index to avoid naming collisions with other config files.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/config.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$this->config->load('blog_settings', TRUE);\n```\n\n----------------------------------------\n\nTITLE: Marking Multiple Items as Flashdata in CodeIgniter\nDESCRIPTION: Demonstrates how to mark multiple existing session variables as flashdata by passing an array of keys to mark_as_flash().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$this->session->mark_as_flash(array('item', 'item2'));\n```\n\n----------------------------------------\n\nTITLE: Setting Default Controller Route in CodeIgniter 3.0\nDESCRIPTION: Example of setting the default controller in CodeIgniter 3.0 routing configuration. In version 3, default controllers are applied per directory, meaning each subdirectory can have its own default controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_300.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$route['default_controller'] = 'main';\n```\n\n----------------------------------------\n\nTITLE: Custom Row Object Retrieval in PHP - CodeIgniter\nDESCRIPTION: Method to retrieve a result row as an instance of a specified class. Takes row index and class name parameters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\ncustom_row_object($n, $type)\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Controller in CodeIgniter\nDESCRIPTION: Example of setting the default controller that gets called when no URI segments are present. This defines the landing page of the application.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$route['default_controller'] = 'welcome';\n```\n\n----------------------------------------\n\nTITLE: DocBlock Style Class Documentation in PHP\nDESCRIPTION: Example of proper DocBlock style comments preceding a class declaration in CodeIgniter, which helps with IDE recognition and documentation.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n/**\n * Super Class\n *\n * @package\tPackage Name\n * @subpackage\tSubpackage\n * @category\tCategory\n * @author\tAuthor Name\n * @link\thttp://example.com\n */\nclass Super_class {\n```\n\n----------------------------------------\n\nTITLE: Creating Calendar Template with String Method\nDESCRIPTION: Example of creating a fully customized calendar template using the string method with pseudo-variables.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/calendar.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$prefs['template'] = '\n\t{table_open}<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">{/table_open}\n\t{heading_row_start}<tr>{/heading_row_start}\n\t{heading_previous_cell}<th><a href=\"{previous_url}\">&lt;&lt;</a></th>{/heading_previous_cell}\n\t{heading_title_cell}<th colspan=\"{colspan}\">{heading}</th>{/heading_title_cell}\n\t{heading_next_cell}<th><a href=\"{next_url}\">&gt;&gt;</a></th>{/heading_next_cell}\n\t{heading_row_end}</tr>{/heading_row_end}\n';\n\n$this->load->library('calendar', $prefs);\n\necho $this->calendar->generate();\n```\n\n----------------------------------------\n\nTITLE: Cropping an Image Using CI_Image_lib in PHP\nDESCRIPTION: Demonstrates how to crop an image using the CI_Image_lib class, including setting up the configuration and calling the crop method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$config['image_library'] = 'imagemagick';\n$config['library_path'] = '/usr/X11R6/bin/';\n$config['source_image'] = '/path/to/image/mypic.jpg';\n$config['x_axis'] = 100;\n$config['y_axis'] = 60;\n\n$this->image_lib->initialize($config); \n\nif ( ! $this->image_lib->crop())\n{\n    echo $this->image_lib->display_errors();\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Fields in a Table (Method 2) in CodeIgniter\nDESCRIPTION: This example shows how to retrieve field names from a query result object, useful when you've already executed a query.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query('SELECT * FROM some_table');\n\nforeach ($query->list_fields() as $field)\n{\n\techo $field;\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving HTTP Request Headers in CodeIgniter\nDESCRIPTION: Returns an array of HTTP request headers. Useful in non-Apache environments where apache_request_headers() is not supported. Optional XSS filtering can be applied.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/input.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$headers = $this->input->request_headers();\n```\n\n----------------------------------------\n\nTITLE: Converting GMT to Local Time with Timezone\nDESCRIPTION: Example of using gmt_to_local() function to convert a GMT timestamp to local time with specific timezone and daylight saving time settings.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$timestamp = 1140153693;\n$timezone  = 'UM8';\n$daylight_saving = TRUE;\necho gmt_to_local($timestamp, $timezone, $daylight_saving);\n```\n\n----------------------------------------\n\nTITLE: Displaying CI_Image_lib Errors in PHP\nDESCRIPTION: Shows how to display any errors that occurred during image processing using the CI_Image_lib class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\necho $this->image_lib->display_errors();\n```\n\n----------------------------------------\n\nTITLE: Removing Session Data with unset_userdata() in CodeIgniter\nDESCRIPTION: Demonstrates how to remove session data using CodeIgniter's unset_userdata() method with a single key parameter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$this->session->unset_userdata('some_name');\n```\n\n----------------------------------------\n\nTITLE: Creating CAPTCHA Database Table Schema in SQL\nDESCRIPTION: SQL schema for creating a database table to store CAPTCHA data including timestamps, IP addresses, and the generated word.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/captcha_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE captcha (  \n\tcaptcha_id bigint(13) unsigned NOT NULL auto_increment,  \n\tcaptcha_time int(10) unsigned NOT NULL,  \n\tip_address varchar(45) NOT NULL,  \n\tword varchar(20) NOT NULL,  \n\tPRIMARY KEY `captcha_id` (`captcha_id`),  \n\tKEY `word` (`word`)\n);\n```\n\n----------------------------------------\n\nTITLE: Form Declaration for File Upload in CodeIgniter\nDESCRIPTION: This HTML snippet demonstrates the correct form declaration required for file uploads in CodeIgniter. It uses the 'multipart/form-data' encoding type, which is essential for transferring files.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/file_uploading.rst#2025-04-16_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n\"<form method=\\\"post\\\" action=\\\"some_action\\\" enctype=\\\"multipart/form-data\\\" />\"\n```\n\n----------------------------------------\n\nTITLE: Passing URL Segments as Parameters in CodeIgniter\nDESCRIPTION: Example showing how to capture a URL segment and pass it as a parameter to a controller method. The $1 represents the captured numeric value from the URL.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$route['product/(:num)'] = 'catalog/product_lookup_by_id/$1';\n```\n\n----------------------------------------\n\nTITLE: Using element() Function in CodeIgniter Array Helper\nDESCRIPTION: These examples demonstrate how to use the element() function to fetch an item from an array. If the item doesn't exist, it returns NULL or a specified default value.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/array_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$array = array(\n\t'color'\t=> 'red',\n\t'shape'\t=> 'round',\n\t'size'\t=> ''\n);\n\necho element('color', $array); // returns \"red\"\necho element('size', $array, 'foobar'); // returns \"foobar\"\n```\n\n----------------------------------------\n\nTITLE: Adding an OR HAVING Clause - PHP\nDESCRIPTION: This method facilitates the addition of a HAVING clause to a query using OR for combining multiple conditions. It returns a CI_DB_query_builder instance for further method chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_29\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: or_having($key[, $value = NULL[, $escape = NULL]])\n\n\t\t:param mixed $key: Field name or array of field/value pairs\n\t\t:param string $value: Value if $key is an identifier\n\t\t:param string $escape: Whether to escape values\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds a HAVING clause to a query, separating multiple calls with OR.\n```\n\n----------------------------------------\n\nTITLE: Adding Existing Files to ZIP Archive in CodeIgniter\nDESCRIPTION: Demonstrates reading and compressing an existing file from the server into a ZIP archive and downloading it.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$path = '/path/to/photo.jpg';\n\n$this->zip->read_file($path);\n\n// Download the file to your desktop. Name it \"my_backup.zip\"\n$this->zip->download('my_backup.zip');\n```\n\n----------------------------------------\n\nTITLE: SELECT Query with Limit and Offset\nDESCRIPTION: Shows how to retrieve records with limit and offset parameters for pagination.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$query = $this->db->get('mytable', 10, 20);\n```\n\n----------------------------------------\n\nTITLE: Running a Unit Test in CodeIgniter PHP\nDESCRIPTION: Executes a unit test by providing the test result, expected result, an optional test name, and optional notes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/unit_testing.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$this->unit->run('test', 'expected result', 'test name', 'notes');\n```\n\n----------------------------------------\n\nTITLE: Using auto_typography Method in Typography Class\nDESCRIPTION: Formats text input into semantically correct HTML using the auto_typography method. It takes a string and returns it with formatted paragraphs, line breaks, quotes, apostrophes, dashes, ellipses, and spaces. An optional parameter reduces consecutive line breaks. Requires no specific dependencies.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/typography.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$string = $this->typography->auto_typography($string);\n```\n\nLANGUAGE: PHP\nCODE:\n```\n$string = $this->typography->auto_typography($string, TRUE);\n```\n\n----------------------------------------\n\nTITLE: CI_Session __set Magic Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::__set() which allows using object property syntax to set session data. This enables using $this->session->item = 'value' instead of $_SESSION['item'] = 'value' for setting session data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_62\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: __set($key, $value)\n\n\t:param\tstring\t$key: Session item key\n\t:param\tmixed\t$value: Value to assign to the session item key\n\t:returns:\tvoid\n\n\tA magic method that allows you to assign items to\n\t``$_SESSION`` by accessing them as ``$this->session``\n\tproperties::\n\n\t\t$this->session->foo = 'bar';\n\n\t\t// Results in:\n\t\t// $_SESSION['foo'] = 'bar';\n```\n\n----------------------------------------\n\nTITLE: Updating Session Unset Userdata Usage\nDESCRIPTION: Example showing the new way to unset multiple session userdata keys in CodeIgniter 3.0\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_300.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// Old\n$this->session->unset_userdata(array('item' => '', 'item2' => ''));\n\n// New\n$this->session->unset_userdata(array('item', 'item2'));\n```\n\n----------------------------------------\n\nTITLE: Using elements() Function in CodeIgniter Array Helper - Example 1\nDESCRIPTION: This example shows how to use the elements() function to fetch multiple items from an array. If an item doesn't exist, it's set to NULL.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/array_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$array = array(\n\t'color' => 'red',\n\t'shape' => 'round',\n\t'radius' => '10',\n\t'diameter' => '20'\n);\n\n$my_shape = elements(array('color', 'shape', 'height'), $array);\n```\n\n----------------------------------------\n\nTITLE: Initializing Encryption Library in CodeIgniter\nDESCRIPTION: Loads and initializes the Encryption library in a CodeIgniter controller using the library loader.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('encryption');\n```\n\n----------------------------------------\n\nTITLE: Redis Configuration Example\nDESCRIPTION: Configuration options for connecting to Redis server in CodeIgniter's cache implementation.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$config['host'] = '127.0.0.1';\n$config['password'] = NULL;\n$config['port'] = 6379;\n$config['timeout'] = 0;\n```\n\n----------------------------------------\n\nTITLE: Exporting Query Result as XML in CodeIgniter\nDESCRIPTION: Shows how to export a database query result as an XML file using the Database Utility Class, with custom configuration options.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->dbutil();\n\n$query = $this->db->query(\"SELECT * FROM mytable\");\n\n$config = array (\n\t'root'\t\t=> 'root',\n\t'element'\t=> 'element',\n\t'newline'\t=> \"\\n\",\n\t'tab'\t\t=> \"\\t\"\n);\n\necho $this->dbutil->xml_from_result($query, $config);\n```\n\n----------------------------------------\n\nTITLE: Setting Form Input Values in CodeIgniter PHP\nDESCRIPTION: Shows how to set default values for form inputs using set_value() helper function with HTML escaping options.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" name=\"quantity\" value=\"<?php echo set_value('quantity', '0'); ?>\" size=\"50\" />\n```\n\n----------------------------------------\n\nTITLE: Using Simplified Queries in CodeIgniter\nDESCRIPTION: Demonstrates the simple_query() method which is a simplified version of query() that doesn't return a result set or set the query timer. Returns TRUE/FALSE for write operations.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nif ($this->db->simple_query('YOUR QUERY'))\n{\n\techo \"Success!\";\n}\nelse\n{\n\techo \"Query failed!\";\n}\n```\n\n----------------------------------------\n\nTITLE: Using elements() Function with Custom Default Value in CodeIgniter\nDESCRIPTION: This example demonstrates how to use the elements() function with a custom default value for missing array elements.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/array_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$my_shape = elements(array('color', 'shape', 'height'), $array, 'foobar');\n```\n\n----------------------------------------\n\nTITLE: Creating Dropdown Menu with Extra Attributes in CodeIgniter PHP\nDESCRIPTION: Examples of creating select dropdown menus with additional attributes like id and onChange event handlers using form_dropdown() helper function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$js = 'id=\"shirts\" onChange=\"some_function();\"';\necho form_dropdown('shirts', $options, 'large', $js);\n```\n\nLANGUAGE: php\nCODE:\n```\n$js = array(\n    'id'       => 'shirts',\n    'onChange' => 'some_function();'\n);\necho form_dropdown('shirts', $options, 'large', $js);\n```\n\n----------------------------------------\n\nTITLE: Setting CodeIgniter Environment Variable\nDESCRIPTION: Configuration of the ENVIRONMENT constant in CodeIgniter for managing environment-specific settings and disabling development features in production.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/index.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nENVIRONMENT\n```\n\n----------------------------------------\n\nTITLE: Initializing Encryption Library with Custom Settings in PHP\nDESCRIPTION: Demonstrates how to initialize the Encryption library with custom cipher, mode, and key settings. This example changes the encryption algorithm to AES-256 in CTR mode.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$this->encryption->initialize(\n\tarray(\n\t\t'cipher' => 'aes-256',\n\t\t'mode' => 'ctr',\n\t\t'key' => '<a 32-character random string>'\n\t)\n);\n```\n\n----------------------------------------\n\nTITLE: Named Callable Rule for Error Messages in CodeIgniter\nDESCRIPTION: Examples showing how to assign a rule name to a callable validation rule (both model method and anonymous function) to allow setting specific error messages for these rules.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$this->form_validation->set_rules(\n\t'username', 'Username',\n\tarray(\n\t\t'required',\n\t\tarray('username_callable', array($this->users_model, 'valid_username'))\n\t)\n);\n```\n\n----------------------------------------\n\nTITLE: Adding tempdata to a session in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to add a session item and immediately mark it as tempdata with a specified expiry time. This is done by setting the session variable directly and then calling `mark_as_temp()`.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_22\n\nLANGUAGE: php\nCODE:\n```\n\"$_SESSION['item'] = 'value';\n\\t$this->session->mark_as_temp('item', 300); // Expire in 5 minutes\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Table from a Multi-dimensional Array in CodeIgniter\nDESCRIPTION: Shows how to generate an HTML table from a multi-dimensional array using the Table class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/table.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('table');\n\n$data = array(\n\tarray('Name', 'Color', 'Size'),\n\tarray('Fred', 'Blue', 'Small'),\n\tarray('Mary', 'Red', 'Large'),\n\tarray('John', 'Green', 'Medium')\t\n);\n\necho $this->table->generate($data);\n```\n\n----------------------------------------\n\nTITLE: Configuring Dynamic Base URL in CodeIgniter 3.0.3\nDESCRIPTION: PHP code snippet for dynamically setting the base_url configuration in CodeIgniter based on allowed domains and HTTP/HTTPS protocol. Implements domain validation and secure protocol detection.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_303.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$allowed_domains = array('domain1.tld', 'domain2.tld');\n$default_domain  = 'domain1.tld';\n\nif (in_array($_SERVER['HTTP_HOST'], $allowed_domains, TRUE))\n{\n\t$domain = $_SERVER['HTTP_HOST'];\n}\nelse\n{\n\t$domain = $default_domain;\n}\n\nif ( ! empty($_SERVER['HTTPS']))\n{\n\t$config['base_url'] = 'https://'.$domain;\n}\nelse\n{\n\t$config['base_url'] = 'http://'.$domain;\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Directory Mapping in CodeIgniter\nDESCRIPTION: This example shows the basic usage of the directory_map() function to create an array representation of a directory structure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/directory_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$map = directory_map('./mydirectory/');\n```\n\n----------------------------------------\n\nTITLE: Implementing get_news Method in News_model\nDESCRIPTION: Method to retrieve news from the database either as a complete collection or filtered by slug. Uses CodeIgniter's Query Builder for database operations.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/news_section.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\npublic function get_news($slug = FALSE)\n{\n\tif ($slug === FALSE)\n\t{\n\t\t$query = $this->db->get('news');\n\t\treturn $query->result_array();\n\t}\n\n\t$query = $this->db->get_where('news', array('slug' => $slug));\n\treturn $query->row_array();\n}\n```\n\n----------------------------------------\n\nTITLE: Using CI_TestCase Methods in PHP\nDESCRIPTION: Examples of custom CI_TestCase methods for configuring the testing environment, mocking objects, and working with the virtual file system.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/tests/README.md#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$this->ci_set_config($key, $val)\n\n$this->ci_instance($obj)\n\n$this->ci_instance_var($name, $val)\n\n$this->ci_core_class($name)\n\n$this->ci_set_core_class($name, $obj)\n\n$this->ci_vfs_mkdir($name, $root)\n\n$this->ci_vfs_create($file, $content, $root, $path)\n\n$this->ci_vfs_clone($path)\n\n$this->ci_vfs_path($path, $base)\n\n$this->helper($name)\n\n$this->lang($name)\n```\n\n----------------------------------------\n\nTITLE: Processing XML-RPC Server Requests with Blogger API\nDESCRIPTION: A complete example of an XML-RPC server method that processes a getUserInfo request using the Blogger API. Shows parameter validation, error handling, and response formatting.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/xmlrpc.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nclass My_blog extends CI_Controller {\n\n\tpublic function getUserInfo($request)\n\t{\n\t\t$username = 'smitty';\n\t\t$password = 'secretsmittypass';\n\n\t\t$this->load->library('xmlrpc');\n\n\t\t$parameters = $request->output_parameters();\n\n\t\tif ($parameters[1] != $username && $parameters[2] != $password)\n\t\t{\n\t\t\treturn $this->xmlrpc->send_error_message('100', 'Invalid Access');\n\t\t}\n\n\t\t$response = array(\n\t\t\tarray(\n\t\t\t\t'nickname'  => array('Smitty', 'string'),\n\t\t\t\t'userid'    => array('99', 'string'),\n\t\t\t\t'url'       => array('http://yoursite.com', 'string'),\n\t\t\t\t'email'     => array('jsmith@yoursite.com', 'string'),\n\t\t\t\t'lastname'  => array('Smith', 'string'),\n\t\t\t\t'firstname' => array('John', 'string')\n\t\t\t),\n                         'struct'\n\t\t);\n\n\t\treturn $this->xmlrpc->send_response($response);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Basic ZIP Archive Creation and Download in CodeIgniter\nDESCRIPTION: Demonstrates adding data to a ZIP file, archiving it to a server directory, and downloading it to the user's desktop.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$name = 'mydata1.txt';\n$data = 'A Data String!';\n\n$this->zip->add_data($name, $data);\n\n// Write the zip file to a folder on your server. Name it \"my_backup.zip\"\n$this->zip->archive('/path/to/directory/my_backup.zip');\n\n// Download the file to your desktop. Name it \"my_backup.zip\"\n$this->zip->download('my_backup.zip');\n```\n\n----------------------------------------\n\nTITLE: Protecting Database Identifiers in CodeIgniter\nDESCRIPTION: Shows how to protect table and field names with database-specific delimiters (like backticks in MySQL) using protect_identifiers().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$this->db->protect_identifiers('table_name');\n```\n\n----------------------------------------\n\nTITLE: Defining ENVIRONMENT Constant in CodeIgniter's index.php\nDESCRIPTION: This snippet shows how the ENVIRONMENT constant is defined in CodeIgniter's index.php file. It uses the $_SERVER['CI_ENV'] value if set, otherwise defaults to 'development'.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/environments.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\ndefine('ENVIRONMENT', isset($_SERVER['CI_ENV']) ? $_SERVER['CI_ENV'] : 'development');\n```\n\n----------------------------------------\n\nTITLE: Upload Success Page Template\nDESCRIPTION: Success page template that displays uploaded file details using a foreach loop to iterate through upload data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/file_uploading.rst#2025-04-16_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<html lang=\"en\">\n<head>\n<title>Upload Form</title>\n</head>\n<body>\n\n<h3>Your file was successfully uploaded!</h3>\n\n<ul>\n<?php foreach ($upload_data as $item => $value):?>\n<li><?php echo $item;?>: <?php echo $value;?></li>\n<?php endforeach; ?>\n</ul>\n\n<p><?php echo anchor('upload', 'Upload Another File!'); ?></p>\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Loading Language File in CodeIgniter Controller\nDESCRIPTION: Example showing how to load a custom language file in a controller to make its contents available for translation.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n$this->lang->load('file_name');\n```\n\n----------------------------------------\n\nTITLE: Controlling Iteration in Controller with View Fragments in CodeIgniter\nDESCRIPTION: Shows how to control the iteration in the controller instead of the view by using parse_string on a view fragment and building the final output.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$temp = '';\n$template1 = '<li><a href=\"{link}\">{title}</a></li>';\n$data1 = array(\n\tarray('title' => 'First Link', 'link' => '/first'),\n\tarray('title' => 'Second Link', 'link' => '/second'),\n);\n\nforeach ($data1 as $menuitem)\n{\n\t$temp .= $this->parser->parse_string($template1, $menuitem, TRUE);\n}\n\n$template = '<ul>{menuitems}</ul>';\n$data = array(\n\t'menuitems' => $temp\n);\n$this->parser->parse_string($template, $data);\n```\n\n----------------------------------------\n\nTITLE: Creating Checkbox Inputs in CodeIgniter PHP\nDESCRIPTION: Shows different ways to create checkbox input elements with various attributes using form_checkbox() helper function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\necho form_checkbox('newsletter', 'accept', TRUE);\n```\n\nLANGUAGE: php\nCODE:\n```\n$data = array(\n    'name'      => 'newsletter',\n    'id'        => 'newsletter',\n    'value'     => 'accept',\n    'checked'   => TRUE,\n    'style'     => 'margin:10px'\n);\n\necho form_checkbox($data);\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Session Driver\nDESCRIPTION: This code snippet demonstrates how to configure CodeIgniter to use the database session driver and specify the session table name. It sets the 'sess_driver' configuration option to 'database' and 'sess_save_path' to the desired database table name.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_34\n\nLANGUAGE: PHP\nCODE:\n```\n$config['sess_driver'] = 'database';\n\t$config['sess_save_path'] = 'ci_sessions';\n```\n\n----------------------------------------\n\nTITLE: Getting Hour Offset for a Timezone\nDESCRIPTION: Example of using timezones() function to get the hour difference from UTC for a specific timezone code. This function returns the numeric offset based on the timezone identifier.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\necho timezones('UM5');\n```\n\n----------------------------------------\n\nTITLE: Listing FTP Directory Contents\nDESCRIPTION: Shows how to retrieve and display a list of files from an FTP server directory.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/ftp.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('ftp');\n\n$config['hostname'] = 'ftp.example.com';\n$config['username'] = 'your-username';\n$config['password'] = 'your-password';\n$config['debug']\t= TRUE;\n\n$this->ftp->connect($config);\n\n$list = $this->ftp->list_files('/public_html/');\n\nprint_r($list);\n\n$this->ftp->close();\n```\n\n----------------------------------------\n\nTITLE: Downloading ZIP Archive to Client in CodeIgniter\nDESCRIPTION: Demonstrates how to trigger a download of the ZIP archive with a specified filename.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$this->zip->download('latest_stuff.zip'); // File will be named \"latest_stuff.zip\"\n```\n\n----------------------------------------\n\nTITLE: Extending Custom Controller in CodeIgniter PHP\nDESCRIPTION: Example of a controller class extending a custom MY_Controller class instead of the default CI_Controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/core_classes.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nclass Welcome extends MY_Controller {\n\n    public function index()\n    {\n        $this->load->view('welcome_message');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Single CodeIgniter Library in PHP\nDESCRIPTION: Demonstrates how to load a single CodeIgniter library using the load class. The example shows loading a generic class and specifically the form validation library.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/libraries.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('class_name');\n```\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('form_validation');\n```\n\n----------------------------------------\n\nTITLE: Deleting Data from a Table - PHP\nDESCRIPTION: Compiles and executes a DELETE query to remove records from a specified table, using an optional WHERE clause. Returns a CI_DB_query_builder instance or FALSE if there is a failure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_44\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: delete([$table = ''[, $where = ''[, $limit = NULL[, $reset_data = TRUE]]]])\n\n\t\t:param mixed $table: Table(s) to delete from\n\t\t:param string $where: WHERE clause to specify conditions\n\t\t:param int $limit: Limit the number of records to delete\n\t\t:param bool $reset_data: TRUE to reset query write clause\n\t\t:returns: CI_DB_query_builder instance or FALSE on failure\n\t\t:rtype: mixed\n\n\t\tCompiles and executes a DELETE query.\n```\n\n----------------------------------------\n\nTITLE: Loading Library from Subdirectory\nDESCRIPTION: Demonstrates loading a library file located in a subdirectory of the libraries folder.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/loader.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('flavors/chocolate');\n```\n\n----------------------------------------\n\nTITLE: Enabling Strict Mode for Unit Tests in CodeIgniter PHP\nDESCRIPTION: Activates strict mode for unit testing, which compares both data type and value in test evaluations.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/unit_testing.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$this->unit->use_strict(TRUE);\n```\n\n----------------------------------------\n\nTITLE: Using Associative Arrays in XML-RPC Request Parameters\nDESCRIPTION: Demonstrates how to construct XML-RPC requests using associative arrays with struct datatypes. Shows parameter configuration and how to retrieve values in server-side processing.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/xmlrpc.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$request = array(\n\tarray(\n\t\t// Param 0\n\t\tarray('name' => 'John'),\n\t\t'struct'\n\t),\n\tarray(\n\t\t// Param 1\n\t\tarray(\n\t\t\t'size' => 'large',\n\t\t\t'shape'=>'round'\n\t\t),\n\t\t'struct'\n\t)\n);\n\n$this->xmlrpc->request($request);\n\n$parameters = $request->output_parameters();\n$name = $parameters[0]['name'];\n$size = $parameters[1]['size'];\n$shape = $parameters[1]['shape'];\n```\n\n----------------------------------------\n\nTITLE: Adding Multiple Files to ZIP Archive in CodeIgniter\nDESCRIPTION: Shows how to add multiple files with their contents to a ZIP archive using an array of file-content pairs.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$data = array(\n    'mydata1.txt' => 'A Data String!',\n    'mydata2.txt' => 'Another Data String!'\n);\n\n$this->zip->add_data($data);\n```\n\n----------------------------------------\n\nTITLE: Mapping Simple URL Redirections in CodeIgniter\nDESCRIPTION: Example of remapping 'journals' URL to the 'blogs' controller, demonstrating a simple one-to-one URL redirection.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$route['journals'] = 'blogs';\n```\n\n----------------------------------------\n\nTITLE: Compiling DELETE Query in CodeIgniter Query Builder\nDESCRIPTION: Method that compiles a DELETE statement into a string without executing it. Takes optional table name and reset flag parameters. Returns the compiled SQL as a string.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_50\n\nLANGUAGE: php\nCODE:\n```\nget_compiled_delete([$table = ''[, $reset = TRUE]])\n```\n\n----------------------------------------\n\nTITLE: Writing Data to a File with write_file() Function\nDESCRIPTION: Demonstrates how to write data to a file using the write_file() function. The function creates the file if it doesn't exist and returns TRUE on success or FALSE on failure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/file_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$data = 'Some file data';\nif ( ! write_file('./path/to/file.php', $data))\n{\n\techo 'Unable to write the file';\n}\nelse\n{\n\techo 'File written!';\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing XML-RPC Server in CodeIgniter PHP\nDESCRIPTION: Creates an XML-RPC server controller that receives and processes incoming XML-RPC requests. Shows method configuration, request handling, and response generation using CodeIgniter's XML-RPC libraries.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/xmlrpc.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nclass Xmlrpc_server extends CI_Controller {\n\tpublic function index()\n\t{\n\t\t$this->load->library('xmlrpc');\n\t\t$this->load->library('xmlrpcs');\n\n\t\t$config['functions']['Greetings'] = array('function' => 'Xmlrpc_server.process');\n\n\t\t$this->xmlrpcs->initialize($config);\n\t\t$this->xmlrpcs->serve();\n\t}\n\n\tpublic function process($request)\n\t{\n\t\t$parameters = $request->output_parameters();\n\n\t\t$response = array(\n\t\t\tarray(\n\t\t\t\t'you_said'  => $parameters[0],\n\t\t\t\t'i_respond' => 'Not bad at all.'\n\t\t\t),\n\t\t\t'struct'\n\t\t);\n\n\t\treturn $this->xmlrpc->send_response($response);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Default Character Set Configuration in CodeIgniter PHP\nDESCRIPTION: Adds UTF-8 character set configuration to the CodeIgniter config.php file. This setting determines the default character set used by various framework methods.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_154.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n/*\n|--------------------------------------------------------------------------\n| Default Character Set\n|--------------------------------------------------------------------------\n|\n| This determines which character set is used by default in various methods\n| that require a character set to be provided.\n|\n*/\n$config['charset'] = \"UTF-8\";\n```\n\n----------------------------------------\n\nTITLE: Downloading an Existing File with a Custom Filename in CodeIgniter\nDESCRIPTION: Example showing how to download an existing file while changing the filename that will be displayed to the user. Uses an associative array to specify both the source file and the target filename.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/download_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n// Contents of photo.jpg will be automatically read and sent as my-photo.jpg\nforce_download(array('/path/to/photo.jpg' => 'my-photo.jpg'), NULL);\n```\n\n----------------------------------------\n\nTITLE: Using Database Result Array with Parser in CodeIgniter\nDESCRIPTION: Shows how to use database query results directly with the template parser by converting the query result to an array.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query(\"SELECT * FROM blog\");\n\n$this->load->library('parser');\n\n$data = array(\n\t'blog_title'   => 'My Blog Title',\n\t'blog_heading' => 'My Blog Heading',\n\t'blog_entries' => $query->result_array()\n);\n\n$this->parser->parse('blog_template', $data);\n```\n\n----------------------------------------\n\nTITLE: Redirect with Custom HTTP Response Code in CodeIgniter PHP\nDESCRIPTION: Demonstrates using the redirect() function with a specific HTTP response code (301) for permanent redirects, useful for SEO purposes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nredirect('/article/13', 'location', 301);\n```\n\n----------------------------------------\n\nTITLE: Getting User Agent in CodeIgniter\nDESCRIPTION: Returns the user agent string (web browser) being used by the current user, or NULL if not available. Can apply XSS filtering to the result.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/input.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\necho $this->input->user_agent();\n```\n\n----------------------------------------\n\nTITLE: Clearing Email with Attachments\nDESCRIPTION: Shows how to clear email variables including attachments by passing TRUE to the clear() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$this->email->clear(TRUE);\n```\n\n----------------------------------------\n\nTITLE: Setting Profiler-Compatible Benchmark Points in CodeIgniter PHP\nDESCRIPTION: This snippet demonstrates how to set benchmark points that are compatible with CodeIgniter's Profiler. It shows the naming convention required for start and end points.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/benchmark.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$this->benchmark->mark('my_mark_start');\n\n// Some code happens here...\n\n$this->benchmark->mark('my_mark_end');\n\n$this->benchmark->mark('another_mark_start');\n\n// Some more code happens here...\n\n$this->benchmark->mark('another_mark_end');\n```\n\n----------------------------------------\n\nTITLE: Removing Multiple Session Data Items in CodeIgniter\nDESCRIPTION: Shows how to remove multiple session items at once by passing an array of keys to the unset_userdata() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$array_items = array('username', 'email');\n\n$this->session->unset_userdata($array_items);\n```\n\n----------------------------------------\n\nTITLE: Accessing Session Object in CodeIgniter\nDESCRIPTION: Demonstrates how to access the session object after it has been loaded in CodeIgniter. This allows interaction with session data throughout the application.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->session\n```\n\n----------------------------------------\n\nTITLE: Form with Attributes Example\nDESCRIPTION: Demonstrates how to add HTML attributes to form tags using associative arrays\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$attributes = array('class' => 'email', 'id' => 'myform');\necho form_open('email/send', $attributes);\n```\n\n----------------------------------------\n\nTITLE: Using auto_typography Function\nDESCRIPTION: Example of using the auto_typography function to format text into semantically correct HTML. Takes an input string and optional linebreak reduction parameter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/typography_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$string = auto_typography($string);\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Directories in ZIP Archive in CodeIgniter\nDESCRIPTION: Shows how to add an empty directory to a ZIP archive using the add_dir method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$this->zip->add_dir('myfolder'); // Creates a directory called \"myfolder\"\n```\n\n----------------------------------------\n\nTITLE: Using now() Function with Timezone Parameter\nDESCRIPTION: Example of using the now() function to get current time as UNIX timestamp for a specific timezone. This function returns time based on the specified timezone or uses the time_reference setting if no timezone is provided.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho now('Australia/Victoria');\n```\n\n----------------------------------------\n\nTITLE: Rotating an Image Using CI_Image_lib in PHP\nDESCRIPTION: Shows how to rotate an image using the CI_Image_lib class, including setting up the configuration and calling the rotate method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$config['image_library'] = 'netpbm';\n$config['library_path'] = '/usr/bin/';\n$config['source_image'] = '/path/to/image/mypic.jpg';\n$config['rotation_angle'] = 'hor';\n\n$this->image_lib->initialize($config); \n\nif ( ! $this->image_lib->rotate())\n{\n    echo $this->image_lib->display_errors();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a LIMIT Clause - PHP\nDESCRIPTION: This method adds a LIMIT clause to a query, specifying the number of records to return. It also allows for an offset value. It returns a CI_DB_query_builder instance to continue the chain.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_34\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: limit($value[, $offset = 0])\n\n\t\t:param int $value: Limit the result set\n\t\t:param int $offset: Offset for the results\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds LIMIT and OFFSET clauses to a query.\n```\n\n----------------------------------------\n\nTITLE: Package View Loading with Path Control\nDESCRIPTION: Demonstrates how to load package views with control over path searching behavior using add_package_path().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/loader.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->load->add_package_path(APPPATH.'my_app', FALSE);\n$this->load->view('my_app_index'); // Loads\n$this->load->view('welcome_message'); // Will not load the default welcome_message b/c the second param to add_package_path is FALSE\n\n// Reset things\n$this->load->remove_package_path(APPPATH.'my_app');\n\n// Again without the second parameter:\n$this->load->add_package_path(APPPATH.'my_app');\n$this->load->view('my_app_index'); // Loads\n$this->load->view('welcome_message'); // Loads\n```\n\n----------------------------------------\n\nTITLE: Displaying Upload Errors with Custom Delimiters in CodeIgniter\nDESCRIPTION: This PHP snippet demonstrates how to customize the HTML tags used to display upload error messages using the display_errors() method of the CI_Upload class. It allows developers to control the formatting of error messages by specifying opening and closing tags.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/file_uploading.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n\"$this->upload->display_errors('<p>', '</p>');\"\n```\n\n----------------------------------------\n\nTITLE: Password Hash Compatibility Function Implementation in PHP\nDESCRIPTION: This snippet shows changes to the password_hash() compatibility function, which now prefers random_bytes() for salt generation when available, falls back to direct /dev/urandom access, and will error if openssl_random_pseudo_bytes() reports non-cryptographically strong results.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_20\n\nLANGUAGE: php\nCODE:\n```\npassword_hash()\n```\n\n----------------------------------------\n\nTITLE: Enabling the Profiler in CodeIgniter Controllers\nDESCRIPTION: This snippet shows how to enable the profiler in a CodeIgniter controller. When enabled, the profiler will generate a report at the bottom of the page showing benchmark data, database queries, and other debug information.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/profiling.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->output->enable_profiler(TRUE);\n```\n\n----------------------------------------\n\nTITLE: Word Limiter Usage Example\nDESCRIPTION: Example showing how to limit a string to a specific number of words using the word_limiter() function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Here is a nice text string consisting of eleven words.\";\n$string = word_limiter($string, 4);\n// Returns:  Here is a nice\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Row as Array in CodeIgniter\nDESCRIPTION: Executes a SQL query with a LIMIT clause to retrieve a single row and access it as an array. Alternative to object-based retrieval.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query('SELECT name FROM my_table LIMIT 1');\n$row = $query->row_array();\necho $row['name'];\n```\n\n----------------------------------------\n\nTITLE: Dropping Table Method\nDESCRIPTION: Method for dropping a database table with optional IF EXISTS clause. Takes table name and optional if_exists flag as parameters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/forge.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\ndrop_table($table_name[, $if_exists = FALSE])\n```\n\n----------------------------------------\n\nTITLE: Adding a NOT LIKE Clause - PHP\nDESCRIPTION: This method adds a NOT LIKE clause to a query, allowing negation for text matching in a specified field. The returned CI_DB_query_builder instance supports further method chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_26\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: not_like($field[, $match = ''[, $side = 'both'[, $escape = NULL]]])\n\n\t\t:param string $field: Field name\n\t\t:param string $match: Text portion to match\n\t\t:param string $side: Which side to put the '%' wildcard\n\t\t:param bool $escape: Whether to escape values\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds a NOT LIKE clause to a query, separating multiple calls with AND.\n```\n\n----------------------------------------\n\nTITLE: Calling database functions with parameters in CodeIgniter\nDESCRIPTION: Shows how to call database functions with multiple parameters using CodeIgniter's call_function() method. Additional parameters can be passed after the function name.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/call_function.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->db->call_function('some_function', $param1, $param2, etc..);\n```\n\n----------------------------------------\n\nTITLE: Converting Human Readable Format to UNIX Timestamp\nDESCRIPTION: Example of using human_to_unix() function to convert a human-readable time format back to a UNIX timestamp. This is useful for processing dates submitted via forms.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$now = time();\n$human = unix_to_human($now);\n$unix = human_to_unix($human);\n```\n\n----------------------------------------\n\nTITLE: Parsing Variable Pairs with Multi-dimensional Array in CodeIgniter\nDESCRIPTION: Demonstrates how to parse variable pairs by providing a multi-dimensional array that corresponds to the variable pair data structure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('parser');\n\n$data = array(\n\t'blog_title'   => 'My Blog Title',\n\t'blog_heading' => 'My Blog Heading',\n\t'blog_entries' => array(\n\t\tarray('title' => 'Title 1', 'body' => 'Body 1'),\n\t\tarray('title' => 'Title 2', 'body' => 'Body 2'),\n\t\tarray('title' => 'Title 3', 'body' => 'Body 3'),\n\t\tarray('title' => 'Title 4', 'body' => 'Body 4'),\n\t\tarray('title' => 'Title 5', 'body' => 'Body 5')\n\t)\n);\n\n$this->parser->parse('blog_template', $data);\n```\n\n----------------------------------------\n\nTITLE: Example of Running a Simple Addition Test in CodeIgniter PHP\nDESCRIPTION: Demonstrates how to run a unit test for a simple addition operation, including test setup and execution.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/unit_testing.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$test = 1 + 1;\n\n$expected_result = 2;\n\n$test_name = 'Adds one plus one';\n\n$this->unit->run($test, $expected_result, $test_name);\n```\n\n----------------------------------------\n\nTITLE: Invoking Parent Driver Methods in CodeIgniter\nDESCRIPTION: Demonstrates how to call methods of the parent driver class after it has been loaded.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/drivers.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->some_parent->some_method();\n```\n\n----------------------------------------\n\nTITLE: Preserving Directory Structure in ZIP Archive in CodeIgniter\nDESCRIPTION: Shows how to maintain the directory structure of files when adding them to a ZIP archive.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$path = '/path/to/photo.jpg';\n\n$this->zip->read_file($path, TRUE);\n\n// Download the file to your desktop. Name it \"my_backup.zip\"\n$this->zip->download('my_backup.zip');\n```\n\n----------------------------------------\n\nTITLE: Downloading an Existing File in CodeIgniter\nDESCRIPTION: Example showing how to force download an existing file on the server. The file contents are automatically read and sent to the browser.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/download_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n// Contents of photo.jpg will be automatically read\nforce_download('/path/to/photo.jpg', NULL);\n```\n\n----------------------------------------\n\nTITLE: Adding Support for Various Database Drivers - PHP\nDESCRIPTION: This snippet highlights the addition of multiple database driver supports, including MySQL, PostgreSQL, and SQLite, with specific enhancements for each to improve compatibility and feature set.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_48\n\nLANGUAGE: php\nCODE:\n```\n// MySQL enhancements\nfunction mysql_specific_function() {\n    // MySQL related logic\n}\n\n// PostgreSQL enhancements\nfunction postgresql_specific_function() {\n    // PostgreSQL related logic\n}\n\n// SQLite enhancements\nfunction sqlite_specific_function() {\n    // SQLite related logic\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Form Buttons in CodeIgniter PHP\nDESCRIPTION: Demonstrates how to create various types of button elements using form_button() helper function with different attributes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\necho form_button('name','content');\n```\n\nLANGUAGE: php\nCODE:\n```\n$data = array(\n    'name'      => 'button',\n    'id'        => 'button',\n    'value'     => 'true',\n    'type'      => 'reset',\n    'content'   => 'Reset'\n);\n\necho form_button($data);\n```\n\n----------------------------------------\n\nTITLE: Native PHP Loop for Displaying Data\nDESCRIPTION: Shows a simple PHP foreach loop to display data from an array. This example illustrates CodeIgniter's preference for native PHP over template engines for better performance.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/overview/at_a_glance.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<ul>\n<?php foreach ($addressbook as $name):?>\n\t<li><?=$name?></li>\n<?php endforeach; ?>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Proper Logical Operators Usage in PHP\nDESCRIPTION: Examples of the correct way to use logical operators in CodeIgniter, with proper spacing around negation operators.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nif ($foo OR $bar)\nif ($foo && $bar) // recommended\nif ( ! $foo)\nif ( ! is_array($foo))\n```\n\n----------------------------------------\n\nTITLE: Enabling Profiler in CodeIgniter\nDESCRIPTION: Demonstrates how to enable the Profiler tool which displays benchmark and debugging data at the bottom of pages by using the enable_profiler method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_11\n\nLANGUAGE: PHP\nCODE:\n```\n$this->output->enable_profiler(TRUE);\n```\n\n----------------------------------------\n\nTITLE: Updating Plugin Load to Helper Load in PHP\nDESCRIPTION: Shows how to update the code to load a plugin as a helper in CodeIgniter 2.0.0. This change is required as the Plugin system has been removed and its functionality merged into Helpers.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_200.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->helper('foo');\n```\n\n----------------------------------------\n\nTITLE: PHP Timezone Menu Function Usage\nDESCRIPTION: Example of using the timezone_menu() function in CodeIgniter to set a default timezone. The function accepts parameters for default selection, CSS class, and HTML attributes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\necho timezone_menu('UM8');\n```\n\n----------------------------------------\n\nTITLE: Optimizing Database Table in CodeIgniter\nDESCRIPTION: Shows how to optimize a database table using the Database Utility Class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nif ($this->dbutil->optimize_table('table_name'))\n{\n\techo 'Success!';\n}\n```\n\n----------------------------------------\n\nTITLE: Using nl2br_except_pre Method in Typography Class\nDESCRIPTION: Converts newlines in the input string to <br /> tags using nl2br_except_pre method, except when within <pre> tags. Works identically to PHP's native nl2br function but with added <pre> tag compatibility.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/typography.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$string = $this->typography->nl2br_except_pre($string);\n```\n\n----------------------------------------\n\nTITLE: Setting Data for Batch Update - PHP\nDESCRIPTION: Adds field/value pairs to be updated later in a table via batch updates. Returns a CI_DB_query_builder instance to facilitate method chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_42\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: set_update_batch($key[, $value = ''[, $escape = NULL]])\n\n\t\t:param mixed $key: Field name or array of field/value pairs\n\t\t:param string $value: Field value if $key is a single field\n\t\t:param bool $escape: Whether to escape values\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds field/value pairs to be updated in a table later via ``update_batch()``.\n```\n\n----------------------------------------\n\nTITLE: Setting a Custom Table Template in CodeIgniter\nDESCRIPTION: Shows how to customize the HTML structure of the generated table using a template array.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/table.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$template = array(\n\t'table_open'\t\t=> '<table border=\"0\" cellpadding=\"4\" cellspacing=\"0\">',\n\n\t'thead_open'\t\t=> '<thead>',\n\t'thead_close'\t\t=> '</thead>',\n\n\t'heading_row_start'\t=> '<tr>',\n\t'heading_row_end'\t=> '</tr>',\n\t'heading_cell_start'\t=> '<th>',\n\t'heading_cell_end'\t=> '</th>',\n\n\t'tbody_open'\t\t=> '<tbody>',\n\t'tbody_close'\t\t=> '</tbody>',\n\n\t'row_start'\t\t=> '<tr>',\n\t'row_end'\t\t=> '</tr>',\n\t'cell_start'\t\t=> '<td>',\n\t'cell_end'\t\t=> '</td>',\n\n\t'row_alt_start'\t\t=> '<tr>',\n\t'row_alt_end'\t\t=> '</tr>',\n\t'cell_alt_start'\t=> '<td>',\n\t'cell_alt_end'\t\t=> '</td>',\n\n\t'table_close'\t\t=> '</table>'\n);\n\n$this->table->set_template($template);\n```\n\n----------------------------------------\n\nTITLE: Using mdate() Function for MySQL-style Date Formatting\nDESCRIPTION: Example of using mdate() function to format dates with MySQL-style codes. This function allows using percent-prefixed date codes and handles escaping automatically.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$datestring = 'Year: %Y Month: %m Day: %d - %h:%i %a';\n$time = time();\necho mdate($datestring, $time);\n```\n\n----------------------------------------\n\nTITLE: Setting Cookies with Discrete Parameters in CodeIgniter\nDESCRIPTION: Example of setting a cookie using the set_cookie method with individual parameters. Parameters include name, value, expiration time, domain, path, prefix, secure flag, and samesite attribute.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/input.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$this->input->set_cookie($name, $value, $expire, $domain, $path, $prefix, $secure, $samesite);\n```\n\n----------------------------------------\n\nTITLE: Using Force Download Helper Function\nDESCRIPTION: Updated force_download() function now allows existing files to be renamed for download and better utilizes available server memory.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\nforce_download()\n```\n\n----------------------------------------\n\nTITLE: Using Custom Filename for Email Attachment\nDESCRIPTION: Shows how to provide a custom filename for an email attachment using the third parameter of the attach() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$this->email->attach('filename.pdf', 'attachment', 'report.pdf');\n```\n\n----------------------------------------\n\nTITLE: Converting UNIX Timestamp to Human Readable Format\nDESCRIPTION: Example of using unix_to_human() function to display UNIX timestamps in human-readable format with options for seconds display and US/European format.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$now = time();\necho unix_to_human($now); // U.S. time, no seconds\necho unix_to_human($now, TRUE, 'us'); // U.S. time with seconds\necho unix_to_human($now, TRUE, 'eu'); // Euro time with seconds\n```\n\n----------------------------------------\n\nTITLE: Using set_select() with HTML Select Menu\nDESCRIPTION: Demonstrates how to use the set_select() helper function to maintain selected state of dropdown menu options after form submission.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<select name=\"myselect\">\n    <option value=\"one\" <?php echo  set_select('myselect', 'one', TRUE); ?> >One</option>\n    <option value=\"two\" <?php echo  set_select('myselect', 'two'); ?> >Two</option>\n    <option value=\"three\" <?php echo  set_select('myselect', 'three'); ?> >Three</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Character Limiter Usage Example\nDESCRIPTION: Example demonstrating how to limit a string to a specific number of characters while maintaining word integrity.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Here is a nice text string consisting of eleven words.\";\n$string = character_limiter($string, 20);\n// Returns:  Here is a nice text string\n```\n\n----------------------------------------\n\nTITLE: Creating Fieldset Elements in CodeIgniter PHP\nDESCRIPTION: Demonstrates how to create fieldset/legend elements with attributes using form_fieldset() and form_fieldset_close() helper functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\necho form_fieldset('Address Information');\necho \"<p>fieldset content here</p>\\n\";\necho form_fieldset_close();\n```\n\nLANGUAGE: php\nCODE:\n```\n$attributes = array(\n    'id'    => 'address_info',\n    'class' => 'address_info'\n);\n\necho form_fieldset('Address Information', $attributes);\necho \"<p>fieldset content here</p>\\n\";\necho form_fieldset_close();\n```\n\n----------------------------------------\n\nTITLE: Retrieving URI Segments as Array in PHP with CodeIgniter\nDESCRIPTION: This method returns an array containing all URI segments.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/uri.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\nsegment_array()\n```\n\n----------------------------------------\n\nTITLE: Alternative Foreach Loop Structure\nDESCRIPTION: Example of foreach loop using alternative PHP syntax with HTML list generation.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/alternative_php.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<ul>\n\n<?php foreach ($todo as $item): ?>\n\n\t<li><?=$item?></li>\n\n<?php endforeach; ?>\n\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Setting Content Type for Image Response in CodeIgniter\nDESCRIPTION: Demonstrates how to set the MIME type for serving a JPEG image file by using the set_content_type method with 'jpeg' parameter and outputting the file contents.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$this->output\n\t->set_content_type('jpeg') // You could also use \".jpeg\" which will have the full stop removed before looking in config/mimes.php\n\t->set_output(file_get_contents('files/something.jpg'));\n```\n\n----------------------------------------\n\nTITLE: Displaying Memory Usage in CodeIgniter PHP View\nDESCRIPTION: This snippet demonstrates how to display the memory usage of a CodeIgniter application in a view file. It can be used as PHP code or as a pseudo-variable, and requires PHP to be configured with --enable-memory-limit.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/benchmark.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n<?php echo $this->benchmark->memory_usage();?>\n```\n\nLANGUAGE: PHP\nCODE:\n```\n{memory_usage}\n```\n\n----------------------------------------\n\nTITLE: Initializing Unit Test Library in CodeIgniter PHP\nDESCRIPTION: Loads the Unit Test library in a CodeIgniter controller, making it available via $this->unit.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/unit_testing.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('unit_test');\n```\n\n----------------------------------------\n\nTITLE: Deleting Files from a Directory with delete_files() Function\nDESCRIPTION: Demonstrates how to delete all files within a specified directory using the delete_files() function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/file_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\ndelete_files('./path/to/directory/');\n```\n\n----------------------------------------\n\nTITLE: Generating a CAPTCHA Image in CodeIgniter\nDESCRIPTION: Demonstrates how to generate a CAPTCHA image with custom configuration options including dimensions, fonts, colors, and expiration time.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/captcha_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$vals = array(\n\t'word'\t\t=> 'Random word',\n\t'img_path'\t=> './captcha/',\n\t'img_url'\t=> 'http://example.com/captcha/',\n\t'font_path'\t=> './path/to/fonts/texb.ttf',\n\t'img_width'\t=> '150',\n\t'img_height'\t=> 30,\n\t'expiration'\t=> 7200,\n\t'word_length'\t=> 8,\n\t'font_size'\t=> 16,\n\t'img_id'\t=> 'Imageid',\n\t'pool'\t\t=> '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n\n\t// White background and border, black text and red grid\n\t'colors'\t=> array(\n\t\t'background' => array(255, 255, 255),\n\t\t'border' => array(255, 255, 255),\n\t\t'text' => array(0, 0, 0),\n\t\t'grid' => array(255, 40, 40)\n\t)\n);\n\n$cap = create_captcha($vals);\necho $cap['image'];\n```\n\n----------------------------------------\n\nTITLE: Overriding Profiler Section Settings in Controllers\nDESCRIPTION: This snippet demonstrates how to override the default profiler section settings within a controller. It uses the Output Library's set_profiler_sections() method to specify which sections should be enabled or disabled for the current request.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/profiling.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$sections = array(\n\t'config'  => TRUE,\n\t'queries' => TRUE\n);\n\n$this->output->set_profiler_sections($sections);\n```\n\n----------------------------------------\n\nTITLE: Class Definition in PHP\nDESCRIPTION: Example of a properly formatted class definition following CodeIgniter style guidelines with correct casing and underscore separators.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nclass Super_class {\n\n\tpublic function __construct()\n\t{\n\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Appending Data to Output in CodeIgniter\nDESCRIPTION: Shows how to append additional data to the existing output string using the append_output method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\n$this->output->append_output($data);\n```\n\n----------------------------------------\n\nTITLE: Setting 404 Override Controller in CodeIgniter\nDESCRIPTION: Example of configuring a custom 404 error handler controller. This route determines what controller is called when a requested page isn't found.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$route['404_override'] = '';\n```\n\n----------------------------------------\n\nTITLE: Popup Window Anchor Creation\nDESCRIPTION: Demonstrates creating popup window links with custom window attributes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$atts = array(\n    'width'       => 800,\n    'height'      => 600,\n    'scrollbars'  => 'yes',\n    'status'      => 'yes',\n    'resizable'   => 'yes',\n    'screenx'     => 0,\n    'screeny'     => 0,\n    'window_name' => '_blank'\n);\n\necho anchor_popup('news/local/123', 'Click Me!', $atts);\n```\n\n----------------------------------------\n\nTITLE: Setting HTTP Status Header in CodeIgniter\nDESCRIPTION: Shows how to set a server status header using the set_status_header method with a specific HTTP status code (401 Unauthorized in this example).\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_10\n\nLANGUAGE: PHP\nCODE:\n```\n$this->output->set_status_header(401);\n// Sets the header as:  Unauthorized\n```\n\n----------------------------------------\n\nTITLE: HTML Value Escaping Example\nDESCRIPTION: Demonstrates how to safely escape HTML values in form fields\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$string = 'Here is a string containing \"quoted\" text.';\n\n<input type=\"text\" name=\"myfield\" value=\"<?php echo html_escape($string); ?>\" />\n```\n\n----------------------------------------\n\nTITLE: Using format_characters Method in Typography Class\nDESCRIPTION: Performs character conversion similar to auto_typography but without paragraph formatting using format_characters method. Converts quotes, apostrophes, dashes, ellipses, and double spaces. Requires no specific dependencies.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/typography.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$string = $this->typography->format_characters($string);\n```\n\n----------------------------------------\n\nTITLE: Clearing All Cache Files in CodeIgniter\nDESCRIPTION: Demonstrates how to clear all existing cache files using the cache_delete_all() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/caching.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->cache_delete_all();\n```\n\n----------------------------------------\n\nTITLE: Modifying Column Method\nDESCRIPTION: Method for modifying existing table columns. Takes table name and array of column definitions as parameters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/forge.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nmodify_column($table, $field)\n```\n\n----------------------------------------\n\nTITLE: Removing Null Characters in CodeIgniter\nDESCRIPTION: The remove_invisible_characters() function removes NULL characters that might be inserted between ASCII characters, which is a security measure to prevent certain types of attacks like NULL byte injection.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nremove_invisible_characters('Java\\0script');\n// Returns: 'Javascript'\n```\n\n----------------------------------------\n\nTITLE: Getting Number of Days in a Month\nDESCRIPTION: Example of using days_in_month() function to determine the number of days in a specified month and year. This function takes leap years into account.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\necho days_in_month(06, 2005);\n```\n\n----------------------------------------\n\nTITLE: Configuring Path Variables in CodeIgniter index.php\nDESCRIPTION: Setting the system path, application folder, and view folder variables in CodeIgniter's main index.php file. These variables need to be configured when moving CodeIgniter folders for enhanced security.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$system_path = '/www/MyUser/system'\n$application_folder = 'application'\n$view_folder = 'views'\n```\n\n----------------------------------------\n\nTITLE: Attaching Buffer Data as Email Attachment\nDESCRIPTION: Demonstrates how to attach buffer data as a file with a specific MIME type instead of a physical file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$this->email->attach($buffer, 'attachment', 'report.pdf', 'application/pdf');\n```\n\n----------------------------------------\n\nTITLE: Using create_captcha Function in CodeIgniter\nDESCRIPTION: Example of using the create_captcha function which takes configuration data and returns an array containing the generated image tag, timestamp, and CAPTCHA word.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/captcha_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\narray(\n\t'image'\t=> IMAGE TAG\n\t'time'\t=> TIMESTAMP (in microtime)\n\t'word'\t=> CAPTCHA WORD\n)\n```\n\n----------------------------------------\n\nTITLE: Result Pointer Navigation in PHP - CodeIgniter\nDESCRIPTION: Method to move the internal result row pointer to a specific offset. Returns boolean indicating success.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\ndata_seek([$n = 0])\n```\n\n----------------------------------------\n\nTITLE: Using random_element() Function in CodeIgniter Array Helper\nDESCRIPTION: This example demonstrates how to use the random_element() function to fetch a random item from an array of quotes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/array_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$quotes = array(\n\t\"I find that the harder I work, the more luck I seem to have. - Thomas Jefferson\",\n\t\"Don't stay in bed, unless you can make money in bed. - George Burns\",\n\t\"We didn't lose the game; we just ran out of time. - Vince Lombardi\",\n\t\"If everything seems under control, you're not going fast enough. - Mario Andretti\",\n\t\"Reality is merely an illusion, albeit a very persistent one. - Albert Einstein\",\n\t\"Chance favors the prepared mind - Louis Pasteur\"\n);\n\necho random_element($quotes);\n```\n\n----------------------------------------\n\nTITLE: Listing Fields in a Table (Method 1) in CodeIgniter\nDESCRIPTION: This example demonstrates how to retrieve all field names from a specific table using the direct method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$fields = $this->db->list_fields('table_name');\n\nforeach ($fields as $field)\n{\n\techo $field;\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Database Forge in CodeIgniter\nDESCRIPTION: Shows how to load and initialize the Database Forge class, including passing custom database objects.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/forge.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->dbforge()\n\n$this->myforge = $this->load->dbforge($this->other_db, TRUE);\n```\n\n----------------------------------------\n\nTITLE: REPLACE Operation in CodeIgniter\nDESCRIPTION: Demonstrates the REPLACE SQL operation which combines DELETE and INSERT based on primary/unique keys. Automatically handles record replacement logic.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_16\n\nLANGUAGE: PHP\nCODE:\n```\n$data = array(\n\t'title' => 'My title',\n\t'name'  => 'My Name',\n\t'date'  => 'My date'\n);\n\n$this->db->replace('table', $data);\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Template for Unit Test Results in CodeIgniter PHP\nDESCRIPTION: Defines a custom HTML template for formatting unit test results output.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/unit_testing.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n$str = '\n<table border=\"0\" cellpadding=\"4\" cellspacing=\"1\">\n{rows}\n\t<tr>\n\t\t<td>{item}</td>\n\t\t<td>{result}</td>\n\t</tr>\n{/rows}\n</table>';\n\n$this->unit->set_template($str);\n```\n\n----------------------------------------\n\nTITLE: Fetching Language Config Example\nDESCRIPTION: Specific example of retrieving the language configuration setting.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/config.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$lang = $this->config->item('language');\n```\n\n----------------------------------------\n\nTITLE: Creating MySQL Session Table\nDESCRIPTION: This SQL statement creates a table named `ci_sessions` in MySQL, designed to store session data. It includes columns for session ID, IP address, timestamp, and session data, with an index on the timestamp column for efficient querying.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_35\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE TABLE IF NOT EXISTS `ci_sessions` (\n\t\t`id` varchar(128) NOT NULL,\n\t\t`ip_address` varchar(45) NOT NULL,\n\t\t`timestamp` int(10) unsigned DEFAULT 0 NOT NULL,\n\t\t`data` blob NOT NULL,\n\t\tKEY `ci_sessions_timestamp` (`timestamp`)\n\t);\n```\n\n----------------------------------------\n\nTITLE: CI_Session userdata Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::userdata() which retrieves session data from $_SESSION. It can retrieve a specific item by key or all session data when no key is provided. This is a legacy method maintained for backwards compatibility.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_42\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: userdata([$key = NULL])\n\n\t:param\tmixed\t$key: Session item key or NULL\n\t:returns:\tValue of the specified item key, or an array of all userdata\n\t:rtype:\tmixed\n\n\tGets the value for a specific ``$_SESSION`` item, or an\n\tarray of all \"userdata\" items if not key was specified.\n\n\t.. note:: This is a legacy method kept only for backwards\n\t\tcompatibility with older applications. You should\n\t\tdirectly access ``$_SESSION`` instead.\n```\n\n----------------------------------------\n\nTITLE: CI_Session tempdata Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::tempdata() which retrieves $_SESSION items that have been marked as tempdata. It can retrieve a specific tempdata item by key or all tempdata when no key is provided.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_57\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: tempdata([$key = NULL])\n\n\t:param\tmixed\t$key: Tempdata item key or NULL\n\t:returns:\tValue of the specified item key, or an array of all tempdata\n\t:rtype:\tmixed\n\n\tGets the value for a specific ``$_SESSION`` item that has\n\tbeen marked as \"tempdata\", or an array of all \"tempdata\"\n\titems if no key was specified.\n\n\t.. note:: This is a legacy method kept only for backwards\n\t\tcompatibility with older applications. You should\n\t\tdirectly access ``$_SESSION`` instead.\n```\n\n----------------------------------------\n\nTITLE: Initializing User Agent Class in CodeIgniter\nDESCRIPTION: Demonstrates how to load the User Agent class in a CodeIgniter controller and make it available for use.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/user_agent.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('user_agent');\n```\n\n----------------------------------------\n\nTITLE: Adding an OR LIKE Clause - PHP\nDESCRIPTION: This method adds a LIKE clause to a query but utilizes OR for combining multiple criteria. It returns a CI_DB_query_builder instance, enabling chaining of method calls.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_25\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: or_like($field[, $match = ''[, $side = 'both'[, $escape = NULL]]])\n\n\t\t:param string $field: Field name\n\t\t:param string $match: Text portion to match\n\t\t:param string $side: Which side to put the '%' wildcard\n\t\t:param bool $escape: Whether to escape values\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds a LIKE clause to a query, separating multiple calls with OR.\n```\n\n----------------------------------------\n\nTITLE: Updating Form Submission in CodeIgniter PHP\nDESCRIPTION: Demonstrates the changes in form_open() behavior and how to modify form submissions to target the default controller. Shows the difference between empty action, root path, and base_url() approaches.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_201.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\necho form_open(); //<form action=\"\" method=\"post\" accept-charset=\"utf-8\">\n```\n\nLANGUAGE: php\nCODE:\n```\necho form_open('/'); //<form action=\"http://example.com/index.php/\" method=\"post\" accept-charset=\"utf-8\">\n```\n\nLANGUAGE: php\nCODE:\n```\necho form_open(base_url()); //<form action=\"http://example.com/\" method=\"post\" accept-charset=\"utf-8\">\n```\n\n----------------------------------------\n\nTITLE: Phrase Highlighting Example\nDESCRIPTION: Example demonstrating how to highlight specific phrases within a text string using HTML tags.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Here is a nice text string about nothing in particular.\";\necho highlight_phrase($string, \"nice text\", '<span style=\"color:#990000;\">', '</span>');\n```\n\n----------------------------------------\n\nTITLE: Creating News Table SQL Schema\nDESCRIPTION: SQL command to create a 'news' table with fields for id, title, slug, and text. Includes primary key on id and index on slug.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/news_section.rst#2025-04-16_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE TABLE news (\n\tid int(11) NOT NULL AUTO_INCREMENT,\n\ttitle varchar(128) NOT NULL,\n\tslug varchar(128) NOT NULL,\n\ttext text NOT NULL,\n\tPRIMARY KEY (id),\n\tKEY slug (slug)\n);\n```\n\n----------------------------------------\n\nTITLE: Setting Content Type for JSON Response in CodeIgniter\nDESCRIPTION: Shows how to set the MIME type to application/json and output JSON-encoded data using method chaining with the set_content_type and set_output methods.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$this->output\n\t->set_content_type('application/json')\n\t->set_output(json_encode(array('foo' => 'bar')));\n```\n\n----------------------------------------\n\nTITLE: Getting Database Version in CodeIgniter\nDESCRIPTION: Shows how to retrieve the version of the database system being used.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/helpers.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\necho $this->db->version();\n```\n\n----------------------------------------\n\nTITLE: Loading URL Helper Example in CodeIgniter\nDESCRIPTION: Specific example showing how to load the URL helper in CodeIgniter, which provides URL-related helper functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('url');\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Headings with heading() Function\nDESCRIPTION: Examples of using the heading() function to create HTML heading tags with optional attributes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho heading('Welcome!', 3);\n```\n\nLANGUAGE: php\nCODE:\n```\necho heading('Welcome!', 3, 'class=\"pink\"');\n```\n\nLANGUAGE: php\nCODE:\n```\necho heading('How are you?', 4, array('id' => 'question', 'class' => 'green'));\n```\n\nLANGUAGE: html\nCODE:\n```\n<h3 class=\"pink\">Welcome!<h3>\n<h4 id=\"question\" class=\"green\">How are you?</h4>\n```\n\n----------------------------------------\n\nTITLE: Accessing Child Driver Methods in CodeIgniter\nDESCRIPTION: Shows how to access and use methods from child driver classes through the parent driver, without needing separate initialization.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/drivers.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$this->some_parent->child_one->some_method();\n$this->some_parent->child_two->another_method();\n```\n\n----------------------------------------\n\nTITLE: Setting a Partial Table Template in CodeIgniter\nDESCRIPTION: Demonstrates how to set only specific parts of the table template, such as the opening tag.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/table.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$template = array(\n\t'table_open' => '<table border=\"1\" cellpadding=\"2\" cellspacing=\"1\" class=\"mytable\">'\n);\n\n$this->table->set_template($template);\n```\n\n----------------------------------------\n\nTITLE: Implementing Anonymous Function Hook in CodeIgniter\nDESCRIPTION: Example of using a lambda/anonymous function as a hook for the post_controller hook point.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/hooks.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$hook['post_controller'] = function()\n{\n\t/* do something here */\n};\n```\n\n----------------------------------------\n\nTITLE: Initializing CodeIgniter Image Library\nDESCRIPTION: Shows how to load the image library in a CodeIgniter controller using the load->library function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('image_lib');\n```\n\n----------------------------------------\n\nTITLE: Updating Sessions Database Table in CodeIgniter 2.0.3 (SQL)\nDESCRIPTION: SQL commands to update the ci_sessions database table for use with the CI Session Library. These changes include creating an index on the last_activity column and modifying the user_agent column to allow for longer strings.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_203.rst#2025-04-16_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE INDEX last_activity_idx ON ci_sessions(last_activity);\nALTER TABLE ci_sessions MODIFY user_agent VARCHAR(120);\n```\n\n----------------------------------------\n\nTITLE: Language File Content Structure\nDESCRIPTION: Example showing how to structure content within a language file using the $lang array\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/language.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$lang['error_email_missing'] = 'You must submit an email address';\n$lang['error_url_missing'] = 'You must submit a URL';\n$lang['error_username_missing'] = 'You must submit a username';\n```\n\n----------------------------------------\n\nTITLE: Updating Input Validation in PHP\nDESCRIPTION: Remove reliance on global input filtering from the Input Library. Developers should now explicitly validate all user inputs in their application for security.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_320.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$_GET, $_POST, $_COOKIE\n```\n\n----------------------------------------\n\nTITLE: Dropping Database Method\nDESCRIPTION: Method for dropping an entire database. Takes database name as parameter and returns boolean indicating success or failure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/forge.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\ndrop_database($db_name)\n```\n\n----------------------------------------\n\nTITLE: Using the Email Library with Multiple Emails in CodeIgniter 3.0\nDESCRIPTION: Example showing how to prevent parameter clearing when sending multiple emails with the Email library. By default, the library now clears parameters after sending, but this can be overridden by passing FALSE to the send() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_300.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nif ($this->email->send(FALSE))\n{\n\t// Parameters won't be cleared\n}\n```\n\n----------------------------------------\n\nTITLE: Adding an OFFSET Clause - PHP\nDESCRIPTION: This method allows for specifying an OFFSET in a query to skip a number of rows before starting to return results. It returns a CI_DB_query_builder instance for further chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_35\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: offset($offset)\n\n\t\t:param int $offset: Number of rows to skip\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds an OFFSET clause to a query.\n```\n\n----------------------------------------\n\nTITLE: Loading a Driver in CodeIgniter\nDESCRIPTION: Demonstrates how to load a driver within a CodeIgniter controller using the load class. This is the standard initialization method for any driver in the framework.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/drivers.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->driver('class_name');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Complete URI String in PHP with CodeIgniter\nDESCRIPTION: This method returns a string with the complete URI, excluding the base URL and index.php if present.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/uri.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\nuri_string()\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis Session Driver\nDESCRIPTION: This code configures CodeIgniter to use Redis as the session driver and specifies the Redis server's address. The 'sess_driver' is set to 'redis', and the 'sess_save_path' is set to a TCP connection string pointing to the Redis server.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_38\n\nLANGUAGE: PHP\nCODE:\n```\n$config['sess_driver'] = 'redis';\n\t$config['sess_save_path'] = 'tcp://localhost:6379';\n```\n\n----------------------------------------\n\nTITLE: Loading Model with Custom Database Configuration in CodeIgniter PHP\nDESCRIPTION: This snippet demonstrates how to load a model with custom database connection parameters in CodeIgniter. This approach allows you to specify database settings directly when loading the model.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/models.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n$config['hostname'] = 'localhost';\n$config['username'] = 'myusername';\n$config['password'] = 'mypassword';\n$config['database'] = 'mydatabase';\n$config['dbdriver'] = 'mysqli';\n$config['dbprefix'] = '';\n$config['pconnect'] = FALSE;\n$config['db_debug'] = TRUE;\n\n$this->load->model('model_name', '', $config);\n```\n\n----------------------------------------\n\nTITLE: Marking session item as tempdata in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to mark an existing session item as tempdata, which will automatically be erased after a specified period. The expiry time is specified in seconds.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_19\n\nLANGUAGE: php\nCODE:\n```\n\"// 'item' will be erased after 300 seconds\n\\t$this->session->mark_as_temp('item', 300);\"\n```\n\n----------------------------------------\n\nTITLE: Optimizing Entire Database in CodeIgniter\nDESCRIPTION: Shows how to optimize the entire database and handle the result using the Database Utility Class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$result = $this->dbutil->optimize_database();\n\nif ($result !== FALSE)\n{\n\tprint_r($result);\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Database Platform in CodeIgniter\nDESCRIPTION: Demonstrates how to retrieve the database platform (MySQL, MS SQL, Postgres, etc.) being used in the application.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/helpers.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\necho $this->db->platform();\n```\n\n----------------------------------------\n\nTITLE: Modifying Database Fields with DBForge\nDESCRIPTION: This PHP snippet demonstrates the use of the 'after' clause in the field definition array when adding a column using CodeIgniter's DBForge class. The modification primarily affects MySQL and CUBRID databases. Other drivers may ignore this clause without any effect.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_300.rst#2025-04-16_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\n\t// Old usage:\n\t$field = array(\n\t\t'new_field' => array('type' => 'TEXT')\n\t);\n\n\t$this->dbforge->add_column('table_name', $field, 'another_field');\n\n\t// New usage:\n\t$field = array(\n\t\t'new_field' => array('type' => 'TEXT', 'after' => 'another_field')\n\t);\n\n\t$this->dbforge->add_column('table_name', $field);\n```\n\n----------------------------------------\n\nTITLE: Loading Form Helper in CodeIgniter\nDESCRIPTION: Shows how to load the Form Helper into a CodeIgniter application\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->helper('form');\n```\n\n----------------------------------------\n\nTITLE: Example Query with Database Path - CodeIgniter PHP\nDESCRIPTION: Demonstrates a SQL query example showing how database paths and aliasing are handled in CodeIgniter's query builder. Shows both full path qualification and column aliasing scenarios.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/db_driver_reference.rst#2025-04-16_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM hostname.database.table.column AS c FROM hostname.database.table\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT m.member_id, m.member_name FROM members AS m\n```\n\n----------------------------------------\n\nTITLE: Accessing CodeIgniter Instance in PHP\nDESCRIPTION: A global function to get the main CodeIgniter object instance, allowing it to be accessible throughout custom classes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_62\n\nLANGUAGE: PHP\nCODE:\n```\nget_instance()\n```\n\n----------------------------------------\n\nTITLE: Generating Unit Test Report in CodeIgniter PHP\nDESCRIPTION: Shows how to generate and display a full report of all unit tests run.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/unit_testing.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\necho $this->unit->report();\n```\n\n----------------------------------------\n\nTITLE: Setting Profiler Section Defaults in Config File\nDESCRIPTION: This example shows how to set application-wide defaults for Profiler sections in the application/config/profiler.php file. This allows you to configure which sections of profiler data should be displayed or hidden by default.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/profiling.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$config['config']          = FALSE;\n$config['queries']         = FALSE;\n```\n\n----------------------------------------\n\nTITLE: Configuring DSN Strings for PDO and Oracle Connections\nDESCRIPTION: This snippet shows how to configure database connections using DSN strings for PDO (PostgreSQL) and Oracle database drivers. DSN strings are required for certain database drivers and contain all necessary connection information.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// PDO\n$db['default']['dsn'] = 'pgsql:host=localhost;port=5432;dbname=database_name';\n\n// Oracle\n$db['default']['dsn'] = '//localhost/XE';\n```\n\n----------------------------------------\n\nTITLE: Retrieving ZIP File Content in CodeIgniter\nDESCRIPTION: Shows how to get the raw ZIP-compressed data for custom processing using the get_zip method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n$name = 'my_bio.txt';\n$data = 'I was born in an elevator...';\n\n$this->zip->add_data($name, $data);\n\n$zip_file = $this->zip->get_zip();\n```\n\n----------------------------------------\n\nTITLE: Using delete_cookie() with Custom Parameters\nDESCRIPTION: Shows how to delete a cookie with additional parameters like domain, path, and prefix. This is useful when the cookie was set with custom values beyond just the name.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/cookie_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\ndelete_cookie($name, $domain, $path, $prefix);\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of lang() Function in CodeIgniter\nDESCRIPTION: This example shows the basic usage of the lang() function to retrieve a line of text from a loaded language file. It simplifies the syntax compared to using CI_Lang::line().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/language_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\necho lang('language_key');\n// Outputs: Language line\n```\n\n----------------------------------------\n\nTITLE: CI_Session sess_regenerate Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::sess_regenerate() which regenerates the session ID. This is an alias for PHP's native session_regenerate_id() function and can optionally destroy the current session data during regeneration.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_59\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: sess_regenerate([$destroy = FALSE])\n\n\t:param\tbool\t$destroy: Whether to destroy session data\n\t:rtype:\tvoid\n\n\tRegenerate session ID, optionally destroying the current\n\tsession's data.\n\n\t.. note:: This method is just an alias for PHP's native\n\t\t`session_regenerate_id()\n\t\t<https://secure.php.net/session_regenerate_id>`_ function.\n```\n\n----------------------------------------\n\nTITLE: Converting Numeric Permissions to Symbolic Notation with symbolic_permissions() Function\nDESCRIPTION: Shows how to convert numeric file permissions (as returned by fileperms()) into standard symbolic notation.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/file_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\necho symbolic_permissions(fileperms('./index.php'));  // -rw-r--r--\n```\n\n----------------------------------------\n\nTITLE: Ellipsize String Example\nDESCRIPTION: Example demonstrating how to truncate a string with an ellipsis at a specified position.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$str = 'this_string_is_entirely_too_long_and_might_break_my_design.jpg';\necho ellipsize($str, 32, .5);\n```\n\n----------------------------------------\n\nTITLE: Memcached Multi-Server Configuration\nDESCRIPTION: This code demonstrates how to configure CodeIgniter's session library to use multiple Memcached servers, including an optional weight parameter to prioritize certain servers.  The 'sess_save_path' is set to a comma-separated list of server addresses, each with a host, port, and optional weight.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_40\n\nLANGUAGE: PHP\nCODE:\n```\n// localhost will be given higher priority (5) here,\n\t// compared to 192.0.2.1 with a weight of 1.\n\t$config['sess_save_path'] = 'localhost:11211:5,192.0.2.1:11211:1';\n```\n\n----------------------------------------\n\nTITLE: Generating Date Range Array\nDESCRIPTION: Example of using date_range() function to create an array of dates within a specified period. This is useful for creating date-based iterations or calendars.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$range = date_range('2012-01-01', '2012-01-15');\necho \"First 15 days of 2012:\";\nforeach ($range as $date)\n{\n    echo $date.\"\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Multiple Libraries\nDESCRIPTION: Shows how to load multiple libraries simultaneously using an array.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/loader.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library(array('email', 'table'));\n```\n\n----------------------------------------\n\nTITLE: Destroying a session in CodeIgniter using session_destroy()\nDESCRIPTION: This snippet shows how to destroy the current session using PHP's native `session_destroy()` function. All session data will be lost.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_30\n\nLANGUAGE: php\nCODE:\n```\n\"session_destroy();\"\n```\n\n----------------------------------------\n\nTITLE: Adding Slashes to URI Segments in PHP with CodeIgniter\nDESCRIPTION: This method retrieves a URI segment and adds a trailing and/or leading slash based on the second parameter. If not specified, a trailing slash is added by default.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/uri.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nslash_segment($n[, $where = 'trailing'])\n```\n\n----------------------------------------\n\nTITLE: Compiling SELECT Query in CodeIgniter Query Builder\nDESCRIPTION: Method that compiles a SELECT statement into a string without executing it. Takes optional table name and reset flag parameters. Returns the compiled SQL as a string.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_47\n\nLANGUAGE: php\nCODE:\n```\nget_compiled_select([$table = ''[, $reset = TRUE]])\n```\n\n----------------------------------------\n\nTITLE: Using Database Forge's drop_table Method in CodeIgniter 3.0\nDESCRIPTION: Examples showing the updated usage of the drop_table() method in Database Forge. In CodeIgniter 3.0, IF EXISTS is no longer added by default and requires an explicit second parameter to be included.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_300.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n// Now produces just DROP TABLE `table_name`\n$this->dbforge->drop_table('table_name');\n\n// Produces DROP TABLE IF EXISTS `table_name`\n$this->dbforge->drop_table('table_name', TRUE);\n```\n\n----------------------------------------\n\nTITLE: Using plural() Function in CodeIgniter\nDESCRIPTION: Example of using the plural() function to convert a singular word to plural form.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\necho plural('dog'); // Prints 'dogs'\n```\n\n----------------------------------------\n\nTITLE: Setting protect_braced_quotes Property in Typography Class\nDESCRIPTION: Demonstrates setting the protect_braced_quotes property to TRUE to protect single and double quotes within curly braces when using the Typography library. This is useful when working with the Template Parser library.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/typography.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('typography');\n$this->typography->protect_braced_quotes = TRUE;\n```\n\n----------------------------------------\n\nTITLE: Saving CAPTCHA Data to Database in CodeIgniter\nDESCRIPTION: Shows how to save generated CAPTCHA data to a database table, including storing the timestamp, IP address, and word for later verification.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/captcha_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('captcha');\n\n$cap = create_captcha($vals);\n$data = array(     \n\t'captcha_time'\t=> $cap['time'],     \n\t'ip_address'\t=> $this->input->ip_address(),     \n\t'word'\t\t=> $cap['word']     \n);\n\n$query = $this->db->insert_string('captcha', $data);\n$this->db->query($query);\n\necho 'Submit the word you see below:';\necho $cap['image'];\necho '<input type=\"text\" name=\"captcha\" value=\"\" />';\n```\n\n----------------------------------------\n\nTITLE: Repairing Database Table in CodeIgniter\nDESCRIPTION: Demonstrates how to repair a database table using the Database Utility Class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nif ($this->dbutil->repair_table('table_name'))\n{\n\techo 'Success!';\n}\n```\n\n----------------------------------------\n\nTITLE: Relocating CodeIgniter Application Directory\nDESCRIPTION: Example showing how to specify a full server path for the application directory location.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/managing_apps.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$application_folder = '/path/to/your/application';\n```\n\n----------------------------------------\n\nTITLE: Encode PHP Tags Example in CodeIgniter\nDESCRIPTION: Example of using encode_php_tags() function to convert PHP tags to entities for security purposes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/security_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$string = encode_php_tags($string);\n```\n\n----------------------------------------\n\nTITLE: Sample Language File Structure\nDESCRIPTION: Example directory structure showing language file organization in CodeIgniter\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/language.rst#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nsystem/\n    language/\n        english/\n            ...\n            email_lang.php\n            form_validation_lang.php\n            ...\n\napplication/\n    language/\n        english/\n            error_messages_lang.php\n        french/\n            ...\n            email_lang.php\n            error_messages_lang.php\n            form_validation_lang.php\n            ...\n```\n\n----------------------------------------\n\nTITLE: Protecting Identifiers with Table Prefix in CodeIgniter\nDESCRIPTION: Demonstrates protecting database identifiers while also adding the configured table prefix.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$this->db->protect_identifiers('table_name', TRUE);\n```\n\n----------------------------------------\n\nTITLE: Language Switching Example\nDESCRIPTION: Example of how to switch languages in a CodeIgniter application using session data\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/language.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$idiom = $this->session->get_userdata('language');\n$this->lang->load('error_messages', $idiom);\n$oops = $this->lang->line('message_key');\n```\n\n----------------------------------------\n\nTITLE: Creating News Single Article View in CodeIgniter\nDESCRIPTION: Simple view template for displaying a single news article with its title and text content.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/news_section.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\necho '<h2>'.$news_item['title'].'</h2>';\necho $news_item['text'];\n```\n\n----------------------------------------\n\nTITLE: Accessing database result ID in CodeIgniter\nDESCRIPTION: Shows how to access the database result ID from a query result object in CodeIgniter, which is frequently required for certain database function calls.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/call_function.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query(\"SOME QUERY\");\n\n$query->result_id;\n```\n\n----------------------------------------\n\nTITLE: Creating Simple XML-RPC Request Parameters Array\nDESCRIPTION: Example of creating a simple array with string parameters for an XML-RPC request. This format is used when all parameters are strings.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/xmlrpc.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$request = array('John', 'Doe', 'www.some-site.com');\n$this->xmlrpc->request($request);\n```\n\n----------------------------------------\n\nTITLE: Preventing Parameter Clearing After Sending Email\nDESCRIPTION: Shows how to prevent automatic clearing of email parameters by passing FALSE to the send() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nif ($this->email->send(FALSE))\n{\n\t// Parameters won't be cleared\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Database Connection Exceptions in PHP\nDESCRIPTION: Example of handling database connection exceptions in CodeIgniter 3.2.x. This change is due to the new behavior where database connection failures throw RuntimeExceptions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_320.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\ntry\n{\n\t$this->load->database();\n}\ncatch (RuntimeException $e)\n{\n\t// Handle the failure\n}\n```\n\n----------------------------------------\n\nTITLE: Unsetting tempdata using unset_tempdata() in CodeIgniter\nDESCRIPTION: This snippet shows how to remove tempdata using the `unset_tempdata()` method, which removes both the data and the tempdata marker.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_29\n\nLANGUAGE: php\nCODE:\n```\n\"$this->session->unset_tempdata('item');\"\n```\n\n----------------------------------------\n\nTITLE: Cache Driver with Key Prefix\nDESCRIPTION: Shows how to configure the cache driver with a key prefix to avoid naming collisions in shared environments.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->load->driver(\n\t'cache',\n\tarray('adapter' => 'apc', 'backup' => 'file', 'key_prefix' => 'my_')\n);\n\n$this->cache->get('foo'); // Will get the cache entry named 'my_foo'\n```\n\n----------------------------------------\n\nTITLE: Loading the File Helper in CodeIgniter\nDESCRIPTION: Shows how to load the File Helper in a CodeIgniter application before using any of its functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/file_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('file');\n```\n\n----------------------------------------\n\nTITLE: Sending Trackbacks in CodeIgniter PHP\nDESCRIPTION: Shows how to send a trackback using the Trackback class in CodeIgniter. It includes setting up trackback data and handling the response.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/trackback.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('trackback');\n\n$tb_data = array(\n\t'ping_url'  => 'http://example.com/trackback/456',\n\t'url'       => 'http://www.my-example.com/blog/entry/123',\n\t'title'     => 'The Title of My Entry',\n\t'excerpt'   => 'The entry content.',\n\t'blog_name' => 'My Blog Name',\n\t'charset'   => 'utf-8'\n);\n\nif ( ! $this->trackback->send($tb_data))\n{\n\techo $this->trackback->display_errors();\n}\nelse\n{\n\techo 'Trackback was sent!';\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing the Table Class in CodeIgniter\nDESCRIPTION: Demonstrates how to load and initialize the Table class in a CodeIgniter controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/table.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('table');\n\n$this->table\n```\n\n----------------------------------------\n\nTITLE: Database Insert with Objects in CodeIgniter\nDESCRIPTION: A feature allowing objects to be passed to the insert() database function, enabling use of Model class variables for queries.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_65\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->insert($object);\n```\n\n----------------------------------------\n\nTITLE: Renaming Table Method\nDESCRIPTION: Method for renaming an existing database table. Takes current table name and new table name as parameters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/forge.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nrename_table($table_name, $new_table_name)\n```\n\n----------------------------------------\n\nTITLE: Loading the Array Helper in CodeIgniter\nDESCRIPTION: This snippet shows how to load the Array Helper in CodeIgniter. The helper must be loaded before using any of its functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/array_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('array');\n```\n\n----------------------------------------\n\nTITLE: Code Highlighting Example\nDESCRIPTION: Example showing how to colorize a code string using PHP's highlight_string() function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$string = highlight_code($string);\n```\n\n----------------------------------------\n\nTITLE: Updating Form Helper Dropdown Function in PHP\nDESCRIPTION: Modified Form Helper form_dropdown() to type cast the keys and values of the options array as strings, allowing numeric values to be properly set as 'selected'.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_57\n\nLANGUAGE: PHP\nCODE:\n```\nModified Form Helper form_dropdown() to type cast the keys and values of the options array as strings, allowing numeric values to be properly set as 'selected'\n```\n\n----------------------------------------\n\nTITLE: Loading Multiple Helpers in CodeIgniter\nDESCRIPTION: Shows how to load multiple helpers at once by passing an array of helper names to the loader method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper(\\n\\tarray('helper1', 'helper2', 'helper3')\\n);\n```\n\n----------------------------------------\n\nTITLE: Clearing CI_Image_lib Configuration in PHP\nDESCRIPTION: Demonstrates how to clear all values used when processing an image with CI_Image_lib, useful when processing images in a loop.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$this->image_lib->clear();\n```\n\n----------------------------------------\n\nTITLE: Retrieving Query Results as Arrays in CodeIgniter\nDESCRIPTION: This snippet shows how to use the result_array() method to retrieve query results as a pure array. It demonstrates iterating over the results and accessing array elements.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query(\"YOUR QUERY\");\n\nforeach ($query->result_array() as $row)\n{\n\techo $row['title'];\n\techo $row['name'];\n\techo $row['body'];\n}\n```\n\n----------------------------------------\n\nTITLE: HTTP Verb Route with Parameter in CodeIgniter\nDESCRIPTION: Example of an HTTP verb route that captures a parameter. This routes DELETE requests with a numeric parameter to the product/delete method, passing the parameter as an argument.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$route['products/(:num)']['DELETE'] = 'product/delete/$1';\n```\n\n----------------------------------------\n\nTITLE: Form Input Field Generation\nDESCRIPTION: Demonstrates creation of text input fields with various attributes\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$data = array(\n\t'name'\t\t=> 'username',\n\t'id'\t\t=> 'username',\n\t'value'\t\t=> 'johndoe',\n\t'maxlength'\t=> '100',\n\t'size'\t\t=> '50',\n\t'style'\t\t=> 'width:50%'\n);\n\necho form_input($data);\n```\n\n----------------------------------------\n\nTITLE: Email Word Wrap Override Example\nDESCRIPTION: Demonstrates how to selectively disable word wrapping for specific content like long URLs using unwrap tags.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nThe text of your email that\ngets wrapped normally.\n\n{unwrap}http://example.com/a_long_link_that_should_not_be_wrapped.html{/unwrap}\n\nMore text that will be\nwrapped normally.\n```\n\n----------------------------------------\n\nTITLE: Loading Number Helper in CodeIgniter\nDESCRIPTION: Code to load the number helper in a CodeIgniter application for access to number formatting functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/number_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('number');\n```\n\n----------------------------------------\n\nTITLE: Setting Inline Disposition for Email Attachment\nDESCRIPTION: Shows how to specify an inline disposition for an email attachment instead of the default attachment disposition.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$this->email->attach('image.jpg', 'inline');\n```\n\n----------------------------------------\n\nTITLE: Configuring URI Dash Translation in CodeIgniter\nDESCRIPTION: Setting to automatically convert dashes in URI segments to underscores. This is useful since dashes aren't valid in PHP class/method names but may be preferred in URLs.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/routing.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$route['translate_uri_dashes'] = FALSE;\n```\n\n----------------------------------------\n\nTITLE: Loading a Specific Driver Example in CodeIgniter\nDESCRIPTION: Shows a concrete example of loading a driver named 'Some_parent' in a CodeIgniter controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/drivers.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->load->driver('some_parent');\n```\n\n----------------------------------------\n\nTITLE: Deleting Specific Cache Files in CodeIgniter\nDESCRIPTION: Shows how to delete cache files associated with a particular page using the cache_delete() method. This is useful for clearing cache after database updates.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/caching.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->cache_delete('blog', 'comments');\n```\n\n----------------------------------------\n\nTITLE: Adding an OR NOT LIKE Clause - PHP\nDESCRIPTION: This method allows you to add a NOT LIKE clause to a query using OR to connect multiple conditions. It returns a CI_DB_query_builder instance to facilitate method chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_27\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: or_not_like($field[, $match = ''[, $side = 'both'[, $escape = NULL]]])\n\n\t\t:param string $field: Field name\n\t\t:param string $match: Text portion to match\n\t\t:param string $side: Which side to put the '%' wildcard\n\t\t:param bool $escape: Whether to escape values\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds a NOT LIKE clause to a query, separating multiple calls with OR.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Default Template for CodeIgniter Calendar Class in PHP\nDESCRIPTION: The default_template() method of the Calendar class returns an array of default template values. This method is used when a custom template has not been created by the user.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/calendar.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: default_template()\n\n\t:returns:\tAn array of template values\n\t:rtype:\tarray\n\n\tSets the default template. This method is used when you have not created\n\tyour own template.\n```\n\n----------------------------------------\n\nTITLE: Renaming Files when Adding to ZIP Archive in CodeIgniter\nDESCRIPTION: Demonstrates specifying a new name and path for files being added to a ZIP archive.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$path = '/path/to/photo.jpg';\n$new_path = '/new/path/some_photo.jpg';\n\n$this->zip->read_file($path, $new_path);\n\n// Download ZIP archive containing /new/path/some_photo.jpg\n$this->zip->download('my_archive.zip');\n```\n\n----------------------------------------\n\nTITLE: ASCII to Entities Conversion Example\nDESCRIPTION: Example showing how to convert ASCII values to character entities for consistent browser display.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$string = ascii_to_entities($string);\n```\n\n----------------------------------------\n\nTITLE: Installing PEAR and PHPUnit on Ubuntu\nDESCRIPTION: Step-by-step instructions for installing PEAR, PHPUnit, and vfsStream on Ubuntu Linux systems.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/tests/README.md#2025-04-16_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\n# Install the PEAR package\nsudo apt-get install php-pear\n\n# Add a few sources to PEAR\npear channel-discover pear.phpunit.de\npear channel-discover pear.symfony-project.com\npear channel-discover components.ez.no\npear channel-discover pear.bovigo.org\n\n# Finally install PHPUnit and vfsStream (including dependencies)\npear install --alldeps phpunit/PHPUnit\npear install --alldeps bovigo/vfsStream-beta\n\n# Finally, run 'phpunit' from within the ./tests directory\n# and you should be on your way!\n```\n\n----------------------------------------\n\nTITLE: Loading a Library in CodeIgniter Controller\nDESCRIPTION: Shows how to load a custom library from within a controller method. The library file can be referenced in either capitalized or lowercase form.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('someclass');\n```\n\n----------------------------------------\n\nTITLE: Using humanize() Function in CodeIgniter\nDESCRIPTION: Examples of using the humanize() function to convert underscored strings to human-readable format with spaces and capitalization.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\necho humanize('my_dog_spot'); // Prints 'My Dog Spot'\n```\n\nLANGUAGE: php\nCODE:\n```\necho humanize('my-dog-spot', '-'); // Prints 'My Dog Spot'\n```\n\n----------------------------------------\n\nTITLE: Upload Controller Implementation\nDESCRIPTION: Controller class handling file upload functionality with configuration settings and validation. Includes constructor, index method, and upload processing logic.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/file_uploading.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nclass Upload extends CI_Controller {\n\n\tpublic function __construct()\n\t{\n\t\tparent::__construct();\n\t\t$this->load->helper(array('form', 'url'));\n\t}\n\n\tpublic function index()\n\t{\n\t\t$this->load->view('upload_form', array('error' => ' ' ));\n\t}\n\n\tpublic function do_upload()\n\t{\n\t\t$config['upload_path']\t\t= './uploads/';\n\t\t$config['allowed_types']\t= 'gif|jpg|png';\n\t\t$config['max_size']\t\t= 100;\n\t\t$config['max_width']\t\t= 1024;\n\t\t$config['max_height']\t\t= 768;\n\n\t\t$this->load->library('upload', $config);\n\n\t\tif ( ! $this->upload->do_upload('userfile'))\n\t\t{\n\t\t\t$error = array('error' => $this->upload->display_errors());\n\n\t\t\t$this->load->view('upload_form', $error);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$data = array('upload_data' => $this->upload->data());\n\n\t\t\t$this->load->view('upload_success', $data);\n\t\t}\n\t}\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Configuring Language File Autoloading in CodeIgniter PHP\nDESCRIPTION: Sets up automatic loading of language files in CodeIgniter's autoload.php configuration. This allows for language files to be loaded automatically when the application starts.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_154.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$autoload['language'] = array();\n```\n\n----------------------------------------\n\nTITLE: Customizing Displayed Test Items in CodeIgniter PHP\nDESCRIPTION: Specifies which items should be displayed in the unit test results output.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/unit_testing.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$this->unit->set_test_items(array('test_name', 'result'));\n```\n\n----------------------------------------\n\nTITLE: Private Method Declaration in CodeIgniter Controllers\nDESCRIPTION: Example of declaring a private method in a controller. Private methods cannot be accessed via URL requests and are used for internal functionality only.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\nprivate function _utility()\n{\n\t// some code\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Model Autoload Configuration\nDESCRIPTION: Adds the model autoloader configuration array to autoload.php. This allows for automatic loading of model files when the application starts.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_160.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n/*\n| -------------------------------------------------------------------\n| Auto-load Model files\n| -------------------------------------------------------------------\n| Prototype:\n|\n| $autoload['model'] = array('my_model');\n|\n*/\n\n$autoload['model'] = array();\n```\n\n----------------------------------------\n\nTITLE: Loading Security Helper in CodeIgniter\nDESCRIPTION: Code to load the security helper in a CodeIgniter application.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/security_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('security');\n```\n\n----------------------------------------\n\nTITLE: Strip Image Tags Example in CodeIgniter\nDESCRIPTION: Example of using strip_image_tags() function to remove image tags from a string while preserving the image URL as plain text.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/security_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$string = strip_image_tags($string);\n```\n\n----------------------------------------\n\nTITLE: Fixing Email Library Quoted-printable Encoding\nDESCRIPTION: Fixes a bug where the Email Library could improperly use unsafe US-ASCII characters during Quoted-printable encoding.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_30\n\n\n\n----------------------------------------\n\nTITLE: Setting Backup Preferences in CodeIgniter\nDESCRIPTION: Shows how to set custom preferences for database backup using an array of options with the Database Utility Class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\n$prefs = array(\n\t'tables'\t=> array('table1', 'table2'),\t// Array of tables to backup.\n\t'ignore'\t=> array(),\t\t\t// List of tables to omit from the backup\n\t'format'\t=> 'txt',\t\t\t// gzip, zip, txt\n\t'filename'\t=> 'mybackup.sql',\t\t// File name - NEEDED ONLY WITH ZIP FILES\n\t'add_drop'\t=> TRUE,\t\t\t// Whether to add DROP TABLE statements to backup file\n\t'add_insert'\t=> TRUE,\t\t\t// Whether to add INSERT data to backup file\n\t'newline'\t=> \"\\n\"\t\t\t\t// Newline character used in backup file\n);\n\n$this->dbutil->backup($prefs);\n```\n\n----------------------------------------\n\nTITLE: Loading the Date Helper in CodeIgniter\nDESCRIPTION: Code snippet showing how to load the Date Helper in a CodeIgniter application. This is required before using any of the date helper functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('date');\n```\n\n----------------------------------------\n\nTITLE: Adding Primary Key to Session Table\nDESCRIPTION: These SQL statements add a primary key to the `ci_sessions` table, conditionally based on the 'sess_match_ip' setting. The first statement creates a composite key of 'id' and 'ip_address' when 'sess_match_ip' is TRUE, while the second creates a primary key on 'id' alone when 'sess_match_ip' is FALSE. The last statement drops the primary key.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_37\n\nLANGUAGE: SQL\nCODE:\n```\n// When sess_match_ip = TRUE\n\tALTER TABLE ci_sessions ADD PRIMARY KEY (id, ip_address);\n\n\t// When sess_match_ip = FALSE\n\tALTER TABLE ci_sessions ADD PRIMARY KEY (id);\n\n\t// To drop a previously created primary key (use when changing the setting)\n\tALTER TABLE ci_sessions DROP PRIMARY KEY;\n```\n\n----------------------------------------\n\nTITLE: Accessing database connection ID in CodeIgniter\nDESCRIPTION: Demonstrates how to access the database connection ID within CodeIgniter, which is often needed when working with certain database functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/call_function.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->db->conn_id;\n```\n\n----------------------------------------\n\nTITLE: Defining Translatable Field Names in Language File\nDESCRIPTION: Example showing how to define a translatable field name in a language file array without the 'lang:' prefix.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\n$lang['first_name'] = 'First Name';\n```\n\n----------------------------------------\n\nTITLE: Reduce Double Slashes Example\nDESCRIPTION: Shows how to normalize URL slashes while preserving protocol slashes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/string_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$string = \"http://example.com//index.php\";\necho reduce_double_slashes($string); // results in \"http://example.com/index.php\"\n```\n\n----------------------------------------\n\nTITLE: Keeping CodeIgniter Fork Up-to-Date\nDESCRIPTION: Provides Git commands to add the original CodeIgniter repository as a remote, pull changes from it, and update the forked repository.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/contributing.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit remote add codeigniter git://github.com/bcit-ci/CodeIgniter.git\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit pull codeigniter develop\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit push origin develop\n```\n\n----------------------------------------\n\nTITLE: Using set_status_header Function in CodeIgniter\nDESCRIPTION: Example of using the common function set_status_header() which now supports additional HTTP status codes 103, 207, 308, 421 and 451.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nset_status_header()\n```\n\n----------------------------------------\n\nTITLE: Using nl2br_except_pre Function\nDESCRIPTION: Example of converting newlines to HTML break tags while preserving content within pre tags using the nl2br_except_pre function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/typography_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$string = nl2br_except_pre($string);\n```\n\n----------------------------------------\n\nTITLE: Data Insertion Methods\nDESCRIPTION: Shows different ways to insert data into database tables using arrays and objects.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$data = array(\n    'title' => 'My title',\n    'name' => 'My Name',\n    'date' => 'My date'\n);\n\n$this->db->insert('mytable', $data);\n// Produces: INSERT INTO mytable (title, name, date) VALUES ('My title', 'My name', 'My date')\n```\n\n----------------------------------------\n\nTITLE: Converting Local Time to GMT\nDESCRIPTION: Example of using the local_to_gmt() function to convert a local UNIX timestamp to GMT. Takes local time as input and returns timestamp referenced to GMT.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$gmt = local_to_gmt(time());\n```\n\n----------------------------------------\n\nTITLE: Replacing nice_date() with DateTime in PHP\nDESCRIPTION: This snippet demonstrates how to replace the deprecated nice_date() helper function with PHP's DateTime class for date formatting. It shows how to create a DateTime object from a given input format and date, then format it to the desired output format.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_313.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nDateTime::createFromFormat($input_format, $input_date)->format($desired_output_format);\n```\n\n----------------------------------------\n\nTITLE: Using an Extended Library in CodeIgniter\nDESCRIPTION: Shows how to use a method from an extended library after loading it. The class is accessed through the standard object property naming.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$this->email->some_method();\n```\n\n----------------------------------------\n\nTITLE: Loading the Cookie Helper in CodeIgniter\nDESCRIPTION: Shows how to load the Cookie Helper in a CodeIgniter application. This is the required step before using any of the cookie functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/cookie_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('cookie');\n```\n\n----------------------------------------\n\nTITLE: Supported Database Systems and Drivers List\nDESCRIPTION: Lists all supported database systems for CodeIgniter including MySQL, Oracle, PostgreSQL, MS SQL, SQLite, CUBRID, Interbase/Firebird, and ODBC, along with their respective drivers and version requirements.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/requirements.rst#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n  - MySQL (5.1+) via the *mysql* (deprecated), *mysqli* and *pdo* drivers\n  - Oracle via the *oci8* and *pdo* drivers\n  - PostgreSQL via the *postgre* and *pdo* drivers\n  - MS SQL via the *mssql*, *sqlsrv* (version 2005 and above only) and *pdo* drivers\n  - SQLite via the *sqlite3* and *pdo* drivers\n  - CUBRID via the *cubrid* and *pdo* drivers\n  - Interbase/Firebird via the *ibase* and *pdo* drivers\n  - ODBC via the *odbc* and *pdo* drivers (you should know that ODBC is actually an abstraction layer)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Field Metadata (Method 2) in CodeIgniter\nDESCRIPTION: This example demonstrates how to get field metadata from a query result object when you've already executed a query.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$query = $this->db->query(\"YOUR QUERY\");\n$fields = $query->field_data();\n```\n\n----------------------------------------\n\nTITLE: Base URL Configuration\nDESCRIPTION: Default configuration setting for base_url which allows automatic detection of proper URL.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_53\n\nLANGUAGE: PHP\nCODE:\n```\n$config['base_url'] = '';\n```\n\n----------------------------------------\n\nTITLE: Converting Database Results to XML PHPDoc Documentation\nDESCRIPTION: PHPDoc documentation block describing a function that converts database results to XML format. Takes an associative array of preferences as input and returns the generated XML document as a string.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_10\n\nLANGUAGE: phpdoc\nCODE:\n```\n:param\tarray\t$params: An associative array of preferences\n:returns:\tThe generated XML document as a string\n:rtype:\tstring\n```\n\n----------------------------------------\n\nTITLE: Advanced Usage of lang() Function with HTML Label in CodeIgniter\nDESCRIPTION: This example demonstrates using the lang() function with additional parameters to create an HTML label tag with attributes. It's useful for form elements that need associated labels.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/language_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\necho lang('language_key', 'form_item_id', array('class' => 'myClass'));\n// Outputs: <label for=\"form_item_id\" class=\"myClass\">Language line</label>\n```\n\n----------------------------------------\n\nTITLE: Converting Accented Characters Example\nDESCRIPTION: Example demonstrating the conversion of accented characters to their ASCII equivalents.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$string = convert_accented_characters($string);\n```\n\n----------------------------------------\n\nTITLE: Generating Document Type Declarations with doctype() Function\nDESCRIPTION: Examples of using the doctype() function to generate HTML document type declarations (DTDs) with different configurations.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\necho doctype(); // <!DOCTYPE html>\n```\n\nLANGUAGE: php\nCODE:\n```\necho doctype('html4-trans'); // <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"https://www.w3.org/TR/html4/strict.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Loading Text Helper in CodeIgniter\nDESCRIPTION: Code to load the text helper library in a CodeIgniter application.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('text');\n```\n\n----------------------------------------\n\nTITLE: Loading URL Helper in CodeIgniter\nDESCRIPTION: Shows how to load the URL helper in a CodeIgniter application.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->helper('url');\n```\n\n----------------------------------------\n\nTITLE: Adding OFFSET-FETCH Support for Oracle 12c in Database Drivers\nDESCRIPTION: Adds support for OFFSET-FETCH clause with Oracle 12c for the 'oci8' and 'pdo/oci' database drivers.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_23\n\nLANGUAGE: SQL\nCODE:\n```\nOFFSET-FETCH\n```\n\n----------------------------------------\n\nTITLE: Loading Config File with Error Suppression\nDESCRIPTION: Demonstrates loading a config file with error suppression enabled for cases where the file might not exist.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/config.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$this->config->load('blog_settings', FALSE, TRUE);\n```\n\n----------------------------------------\n\nTITLE: Determining MIME Type by File Extension with get_mime_by_extension() Function\nDESCRIPTION: Demonstrates how to translate a filename extension into a MIME type based on the CodeIgniter mimes configuration file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/file_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$file = 'somefile.png';\necho $file.' is has a mime type of '.get_mime_by_extension($file);\n```\n\n----------------------------------------\n\nTITLE: Ignoring Parent Directory Path in ZIP Archive in CodeIgniter\nDESCRIPTION: Demonstrates how to exclude the parent directory path when compressing directories in a ZIP archive.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$path = '/path/to/your/directory/';\n\n$this->zip->read_dir($path, FALSE);\n```\n\n----------------------------------------\n\nTITLE: Directory Mapping with Limited Recursion Depth\nDESCRIPTION: This example demonstrates how to limit the recursion depth when mapping a directory structure, mapping only the top level directory without subdirectories.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/directory_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$map = directory_map('./mydirectory/', 1);\n```\n\n----------------------------------------\n\nTITLE: Result Set Information Methods in PHP - CodeIgniter\nDESCRIPTION: Methods for retrieving metadata about the result set including row count and field information.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\nnum_rows()\n```\n\nLANGUAGE: php\nCODE:\n```\nnum_fields()\n```\n\nLANGUAGE: php\nCODE:\n```\nfield_data()\n```\n\nLANGUAGE: php\nCODE:\n```\nfree_result()\n```\n\nLANGUAGE: php\nCODE:\n```\nlist_fields()\n```\n\n----------------------------------------\n\nTITLE: Loading the Download Helper in CodeIgniter\nDESCRIPTION: Shows how to load the Download Helper in a CodeIgniter application. This must be done before using any of the helper's functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/download_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('download');\n```\n\n----------------------------------------\n\nTITLE: Basic POST Data Access in PHP\nDESCRIPTION: Demonstrates the traditional PHP way of checking POST data versus CodeIgniter's simplified input method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/input.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$something = isset($_POST['something']) ? $_POST['something'] : NULL;\n```\n\nLANGUAGE: php\nCODE:\n```\n$something = $this->input->post('something');\n```\n\n----------------------------------------\n\nTITLE: Updating Form Upload Function Call in PHP\nDESCRIPTION: Example of updating the form_upload() function call in CodeIgniter 3.2.x. The second parameter (previously $value) has been removed as it was never used.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_320.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n// Old usage:\n// form_upload('name', 'irrelevant value', $extra);\n\n// New usage:\nform_upload('name', $extra);\n```\n\n----------------------------------------\n\nTITLE: Initializing the Parser Class in CodeIgniter\nDESCRIPTION: Shows how to load the Parser library in a CodeIgniter controller using the load library method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('parser');\n```\n\n----------------------------------------\n\nTITLE: Documenting PHP Class Methods in RST\nDESCRIPTION: Example of documenting a PHP class method using reStructuredText directives. It includes method signature, description, parameters, return values, and usage example.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/documentation/index.rst#2025-04-16_snippet_2\n\nLANGUAGE: rst\nCODE:\n```\n.. php:class:: Some_class\n\n\t.. php:method:: some_method ( $foo [, $bar [, $bat]])\n\n\t\tThis function will perform some action. The ``$bar`` array must contain\n\t\ta something and something else, and along with ``$bat`` is an optional\n\t\tparameter.\n\n\t\t:param int $foo: the foo id to do something in\n\t\t:param mixed $bar: A data array that must contain a something and something else\n\t\t:param bool $bat: whether or not to do something\n\t\t:returns: FALSE on failure, TRUE if successful\n\t\t:rtype: bool\n\n\t\t::\n\n\t\t\t$this->load->library('some_class');\n\n\t\t\t$bar = array(\n\t\t\t\t'something'\t\t=> 'Here is this parameter!',\n\t\t\t\t'something_else'\t=> 42\n\t\t\t);\n\n\t\t\t$bat = $this->some_class->should_do_something();\n\n\t\t\tif ($this->some_class->some_method(4, $bar, $bat) === FALSE)\n\t\t\t{\n\t\t\t\tshow_error('An Error Occurred Doing Some Method');\n\t\t\t}\n\n\t\t.. note:: Here is something that you should be aware of when using some_method().\n\t\t\t\tFor real.\n\n\t\tSee also :meth:`Some_class::should_do_something`\n\n\n\t.. php:method:: should_do_something()\n\n\t\t:returns: Whether or not something should be done\n\t\t:rtype: bool\n```\n\n----------------------------------------\n\nTITLE: Removing Unnecessary Constructor Call in PHP Model Class\nDESCRIPTION: Example of removing the unnecessary parent constructor call in a CodeIgniter model class. This change is required due to the removal of CI_Model::__construct() in CodeIgniter 3.2.0.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_320.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nclass Some_model extends CI_Model {\n\n\tpublic function __construct()\n\t{\n\t\t// Remove the following line:\n\t\t// parent::__construct();\n\n\t\tdo_some_other_thing();\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Getting HTTP Header Value in CodeIgniter\nDESCRIPTION: Shows how to retrieve a specific HTTP header value using the get_header method after setting the content type with a character set.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$this->output->set_content_type('text/plain', 'UTF-8');\necho $this->output->get_header('content-type');\n// Outputs: text/plain; charset=utf-8\n```\n\n----------------------------------------\n\nTITLE: Loading the HTML Helper in CodeIgniter\nDESCRIPTION: Code to load the HTML Helper in a CodeIgniter application. This must be done before any of the helper functions can be used.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('html');\n```\n\n----------------------------------------\n\nTITLE: Type Casting in PHP\nDESCRIPTION: Example of explicit type casting in PHP to ensure variables are of the expected type.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$str = (string) $str; // cast $str as a string\n```\n\n----------------------------------------\n\nTITLE: XML Convert Output Example\nDESCRIPTION: Shows the output of the xml_convert() function after converting special characters to XML entities.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/xml_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n&lt;p&gt;Here is a paragraph &amp; an entity (&#123;).&lt;/p&gt;\n```\n\n----------------------------------------\n\nTITLE: Loading XML Helper in CodeIgniter\nDESCRIPTION: Code snippet showing how to load the XML helper in a CodeIgniter application.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/xml_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('xml');\n```\n\n----------------------------------------\n\nTITLE: Deleting a Cookie with delete_cookie()\nDESCRIPTION: Demonstrates how to delete a browser cookie using the delete_cookie() function. The example shows the basic usage with just the cookie name parameter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/cookie_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\ndelete_cookie('name');\n```\n\n----------------------------------------\n\nTITLE: Byte Format Usage Examples in CodeIgniter\nDESCRIPTION: Examples demonstrating the byte_format() function usage with different numeric values to format data sizes with appropriate suffixes (Bytes, KB, MB, GB, TB). The function accepts a number of bytes and optional precision parameter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/number_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho byte_format(456); // Returns 456 Bytes\necho byte_format(4567); // Returns 4.5 KB\necho byte_format(45678); // Returns 44.6 KB\necho byte_format(456789); // Returns 447.8 KB\necho byte_format(3456789); // Returns 3.3 MB\necho byte_format(12345678912345); // Returns 1.8 GB\necho byte_format(123456789123456789); // Returns 11,228.3 TB\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Session Data in CodeIgniter\nDESCRIPTION: Shows how to retrieve all session data at once either through the native PHP $_SESSION superglobal or CodeIgniter's userdata() method with no parameters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$_SESSION\n\n// or:\n\n$this->session->userdata();\n```\n\n----------------------------------------\n\nTITLE: Switching Encryption Drivers in PHP\nDESCRIPTION: Shows how to switch between MCrypt and OpenSSL drivers for the Encryption library in CodeIgniter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n// Switch to the MCrypt driver\n$this->encryption->initialize(array('driver' => 'mcrypt'));\n\n// Switch back to the OpenSSL driver\n$this->encryption->initialize(array('driver' => 'openssl'));\n```\n\n----------------------------------------\n\nTITLE: String Replacement Using Constants in PHP\nDESCRIPTION: Example of using CodeIgniter's constants (LD and RD) in string replacement operations instead of hardcoded delimiters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$str = str_replace(LD.'foo'.RD, 'bar', $str);\n```\n\n----------------------------------------\n\nTITLE: Disabling Page Number Display\nDESCRIPTION: Example of suppressing specific page number links while maintaining pagination functionality, useful for simplified navigation interfaces\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/pagination.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$config['display_pages'] = FALSE;\n```\n\n----------------------------------------\n\nTITLE: Traditional PHP Echo Statement\nDESCRIPTION: Standard PHP syntax for echoing variables in view files.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/alternative_php.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php echo $variable; ?>\n```\n\n----------------------------------------\n\nTITLE: Loading Helper in CodeIgniter PHP\nDESCRIPTION: Demonstrates how to load a helper file in CodeIgniter. The method is called on the loader object and takes the helper name as a parameter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('name');\n```\n\n----------------------------------------\n\nTITLE: Adding Support for New MySQL SSL Constant in PHP\nDESCRIPTION: Adds support for the MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT constant from PHP 5.6.16 for the 'mysqli' driver.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_24\n\nLANGUAGE: PHP\nCODE:\n```\nMYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT\n```\n\n----------------------------------------\n\nTITLE: Updating CAPTCHA Helper Usage in PHP\nDESCRIPTION: The create_captcha() function in the CAPTCHA Helper now deprecates passing img_path, img_url, and font_path as separate parameters. These options should now be passed as part of the first parameter array.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_317.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\ncreate_captcha()\n```\n\n----------------------------------------\n\nTITLE: CI_Session unmark_flash Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::unmark_flash() which removes the flashdata mark from $_SESSION items. This prevents the items from being deleted after the next server request and converts them back to regular session data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_50\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: unmark_flash($key)\n\n\t:param\tmixed\t$key: Key to be un-marked as flashdata, or an array of multiple keys\n\t:rtype:\tvoid\n\n\tUnmarks a ``$_SESSION`` item key (or multiple ones) as\n\t\"flashdata\".\n```\n\n----------------------------------------\n\nTITLE: Truncating a Table - PHP\nDESCRIPTION: Executes a TRUNCATE statement on a specified table to quickly delete all records. Returns TRUE on success or FALSE on failure, and falls back to DELETE if TRUNCATE is not supported.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_45\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: truncate([$table = ''])\n\n\t\t:param string $table: Table name to truncate\n\t\t:returns: TRUE on success, FALSE on failure\n\t\t:rtype: bool\n\n\t\tExecutes a TRUNCATE statement on a table.\n```\n\n----------------------------------------\n\nTITLE: Initializing XML-RPC Class in CodeIgniter\nDESCRIPTION: Shows how to load the XML-RPC library in a CodeIgniter controller using the built-in loader. After loading, the library is accessible via $this->xmlrpc.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/xmlrpc.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('xmlrpc');\n```\n\n----------------------------------------\n\nTITLE: Configuring Next/Previous Month Navigation\nDESCRIPTION: Setup for enabling dynamic navigation between months using next/previous links.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/calendar.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$prefs = array(\n\t'show_next_prev'  => TRUE,\n\t'next_prev_url'   => 'http://example.com/index.php/calendar/show/'\n);\n\n$this->load->library('calendar', $prefs);\n\necho $this->calendar->generate($this->uri->segment(3), $this->uri->segment(4));\n```\n\n----------------------------------------\n\nTITLE: XML Convert Function Usage Example\nDESCRIPTION: Demonstrates the usage of xml_convert() function to convert special characters to XML entities. The function handles ampersands, less than/greater than characters, quotes, and dashes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/xml_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$string = '<p>Here is a paragraph & an entity (&#123;).</p>';\n$string = xml_convert($string);\necho $string;\n```\n\n----------------------------------------\n\nTITLE: Loading Typography Helper in CodeIgniter\nDESCRIPTION: Code to load the typography helper functions into a CodeIgniter application.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/typography_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('typography');\n```\n\n----------------------------------------\n\nTITLE: Using ordinal_format() Function in CodeIgniter\nDESCRIPTION: Examples of using the ordinal_format() function to convert numbers to their ordinal form (1st, 2nd, 3rd, etc).\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\necho ordinal_format(1); // Returns 1st\necho ordinal_format(3); // Returns 3rd\necho ordinal_format(21); // Returns 21st\necho ordinal_format(102); // Returns 102nd\necho ordinal_format(-5); // Invalid input, will return -5\n```\n\n----------------------------------------\n\nTITLE: Formatted Error Display for Image Processing\nDESCRIPTION: Shows how to display image processing errors with custom HTML formatting.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/image_lib.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$this->image_lib->display_errors('<p>', '</p>');\n```\n\n----------------------------------------\n\nTITLE: PHP Code Indentation Examples - Correct Style\nDESCRIPTION: Examples showing correct Allman style indentation with braces on their own lines at same indentation level as control statements\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\nfunction foo($bar)\n{\n\t// ...\n}\n\nforeach ($arr as $key => $val)\n{\n\t// ...\n}\n\nif ($foo == $bar)\n{\n\t// ...\n}\nelse\n{\n\t// ...\n}\n\nfor ($i = 0; $i < 10; $i++)\n{\n\tfor ($j = 0; $j < 10; $j++)\n\t{\n\t\t// ...\n\t}\n}\n\ntry \n{\n\t// ...\n}\ncatch()\n{\n\t// ...\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Trackback Class in CodeIgniter PHP\nDESCRIPTION: Demonstrates how to load and initialize the Trackback class in a CodeIgniter controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/trackback.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('trackback');\n```\n\n----------------------------------------\n\nTITLE: Setting Up Environment-Specific Database Connections\nDESCRIPTION: This example shows how to configure a test environment database connection in CodeIgniter. The framework allows for multiple connection groups that can be used for different environments (development, testing, production).\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$db['test'] = array(\n\t'dsn'\t=> '',\n\t'hostname' => 'localhost',\n\t'username' => 'root',\n\t'password' => '',\n\t'database' => 'database_name',\n\t'dbdriver' => 'mysqli',\n\t'dbprefix' => '',\n\t'pconnect' => TRUE,\n\t'db_debug' => TRUE,\n\t'cache_on' => FALSE,\n\t'cachedir' => '',\n\t'char_set' => 'utf8',\n\t'dbcollat' => 'utf8_general_ci',\n\t'swap_pre' => '',\n\t'compress' => FALSE,\n\t'encrypt' => FALSE,\n\t'stricton' => FALSE,\n\t'failover' => array()\n);\n```\n\n----------------------------------------\n\nTITLE: Directory Mapping Including Hidden Files\nDESCRIPTION: This example shows how to include hidden files in the directory mapping by setting the third parameter to TRUE.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/directory_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$map = directory_map('./mydirectory/', FALSE, TRUE);\n```\n\n----------------------------------------\n\nTITLE: Counting URI Segments in PHP with CodeIgniter\nDESCRIPTION: This method returns the total number of segments in the URI.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/uri.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\ntotal_segments()\n```\n\n----------------------------------------\n\nTITLE: Database Query Logging in CodeIgniter\nDESCRIPTION: A method to view the last executed database query, useful for debugging and query optimization.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_63\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->last_query()\n```\n\n----------------------------------------\n\nTITLE: Database Query Methods\nDESCRIPTION: Database query builder methods mentioned in bug fixes including update_batch(), count_all_results(), insert_batch() and order_by().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_19\n\nLANGUAGE: PHP\nCODE:\n```\nupdate_batch()\ncount_all_results()\ninsert_batch()\norder_by()\nis_write_type()\ncreate_table()\nalter_table()\n```\n\n----------------------------------------\n\nTITLE: Cloning Forked CodeIgniter Repository\nDESCRIPTION: Shows the Git command to clone a forked CodeIgniter repository to the local development environment.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/contributing.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit@github.com:<your-name>/CodeIgniter.git\n```\n\n----------------------------------------\n\nTITLE: CI_Session keep_flashdata Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::keep_flashdata() which preserves flashdata for an additional request cycle. This method is an alias for mark_as_flash() and prevents the automatic deletion of flashdata after the next request.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_52\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: keep_flashdata($key)\n\n\t:param\tmixed\t$key: Flashdata key to keep, or an array of multiple keys\n\t:returns:\tTRUE on success, FALSE on failure\n\t:rtype:\tbool\n\n\tRetains the specified session data key(s) as \"flashdata\"\n\tthrough the next request.\n\n\t.. note:: This is a legacy method kept only for backwards\n\t\tcompatibility with older applications. It is just\n\t\tan alias for the ``mark_as_flash()`` method.\n```\n\n----------------------------------------\n\nTITLE: Emptying a Table - PHP\nDESCRIPTION: Executes an empty operation to drop all rows from a specified table. Returns TRUE on success or FALSE on failure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_46\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: empty_table([$table = ''])\n\n\t\t:param string $table: Table name to empty\n\t\t:returns: TRUE on success, FALSE on failure\n\t\t:rtype: bool\n\n\t\tExecutes an empty operation on a table.\n```\n\n----------------------------------------\n\nTITLE: Adding Data to Calendar Cells\nDESCRIPTION: Example showing how to populate calendar cells with URL data using an associative array.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/calendar.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('calendar');\n\n$data = array(\n\t3  => 'http://example.com/news/article/2006/06/03/',\n\t7  => 'http://example.com/news/article/2006/06/07/',\n\t13 => 'http://example.com/news/article/2006/06/13/',\n\t26 => 'http://example.com/news/article/2006/06/26/'\n);\n\necho $this->calendar->generate(2006, 6, $data);\n```\n\n----------------------------------------\n\nTITLE: Fixing CAPTCHA Helper Infinite Loop\nDESCRIPTION: Fixes a bug where the CAPTCHA Helper entered an infinite loop while generating a random string.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_28\n\n\n\n----------------------------------------\n\nTITLE: Declaring XHTML 1.0 Transitional DOCTYPE in HTML\nDESCRIPTION: This DOCTYPE declaration specifies that the document is an XHTML 1.0 Transitional document. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Loading CodeIgniter Path Helper\nDESCRIPTION: Code to load the Path Helper in CodeIgniter framework.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/path_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('path');\n```\n\n----------------------------------------\n\nTITLE: Adding URL Suffix Configuration - PHP\nDESCRIPTION: New configuration options for adding URL suffixes to all URLs in the application, allowing for custom extensions like .html\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_130.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n/*\n|------------------------------------------------\n| URL suffix\n|------------------------------------------------\n|\n| This option allows you to add a suffix to all URLs.\n| For example, if a URL is this:\n|\n| example.com/index.php/products/view/shoes\n|\n| You can optionally add a suffix, like \".html\",\n| making the page appear to be of a certain type:\n|\n| example.com/index.php/products/view/shoes.html\n|\n*/\n$config['url_suffix'] = \"\";\n```\n\n----------------------------------------\n\nTITLE: Using singular() Function in CodeIgniter\nDESCRIPTION: Example of using the singular() function to convert a plural word to singular form.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho singular('dogs'); // Prints 'dog'\n```\n\n----------------------------------------\n\nTITLE: Getting Content Type in CodeIgniter\nDESCRIPTION: Demonstrates how to retrieve the current Content-Type HTTP header using the get_content_type method, which returns the MIME type without the character set.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$mime = $this->output->get_content_type();\n```\n\n----------------------------------------\n\nTITLE: Fixing Session Library Database Driver Query Builder Interference\nDESCRIPTION: Fixes a bug where the Session Library with the 'database' driver could be affected by userspace Query Builder conditions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_43\n\n\n\n----------------------------------------\n\nTITLE: Converting Numeric Permissions to Octal Notation with octal_permissions() Function\nDESCRIPTION: Demonstrates how to convert numeric file permissions into a three-character octal notation string.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/file_helper.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\necho octal_permissions(fileperms('./index.php')); // 644\n```\n\n----------------------------------------\n\nTITLE: Signing Git Commits for CodeIgniter Contributions\nDESCRIPTION: Demonstrates how to sign Git commits when contributing to CodeIgniter. This is required to certify that you have the right to submit the work as open-source.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/contributing.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit commit --signoff\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -s\n```\n\n----------------------------------------\n\nTITLE: Parsing Calendar Template in CodeIgniter Calendar Class using PHP\nDESCRIPTION: The parse_template() method of the Calendar class processes the data within the template's pseudo-variables used to display the calendar. It returns the CI_Calendar instance, allowing for method chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/calendar.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: parse_template()\n\n\t:returns:\tCI_Calendar instance (method chaining)\n\t:rtype:\tCI_Calendar\n\n\tHarvests the data within the template ``{pseudo-variables}`` used to\n\tdisplay the calendar.\n```\n\n----------------------------------------\n\nTITLE: Directory Structure for CodeIgniter Drivers\nDESCRIPTION: Shows the recommended directory and file structure layout for creating custom drivers in CodeIgniter. The main driver class and its subclasses must be organized in a specific hierarchy under the application/libraries directory.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_drivers.rst#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n-  /application/libraries/Driver_name\n\n   -  Driver_name.php\n   -  drivers\n\n      -  Driver_name_subclass_1.php\n      -  Driver_name_subclass_2.php\n      -  Driver_name_subclass_3.php\n```\n\n----------------------------------------\n\nTITLE: Initializing Calendar Class in CodeIgniter\nDESCRIPTION: Basic initialization of the Calendar class in a CodeIgniter controller using the load library function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/calendar.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('calendar');\n```\n\n----------------------------------------\n\nTITLE: Using Query Builder Where In Methods\nDESCRIPTION: Updated Query Builder where_in methods now reject non-array inputs for the second parameter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\nwhere_in()\nor_where_in()\nnot_where_in()\nor_not_where_in()\n```\n\n----------------------------------------\n\nTITLE: CI_Session mark_as_temp Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::mark_as_temp() which marks $_SESSION items as tempdata with a specific Time-To-Live (TTL). Tempdata will be automatically deleted after the specified TTL period has passed.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_54\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: mark_as_temp($key[, $ttl = 300])\n\n\t:param\tmixed\t$key: Key to mark as tempdata, or an array of multiple keys\n\t:param\tint\t$ttl: Time-to-live value for the tempdata, in seconds\n\t:returns:\tTRUE on success, FALSE on failure\n\t:rtype:\tbool\n\n\tMarks a ``$_SESSION`` item key (or multiple ones) as\n\t\"tempdata\".\n```\n\n----------------------------------------\n\nTITLE: Creating XML-RPC Request Parameters with Mixed Data Types\nDESCRIPTION: Example of creating a request array with mixed data types. Each parameter is placed in its own array with the data type specified in the second position.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/xmlrpc.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$request = array(\n\tarray('John', 'string'),\n\tarray('Doe', 'string'),\n\tarray(FALSE, 'boolean'),\n\tarray(12345, 'int')\n); \n$this->xmlrpc->request($request);\n```\n\n----------------------------------------\n\nTITLE: Alternative If-Elseif-Else Structure\nDESCRIPTION: Example of conditional statements using alternative PHP syntax with colons and endif.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/alternative_php.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php if ($username === 'sally'): ?>\n\n\t<h3>Hi Sally</h3>\n\n<?php elseif ($username === 'joe'): ?>\n\n\t<h3>Hi Joe</h3>\n\n<?php else: ?>\n\n\t<h3>Hi unknown user</h3>\n\n<?php endif; ?>\n```\n\n----------------------------------------\n\nTITLE: Setting a Custom Subclass Prefix in CodeIgniter Configuration\nDESCRIPTION: Shows the configuration setting for changing the default subclass prefix from MY_ to a custom value. This setting is found in the application/config/config.php file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$config['subclass_prefix'] = 'MY_';\n```\n\n----------------------------------------\n\nTITLE: Byte Format with Precision Parameter\nDESCRIPTION: Example showing how to use the byte_format() function with a custom precision parameter to control decimal places in the formatted output.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/number_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\necho byte_format(45678, 2); // Returns 44.61 KB\n```\n\n----------------------------------------\n\nTITLE: PHP Code Indentation Examples - Incorrect Style\nDESCRIPTION: Examples showing incorrect Allman style indentation for various PHP control structures and functions\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nfunction foo($bar) {\n\t// ...\n}\n\nforeach ($arr as $key => $val) {\n\t// ...\n}\n\nif ($foo == $bar) {\n\t// ...\n} else {\n\t// ...\n}\n\nfor ($i = 0; $i < 10; $i++)\n\t{\n\tfor ($j = 0; $j < 10; $j++)\n\t\t{\n\t\t// ...\n\t\t}\n\t}\n\ntry {\n\t// ...\n}\ncatch() {\n\t// ...\n}\n```\n\n----------------------------------------\n\nTITLE: Using word_is_countable() Function in CodeIgniter\nDESCRIPTION: Example of using the word_is_countable() function to check if a word has a plural version.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nword_is_countable('equipment'); // Returns FALSE\n```\n\n----------------------------------------\n\nTITLE: Generating Basic Calendar Display\nDESCRIPTION: Simple calendar generation examples showing current month and specific month/year display.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/calendar.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('calendar');\necho $this->calendar->generate();\n```\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('calendar');\necho $this->calendar->generate(2006, 6);\n```\n\n----------------------------------------\n\nTITLE: CI_Session __get Magic Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::__get() which allows object-style access to session data using $this->session->item instead of $_SESSION['item']. It also provides access to the session ID through $this->session->session_id.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_61\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: __get($key)\n\n\t:param\tstring\t$key: Session item key\n\t:returns:\tThe requested session data item, or NULL if it doesn't exist\n\t:rtype:\tmixed\n\n\tA magic method that allows you to use\n\t``$this->session->item`` instead of ``$_SESSION['item']``,\n\tif that's what you prefer.\n\n\tIt will also return the session ID by calling\n\t``session_id()`` if you try to access\n\t``$this->session->session_id``.\n```\n\n----------------------------------------\n\nTITLE: Fixing Database query() Method for PostgreSQL RETURNING Statements\nDESCRIPTION: Fixes a bug where the query() method in Database didn't return a result set for queries with the RETURNING statement on PostgreSQL.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_40\n\nLANGUAGE: PHP\nCODE:\n```\nquery()\n```\n\n----------------------------------------\n\nTITLE: Updating Class File Names\nDESCRIPTION: Examples of renaming class files to follow the new Ucfirst naming convention required in CodeIgniter 3.0\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_300.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\napplication/libraries/mylibrary.php -> application/libraries/Mylibrary.php\napplication/libraries/MY_email.php -> application/libraries/MY_Email.php\napplication/core/MY_log.php -> application/core/MY_Log.php\napplication/controllers/welcome.php -> application/controllers/Welcome.php\napplication/models/misc_model.php -> application/models/Misc_model.php\n```\n\n----------------------------------------\n\nTITLE: Naming Conflicts in Template Parameters in CodeIgniter\nDESCRIPTION: Example showing unexpected results when using the same name for an individual parameter and a parameter inside a variable pair.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$template = 'Hello, {firstname} {lastname} ({degrees}{degree} {/degrees})';\n$data = array(\n\t'degree' => 'Mr',\n\t'firstname' => 'John',\n\t'lastname' => 'Doe',\n\t'degrees' => array(\n\t\tarray('degree' => 'BSc'),\n\t\tarray('degree' => 'PhD')\n\t)\n);\n$this->parser->parse_string($template, $data);\n\n// Result: Hello, John Doe (Mr Mr )\n```\n\n----------------------------------------\n\nTITLE: Accessing tempdata using tempdata() method in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to access tempdata using the `$this->session->tempdata()` method. This method specifically retrieves tempdata items, ensuring that only tempdata is accessed.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_26\n\nLANGUAGE: php\nCODE:\n```\n\"$this->session->tempdata('item');\"\n```\n\n----------------------------------------\n\nTITLE: New Query Methods in Query Builder - PHP\nDESCRIPTION: The Query Builder has been enhanced with new methods such as `get_compiled_select()`, `get_compiled_insert()`, and others that return the SQL string of queries without executing them, thereby improving efficiency in query preparation.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_46\n\nLANGUAGE: php\nCODE:\n```\nfunction get_compiled_select($table = '', $where = array()) {\n    // Logic to return compiled SELECT query\n}\n\nfunction get_compiled_insert($table, $data) {\n    // Logic to return compiled INSERT query\n}\n```\n\n----------------------------------------\n\nTITLE: Database Update with Objects in CodeIgniter\nDESCRIPTION: A feature allowing objects to be passed to the update() database function, enabling use of Model class variables for queries.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_66\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->update($object);\n```\n\n----------------------------------------\n\nTITLE: Adding URI Protocol Configuration in CodeIgniter Config File (PHP)\nDESCRIPTION: This snippet demonstrates the addition of a new configuration item for URI protocol in the CodeIgniter config file. It includes options for auto-detection, PATH_INFO, and QUERY_STRING, with explanatory comments.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_b11.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n/*\n|------------------------------------------------\n| URI PROTOCOL\n|------------------------------------------------\n|\n| This item determines which server global \n| should be used to retrieve the URI string. The \n| default setting of \"auto\" works for most servers.\n| If your links do not seem to work, try one of \n| the other delicious flavors:\n| \n| 'auto'\t Default - auto detects\n| 'path_info'\t Uses the PATH_INFO \n| 'query_string'\tUses the QUERY_STRING\n*/\n\n$config['uri_protocol']\t= \"auto\";\n```\n\n----------------------------------------\n\nTITLE: Ending a Group Expression - PHP\nDESCRIPTION: This method ends a group expression and returns a DB_query_builder instance. It's used to finalize a grouping in query building, allowing for method chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_23\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: group_end()\n\n\t\t:returns: DB_query_builder instance\n\t\t:rtype: object\n\n\t\tEnds a group expression.\n```\n\n----------------------------------------\n\nTITLE: Alternative PHP Echo Syntax\nDESCRIPTION: Shortened PHP syntax for echoing variables using short tags.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/alternative_php.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?=$variable?>\n```\n\n----------------------------------------\n\nTITLE: Improvements to DB_result Class - PHP\nDESCRIPTION: The `DB_result` class is enhanced with a constructor and driver-specific properties are moved out of the core `DB_driver` class for better abstraction, promoting cleaner architecture and maintainability.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_47\n\nLANGUAGE: php\nCODE:\n```\nclass DB_result {\n    function __construct() {\n        // Constructor logic\n    }\n    public function data_seek($offset) {\n        // Logic to move the internal pointer of the result set\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Cache in CodeIgniter\nDESCRIPTION: Methods to delete cache files in CodeIgniter. Can delete cache for current URI or specify a particular path.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/caching.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// Deletes cache for the currently requested URI\n$this->output->delete_cache();\n\n// Deletes cache for /foo/bar\n$this->output->delete_cache('/foo/bar');\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Helper Prefix Configuration\nDESCRIPTION: Shows the configuration setting in config.php for customizing the helper extension prefix.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$config['subclass_prefix'] = 'MY_';\n```\n\n----------------------------------------\n\nTITLE: Signing Git Commits for CodeIgniter Contributions\nDESCRIPTION: Instructions for signing Git commits when contributing to CodeIgniter, which is required to certify that contributors have the right to submit their work. This demonstrates how to use the --signoff flag.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/contributing/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit commit --signoff\n```\n\n----------------------------------------\n\nTITLE: Loading the Inflector Helper in CodeIgniter\nDESCRIPTION: Code to load the Inflector Helper in a CodeIgniter application. This must be called before using any of the helper functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('inflector');\n```\n\n----------------------------------------\n\nTITLE: Setting Calendar Display Preferences\nDESCRIPTION: Demonstrates how to set calendar display preferences like start day and month/day name formats.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/calendar.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$prefs = array(\n\t'start_day'    => 'saturday',\n\t'month_type'   => 'long',\n\t'day_type'     => 'short'\n);\n\n$this->load->library('calendar', $prefs);\n\necho $this->calendar->generate();\n```\n\n----------------------------------------\n\nTITLE: Creating a Footer Template in CodeIgniter\nDESCRIPTION: HTML template for the footer portion of static pages. It includes a copyright notice and closes the HTML tags opened in the header template.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/static_pages.rst#2025-04-16_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n\t\t\t<em>&copy; 2015</em>\n\t</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Loading the Directory Helper in CodeIgniter\nDESCRIPTION: This snippet demonstrates how to load the Directory Helper in a CodeIgniter application. The helper must be loaded before its functions can be used.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/directory_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('directory');\n```\n\n----------------------------------------\n\nTITLE: Fixing Form Validation Library Error Feedback\nDESCRIPTION: Fixes a bug where the Form Validation Library didn't provide error feedback for failed validation on empty requests.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_35\n\n\n\n----------------------------------------\n\nTITLE: Setting Application Folder Name in CodeIgniter\nDESCRIPTION: Example of how to rename the application folder by setting the $application_folder variable in index.php.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/managing_apps.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$application_folder = 'application';\n```\n\n----------------------------------------\n\nTITLE: Selecting Specific Application in Multi-App Setup\nDESCRIPTION: Example demonstrating how to select a specific application ('foo') in a multi-application CodeIgniter installation.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/managing_apps.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$application_folder = 'applications/foo';\n```\n\n----------------------------------------\n\nTITLE: Dropping Database Column Method\nDESCRIPTION: Method signature for dropping a column from a database table. Returns boolean indicating success or failure.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/forge.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\ndrop_column()\n```\n\n----------------------------------------\n\nTITLE: Fixing Database Drivers SQL Mode Handling for MySQL\nDESCRIPTION: Fixes bugs related to SQL mode handling for MySQL in the 'mysql', 'mysqli', and 'pdo/mysql' database drivers.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_42\n\n\n\n----------------------------------------\n\nTITLE: Adding a HAVING Clause - PHP\nDESCRIPTION: This method adds a HAVING clause to a query, which is typically used to filter results after aggregation. The method returns a CI_DB_query_builder instance, allowing further method chaining.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/query_builder.rst#2025-04-16_snippet_28\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: having($key[, $value = NULL[, $escape = NULL]])\n\n\t\t:param mixed $key: Field name or array of field/value pairs\n\t\t:param string $value: Value if $key is an identifier\n\t\t:param string $escape: Whether to escape values\n\t\t:returns: CI_DB_query_builder instance\n\t\t:rtype: CI_DB_query_builder\n\n\t\tAdds a HAVING clause to a query, separating multiple calls with AND.\n```\n\n----------------------------------------\n\nTITLE: Adding New Configuration Options in CodeIgniter PHP\nDESCRIPTION: Configuration updates required for CodeIgniter 1.4.0 upgrade, including system hooks enablement and URL character restrictions settings in config.php file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_140.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n/*\n|--------------------------------------------------------------------------\n| Enable/Disable System Hooks\n|--------------------------------------------------------------------------\n|\n| If you would like to use the \"hooks\" feature you must enable it by\n| setting this variable to TRUE (boolean).  See the user guide for details.\n|\n*/\n$config['enable_hooks'] = FALSE;\n\n\n/*\n|--------------------------------------------------------------------------\n| Allowed URL Characters\n|--------------------------------------------------------------------------\n|\n| This lets you specify which characters are permitted within your URLs.\n| When someone tries to submit a URL with disallowed characters they will\n| get a warning message.\n|\n| As a security measure you are STRONGLY encouraged to restrict URLs to\n| as few characters as possible.  By default only these are allowed: a-z 0-9~%.:_-\n|\n| Leave blank to allow all characters -- but only if you are insane.\n|\n| DO NOT CHANGE THIS UNLESS YOU FULLY UNDERSTAND THE REPERCUSSIONS!!\n|\n*/\n$config['permitted_uri_chars'] = 'a-z 0-9~%.:_-';\n```\n\n----------------------------------------\n\nTITLE: Formatting Complex XML-RPC Response Data\nDESCRIPTION: Example showing how to format a complex response for an XML-RPC server method. Demonstrates the proper structure for returning multiple data items using a struct data type.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/xmlrpc.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$response = array(\n\tarray(\n\t\t'first_name' => array('John', 'string'),\n\t\t'last_name' => array('Doe', 'string'),\n\t\t'member_id' => array(123435, 'int'),\n\t\t'todo_list' => array(array('clean house', 'call mom', 'water plants'), 'array'),\n\t),\n\t'struct'\n);\n```\n\n----------------------------------------\n\nTITLE: CI_Session get_userdata Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::get_userdata() which returns a reference to the $_SESSION array. This is a legacy method maintained for backwards compatibility and provides direct access to the session data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_44\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: &get_userdata()\n\n\t:returns:\tA reference to ``$_SESSION``\n\t:rtype:\tarray\n\n\tReturns a reference to the ``$_SESSION`` array.\n\n\t.. note:: This is a legacy method kept only for backwards\n\t\tcompatibility with older applications.\n```\n\n----------------------------------------\n\nTITLE: Using Ordinal Format Function in Inflector Helper\nDESCRIPTION: New function ordinal_format() added to the Inflector Helper for formatting numbers as ordinals.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\nordinal_format()\n```\n\n----------------------------------------\n\nTITLE: Strip Quotes Example\nDESCRIPTION: Shows how to remove both single and double quotes from a string.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/string_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Joe's \\\"dinner\\\"\";\n$string = strip_quotes($string); //results in \"Joes dinner\"\n```\n\n----------------------------------------\n\nTITLE: DocBlock Style Method Documentation in PHP\nDESCRIPTION: Example of proper DocBlock style comments for a method in CodeIgniter, including parameter and return value documentation.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n/**\n * Encodes string for use in XML\n *\n * @param\tstring\t$str\tInput string\n * @return\tstring\n */\nfunction xml_encode($str)\n```\n\n----------------------------------------\n\nTITLE: Fixing Session Library Read Failure Warnings\nDESCRIPTION: Fixes a bug where the Session Library could generate multiple redundant warnings in case of a read failure with the 'files' driver, due to a bug in PHP.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_34\n\n\n\n----------------------------------------\n\nTITLE: Updating Encryption Library's create_key() Method in PHP\nDESCRIPTION: Updates the create_key() method in the Encryption Library to use PHP 7's random_bytes() function when available.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_22\n\nLANGUAGE: PHP\nCODE:\n```\ncreate_key()\n```\n\n----------------------------------------\n\nTITLE: Altering ci_sessions Table for MySQL in CodeIgniter Upgrade\nDESCRIPTION: SQL query to modify the 'id' column of the ci_sessions table in MySQL databases. This change is necessary when upgrading CodeIgniter, especially if using the Session Library with the 'database' driver.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_312.rst#2025-04-16_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nALTER TABLE ci_sessions CHANGE id id varchar(128) NOT NULL;\n```\n\n----------------------------------------\n\nTITLE: Word Wrap Example\nDESCRIPTION: Example showing how to wrap text at a specified character count while maintaining complete words.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Here is a simple string of text that will help us demonstrate this function.\";\necho word_wrap($string, 25);\n```\n\n----------------------------------------\n\nTITLE: CI_Session mark_as_flash Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::mark_as_flash() which marks $_SESSION items as flashdata. Flashdata are session items that will be available only for the next server request and automatically cleared afterward.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_48\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: mark_as_flash($key)\n\n\t:param\tmixed\t$key: Key to mark as flashdata, or an array of multiple keys\n\t:returns:\tTRUE on success, FALSE on failure\n\t:rtype:\tbool\n\n\tMarks a ``$_SESSION`` item key (or multiple ones) as\n\t\"flashdata\".\n```\n\n----------------------------------------\n\nTITLE: Altering ci_sessions Table for PostgreSQL in CodeIgniter Upgrade\nDESCRIPTION: SQL query to modify the 'id' column of the ci_sessions table in PostgreSQL databases. This alteration is required when upgrading CodeIgniter, particularly if using the Session Library with the 'database' driver.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_312.rst#2025-04-16_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nALTER TABLE ci_sessions ALTER COLUMN id SET DATA TYPE varchar(128);\n```\n\n----------------------------------------\n\nTITLE: File Upload Wildcard Configuration\nDESCRIPTION: Configuration setting to allow all file types in the File Uploading Class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_54\n\nLANGUAGE: PHP\nCODE:\n```\n$config['allowed_types'] = '*';\n```\n\n----------------------------------------\n\nTITLE: Creating Table of Contents in reStructuredText for CodeIgniter Documentation\nDESCRIPTION: A reStructuredText directive that creates a table of contents listing the main conceptual pages of the CodeIgniter documentation. The 'titlesonly' option displays only the page titles without their subtitles.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/overview/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. toctree::\n\t:titlesonly:\n\t\n\tGetting Started <getting_started>\n\tCodeIgniter at a Glance <at_a_glance>\n\tSupported Features <features>\n\tApplication Flow Chart <appflow>\n\tModel-View-Controller <mvc>\n\tArchitectural Goals <goals>\n```\n\n----------------------------------------\n\nTITLE: Extended Array Helper Functions\nDESCRIPTION: Example of extending the Array Helper with custom functions by creating a MY_array_helper.php file with new and overridden functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n// any_in_array() is not in the Array Helper, so it defines a new function\\nfunction any_in_array($needle, $haystack)\\n{\\n\\t$needle = is_array($needle) ? $needle : array($needle);\\n\\n\\tforeach ($needle as $item)\\n\\t{\\n\\t\\tif (in_array($item, $haystack))\\n\\t\\t{\\n\\t\\t\\treturn TRUE;\\n\\t\\t}\\n\\t}\\n\\n\\treturn FALSE;\\n}\\n\\n// random_element() is included in Array Helper, so it overrides the native function\\nfunction random_element($array)\\n{\\n\\tshuffle($array);\\n\\treturn array_pop($array);\\n}\n```\n\n----------------------------------------\n\nTITLE: Database Query Builder Operations\nDESCRIPTION: SQL query operations and database methods referenced in bug fixes, including transaction handling, table creation, and data manipulation.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_51\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE TABLE\nRENAME\nDELETE\nTRUNCATE TABLE\nLIKE\n```\n\n----------------------------------------\n\nTITLE: Short Form Git Commit Signing for CodeIgniter Contributions\nDESCRIPTION: Alternative shorthand command for signing Git commits when contributing to the CodeIgniter project using the -s flag instead of the full --signoff option.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/contributing/index.rst#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -s\n```\n\n----------------------------------------\n\nTITLE: Declaring MathML 1.01 DOCTYPE\nDESCRIPTION: This DOCTYPE declaration specifies that the document is a MathML 1.01 document. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_14\n\nLANGUAGE: XML\nCODE:\n```\n<!DOCTYPE math SYSTEM \"https://www.w3.org/Math/DTD/mathml1/mathml.dtd\">\n```\n\n----------------------------------------\n\nTITLE: CI_Session has_userdata Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::has_userdata() which checks if a specific item exists in the $_SESSION array. This is a legacy method that is equivalent to using isset($_SESSION[$key]).\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_45\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: has_userdata($key)\n\n\t:param\tstring\t$key: Session item key\n\t:returns:\tTRUE if the specified key exists, FALSE if not\n\t:rtype:\tbool\n\n\tChecks if an item exists in ``$_SESSION``.\n\n\t.. note:: This is a legacy method kept only for backwards\n\t\tcompatibility with older applications. It is just\n\t\tan alias for ``isset($_SESSION[$key])`` - please\n\t\tuse that instead.\n```\n\n----------------------------------------\n\nTITLE: Disabling Profiler in CodeIgniter\nDESCRIPTION: Shows how to disable the Profiler tool using the enable_profiler method with FALSE parameter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_12\n\nLANGUAGE: PHP\nCODE:\n```\n$this->output->enable_profiler(FALSE);\n```\n\n----------------------------------------\n\nTITLE: Alternator Function Examples\nDESCRIPTION: Demonstrates how to alternate between multiple strings in a loop using the alternator function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/string_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nfor ($i = 0; $i < 10; $i++)\n{\n    echo alternator('string one', 'string two');\n}\n```\n\nLANGUAGE: php\nCODE:\n```\nfor ($i = 0; $i < 10; $i++)\n{\n    echo alternator('one', 'two', 'three', 'four', 'five');\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Received Trackbacks in CodeIgniter PHP\nDESCRIPTION: Demonstrates how to receive and process a trackback in a CodeIgniter controller function, including validation and database insertion.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/trackback.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->library('trackback');\n$this->load->database();\n\nif ($this->uri->segment(3) == FALSE)\n{\n\t$this->trackback->send_error('Unable to determine the entry ID');\n}\n\nif ( ! $this->trackback->receive())\n{\n\t$this->trackback->send_error('The Trackback did not contain valid data');\n}\n\n$data = array(\n\t'tb_id'      => '',\n\t'entry_id'   => $this->uri->segment(3),\n\t'url'        => $this->trackback->data('url'),\n\t'title'      => $this->trackback->data('title'),\n\t'excerpt'    => $this->trackback->data('excerpt'),\n\t'blog_name'  => $this->trackback->data('blog_name'),\n\t'tb_date'    => time(),\n\t'ip_address' => $this->input->ip_address()\n);\n\n$sql = $this->db->insert_string('trackbacks', $data);\n$this->db->query($sql);\n\n$this->trackback->send_success();\n```\n\n----------------------------------------\n\nTITLE: Fixing Loader Library model() Method Instantiation\nDESCRIPTION: Fixes a bug where the model() method in Loader Library directly instantiated the CI_Model or MY_Model classes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_39\n\nLANGUAGE: PHP\nCODE:\n```\nmodel()\n```\n\n----------------------------------------\n\nTITLE: Fixing Database Forge SET and ENUM Field Handling\nDESCRIPTION: Fixes a bug where Database Forge couldn't properly handle SET and ENUM type fields with string values.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_31\n\n\n\n----------------------------------------\n\nTITLE: Removing OCI8 Database Driver Methods in PHP\nDESCRIPTION: The OCI8 database driver no longer includes get_cursor() and stored_procedure() methods. Developers should use oci_new_cursor() and the public $conn_id property instead.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_320.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\noci_new_cursor()\n```\n\n----------------------------------------\n\nTITLE: Counting Table Rows in CodeIgniter\nDESCRIPTION: Shows how to determine the number of rows in a specified database table. The method takes the table name as a parameter and returns an integer representing the row count.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/helpers.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho $this->db->count_all('my_table');\n```\n\n----------------------------------------\n\nTITLE: Declaring Custom Input Class in CodeIgniter PHP\nDESCRIPTION: Example of creating a custom Input class to replace CodeIgniter's core Input class. The class must use the CI_ prefix and be placed in application/core/ directory.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/core_classes.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nclass CI_Input {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Creating PostgreSQL Session Table\nDESCRIPTION: This SQL statement creates a table named `ci_sessions` in PostgreSQL, used for storing session information.  The table includes columns for session ID, IP address, timestamp, and data, along with an index on the timestamp field.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_36\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE TABLE \"ci_sessions\" (\n\t\t\"id\" varchar(128) NOT NULL,\n\t\t\"ip_address\" varchar(45) NOT NULL,\n\t\t\"timestamp\" bigint DEFAULT 0 NOT NULL,\n\t\t\"data\" text DEFAULT '' NOT NULL\n\t);\n\n\tCREATE INDEX \"ci_sessions_timestamp\" ON \"ci_sessions\" (\"timestamp\");\n```\n\n----------------------------------------\n\nTITLE: Adding Output Compression Configuration in PHP\nDESCRIPTION: Configuration setting to enable/disable Gzip output compression for faster page loads. Includes warning about potential blank page issues when compression is enabled due to premature output.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_141.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n/*\n|--------------------------------------------------------------------------\n| Output Compression\n|--------------------------------------------------------------------------\n|\n| Enables Gzip output compression for faster page loads.  When enabled,\n| the output class will test whether your server supports Gzip.\n| Even if it does, however, not all browsers support compression\n| so enable only if you are reasonably sure your visitors can handle it.\n|\n| VERY IMPORTANT:  If you are getting a blank page when compression is enabled it\n| means you are prematurely outputting something to your browser. It could\n| even be a line of whitespace at the end of one of your scripts.  For\n| compression to work, nothing can be sent before the output buffer is called\n| by the output class.  Do not \"echo\" any values with compression enabled.\n|\n*/\n$config['compress_output'] = FALSE;\n```\n\n----------------------------------------\n\nTITLE: Testing File Writability in CodeIgniter\nDESCRIPTION: The is_really_writable() function tests whether a file is actually writable by attempting to write to it. This is useful on Windows platforms where the standard is_writable() may return unreliable results.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nif (is_really_writable('file.txt'))\n{\n\techo \"I could write to this if I wanted to\";\n}\nelse\n{\n\techo \"File is not writable\";\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Clean URLs in CodeIgniter\nDESCRIPTION: Demonstrates how CodeIgniter generates clean, segment-based URLs instead of using query strings. This approach is more search-engine friendly and improves readability.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/overview/at_a_glance.rst#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nexample.com/news/article/345\n```\n\n----------------------------------------\n\nTITLE: PHP Function Name Change for Countable Check\nDESCRIPTION: Due to PHP 7.3 introducing a native is_countable() function that conflicts with CodeIgniter's existing helper function, calls to is_countable() must be renamed to word_is_countable().\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_3110.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n// Old code\nis_countable($word);\n\n// New code\nword_is_countable($word);\n```\n\n----------------------------------------\n\nTITLE: Enhanced db_set_charset Method - PHP\nDESCRIPTION: The `db_set_charset()` method is simplified to accept only one parameter, following the removal of legacy support for older MySQL versions. This ensures compatibility with MySQL version 5.1 and above.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_45\n\nLANGUAGE: php\nCODE:\n```\nfunction db_set_charset($charset) {\n    // Logic to set the character set for the database connection\n}\n```\n\n----------------------------------------\n\nTITLE: CI_Session get_temp_keys Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::get_temp_keys() which retrieves a list of all $_SESSION keys that have been marked as tempdata. This helps identify which session items will be automatically deleted after their TTL expires.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_55\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: get_temp_keys()\n\n\t:returns:\tArray containing the keys of all \"tempdata\" items.\n\t:rtype:\tarray\n\n\tGets a list of all ``$_SESSION`` that have been marked as\n\t\"tempdata\".\n```\n\n----------------------------------------\n\nTITLE: Accessing user agent in CodeIgniter\nDESCRIPTION: This shows how to access user agent information via CodeIgniter's Input class\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_32\n\nLANGUAGE: php\nCODE:\n```\n\"$this->input->user_agent()\"\n```\n\n----------------------------------------\n\nTITLE: String Increment Examples\nDESCRIPTION: Shows different ways to increment strings by appending numbers with various separators.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/string_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\necho increment_string('file', '_'); // \"file_1\"\necho increment_string('file', '-', 2); // \"file-2\"\necho increment_string('file_4'); // \"file_5\"\n```\n\n----------------------------------------\n\nTITLE: Using String Instead of Array for Variable Pairs in CodeIgniter\nDESCRIPTION: Example showing unexpected results when providing a string when an array is expected for a variable pair.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$template = 'Hello, {firstname} {lastname} ({degrees}{degree} {/degrees})';\n$data = array(\n\t'degrees' => 'Mr',\n\t'firstname' => 'John',\n\t'lastname' => 'Doe',\n\t'titles' => array(\n\t\tarray('degree' => 'BSc'),\n\t\tarray('degree' => 'PhD')\n\t)\n);\n$this->parser->parse_string($template, $data);\n\n// Result: Hello, John Doe (Mr{degree} {/degrees})\n```\n\n----------------------------------------\n\nTITLE: Fixing Database version() Method for OCI Drivers\nDESCRIPTION: Fixes a bug where the version() method in Database returned banner text instead of only the version number with the 'oci8' and 'pdo/oci' drivers.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_36\n\nLANGUAGE: PHP\nCODE:\n```\nversion()\n```\n\n----------------------------------------\n\nTITLE: Fixing Session Library State Maintenance for Redis and Memcached Drivers\nDESCRIPTION: Fixes a bug where the Session Library doesn't properly maintain its state after ID regeneration with the 'redis' and 'memcached' drivers on PHP 7.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_41\n\n\n\n----------------------------------------\n\nTITLE: Loading Views with Objects in CodeIgniter\nDESCRIPTION: A method to pass objects when loading views, enabling more flexibility in data passing to view files.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_64\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->view('my_view', $object);\n```\n\n----------------------------------------\n\nTITLE: Disabling Unit Testing in CodeIgniter PHP\nDESCRIPTION: Deactivates unit testing, allowing tests to remain in the code without being executed.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/unit_testing.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$this->unit->active(FALSE);\n```\n\n----------------------------------------\n\nTITLE: Form Validation Run Method Definition\nDESCRIPTION: Class method definition for executing the validation routines with optional group name parameter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/form_validation.rst#2025-04-16_snippet_23\n\nLANGUAGE: PHP\nCODE:\n```\nrun([$config = NULL[, $data = NULL]])\n```\n\n----------------------------------------\n\nTITLE: Updating autoload.php in CodeIgniter 2.0.3 (PHP)\nDESCRIPTION: Modification to the autoload.php file to remove the APPPATH.'third_party' package from the autoload configuration. This change can provide performance gains if no additional packages are being autoloaded.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_203.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$autoload['packages'] = array(APPPATH.'third_party');\n```\n\nLANGUAGE: PHP\nCODE:\n```\n$autoload['packages'] = array();\n```\n\n----------------------------------------\n\nTITLE: In-Code Comments in PHP\nDESCRIPTION: Examples of proper single-line commenting styles within CodeIgniter code, showing both simple comments and longer explanatory blocks.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n// break up the string by newlines\n$parts = explode(\"\\n\", $str);\n\n// A longer comment that needs to give greater detail on what is\n// occurring and why can use multiple single-line comments.  Try to\n// keep the width reasonable, around 70 characters is the easiest to\n// read.  Don't hesitate to link to permanent external resources\n// that may provide greater detail:\n//\n// http://example.com/information_about_something/in_particular/\n\n$parts = $this->foo($parts);\n```\n\n----------------------------------------\n\nTITLE: Updating CLI Error Templates in CodeIgniter 3.0.1\nDESCRIPTION: Instructions for updating the CLI error template files in the application views directory during the upgrade process.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_301.rst#2025-04-16_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\nStep 2: Update your CLI error templates\n=======================================\n\nReplace all files under your *application/views/errors/cli/* directory.\n```\n\n----------------------------------------\n\nTITLE: Passing Parameters When Loading a Library in CodeIgniter\nDESCRIPTION: Shows how to pass parameters to a library when initializing it. Parameters are passed as an array in the second argument of the load->library() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/creating_libraries.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$params = array('type' => 'large', 'color' => 'red');\n\n$this->load->library('someclass', $params);\n```\n\n----------------------------------------\n\nTITLE: Fixing Form Helper Checkbox and Radio Button Unchecking\nDESCRIPTION: Fixes a bug where set_checkbox() and set_radio() functions didn't uncheck inputs on a submitted form if the default state is checked.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_26\n\nLANGUAGE: PHP\nCODE:\n```\nset_checkbox()\nset_radio()\n```\n\n----------------------------------------\n\nTITLE: Initializing XML-RPC Client in CodeIgniter PHP\nDESCRIPTION: Creates an XML-RPC client controller that sends a request to a remote XML-RPC server. Demonstrates loading required libraries, setting server URL, and handling response processing.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/xmlrpc.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nclass Xmlrpc_client extends CI_Controller {\n\tpublic function index()\n\t{\n\t\t$this->load->helper('url');\n\t\t$server_url = site_url('xmlrpc_server');\n\n\t\t$this->load->library('xmlrpc');\n\n\t\t$this->xmlrpc->server($server_url, 80);\n\t\t$this->xmlrpc->method('Greetings');\n\n\t\t$request = array('How is it going?');\n\t\t$this->xmlrpc->request($request);\n\n\t\tif ( ! $this->xmlrpc->send_request())\n\t\t{\n\t\t\techo $this->xmlrpc->display_error();\n\t\t}\n\t\telse\n\t\t{\n\t\t\techo '<pre>';\n\t\t\tprint_r($this->xmlrpc->display_response());\n\t\t\techo '</pre>';\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing CI_Router Properties\nDESCRIPTION: This PHP snippet suggests accessing public properties of CI_Router directly instead of using the deprecated fetch_directory(), fetch_class(), and fetch_method() methods, which simply return those properties now.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_300.rst#2025-04-16_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\n\t$this->router->directory;\n\t$this->router->class;\n\t$this->router->method;\n```\n\n----------------------------------------\n\nTITLE: Replacing is_numeric() Check in PHP\nDESCRIPTION: Deprecated the use of is_numeric() in various places and replaced it with a regular expression to check for non-numeric characters.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_58\n\nLANGUAGE: PHP\nCODE:\n```\npreg_match(\"/[^0-9]/\", $n)\n```\n\n----------------------------------------\n\nTITLE: Row Object Retrieval in PHP - CodeIgniter\nDESCRIPTION: Method to retrieve a specific row from the result set as a stdClass object. Takes optional row index parameter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nrow_object([$n = 0])\n```\n\n----------------------------------------\n\nTITLE: Updating get_dir_file_info() Function Call in PHP\nDESCRIPTION: Demonstrates how to update the get_dir_file_info() function call to enable recursiveness by setting the second parameter to FALSE. This change is necessary due to a non-backwards compatible modification in CodeIgniter 2.0.0.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_200.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nget_dir_file_info('/path/to/directory', FALSE);\n```\n\n----------------------------------------\n\nTITLE: Fetching Text Lines\nDESCRIPTION: Example of retrieving translated text from loaded language files\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/language.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$this->lang->line('language_key');\n\n// With error logging disabled\n$this->lang->line('misc_key', FALSE);\n```\n\n----------------------------------------\n\nTITLE: Declaring HTML 4 Strict DOCTYPE\nDESCRIPTION: This DOCTYPE declaration specifies that the document follows the HTML 4.01 Strict specification. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_11\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"https://www.w3.org/TR/html4/strict.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple ZIP Archives in CodeIgniter\nDESCRIPTION: Demonstrates clearing cache data between operations to create multiple ZIP archives with different content.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/zip.rst#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n$name = 'my_bio.txt';\n$data = 'I was born in an elevator...';\n\n$this->zip->add_data($name, $data);\n$zip_file = $this->zip->get_zip();\n\n$this->zip->clear_data();\n\n$name = 'photo.jpg';\n$this->zip->read_file(\"/path/to/photo.jpg\"); // Read the file's contents\n\n$this->zip->download('myphotos.zip');\n```\n\n----------------------------------------\n\nTITLE: Using Doctype Function in HTML Helper\nDESCRIPTION: The doctype() function in HTML Helper now defaults to HTML 5.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_10\n\nLANGUAGE: PHP\nCODE:\n```\ndoctype()\n```\n\n----------------------------------------\n\nTITLE: PHP Function References\nDESCRIPTION: Referenced PHP functions and methods that were modified or fixed in CodeIgniter 3.0, including mb_convert_encoding(), hash_equals(), hash_pbkdf2(), and array manipulation functions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_50\n\nLANGUAGE: PHP\nCODE:\n```\nmb_convert_encoding()\nhash_equals()\nhash_pbkdf2()\narray_column()\narray_replace()\narray_replace_recursive()\nhex2bin()\nquoted_printable_encode()\n```\n\n----------------------------------------\n\nTITLE: CLI Request Check with is_cli()\nDESCRIPTION: Shows the replacement of the deprecated CI_Input::is_cli_request() method with the is_cli() function for checking command line interface requests. The new function is available universally and simplifies the process.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_300.rst#2025-04-16_snippet_10\n\nLANGUAGE: PHP\nCODE:\n```\n\t// Old\n\t$this->input->is_cli_request();\n\n\t// New\n\tis_cli();\n```\n\n----------------------------------------\n\nTITLE: Creating Calendar Template with Array Method\nDESCRIPTION: Example of creating a calendar template using the array method with key-value pairs for specific elements.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/calendar.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$prefs['template'] = array(\n\t'table_open'           => '<table class=\"calendar\">',\n\t'cal_cell_start'       => '<td class=\"day\">',\n\t'cal_cell_start_today' => '<td class=\"today\">'\n);\n    \n$this->load->library('calendar', $prefs);\n    \necho $this->calendar->generate();\n```\n\n----------------------------------------\n\nTITLE: Updating Cookie Configuration in CodeIgniter Config File (PHP)\nDESCRIPTION: This snippet shows the correction of a typo in the cookie configuration section of the CodeIgniter config file. The array name is changed from $conf to $config for proper functionality.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_b11.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$config['cookie_prefix']\t= \"\";\n$config['cookie_domain']\t= \"\";\n$config['cookie_path']\t= \"/\";\n```\n\n----------------------------------------\n\nTITLE: Setting Default Controller in CodeIgniter Routes\nDESCRIPTION: Shows how to configure the default controller in the routes.php file. This controller will be loaded when no URI segments are present in the request.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$route['default_controller'] = 'blog';\n```\n\n----------------------------------------\n\nTITLE: Escaping Database Queries in CodeIgniter\nDESCRIPTION: A method to escape strings for safe use in database queries, replacing the deprecated smart_escape_str() function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_67\n\nLANGUAGE: PHP\nCODE:\n```\n$this->db->escape()\n```\n\n----------------------------------------\n\nTITLE: Accessing URI Properties in CodeIgniter\nDESCRIPTION: Description of deprecated routing methods that have been removed in favor of using class properties directly.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nfetch_directory()\nfetch_class()\nfetch_method()\n```\n\n----------------------------------------\n\nTITLE: Fixing String Helper alternator() Function\nDESCRIPTION: Fixes a bug where the alternator() function in String Helper couldn't be called without arguments.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_32\n\nLANGUAGE: PHP\nCODE:\n```\nalternator()\n```\n\n----------------------------------------\n\nTITLE: Replacing standard_date() function usage in CodeIgniter 3.1\nDESCRIPTION: The standard_date() function is deprecated in favor of PHP's native date() function. Users are encouraged to replace old standard_date() calls with date() while using the same constants for formatting.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_300.rst#2025-04-16_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\n// Old way\nstandard_date(); // defaults to standard_date('DATE_RFC822', now());\n\n// Replacement\ndate(DATE_RFC822, now());\n\n// Old way\nstandard_date('DATE_ATOM', $time);\n\n// Replacement\ndate(DATE_ATOM, $time);\n```\n\n----------------------------------------\n\nTITLE: Removing Legacy Database Configuration\nDESCRIPTION: Removes the deprecated active_r setting from the database configuration array.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_160.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$db['default']['active_r'] = TRUE;\n```\n\n----------------------------------------\n\nTITLE: Using underscore() Function in CodeIgniter\nDESCRIPTION: Example of using the underscore() function to convert a string with spaces to one with underscores.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\necho underscore('my dog spot'); // Prints 'my_dog_spot'\n```\n\n----------------------------------------\n\nTITLE: Form Validation Method Deprecation\nDESCRIPTION: The prep_for_form() method in the Form Validation Library is being deprecated and scheduled for removal in version 3.1+. This method was used for HTML encoding of input data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_306.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nprep_for_form()\n```\n\n----------------------------------------\n\nTITLE: Updating String Helper Function in PHP\nDESCRIPTION: Fixed a bug in the repeater() function of the string helper.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_55\n\nLANGUAGE: PHP\nCODE:\n```\nFixed a bug in the ``repeater()`` function of :doc:`string helper <./helpers/string_helper>`.\n```\n\n----------------------------------------\n\nTITLE: System Directory Update Instructions\nDESCRIPTION: Instructions for updating system files and handling custom developed files during the upgrade process.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_310.rst#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nStep 1: Update your CodeIgniter files\n=====================================\n\nReplace all files and directories in your *system/* directory.\n\n.. note:: If you have any custom developed files in these directories,\n\tplease make copies of them first.\n```\n\n----------------------------------------\n\nTITLE: Fixing Config Library base_url() Method for IPv6\nDESCRIPTION: Fixes a bug where the base_url() method in Config Library didn't use proper formatting for IPv6 when falling back to $_SERVER['SERVER_ADDR'].\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_27\n\nLANGUAGE: PHP\nCODE:\n```\nbase_url()\n```\n\n----------------------------------------\n\nTITLE: Handling Nested Array Keys in Input Library Methods\nDESCRIPTION: Reference to the ability to use nested array keys in Input Library's get_post() and post_get() methods.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nget_post()\npost_get()\n```\n\n----------------------------------------\n\nTITLE: CI_Session unset_userdata Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::unset_userdata() which unsets specific keys from the $_SESSION array. It can unset a single item or multiple items using an array of keys and is equivalent to using unset($_SESSION[$key]).\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_47\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: unset_userdata($key)\n\n\t:param\tmixed\t$key: Key for the session data item to unset, or an array of multiple keys\n\t:rtype:\tvoid\n\n\tUnsets the specified key(s) from the ``$_SESSION``\n\tsuperglobal.\n\n\t.. note:: This is a legacy method kept only for backwards\n\t\tcompatibility with older applications. It is just\n\t\tan alias for ``unset($_SESSION[$key])`` - please\n\t\tuse that instead.\n```\n\n----------------------------------------\n\nTITLE: CI_Session unmark_temp Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::unmark_temp() which removes the tempdata mark from $_SESSION items. This prevents the items from being deleted after their TTL expires and converts them back to regular session data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_56\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: unmark_temp($key)\n\n\t:param\tmixed\t$key: Key to be un-marked as tempdata, or an array of multiple keys\n\t:rtype:\tvoid\n\n\tUnmarks a ``$_SESSION`` item key (or multiple ones) as\n\t\"tempdata\".\n```\n\n----------------------------------------\n\nTITLE: Template Engine Pseudo-code for Comparison\nDESCRIPTION: Provides a comparison using pseudo-code typically found in template engines. This demonstrates the slight syntax difference between native PHP and template engines.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/overview/at_a_glance.rst#2025-04-16_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n<ul>\n{foreach from=$addressbook item=\"name\"}\n\t<li>{$name}</li>\n{/foreach}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Specific Database Group in CodeIgniter\nDESCRIPTION: This code shows how to connect to a specific database group defined in the CodeIgniter configuration file. The group name is passed as a parameter to the database() function.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->database('group_name');\n```\n\n----------------------------------------\n\nTITLE: Modifying URL Helper Type Casting in PHP\nDESCRIPTION: Modified the URL Helper to type cast the $title as a string in case a numeric value is supplied.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_56\n\nLANGUAGE: PHP\nCODE:\n```\nModified the :doc:`URL Helper <./helpers/url_helper>` to type cast the $title as a string in case a numeric value is supplied\n```\n\n----------------------------------------\n\nTITLE: Using View Fragments with Variable Pairs in CodeIgniter\nDESCRIPTION: Example showing how to use variable pairs with iteration controlled in the view for creating a menu list.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$template = '<ul>{menuitems}\n\t<li><a href=\"{link}\">{title}</a></li>\n{/menuitems}</ul>';\n\n$data = array(\n\t'menuitems' => array(\n\t\tarray('title' => 'First Link', 'link' => '/first'),\n\t\tarray('title' => 'Second Link', 'link' => '/second'),\n\t)\n);\n$this->parser->parse_string($template, $data);\n```\n\n----------------------------------------\n\nTITLE: Removing HTTP Header from 404 Error Template in PHP\nDESCRIPTION: This snippet demonstrates the code that should be removed from the 404 error template in CodeIgniter 1.7.2. The header() function is no longer needed as 404 status headers are now handled in the show_404() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_172.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php header(\"HTTP/1.1 404 Not Found\"); ?>\n```\n\n----------------------------------------\n\nTITLE: Fixing Email Library Multiple From Person Error\nDESCRIPTION: Fixes a bug where the Email Library was failing with a 'More than one from person' message when using sendmail.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_38\n\n\n\n----------------------------------------\n\nTITLE: Modifying Database Table for IPv6 Support in SQL\nDESCRIPTION: SQL command to modify the ci_sessions table's ip_address column to support IPv6 addresses by increasing the varchar length to 45 characters with a default value of '0'.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_211.rst#2025-04-16_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nALTER TABLE ci_sessions CHANGE ip_address ip_address varchar(45) default '0' NOT NULL\n```\n\n----------------------------------------\n\nTITLE: Declaring HTML5 DOCTYPE\nDESCRIPTION: This is the simplified DOCTYPE declaration for HTML5 documents. It does not reference any external DTD as HTML5 is not based on SGML.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_10\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html>\n```\n\n----------------------------------------\n\nTITLE: Parsing String Templates with Extra Parameters in CodeIgniter\nDESCRIPTION: Example showing how unused substitution parameters are ignored when parsing string templates.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$template = 'Hello, {firstname} {lastname}';\n$data = array(\n\t'title' => 'Mr',\n\t'firstname' => 'John',\n\t'lastname' => 'Doe'\n);\n$this->parser->parse_string($template, $data);\n\n// Result: Hello, John Doe\n```\n\n----------------------------------------\n\nTITLE: Declaring SVG 1.1 Full DOCTYPE\nDESCRIPTION: This DOCTYPE declaration specifies that the document is a full SVG 1.1 document. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_17\n\nLANGUAGE: XML\nCODE:\n```\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"https://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Configuring Helper Documentation Structure in RST\nDESCRIPTION: Sets up a table of contents tree for CodeIgniter helper documentation using reStructuredText directives. Uses glob and titlesonly options to include all files in the directory.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n#######\nHelpers\n#######\n\n.. toctree::\n\t:glob:\n\t:titlesonly:\n\t\n\t*\n```\n\n----------------------------------------\n\nTITLE: Adding Query String Configuration - PHP\nDESCRIPTION: New configuration options for enabling query string based URLs instead of segment based URLs, including controller and function trigger settings.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_130.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n/*\n|------------------------------------------------\n| Enable Query Strings\n|------------------------------------------------\n|\n| By default CodeIgniter uses search-engine and\n| human-friendly segment based URLs:\n|\n| example.com/who/what/where/\n|\n| You can optionally enable standard query string\n| based URLs:\n|\n| example.com?who=me&what=something&where=here\n|\n| Options are: TRUE or FALSE (boolean)\n|\n| The two other items let you set the query string \"words\"\n| that will invoke your controllers and functions:\n| example.com/index.php?c=controller&m=function\n|\n*/\n$config['enable_query_strings'] = FALSE;\n$config['controller_trigger'] = 'c';\n$config['function_trigger'] = 'm';\n```\n\n----------------------------------------\n\nTITLE: Fixing Database version() Method for MSSQL Driver\nDESCRIPTION: Fixes a bug where the version() method in Database didn't work properly with the 'mssql' driver.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_33\n\nLANGUAGE: PHP\nCODE:\n```\nversion()\n```\n\n----------------------------------------\n\nTITLE: Fixing Database error() Method for MySQLi Driver\nDESCRIPTION: Fixes a bug where the error() method in Database didn't work correctly for connection errors with the 'mysqli' driver.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_37\n\nLANGUAGE: PHP\nCODE:\n```\nerror()\n```\n\n----------------------------------------\n\nTITLE: Installing Sphinx and PHP Domain for CodeIgniter Documentation\nDESCRIPTION: These commands install Sphinx and the PHP domain extension required for building the CodeIgniter documentation. They use easy_install to manage the installation of specific versions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/README.rst#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\neasy_install \"sphinx==1.6.3\"\n```\n\nLANGUAGE: bash\nCODE:\n```\neasy_install \"sphinxcontrib-phpdomain==0.1.3.post1\"\n```\n\n----------------------------------------\n\nTITLE: Index.php File Replacement Notice\nDESCRIPTION: Instructions to take the site offline by replacing the index.php file before performing the upgrade.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_310.rst#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n#############################\nUpgrading from 3.0.6 to 3.1.0\n#############################\n\nBefore performing an update you should take your site offline by\nreplacing the index.php file with a static one.\n```\n\n----------------------------------------\n\nTITLE: Updating Database Configuration\nDESCRIPTION: Example showing the required change in database configuration from active_record to query_builder\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_300.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$active_group = 'default';\n// $active_record = TRUE;\n$query_builder = TRUE;\n```\n\n----------------------------------------\n\nTITLE: Adding Character Set Configuration\nDESCRIPTION: Adds UTF-8 character set and collation settings to the database configuration array to ensure proper character encoding.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_160.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$db['default']['char_set'] = \"utf8\";\n$db['default']['dbcollat'] = \"utf8_general_ci\";\n```\n\n----------------------------------------\n\nTITLE: Declaring XHTML+RDFa 1.1 DOCTYPE\nDESCRIPTION: This DOCTYPE declaration specifies an XHTML document with RDFa 1.1 support. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_23\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML+RDFa 1.1//EN\" \"https://www.w3.org/MarkUp/DTD/xhtml-rdfa-2.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Using Meta Function in HTML Helper\nDESCRIPTION: Updated meta() function in HTML Helper now supports 'charset' and 'property' properties.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\nmeta()\n```\n\n----------------------------------------\n\nTITLE: Updating Database Configuration - Active Record\nDESCRIPTION: Adds the active record global variable to database.php configuration file. This enables CodeIgniter's Active Record database functionality.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_160.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$active_record = TRUE;\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter Library Method Signatures\nDESCRIPTION: Core library methods referenced in the changelog including database, query builder, and utility functions\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_17\n\nLANGUAGE: PHP\nCODE:\n```\nversion()\ninsert_id()\ncount()\nchmod()\nfield_data()\nvalid_email()\nmodel()\ninitialize()\nincrement()\ndecrement()\ncreate_captcha($data)\nbackup()\ncount_all_results()\ntrans_complete()\nsave($raw = TRUE)\nlibrary()\nversion()\nmodify_column()\n```\n\n----------------------------------------\n\nTITLE: CI_Session get_flash_keys Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::get_flash_keys() which retrieves a list of all $_SESSION keys that have been marked as flashdata. This helps identify which session items will be available only for the next request.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_49\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: get_flash_keys()\n\n\t:returns:\tArray containing the keys of all \"flashdata\" items.\n\t:rtype:\tarray\n\n\tGets a list of all ``$_SESSION`` that have been marked as\n\t\"flashdata\".\n```\n\n----------------------------------------\n\nTITLE: Database Method Deprecation\nDESCRIPTION: Example showing deprecated database methods that should no longer be used in favor of their newer alternatives.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_60\n\nLANGUAGE: PHP\nCODE:\n```\n// Deprecated\n$this->db->field_names();\n$this->db->smart_escape_str();\n$this->db->fields();\n\n// Use instead\n$this->db->list_fields();\n```\n\n----------------------------------------\n\nTITLE: Declaring XHTML 1.0 Frameset DOCTYPE in HTML\nDESCRIPTION: This DOCTYPE declaration specifies that the document is an XHTML 1.0 Frameset document. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Frameset//EN\" \"https://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Removing Legacy Error Logging Configuration in PHP\nDESCRIPTION: Deprecated error logging configuration that should be removed from config.php as it's replaced by the error threshold setting.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_150.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n/*\n|--------------------------------------------------------------------------\n| Enable/Disable Error Logging\n|--------------------------------------------------------------------------\n|\n| If you would like errors or debug messages logged set this variable to\n| TRUE (boolean).  Note: You must set the file permissions on the \"logs\" folder\n| such that it is writable.\n|\n*/\n$config['log_errors'] = FALSE;\n```\n\n----------------------------------------\n\nTITLE: Using Form Upload Function\nDESCRIPTION: The form_upload() function has been modified to remove the second parameter which was never used.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_11\n\nLANGUAGE: PHP\nCODE:\n```\nform_upload()\n```\n\n----------------------------------------\n\nTITLE: Using is_cli Function in CodeIgniter\nDESCRIPTION: Reference to using is_cli() function instead of the deprecated is_cli_request() method in the Input Library.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nis_cli()\n```\n\n----------------------------------------\n\nTITLE: Generating HTML Documentation for CodeIgniter User Guide\nDESCRIPTION: These commands navigate to the user guide source directory and generate the HTML documentation using the make command. This process compiles the ReStructured Text files into HTML format.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/README.rst#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd user_guide_src\n```\n\nLANGUAGE: bash\nCODE:\n```\nmake html\n```\n\n----------------------------------------\n\nTITLE: CSS Styling for HTML5 mark Tag\nDESCRIPTION: CSS code snippet demonstrating how to style the new HTML5 'mark' tag, which replaces the 'strong' tag in the Text Helper's highlight_phrase() function. This change is suggested to ensure backward compatibility with older browsers.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_300.rst#2025-04-16_snippet_11\n\nLANGUAGE: CSS\nCODE:\n```\n\tmark {\n\t\tbackground: #ff0;\n\t\tcolor: #000;\n\t};\n```\n\n----------------------------------------\n\nTITLE: Using CSRF Protection Methods in CodeIgniter 2.0.2\nDESCRIPTION: Example of accessing CSRF token and name values using the new protected methods in Security class. These methods replace direct property access that was available in previous versions.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_202.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nsecurity->get_csrf_hash()\nsecurity->get_csrf_token_name()\n```\n\n----------------------------------------\n\nTITLE: PHP Session Configuration\nDESCRIPTION: Session configuration parameter indicating strict mode usage.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_13\n\nLANGUAGE: PHP\nCODE:\n```\nsession.use_strict_mode\n```\n\n----------------------------------------\n\nTITLE: Using the Valid MAC Validation Rule\nDESCRIPTION: The Form Validation Library now has a valid_mac rule that replicates PHP's native filter_var() with FILTER_VALIDATE_MAC.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nfilter_var()\n```\n\n----------------------------------------\n\nTITLE: Removing Package Paths in CodeIgniter (PHP)\nDESCRIPTION: Demonstrates how to remove a specific package path previously added to the Loader class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/loader.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$this->load->remove_package_path(APPPATH.'third_party/foo_bar/');\n```\n\n----------------------------------------\n\nTITLE: PHP Functions Referenced in Changelog\nDESCRIPTION: Various PHP functions mentioned throughout the changelog including idn_to_ascii(), mcrypt_create_iv(), password_hash(), hash_pbkdf2(), and others\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_16\n\nLANGUAGE: PHP\nCODE:\n```\nvalid_email()\nform_label()\nset_status_header()\npassword_hash()\nhash_pbkdf2()\nmcrypt_create_iv(MCRYPT_DEV_URANDOM)\nget_mimes()\nremove_invisible_characters()\nimg()\n```\n\n----------------------------------------\n\nTITLE: Adding Class Extension and Short Tags Configuration in PHP\nDESCRIPTION: New configuration settings for class extension prefix and PHP short tags handling to be added to config.php file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_150.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n/*\n|--------------------------------------------------------------------------\n| Class Extension Prefix\n|--------------------------------------------------------------------------\n|\n| This item allows you to set the filename/classname prefix when extending\n| native libraries.  For more information please see the user guide:\n|\n| https://codeigniter.com/userguide3/general/core_classes.html\n| https://codeigniter.com/userguide3/general/creating_libraries.html\n|\n*/\n$config['subclass_prefix'] = 'MY_';\n\n/*\n|--------------------------------------------------------------------------\n| Rewrite PHP Short Tags\n|--------------------------------------------------------------------------\n|\n| If your PHP installation does not have short tag support enabled CI\n| can rewrite the tags on-the-fly, enabling you to utilize that syntax\n| in your view files.  Options are TRUE or FALSE (boolean)\n|\n*/\n$config['rewrite_short_tags'] = FALSE;\n```\n\n----------------------------------------\n\nTITLE: Proper Function Parameter Checking in PHP\nDESCRIPTION: Example of using strict comparison operators when checking empty string parameters to avoid issues with falsey values.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nfunction build_string($str = \"\")\n{\n\tif ($str === \"\")\n\t{\n\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing XML-RPC Server Class in CodeIgniter\nDESCRIPTION: Shows how to load both the XML-RPC library and XML-RPC Server library in a CodeIgniter controller. Both libraries must be loaded when using the XML-RPC Server class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/xmlrpc.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('xmlrpc');\n$this->load->library('xmlrpcs');\n```\n\n----------------------------------------\n\nTITLE: Missing Parameters in Template Parsing with CodeIgniter\nDESCRIPTION: Example showing how the original pseudo-variable is preserved when a referenced parameter is not provided in the data array.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/parser.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$template = 'Hello, {firstname} {initials} {lastname}';\n$data = array(\n\t'title' => 'Mr',\n\t'firstname' => 'John',\n\t'lastname' => 'Doe'\n);\n$this->parser->parse_string($template, $data);\n\n// Result: Hello, John {initials} Doe\n```\n\n----------------------------------------\n\nTITLE: Declaring XHTML Basic 1.1 DOCTYPE in HTML\nDESCRIPTION: This DOCTYPE declaration specifies that the document is an XHTML Basic 1.1 document. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML Basic 1.1//EN\" \"https://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd\">\n```\n\n----------------------------------------\n\nTITLE: HTML Timezone Selection Menu Options\nDESCRIPTION: HTML select options for timezone selection dropdown menu showing UTC+9:30 through UTC+14:00 timezones with their corresponding locations and values.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<option value='UP95'>(UTC +9:30) Australian Central Standard Time</option>\n<option value='UP10'>(UTC +10:00) Australian Eastern Standard Time, Vladivostok Time</option>\n<option value='UP105'>(UTC +10:30) Lord Howe Island</option>\n<option value='UP11'>(UTC +11:00) Srednekolymsk Time, Solomon Islands, Vanuatu</option>\n<option value='UP115'>(UTC +11:30) Norfolk Island</option>\n<option value='UP12'>(UTC +12:00) Fiji, Gilbert Islands, Kamchatka Time, New Zealand Standard Time</option>\n<option value='UP1275'>(UTC +12:45) Chatham Islands Standard Time</option>\n<option value='UP13'>(UTC +13:00) Phoenix Islands Time, Tonga</option>\n<option value='UP14'>(UTC +14:00) Line Islands</option>\n</select>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Config Method Rename\nDESCRIPTION: Example showing the renaming of private _get_config() method to public get_config() method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_61\n\nLANGUAGE: PHP\nCODE:\n```\n// Old private method\n_get_config();\n\n// New public method \nget_config();\n```\n\n----------------------------------------\n\nTITLE: Fixing Database simple_query() Method Initialization Check\nDESCRIPTION: Fixes a bug where the simple_query() method in Database blindly executes queries without checking if the connection was initialized properly.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_29\n\nLANGUAGE: PHP\nCODE:\n```\nsimple_query()\n```\n\n----------------------------------------\n\nTITLE: Creating a Header Template in CodeIgniter\nDESCRIPTION: HTML template for the header portion of static pages. It includes basic HTML structure with a title tag and outputs a PHP variable $title that will be passed from the controller.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/tutorial/static_pages.rst#2025-04-16_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<html lang=\"en\">\n\t<head>\n\t\t<title>CodeIgniter Tutorial</title>\n\t</head>\n\t<body>\n\n\t\t<h1><?php echo $title; ?></h1>\n```\n\n----------------------------------------\n\nTITLE: Adding Session Time to Update Configuration\nDESCRIPTION: Adds the session time to update configuration parameter to the main config.php file. This setting controls how often the session ID is regenerated.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_160.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$config['sess_time_to_update']         = 300;\n```\n\n----------------------------------------\n\nTITLE: Table of Contents Structure in reStructuredText\nDESCRIPTION: A reStructuredText table of contents directive that organizes the database reference documentation into logical sections, including usage examples, configuration, connections, and various query-related topics.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n.. toctree::\n\t:titlesonly:\n\t\n\tQuick Start: Usage Examples <examples>\n\tDatabase Configuration <configuration>\n\tConnecting to a Database <connecting>\n\tRunning Queries <queries>\n\tGenerating Query Results <results>\n\tQuery Helper Functions <helpers>\n\tQuery Builder Class <query_builder>\n\tTransactions <transactions>\n\tGetting MetaData <metadata>\n\tCustom Function Calls <call_function>\n\tQuery Caching <caching>\n\tDatabase Manipulation with Database Forge <forge>\n\tDatabase Utilities Class <utilities>\n\tDatabase Driver Reference <db_driver_reference>\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents in reStructuredText for CodeIgniter Upgrade Guide\nDESCRIPTION: This snippet defines a table of contents using reStructuredText syntax. It lists upgrade paths for different versions of CodeIgniter, providing links to specific upgrade instructions for each version.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrading.rst#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. toctree::\n\t:titlesonly:\n\n\tUpgrading from 3.1.12+ to 3.2.x <upgrade_320>\n\tUpgrading from 3.1.13 to 3.1.14 <upgrade_3114>\n\tUpgrading from 3.1.12 to 3.1.13 <upgrade_3113>\n\tUpgrading from 3.1.11 to 3.1.12 <upgrade_3112>\n\tUpgrading from 3.1.10 to 3.1.11 <upgrade_3111>\n\tUpgrading from 3.1.9 to 3.1.10 <upgrade_3110>\n\tUpgrading from 3.1.8 to 3.1.9 <upgrade_319>\n\tUpgrading from 3.1.7 to 3.1.8 <upgrade_318>\n\tUpgrading from 3.1.6 to 3.1.7 <upgrade_317>\n\tUpgrading from 3.1.5 to 3.1.6 <upgrade_316>\n\tUpgrading from 3.1.4 to 3.1.5 <upgrade_315>\n\tUpgrading from 3.1.3 to 3.1.4 <upgrade_314>\n\tUpgrading from 3.1.2 to 3.1.3 <upgrade_313>\n\tUpgrading from 3.1.1 to 3.1.2 <upgrade_312>\n\tUpgrading from 3.1.0 to 3.1.1 <upgrade_311>\n\tUpgrading from 3.0.6 to 3.1.0 <upgrade_310>\n\tUpgrading from 3.0.5 to 3.0.6 <upgrade_306>\n\tUpgrading from 3.0.4 to 3.0.5 <upgrade_305>\n\tUpgrading from 3.0.3 to 3.0.4 <upgrade_304>\n\tUpgrading from 3.0.2 to 3.0.3 <upgrade_303>\n\tUpgrading from 3.0.1 to 3.0.2 <upgrade_302>\n\tUpgrading from 3.0.0 to 3.0.1 <upgrade_301>\n\tUpgrading from 2.2.x to 3.0.x <upgrade_300>\n\tUpgrading from 2.2.2 to 2.2.3 <upgrade_223>\n\tUpgrading from 2.2.1 to 2.2.2 <upgrade_222>\n\tUpgrading from 2.2.0 to 2.2.1 <upgrade_221>\n\tUpgrading from 2.1.4 to 2.2.x <upgrade_220>\n\tUpgrading from 2.1.3 to 2.1.4 <upgrade_214>\n\tUpgrading from 2.1.2 to 2.1.3 <upgrade_213>\n\tUpgrading from 2.1.1 to 2.1.2 <upgrade_212>\n\tUpgrading from 2.1.0 to 2.1.1 <upgrade_211>\n\tUpgrading from 2.0.3 to 2.1.0 <upgrade_210>\n\tUpgrading from 2.0.2 to 2.0.3 <upgrade_203>\n\tUpgrading from 2.0.1 to 2.0.2 <upgrade_202>\n\tUpgrading from 2.0 to 2.0.1 <upgrade_201>\n\tUpgrading from 1.7.2 to 2.0 <upgrade_200>\n\tUpgrading from 1.7.1 to 1.7.2 <upgrade_172>\n\tUpgrading from 1.7.0 to 1.7.1 <upgrade_171>\n\tUpgrading from 1.6.3 to 1.7.0 <upgrade_170>\n\tUpgrading from 1.6.2 to 1.6.3 <upgrade_163>\n\tUpgrading from 1.6.1 to 1.6.2 <upgrade_162>\n\tUpgrading from 1.6.0 to 1.6.1 <upgrade_161>\n\tUpgrading from 1.5.4 to 1.6.0 <upgrade_160>\n\tUpgrading from 1.5.3 to 1.5.4 <upgrade_154>\n\tUpgrading from 1.5.2 to 1.5.3 <upgrade_153>\n\tUpgrading from 1.5.0 or 1.5.1 to 1.5.2 <upgrade_152>\n\tUpgrading from 1.4.1 to 1.5.0 <upgrade_150>\n\tUpgrading from 1.4.0 to 1.4.1 <upgrade_141>\n\tUpgrading from 1.3.3 to 1.4.0 <upgrade_140>\n\tUpgrading from 1.3.2 to 1.3.3 <upgrade_133>\n\tUpgrading from 1.3.1 to 1.3.2 <upgrade_132>\n\tUpgrading from 1.3 to 1.3.1 <upgrade_131>\n\tUpgrading from 1.2 to 1.3 <upgrade_130>\n\tUpgrading from 1.1 to 1.2 <upgrade_120>\n\tUpgrading from Beta 1.0 to Beta 1.1 <upgrade_b11>\n```\n\n----------------------------------------\n\nTITLE: PHP Function Reference\nDESCRIPTION: Code function references found in the release notes, including set_status_header(), form_open(), nice_date(), and other core functions mentioned in bug fixes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_18\n\nLANGUAGE: PHP\nCODE:\n```\nset_status_header()\nform_open()\nnice_date()\nrandom_bytes()\nset_realpath()\nescapeshellarg()\nentity_decode()\nxss_clean()\nget_header()\ninitialize()\n```\n\n----------------------------------------\n\nTITLE: Updating Autoload Configuration in PHP\nDESCRIPTION: Change in autoload configuration from 'core' to 'libraries' array key to improve clarity for users regarding library autoloading capabilities.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_141.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$autoload['core'] = array();\n```\n\nLANGUAGE: php\nCODE:\n```\n$autoload['libraries'] = array();\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Table of Contents\nDESCRIPTION: ReStructuredText markup defining the documentation structure with nested table of contents and section headers for the CodeIgniter 3 user guide.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n########################\nCodeIgniter 3 User Guide\n########################\n\n- :doc:`License Agreement <license>`\n- :doc:`Change Log <changelog>`\n\n.. contents::\n   :local:\n   :depth: 2\n```\n\n----------------------------------------\n\nTITLE: Calculating Total Days in a Month with CodeIgniter Calendar Class in PHP\nDESCRIPTION: The get_total_days() method of the Calendar class calculates the number of days in a specified month and year. It takes two integer parameters: month and year. The method returns an integer representing the count of days in the specified month.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/calendar.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\necho $this->calendar->get_total_days(2, 2012);\n// 29\n```\n\n----------------------------------------\n\nTITLE: Installing Sphinx and PHP Domain Extension\nDESCRIPTION: Bash commands for installing Sphinx documentation generator and the PHP domain extension for Sphinx using easy_install.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/documentation/index.rst#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\neasy_install \"sphinx==1.2.3\"\neasy_install \"sphinxcontrib-phpdomain==0.1.3.post1\"\n```\n\n----------------------------------------\n\nTITLE: Declaring XHTML+MathML+SVG DOCTYPE (XHTML host)\nDESCRIPTION: This DOCTYPE declaration specifies a document that combines XHTML 1.1, MathML 2.0, and SVG 1.1, with XHTML as the host language. It references the combined DTD hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_20\n\nLANGUAGE: XML\nCODE:\n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN\" \"https://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Updating CodeIgniter Front Controller Include Path - PHP\nDESCRIPTION: Changes the main CodeIgniter system include path from the Front_controller to the new CodeIgniter class location.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_130.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire_once BASEPATH.'codeigniter/CodeIgniter'.EXT;\n```\n\n----------------------------------------\n\nTITLE: PHP Configuration Examples in CodeIgniter\nDESCRIPTION: Various configuration settings and code patterns referenced in the changelog, including autoloading, routing configurations, and security settings.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_49\n\nLANGUAGE: PHP\nCODE:\n```\n$config['rewrite_short_tags']\n$config['global_xss_filtering']\n$config['csrf_regeneration']\n$config['csrf_exclude_uris']\n$config['cache_query_string']\n$config['compress_output']\n$autoload['drivers']\n```\n\n----------------------------------------\n\nTITLE: DocBlock Style Property Documentation in PHP\nDESCRIPTION: Example of proper DocBlock style comments for a class property in CodeIgniter.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n/**\n * Data for class manipulation\n *\n * @var\tarray\n */\npublic $data = array();\n```\n\n----------------------------------------\n\nTITLE: Adding Database Configuration Options - PHP\nDESCRIPTION: New database configuration options for setting the database prefix and active record settings.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_130.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$db['default']['dbprefix'] = \"\";\n$db['default']['active_r'] = TRUE;\n```\n\n----------------------------------------\n\nTITLE: Checking PHP Version in CodeIgniter\nDESCRIPTION: The is_php() function compares the current PHP version against a specified version number. It returns TRUE if the installed PHP version meets or exceeds the specified version, allowing conditional execution of version-dependent code.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nif (is_php('5.5'))\n{\n\techo json_last_error_msg();\n}\n```\n\n----------------------------------------\n\nTITLE: Inserting Local Table of Contents in RST\nDESCRIPTION: This snippet shows how to insert a local table of contents in reStructuredText, including a custom HTML div for JavaScript functionality.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/documentation/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. contents::\n\t:local:\n\n.. raw:: html\n\n<div class=\"custom-index container\"></div>\n```\n\n----------------------------------------\n\nTITLE: Updating System Files in CodeIgniter 3.0.1 Upgrade\nDESCRIPTION: Instructions for replacing system files during the CodeIgniter upgrade process. This includes backing up custom files and replacing the index.php file for site maintenance.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_301.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\nStep 1: Update your CodeIgniter files\n=====================================\n\nReplace all files and directories in your *system/* directory.\n\n.. note:: If you have any custom developed files in these directories,\n\tplease make copies of them first.\n```\n\n----------------------------------------\n\nTITLE: Loading String Helper in CodeIgniter\nDESCRIPTION: Shows how to load the string helper library in a CodeIgniter application.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/string_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('string');\n```\n\n----------------------------------------\n\nTITLE: Declaring MathML 2.0 DOCTYPE\nDESCRIPTION: This DOCTYPE declaration specifies that the document is a MathML 2.0 document. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_15\n\nLANGUAGE: XML\nCODE:\n```\n<!DOCTYPE math PUBLIC \"-//W3C//DTD MathML 2.0//EN\" \"https://www.w3.org/Math/DTD/mathml2/mathml2.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Declaring HTML 4 Transitional DOCTYPE\nDESCRIPTION: This DOCTYPE declaration specifies that the document follows the HTML 4.01 Transitional specification. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_12\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"https://www.w3.org/TR/html4/loose.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Declaring SVG 1.1 Basic DOCTYPE\nDESCRIPTION: This DOCTYPE declaration specifies that the document is an SVG 1.1 Basic document. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_18\n\nLANGUAGE: XML\nCODE:\n```\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1 Basic//EN\" \"https://www.w3.org/Graphics/SVG/1.1/DTD/svg11-basic.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Using set_realpath Function Examples\nDESCRIPTION: Examples demonstrating the usage of set_realpath function with various file paths and directories, including error checking scenarios.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/path_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$file = '/etc/php5/apache2/php.ini';\necho set_realpath($file); // Prints '/etc/php5/apache2/php.ini'\n\n$non_existent_file = '/path/to/non-exist-file.txt';\necho set_realpath($non_existent_file, TRUE);\t// Shows an error, as the path cannot be resolved\necho set_realpath($non_existent_file, FALSE);\t// Prints '/path/to/non-exist-file.txt'\n\n$directory = '/etc/php5';\necho set_realpath($directory);\t// Prints '/etc/php5/'\n\n$non_existent_directory = '/path/to/nowhere';\necho set_realpath($non_existent_directory, TRUE);\t// Shows an error, as the path cannot be resolved\necho set_realpath($non_existent_directory, FALSE);\t// Prints '/path/to/nowhere'\n```\n\n----------------------------------------\n\nTITLE: Declaring XHTML+RDFa 1.0 DOCTYPE\nDESCRIPTION: This DOCTYPE declaration specifies an XHTML document with RDFa 1.0 support. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_22\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML+RDFa 1.0//EN\" \"https://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Configuring Index Page in CodeIgniter\nDESCRIPTION: Configuration settings in application/config/config.php to modify the index_page parameter. Shows how to change from standard index.php to index.php? format to support servers that don't handle REQUEST_URI.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/troubleshooting.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$config['index_page'] = \"index.php\";\n```\n\nLANGUAGE: php\nCODE:\n```\n$config['index_page'] = \"index.php?\";\n```\n\n----------------------------------------\n\nTITLE: Declaring SVG 1.1 Tiny DOCTYPE\nDESCRIPTION: This DOCTYPE declaration specifies that the document is an SVG 1.1 Tiny document. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_19\n\nLANGUAGE: XML\nCODE:\n```\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1 Tiny//EN\" \"https://www.w3.org/Graphics/SVG/1.1/DTD/svg11-tiny.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Loading the Language Helper in CodeIgniter\nDESCRIPTION: This code demonstrates how to load the Language Helper in a CodeIgniter application. The helper is loaded using the load->helper method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/language_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->load->helper('language');\n```\n\n----------------------------------------\n\nTITLE: Updating Log Configuration in PHP\nDESCRIPTION: Replace $config['log_file_extension'] with $config['log_filename'] in application/config/config.php. This new option allows specifying the full log filename including extension.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_320.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$config['log_filename']\n```\n\n----------------------------------------\n\nTITLE: Invalid Controller Class Declaration in CodeIgniter\nDESCRIPTION: Demonstrates an incorrect way to declare a controller. Class names must start with an uppercase letter for the controller to work properly.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/controllers.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\nclass blog extends CI_Controller {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Loading the CAPTCHA Helper in CodeIgniter\nDESCRIPTION: Shows how to load the CAPTCHA helper in a CodeIgniter application using the load->helper method.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/captcha_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->helper('captcha');\n```\n\n----------------------------------------\n\nTITLE: Site URL Array Segments Example\nDESCRIPTION: Shows how to generate site URLs using array segments instead of string.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$segments = array('news', 'local', '123');\necho site_url($segments);\n```\n\n----------------------------------------\n\nTITLE: Generating Libraries Documentation Index with reStructuredText\nDESCRIPTION: A reStructuredText toctree directive that automatically includes all library documentation files in the current directory, showing only titles and using glob pattern matching.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n#########\nLibraries\n#########\n\n.. toctree::\n\t:glob:\n\t:titlesonly:\n\t\n\t*\n```\n\n----------------------------------------\n\nTITLE: Checking Database Existence in CodeIgniter\nDESCRIPTION: Demonstrates how to check if a specific database exists using the Database Utility Class.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nif ($this->dbutil->database_exists('database_name'))\n{\n\t// some code...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Database Migration in CodeIgniter PHP\nDESCRIPTION: Example migration class that creates a blog table with fields for ID, title and description. Includes both up() method for creating the table and down() method for rolling back changes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/migration.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\ndefined('BASEPATH') OR exit('No direct script access allowed');\n\nclass Migration_Add_blog extends CI_Migration {\n\n\tpublic function up()\n\t{\n\t\t$this->dbforge->add_field(array(\n\t\t\t'blog_id' => array(\n\t\t\t\t'type' => 'INT',\n\t\t\t\t'constraint' => 5,\n\t\t\t\t'unsigned' => TRUE,\n\t\t\t\t'auto_increment' => TRUE\n\t\t\t),\n\t\t\t'blog_title' => array(\n\t\t\t\t'type' => 'VARCHAR',\n\t\t\t\t'constraint' => '100',\n\t\t\t),\n\t\t\t'blog_description' => array(\n\t\t\t\t'type' => 'TEXT',\n\t\t\t\t'null' => TRUE,\n\t\t\t),\n\t\t));\n\t\t$this->dbforge->add_key('blog_id', TRUE);\n\t\t$this->dbforge->create_table('blog');\n\t}\n\n\tpublic function down()\n\t{\n\t\t$this->dbforge->drop_table('blog');\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Sending XML-RPC Error Message in CodeIgniter PHP\nDESCRIPTION: Demonstrates how to send an error message using the XML-RPC library with an error number and message. Useful for handling and communicating error conditions in XML-RPC server responses.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/xmlrpc.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nreturn $this->xmlrpc->send_error_message('123', 'Requested data not available');\n```\n\n----------------------------------------\n\nTITLE: Configuration URI Protocol Setting\nDESCRIPTION: Setting to enable full Command Line Interface compatibility in CodeIgniter configuration.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_52\n\nLANGUAGE: PHP\nCODE:\n```\nconfig['uri_protocol'] = 'CLI';\n```\n\n----------------------------------------\n\nTITLE: Enabling Hooks Configuration in CodeIgniter\nDESCRIPTION: Configuration setting to enable the hooks feature globally in CodeIgniter framework via the config.php file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/hooks.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$config['enable_hooks'] = TRUE;\n```\n\n----------------------------------------\n\nTITLE: Installing PHPUnit and vfsStream via PEAR\nDESCRIPTION: Commands to install PHPUnit and vfsStream testing dependencies using PEAR package manager.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/tests/README.md#2025-04-16_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\npear channel-discover pear.phpunit.de\npear channel-discover pear.symfony.com\npear install phpunit/PHPUnit\n\npear channel-discover pear.bovigo.org\npear install bovigo/vfsStream-beta\n```\n\n----------------------------------------\n\nTITLE: Retrieving Routed URI Segments in PHP with CodeIgniter\nDESCRIPTION: This method is identical to segment(), but retrieves segments from the re-routed URI when using CodeIgniter's URI Routing feature.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/uri.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nrsegment($n[, $no_result = NULL])\n```\n\n----------------------------------------\n\nTITLE: CI_Session all_userdata Method Reference in PHP\nDESCRIPTION: Method reference for CI_Session::all_userdata() which returns an array of all session data. This method is marked as deprecated, with userdata() recommended as a replacement for retrieving all session data.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/sessions.rst#2025-04-16_snippet_43\n\nLANGUAGE: php\nCODE:\n```\n.. php:method:: all_userdata()\n\n\t:returns:\tAn array of all userdata\n\t:rtype:\tarray\n\n\tReturns an array containing all \"userdata\" items.\n\n\t.. note:: This method is DEPRECATED. Use ``userdata()``\n\t\twith no parameters instead.\n```\n\n----------------------------------------\n\nTITLE: Strip Slashes Array Example\nDESCRIPTION: Demonstrates removing slashes from strings in an array.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/string_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$str = array(\n    'question'  => 'Is your name O\\'reilly?',\n    'answer' => 'No, my name is O\\'connor.'\n);\n\n$str = strip_slashes($str);\n```\n\n----------------------------------------\n\nTITLE: Form Validation Rule Setting\nDESCRIPTION: Example of the deprecated rule usage in set_rules() method of the Form Validation library.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_306.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nset_rules()\n```\n\n----------------------------------------\n\nTITLE: Configuration Change Example\nDESCRIPTION: Example showing deprecated config syntax change from log_errors to log_threshold in CodeIgniter's config.php file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_59\n\nLANGUAGE: PHP\nCODE:\n```\n$config['log_threshold'] = 0; // Instead of deprecated $config['log_errors']\n```\n\n----------------------------------------\n\nTITLE: Disabling Parsing of Execution Variables in CodeIgniter Output Class\nDESCRIPTION: Shows how to disable the parsing of {elapsed_time} and {memory_usage} pseudo-variables in the output by setting the parse_exec_vars property to FALSE.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/output.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$this->output->parse_exec_vars = FALSE;\n```\n\n----------------------------------------\n\nTITLE: Defining Documentation Structure in reStructuredText\nDESCRIPTION: A table of contents tree (toctree) directive that lists all the general documentation topics for CodeIgniter. The titlesonly option is used to only show top-level section titles.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. toctree::\n\t:titlesonly:\n\t\nurls\ncontrollers\nreserved_names\nviews\nmodels\nHelpers <helpers>\nlibraries\ncreating_libraries\ndrivers\ncreating_drivers\ncore_classes\nancillary_classes\nhooks\nautoloader\ncommon_functions\ncompatibility_functions\nrouting\nerrors\nCaching <caching>\nprofiling\ncli\nmanaging_apps\nenvironments\nalternative_php\nsecurity\nPHP Style Guide <styleguide>\n```\n\n----------------------------------------\n\nTITLE: Modifying db_connect and db_pconnect for Connection Persistence - PHP\nDESCRIPTION: This snippet introduces a new parameter for `db_connect()` for handling persistent connections, while `db_pconnect()` is made an alias for `db_connect(TRUE)`. This change aims to improve connection management in the CodeIgniter framework.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_44\n\nLANGUAGE: php\nCODE:\n```\n$persistent = FALSE; // Adding persistent parameter to db_connect\nfunction db_connect($persistent = FALSE) {\n    // Logic to establish a database connection\n}\n\nfunction db_pconnect() {\n    return db_connect(TRUE); // db_pconnect is an alias for db_connect(TRUE)\n}\n```\n\n----------------------------------------\n\nTITLE: PHP Function Call\nDESCRIPTION: Common function reference for generating CAPTCHA images.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_14\n\nLANGUAGE: PHP\nCODE:\n```\ncreate_captcha()\n```\n\n----------------------------------------\n\nTITLE: Reduce Multiple Characters Example\nDESCRIPTION: Shows how to reduce multiple consecutive occurrences of a character and optionally trim them.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/string_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Fred, Bill,, Joe, Jimmy\";\n$string = reduce_multiples($string,\",\"); //results in \"Fred, Bill, Joe, Jimmy\"\n\n$string = \",Fred, Bill,, Joe, Jimmy,\";\n$string = reduce_multiples($string, \", \", TRUE); //results in \"Fred, Bill, Joe, Jimmy\"\n```\n\n----------------------------------------\n\nTITLE: SQL Query Formatting Examples\nDESCRIPTION: Examples demonstrating correct and incorrect SQL query formatting with proper keyword capitalization and clause separation\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/styleguide.rst#2025-04-16_snippet_12\n\nLANGUAGE: sql\nCODE:\n```\n// Incorrect\n$query = $this->db->query(\"select foo, bar, baz, foofoo, foobar as raboof, foobaz from exp_pre_email_addresses where foo != 'oof' and baz != 'zab' order by foobaz limit 5, 100\");\n\n// Correct\n$query = $this->db->query(\"SELECT foo, bar, baz, foofoo, foobar AS raboof, foobaz\n\t\t\t\tFROM exp_pre_email_addresses\n\t\t\t\tWHERE foo != 'oof'\n\t\t\t\tAND baz != 'zab'\n\t\t\t\tORDER BY foobaz\n\t\t\t\tLIMIT 5, 100\");\n```\n\n----------------------------------------\n\nTITLE: Database Query - NOT BETWEEN Detection\nDESCRIPTION: Example of a bug fix related to Query Builder detection of NOT BETWEEN expressions in SQL queries.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_12\n\nLANGUAGE: SQL\nCODE:\n```\nNOT BETWEEN\n```\n\n----------------------------------------\n\nTITLE: Using camelize() Function in CodeIgniter\nDESCRIPTION: Example of using the camelize() function to convert a string with underscores to camel case.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\necho camelize('my_dog_spot'); // Prints 'myDogSpot'\n```\n\n----------------------------------------\n\nTITLE: Declaring HTML 4 Frameset DOCTYPE\nDESCRIPTION: This DOCTYPE declaration specifies that the document follows the HTML 4.01 Frameset specification. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_13\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Frameset//EN\" \"https://www.w3.org/TR/html4/frameset.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Disabling the Profiler in CodeIgniter Controllers\nDESCRIPTION: This snippet demonstrates how to disable the profiler in a CodeIgniter controller. This can be useful for production environments or when profiling data is no longer needed.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/profiling.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->output->enable_profiler(FALSE);\n```\n\n----------------------------------------\n\nTITLE: Loading Package Directory Structure Example\nDESCRIPTION: Example showing the directory structure for a 'Foo Bar' application package in CodeIgniter's third_party directory.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/loader.rst#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n/application/third_party/foo_bar\n\nconfig/\nhelpers/\nlanguage/\nlibraries/\nmodels/\n```\n\n----------------------------------------\n\nTITLE: Converting Associative Array to URI String in PHP with CodeIgniter\nDESCRIPTION: This method takes an associative array as input and generates a URI string from it. The array keys are included in the resulting string.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/uri.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nassoc_to_uri($array)\n```\n\n----------------------------------------\n\nTITLE: Word Censoring Example\nDESCRIPTION: Example showing how to censor specific words in a text string with replacement text.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$disallowed = array('darn', 'shucks', 'golly', 'phooey');\n$string = word_censor($string, $disallowed, 'Beep!');\n```\n\n----------------------------------------\n\nTITLE: Declaring XHTML+MathML+SVG DOCTYPE (SVG host)\nDESCRIPTION: This DOCTYPE declaration specifies a document that combines XHTML 1.1, MathML 2.0, and SVG 1.1, with SVG as the host language. It references the combined DTD hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_21\n\nLANGUAGE: XML\nCODE:\n```\n<!DOCTYPE svg:svg PUBLIC \"-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN\" \"https://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Creating Trackback Table in SQL\nDESCRIPTION: SQL schema for creating a table to store received trackbacks in a database.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/trackback.rst#2025-04-16_snippet_2\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE TABLE trackbacks (\n\ttb_id int(10) unsigned NOT NULL auto_increment,\n\tentry_id int(10) unsigned NOT NULL default 0,\n\turl varchar(200) NOT NULL,\n\ttitle varchar(100) NOT NULL,\n\texcerpt text NOT NULL,\n\tblog_name varchar(100) NOT NULL,\n\ttb_date int(10) NOT NULL,\n\tip_address varchar(45) NOT NULL,\n\tPRIMARY KEY `tb_id` (`tb_id`),\n\tKEY `entry_id` (`entry_id`)\n);\n```\n\n----------------------------------------\n\nTITLE: Enabling Page Caching in CodeIgniter Controller\nDESCRIPTION: Sets up page caching in a CodeIgniter controller method. Takes a parameter specifying the cache duration in minutes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/caching.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->output->cache($n);\n```\n\n----------------------------------------\n\nTITLE: Updating Security Library's get_random_bytes() Method in PHP\nDESCRIPTION: Updates the get_random_bytes() method in the Security Library to use PHP 7's random_bytes() function when available.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_21\n\nLANGUAGE: PHP\nCODE:\n```\nget_random_bytes()\n```\n\n----------------------------------------\n\nTITLE: Declaring SVG 1.0 DOCTYPE\nDESCRIPTION: This DOCTYPE declaration specifies that the document is an SVG 1.0 document. It references the DTD (Document Type Definition) hosted on the W3C website.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_16\n\nLANGUAGE: XML\nCODE:\n```\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.0//EN\" \"https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Setting Subclass Prefix in CodeIgniter Config PHP\nDESCRIPTION: Configuration code showing how to set a custom prefix for extended classes in CodeIgniter's config file.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/general/core_classes.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$config['subclass_prefix'] = 'MY_';\n```\n\n----------------------------------------\n\nTITLE: Quotes to Entities Example\nDESCRIPTION: Demonstrates converting quotes to HTML entities in a string.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/helpers/string_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Joe's \\\"dinner\\\"\";\n$string = quotes_to_entities($string); //results in \"Joe&#39;s &quot;dinner&quot;\"\n```\n\n----------------------------------------\n\nTITLE: Sending XML-RPC Request to Ping-o-Matic\nDESCRIPTION: A complete example showing how to send an XML-RPC request to Ping-o-Matic's weblogUpdates.ping method with site title and URL parameters. Includes error handling for failed requests.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/libraries/xmlrpc.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('xmlrpc');\n\n$this->xmlrpc->server('http://rpc.pingomatic.com/', 80);\n$this->xmlrpc->method('weblogUpdates.ping');\n\n$request = array('My Photoblog', 'http://www.my-site.com/photoblog/');\n$this->xmlrpc->request($request);\n\nif ( ! $this->xmlrpc->send_request())\n{\n\techo $this->xmlrpc->display_error();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Database Cache Configuration in PHP\nDESCRIPTION: New database configuration settings to be added to database.php file for controlling database caching functionality.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_150.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$db['default']['cache_on'] = FALSE;\n$db['default']['cachedir'] = '';\n```\n\n----------------------------------------\n\nTITLE: Fixing Query Builder count_all_results() Method with ORDER BY\nDESCRIPTION: Fixes a bug where the count_all_results() method in Query Builder could fail if an ORDER BY condition is used.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/changelog.rst#2025-04-16_snippet_25\n\nLANGUAGE: PHP\nCODE:\n```\ncount_all_results()\n```\n\n----------------------------------------\n\nTITLE: PHP Constants Reference in index.php\nDESCRIPTION: Usage of DIRECTORY_SEPARATOR constant for proper directory path handling across different operating systems, replacing hardcoded forward slashes.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_306.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nDIRECTORY_SEPARATOR\n```\n\n----------------------------------------\n\nTITLE: Adding User Data Column to Sessions Table in MySQL\nDESCRIPTION: SQL commands to add a required user_data column to the ci_sessions table for the updated Session functionality in CodeIgniter 1.7.0. The column is defined as text type and NOT NULL.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/source/installation/upgrade_170.rst#2025-04-16_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nuser_data text NOT NULL\n```\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE `ci_sessions` ADD `user_data` text NOT NULL\n```\n\n----------------------------------------\n\nTITLE: Confirming Python Version in Terminal\nDESCRIPTION: This command is used to check the installed Python version in a Terminal window. It loads up Python and displays the version information.\nSOURCE: https://github.com/bcit-ci/CodeIgniter/blob/develop/user_guide_src/README.rst#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython\n```"
  }
]
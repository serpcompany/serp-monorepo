[
  {
    "owner": "yugabyte",
    "repo": "yb-voyager",
    "content": "TITLE: Exporting and Importing Table Data between PostgreSQL and YugabyteDB\nDESCRIPTION: This snippet demonstrates how to export data from a table in PostgreSQL and import it into YugabyteDB. It uses the COPY command to export table data to a file and then import it from the file into another database.\nSOURCE: https://github.com/yugabyte/yb-voyager/blob/main/docs/postgresql_ssl.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n-- PostgreSQL export\n\\copy (SELECT * FROM tbl WHERE id > 5) to '/tmp/yb_exp.txt' WITH (FORMAT text, DELIMITER ',');\n\n-- YugabyteDB import\n\\copy tbl FROM '/tmp/yb_exp.txt' WITH (FORMAT text, DELIMITER ',');\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Migration Settings in YAML\nDESCRIPTION: This YAML configuration file specifies settings for a database migration tool. It includes source and target database connection details, data export parameters, and logging configurations. The file allows customization of the migration process, including table selection, data chunk size, and various optimization flags.\nSOURCE: https://github.com/yugabyte/yb-voyager/blob/main/docs/oracle_ssl.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsource:\n  host: localhost\n  port: 1521\n  database: ORCL\n  user: system\n  password: manager\n  fetch_size: 10000\n\ntarget:\n  host: localhost\n  port: 5433\n  database: yugabyte\n  user: yugabyte\n  password: yugabyte\n  sslmode: prefer\n  connect_timeout: 10\n\nexport:\n  tables:\n    - schema1.table1\n    - schema1.table2\n    - schema2.table3\n  data_chunk_size: 50000\n  threads: 4\n\ndata_dir: /tmp/yb-voyager\n\nlog:\n  level: info\n  file: yb-voyager.log\n\nquery_hint:\n  enable_result_cache_fga: true\n\nskip_tables_on_error: true\nignore_enum_check: false\nsort_data_in_primary_key_order: false\n\n```\n\n----------------------------------------\n\nTITLE: Performing Schema Changes during PostgreSQL to YugabyteDB Migration\nDESCRIPTION: This snippet shows how to make schema changes while migrating data from PostgreSQL to YugabyteDB. It demonstrates altering a table by adding a column with a default value.\nSOURCE: https://github.com/yugabyte/yb-voyager/blob/main/docs/postgresql_ssl.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE t ADD COLUMN new_c INT DEFAULT 5;\n```\n\n----------------------------------------\n\nTITLE: Processing and Transforming Data during Migration\nDESCRIPTION: This snippet illustrates how to process and transform data during migration. It selects specific columns from a table and applies transformations to them before inserting into another table.\nSOURCE: https://github.com/yugabyte/yb-voyager/blob/main/docs/postgresql_ssl.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nINSERT INTO tgt(c1, c2) SELECT c1+1, UPPER(c2) FROM src;\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloud Storage Provider for Schema Migration in YB-Voyager\nDESCRIPTION: YAML configuration example for specifying cloud storage provider details in YB-Voyager. The configuration includes the provider type (GCS in this example) and authentication credentials needed for accessing the cloud storage.\nSOURCE: https://github.com/yugabyte/yb-voyager/blob/main/docs/mysql_ssl.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncloudStorage:\n  provider: gcs\n  gcs:\n    credentials: /path/to/credentials.json\n```\n\n----------------------------------------\n\nTITLE: Database Migration Report Template Structure\nDESCRIPTION: A Go template that generates a detailed migration report including version info, schema summaries, database objects, migration issues, and optional notes. Uses template variables and control structures to format the output.\nSOURCE: https://github.com/yugabyte/yb-voyager/blob/main/yb-voyager/cmd/templates/schema_analysis_report.txt#2025-04-21_snippet_0\n\nLANGUAGE: go-template\nCODE:\n```\n+-------------------------------------------------+\n|               Database Migration Report         |\n+-------------------------------------------------+\n\nMigration Information\n---------------------\n\nVoyager Version               : {{ .VoyagerVersion }}\nDatabase Name                 : {{ .SchemaSummary.DBName }}\nSchema Name(s)                : {{ join .SchemaSummary.SchemaNames \", \" }}\nDB Version                    : {{ .SchemaSummary.DBVersion }}\nTarget DB Version             : {{ .TargetDBVersion }}\n\n\nSchema Summary\n--------------- \n{{ range .SchemaSummary.DBObjects }}\nObject Type                    : {{ .ObjectType }}\n  - Total Objects              : {{ .TotalCount }}\n  - Objects Without Issues     : {{ sub .TotalCount .InvalidCount }}\n  - Objects With Issues        : {{ .InvalidCount }}\n  - Object Names               : {{ .ObjectNames }}{{ if .Details }}  \n  - Details                    : {{ .Details }}\n{{ end }}\n{{ end }}\n\nIssues\n------- \n{{ if .Issues }} {{ range $index, $issue := .Issues }}\n{{ add $index 1 }}. Issue in Object     : {{ .ObjectType }}\n  - Object Name     : {{ .ObjectName }}\n  - Reason          : {{ .Reason }}\n  - SQL Statement   : {{ .SqlStatement }}\n  - File Path       : {{ .FilePath }}{{ if .Suggestion }}\n  - Suggestion      : {{ .Suggestion }} {{ end }}{{ if .GH }}\n  - Github Issue    : {{ .GH }}{{ end }}{{ if .DocsLink }}\n  - Docs Link       : {{ .DocsLink }}{{ end }}\n{{ $supporterVerStr := getSupportedVersionString .MinimumVersionsFixedIn }}\n{{ if $supporterVerStr }}\n  - Fixed in Versions: {{ $supporterVerStr }}\n{{ end }}\n{{ end }}{{ else }}\nNo issues found.{{ end }}\n\n{{ if .SchemaSummary.Notes }}\nNotes\n------\n{{ range $index, $note := .SchemaSummary.Notes }}\n{{ add $index 1 }}. {{ $note }}\n{{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Search Pattern Examples in Plaintext\nDESCRIPTION: Collection of search patterns using exact matches and wildcards. Includes session log queries, group filtering, and test case patterns.\nSOURCE: https://github.com/yugabyte/yb-voyager/blob/main/migtests/tests/oracle/table-list-flags-tests/import-table-list.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nsession_log\nsession_log?\n\"group\"\ntest*\n*case*\nc\nc?\n```\n\n----------------------------------------\n\nTITLE: Listing YugabyteDB Reserved Identifiers and Patterns\nDESCRIPTION: A collection of reserved identifiers and patterns that have special meaning in YugabyteDB. This includes SQL keywords in quotes, specific column name patterns, and system table/view patterns that require special handling during database operations or migrations.\nSOURCE: https://github.com/yugabyte/yb-voyager/blob/main/migtests/tests/mysql/table-list-flags-tests/export-table-list.txt#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"order\"\n\"user\"\n\"group\"\n\"check\"\nreserved_column\n\"*Case*\"\nsession_log*\n```\n\n----------------------------------------\n\nTITLE: Session and Group Pattern Matching Expressions\nDESCRIPTION: A collection of pattern matching expressions used for selecting or filtering sessions, groups, and test cases. These expressions use various pattern matching syntax including exact matches, wildcards, and quoted strings.\nSOURCE: https://github.com/yugabyte/yb-voyager/blob/main/migtests/tests/oracle/table-list-flags-tests/export-table-list.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nsession_log\nsession_log?\n\"group\"\n\n\n\n\n\"check\"\n\n\n\n\ntest*\n\n\n\n\"*Case*\"\n\nc*\n```\n\n----------------------------------------\n\nTITLE: File Pattern and Keyword Examples\nDESCRIPTION: Collection of file patterns and SQL keywords that appear to be used for matching or filtering purposes. Includes session wildcard patterns, case-sensitive terms, and SQL WITH clause examples.\nSOURCE: https://github.com/yugabyte/yb-voyager/blob/main/migtests/tests/pg/table-list-flags-tests/import-table-list.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nsession_*\n\"Recipients\"\n\"*Case*\"\nproducts\n\"WITH\"\nwith_example2\n```\n\n----------------------------------------\n\nTITLE: CSV Data Row for Orders and Session Logs\nDESCRIPTION: A simple CSV data row that appears to map 'orders' to 'session_log1'. This could be used to establish relationships between tables, define export configurations, or serve as input for a data processing system.\nSOURCE: https://github.com/yugabyte/yb-voyager/blob/main/migtests/tests/pg/table-list-flags-tests/import-ex-table-list.txt#2025-04-21_snippet_0\n\nLANGUAGE: csv\nCODE:\n```\norders,session_log1\n```\n\n----------------------------------------\n\nTITLE: Displaying Polyform Free Trial License URL in Markdown\nDESCRIPTION: This snippet shows how to create a hyperlink in Markdown format for the Polyform Free Trial License URL.\nSOURCE: https://github.com/yugabyte/yb-voyager/blob/main/licenses/POLYFORM-FREE-TRIAL-LICENSE-1.0.0.txt#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n<https://polyformproject.org/licenses/free-trial/1.0.0>\n```"
  }
]
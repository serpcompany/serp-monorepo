[
  {
    "owner": "deployphp",
    "repo": "deployer",
    "content": "TITLE: GitLab CI/CD Pipeline Configuration with Deployer\nDESCRIPTION: GitLab CI/CD pipeline configuration that sets up SSH authentication and executes deployment using Deployer v7 Docker image. Includes SSH key handling and deployment stage definition.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/ci-cd.md#2025-04-16_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n  - deploy\n\ndeploy:\n  stage: deploy\n  image:\n    name: deployphp/deployer:v7\n    entrypoint: [\"\"]\n  before_script:\n    - mkdir -p ~/.ssh\n    - eval $(ssh-agent -s)\n    - echo \"$SSH_KNOWN_HOSTS\" > ~/.ssh/known_hosts\n    - chmod 644 ~/.ssh/known_hosts\n    - echo \"$SSH_PRIVATE_KEY\" | tr -d '\\r' | ssh-add - > /dev/null\n  script:\n    - dep deploy -vvv\n  resource_group: production\n  only:\n    - master\n```\n\n----------------------------------------\n\nTITLE: Executing Remote Commands with run() in PHP Deployer\nDESCRIPTION: Executes commands on remote hosts with options for timeout, secrets, and environment variables.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nrun('echo hello world');\nrun('cd {{deploy_path}} && git status');\nrun('password %secret%', secret: getenv('CI_SECRET'));\nrun('curl medv.io', timeout: 5);\n```\n\nLANGUAGE: php\nCODE:\n```\n$path = run('readlink {{deploy_path}}/current');\nrun(\"echo $path\");\n```\n\n----------------------------------------\n\nTITLE: Configuring a host in deploy.php\nDESCRIPTION: Example of how to define a host in the deploy.php configuration file. Sets the remote user and deployment path for the specified domain.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/getting-started.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nhost('example.org')\n    ->set('remote_user', 'deployer')\n    ->set('deploy_path', '~/example');\n```\n\n----------------------------------------\n\nTITLE: Writing a Simple Deployer Recipe in PHP\nDESCRIPTION: Illustrates a basic Deployer recipe that defines a host and a task to run the 'whoami' command.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nnamespace Deployer;\n\nhost('deployer.org');\n\ntask('my_task', function () {\n    run('whoami');\n});\n```\n\n----------------------------------------\n\nTITLE: Deploying a project\nDESCRIPTION: Command to deploy a project using Deployer after the server has been provisioned.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/getting-started.md#2025-04-16_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\ndep deploy\n```\n\n----------------------------------------\n\nTITLE: Installing Deployer with initialization command\nDESCRIPTION: Command to initialize a new Deployer configuration file after installation. This creates either a deploy.php or deploy.yaml file based on answers to prompts.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/getting-started.md#2025-04-16_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ndep init\n```\n\n----------------------------------------\n\nTITLE: Executing Deployer CLI Command\nDESCRIPTION: Demonstrates the basic structure of a Deployer CLI command, showing the task and selector arguments.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ dep deploy deployer.org\n      ------ ------------\n       task    selector\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployer Recipe in YAML\nDESCRIPTION: Example of a complete Deployer recipe written in YAML format. Shows configuration for repository settings, host configuration, task definitions, and deployment hooks. Includes Laravel recipe import and custom build task definition.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/yaml.md#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nimport:\n  - recipe/laravel.php\n\nconfig:\n  repository: \"git@github.com:example/example.com.git\"\n  remote_user: deployer\n\nhosts:\n  example.com:\n    deploy_path: \"~/example\"\n\ntasks:\n  build:\n    - cd: \"{{release_path}}\"\n    - run: \"npm run build\"\n\nafter:\n  deploy:failed: deploy:unlock\n```\n\n----------------------------------------\n\nTITLE: Testing Conditions with test() in PHP Deployer\nDESCRIPTION: Runs a test command on the remote host and returns a boolean result.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nif (test('[ -d {{release_path}} ]')) {\n...\n}\n```\n\n----------------------------------------\n\nTITLE: Deployer Secrets Management Task\nDESCRIPTION: PHP task definition for handling deployment secrets in Deployer. Creates a custom task to upload environment variables from GitLab to the deployment target.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/ci-cd.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\ntask('deploy:secrets', function () {\n    upload(getenv('DOTENV'), '{{deploy_path}}/shared/.env');\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Deployer with Local Installation\nDESCRIPTION: Command to initialize Deployer in the project when installed locally using Composer.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\nvendor/bin/dep init\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Deployment Configuration with Deployer\nDESCRIPTION: GitHub Actions workflow configuration for automated deployment using Deployer. Sets up PHP 8.1, installs dependencies, and executes deployment with SSH key authentication.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/ci-cd.md#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: deploy\n\non:\n  push:\n    branches: [master]\n\nconcurrency: production_environment\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Setup PHP\n        uses: shivammathur/setup-php@v2\n        with:\n          php-version: \"8.1\"\n\n      - name: Install dependencies\n        run: composer install\n\n      - name: Deploy\n        uses: deployphp/action@v1\n        with:\n          private-key: ${{ secrets.PRIVATE_KEY }}\n          dep: deploy\n```\n\n----------------------------------------\n\nTITLE: Resuming deployment from a specific task\nDESCRIPTION: Command to resume a failed deployment from a specific task, such as database migrations.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/getting-started.md#2025-04-16_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ndep deploy --start-from deploy:migrate\n```\n\n----------------------------------------\n\nTITLE: Running the provision command\nDESCRIPTION: Command to provision a new server using Deployer's provision recipe, which sets up everything required to run a website.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/getting-started.md#2025-04-16_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ndep provision\n```\n\n----------------------------------------\n\nTITLE: Defining Hosts with host() Function in PHP\nDESCRIPTION: Defines one or multiple hosts for deployment. It can also be used inside tasks to get a Host instance by its alias.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhost('example.org');\nhost('prod.example.org', 'staging.example.org');\n```\n\nLANGUAGE: php\nCODE:\n```\ntask('test', function () {\n    $port = host('example.org')->get('port');\n});\n```\n\n----------------------------------------\n\nTITLE: SSH config for identity key configuration\nDESCRIPTION: Example SSH configuration file entry that specifies the identity file to use for all SSH connections, which is needed for connecting to the deployment server.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/getting-started.md#2025-04-16_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nHost *\n  IdentityFile ~/.ssh/id_rsa\n```\n\n----------------------------------------\n\nTITLE: Running arbitrary commands on Deployer hosts\nDESCRIPTION: This bash command demonstrates how to use Deployer to run an arbitrary command (in this case, 'uptime -p') on one or more configured hosts.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/cli.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndep run 'uptime -p'\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables in Deployer\nDESCRIPTION: Example of how to set environment variables for remote deployment. Variables can be set globally or overridden per run() call.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/common.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nset('env', [\n    'KEY' => 'something',\n]);\n```\n\nLANGUAGE: php\nCODE:\n```\nrun('echo $KEY', env: ['KEY' => 'over']);\n```\n\n----------------------------------------\n\nTITLE: Viewing deployment history\nDESCRIPTION: Command to view the history of deployments including dates, release numbers, authors, and commit information.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/getting-started.md#2025-04-16_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\ndep releases\n```\n\n----------------------------------------\n\nTITLE: Installing Deployer Locally in Project\nDESCRIPTION: Command to install Deployer as a development dependency in the current project using Composer.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\ncomposer require --dev deployer/deployer\n```\n\n----------------------------------------\n\nTITLE: Setting Global Configurations in Deployer\nDESCRIPTION: Illustrates how to set global configurations that are inherited by all hosts in a Deployer recipe.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nset('my_config', 'global');\n\nhost('deployer.org');\nhost('medv.io');\n\n// Overriding for specific host\nhost('medv.io')->set('my_config', 'bar');\n```\n\n----------------------------------------\n\nTITLE: Running Deployer Task on Multiple Hosts\nDESCRIPTION: Illustrates how to execute a Deployer task on multiple hosts using the 'all' selector and -v option for verbosity.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n$ dep my_task -v all\ntask my_task\n[deployer.org] run whoami\n[medv.io] run whoami\n[deployer.org] deployer\n[medv.io] anton\n```\n\n----------------------------------------\n\nTITLE: Creating Shell Alias for Deployer\nDESCRIPTION: Shell command to create an alias for Deployer, making it easier to run commands.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\nalias dep='vendor/bin/dep'\n```\n\n----------------------------------------\n\nTITLE: Using select() Function for Host Selection\nDESCRIPTION: Demonstrates how to use the select() function to programmatically choose hosts based on selectors in PHP code.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/selector.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\ntask('info', function () {\n    $hosts = select('type=web|db,env=prod');\n    foreach ($hosts as $host) {\n        writeln('type:' . $host->get('labels')['type'] . ' env:' . $host->get('labels')['env']);\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Adding a build task in deploy.php\nDESCRIPTION: Example of adding a custom build task to the deployment process that runs npm install and build commands, then hooks it into the deployment workflow.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/getting-started.md#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\ntask('build', function () {\n    cd('{{release_path}}');\n    run('npm install');\n    run('npm run prod');\n});\n\nafter('deploy:update_code', 'build');\n```\n\n----------------------------------------\n\nTITLE: Using on() Function with Host Selection\nDESCRIPTION: Shows how to use the on() function to execute code on selected hosts based on a selector.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/selector.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\ntask('info', function () {\n    on(select('all'), function () {\n        writeln('type:' . get('labels')['type'] . ' env:' . get('labels')['env']);\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote User\nDESCRIPTION: Shows how to specify the remote user for SSH connections using both set() and setter methods.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/hosts.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nhost('example.org')\n    ->set('hostname', 'example.cloud.google.com')\n    ->set('remote_user', 'deployer');\n```\n\nLANGUAGE: php\nCODE:\n```\nhost('example.org')\n    ->setHostname('example.cloud.google.com')\n    ->setRemoteUser('deployer');\n```\n\n----------------------------------------\n\nTITLE: Selecting Hosts with select() Function in PHP\nDESCRIPTION: Returns hosts based on a provided selector string with criteria for filtering hosts.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\non(select('stage=prod, role=db'), function (Host $host) {\n    ...\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Configurations in Deployer\nDESCRIPTION: Demonstrates how to use dynamic configurations with callbacks in Deployer, which are evaluated on first access and cached.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nset('whoami', function () {\n    return run('whoami');\n});\n\ntask('my_task', function () {\n    writeln('Who am I? {{whoami}}');\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Nginx for Resolved Paths\nDESCRIPTION: Nginx configuration diff showing how to use $realpath_root to resolve symlinks. This ensures PHP-FPM uses the actual filesystem path rather than the symlinked path, preventing Opcode cache issues during deployments.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/avoid-php-fpm-reloading.md#2025-04-16_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\nlocation ~ \\.php$ {\n  include fastcgi_params;\n  fastcgi_pass unix:/var/run/php/php-fpm.sock;\n- fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n+ fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n- fastcgi_param DOCUMENT_ROOT $document_root;\n+ fastcgi_param DOCUMENT_ROOT $realpath_root;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Deploy Path Configuration\nDESCRIPTION: Example of how to set the deployment path for a group of hosts using the 'alias' variable. This configuration is required for Deployer to function.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/common.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nset('deploy_path', '~/{{alias}}');\n```\n\n----------------------------------------\n\nTITLE: Defining Tasks in PHP Deployer\nDESCRIPTION: Creates a new task definition or retrieves an existing task by name.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\ntask('task_name', function() {\n    // Task implementation\n});\n```\n\n----------------------------------------\n\nTITLE: Laravel Deploy Task Definition\nDESCRIPTION: Main deployment task that orchestrates the full deployment process for Laravel applications. Includes preparation, vendor installation, storage linking, caching configurations/routes/views/events, running migrations, and publishing.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/laravel.md#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\ndeploy:prepare\ndeploy:vendors\nartisan:storage:link\nartisan:config:cache\nartisan:route:cache\nartisan:view:cache\nartisan:event:cache\nartisan:migrate\ndeploy:publish\n```\n\n----------------------------------------\n\nTITLE: Setting up Deployer alias in Bash\nDESCRIPTION: This snippet shows how to create an alias for the Deployer command in the .bashrc file. It simplifies the usage of Deployer by allowing users to type 'dep' instead of the full path.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/cli.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nalias dep='vendor/bin/dep'\n```\n\n----------------------------------------\n\nTITLE: Nginx server configuration for Deployer\nDESCRIPTION: Example Nginx configuration that sets the document root to the current release directory and handles PHP requests correctly.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/getting-started.md#2025-04-16_snippet_9\n\nLANGUAGE: nginx\nCODE:\n```\nroot /home/deployer/example/current/public;\nindex index.php;\nlocation / {\n    try_files $uri $uri/ /index.php?$query_string;\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Rollback Recipe in PHP\nDESCRIPTION: Shows how to include the rollback recipe file in your deployment configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/rollback.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/rollback.php';\n```\n\n----------------------------------------\n\nTITLE: Adding Task Hooks in PHP\nDESCRIPTION: Demonstrates how to define and add a task hook that runs after another task using the 'after' function.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/tasks.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\ntask('deploy:done', function () {\n    writeln('Deploy done!');\n});\n\nafter('deploy', 'deploy:done');\n```\n\n----------------------------------------\n\nTITLE: Checking Command Existence\nDESCRIPTION: Validates if a specified command exists in the system\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\ncommandExist(string $command): bool\n```\n\n----------------------------------------\n\nTITLE: Overriding Deployer configuration options via CLI\nDESCRIPTION: These bash commands show how to override Deployer configuration options using the -o flag. Users can enable SSH multiplexing or set the deployment branch without modifying the recipe file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/cli.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndep deploy -o ssh_multiplexing=true\n```\n\nLANGUAGE: bash\nCODE:\n```\ndep deploy -o ssh_multiplexing=true -o branch=master\n```\n\n----------------------------------------\n\nTITLE: Installing Deployer Globally with Composer\nDESCRIPTION: Command to install Deployer globally using Composer package manager.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncomposer global require deployer/deployer\n```\n\n----------------------------------------\n\nTITLE: YAML Host Inventory\nDESCRIPTION: Example of using external YAML file for host definitions with the import() function.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/hosts.md#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nimport('inventory.yaml');\n```\n\nLANGUAGE: yaml\nCODE:\n```\nhosts:\n  example.org:\n    remote_user: deployer\n  deployer.org:\n    remote_user: deployer\n```\n\n----------------------------------------\n\nTITLE: Executing Tasks on Specific Hosts with on() in PHP Deployer\nDESCRIPTION: Executes a callback function for each host in a selection, allowing host-specific operations.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\non(select('stage=prod, role=db'), function ($host) {\n    ...\n});\n```\n\nLANGUAGE: php\nCODE:\n```\non(host('example.org'), function ($host) {\n    ...\n});\n```\n\nLANGUAGE: php\nCODE:\n```\non(Deployer::get()->hosts, function ($host) {\n    ...\n});\n```\n\n----------------------------------------\n\nTITLE: Loading Composer Recipe in PHP Deployer\nDESCRIPTION: Imports the Composer recipe file which provides deployment tasks for PHP projects managed with Composer. This is a required include statement that loads the core Composer deployment functionality.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/composer.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/composer.php';\n```\n\n----------------------------------------\n\nTITLE: Executing Local Commands with runLocally() in PHP Deployer\nDESCRIPTION: Executes commands on the local machine with similar options to run() including timeout, secrets, and environment variables.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$user = runLocally('git config user.name');\nrunLocally(\"echo $user\");\n```\n\n----------------------------------------\n\nTITLE: Manual Symlink Command for Rollback\nDESCRIPTION: Shows how to manually create a symlink to a specific release version when performing a rollback operation.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/rollback.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndep run '{{bin/symlink}} releases/123 {{current_path}}'\n```\n\n----------------------------------------\n\nTITLE: Finding Command Path\nDESCRIPTION: Locates the full path of a command in the system\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\nwhich(string $name): string\n```\n\n----------------------------------------\n\nTITLE: Bitbucket Pipelines Configuration with Deployer\nDESCRIPTION: Bitbucket Pipelines configuration for multi-stage deployment process including Composer dependencies, NPM build, and Deployer execution. Includes artifact handling and environment variable usage.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/ci-cd.md#2025-04-16_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npipelines:\n  branches:\n    develop:\n      - stage:\n          deployment: staging\n          name: Deploy Staging\n          steps:\n            - step:\n              name: Composer Install\n              image: composer/composer:2.2\n              caches:\n                - composer\n              script:\n                - composer install --quiet\n              artifacts:\n                - vendor/**\n            - step:\n                name: NPM Install\n                image: node:22-bullseye-slim\n                caches:\n                  - node\n                script:\n                  - npm install --silent\n                artifacts:\n                  - public/build/**\n            - step:\n              name: Deployer Deploy\n              timeout: 6m\n              image: deployphp/deployer:v7.5.8\n              script:\n                - php /bin/deployer.phar deploy --branch=$DEVELOP stage=$STAGING\n```\n\n----------------------------------------\n\nTITLE: Deploy Task Configuration with Rsync in PHP\nDESCRIPTION: Example deployment task configuration using rsync for code transfer instead of git.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rsync.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\ntask('deploy', [\n    'deploy:prepare',\n    'deploy:release',\n    'rsync',\n    'deploy:vendors',\n    'deploy:symlink',\n])->desc('Deploy your project');\n```\n\n----------------------------------------\n\nTITLE: Default Release Name Generation in PHP\nDESCRIPTION: Generates the next release number by incrementing the latest release number stored in .dep/latest_release.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/release.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nreturn within('{{deploy_path}}', function () {\n$latest = run('cat .dep/latest_release || echo 0');\nreturn strval(intval($latest) + 1);\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring an Existing Task in PHP\nDESCRIPTION: Shows how to access and modify the configuration of an existing task by calling the 'task' function without the second argument.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/tasks.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\ntask('my_task')->disable();\n```\n\n----------------------------------------\n\nTITLE: Importing Recipe Files in PHP Deployer\nDESCRIPTION: Imports other PHP or YAML recipe files into the current configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nimport('recipe/common.php');\n```\n\nLANGUAGE: php\nCODE:\n```\nimport(__DIR__ . '/config/hosts.yaml');\n```\n\n----------------------------------------\n\nTITLE: Defining Multiple Hosts in Deployer Recipe\nDESCRIPTION: Shows how to define multiple hosts in a Deployer recipe for task execution across different servers.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nhost('deployer.org');\nhost('medv.io');\n```\n\n----------------------------------------\n\nTITLE: Grouping Tasks in PHP\nDESCRIPTION: Shows how to combine multiple tasks into a single task group using an array of task names.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/tasks.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\ntask('deploy', [\n    'deploy:prepare',\n    'deploy:update_code',\n    'deploy:vendors',\n    'deploy:symlink',\n    'cleanup'\n]);\n```\n\n----------------------------------------\n\nTITLE: Defining a Task with Description in PHP\nDESCRIPTION: Demonstrates how to define a task with a description using the 'desc' and 'task' functions in Deployer.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/tasks.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\ndesc('My task');\ntask('my_task', function () {\n    ....\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Host Definition in PHP\nDESCRIPTION: Demonstrates the basic syntax for defining a host in Deployer using the host() function.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/hosts.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhost('example.org');\n```\n\n----------------------------------------\n\nTITLE: Configuring cPanel Parameters in Deployer\nDESCRIPTION: This code demonstrates how to configure the cPanel connection parameters and formatting options for domains and databases. It utilizes environment variables for sensitive information.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cpanel.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nset('cpanel', [\n    'host' => getenv('CPANEL_HOST'),\n    'port' => getenv('CPANEL_PORT'),\n    'username' => getenv('CPANEL_USERNAME'),\n    'auth_type' => getenv('CPANEL_AUTH_TYPE'),\n    'token' => getenv('CPANEL_TOKEN'),\n    'user' => getenv('CPANEL_USER'),\n    'db_user' => getenv('CPANEL_DB_USER'),\n    'db_user_privileges' => getenv('CPANEL_DB_PRIVILEGES'),\n    'timeout' => 500,\n    'allowInStage' => ['staging', 'beta', 'alpha'],\n    'create_domain_format' => '%s-%s-%s',\n    'create_domain_values' => ['staging', 'master', get('application')],\n    'subdomain_prefix' => substr(md5(get('application')), 0,4) . '-',\n    'subdomain_suffix' => getenv('SUDOMAIN_SUFFIX'),\n    'create_db_format' => '%s_%s-%s-%s',\n    'create_db_values' => ['apps', 'staging','master', get('application')],\n]);\n```\n\n----------------------------------------\n\nTITLE: Changing User with become() Function in PHP Deployer\nDESCRIPTION: Changes the current user for command execution with ability to revert back.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$restore = become('deployer');\n\n// do something\n\n$restore(); // revert back to the previous user\n```\n\n----------------------------------------\n\nTITLE: Requiring Common Recipe in PHP Deployer\nDESCRIPTION: Shows how to include the common recipe in your deployment script. This is typically the first step when setting up a Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/common.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/common.php';\n```\n\n----------------------------------------\n\nTITLE: Overriding Configurations via Deployer CLI\nDESCRIPTION: Demonstrates how to override configuration values using the -o option in the Deployer CLI.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_13\n\nLANGUAGE: sh\nCODE:\n```\n$ dep my_task deployer.org -v -o current_date=\"I don't know\"\ntask my_task\n[deployer.org] What time is it? I don't know\n[deployer.org] run sleep 5\n[deployer.org] What time is it? I don't know\n```\n\n----------------------------------------\n\nTITLE: Accessing Host Configurations in Tasks\nDESCRIPTION: Shows how to access host configurations within tasks using the currentHost() function.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/hosts.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\ntask('test', function () {\n    $hostname = currentHost()->get('hostname');\n    $alias = currentHost()->get('alias');\n    writeln(\"The $alias is $hostname\");\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Deployer Globally with Phive\nDESCRIPTION: Command to install Deployer globally using Phive package manager.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nphive install deployer\n```\n\n----------------------------------------\n\nTITLE: Multiple Host Definition\nDESCRIPTION: Shows how to define multiple hosts in a single call with shared configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/hosts.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nhost('example.org', 'deployer.org', 'another.org')->setRemoteUser('anton');\n```\n\n----------------------------------------\n\nTITLE: Clearing OPcache After Deployment in PHP\nDESCRIPTION: Adds a hook to clear OPcache after the new release symlink is created during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cachetool.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:symlink', 'cachetool:clear:opcache');\n```\n\n----------------------------------------\n\nTITLE: Invoking Tasks in PHP Deployer\nDESCRIPTION: Runs a specific task by its name during execution of another task.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\ninvoke('deploy:symlink');\n```\n\n----------------------------------------\n\nTITLE: Configuring Symlink Binary Command\nDESCRIPTION: Default configuration for the symlink command. Uses the ln command with appropriate options based on the 'use_relative_symlink' setting.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/common.md#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nreturn get('use_relative_symlink') ? 'ln -nfs --relative' : 'ln -nfs';\n```\n\n----------------------------------------\n\nTITLE: Setting Up Bash Autocomplete for Deployer\nDESCRIPTION: Command to generate and set up Bash autocomplete for Deployer commands.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\ndep completion bash > /etc/bash_completion.d/deployer\n```\n\n----------------------------------------\n\nTITLE: Validating Command Option Support\nDESCRIPTION: Checks if a command supports a specific option\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\ncommandSupportsOption(string $command, string $option): bool\n```\n\n----------------------------------------\n\nTITLE: Configuring Artifact Upload with Rsync Bandwidth Limit (PHP)\nDESCRIPTION: Workaround for Rsync (3.1.3) issue where artifact upload is interrupted after the first chunk. This solution adds a bandwidth limit to the rsync command.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/KNOWN_BUGS.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\ntask('artifact:upload', function () {\n    upload(get('artifact_path'), '{{release_path}}', ['options' => ['--bwlimit=4096']]);\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Local Host with localhost() Function in PHP\nDESCRIPTION: Defines a local host for executing commands locally instead of connecting remotely.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nlocalhost('ci'); // Alias and hostname will be \"ci\".\n```\n\n----------------------------------------\n\nTITLE: Making HTTP Requests\nDESCRIPTION: Performs HTTP requests with configurable method, headers, and body. Returns response content and optionally provides request info.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_19\n\nLANGUAGE: php\nCODE:\n```\nfetch(string $url, string $method = 'get', array $headers = [], ?string $body = null, ?array &$info = null, bool $nothrow = false): string\n```\n\nLANGUAGE: php\nCODE:\n```\n$result = fetch('{{domain}}', info: $info);\nvar_dump($info['http_code'], $result);\n```\n\n----------------------------------------\n\nTITLE: Configuring Shared Directories in Deployer\nDESCRIPTION: Example of how to set shared directories that will be symlinked between releases. These directories will be stored in the shared directory of your deployment path.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/shared.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nset('shared_dirs', ['storage']);\n```\n\n----------------------------------------\n\nTITLE: Overriding runLocally working directory in PHP\nDESCRIPTION: This PHP snippet demonstrates how to override the working directory for a specific runLocally() command in a Deployer recipe using the 'cwd' configuration option.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/cli.md#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nrunLocally('ls', ['cwd' => '/root/directory']);\n```\n\n----------------------------------------\n\nTITLE: Default Implementation for Newrelic Revision in PHP\nDESCRIPTION: Default implementation for the newrelic_revision configuration. It retrieves the hash of the most recent git commit to use as the deployment revision identifier.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/newrelic.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nreturn runLocally('git log -n 1 --format=\"%h\"');\n```\n\n----------------------------------------\n\nTITLE: Setting Deployer root directory via environment variable\nDESCRIPTION: This bash command shows how to set the DEPLOYER_ROOT environment variable to change the working directory for Deployer's runLocally() function globally.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/cli.md#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nDEPLOYER_ROOT=. dep taskname\n```\n\n----------------------------------------\n\nTITLE: Adding Composer's Global Bin to PATH\nDESCRIPTION: Shell command to add Composer's global bin directory to the PATH environment variable.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nexport PATH=\"$HOME/.composer/vendor/bin:$PATH\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Task to Run Once Per Node in PHP\nDESCRIPTION: Demonstrates how to configure a task to run only once per unique hostname using the 'oncePerNode' method.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/tasks.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nhost('foo')->setHostname('example.com');\nhost('bar')->setHostname('example.com');\nhost('pro')->setHostname('another.com');\n\ntask('apt:update', function () {\n    // This task will be executed twice, only on \"foo\" and \"pro\" hosts.\n    run('apt-get update');\n})->oncePerNode();\n```\n\n----------------------------------------\n\nTITLE: Complete cPanel Deployment Configuration Example\nDESCRIPTION: A comprehensive example demonstrating the complete setup for cPanel integration with Deployer, including environment loading, configuration, host definition, and task hooks for domain and database creation.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cpanel.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\nnamespace Deployer;\nuse Dotenv\\Dotenv;\nrequire 'vendor/autoload.php';\n(Dotenv::create(__DIR__))->load(); // this is used just so an .env file can be used for credentials\nrequire 'cpanel.php';\nProject name\nset('application', 'myproject.com');\nProject repository\nset('repository', 'git@github.com:myorg/myproject.com');\nset('cpanel', [\n    'host' => getenv('CPANEL_HOST'),\n    'port' => getenv('CPANEL_PORT'),\n    'username' => getenv('CPANEL_USERNAME'),\n    'auth_type' => getenv('CPANEL_AUTH_TYPE'),\n    'token' => getenv('CPANEL_TOKEN'),\n    'user' => getenv('CPANEL_USER'),\n    'db_user' => getenv('CPANEL_DB_USER'),\n    'db_user_privileges' => getenv('CPANEL_DB_PRIVILEGES'),\n    'timeout' => 500,\n    'allowInStage' => ['staging', 'beta', 'alpha'],\n    'create_domain_format' => '%s-%s-%s',\n    'create_domain_values' => ['staging', 'master', get('application')],\n    'subdomain_prefix' => substr(md5(get('application')), 0,4) . '-',\n    'subdomain_suffix' => getenv('SUDOMAIN_SUFFIX'),\n    'create_db_format' => '%s_%s-%s-%s',\n    'create_db_values' => ['apps', 'staging','master', get('application')],\n]);\nhost('myproject.com')\n    ->stage('staging')\n    ->set('cpanel_createdb', vsprintf(get('cpanel')['create_db_format'], get('cpanel')['create_db_values']))\n    ->set('branch', 'dev-branch')\n    ->set('deploy_path',  '~/staging/' . vsprintf(get('cpanel')['create_domain_format'], get('cpanel')['create_domain_values']))\n    ->set('addondir',  'staging/' . vsprintf(get('cpanel')['create_domain_format'], get('cpanel')['create_domain_values']));\nTasks\ntask('build', function () {\n    run('cd {{release_path}} && build');\n});\nafter('deploy:prepare', 'cpanel:createaddondomain');\nafter('deploy:prepare', 'cpanel:createdb');\n```\n\n----------------------------------------\n\nTITLE: Configuring .env File Path for Deployment\nDESCRIPTION: Example of setting the 'dotenv' parameter to specify the path to a .env file that will be used for environment variables in each command.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/common.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nset('dotenv', '{{current_path}}/.env');\n```\n\nLANGUAGE: php\nCODE:\n```\nfalse\n```\n\n----------------------------------------\n\nTITLE: Including Codeigniter 4 Recipe in Deployer Configuration\nDESCRIPTION: This snippet shows how to include the Codeigniter 4 recipe in your deployment configuration file, which enables all the Codeigniter 4-specific deployment tasks and configurations.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/codeigniter4.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/codeigniter4.php';\n```\n\n----------------------------------------\n\nTITLE: Default Implementation for Newrelic Description in PHP\nDESCRIPTION: Default implementation for the newrelic_description configuration. It retrieves the most recent git commit message and author to use as the deployment description.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/newrelic.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nreturn runLocally('git log -n 1 --format=\"%an: %s\" | tr \\'\"\\' \"\\'\");'\n```\n\n----------------------------------------\n\nTITLE: Changing Directory with cd() Function in PHP Deployer\nDESCRIPTION: Changes the current working directory for subsequent commands.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\ncd('~/myapp');\nrun('ls'); // Will run `ls` in ~/myapp.\n```\n\n----------------------------------------\n\nTITLE: Configuring Grafana Settings in PHP\nDESCRIPTION: Sets up Grafana configuration including authentication token, API endpoint URL, and annotation tags. The token is required for authentication, URL specifies the annotation API endpoint, and tags are optional markers for the deployment annotation.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/grafana.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\ndeploy.php\nset('grafana', [\n    'token' => 'eyJrIj...',\n    'url' => 'http://grafana/api/annotations',\n    'tags' => ['deploy', 'production'],\n]);\n```\n\n----------------------------------------\n\nTITLE: Installing Deployer completion script on macOS\nDESCRIPTION: These commands install bash-completion and set up the Deployer completion script on macOS. This enables autocomplete functionality for Deployer commands, options, host names, and configs.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/cli.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew install bash-completion\ndep completion bash > /usr/local/etc/bash_completion.d/deployer\n```\n\n----------------------------------------\n\nTITLE: Configuring Writable Use Sudo in PHP Deployer\nDESCRIPTION: This snippet sets the default value for writable_use_sudo to false. This configuration determines whether sudo commands will be used when making directories writable.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/writable.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nfalse\n```\n\n----------------------------------------\n\nTITLE: Executing Deployer Task with Increased Verbosity\nDESCRIPTION: Demonstrates how to run a Deployer task with increased verbosity using the -v option.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n$ dep my_task -v\ntask my_task\n[deployer.org] run whoami\n[deployer.org] deployer\n```\n\n----------------------------------------\n\nTITLE: Requiring the Slack Recipe in Deployer PHP\nDESCRIPTION: Imports the Slack notification recipe into your Deployer PHP configuration to enable Slack notifications for deployment events.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/slack.php';\n```\n\n----------------------------------------\n\nTITLE: Overriding Rollback Candidate via CLI\nDESCRIPTION: Demonstrates how to override the default rollback candidate by specifying a specific release number through the command line interface.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/rollback.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndep rollback -o rollback_candidate=123\n```\n\n----------------------------------------\n\nTITLE: Default Git SSH Command Configuration in PHP Deployer\nDESCRIPTION: Sets the default SSH command for Git operations with security settings for host key verification.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/update_code.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n'ssh -o StrictHostKeyChecking=accept-new'\n```\n\n----------------------------------------\n\nTITLE: Configuring Hosts in Deployer Recipe\nDESCRIPTION: Shows how to set and access host-specific configurations in a Deployer recipe using the set() and get() functions.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nhost('deployer.org')->set('my_config', 'foo');\nhost('medv.io')->set('my_config', 'bar');\n\ntask('my_task', function () {\n    $myConfig = get('my_config');\n    writeln(\"my_config: \" . $myConfig);\n});\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Recipe File in Deployer CLI\nDESCRIPTION: Shows how to use the -f or --file option to specify a custom recipe file when running Deployer.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n$ dep --file=deploy.php deploy deployer.org\n```\n\n----------------------------------------\n\nTITLE: Configuring Caddy Server for Symlink Resolution\nDESCRIPTION: Caddy server configuration that uses the resolve_root_symlink directive. This ensures proper symlink resolution when serving PHP files through FastCGI.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/avoid-php-fpm-reloading.md#2025-04-16_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nphp_fastcgi * unix//run/php/php-fpm.sock {\n    resolve_root_symlink\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Host Labels\nDESCRIPTION: Examples of setting labels for hosts to enable grouping and filtering.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/hosts.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nhost('example.org')->setLabels(['stage' => 'prod']);\nhost('staging.example.org')->setLabels(['stage' => 'staging']);\n```\n\nLANGUAGE: php\nCODE:\n```\nhost('admin.example.org')->setLabels(['stage' => 'prod', 'role' => 'web']);\nhost('web[1:5].example.org')->setLabels(['stage' => 'prod', 'role' => 'web']);\nhost('db[1:2].example.org')->setLabels(['stage' => 'prod', 'role' => 'db']);\nhost('test.example.org')->setLabels(['stage' => 'test', 'role' => 'web']);\nhost('special.example.org')->setLabels(['role' => 'special']);\n```\n\n----------------------------------------\n\nTITLE: Default Sub Directory Configuration in PHP Deployer\nDESCRIPTION: Specifies the default value for sub-directory deployment configuration, which is false by default.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/update_code.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nfalse\n```\n\n----------------------------------------\n\nTITLE: Defining Host Labels in PHP\nDESCRIPTION: Example of how to set labels for hosts using setLabels() method in PHP. Shows setting type and env labels for web and database servers.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/selector.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhost('web.example.com')\n    ->setLabels([\n        'type' => 'web',\n        'env' => 'prod',\n    ]);\n\nhost('db.example.com')\n    ->setLabels([\n        'type' => 'db',\n        'env' => 'prod',\n    ]);\n```\n\n----------------------------------------\n\nTITLE: Setting Up Zsh Autocomplete for Deployer\nDESCRIPTION: Command to generate and set up Zsh autocomplete for Deployer commands.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\ndep completion zsh > ~/.zsh/completion/_deployer\n```\n\n----------------------------------------\n\nTITLE: Adding Notification for Failed Deployment\nDESCRIPTION: Configures Deployer to send a notification to Slack when deployment fails.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:failed', 'slack:notify:failure');\n```\n\n----------------------------------------\n\nTITLE: Adding Notification for Deployment Beginning\nDESCRIPTION: Configures Deployer to send a notification to Slack when deployment begins.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'slack:notify');\n```\n\n----------------------------------------\n\nTITLE: Deploying Magento 2 Artifact to Server\nDESCRIPTION: Command to deploy a previously built Magento 2 artifact to a specified host. This is the second step in the artifact deployment process.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/magento2.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nbin/dep artifact:deploy [host]\n```\n\n----------------------------------------\n\nTITLE: Complete Deployer Configuration Example with Supervisord-monitor in PHP\nDESCRIPTION: Comprehensive example showing a complete Deployer configuration file that includes project setup, staging environments, and Supervisord-monitor integration with task definitions.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/supervisord-monitor.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\nnamespace Deployer;\nuse Dotenv\\Dotenv;\nrequire 'vendor/autoload.php';\nrequire 'supervisord_monitor.php';\nProject name\nset('application', 'myproject.com');\nProject repository\nset('repository', 'git@github.com:myorg/myproject.com');\nset('supervisord', [\n    'uri' => 'https://youruri.xyz/supervisor',\n    'basic_auth_user' => 'username',\n    'basic_auth_password' => 'password',\n    'process_name' => 'process01',\n]);\nhost('staging.myproject.com')\n    ->set('branch', 'develop')\n    ->set('labels', ['stage' => 'staging']);\nhost('myproject.com')\n    ->set('branch', 'main')\n    ->set('labels', ['stage' => 'production']);\nTasks\ntask('build', function () {\n    run('cd {{release_path}} && build');\n});\ntask('deploy', [\n    'build',\n    'supervisord',\n]);\ntask('supervisord', ['supervisord-monitor:restart'])\n    ->select('stage=production');\n```\n\n----------------------------------------\n\nTITLE: Configuring Current Path in Deployer\nDESCRIPTION: Shows how to set the 'current_path' parameter which defines the path to the current release. By default, it's set to the deploy_path/current directory.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/common.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nset('current_path', '/var/public_html');\n```\n\nLANGUAGE: php\nCODE:\n```\n'{{deploy_path}}/current'\n```\n\n----------------------------------------\n\nTITLE: Detecting Codeigniter 4 Version\nDESCRIPTION: A function that detects the installed Codeigniter 4 version by running the spark command and parsing the output, defaulting to version 5.5 if detection fails.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/codeigniter4.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$result = run('{{bin/php}} {{release_or_current_path}}/spark');\npreg_match_all('/(\\d+\\.?)+/', $result, $matches);\nreturn $matches[0][0] ?? 5.5;\n```\n\n----------------------------------------\n\nTITLE: Downloading and Setting Up Cachetool in PHP\nDESCRIPTION: Checks if Cachetool is present in the release path, downloads it if not, and returns the path to the Cachetool executable.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cachetool.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nif (!test('[ -f {{release_or_current_path}}/cachetool.phar ]')) {\nrun(\"cd {{release_or_current_path}} && curl -sLO {{cachetool_url}}\");\n}\nreturn '{{release_or_current_path}}/cachetool.phar';\n```\n\n----------------------------------------\n\nTITLE: Adding Failure Notification to Deployment Workflow\nDESCRIPTION: Code to add a failure notification hook that triggers when deployment fails, sending a notification about the deployment failure.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/chatwork.md#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:failed', 'chatwork:notify:failure');\n```\n\n----------------------------------------\n\nTITLE: Adding Success Notification to Deployment Workflow\nDESCRIPTION: Code to add a success notification hook that triggers after a successful deployment, sending a notification about the completed deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/chatwork.md#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:success', 'chatwork:notify:success');\n```\n\n----------------------------------------\n\nTITLE: Adding Sentry Notification After Deployment\nDESCRIPTION: This snippet shows how to configure Deployer to notify Sentry after a successful deployment by adding the deploy:sentry task to execute at the end of the deployment process.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/sentry.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\ndeploy.php\nafter('deploy', 'deploy:sentry');\n```\n\n----------------------------------------\n\nTITLE: Configuring Phinx with Deployer\nDESCRIPTION: Example of how to configure Phinx parameters in Deployer. This shows setting environment variables, specifying configuration paths, and integrating Phinx tasks into the deployment workflow.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/phinx.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$phinx_env_vars = [\n  'environment' => 'development',\n  'configuration' => './migration/.phinx.yml',\n  'target' => '20120103083322',\n  'remove-all' => '',\n];\nset('phinx_path', '/usr/local/phinx/bin/phinx');\nset('phinx', $phinx_env_vars);\nafter('cleanup', 'phinx:migrate');\nor set it for a specific server\nhost('dev')\n    ->user('user')\n    ->set('deploy_path', '/var/www')\n    ->set('phinx', $phinx_env_vars)\n    ->set('phinx_path', '');\n```\n\n----------------------------------------\n\nTITLE: Requiring Check Remote Recipe in PHP Deployer\nDESCRIPTION: Shows how to include the check_remote recipe in a Deployer configuration file. This recipe allows checking if the remote repository already contains the latest commit before deploying.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/check_remote.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/check_remote.php';\n```\n\n----------------------------------------\n\nTITLE: Setting Slack Webhook URL in Deployer\nDESCRIPTION: Configures the Slack incoming webhook URL which is required for sending notifications to Slack.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nset('slack_webhook', 'https://hooks.slack.com/...');\n```\n\n----------------------------------------\n\nTITLE: Setting Host-Specific Cachetool Configuration in PHP\nDESCRIPTION: Demonstrates how to set different Cachetool configurations for staging and production hosts.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cachetool.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nhost('staging')\n    ->set('cachetool', '127.0.0.1:9000');\nhost('production')\n    ->set('cachetool', '/var/run/php-fpm.sock');\n```\n\n----------------------------------------\n\nTITLE: Default Rsync Path Configuration in PHP\nDESCRIPTION: Basic configuration for rsync source and destination paths using default values.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rsync.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nset('rsync_src', __DIR__);\nset('rsync_dest','{{release_path}}');\n```\n\n----------------------------------------\n\nTITLE: Workplace Webhook Configuration Examples\nDESCRIPTION: Examples of setting up Workplace webhook URLs for different integration types including custom integrations, publishing bots, and markdown formatting options.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/workplace.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// With custom integration\nset('workplace_webhook', 'https://graph.facebook.com/<GROUP_ID>/feed?access_token=<ACCESS_TOKEN>');\n// With publishing bot\nset('workplace_webhook', 'https://graph.facebook.com/v3.0/group/feed?access_token=<ACCESS_TOKEN>');\n// Use markdown on message\nset('workplace_webhook', 'https://graph.facebook.com/<GROUP_ID>/feed?access_token=<ACCESS_TOKEN>&formatting=MARKDOWN');\n```\n\n----------------------------------------\n\nTITLE: Displaying Deployer execution plan\nDESCRIPTION: This bash command uses the --plan option to display the execution plan for the 'deploy' task across all hosts. It shows which tasks will be executed on which hosts and in what order.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/cli.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndep deploy --plan all\n```\n\n----------------------------------------\n\nTITLE: Host Configuration in YAML\nDESCRIPTION: Demonstrates how to define host labels and configuration in YAML format, showing the distinction between env and labels.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/selector.md#2025-04-16_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nhosts:\n  web.example.com:\n    remote_user: deployer\n    env:\n      environment: production\n    labels:\n      env: prod\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Success Notification\nDESCRIPTION: Adds a hook to notify about successful deployment completion.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:success', 'ntfy:notify:success');\n```\n\n----------------------------------------\n\nTITLE: Setting Up Grafana Deployment Hook in PHP\nDESCRIPTION: Adds a hook to create Grafana annotation after successful deployment completion. The annotation will be created using the grafana:annotation task.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/grafana.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:success', 'grafana:annotation');\n```\n\n----------------------------------------\n\nTITLE: Host Range Definition\nDESCRIPTION: Demonstrates using ranges to define multiple hosts with sequential naming patterns.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/hosts.md#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nhost('www[01:50].example.org'); // Will define hosts \"www01.example.org\", \"www02.example.org\", etc.\nhost('db[a:f].example.org'); // Will define hosts \"dba.example.org\", \"dbb.example.org\", etc.\n```\n\n----------------------------------------\n\nTITLE: Converting String-Based Tasks to Closure-Based in Deployer 7.x\nDESCRIPTION: Example showing how to convert string-based task definitions to closure-based functions in Deployer 7.x, which no longer supports string-based task definitions.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/UPGRADE.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n# from\ntask('deploy:npm-install', 'npm clean-install');\n\n# to\ntask('deploy:npm-install', function() {\n    cd('{{release_path}}');\n    run('npm clean-install');\n});\n```\n\n----------------------------------------\n\nTITLE: Release Revision Retrieval in PHP\nDESCRIPTION: Retrieves the current release revision (typically a git hash) from the REVISION file in the release path.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/release.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nreturn run('cat {{release_path}}/REVISION');\n```\n\n----------------------------------------\n\nTITLE: Loading Rsync Recipe in PHP\nDESCRIPTION: Basic inclusion of the rsync recipe file into the deployment configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rsync.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/rsync.php';\n```\n\n----------------------------------------\n\nTITLE: Host-Specific Rsync Configuration in PHP\nDESCRIPTION: Example of configuring rsync paths for specific host with custom deployment path settings.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rsync.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nhost('hostname')\n    ->hostname('10.10.10.10')\n    ->port(22)\n    ->set('deploy_path','/your/remote/path/app')\n    ->set('rsync_src', '/your/local/path/app')\n    ->set('rsync_dest','{{release_path}}');\n```\n\n----------------------------------------\n\nTITLE: Including Symlink Recipe in PHP Deployer\nDESCRIPTION: This snippet shows how to include the Symlink recipe in a Deployer configuration file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/symlink.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/symlink.php';\n```\n\n----------------------------------------\n\nTITLE: Setting Up MS Teams Webhook Configuration\nDESCRIPTION: Configuration for MS Teams webhook URL and notification setup in deploy.php\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ms-teams.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/ms-teams.php';\nset('teams_webhook', 'https://outlook.office.com/webhook/...');\n```\n\n----------------------------------------\n\nTITLE: Default Rsync Configuration in PHP\nDESCRIPTION: Default configuration setup for rsync with basic git directory and deploy.php file exclusions. Sets default flags and timeout values.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rsync.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nset('rsync',[\n    'exclude'      => [\n        '.git',\n        'deploy.php',\n    ],\n    'exclude-file' => false,\n    'include'      => [],\n    'include-file' => false,\n    'filter'       => [],\n    'filter-file'  => false,\n    'filter-perdir'=> false,\n    'flags'        => 'rz', // Recursive, with compress\n    'options'      => ['delete'],\n    'timeout'      => 60,\n]);\n```\n\n----------------------------------------\n\nTITLE: Success Notification Hook\nDESCRIPTION: Adds a post-deployment success notification hook.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/discord.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:success', 'discord:notify:success');\n```\n\n----------------------------------------\n\nTITLE: Stopping Magento 2 Cron Jobs During Deployment\nDESCRIPTION: Removes cron from crontab and kills running cron jobs. This task should be executed after enabling maintenance mode during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/magento2.md#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\nafter('magento:maintenance:enable-if-needed', 'magento:cron:stop');\n```\n\n----------------------------------------\n\nTITLE: Configuring hosts and task limits in PHP\nDESCRIPTION: This PHP snippet demonstrates how to configure multiple hosts using a range syntax and how to limit the execution of a specific task to one host at a time in a Deployer recipe.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/cli.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nhost('prod[01:04]');\ntask('deploy:symlink')->limit(1);\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Composer Options for Deployment\nDESCRIPTION: Defines the default Composer command-line options used during deployment. These options ensure a non-interactive installation optimized for production environments.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/vendors.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'--verbose --prefer-dist --no-progress --no-interaction --no-dev --optimize-autoloader'\n```\n\n----------------------------------------\n\nTITLE: Importing Configuration with YAML in Deployer 7.x\nDESCRIPTION: Example of using the import functionality in Deployer 7.x to define hosts, configs, and tasks using YAML format, replacing the previous inventory method.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/UPGRADE.md#2025-04-16_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nimport: recipe/common.php\n\nconfig:\n  application: deployer\n  shared_dirs:\n    - uploads\n    - storage/logs/\n    - storage/db\n  shared_files:\n    - .env\n    - config/test.yaml\n  keep_releases: 3\n  http_user: false\n\nhosts:\n  prod:\n    local: true\n\ntasks:\n  deploy:\n    - deploy:prepare\n    - deploy:vendors\n    - deploy:publish\n\n  deploy:vendors:\n    - run: \"cd {{release_path}} && echo {{bin/composer}} {{composer_options}} 2>&1\"\n```\n\n----------------------------------------\n\nTITLE: Including the Push Recipe in Deployer\nDESCRIPTION: Code snippet showing how to include the push recipe in a Deployer configuration file. This makes the push task available for use in your deployment workflow.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/push.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/push.php';\n```\n\n----------------------------------------\n\nTITLE: Configuring Bugsnag Deployment Notification\nDESCRIPTION: Sets up the Bugsnag notification task to run after successful deployment. This ensures Bugsnag is only notified when deployment completes successfully.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/bugsnag.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy', 'bugsnag:notify');\n```\n\n----------------------------------------\n\nTITLE: Initializing Deployer with Phar File\nDESCRIPTION: Command to initialize Deployer in the project using the downloaded Phar file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\nphp deployer.phar init\n```\n\n----------------------------------------\n\nTITLE: Setting Default Keep Releases Configuration\nDESCRIPTION: Shows the default configuration for the 'keep_releases' parameter which defines the number of releases to preserve in the releases folder.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/common.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n10\n```\n\n----------------------------------------\n\nTITLE: Configuration Values\nDESCRIPTION: Default configuration values for Mattermost integration including webhook, channel, username, icons, and message templates\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/mattermost.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nnull\n```\n\nLANGUAGE: php\nCODE:\n```\nnull\n```\n\nLANGUAGE: php\nCODE:\n```\n'deployer'\n```\n\nLANGUAGE: php\nCODE:\n```\nnull\n```\n\nLANGUAGE: php\nCODE:\n```\n':&#8203;white_check_mark:'\n```\n\nLANGUAGE: php\nCODE:\n```\n':&#8203;x:'\n```\n\nLANGUAGE: php\nCODE:\n```\n'_{{user}}_ deploying `{{what}}` to **{{where}}**'\n```\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to **{{where}}** successful {{mattermost_success_emoji}}'\n```\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to **{{where}}** failed {{mattermost_failure_emoji}}'\n```\n\n----------------------------------------\n\nTITLE: Updating Cache Prefix in Magento 2 Deployment\nDESCRIPTION: Updates the cache id_prefix during deployment to compile against a fresh cache. This task should be used in conjunction with a cleanup task after deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/magento2.md#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nafter('deploy:shared', 'magento:set_cache_prefix');\nafter('deploy:magento', 'magento:cleanup_cache_prefix');\n```\n\n----------------------------------------\n\nTITLE: Importing Codeigniter Recipe in Deployer\nDESCRIPTION: Shows how to require the Codeigniter recipe in your Deployer configuration file to enable Codeigniter-specific deployment features.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/codeigniter.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/codeigniter.php';\n```\n\n----------------------------------------\n\nTITLE: Hooking Yarn Install After Code Update\nDESCRIPTION: Example of how to configure Deployer to run the yarn:install task after the deploy:update_code task in the deployment flow.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/yarn.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:update_code', 'yarn:install');\n```\n\n----------------------------------------\n\nTITLE: Accessing the server via SSH\nDESCRIPTION: Command to SSH into the server for direct file editing or troubleshooting.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/getting-started.md#2025-04-16_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\ndep ssh\n```\n\n----------------------------------------\n\nTITLE: Initializing Deployer in Project\nDESCRIPTION: Command to initialize Deployer in the current project and create the deploy.php configuration file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ndep init\n```\n\n----------------------------------------\n\nTITLE: Importing CakePHP Recipe in Deployer\nDESCRIPTION: This snippet shows how to require the CakePHP recipe file in your deployment script, which provides predefined tasks and configurations for deploying CakePHP applications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/cakephp.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/cakephp.php';\n```\n\n----------------------------------------\n\nTITLE: Default Shared Directories Configuration for CakePHP\nDESCRIPTION: This configuration defines the default shared directories for CakePHP 4 projects. Shared directories persist between deployments and are symbolically linked to each release.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/cakephp.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n[\n    'logs',\n    'tmp',\n]\n```\n\n----------------------------------------\n\nTITLE: Shared Directories Configuration for WordPress\nDESCRIPTION: Specifies shared directories that persist between deployments, focusing on the uploads directory.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/wordpress.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n['wp-content/uploads']\n```\n\n----------------------------------------\n\nTITLE: Configuring Hipchat Notifications After Deployment\nDESCRIPTION: Sets up the Hipchat notification to be triggered after a successful deployment by adding it to the deployment workflow.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hipchat.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy', 'hipchat:notify');\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Binary Path\nDESCRIPTION: Default configuration for the git binary path. It uses the 'which' function to locate the git executable in the system PATH.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/common.md#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nreturn which('git');\n```\n\n----------------------------------------\n\nTITLE: Getting Current Timestamp\nDESCRIPTION: Returns the current timestamp in UTC timezone using ISO8601 format\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_18\n\nLANGUAGE: php\nCODE:\n```\ntimestamp(): string\n```\n\n----------------------------------------\n\nTITLE: Configuring Shared Files in Deployer\nDESCRIPTION: Example of how to set shared files that will be symlinked between releases. These files will be stored in the shared directory of your deployment path.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/shared.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nset('shared_files', ['.env']);\n```\n\n----------------------------------------\n\nTITLE: Setting Default Npm Binary Path in Deployer PHP Configuration\nDESCRIPTION: This snippet shows the default configuration for the npm binary path. It uses the 'which' command to automatically detect the npm executable location if not explicitly set.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/npm.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nreturn which('npm');\n```\n\n----------------------------------------\n\nTITLE: Including Update Code Recipe in PHP Deployer\nDESCRIPTION: Demonstrates how to require the update_code recipe file in a Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/update_code.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/update_code.php';\n```\n\n----------------------------------------\n\nTITLE: Setting Shared Directories for Craftcms Deployment\nDESCRIPTION: Specifies the directories that should be shared across deployments in a Craftcms project. This overrides the default shared_dirs configuration from the common recipe.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/craftcms.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n[\n    'storage',\n    'web/assets',\n]\n```\n\n----------------------------------------\n\nTITLE: Importing TYPO3 Recipe in PHP\nDESCRIPTION: Basic require statement to import the TYPO3 deployment recipe\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/typo3.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/typo3.php';\n```\n\n----------------------------------------\n\nTITLE: Writable Directories Configuration for WordPress\nDESCRIPTION: Defines directories that need write permissions during deployment, including the uploads directory.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/wordpress.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n['wp-content/uploads']\n```\n\n----------------------------------------\n\nTITLE: Defining Shared Files for Craftcms Deployment\nDESCRIPTION: Lists the files that should be shared across deployments in a Craftcms project. This overrides the default shared_files configuration from the common recipe.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/craftcms.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n['.env']\n```\n\n----------------------------------------\n\nTITLE: Configuring CIMonitor Deploy Tasks\nDESCRIPTION: Hook definitions for notifying CIMonitor before deploy, after successful deploy, and after failed deploy\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cimonitor.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'cimonitor:notify');\nafter('deploy:success', 'cimonitor:notify:success');\nafter('deploy:failed', 'cimonitor:notify:failure');\n```\n\n----------------------------------------\n\nTITLE: Advanced Rsync Configuration in PHP\nDESCRIPTION: Extended rsync configuration with additional options for file exclusions, custom flags, and increased timeout for large repositories.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rsync.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nset('rsync',[\n    'exclude'       => ['excludes_file'],\n    'exclude-file'  => '/tmp/localdeploys/excludes_file', //Use absolute path to avoid possible rsync problems\n    'include'       => [],\n    'include-file'  => false,\n    'filter'        => [],\n    'filter-file'   => false,\n    'filter-perdir' => false,\n    'flags'         => 'rzcE', // Recursive, with compress, check based on checksum rather than time/size, preserve Executable flag\n    'options'       => ['delete', 'delete-after', 'force'], //Delete after successful transfer, delete even if deleted dir is not empty\n    'timeout'       => 3600, //for those huge repos or crappy connection\n]);\n```\n\n----------------------------------------\n\nTITLE: Configuring RabbitMQ Connection Settings\nDESCRIPTION: Configuration setup for RabbitMQ connection including host, port, credentials, channel, and virtual host settings.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rabbit.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nset('rabbit', [\n    'host'     => 'localhost',\n    'port'     => '5672',\n    'username' => 'guest',\n    'password' => 'guest',\n    'channel'  => 'notify-channel',\n    'vhost'    => '/my-app'\n]);\n```\n\n----------------------------------------\n\nTITLE: Setting Up Ntfy Recipe in deploy.php Header\nDESCRIPTION: Required configuration for the Ntfy recipe, including importing the recipe and setting the notification topic.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/ntfy.php';\nset('ntfy_topic', 'ntfy.sh/mytopic');\n```\n\n----------------------------------------\n\nTITLE: Configuring Crontab Jobs in PHP\nDESCRIPTION: Example showing how to set up crontab jobs after successful deployment, including configuration of a Laravel artisan schedule runner.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/crontab.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/crontab.php';\nafter('deploy:success', 'crontab:sync');\nadd('crontab:jobs', [\n    '* * * * * cd {{current_path}} && {{bin/php}} artisan schedule:run >> /dev/null 2>&1',\n]);\n```\n\n----------------------------------------\n\nTITLE: Installing Magento 2 Cron Jobs After Database Upgrade\nDESCRIPTION: Installs cron in crontab after the database upgrade task in the deployment process.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/magento2.md#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\nafter('magento:upgrade:db', 'magento:cron:install');\n```\n\n----------------------------------------\n\nTITLE: Executing Deployer Task with Dynamic Configurations\nDESCRIPTION: Shows the output of running a Deployer task that uses dynamic configurations across multiple hosts.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\n$ dep my_task all\ntask my_task\n[deployer.org] Who am I? deployer\n[medv.io] Who am I? anton\n```\n\n----------------------------------------\n\nTITLE: Defining Multiple Hosts with Same Hostname in Deployer 5.x\nDESCRIPTION: Example showing how to define different hosts with the same hostname but different deploy paths in Deployer 5.x, replacing the server concept from 4.x.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/UPGRADE.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nhost('production')\n    ->hostname('domain.com')\n    ->set('deploy_path', '~/production')\n    ...\n\nhost('beta')\n    ->hostname('domain.com')\n    ->set('deploy_path', '~/beta')\n    ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Branch Selection in Deployer 6.x\nDESCRIPTION: Example of setting up branch selection in Deployer 6.x, showing how to handle the branch option override behavior change from 5.x.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/UPGRADE.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nhost('prod')\n    ->set('branch', function () {\n        return input()->getOption('branch') ?: 'production';\n    })\n```\n\n----------------------------------------\n\nTITLE: Defining Cachetool Download URL in PHP\nDESCRIPTION: Sets the URL for downloading Cachetool if it's not available on the server. Different versions are specified for PHP compatibility.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cachetool.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n'https://github.com/gordalina/cachetool/releases/download/9.1.0/cachetool.phar'\n```\n\n----------------------------------------\n\nTITLE: Updating Server Path Configuration in Deployer 3.x\nDESCRIPTION: Example showing how to replace the previous path configuration syntax with the new environment variable approach in Deployer 3.x.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/UPGRADE.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nserver(...)\n  ->env('deploy_path', '...');\n```\n\n----------------------------------------\n\nTITLE: Adding Mattermost Hook\nDESCRIPTION: Adds Mattermost notification hook before deployment\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/mattermost.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'mattermost:notify');\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Notification Hooks\nDESCRIPTION: Setting up notification hooks for different deployment stages\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ms-teams.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'teams:notify');\nafter('deploy:success', 'teams:notify:success');\nafter('deploy:failed', 'teams:notify:failure');\n```\n\n----------------------------------------\n\nTITLE: Configuring Shared Files for Joomla Deployment\nDESCRIPTION: This snippet defines the shared files that should persist across deployments for a Joomla project. It overrides the default shared_files configuration from the shared recipe.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/joomla.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n['configuration.php']\n```\n\n----------------------------------------\n\nTITLE: Configuring Writable Directories for Yii2\nDESCRIPTION: Default configuration for writable directories in Yii2 deployment. These directories need write permissions during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/yii.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n['runtime']\n```\n\n----------------------------------------\n\nTITLE: Task with Host Selection Restriction\nDESCRIPTION: Example of restricting a task to run only on specific hosts using the select() method.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/selector.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\ntask('info', function () {\n    // ...\n})->select('type=web|db,env=prod');\n```\n\n----------------------------------------\n\nTITLE: Discord Notification Template\nDESCRIPTION: Default template for deployment notification messages using markdown formatting.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/discord.md#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n:&#8203;information_source: **{{user}}** is deploying branch `{{branch}}` to _{{where}}_\n```\n\n----------------------------------------\n\nTITLE: Importing PHP-FPM Recipe\nDESCRIPTION: Shows how to require the PHP-FPM recipe file in your deployment configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/php-fpm.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/php-fpm.php';\n```\n\n----------------------------------------\n\nTITLE: Retrieving LSB Release in PHP\nDESCRIPTION: This code snippet retrieves the LSB (Linux Standard Base) release name using the lsb_release command. It's used to determine the Ubuntu version for provisioning.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nreturn run(\"lsb_release -s -c\");\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP-FPM Version and Deployment Hook\nDESCRIPTION: Demonstrates setting the PHP-FPM version and adding a reload hook after deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/php-fpm.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nset('php_fpm_version', '8.0');\nafter('deploy', 'php-fpm:reload');\n```\n\n----------------------------------------\n\nTITLE: Configuring Raygun Notification After Deployment in PHP\nDESCRIPTION: This code demonstrates how to set up a hook to notify Raygun after a successful deployment. It uses the 'raygun:notify' task provided by the Raygun recipe.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/raygun.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy', 'raygun:notify');\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache with PHP.ini for Path Revalidation\nDESCRIPTION: PHP.ini configuration for Apache to enable path revalidation. This setting tells the Opcode cache to check if the file path has changed, which helps with symlinked deployments.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/avoid-php-fpm-reloading.md#2025-04-16_snippet_3\n\nLANGUAGE: ini\nCODE:\n```\nopcache.revalidate_path=1\n```\n\n----------------------------------------\n\nTITLE: Adding Discord Deploy Hook\nDESCRIPTION: Configures a pre-deployment hook to send Discord notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/discord.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'discord:notify');\n```\n\n----------------------------------------\n\nTITLE: Setting Slack Success Notification Text\nDESCRIPTION: Customizes the text template used when a deployment is successful.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nset('slack_success_text', 'Deploy to *{{where}}* successful');\n```\n\n----------------------------------------\n\nTITLE: Release or Current Path Resolution in PHP\nDESCRIPTION: Determines whether to use the release path or current path based on the existence of a release symlink.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/release.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$releaseExists = test('[ -h {{deploy_path}}/release ]');\nreturn $releaseExists ? get('release_path') : get('current_path');\n```\n\n----------------------------------------\n\nTITLE: Configuring Shared Directories for Yii2\nDESCRIPTION: Default configuration for shared directories in Yii2 deployment. These directories are shared between releases.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/yii.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n['runtime']\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for use_atomic_symlink in PHP Deployer\nDESCRIPTION: This snippet defines the default value for the 'use_atomic_symlink' configuration option. It checks if the 'mv' command supports the '--no-target-directory' option.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/symlink.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nreturn commandSupportsOption('mv', '--no-target-directory');\n```\n\n----------------------------------------\n\nTITLE: Requiring Setup Recipe in PHP for Deployer\nDESCRIPTION: This code snippet shows how to require the setup recipe in a Deployer configuration file. The setup recipe prepares the host for deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/setup.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/setup.php';\n```\n\n----------------------------------------\n\nTITLE: PHP-FPM Version Detection\nDESCRIPTION: Default implementation for automatically detecting PHP version using PHP_MAJOR_VERSION and PHP_MINOR_VERSION constants.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/php-fpm.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nreturn run('{{bin/php}} -r \"printf(\\'%d.%d\\', PHP_MAJOR_VERSION, PHP_MINOR_VERSION);\"');\n```\n\n----------------------------------------\n\nTITLE: Configuring Npm Task Execution in Deployer PHP Script\nDESCRIPTION: This snippet demonstrates how to configure Deployer to run the npm:install task after the deploy:update_code task. It's used to ensure npm packages are installed during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/npm.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:update_code', 'npm:install');\n```\n\n----------------------------------------\n\nTITLE: Including Rollbar Recipe in Deployer\nDESCRIPTION: Shows how to require the Rollbar recipe in your Deployer deployment script to enable Rollbar integration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rollbar.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/rollbar.php';\n```\n\n----------------------------------------\n\nTITLE: Loading WordPress Recipe in Deployer\nDESCRIPTION: Imports the WordPress-specific deployment recipe in Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/wordpress.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/wordpress.php';\n```\n\n----------------------------------------\n\nTITLE: Setting Default Provision User in PHP\nDESCRIPTION: This code snippet sets the default user for provisioning to 'root'.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'root'\n```\n\n----------------------------------------\n\nTITLE: Including Writable Recipe in PHP Deployer Script\nDESCRIPTION: This snippet shows how to include the writable recipe in a Deployer script. It's typically used at the beginning of a deployment configuration file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/writable.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/writable.php';\n```\n\n----------------------------------------\n\nTITLE: Default Deploy Message Template\nDESCRIPTION: Default message template for deployment notifications\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ms-teams.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n'_{{user}}_ deploying `{{what}}` to *{{where}}*'\n```\n\n----------------------------------------\n\nTITLE: Default Success Message Template\nDESCRIPTION: Default message template for successful deployments\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ms-teams.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to *{{where}}* successful'\n```\n\n----------------------------------------\n\nTITLE: Configuring Local Host for Magento 2 Artifact Build\nDESCRIPTION: Configuration to set a host as local for building Magento 2 artifacts. This can be done in the deploy.php file or in a YAML configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/magento2.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nlocalhost()\n    ->set('local', true);\n```\n\n----------------------------------------\n\nTITLE: Configuring Ntfy Notification Hooks\nDESCRIPTION: Registers notification events at different stages of the deployment process: before deployment starts, after successful deployment, and after failed deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'ntfy:notify');\nafter('deploy:success', 'ntfy:notify:success');\nafter('deploy:failed', 'ntfy:notify:failure');\n```\n\n----------------------------------------\n\nTITLE: Adding Telegram Notification for Failed Deployment (PHP)\nDESCRIPTION: This code adds a hook to notify Telegram when a deployment fails. It uses the 'telegram:notify:failure' task.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/telegram.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:failed', 'telegram:notify:failure');\n```\n\n----------------------------------------\n\nTITLE: Setting Default Telegram Notification Messages (PHP)\nDESCRIPTION: These snippets show the default message templates for different stages of deployment notifications in Telegram.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/telegram.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n'_{{user}}_ deploying `{{what}}` to *{{where}}*'\n```\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to *{{where}}* successful'\n```\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to *{{where}}* failed'\n```\n\n----------------------------------------\n\nTITLE: Including Cloudflare Recipe in Deployer\nDESCRIPTION: Code to include the Cloudflare recipe in your Deployer configuration file. This enables Cloudflare cache purging capabilities during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cloudflare.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/cloudflare.php';\n```\n\n----------------------------------------\n\nTITLE: Setting Default Timeout Configuration\nDESCRIPTION: Shows the default configuration for 'default_timeout' parameter which defines the timeout for run() and runLocally() functions in seconds.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/common.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n300\n```\n\n----------------------------------------\n\nTITLE: Including Environment Recipe in PHP Deployer\nDESCRIPTION: Shows how to require the environment configuration recipe in a Deployer configuration file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/env.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/env.php';\n```\n\n----------------------------------------\n\nTITLE: Setting Default Writable Mode in PHP Deployer Configuration\nDESCRIPTION: This snippet sets the default writable_mode configuration option to 'acl'. This determines how Deployer will make directories writable during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/writable.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'acl'\n```\n\n----------------------------------------\n\nTITLE: Configuring Cachetool Connection in PHP\nDESCRIPTION: Sets the Cachetool connection to a Unix socket or IP address for PHP-FPM. Multiple options are provided for different scenarios.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cachetool.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nset('cachetool', '/var/run/php-fpm.sock');\n// or\nset('cachetool', '127.0.0.1:9000');\n// or\nset('cachetool', ['/var/run/php-fpm.sock', '/var/run/php-fpm-other.sock']);\n```\n\n----------------------------------------\n\nTITLE: Writable Directories Configuration for Prestashop\nDESCRIPTION: Defines directories that need write permissions during deployment, including cache and upload directories.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/prestashop.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n[\n    'img',\n    'log',\n    'cache',\n    'download',\n    'upload',\n    'translations',\n    'mails',\n    'themes/default-bootstrap/lang',\n    'themes/default-bootstrap/mails',\n    'themes/default-bootstrap/pdf/lang',\n    'themes/default-bootstrap/cache',\n]\n```\n\n----------------------------------------\n\nTITLE: Including the Phinx Recipe in Deployer\nDESCRIPTION: Code to require the Phinx recipe file in your Deployer configuration. This is the first step to enable Phinx functionality in your deployment workflow.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/phinx.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/phinx.php';\n```\n\n----------------------------------------\n\nTITLE: Defining Shared Files for Magento\nDESCRIPTION: Configuration for shared files that should persist between deployments, specifically the local configuration file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/magento.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n['app/etc/local.xml']\n```\n\n----------------------------------------\n\nTITLE: Configuring Webpack Encore Deployment Tasks in PHP\nDESCRIPTION: Demonstrates how to set up deployment tasks for Webpack Encore using either Yarn or npm package managers.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/webpack_encore.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nFor Yarn\nafter('deploy:update_code', 'yarn:install');\nFor npm\nafter('deploy:update_code', 'npm:install');\nafter('deploy:update_code', 'webpack_encore:build');\n```\n\n----------------------------------------\n\nTITLE: Defining Writable Directories for Joomla Deployment\nDESCRIPTION: This snippet sets the directories that should be made writable during the Joomla deployment process. It overrides the default writable_dirs configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/joomla.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n['images']\n```\n\n----------------------------------------\n\nTITLE: Importing Webpack Encore Recipe in PHP\nDESCRIPTION: Imports the Webpack Encore recipe file for use in Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/webpack_encore.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/webpack_encore.php';\n```\n\n----------------------------------------\n\nTITLE: Registering Rollbar Notification After Deployment\nDESCRIPTION: Shows how to set up the Rollbar notification to occur after a successful deployment by registering it as an 'after' hook.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rollbar.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy', 'rollbar:notify');\n```\n\n----------------------------------------\n\nTITLE: Adding Slack Notification Hook Before Deployment\nDESCRIPTION: Configures Deployer to send a Slack notification before the deployment process begins.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'slack:notify');\n```\n\n----------------------------------------\n\nTITLE: Configuring Shared Directories for Magento\nDESCRIPTION: Default configuration for shared directories in Magento deployment. These directories persist across deployments.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/magento.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n['var', 'media']\n```\n\n----------------------------------------\n\nTITLE: Clearing APCu Cache After Deployment in PHP\nDESCRIPTION: Adds a hook to clear APCu cache after the new release symlink is created during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cachetool.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:symlink', 'cachetool:clear:apcu');\n```\n\n----------------------------------------\n\nTITLE: Default Title Configuration\nDESCRIPTION: Default implementation for extracting project title from git repository URL using regex pattern matching\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cimonitor.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$repo = get('repository');\n$pattern = '/\\w+\\/\\w+/';\nreturn preg_match($pattern, $repo, $titles) ? $titles[0] : $repo;\n```\n\n----------------------------------------\n\nTITLE: Setting Writable Directories for Magento\nDESCRIPTION: Configuration of directories that need write permissions during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/magento.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n['var', 'media']\n```\n\n----------------------------------------\n\nTITLE: Shared Files Configuration for Codeigniter 4\nDESCRIPTION: Defines the shared files that should persist between deployments for Codeigniter 4 applications, overriding the shared_files setting from shared.php recipe.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/codeigniter4.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n['.env']\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Binary Path\nDESCRIPTION: Default configuration for the PHP binary path. It checks if a specific PHP version is set for the host, otherwise uses the PHP in PATH.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/common.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nif (currentHost()->hasOwn('php_version')) {\nreturn '/usr/bin/php{{php_version}}';\n}\nreturn which('php');\n```\n\n----------------------------------------\n\nTITLE: Executing Magento 2 Artifact Build Command\nDESCRIPTION: Command to build a Magento 2 artifact locally using Deployer. This is the first step in the two-step artifact deployment process.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/magento2.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nbin/dep artifact:build [options] [localhost]\n```\n\n----------------------------------------\n\nTITLE: Setting Slack Failure Notification Text\nDESCRIPTION: Customizes the text template used when a deployment fails.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nset('slack_failure_text', 'Deploy to *{{where}}* failed');\n```\n\n----------------------------------------\n\nTITLE: Shared Directories Configuration for Prestashop\nDESCRIPTION: Specifies directories that should be shared between deployments, including media, logs, and theme-related directories.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/prestashop.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n[\n    'img',\n    'log',\n    'download',\n    'upload',\n    'translations',\n    'mails',\n    'themes/default-bootstrap/lang',\n    'themes/default-bootstrap/mails',\n    'themes/default-bootstrap/pdf/lang',\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Cachetool Web Adapter in PHP\nDESCRIPTION: Sets up Cachetool to use a web adapter for cases where the deployment user lacks direct access to PHP-FPM socket.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cachetool.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nset('cachetool_args', '--web --web-path=./public --web-url=https://{{hostname}}');\n```\n\n----------------------------------------\n\nTITLE: Default Environment Example File Configuration\nDESCRIPTION: Defines the default filename for the environment example file used in deployment configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/env.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'.env.example'\n```\n\n----------------------------------------\n\nTITLE: Shared Files Configuration for WordPress\nDESCRIPTION: Defines the shared files that persist between deployments, specifically wp-config.php.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/wordpress.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n['wp-config.php']\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Chmod Mode in PHP Deployer\nDESCRIPTION: This snippet sets the default chmod mode to '0755' for the writable_chmod_mode configuration. This determines the permissions that will be set when using the chmod writable mode.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/writable.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n'0755'\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Slack Failure Color\nDESCRIPTION: Shows the default color for Slack message attachments when deployment fails.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_18\n\nLANGUAGE: php\nCODE:\n```\n'#ff0909'\n```\n\n----------------------------------------\n\nTITLE: Setting Default Node.js Version in PHP\nDESCRIPTION: This snippet defines the default Node.js version to be used in the provisioning process. It's set as a PHP variable, likely used as a configuration option in the Deployer script.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision/nodejs.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'23.x'\n```\n\n----------------------------------------\n\nTITLE: Specifying Writable Directories for Craftcms Deployment\nDESCRIPTION: Defines the directories that should be made writable during a Craftcms deployment. This overrides the default writable_dirs configuration from the common recipe.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/craftcms.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n[\n    'config/project',\n    'storage',\n    'web/assets',\n    'web/cpresources',\n]\n```\n\n----------------------------------------\n\nTITLE: Caching Dynamic Configurations in Deployer\nDESCRIPTION: Illustrates how dynamic configurations in Deployer are cached after the first use, using a date example.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\nset('current_date', function () {\n    return run('date');\n});\n\ntask('my_task', function () {\n    writeln('What time is it? {{current_date}}');\n    run('sleep 5');\n    writeln('What time is it? {{current_date}}');\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Up RabbitMQ Deployment Hook\nDESCRIPTION: Configuration to execute the RabbitMQ notification task before deployment completion.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rabbit.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy:end', 'deploy:rabbit');\n```\n\n----------------------------------------\n\nTITLE: Log Files Pattern Configuration for Codeigniter 4\nDESCRIPTION: Defines the pattern for log files in Codeigniter 4 applications, used for log management during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/codeigniter4.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n'writable/logs/*.log'\n```\n\n----------------------------------------\n\nTITLE: Notification Hooks Setup\nDESCRIPTION: Configuration for different deployment notification stages - start, success, and failure\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/mattermost.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'mattermost:notify');\n```\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:success', 'mattermost:notify:success');\n```\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:failed', 'mattermost:notify:failure');\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Yarn Binary Path\nDESCRIPTION: Shows the default implementation for detecting the Yarn binary path using the 'which' function if not explicitly configured.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/yarn.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nreturn which('yarn');\n```\n\n----------------------------------------\n\nTITLE: Shared Files Configuration for Prestashop\nDESCRIPTION: Defines the list of files that should be shared between releases during deployment, including settings file and .htaccess.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/prestashop.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n[\n    'config/settings.inc.php',\n    '.htaccess',\n]\n```\n\n----------------------------------------\n\nTITLE: Environment File Configuration for cPanel\nDESCRIPTION: Example of an .env file configuration that stores credentials and settings for cPanel integration. This keeps sensitive information out of the deployment script.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cpanel.md#2025-04-16_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nCPANEL_HOST=xxx.xxx.xxx.xxx\nCPANEL_PORT=2087\nCPANEL_USERNAME=root\nCPANEL_TOKEN=xxxx\nCPANEL_USER=xxx\nCPANEL_AUTH_TYPE=hash\nCPANEL_DB_USER=db_user\nCPANEL_DB_PRIVILEGES=\"ALL PRIVILEGES\"\nSUDOMAIN_SUFFIX=.mymaindomain.com\n```\n\n----------------------------------------\n\nTITLE: Defining Writable Directories for Drupal 7\nDESCRIPTION: Configures directories that need write permissions during deployment\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/drupal7.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n[\n    'sites/{{drupal_site}}/files',\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Shared Directories for Drupal 7\nDESCRIPTION: Defines shared directories that persist between deployments\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/drupal7.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n[\n    'sites/{{drupal_site}}/files',\n]\n```\n\n----------------------------------------\n\nTITLE: Setting Shared Files for Drupal 7\nDESCRIPTION: Specifies files that should be shared across deployments\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/drupal7.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n[\n    'sites/{{drupal_site}}/settings.php',\n]\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Codeigniter Writable Directories\nDESCRIPTION: Specifies the directories that should be made writable during deployment of a Codeigniter application. By default, these are the cache and logs directories.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/codeigniter.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n['application/cache', 'application/logs']\n```\n\n----------------------------------------\n\nTITLE: Public Path Configuration Setting\nDESCRIPTION: Prompts for public path configuration with 'public' as default value. Defines the public directory for the website.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision/website.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nreturn ask(' Public path: ', 'public');\n```\n\n----------------------------------------\n\nTITLE: Including Copy Dirs Recipe in PHP Deployer\nDESCRIPTION: This snippet shows how to include the Copy Dirs recipe in a Deployer configuration file. It allows the use of directory copying functionality during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/copy_dirs.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/copy_dirs.php';\n```\n\n----------------------------------------\n\nTITLE: Adding Yammer Notification Hook in Deployer PHP\nDESCRIPTION: This snippet demonstrates how to add a hook to notify Yammer before deployment starts.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/yammer.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'yammer:notify');\n```\n\n----------------------------------------\n\nTITLE: Including RocketChat Recipe in PHP Deployer\nDESCRIPTION: Imports the RocketChat notification functionality into the deployment script.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/rocketchat.php';\n```\n\n----------------------------------------\n\nTITLE: Adding Yammer Failure Notification in Deployer PHP\nDESCRIPTION: This snippet demonstrates how to add a hook for notifying Yammer about deployment failure.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/yammer.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:failed', 'yammer:notify:failure');\n```\n\n----------------------------------------\n\nTITLE: Default RocketChat Title Configuration\nDESCRIPTION: Sets the default title for RocketChat notifications using the application name or 'Project' as fallback.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nreturn get('application', 'Project');\n```\n\n----------------------------------------\n\nTITLE: Setting Task Description using Method Chaining in PHP\nDESCRIPTION: Illustrates how to set a task's description using method chaining with the 'desc' method.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/tasks.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\ntask('deploy', function () {\n    // ...\n})->desc('Task description');\n```\n\n----------------------------------------\n\nTITLE: Setting Cleanup Sudo Configuration in PHP Deployer\nDESCRIPTION: Default configuration value for cleanup_use_sudo option which determines whether sudo should be used for cleanup operations.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/cleanup.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nfalse\n```\n\n----------------------------------------\n\nTITLE: Writable Directories Configuration for Codeigniter 4\nDESCRIPTION: Defines the directories that should be writable by the web server for Codeigniter 4 applications, overriding the writable_dirs setting from writable.php recipe.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/codeigniter4.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n[\n    'writable/cache',\n    'writable/debugbar',\n    'writable/logs',\n    'writable/session',\n    'writable/uploads',\n]\n```\n\n----------------------------------------\n\nTITLE: Default Public Path Configuration for Codeigniter 4\nDESCRIPTION: Defines the default public directory path for Codeigniter 4 applications, overriding the public_path setting from website.php recipe.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/codeigniter4.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'public'\n```\n\n----------------------------------------\n\nTITLE: Configuring FuelPHP Shared Directories\nDESCRIPTION: Defines the default shared directories for FuelPHP 1.x applications that persist across deployments. Includes cache and logs directories.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/fuelphp.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n[\n    'fuel/app/cache', 'fuel/app/logs',\n]\n```\n\n----------------------------------------\n\nTITLE: Default Sudo Password Prompt Implementation\nDESCRIPTION: Implementation of the sudo_password configuration that prompts for sudo password using hidden response.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision/user.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nreturn askHiddenResponse(' Password for sudo: ');\n```\n\n----------------------------------------\n\nTITLE: Shared Directories Configuration for Codeigniter 4\nDESCRIPTION: Defines the shared directories that should persist between deployments for Codeigniter 4 applications, overriding the shared_dirs setting from shared.php recipe.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/codeigniter4.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n['writable']\n```\n\n----------------------------------------\n\nTITLE: Running Deployer Task with Cached Dynamic Configurations\nDESCRIPTION: Shows the output of a Deployer task demonstrating that dynamic configurations are cached after first use.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\n$ dep my_task deployer.org -v\ntask my_task\n[deployer.org] run date\n[deployer.org] Wed 03 Nov 2021 01:16:53 PM UTC\n[deployer.org] What time is it? Wed 03 Nov 2021 01:16:53 PM UTC\n[deployer.org] run sleep 5\n[deployer.org] What time is it? Wed 03 Nov 2021 01:16:53 PM UTC\n```\n\n----------------------------------------\n\nTITLE: RocketChat Default Message Text\nDESCRIPTION: Sets the default message template for deployment notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n'_{{user}}_ deploying `{{what}}` to *{{where}}*'\n```\n\n----------------------------------------\n\nTITLE: RocketChat Success Message Text\nDESCRIPTION: Sets the message template for successful deployment notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to *{{where}}* successful'\n```\n\n----------------------------------------\n\nTITLE: TYPO3 WebRoot Configuration in PHP\nDESCRIPTION: Default configuration for TYPO3's web root directory\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/typo3.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'Web'\n```\n\n----------------------------------------\n\nTITLE: Default Branch Configuration in PHP Deployer\nDESCRIPTION: Sets the default branch value for deployment. Uses 'HEAD' as the default value if not specified.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/update_code.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'HEAD'\n```\n\n----------------------------------------\n\nTITLE: TYPO3 Shared Files Configuration in PHP\nDESCRIPTION: Configuration of shared files that persist across deployments, specifically the .htaccess file\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/typo3.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n[\n    '{{typo3_webroot}}/.htaccess',\n]\n```\n\n----------------------------------------\n\nTITLE: Adding Telegram Notification Hook Before Deployment (PHP)\nDESCRIPTION: This code adds a hook to notify Telegram before the deployment process begins. It uses the 'telegram:notify' task.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/telegram.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'telegram:notify');\n```\n\n----------------------------------------\n\nTITLE: Determining Statamic Version\nDESCRIPTION: PHP code to detect the installed Statamic version by running the please command and extracting version number using regex.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/statamic.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$result = run('{{bin/php}} {{release_or_current_path}}/please --version');\npreg_match_all('/(\\d+\\.?)+/', $result, $matches);\nreturn $matches[0][0] ?? 'unknown';\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Notification Flow\nDESCRIPTION: Example code showing how to configure hooks for deployment start notification. This registers the notification task to run before deployment begins.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/chatwork.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'chatwork:notify');\n```\n\n----------------------------------------\n\nTITLE: Default Failure Message Template\nDESCRIPTION: Default message template for failed deployments\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ms-teams.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to *{{where}}* failed'\n```\n\n----------------------------------------\n\nTITLE: RocketChat Failure Message Text\nDESCRIPTION: Sets the message template for failed deployment notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to *{{where}}* failed'\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Start Notification\nDESCRIPTION: Sends a notification to Google Hangouts Chat when deployment begins.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hangouts.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'chat:notify');\n```\n\n----------------------------------------\n\nTITLE: Including Yii Recipe in PHP Deployer\nDESCRIPTION: Basic include statement to load the Yii deployment recipe in Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/yii.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/yii.php';\n```\n\n----------------------------------------\n\nTITLE: TYPO3 Shared Directories Configuration in PHP\nDESCRIPTION: Configuration of shared directories that persist across deployments including fileadmin, typo3temp, and uploads directories\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/typo3.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n[\n    '{{typo3_webroot}}/fileadmin',\n    '{{typo3_webroot}}/typo3temp',\n    '{{typo3_webroot}}/uploads',\n]\n```\n\n----------------------------------------\n\nTITLE: Setting Default Database User in PHP Deployer\nDESCRIPTION: This code defines the default value for the db_user configuration. It prompts the user for input with a default value of 'deployer'.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision/databases.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nreturn ask(' DB user: ', 'deployer');\n```\n\n----------------------------------------\n\nTITLE: Configuring Rollbar Default Comment Format\nDESCRIPTION: The default template format for deployment comments sent to Rollbar. Uses variables like {{user}}, {{what}}, and {{where}} which are populated during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rollbar.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nset('rollbar_comment', '_{{user}}_ deploying `{{what}}` to *{{where}}*');\n```\n\n----------------------------------------\n\nTITLE: Configuring Slack Attachment Fields\nDESCRIPTION: Sets attachment fields for more detailed and formatted output in Slack notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nset('slack_fields', []);\n```\n\n----------------------------------------\n\nTITLE: Shared Directories Configuration - PHP\nDESCRIPTION: Defines shared directories for Spiral deployment that persist across releases\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/spiral.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n['runtime']\n```\n\n----------------------------------------\n\nTITLE: Configuring Log Files for Craftcms Deployment\nDESCRIPTION: Defines the default log files pattern for Craftcms deployments. This configuration helps in managing and accessing log files during and after deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/craftcms.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'storage/logs/*.log'\n```\n\n----------------------------------------\n\nTITLE: Setting Ntfy Message Tags\nDESCRIPTION: Configures emoji tags for the notification messages.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nset('ntfy_tags', `information_source`);\n```\n\n----------------------------------------\n\nTITLE: Configuring Successful Deployment Notification\nDESCRIPTION: Sends a notification to Google Hangouts Chat when deployment completes successfully.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hangouts.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:success', 'chat:notify:success');\n```\n\n----------------------------------------\n\nTITLE: Configuring Failed Deployment Notification\nDESCRIPTION: Sends a notification to Google Hangouts Chat when deployment fails.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hangouts.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:failed', 'chat:notify:failure');\n```\n\n----------------------------------------\n\nTITLE: Including Silverstripe Recipe in Deployer\nDESCRIPTION: Basic require statement to include the Silverstripe recipe in your Deployer configuration\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/silverstripe.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/silverstripe.php';\n```\n\n----------------------------------------\n\nTITLE: Setting Database Password in PHP Deployer\nDESCRIPTION: This code defines how the db_password configuration is set. It uses askHiddenResponse to securely prompt for the database password.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision/databases.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nreturn askHiddenResponse(' DB password: ');\n```\n\n----------------------------------------\n\nTITLE: Defining Shopware Build Task Group in PHP\nDESCRIPTION: This code snippet defines a group task 'sw-build-without-db' for Shopware deployments. It includes two subtasks: 'sw-build-without-db:get-remote-config' and 'sw-build-without-db:build'. These tasks are likely defined elsewhere in the deployment script.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/shopware.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n### sw-build-without-db {#sw-build-without-db}\n```\n\n----------------------------------------\n\nTITLE: Default Virtual Host Configuration for ISPManager\nDESCRIPTION: Default settings for virtual host configuration in ISPManager, including domain name, PHP settings, directory indexes, and logging options.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ispmanager.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n[\n    'name' => '{{domain}}',\n    'php_enable' => 'on',\n    'aliases' => 'www.{{domain}}',\n    'home' => 'www/{{domain}}',\n    'owner' => get('ispmanager_owner'),\n    'email' => 'webmaster@{{domain}}',\n    'charset' => 'off',\n    'dirindex' => 'index.php uploaded.html',\n    'ssi' => 'on',\n    'php' => 'on',\n    'php_mode' => 'php_mode_mod',\n    'basedir' => 'on',\n    'php_apache_version' => 'native',\n    'cgi' => 'off',\n    'log_access' => 'on',\n    'log_error' => 'on',\n]\n```\n\n----------------------------------------\n\nTITLE: Adding Telegram Notification for Successful Deployment (PHP)\nDESCRIPTION: This snippet adds a hook to notify Telegram after a successful deployment. It uses the 'telegram:notify:success' task.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/telegram.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:success', 'telegram:notify:success');\n```\n\n----------------------------------------\n\nTITLE: Configuring Symlink Relative Option\nDESCRIPTION: Default configuration for whether to use the --relative option with symlinks. It automatically detects if the ln command supports this option.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/common.md#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nreturn commandSupportsOption('ln', '--relative');\n```\n\n----------------------------------------\n\nTITLE: Setting Up Fish Autocomplete for Deployer\nDESCRIPTION: Command to generate and set up Fish shell autocomplete for Deployer commands.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ndep completion fish > ~/.config/fish/completions/deployer.fish\n```\n\n----------------------------------------\n\nTITLE: Default Chatwork Notification Template\nDESCRIPTION: Default template for the notification message sent when deployment begins. Includes repository, branch, server, and path information.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/chatwork.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n\"[info]\\n[title](*) Deployment Status: Deploying[/title]\\nRepo: {{repository}}\\nBranch: {{branch}}\\nServer: {{hostname}}\\nRelease Path: {{release_path}}\\nCurrent Path: {{current_path}}\\n[/info]\"\n```\n\n----------------------------------------\n\nTITLE: Default Chatwork Failure Notification Template\nDESCRIPTION: Default template for the failure message sent when deployment fails. Includes repository, branch, server, and path information.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/chatwork.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n\"[info]\\n[title](*) Deployment Status: Failed[/title]\\nRepo: {{repository}}\\nBranch: {{branch}}\\nServer: {{hostname}}\\nRelease Path: {{release_path}}\\nCurrent Path: {{current_path}}\\n[/info]\"\n```\n\n----------------------------------------\n\nTITLE: Setting Ntfy Server Configuration\nDESCRIPTION: Configures the Ntfy server URL to send notifications to.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nset('ntfy_server', 'ntfy.sh');\n```\n\n----------------------------------------\n\nTITLE: Default Shared Files Configuration for CakePHP\nDESCRIPTION: This configuration defines the default shared files for CakePHP 4 projects. Shared files persist between deployments and are symbolically linked to each release, typically including environment and configuration files.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/cakephp.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n[\n    'config/.env',\n    'config/app.php',\n]\n```\n\n----------------------------------------\n\nTITLE: Discord Success Text Configuration\nDESCRIPTION: Defines the structure for successful deployment messages.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/discord.md#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nreturn [\n'text' => parse(':&#8203;white_check_mark: Branch `{{what}}` deployed to _{{where}}_ successfully'),\n];\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Slack Success Text\nDESCRIPTION: Shows the default configuration for the Slack notification text when deployment is successful.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to *{{where}}* successful'\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Slack Text\nDESCRIPTION: Shows the default configuration for the Slack notification text, which includes the user, what is being deployed, and where.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n'_{{user}}_ deploying `{{what}}` to *{{where}}*'\n```\n\n----------------------------------------\n\nTITLE: Default ISPManager API Configuration\nDESCRIPTION: Default configuration for the ISPManager API connection and operation settings, including API connection parameters and placeholders for various domain and database operations.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ispmanager.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n[\n    'api' => [\n        'dsn' => 'https://root:password@localhost:1500/ispmgr',\n        'secure' => true,\n    ],\n    'createDomain' => null,\n    'updateDomain' => null,\n    'deleteDomain' => null,\n    'createDatabase' => null,\n    'deleteDatabase' => null,\n    'phpSelect' => null,\n    'createAlias' => null,\n    'deleteAlias' => null,\n]\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Slack Channel\nDESCRIPTION: Shows the default configuration for the Slack channel. When set to false, the default channel associated with the webhook will be used.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nfalse\n```\n\n----------------------------------------\n\nTITLE: Setting Task Description using Helper Function in PHP\nDESCRIPTION: Shows an alternative way to set a task's description using the 'desc' helper function before defining the task.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/tasks.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\ndesc('Task description');\ntask('deploy', function () {\n    // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Reloading Bash Configuration\nDESCRIPTION: Command to reload the Bash shell configuration after updating the PATH.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nsource ~/.bashrc\n```\n\n----------------------------------------\n\nTITLE: Installing CIMonitor Recipe\nDESCRIPTION: Required include statement to load the CIMonitor recipe file\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cimonitor.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/cimonitor.php';\n```\n\n----------------------------------------\n\nTITLE: Configuring Supervisord-monitor with Array Syntax in PHP\nDESCRIPTION: Configuration example using array syntax to set up Supervisord-monitor parameters including URI, authentication credentials, and process name.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/supervisord-monitor.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nset('supervisord', [\n    'uri' => 'https://youruri.xyz/supervisor',\n    'basic_auth_user' => 'username',\n    'basic_auth_password' => 'password',\n    'process_name' => 'process01',\n]);\n```\n\n----------------------------------------\n\nTITLE: Configuring Flow Context in PHP\nDESCRIPTION: Sets the default Flow Framework application context for deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/flow_framework.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'Production'\n```\n\n----------------------------------------\n\nTITLE: Discord Webhook Configuration\nDESCRIPTION: Defines the Discord webhook URL structure using channel and token placeholders.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/discord.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nreturn 'https://discordapp.com/api/webhooks/{{discord_channel}}/{{discord_token}}/slack';\n```\n\n----------------------------------------\n\nTITLE: Workplace Success Notification Configuration\nDESCRIPTION: Setting the success message template for successful deployments.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/workplace.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nset('workplace_success_text', 'Deploy to *{{where}}* successful');\n```\n\n----------------------------------------\n\nTITLE: PHP-FPM Service Name Configuration\nDESCRIPTION: Default configuration for the PHP-FPM service name using the specified PHP version.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/php-fpm.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n'php{{php_fpm_version}}-fpm'\n```\n\n----------------------------------------\n\nTITLE: Configuring Flow Command in PHP\nDESCRIPTION: Defines the CLI command for Flow Framework operations during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/flow_framework.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'flow'\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Slack Success Color\nDESCRIPTION: Shows the default color for Slack message attachments when deployment is successful.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n'#00c100'\n```\n\n----------------------------------------\n\nTITLE: Adding Chatwork Notification Hook Before Deployment\nDESCRIPTION: Code to register a pre-deployment hook that sends a notification to Chatwork before the deployment process begins.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/chatwork.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'chatwork:notify');\n```\n\n----------------------------------------\n\nTITLE: Success Color Configuration\nDESCRIPTION: Default color hex code for success notifications\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ms-teams.md#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n'#00c100'\n```\n\n----------------------------------------\n\nTITLE: Default Value for Ntfy Title Configuration\nDESCRIPTION: Shows the default title template which uses the application name or 'Project' if not set.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\nreturn get('application', 'Project');\n```\n\n----------------------------------------\n\nTITLE: Configuring Telegram API URL in Deployer (PHP)\nDESCRIPTION: This code sets up the Telegram API URL using the configured token. It's used internally by the Telegram notification tasks.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/telegram.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nreturn 'https://api.telegram.org/bot' . get('telegram_token') . '/sendmessage';\n```\n\n----------------------------------------\n\nTITLE: Setting Shared Directories for Joomla Deployment\nDESCRIPTION: This configuration specifies the shared directories that should be symlinked between releases in a Joomla deployment. It overrides the default shared_dirs setting.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/joomla.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n['images']\n```\n\n----------------------------------------\n\nTITLE: Workplace Failure Notification Configuration\nDESCRIPTION: Setting the failure message template for failed deployments.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/workplace.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nset('workplace_failure_text', 'Deploy to *{{where}}* failed');\n```\n\n----------------------------------------\n\nTITLE: Setting Default Webpack Encore Environment in PHP\nDESCRIPTION: Defines the default environment for Webpack Encore as 'production'.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/webpack_encore.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'production'\n```\n\n----------------------------------------\n\nTITLE: Default Rollbar Comment Value\nDESCRIPTION: Shows the default template for rollbar_comment configuration with markdown formatting for user, deployment package, and target environment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rollbar.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n'_{{user}}_ deploying `{{what}}` to *{{where}}*'\n```\n\n----------------------------------------\n\nTITLE: Default Value for Ntfy Success Text Configuration\nDESCRIPTION: Shows the default template text for successful deployment notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_18\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to *{{where}}* successful'\n```\n\n----------------------------------------\n\nTITLE: Discord Notify Text Configuration\nDESCRIPTION: Defines the structure for deployment notification messages.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/discord.md#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nreturn [\n'text' => parse(':&#8203;information_source: **{{user}}** is deploying branch `{{what}}` to _{{where}}_'),\n];\n```\n\n----------------------------------------\n\nTITLE: Accessing Remote Environment Variables\nDESCRIPTION: Retrieves remote environment variables as an array. Allows accessing and modifying remote environment settings.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\nremoteEnv(): array\n```\n\nLANGUAGE: php\nCODE:\n```\n$remotePath = remoteEnv()['PATH'];\nrun('echo $PATH', env: ['PATH' => \"/home/user/bin:$remotePath\"]);\n```\n\n----------------------------------------\n\nTITLE: Including Info Recipe in Deployer\nDESCRIPTION: Shows how to include the Info Recipe in your Deployer configuration to enable the deploy:info task and related functionality.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/info.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/info.php';\n```\n\n----------------------------------------\n\nTITLE: Workplace Post Edit Configuration\nDESCRIPTION: Configuration to determine whether to create new posts or edit existing ones for deployment updates.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/workplace.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nset('workplace_edit_post', false);\n```\n\n----------------------------------------\n\nTITLE: Setting Default Telegram Title in Deployer Configuration (PHP)\nDESCRIPTION: This snippet shows the default configuration for the Telegram notification title. It uses the 'application' setting or defaults to 'Project'.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/telegram.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nreturn get('application', 'Project');\n```\n\n----------------------------------------\n\nTITLE: Configuring Supervisord-monitor with Individual Properties in PHP\nDESCRIPTION: Alternative configuration example setting individual properties for Supervisord-monitor instead of using an array syntax.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/supervisord-monitor.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nset('supervisord_uri', 'https://youruri.xyz/supervisor');\nset('supervisord_basic_auth_user', 'username');\nset('supervisord_basic_auth_password', 'password');\nset('supervisord_process_name', 'process01');\n```\n\n----------------------------------------\n\nTITLE: Default Value for Ntfy Server Configuration\nDESCRIPTION: Shows the default server URL used for Ntfy notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n'ntfy.sh'\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Slack Failure Text\nDESCRIPTION: Shows the default configuration for the Slack notification text when deployment fails.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to *{{where}}* failed'\n```\n\n----------------------------------------\n\nTITLE: Retrieving Output Interface\nDESCRIPTION: Function to get the output interface instance\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\noutput(): OutputInterface\n```\n\n----------------------------------------\n\nTITLE: Failure Notification Hook\nDESCRIPTION: Adds a deployment failure notification hook.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/discord.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:failed', 'discord:notify:failure');\n```\n\n----------------------------------------\n\nTITLE: Including Lock Recipe in Deployer\nDESCRIPTION: Shows how to require the lock recipe file in your Deployer configuration to enable lock-related deployment tasks.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/lock.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/lock.php';\n```\n\n----------------------------------------\n\nTITLE: Including FuelPHP Recipe in Deployer\nDESCRIPTION: Imports the FuelPHP-specific deployment recipe into Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/fuelphp.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/fuelphp.php';\n```\n\n----------------------------------------\n\nTITLE: Including Telegram Recipe in Deployer Configuration (PHP)\nDESCRIPTION: This snippet shows how to include the Telegram recipe in your Deployer configuration file. It requires the contrib/telegram.php file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/telegram.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/telegram.php';\n```\n\n----------------------------------------\n\nTITLE: Defining Shared Directories\nDESCRIPTION: Configuration array specifying shared directories for Silverstripe deployment\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/silverstripe.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n[\n    '{{shared_assets}}',\n]\n```\n\n----------------------------------------\n\nTITLE: Setting Ntfy Success Text\nDESCRIPTION: Configures the template for success notification messages.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nset('ntfy_success_text', 'Deploy to *{{where}}* successful');\n```\n\n----------------------------------------\n\nTITLE: Domain Configuration Setting\nDESCRIPTION: Prompts for domain configuration with hostname as default value. Used to set up the website domain during provisioning.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision/website.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nreturn ask(' Domain: ', get('hostname'));\n```\n\n----------------------------------------\n\nTITLE: Default Value for Ntfy Failure Text Configuration\nDESCRIPTION: Shows the default template text for failed deployment notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_19\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to *{{where}}* failed'\n```\n\n----------------------------------------\n\nTITLE: Alternative Namespace Declaration for PHP <5.6 in Deployer 4.x\nDESCRIPTION: Alternative approach for importing Deployer functions in PHP versions earlier than 5.6, using namespace declaration instead of use function.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/UPGRADE.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nnamespace Deployer;\n```\n\n----------------------------------------\n\nTITLE: Including Discord Recipe in PHP Deployer\nDESCRIPTION: Imports the Discord notification functionality into the deployment script.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/discord.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/discord.php';\n```\n\n----------------------------------------\n\nTITLE: Clear Paths Default Configuration - PHP\nDESCRIPTION: Default configuration value for clear_use_sudo setting which determines if sudo should be used for the clear_paths task.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/clear_paths.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nfalse\n```\n\n----------------------------------------\n\nTITLE: Including Statamic Recipe\nDESCRIPTION: Basic require statement to include the Statamic deployment recipe in Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/statamic.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/statamic.php';\n```\n\n----------------------------------------\n\nTITLE: Importing Newrelic Recipe in PHP Deployer\nDESCRIPTION: Code to include the Newrelic Recipe in your Deployer configuration. This enables the New Relic notification functionality.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/newrelic.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/newrelic.php';\n```\n\n----------------------------------------\n\nTITLE: Setting Ntfy Failure Text\nDESCRIPTION: Configures the template for failure notification messages.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nset('ntfy_failure_text', 'Deploy to *{{where}}* failed');\n```\n\n----------------------------------------\n\nTITLE: Default ISPManager Document Root Configuration\nDESCRIPTION: Default document root path configuration based on the ISPManager owner.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ispmanager.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'/var/www/' . get('ispmanager_owner') . '/data/'\n```\n\n----------------------------------------\n\nTITLE: Discord Success Template\nDESCRIPTION: Default template for successful deployment notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/discord.md#2025-04-16_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n:&#8203;white_check_mark: Branch `{{branch}}` deployed to _{{where}}_ successfully\n```\n\n----------------------------------------\n\nTITLE: RocketChat Failure Color Configuration\nDESCRIPTION: Sets the color for failed deployment notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n'#ff0909'\n```\n\n----------------------------------------\n\nTITLE: Setting Host Labels in Deployer 7.x\nDESCRIPTION: Example of how to set labels for hosts in Deployer 7.x, replacing the previous stage concept with a labels-based approach.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/UPGRADE.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhost('deployer.org')\n    ->set('labels', ['stage' => 'prod']);\n```\n\n----------------------------------------\n\nTITLE: Including the cPanel Recipe in Deployer\nDESCRIPTION: This snippet shows how to require the cPanel recipe in your Deployer configuration file to enable cPanel functionality.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cpanel.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/cpanel.php';\n```\n\n----------------------------------------\n\nTITLE: Requiring the Hangouts Recipe in Deployer\nDESCRIPTION: Imports the Hangouts notification functionality into your Deployer configuration file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hangouts.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/hangouts.php';\n```\n\n----------------------------------------\n\nTITLE: Customizing Slack Notification Text\nDESCRIPTION: Sets a custom notification message template that supports markdown formatting for Slack notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nset('slack_text', '_{{user}}_ deploying `{{what}}` to *{{where}}*');\n```\n\n----------------------------------------\n\nTITLE: Discord Failure Template\nDESCRIPTION: Default template for failed deployment notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/discord.md#2025-04-16_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n:&#8203;no_entry_sign: Branch `{{branch}}` has failed to deploy to _{{where}}_\n```\n\n----------------------------------------\n\nTITLE: Default ISPManager Databases Configuration\nDESCRIPTION: Default structure for storing ISPManager database information including servers, hosts, and database lists.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ispmanager.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n[\n    'servers' => [],\n    'hosts' => [],\n    'dblist' => [],\n]\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Chatwork API Endpoint\nDESCRIPTION: Default PHP function that constructs the Chatwork API endpoint URL using the configured room ID. This defines where notification messages will be sent.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/chatwork.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nreturn 'https://api.chatwork.com/v2/rooms/' . get('chatwork_room_id') . '/messages';\n```\n\n----------------------------------------\n\nTITLE: RocketChat Success Color Configuration\nDESCRIPTION: Sets the color for successful deployment notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n'#00c100'\n```\n\n----------------------------------------\n\nTITLE: Configuring Writable Directories\nDESCRIPTION: Configuration array specifying writable directories for Silverstripe deployment\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/silverstripe.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n[\n    '{{shared_assets}}',\n]\n```\n\n----------------------------------------\n\nTITLE: Including Workplace Recipe in PHP Deployer\nDESCRIPTION: Initial require statement to include the Workplace recipe functionality in your deployment configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/workplace.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/workplace.php';\n```\n\n----------------------------------------\n\nTITLE: CIMonitor Status Configurations\nDESCRIPTION: Default values for various CIMonitor status and job state configurations\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cimonitor.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n'info'\n'warning'\n'error'\n'success'\nget('cimonitor_status_info')\n'pending'\n'running'\nget('cimonitor_status_warning')\nget('cimonitor_status_error')\nget('cimonitor_status_success')\n```\n\n----------------------------------------\n\nTITLE: Default Chatwork Success Notification Template\nDESCRIPTION: Default template for the success message sent after a successful deployment. Includes repository, branch, server, and path information.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/chatwork.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n\"[info]\\n[title](*) Deployment Status: Successfully[/title]\\nRepo: {{repository}}\\nBranch: {{branch}}\\nServer: {{hostname}}\\nRelease Path: {{release_path}}\\nCurrent Path: {{current_path}}\\n[/info]\"\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Hipchat Notification Source\nDESCRIPTION: Sets the default sender name for Hipchat notifications to the deployment target name ({{where}}).\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hipchat.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n'{{where}}'\n```\n\n----------------------------------------\n\nTITLE: RocketChat Default Color Configuration\nDESCRIPTION: Sets the default color for RocketChat message attachments.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n'#000000'\n```\n\n----------------------------------------\n\nTITLE: Including Mattermost Recipe\nDESCRIPTION: Includes the Mattermost recipe file for Deployer integration\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/mattermost.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/mattermost.php';\n```\n\n----------------------------------------\n\nTITLE: Limiting Parallel Execution in Deployer\nDESCRIPTION: Demonstrates how to limit the parallel execution of tasks to one host at a time using the --limit option.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/basics.md#2025-04-16_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n$ dep my_task -v all --limit 1\ntask my_task\n[deployer.org] run whoami\n[deployer.org] deployer\n[medv.io] run whoami\n[medv.io] deployer\n```\n\n----------------------------------------\n\nTITLE: Installing RabbitMQ Recipe\nDESCRIPTION: Installation step for adding RabbitMQ recipe to your deploy.php configuration file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rabbit.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/rabbit.php';\n```\n\n----------------------------------------\n\nTITLE: Default User Configuration\nDESCRIPTION: Default implementation for getting user information from git config\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cimonitor.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nreturn [\n'name' => runLocally('git config --get user.name'),\n'email' => runLocally('git config --get user.email'),\n];\n```\n\n----------------------------------------\n\nTITLE: Adding Notification for Successful Deployment\nDESCRIPTION: Configures Deployer to send a notification to Slack when deployment completes successfully.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:success', 'slack:notify:success');\n```\n\n----------------------------------------\n\nTITLE: Discord Message Configuration\nDESCRIPTION: Default message configuration setting.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/discord.md#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n'discord_notify_text'\n```\n\n----------------------------------------\n\nTITLE: RocketChat Default Icon URL\nDESCRIPTION: Sets the default icon URL configuration to null.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nnull\n```\n\n----------------------------------------\n\nTITLE: Setting Ntfy Failure Tags\nDESCRIPTION: Configures emoji tags for failure notification messages.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\nset('ntfy_failure_tags', `warning,skull`);\n```\n\n----------------------------------------\n\nTITLE: Failure Color Configuration\nDESCRIPTION: Default color hex code for failure notifications\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ms-teams.md#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n'#ff0909'\n```\n\n----------------------------------------\n\nTITLE: Including Chatwork Recipe in Deployer Configuration\nDESCRIPTION: Code to require the Chatwork recipe in your Deployer configuration file. This enables Chatwork notification functionality in your deployment process.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/chatwork.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/chatwork.php';\n```\n\n----------------------------------------\n\nTITLE: Including Bugsnag Recipe\nDESCRIPTION: Imports the Bugsnag recipe file into the Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/bugsnag.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/bugsnag.php';\n```\n\n----------------------------------------\n\nTITLE: Creating Error Exception\nDESCRIPTION: Creates a new exception with a custom error message\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/api.md#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\nerror(string $message): Exception\n```\n\n----------------------------------------\n\nTITLE: Default Crontab Identifier Configuration\nDESCRIPTION: Function to set the default identifier used in crontab, falling back to 'application' if not specified.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/crontab.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nreturn get('application', 'application');\n```\n\n----------------------------------------\n\nTITLE: Adding Yammer Success Notification in Deployer PHP\nDESCRIPTION: This snippet shows how to add a hook for notifying Yammer about successful deployment completion.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/yammer.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:success', 'yammer:notify:success');\n```\n\n----------------------------------------\n\nTITLE: Setting Default Drupal Site Configuration\nDESCRIPTION: Default configuration for the Drupal 7 site name\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/drupal7.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'default'\n```\n\n----------------------------------------\n\nTITLE: Setting Ntfy Success Tags\nDESCRIPTION: Configures emoji tags for success notification messages.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nset('ntfy_success_tags', `white_check_mark,champagne`);\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Hipchat Notification Color\nDESCRIPTION: Sets the default color for Hipchat notifications to green, indicating a successful deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hipchat.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'green'\n```\n\n----------------------------------------\n\nTITLE: Default Update Code Strategy Configuration in PHP Deployer\nDESCRIPTION: Defines the default strategy for code updates during deployment. Can be either 'archive' or 'clone'.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/update_code.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'archive'\n```\n\n----------------------------------------\n\nTITLE: Including Zend Framework Recipe in PHP Deployer\nDESCRIPTION: Imports the Zend Framework recipe file which contains deployment configuration and tasks specific to Zend Framework applications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/zend_framework.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/zend_framework.php';\n```\n\n----------------------------------------\n\nTITLE: Configuring Yammer Notification Messages in Deployer PHP\nDESCRIPTION: These snippets show the default templates for Yammer notification messages for deployment start, success, and failure.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/yammer.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n'<em>{{user}}</em> deploying {{what}} to <strong>{{where}}</strong>'\n```\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to <strong>{{where}}</strong> successful'\n```\n\nLANGUAGE: php\nCODE:\n```\n'Deploy to <strong>{{where}}</strong> failed'\n```\n\n----------------------------------------\n\nTITLE: Configuring Newrelic Notification in Deployer\nDESCRIPTION: Example of how to set up the Newrelic notification to execute after a successful deployment. This places the notification task at the end of the deployment process.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/newrelic.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy', 'newrelic:notify');\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for chat_subtitle\nDESCRIPTION: Sets the default value for the subtitle of the notification card, using the hostname.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hangouts.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nget('hostname')\n```\n\n----------------------------------------\n\nTITLE: Configuring Yammer URL in Deployer PHP\nDESCRIPTION: This snippet shows the default configuration for the Yammer API endpoint URL.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/yammer.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'https://www.yammer.com/api/v1/messages.json'\n```\n\n----------------------------------------\n\nTITLE: Setting Yammer Project Title in Deployer PHP\nDESCRIPTION: This snippet defines how the project title is set for Yammer notifications, using the 'application' config or a default value.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/yammer.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nreturn get('application', 'Project');\n```\n\n----------------------------------------\n\nTITLE: Configuring Shared Assets Path\nDESCRIPTION: Logic to determine the shared assets path based on directory structure. Checks for public directory existence and returns appropriate assets path.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/silverstripe.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nif (test('[ -d {{release_or_current_path}}/public ]') || test('[ -d {{deploy_path}}/shared/public ]')) {\nreturn 'public/assets';\n}\nreturn 'assets';\n```\n\n----------------------------------------\n\nTITLE: Requiring Chatwork Recipe in Deployment Configuration\nDESCRIPTION: Alternative way to include the Chatwork recipe using the recipe URL. This loads the integration from Deployer's recipe repository.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/chatwork.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n# https://deployer.org/recipes.html\nrequire 'recipe/chatwork.php';\n```\n\n----------------------------------------\n\nTITLE: Default Value for Ntfy Text Configuration\nDESCRIPTION: Shows the default template text for deployment notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n'_{{user}}_ deploying `{{what}}` to *{{where}}*'\n```\n\n----------------------------------------\n\nTITLE: Including MS Teams Recipe\nDESCRIPTION: Initial require statement to include the MS Teams recipe in deployment configuration\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ms-teams.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/ms-teams.php';\n```\n\n----------------------------------------\n\nTITLE: Including Databases Recipe in PHP Deployer\nDESCRIPTION: This snippet shows how to include the databases recipe in a Deployer configuration file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision/databases.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/provision/databases.php';\n```\n\n----------------------------------------\n\nTITLE: Default Sudo Usage Configuration\nDESCRIPTION: Default configuration value for using sudo with crontab commands.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/crontab.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nfalse\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Newrelic API Endpoint\nDESCRIPTION: Default value for the newrelic_endpoint configuration. Sets the API endpoint for New Relic's service.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/newrelic.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n'api.newrelic.com'\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Start Notification\nDESCRIPTION: Adds a hook to notify about the beginning of deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'ntfy:notify');\n```\n\n----------------------------------------\n\nTITLE: Setting Ntfy Message Priority\nDESCRIPTION: Configures the priority level for notification messages.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nset('ntfy_priority', 5);\n```\n\n----------------------------------------\n\nTITLE: Workplace Notification Hook Configuration\nDESCRIPTION: Implementation examples for adding deployment notification hooks at different stages of deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/workplace.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'workplace:notify');\nafter('deploy:success', 'workplace:notify:success');\nafter('deploy:failed', 'workplace:notify:failure');\n```\n\n----------------------------------------\n\nTITLE: Importing Grafana Recipe in PHP\nDESCRIPTION: Imports the Grafana recipe file for Deployer PHP integration\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/grafana.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/grafana.php';\n```\n\n----------------------------------------\n\nTITLE: Including User Provisioning Recipe in PHP Deployer\nDESCRIPTION: Shows how to require the user provisioning recipe file in a Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision/user.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/provision/user.php';\n```\n\n----------------------------------------\n\nTITLE: Importing Release Recipe in PHP\nDESCRIPTION: Basic require statement to include the release recipe functionality.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/release.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/release.php';\n```\n\n----------------------------------------\n\nTITLE: Including RabbitMQ Recipe in Deployer\nDESCRIPTION: Initial require statement to include the RabbitMQ recipe functionality in your deployment script.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rabbit.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/rabbit.php';\n```\n\n----------------------------------------\n\nTITLE: RoadRunner Path Configuration - PHP\nDESCRIPTION: Defines the path to RoadRunner server in the deployment\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/spiral.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n'{{release_or_current_path}}'\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Hipchat API URL\nDESCRIPTION: Sets the default Hipchat API endpoint URL for sending messages to rooms.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hipchat.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n'https://api.hipchat.com/v1/rooms/message'\n```\n\n----------------------------------------\n\nTITLE: Including DirectAdmin Recipe in PHP Deployer\nDESCRIPTION: Imports the DirectAdmin recipe file containing tasks and configurations for DirectAdmin integration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/directadmin.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/directadmin.php';\n```\n\n----------------------------------------\n\nTITLE: Importing Crontab Recipe in PHP\nDESCRIPTION: Basic require statement to include the crontab functionality in your deployment script.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/crontab.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/crontab.php';\n```\n\n----------------------------------------\n\nTITLE: Importing the Shared Recipe in PHP\nDESCRIPTION: Code showing how to require the shared recipe file in your Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/shared.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/shared.php';\n```\n\n----------------------------------------\n\nTITLE: Default Crontab Binary Path Configuration\nDESCRIPTION: Function to determine the path to the crontab binary using the which command.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/crontab.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nreturn which('crontab');\n```\n\n----------------------------------------\n\nTITLE: Environment Example File Configuration - PHP\nDESCRIPTION: Specifies the example environment file name for deployment configuration\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/spiral.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n'.env.sample'\n```\n\n----------------------------------------\n\nTITLE: RocketChat Default Webhook Configuration\nDESCRIPTION: Sets the default webhook configuration to null.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nnull\n```\n\n----------------------------------------\n\nTITLE: Adding Notification Hook Before Deployment\nDESCRIPTION: Configures a hook to send a notification to Google Hangouts Chat before deployment begins.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hangouts.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nbefore('deploy', 'chat:notify');\n```\n\n----------------------------------------\n\nTITLE: Including Magento 2 Recipe in PHP Deployment Script\nDESCRIPTION: Includes the Magento 2 recipe in a Deployer PHP script to enable Magento 2-specific deployment functionality.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/magento2.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/magento2.php';\n```\n\n----------------------------------------\n\nTITLE: Importing Raygun Recipe in PHP Deployer Configuration\nDESCRIPTION: This snippet shows how to require the Raygun recipe file in your Deployer configuration. It allows you to use Raygun-specific tasks and configurations in your deployment process.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/raygun.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/raygun.php';\n```\n\n----------------------------------------\n\nTITLE: Including Vendors Recipe in PHP Deployment Configuration\nDESCRIPTION: This snippet shows how to require the vendors recipe in your Deployer configuration file. This includes functionality for installing vendor dependencies during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/vendors.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/vendors.php';\n```\n\n----------------------------------------\n\nTITLE: Provisioning with sudo privileges\nDESCRIPTION: Command to provision a server where the remote user can use sudo to become root.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/getting-started.md#2025-04-16_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ndep provision -o become=root\n```\n\n----------------------------------------\n\nTITLE: Overriding Host Hostname\nDESCRIPTION: Example of overriding the default hostname using the set() method.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/hosts.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nhost('example.org')\n    ->set('hostname', 'example.cloud.google.com');\n```\n\n----------------------------------------\n\nTITLE: Discord Failure Text Configuration\nDESCRIPTION: Defines the structure for failed deployment messages.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/discord.md#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nreturn [\n'text' => parse(':&#8203;no_entry_sign: Branch `{{what}}` has failed to deploy to _{{where}}_'),\n];\n```\n\n----------------------------------------\n\nTITLE: RocketChat Icon Emoji Configuration\nDESCRIPTION: Defines the default emoji icon for RocketChat notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n':robot:'\n```\n\n----------------------------------------\n\nTITLE: Including Craftcms Recipe in PHP Deployment Script\nDESCRIPTION: This snippet shows how to include the Craftcms-specific deployment recipe in a Deployer script. It's the first step in setting up a Craftcms deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/craftcms.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/craftcms.php';\n```\n\n----------------------------------------\n\nTITLE: Including Yammer Recipe in Deployer PHP\nDESCRIPTION: This snippet shows how to include the Yammer recipe in your Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/yammer.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/yammer.php';\n```\n\n----------------------------------------\n\nTITLE: Including Npm Recipe in Deployer PHP Script\nDESCRIPTION: This snippet shows how to include the Npm recipe in a Deployer PHP script. It requires the contrib/npm.php file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/npm.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/npm.php';\n```\n\n----------------------------------------\n\nTITLE: Provisioning with custom user\nDESCRIPTION: Command to provision a server with a custom user instead of the default 'root' user.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/getting-started.md#2025-04-16_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ndep provision -o provision_user=your-user\n```\n\n----------------------------------------\n\nTITLE: Default Project Title Configuration\nDESCRIPTION: Default configuration for teams_title parameter\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ms-teams.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nreturn get('application', 'Project');\n```\n\n----------------------------------------\n\nTITLE: Default Color Configuration\nDESCRIPTION: Default color hex codes for different notification states\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ms-teams.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n'#4d91f7'\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Hipchat Notification Message\nDESCRIPTION: Defines the default message template for Hipchat notifications, including who is deploying, what is being deployed, and where it's being deployed to.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hipchat.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n'_{{user}}_ deploying `{{what}}` to *{{where}}*'\n```\n\n----------------------------------------\n\nTITLE: Including Flow Framework Recipe in PHP\nDESCRIPTION: Includes the Flow Framework recipe file for Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/flow_framework.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/flow_framework.php';\n```\n\n----------------------------------------\n\nTITLE: Importing Magento Recipe in PHP Deployer\nDESCRIPTION: Initial require statement to import the Magento deployment recipe.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/magento.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/magento.php';\n```\n\n----------------------------------------\n\nTITLE: Importing Supervisord-monitor Recipe in PHP\nDESCRIPTION: Code snippet showing how to require the Supervisord-monitor recipe in your Deployer configuration file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/supervisord-monitor.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/supervisord-monitor.php';\n```\n\n----------------------------------------\n\nTITLE: Including Spiral Recipe - PHP\nDESCRIPTION: Basic include statement for the Spiral deployment recipe\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/spiral.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/spiral.php';\n```\n\n----------------------------------------\n\nTITLE: Reloading Zsh Configuration\nDESCRIPTION: Command to reload the Zsh shell configuration after updating the PATH.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/installation.md#2025-04-16_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nsource ~/.zshrc\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for chat_line2\nDESCRIPTION: Sets the default value for the second line of text in the notification card, displaying the deployment stage.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hangouts.md#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n'{{stage}}'\n```\n\n----------------------------------------\n\nTITLE: Importing Sulu Recipe in PHP Deployer\nDESCRIPTION: Basic require statement to import the Sulu recipe functionality in a Deployer configuration file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/sulu.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/sulu.php';\n```\n\n----------------------------------------\n\nTITLE: Importing Drupal 7 Recipe in PHP\nDESCRIPTION: Includes the Drupal 7 recipe file for deployment configuration\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/drupal7.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/drupal7.php';\n```\n\n----------------------------------------\n\nTITLE: Creating Info Task with Labels\nDESCRIPTION: Defines a task that prints host label information, demonstrating how to access label values within a task.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/selector.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\ntask('info', function () {\n    writeln('type:' . get('labels')['type'] . ' env:' . get('labels')['env']);\n});\n```\n\n----------------------------------------\n\nTITLE: Including Website Recipe in PHP Deployer\nDESCRIPTION: Imports the website provisioning recipe into the deployment configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision/website.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/provision/website.php';\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for favicon\nDESCRIPTION: Sets the default value for the favicon image that decorates the notification card, using a path based on the hostname.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hangouts.md#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n'http://{{hostname}}/favicon.png'\n```\n\n----------------------------------------\n\nTITLE: Setting Writable Recursive Mode in PHP Deployer\nDESCRIPTION: This snippet sets the default value for writable_recursive to false. This configuration determines whether the recursive flag (-R) will be used when changing permissions.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/writable.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nfalse\n```\n\n----------------------------------------\n\nTITLE: Including Prestashop Recipe in Deployer\nDESCRIPTION: Basic include statement to load the Prestashop deployment recipe in Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/prestashop.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/prestashop.php';\n```\n\n----------------------------------------\n\nTITLE: Including ISPManager Recipe in Deployer\nDESCRIPTION: Basic require statement to include the ISPManager recipe in your Deployer configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ispmanager.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/ispmanager.php';\n```\n\n----------------------------------------\n\nTITLE: Importing Deployer Functions in 4.x\nDESCRIPTION: Example showing how to import Deployer functions in version 4.x, which introduced namespaced functions.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/UPGRADE.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nuse function Deployer\\{server, task, run, set, get, add, before, after};\n```\n\n----------------------------------------\n\nTITLE: RocketChat Default Channel Configuration\nDESCRIPTION: Sets the default channel configuration to null.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nnull\n```\n\n----------------------------------------\n\nTITLE: Including Joomla Recipe in Deployer PHP Script\nDESCRIPTION: This snippet shows how to include the Joomla-specific recipe in a Deployer PHP script. This is typically the first step in setting up a Joomla deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/joomla.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/joomla.php';\n```\n\n----------------------------------------\n\nTITLE: Setting SSH multiplexing configuration in PHP\nDESCRIPTION: This PHP snippet demonstrates how to set the 'ssh_multiplexing' configuration option in a Deployer recipe file. It disables SSH multiplexing by default.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/cli.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nset('ssh_multiplexing', false);\n```\n\n----------------------------------------\n\nTITLE: Including Cleanup Recipe in PHP Deployer\nDESCRIPTION: Shows how to require the cleanup recipe file in your deployment configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/cleanup.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/cleanup.php';\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Slack Rollback Color\nDESCRIPTION: Shows the default color for Slack message attachments when a rollback is performed.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_19\n\nLANGUAGE: php\nCODE:\n```\n'#eba211'\n```\n\n----------------------------------------\n\nTITLE: Setting Default Composer Action for PHP Deployments\nDESCRIPTION: Defines the default action for Composer during deployment. The default is set to 'install', which will install dependencies as defined in composer.lock.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/vendors.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'install'\n```\n\n----------------------------------------\n\nTITLE: TYPO3 Writable Directories Configuration in PHP\nDESCRIPTION: Configuration of directories that need write permissions during deployment\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/typo3.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n[\n    '{{typo3_webroot}}/fileadmin',\n    '{{typo3_webroot}}/typo3temp',\n    '{{typo3_webroot}}/typo3conf',\n    '{{typo3_webroot}}/uploads',\n]\n```\n\n----------------------------------------\n\nTITLE: Running Host Configuration Task\nDESCRIPTION: Shows the command line execution and output of the host configuration test task.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/hosts.md#2025-04-16_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n$ dep test\n[example.org] The example.org is example.org\n```\n\n----------------------------------------\n\nTITLE: Including Yarn Recipe in Deployer Configuration\nDESCRIPTION: Shows how to require the Yarn recipe file in your Deployer configuration to enable Yarn-related functionality during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/yarn.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/yarn.php';\n```\n\n----------------------------------------\n\nTITLE: Running Deployer's blackjack game\nDESCRIPTION: This bash command runs a hidden feature in Deployer that starts a game of blackjack. It's an easter egg included in the Deployer CLI.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/cli.md#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ndep blackjack\n```\n\n----------------------------------------\n\nTITLE: Configuring Shared Directories for Flow Framework in PHP\nDESCRIPTION: Specifies the shared directories for a Flow Framework application deployment, overriding the default shared_dirs configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/flow_framework.md#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n[\n    'Data/Persistent',\n    'Data/Logs',\n    'Configuration/{{flow_context}}',\n]\n```\n\n----------------------------------------\n\nTITLE: Deployer Version Support Table\nDESCRIPTION: Markdown table showing which versions of Deployer receive security support. Versions 7 and 8 are marked as supported, while versions below 7 are marked as unsupported.\nSOURCE: https://github.com/deployphp/deployer/blob/master/SECURITY.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Version | Supported          |\n|---------|--------------------|\\n| 8       | :white_check_mark: |\n| 7       | :white_check_mark: |\n| < 7     | :x:                |\n```\n\n----------------------------------------\n\nTITLE: Disabling Relative Symlinks in Deployer (PHP)\nDESCRIPTION: Workaround for bugs with relative symlinks in Ubuntu 14.04 with Coreutils 8.21. This setting prevents the rollback command from failing.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/KNOWN_BUGS.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nset('use_relative_symlink', false);\n```\n\n----------------------------------------\n\nTITLE: Workplace Notification Text Configuration\nDESCRIPTION: Setting the default notification message template for deployment notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/workplace.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nset('workplace_text', '_{{user}}_ deploying `{{what}}` to *{{where}}*');\n```\n\n----------------------------------------\n\nTITLE: Setting Default Database Name in PHP Deployer\nDESCRIPTION: This code defines the default value for the db_name configuration. It prompts the user for input with a default value of 'prod'.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision/databases.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nreturn ask(' DB name: ', 'prod');\n```\n\n----------------------------------------\n\nTITLE: Writable Directories Configuration - PHP\nDESCRIPTION: Specifies directories that need write permissions in Spiral deployment\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/spiral.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n['runtime', 'public']\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Codeigniter Shared Directories\nDESCRIPTION: Defines the default shared directories for Codeigniter applications that will persist between deployments. These include the cache and logs directories.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/codeigniter.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n['application/cache', 'application/logs']\n```\n\n----------------------------------------\n\nTITLE: Configuring Sulu Website Console Command\nDESCRIPTION: Default configuration for the Sulu website console command path using Deployer's parse function. Sets up the console command with PHP binary path and no-interaction flag.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/sulu.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nreturn parse('{{bin/php}} {{release_or_current_path}}/bin/websiteconsole --no-interaction');\n```\n\n----------------------------------------\n\nTITLE: Including Pimcore Recipe in PHP Deployer Configuration\nDESCRIPTION: This snippet shows how to include the Pimcore-specific deployment recipe in a Deployer configuration file. It loads predefined tasks and configurations for Pimcore projects.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/pimcore.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/pimcore.php';\n```\n\n----------------------------------------\n\nTITLE: Including Sentry Recipe in Deployer\nDESCRIPTION: This snippet shows how to require the Sentry recipe in your Deployer configuration file.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/sentry.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/sentry.php';\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Slack Title\nDESCRIPTION: Shows the default configuration for the Slack notification title, which uses the application name or defaults to 'Project'.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\nreturn get('application', 'Project');\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Slack Rollback Text\nDESCRIPTION: Shows the default configuration for the Slack notification text when a rollback is performed.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n'_{{user}}_ rolled back changes on *{{where}}*'\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for Slack Notification Color\nDESCRIPTION: Shows the default color for Slack message attachments during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/slack.md#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\n'#4d91f7'\n```\n\n----------------------------------------\n\nTITLE: Checking SCRIPT_FILENAME Path in PHP\nDESCRIPTION: A simple PHP snippet to check the current SCRIPT_FILENAME configuration. This helps diagnose if your server is using symlinks in file paths, which can cause PHP Opcode caching issues during deployments.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/avoid-php-fpm-reloading.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\necho $_SERVER['SCRIPT_FILENAME'];\n```\n\n----------------------------------------\n\nTITLE: Requiring Ntfy Recipe in PHP\nDESCRIPTION: Includes the Ntfy recipe in the deployment configuration file to enable Ntfy notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/ntfy.php';\n```\n\n----------------------------------------\n\nTITLE: Setting Ntfy Topic Configuration\nDESCRIPTION: Configures the required Ntfy topic to send notifications to.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nset('ntfy_topic', 'mysecrettopic');\n```\n\n----------------------------------------\n\nTITLE: Configuring Sentry Integration in Deployer\nDESCRIPTION: This code demonstrates how to set up the Sentry configuration in your deploy.php file. It includes organization, projects, authentication token, and version information.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/sentry.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\ndeploy.php\nset('sentry', [\n    'organization' => 'exampleorg',\n    'projects' => [\n        'exampleproj'\n    ],\n    'token' => 'd47828...',\n    'version' => '0.0.1',\n]);\n```\n\n----------------------------------------\n\nTITLE: Configuring Ntfy Notification Text\nDESCRIPTION: Sets the template for notification messages sent during deployment.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nset('ntfy_text', '_{{user}}_ deploying `{{what}}` to *{{where}}*');\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Failure Notification\nDESCRIPTION: Adds a hook to notify about deployment failure.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ntfy.md#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\nafter('deploy:failed', 'ntfy:notify:failure');\n```\n\n----------------------------------------\n\nTITLE: Requiring Hipchat Recipe in Deployer\nDESCRIPTION: Imports the Hipchat recipe into your Deployer configuration to enable Hipchat notifications.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hipchat.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/hipchat.php';\n```\n\n----------------------------------------\n\nTITLE: Importing Cachetool Recipe in PHP\nDESCRIPTION: Imports the Cachetool recipe file for use in Deployer scripts.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/cachetool.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'contrib/cachetool.php';\n```\n\n----------------------------------------\n\nTITLE: Importing PHP Provisioning Recipe in Deployer\nDESCRIPTION: This snippet shows how to include the PHP provisioning recipe in a Deployer configuration. It imports the necessary tasks and configurations for PHP-related operations.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision/php.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/provision/php.php';\n```\n\n----------------------------------------\n\nTITLE: Importing Provision Recipe in PHP\nDESCRIPTION: This code snippet shows how to require the provision recipe in a PHP deployment script.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/provision.php';\n```\n\n----------------------------------------\n\nTITLE: Importing Clear Paths Recipe - PHP\nDESCRIPTION: Shows how to require the clear_paths.php recipe file in your deployment configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/deploy/clear_paths.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/deploy/clear_paths.php';\n```\n\n----------------------------------------\n\nTITLE: Importing Nodejs Recipe in PHP\nDESCRIPTION: This snippet shows how to require the Nodejs recipe file in a PHP script. It's typically used to include the Nodejs provisioning functionality in a deployment configuration.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/recipe/provision/nodejs.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'recipe/provision/nodejs.php';\n```\n\n----------------------------------------\n\nTITLE: Using Bracket Syntax for Host Configurations\nDESCRIPTION: Demonstrates alternative bracket syntax for accessing host configurations in tasks.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/hosts.md#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\ntask('test', function () {\n    writeln('The {{alias}} is {{hostname}}');\n});\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for chat_title\nDESCRIPTION: Sets the default value for the title of the notification card, using the application name or \"Project\" if not set.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hangouts.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nreturn get('application', 'Project');\n```\n\n----------------------------------------\n\nTITLE: Default Configuration for chat_line1\nDESCRIPTION: Sets the default value for the first line of text in the notification card, displaying the branch name.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/hangouts.md#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n'{{branch}}'\n```\n\n----------------------------------------\n\nTITLE: Default ISPManager Owner Configuration\nDESCRIPTION: Default configuration for the ISPManager owner account used for operations.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/ispmanager.md#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'www-root'\n```\n\n----------------------------------------\n\nTITLE: RocketChat Default Room ID Configuration\nDESCRIPTION: Sets the default room ID configuration to null.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nnull\n```\n\n----------------------------------------\n\nTITLE: RocketChat Default Username Configuration\nDESCRIPTION: Sets the default username configuration to null.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/contrib/rocketchat.md#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nnull\n```\n\n----------------------------------------\n\nTITLE: Visualizing Deployer task hierarchy\nDESCRIPTION: This bash command uses Deployer's 'tree' feature to visualize the task hierarchy for the 'deploy' task. It shows the structure of tasks, including grouping and before/after hooks.\nSOURCE: https://github.com/deployphp/deployer/blob/master/docs/cli.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndep tree deploy\n```"
  }
]
[
  {
    "owner": "stan-dev",
    "repo": "rstan",
    "content": "TITLE: Setting MAKEFLAGS Environment Variable\nDESCRIPTION: Sets the MAKEFLAGS environment variable to control the number of cores used during the installation process. Replace 4 with the desired number of cores.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/rstan/INSTALL.txt#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nexport MAKEFLAGS=-j4\n```\n\n----------------------------------------\n\nTITLE: Initializing RStan Parameters\nDESCRIPTION: This snippet represents an initialization vector for a Stan model within the RStan environment.  The vector likely sets initial values for model parameters before the sampling process. This initialization can affect the efficiency and convergence of the Markov Chain Monte Carlo (MCMC) algorithm.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/rstan/tests/cpp/test_config/1_input_initv.txt#_snippet_0\n\nLANGUAGE: R\nCODE:\n```\n{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}\n```\n\n----------------------------------------\n\nTITLE: Initializing Model Parameters RStan\nDESCRIPTION: This snippet shows the initial values provided to the RStan model. These values serve as a starting point for the MCMC algorithm. It is crucial to have reasonable starting values to ensure proper convergence and prevent the sampler from getting stuck in local optima.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/rstan/tests/cpp/test_config/3_input_initv.txt#_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\n{1.99844,1.25687,1.98024,-1.88983,0.358155,0.20949,-1.31221,-0.0547931,1.61702,-0.173217,-1.13045,1.83615,-1.83698,1.43099,1.96814,0.248548,0.332343,0.593604,-0.82247,-0.0425023,-0.986565,-1.6821,-0.340159,1.0343,0.637433,1.40683,0.76579,1.98519,-0.913683,0.360518,0.780619,0.556332,0.933506,-0.446943,-0.0529602,1.77397,-1.91833,-0.267826,1.40551,0.407475,-0.421524,0.52609,-1.59404,-1.36384,-0.247066,-1.61581,-0.116806,1.1211}\n```\n\n----------------------------------------\n\nTITLE: RStan Initialization Vector Example\nDESCRIPTION: This is an example of an initialization vector likely used to initialize parameters in an RStan model. It's a sequence of numerical values enclosed in curly braces, possibly representing initial values for model parameters. The vector's elements influence the starting point of the Markov Chain Monte Carlo (MCMC) sampling process within the RStan framework.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/rstan/tests/cpp/test_config/2_input_initv.txt#_snippet_0\n\nLANGUAGE: C++\nCODE:\n```\n{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}\n```\n\n----------------------------------------\n\nTITLE: Initializing Numeric Array\nDESCRIPTION: This code snippet initializes a numeric array with 48 floating-point values. These values represent the initial state of the parameters within a Bayesian model used by RStan. They serve as the starting point for the MCMC algorithm, influencing the exploration and convergence of the model.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/rstan/tests/cpp/test_config/4_input_initv.txt#_snippet_0\n\nLANGUAGE: Numeric Array\nCODE:\n```\n{1.99844,1.25687,1.98024,-1.88983,0.358155,0.20949,-1.31221,-0.0547931,1.61702,-0.173217,-1.13045,1.83615,-1.83698,1.43099,1.96814,0.248548,0.332343,0.593604,-0.82247,-0.0425023,-0.986565,-1.6821,-0.340159,1.0343,0.637433,1.40683,0.76579,1.98519,-0.913683,0.360518,0.780619,0.556332,0.933506,-0.446943,-0.0529602,1.77397,-1.91833,-0.267826,1.40551,0.407475,-0.421524,0.52609,-1.59404,-1.36384,-0.247066,-1.61581,-0.116806,1.1211}\n```\n\n----------------------------------------\n\nTITLE: R Package Installation (CRAN) - Successful Installation\nDESCRIPTION: This snippet showcases the successful installation of the 'visit' R package under the 'CRAN' configuration.  It highlights the compilation, byte-compilation, help file generation, and testing phases. It indicates that the package was successfully installed and could be loaded from both temporary and final locations.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_14\n\nLANGUAGE: R\nCODE:\n```\n* installing *source* package ‘visit’ ...\n** package ‘visit’ successfully unpacked and MD5 sums checked\n** using staged installation\n** libs\n\"/Library/Frameworks/R.framework/Resources/bin/Rscript\" -e \"source(file.path('..', 'tools', 'make_cc.R')); make_cc(commandArgs(TRUE))\" stan_files/visit.stan\nWrote C++ file \"stan_files/visit.cc\"\n\n\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"../inst/include\" -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include/src\" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DBOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/RcppEigen/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c stan_files/visit.cc -o stan_files/visit.o\n\n...\n** byte-compile and prepare package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** installing vignettes\n** testing if installed package can be loaded from temporary location\n** checking absolute paths in shared objects and dynamic libraries\n** testing if installed package can be loaded from final location\n** testing if installed package keeps a record of temporary installation path\n* DONE (visit)\n```\n\n----------------------------------------\n\nTITLE: C++ Compiler Command - dfpk Devel\nDESCRIPTION: This snippet shows the C++ compiler command used during the installation of the 'dfpk' package, similar to the 'beanz' package. It demonstrates the compiler flags, include directories, and optimization options used when compiling the package's C++ source code.  Notice the BOOST defines.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_10\n\nLANGUAGE: C++\nCODE:\n```\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/src\" -DBOOST_RESULT_OF_USE_TR1 -DBOOST_NO_DECLTYPE -DBOOST_DISABLE_ASSERTS -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/RcppEigen/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c Modules.cpp -o Modules.o\n```\n\n----------------------------------------\n\nTITLE: Compiling Stan files to C++\nDESCRIPTION: This R script snippet is used to compile the Stan files into C++ code. It uses the `make_cc.R` script to generate the C++ source file from the Stan model definition. The `source` function is called within Rscript to execute the compilation process.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_20\n\nLANGUAGE: R\nCODE:\n```\n\"/Library/Frameworks/R.framework/Resources/bin/Rscript\" -e \"source(file.path('..', 'tools', 'make_cc.R')); make_cc(commandArgs(TRUE))\" stan_files/visit.stan\n```\n\n----------------------------------------\n\nTITLE: Stan Compilation Command - beanz CRAN\nDESCRIPTION: This snippet shows the command used to compile the 'bs.stan' file into a C++ file during the installation of 'beanz' from CRAN. It uses Rscript to execute 'make_cc.R' from the tools directory.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_13\n\nLANGUAGE: R\nCODE:\n```\n\"/Library/Frameworks/R.framework/Resources/bin/Rscript\" -e \"source(file.path('..', 'tools', 'make_cc.R')); make_cc(commandArgs(TRUE))\" stan_files/bs.stan\n```\n\n----------------------------------------\n\nTITLE: Compilation with clang++ for dfpk package\nDESCRIPTION: This snippet shows the clang++ command used to compile Modules.cpp for the 'dfpk' R package. It includes various compiler flags, include directories for StanHeaders, Rcpp, RcppEigen, and other dependencies, and optimization settings.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_15\n\nLANGUAGE: C++\nCODE:\n```\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include/src\" -DBOOST_RESULT_OF_USE_TR1 -DBOOST_NO_DECLTYPE -DBOOST_DISABLE_ASSERTS -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/RcppEigen/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c Modules.cpp -o Modules.o\n```\n\n----------------------------------------\n\nTITLE: Compilation with clang for init.c in dfpk\nDESCRIPTION: This snippet compiles the init.c file for the 'dfpk' R package using clang.  It includes similar include paths and compiler options as the clang++ example, but uses clang instead, suggesting C code compilation.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_16\n\nLANGUAGE: C\nCODE:\n```\nclang -arch arm64 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include/src\" -DBOOST_RESULT_OF_USE_TR1 -DBOOST_NO_DECLTYPE -DBOOST_DISABLE_ASSERTS -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/RcppEigen/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -c init.c -o init.o\n```\n\n----------------------------------------\n\nTITLE: Compiling init.c with clang for dfpk Package\nDESCRIPTION: This code snippet shows the compilation of the init.c file using the clang compiler for the 'dfpk' R package.  Similar to the previous snippet, it specifies include directories, compiler flags, and optimization options. The command creates an object file from the C source code.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_3\n\nLANGUAGE: C\nCODE:\n```\nclang -arch arm64 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include/src\" -DBOOST_RESULT_OF_USE_TR1 -DBOOST_NO_DECLTYPE -DBOOST_DISABLE_ASSERTS -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/RcppEigen/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -c init.c -o init.o\n```\n\n----------------------------------------\n\nTITLE: C++ Compiler Command - beanz CRAN\nDESCRIPTION: This snippet shows the C++ compiler command used during the installation of the 'beanz' package from CRAN.  It includes various include directories, compiler flags, and optimization options. It shows how the Stan model is compiled into an object file.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_14\n\nLANGUAGE: C++\nCODE:\n```\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"../inst/include\" -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include/src\" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DBOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/beanz/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/beanz/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/beanz/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/beanz/RcppEigen/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c stan_files/bs.cc -o stan_files/bs.o\n```\n\n----------------------------------------\n\nTITLE: Compiling Modules with clang++ for dfpk Package\nDESCRIPTION: This code snippet demonstrates the compilation of the Modules.cpp file using the clang++ compiler.  It includes numerous include directories and compiler flags to facilitate the building of the 'dfpk' R package. The command specifies the C++ standard, include paths, defines, and optimization flags used to compile the C++ source file.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_2\n\nLANGUAGE: C++\nCODE:\n```\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include/src\" -DBOOST_RESULT_OF_USE_TR1 -DBOOST_NO_DECLTYPE -DBOOST_DISABLE_ASSERTS -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/RcppEigen/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c Modules.cpp -o Modules.o\n```\n\n----------------------------------------\n\nTITLE: Compilation with clang++ for idem package (Devel)\nDESCRIPTION: This snippet shows a clang++ command used to compile the generated idem.cc file for the 'idem' R package (Devel).  It uses similar compiler flags and include paths as the dfpk example, with differences in the StanHeaders path and inclusion of inst/include.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_18\n\nLANGUAGE: C++\nCODE:\n```\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"../inst/include\" -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/src\" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DBOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/idem/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/idem/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/idem/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/idem/RcppEigen/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c stan_files/idem.cc -o stan_files/idem.o\n```\n\n----------------------------------------\n\nTITLE: Compilation with clang++ for idem package (CRAN)\nDESCRIPTION: This snippet shows a clang++ command used to compile the generated idem.cc file for the 'idem' R package (CRAN version).  It is very similar to the Devel version, with the key difference being it uses the 'old' StanHeaders directory.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_19\n\nLANGUAGE: C++\nCODE:\n```\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"../inst/include\" -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include/src\" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -BOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/idem/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/idem/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/idem/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/idem/RcppEigen/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c stan_files/idem.cc -o stan_files/idem.o\n```\n\n----------------------------------------\n\nTITLE: C++ Compilation with Clang++ (Devel)\nDESCRIPTION: This command compiles the generated C++ code (`stan_files/visit.cc`) using clang++. It includes various header files, defines preprocessor macros, and sets compiler flags for optimization and warnings. The compiled object file (`stan_files/visit.o`) is then created. This is part of the Devel environment installation.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_21\n\nLANGUAGE: C++\nCODE:\n```\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"../inst/include\" -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/src\" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DBOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/RcppEigen/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c stan_files/visit.cc -o stan_files/visit.o\n```\n\n----------------------------------------\n\nTITLE: Stan Compilation Command - beanz Devel\nDESCRIPTION: This snippet shows the command used to compile the 'bs.stan' file into a C++ file during the installation of 'beanz'. It uses Rscript to execute 'make_cc.R' from the tools directory.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_4\n\nLANGUAGE: R\nCODE:\n```\n\"/Library/Frameworks/R.framework/Resources/bin/Rscript\" -e \"source(file.path('..', 'tools', 'make_cc.R')); make_cc(commandArgs(TRUE))\" stan_files/bs.stan\n```\n\n----------------------------------------\n\nTITLE: C++ Compilation with Clang++ (CRAN)\nDESCRIPTION: This command compiles the generated C++ code (`stan_files/visit.cc`) using clang++. It includes various header files, defines preprocessor macros, and sets compiler flags for optimization and warnings.  It uses the older StanHeaders for the CRAN build.  The compiled object file (`stan_files/visit.o`) is then created. This is part of the CRAN environment installation.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_23\n\nLANGUAGE: C++\nCODE:\n```\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"../inst/include\" -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include/src\" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DBOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/RcppEigen/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/old/StanHeaders/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c stan_files/visit.cc -o stan_files/visit.o\n```\n\n----------------------------------------\n\nTITLE: Rscript execution for idem.stan\nDESCRIPTION: This code snippet shows the execution of an R script to process a Stan model file (idem.stan) for the 'idem' package. The script uses the make_cc.R utility to generate C++ code from the Stan model. This generated C++ code will be compiled and linked into the R package.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_6\n\nLANGUAGE: R\nCODE:\n```\n\"/Library/Frameworks/R.framework/Resources/bin/Rscript\" -e \"source(file.path('..', 'tools', 'make_cc.R')); make_cc(commandArgs(TRUE))\" stan_files/idem.stan\n```\n\n----------------------------------------\n\nTITLE: Rscript execution for idem package\nDESCRIPTION: This snippet executes an R script to generate a C++ file from a Stan model file (idem.stan) for the 'idem' package. This script likely handles the compilation process by utilizing the rstan package.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_17\n\nLANGUAGE: R\nCODE:\n```\n\"/Library/Frameworks/R.framework/Resources/bin/Rscript\" -e \"source(file.path('..', 'tools', 'make_cc.R')); make_cc(commandArgs(TRUE))\" stan_files/idem.stan\n```\n\n----------------------------------------\n\nTITLE: Installation Error Message - dfpk Devel\nDESCRIPTION: This snippet shows the error message received when attempting to install the 'dfpk' package from the development branch.  It indicates the installation failed.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_8\n\nLANGUAGE: Text\nCODE:\n```\nInstallation failed.\nSee ‘/Users/andrew/Downloads/StanHeaders/revdep/checks.noindex/dfpk/new/dfpk.Rcheck/00install.out’ for details.\n```\n\n----------------------------------------\n\nTITLE: Make Error - dfpk Devel\nDESCRIPTION: This snippet shows the error message from the make command during 'dfpk' compilation, indicating a failure due to the preceding C++ compilation error.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_12\n\nLANGUAGE: Makefile\nCODE:\n```\nmake: *** [Modules.o] Error 1\n```\n\n----------------------------------------\n\nTITLE: lgamma_r Error - dfpk Devel\nDESCRIPTION: This snippet shows the 'lgamma_r' error encountered during compilation of 'dfpk' when using the development StanHeaders. This error is identical to the one observed during the 'beanz' installation, suggesting a common underlying problem with StanHeaders version compatibility or the compiler environment.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_11\n\nLANGUAGE: C++\nCODE:\n```\nIn file included from Modules.cpp:3:\nIn file included from ./include/models.hpp:5:\nIn file included from /Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/rstan/include/rstan/rstaninc.hpp:4:\n...\n/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/stan/math/prim/fun/lgamma.hpp:66:12: error: no member named 'lgamma_r' in the global namespace\n  return ::lgamma_r(x, &sign);\n         ~~^\n/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/stan/math/prim/fun/lgamma.hpp:85:12: error: no member named 'lgamma_r' in the global namespace\n  return ::lgamma_r(x, &sign);\n         ~~^\n1 warning and 2 errors generated.\n```\n\n----------------------------------------\n\nTITLE: lgamma_r Error - beanz Devel\nDESCRIPTION: This snippet shows the specific error encountered during compilation of 'beanz' using the development StanHeaders. The error, 'no member named 'lgamma_r' in the global namespace', arises from a missing or incompatible implementation of the `lgamma_r` function, indicating an issue with the StanHeaders version or the compiler's standard library.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_6\n\nLANGUAGE: C++\nCODE:\n```\nIn file included from stan_files/bs.cc:3:\n...\n  return ::lgamma_r(x, &sign);\n         ~~^\n/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/stan/math/prim/fun/lgamma.hpp:85:12: error: no member named 'lgamma_r' in the global namespace\n  return ::lgamma_r(x, &sign);\n         ~~^\n1 warning and 2 errors generated.\n```\n\n----------------------------------------\n\nTITLE: R Package Installation Error (beanz)\nDESCRIPTION: This snippet shows the error encountered during the installation of the 'beanz' package. The compilation fails due to the absence of the 'lgamma_r' function in the global namespace, indicating an issue with the StanHeaders library or compiler configuration. This error occurred during a reverse dependency check with new StanHeaders.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"../inst/include\" -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/src\" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DBOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/beanz/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/beanz/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/beanz/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/beanz/RcppEigen/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c stan_files/bs.cc -o stan_files/bs.o\nIn file included from stan_files/bs.cc:3:\n...\n  return ::lgamma_r(x, &sign);\n         ~~^\n/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/stan/math/prim/fun/lgamma.hpp:85:12: error: no member named 'lgamma_r' in the global namespace\n  return ::lgamma_r(x, &sign);\n         ~~^\n1 warning and 2 errors generated.\nmake: *** [stan_files/bs.o] Error 1\nrm stan_files/bs.cc\nERROR: compilation failed for package ‘beanz’\n* removing ‘/Users/andrew/Downloads/StanHeaders/revdep/checks.noindex/beanz/new/beanz.Rcheck/beanz’\n```\n\n----------------------------------------\n\nTITLE: R Package Installation Error (dfpk)\nDESCRIPTION: This snippet shows the error encountered during the installation of the 'dfpk' package. Similar to the 'beanz' package, the compilation fails due to the absence of the 'lgamma_r' function in the global namespace, indicating a consistent issue related to the StanHeaders library or compiler configuration. This error occurred during a reverse dependency check with new StanHeaders.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/src\" -DBOOST_RESULT_OF_USE_TR1 -DBOOST_NO_DECLTYPE -DBOOST_DISABLE_ASSERTS -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/RcppEigen/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c Modules.cpp -o Modules.o\nIn file included from Modules.cpp:3:\nIn file included from ./include/models.hpp:5:\nIn file included from /Users/andrew/Downloads/StanHeaders/revdep/library.noindex/dfpk/rstan/include/rstan/rstaninc.hpp:4:\n...\n/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/stan/math/prim/fun/lgamma.hpp:66:12: error: no member named 'lgamma_r' in the global namespace\n  return ::lgamma_r(x, &sign);\n         ~~^\n/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/stan/math/prim/fun/lgamma.hpp:85:12: error: no member named 'lgamma_r' in the global namespace\n  return ::lgamma_r(x, &sign);\n         ~~^\n1 warning and 2 errors generated.\nmake: *** [Modules.o] Error 1\nERROR: compilation failed for package ‘dfpk’\n* removing ‘/Users/andrew/Downloads/StanHeaders/revdep/checks.noindex/dfpk/new/dfpk.Rcheck/dfpk’\n```\n\n----------------------------------------\n\nTITLE: Compilation Error: No member named 'lgamma_r'\nDESCRIPTION: This snippet presents a compilation error message encountered during the building of the 'idem' package, specifically indicating the absence of a member named 'lgamma_r' in the global namespace. This error likely stems from an incompatibility between the StanHeaders version and the code within 'idem'.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_8\n\nLANGUAGE: C++\nCODE:\n```\nIn file included from stan_files/idem.cc:3:\n...\n  return ::lgamma_r(x, &sign);\n         ~~^\n/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/stan/math/prim/fun/lgamma.hpp:85:12: error: no member named 'lgamma_r' in the global namespace\n  return ::lgamma_r(x, &sign);\n         ~~^\n1 warning and 2 errors generated.\nmake: *** [stan_files/idem.o] Error 1\nrm stan_files/idem.cc\nERROR: compilation failed for package ‘idem’\n```\n\n----------------------------------------\n\nTITLE: C++ Compiler Command - beanz Devel\nDESCRIPTION: This snippet shows the C++ compiler command used during the installation of the 'beanz' package.  It includes various include directories, compiler flags, and optimization options. It shows how the Stan model is compiled into an object file.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_5\n\nLANGUAGE: C++\nCODE:\n```\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"../inst/include\" -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/src\" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DBOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/beanz/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/beanz/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/beanz/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/beanz/RcppEigen/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c stan_files/bs.cc -o stan_files/bs.o\n```\n\n----------------------------------------\n\nTITLE: Prophet Tests Error\nDESCRIPTION: This snippet shows the error output from running tests for the prophet package. It indicates a segmentation fault during the test execution, suggesting a memory-related issue.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep/problems.md#_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nRunning ‘testthat.R’\n ERROR\nRunning the tests in ‘tests/testthat.R’ failed.\nLast 13 lines of output:\n  Chain 4:                3.463 seconds (Sampling)\n  Chain 4:                10.454 seconds (Total)\n  Chain 4: \n  [ FAIL 0 | WARN 2 | SKIP 0 | PASS 375 ]\n  \n  [ FAIL 0 | WARN 2 | SKIP 0 | PASS 375 ]\n  > \n  > proc.time()\n     user  system elapsed \n  152.305   2.580 154.924 \n  \n   *** caught segfault ***\n  address 0x18, cause 'memory not mapped'\n  An irrecoverable exception occurred. R is aborting now ...\n  Segmentation fault (core dumped)\n```\n\n----------------------------------------\n\nTITLE: RStanArm Tests Error\nDESCRIPTION: This snippet shows the error output from running tests for the rstanarm package. Similar to prophet, it indicates a segmentation fault during test execution and also shows compiler warnings.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep/problems.md#_snippet_4\n\nLANGUAGE: R\nCODE:\n```\nRunning ‘testthat.R’\n ERROR\nRunning the tests in ‘tests/testthat.R’ failed.\nLast 13 lines of output:\n  /mnt/local_drive/badr/tmp/revdepcheck/StanHeaders_revdep/StanHeaders/revdep/library/rstanarm/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:650:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]\n    650 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);\n        |                                                                          ^~~~~~~~~\n  g++ -std=gnu++14 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o sourceCpp_2.so file3c4d6a434894.o /mnt/local_drive/badr/tmp/revdepcheck/StanHeaders_revdep/StanHeaders/revdep/library/rstanarm/rstan/lib//libStanServices.a -L/mnt/local_drive/badr/tmp/revdepcheck/StanHeaders_revdep/StanHeaders/revdep/library/StanHeaders/new/StanHeaders/lib/ -lStanHeaders -L/mnt/local_drive/badr/tmp/revdepcheck/StanHeaders_revdep/StanHeaders/revdep/library/rstanarm/RcppParallel/lib/ -ltbb -L/usr/lib/R/lib -lR\n  [ FAIL 0 | WARN 0 | SKIP 0 | PASS 191 ]\n  > \n  > \n  > proc.time()\n     user  system elapsed \n   56.130   4.353  60.573 \n  \n   *** caught segfault ***\n  address 0x18, cause 'memory not mapped'\n  An irrecoverable exception occurred. R is aborting now ...\n  Segmentation fault (core dumped)\n```\n\n----------------------------------------\n\nTITLE: Make Error - beanz Devel\nDESCRIPTION: This snippet shows the error message from the make command when compiling 'beanz', indicating that the compilation failed due to the previous C++ error.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_7\n\nLANGUAGE: Makefile\nCODE:\n```\nmake: *** [stan_files/bs.o] Error 1\n```\n\n----------------------------------------\n\nTITLE: R Package Installation (Devel) - Compilation Error\nDESCRIPTION: This snippet demonstrates the installation process of the 'visit' R package under the 'Devel' configuration. It shows the command used to compile the stan file to C++, along with the compiler flags and the subsequent compilation error related to the 'lgamma_r' function. The error indicates a problem with the StanHeaders library.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_13\n\nLANGUAGE: R\nCODE:\n```\n* installing *source* package ‘visit’ ...\n** package ‘visit’ successfully unpacked and MD5 sums checked\n** using staged installation\n** libs\n\"/Library/Frameworks/R.framework/Resources/bin/Rscript\" -e \"source(file.path('..', 'tools', 'make_cc.R')); make_cc(commandArgs(TRUE))\" stan_files/visit.stan\nWrote C++ file \"stan_files/visit.cc\"\n\n\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"../inst/include\" -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/src\" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DBOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/visit/RcppEigen/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c stan_files/visit.cc -o stan_files/visit.o\nIn file included from stan_files/visit.cc:3:\n...\n  return ::lgamma_r(x, &sign);\n         ~~^\n/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/stan/math/prim/fun/lgamma.hpp:85:12: error: no member named 'lgamma_r' in the global namespace\n  return ::lgamma_r(x, &sign);\n         ~~^\n1 warning and 2 errors generated.\nmake: *** [stan_files/visit.o] Error 1\nrm stan_files/visit.cc\nERROR: compilation failed for package ‘visit’\n* removing ‘/Users/andrew/Downloads/StanHeaders/revdep/checks.noindex/visit/new/visit.Rcheck/visit’\n```\n\n----------------------------------------\n\nTITLE: RStanArm Dependencies Note\nDESCRIPTION: This snippet shows the note about unresolved dependencies in the rstanarm package, indicating that the namespace 'RcppParallel' is not imported from, even though it is listed in the Imports field.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep/problems.md#_snippet_6\n\nLANGUAGE: R\nCODE:\n```\nNamespace in Imports field not imported from: ‘RcppParallel’\n  All declared Imports should be used.\n```\n\n----------------------------------------\n\nTITLE: Compiling Stan Model (idem.cc) with clang++\nDESCRIPTION: This snippet displays the command used to compile the C++ code generated from the Stan model (idem.cc) for the 'idem' package.  It includes various include paths, compiler flags, and optimization options, similar to the 'dfpk' compilation commands. An error during compilation prevents the package from building.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_7\n\nLANGUAGE: C++\nCODE:\n```\nclang++ -arch arm64 -std=gnu++14 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I\"../inst/include\" -I\"/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/src\" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DBOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/idem/rstan/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/idem/BH/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/idem/Rcpp/include' -I'/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/idem/RcppEigen/include' -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -Wno-unknown-warning-option -Wno-enum-compare -Wno-ignored-attributes -Wno-unused-local-typedef -Wno-sign-compare -Wno-unneeded-internal-declaration -Wno-unused-function -Wno-unused-but-set-variable -Wno-unused-variable -Wno-infinite-recursion -Wno-unknown-pragmas -Wno-unused-lambda-capture -Wno-deprecated-declarations -Wno-deprecated-builtins -Wno-unused-but-set-variables -ftemplate-backtrace-limit=0 -Wno-nonnull -c stan_files/idem.cc -o stan_files/idem.o\n```\n\n----------------------------------------\n\nTITLE: Prophet Dependencies Note\nDESCRIPTION: This snippet shows the note about unresolved dependencies in the prophet package, indicating that the namespaces 'StanHeaders', 'methods', and 'rstantools' are not imported from, even though they are listed in the Imports field.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep/problems.md#_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nNamespaces in Imports field not imported from:\n  ‘StanHeaders’ ‘methods’ ‘rstantools’\n  All declared Imports should be used.\n```\n\n----------------------------------------\n\nTITLE: 'LazyData' specified without a 'data' directory\nDESCRIPTION: This NOTE means that the 'visit' package specifies the use of LazyData but doesn't have a 'data' directory containing any data files.  LazyData is used for efficient loading of data, so the absence of a 'data' directory means this functionality is not being used as intended.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_11\n\nLANGUAGE: Text\nCODE:\n```\n'LazyData' is specified without a 'data' directory\n```\n\n----------------------------------------\n\nTITLE: GNU Make Note - beanz\nDESCRIPTION: This snippet shows a note indicating that GNU make is a SystemRequirement for the 'beanz' package. This is important for ensuring that the package can be built correctly.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_3\n\nLANGUAGE: Text\nCODE:\n```\nGNU make is a SystemRequirements.\n```\n\n----------------------------------------\n\nTITLE: RStanArm GNU Make Note\nDESCRIPTION: This snippet indicates that the rstanarm package requires GNU make as a system requirement.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep/problems.md#_snippet_7\n\nLANGUAGE: R\nCODE:\n```\nGNU make is a SystemRequirements.\n```\n\n----------------------------------------\n\nTITLE: GNU make as System Requirement for 'idem'\nDESCRIPTION: This code snippet highlights a NOTE during the reverse dependency check for the 'idem' package. It signifies that GNU make is identified as a system requirement. This implies that the package's build process relies on GNU make, which needs to be installed on the system.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_5\n\nLANGUAGE: Text\nCODE:\n```\nGNU make is a SystemRequirements.\n```\n\n----------------------------------------\n\nTITLE: GNU Make Note - dfpk\nDESCRIPTION: This snippet shows a note indicating that GNU make is a SystemRequirement for the 'dfpk' package.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_9\n\nLANGUAGE: Text\nCODE:\n```\nGNU make is a SystemRequirements.\n```\n\n----------------------------------------\n\nTITLE: Dependencies Note - beanz\nDESCRIPTION: This snippet shows a note indicating a missing import of 'rstantools' from the Imports field of the 'beanz' package. It suggests that all declared imports should be used.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_2\n\nLANGUAGE: Text\nCODE:\n```\nNamespace in Imports field not imported from: ‘rstantools’\n  All declared Imports should be used.\n```\n\n----------------------------------------\n\nTITLE: Namespace in Imports field not imported from: ‘sqldf’\nDESCRIPTION: This NOTE indicates that the 'visit' package declares 'sqldf' in its Imports field, but it doesn't directly import it. This suggests a potential issue with dependency management, as the package might be relying on 'sqldf' without explicitly declaring its usage, which could lead to errors.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_10\n\nLANGUAGE: Text\nCODE:\n```\nNamespace in Imports field not imported from: ‘sqldf’\n  All declared Imports should be used.\n```\n\n----------------------------------------\n\nTITLE: GNU make as System Requirement for 'visit'\nDESCRIPTION: This NOTE states that GNU make is identified as a system requirement for the 'visit' package. This mirrors the situation seen with 'idem', indicating the package's build process depends on GNU make. The build system's reliance on GNU make needs to be documented and fulfilled for successful installation.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_12\n\nLANGUAGE: Text\nCODE:\n```\nGNU make is a SystemRequirements.\n```\n\n----------------------------------------\n\nTITLE: Installation Error Message - beanz Devel\nDESCRIPTION: This snippet shows the error message received when attempting to install the 'beanz' package from the development branch. The error indicates a missing 'lgamma_r' member in the global namespace, suggesting a problem with the StanHeaders installation or version compatibility.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\nInstallation failed.\nSee ‘/Users/andrew/Downloads/StanHeaders/revdep/checks.noindex/beanz/new/beanz.Rcheck/00install.out’ for details.\n```\n\n----------------------------------------\n\nTITLE: Installation Failure Message for 'visit' Package\nDESCRIPTION: This snippet contains an error message indicating that the installation of the 'visit' package failed during a reverse dependency check. It suggests checking the specified log file for more information. This error indicates problems with 'visit' similar to those seen for 'idem'.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_9\n\nLANGUAGE: Text\nCODE:\n```\nInstallation failed.\nSee ‘/Users/andrew/Downloads/StanHeaders/revdep/checks.noindex/visit/new/visit.Rcheck/00install.out’ for details.\n```\n\n----------------------------------------\n\nTITLE: Installed Package Size Note - beanz\nDESCRIPTION: This snippet shows a note indicating the installed size of the 'beanz' package and its sub-directories. It is useful for understanding the package's footprint and identifying potential areas for optimization.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_1\n\nLANGUAGE: Text\nCODE:\n```\ninstalled size is  7.1Mb\nsub-directories of 1Mb or more:\n  libs   5.6Mb\n```\n\n----------------------------------------\n\nTITLE: Prophet Installed Size Note\nDESCRIPTION: This snippet shows the installed size of the prophet package and highlights the directory contributing most to the size, which is 'libs'.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep/problems.md#_snippet_1\n\nLANGUAGE: R\nCODE:\n```\ninstalled size is 53.9Mb\nsub-directories of 1Mb or more:\n  libs  53.1Mb\n```\n\n----------------------------------------\n\nTITLE: RStanArm Installed Size Note\nDESCRIPTION: This snippet shows the installed size of the rstanarm package and highlights the directories contributing most to the size: 'R', 'doc', and 'libs'.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep/problems.md#_snippet_5\n\nLANGUAGE: R\nCODE:\n```\ninstalled size is 399.3Mb\nsub-directories of 1Mb or more:\n  R       1.6Mb\n  doc     4.8Mb\n  libs  392.2Mb\n```\n\n----------------------------------------\n\nTITLE: Installation Failure Message for 'idem' Package\nDESCRIPTION: This snippet captures an error message indicating that the installation of the 'idem' package failed during a reverse dependency check.  It provides a path to a log file containing detailed installation information. This typically suggests a problem with the package's code, dependencies, or build process.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/failures.md#_snippet_4\n\nLANGUAGE: Text\nCODE:\n```\nInstallation failed.\nSee ‘/Users/andrew/Downloads/StanHeaders/revdep/checks.noindex/idem/new/idem.Rcheck/00install.out’ for details.\n```\n\n----------------------------------------\n\nTITLE: C++ Compilation Error (Devel)\nDESCRIPTION: This log snippet shows an error encountered during the C++ compilation of the 'visit' package in the Devel environment. Specifically, the compiler reports that the `lgamma_r` function is not found in the global namespace. This suggests a missing header or an incorrect compiler configuration. The compilation fails, resulting in an error.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep-macos/problems.md#_snippet_22\n\nLANGUAGE: C++\nCODE:\n```\nIn file included from stan_files/visit.cc:3:\n...\n  return ::lgamma_r(x, &sign);\n         ~~^\n/Users/andrew/Downloads/StanHeaders/revdep/library.noindex/StanHeaders/new/StanHeaders/include/stan/math/prim/fun/lgamma.hpp:85:12: error: no member named 'lgamma_r' in the global namespace\n  return ::lgamma_r(x, &sign);\n         ~~^\n1 warning and 2 errors generated.\nmake: *** [stan_files/visit.o] Error 1\nrm stan_files/visit.cc\n```\n\n----------------------------------------\n\nTITLE: Prophet GNU Make Note\nDESCRIPTION: This snippet indicates that the prophet package requires GNU make as a system requirement.\nSOURCE: https://github.com/stan-dev/rstan/blob/develop/revdep/problems.md#_snippet_3\n\nLANGUAGE: R\nCODE:\n```\nGNU make is a SystemRequirements.\n```"
  }
]
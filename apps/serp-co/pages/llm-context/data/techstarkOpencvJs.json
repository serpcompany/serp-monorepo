[
  {
    "owner": "techstark",
    "repo": "opencv-js",
    "content": "TITLE: Initializing OpenCV.js Runtime\nDESCRIPTION: Basic initialization of OpenCV.js runtime with event listener for runtime ready state. Shows how to import the library and check build information.\nSOURCE: https://github.com/techstark/opencv-js/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport cv from \"@techstark/opencv-js\";\n\ncv.onRuntimeInitialized = () => {\n  console.log(\"OpenCV.js is ready!\");\n  // You can now use OpenCV functions here\n  console.log(cv.getBuildInformation());\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Webpack for OpenCV.js Browser Usage\nDESCRIPTION: Webpack configuration settings required for browser usage of OpenCV.js. Defines necessary polyfills and module fallbacks.\nSOURCE: https://github.com/techstark/opencv-js/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  resolve: {\n    modules: [...],\n    fallback: {\n      fs: false,\n      path: false,\n      crypto: false\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Building OpenCV.js with WebAssembly Support\nDESCRIPTION: Commands to source the Emscripten environment and build opencv.js with WebAssembly support using the build_js.py script.\nSOURCE: https://github.com/techstark/opencv-js/blob/main/dist/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nsource ~/apps/emsdk/emsdk_env.sh\nemcmake python ./platforms/js/build_js.py build_js --build_wasm\n```\n\n----------------------------------------\n\nTITLE: Setting Up Emscripten SDK for OpenCV.js\nDESCRIPTION: Commands to update, install and activate a specific version (2.0.10) of the Emscripten SDK required for building opencv.js.\nSOURCE: https://github.com/techstark/opencv-js/blob/main/dist/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncd ~/apps/emsdk\n./emsdk update\n./emsdk install 2.0.10\n./emsdk activate 2.0.10\n```\n\n----------------------------------------\n\nTITLE: Applying a Patch to OpenCV.js\nDESCRIPTION: Command to apply an existing patch to the opencv.js codebase using git apply.\nSOURCE: https://github.com/techstark/opencv-js/blob/main/dist/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ngit apply dist/opencv.js.patch\n```\n\n----------------------------------------\n\nTITLE: Creating a Patch for OpenCV.js\nDESCRIPTION: Commands to create a patch file for the current modifications to opencv.js and move it to the distribution directory.\nSOURCE: https://github.com/techstark/opencv-js/blob/main/dist/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngit diff > temp.patch\nmv temp.patch dist/opencv.js.patch\n```\n\n----------------------------------------\n\nTITLE: Generating OpenCV.js Runtime Keys with TypeScript Test\nDESCRIPTION: This snippet shows the file path of a TypeScript test file used to generate a JSON file containing runtime methods and properties of OpenCV objects in JavaScript. The generated file is named 'cvKeys.json'.\nSOURCE: https://github.com/techstark/opencv-js/blob/main/doc/README.md#2025-04-22_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ntest/cvKeys.test.ts\n```"
  }
]
[
  {
    "owner": "rossumai",
    "repo": "deployment-manager",
    "content": "TITLE: Run Deployment\nDESCRIPTION: Runs a deployment using the deployment manager tool, applying the changes specified in the provided deployment file.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nprd2 deploy run <DEPLOY-FILE-PATH>\n```\n\n----------------------------------------\n\nTITLE: Push Local Changes to Rossum\nDESCRIPTION: Pushes local changes from a specified directory to Rossum using the deployment manager tool.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nprd2 push <DIR-NAME>\n```\n\n----------------------------------------\n\nTITLE: Pull Changes from Rossum\nDESCRIPTION: Pulls changes from Rossum into a specified directory using the deployment manager tool.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncd <NAME-OF-PROJECT>\nprd2 pull <DIR-NAME>\n```\n\n----------------------------------------\n\nTITLE: Update an Existing Deployment File\nDESCRIPTION: Updates an existing deployment file using the deployment manager tool, with the option for interactive updates.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nprd2 deploy template -f <PATH> --interactive\n```\n\n----------------------------------------\n\nTITLE: Create Deployment Template\nDESCRIPTION: Creates a deployment template using the deployment manager tool, which specifies what should be copied or deployed.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nprd2 deploy template\n```\n\n----------------------------------------\n\nTITLE: Initialize a new project with Deployment Manager\nDESCRIPTION: Initializes a new project using the deployment manager tool. The user specifies a project name.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nprd2 init <NAME-OF-PROJECT>\n```\n\n----------------------------------------\n\nTITLE: YAML Configuration for Multiple Target Workspaces\nDESCRIPTION: This YAML snippet demonstrates how to configure multiple target workspaces within a deployment file. Each target workspace has an ID. This allows deploying to multiple environments (e.g., DEV, UAT, PROD) from a single configuration.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_16\n\nLANGUAGE: YAML\nCODE:\n```\nworkspaces:\n  - id: 521887\n    name: WS1 DEV\n    targets:\n      - id:\n      - id:\n```\n\n----------------------------------------\n\nTITLE: YAML Configuration for Attribute Override per Target\nDESCRIPTION: This YAML snippet shows how to override attributes for each target workspace individually.  The `attribute_override` section allows specifying different values for the same attribute (e.g., 'name') in different target environments (e.g., WS1 UAT, WS1 PROD).\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_17\n\nLANGUAGE: YAML\nCODE:\n```\nworkspaces:\n  - id: 521887\n    name: WS1 DEV\n    targets:\n      - id:\n        attribute_override:\n          name: WS1 UAT\n      - id:\n        attribute_override:\n          name: WS1 PROD\n```\n\n----------------------------------------\n\nTITLE: Configuring Directories in prd_config.yaml with YAML\nDESCRIPTION: This YAML configuration defines the directory structure for different Rossum organizations (sandbox-org and prod-org). It specifies the organization ID, API base URL, and subdirectories (dev, uat, prod) for each organization.  Each subdirectory can have a regular expression associated with it, though in this example they are empty.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\ndirectories:\n  sandbox-org:\n    org_id: '251437'\n    api_base: https://rdttest.rossum.app/api/v1\n    subdirectories:\n      dev:\n        regex: ''\n      uat:\n        regex: ''\n  prod-org:\n    org_id: '255590'\n    api_base: https://rdttest.rossum.app/api/v1\n    subdirectories:\n      prod:\n        regex: ''\n```\n\n----------------------------------------\n\nTITLE: Purging Unused Schemas using PRD\nDESCRIPTION: This command demonstrates how to use the `prd2 purge` command to delete unused schemas within a Rossum organization.  Unused schemas are those that are not assigned to any queues.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\nprd2 purge unused_schemas\n```\n\n----------------------------------------\n\nTITLE: Run Deployment Manager\nDESCRIPTION: Executes the deployment manager tool with the `prd2` command.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nprd2\n```\n\n----------------------------------------\n\nTITLE: Install Deployment Manager via pip (Windows)\nDESCRIPTION: Installs the latest version of the deployment manager tool using pip on Windows.  It uses PowerShell to retrieve the URL of the latest wheel file from the GitHub Releases API.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n$LatestURL = (Invoke-RestMethod -Uri \"https://api.github.com/repos/rossumai/deployment-manager/releases/latest\").assets | Where-Object { $_.name -like \"*.whl\" } | Select-Object -ExpandProperty browser_download_url\npip install $LatestURL\n```\n\n----------------------------------------\n\nTITLE: Install Deployment Manager via pip (Linux/MacOS)\nDESCRIPTION: Installs the latest version of the deployment manager tool using pip. It retrieves the latest wheel file URL from the GitHub Releases API and installs it.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install $(curl -s https://api.github.com/repos/rossumai/deployment-manager/releases/latest | jq -r '.assets[].browser_download_url' | grep '.whl')\n```\n\n----------------------------------------\n\nTITLE: Install Specific Version of Deployment Manager (Linux/MacOS)\nDESCRIPTION: Installs a specific version of the deployment manager tool using pip by providing the direct download URL of the wheel file.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install https://github.com/rossumai/deployment-manager/releases/v2.0.1/download/deployment_manager-v2.0.1-py3-none-any.whl\n```\n\n----------------------------------------\n\nTITLE: Install Specific Version of Deployment Manager (Windows)\nDESCRIPTION: Installs a specific version of the deployment manager tool on Windows using pip by directly specifying the wheel file URL.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npip install https://github.com/rossumai/deployment-manager/releases/v2.0.1/download/deployment_manager-latest-py3-none-any.whl\n```\n\n----------------------------------------\n\nTITLE: Add Deployment Manager to PATH (Windows)\nDESCRIPTION: Adds the deployment manager tool to the system's PATH environment variable on Windows using PowerShell. This allows the tool to be executed from any directory.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\npowershell -ExecutionPolicy Bypass -Command \"& {Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/rossumai/deployment-manager/main/add_to_path.ps1' -OutFile add_to_path.ps1; & ./add_to_path.ps1}\"\n```\n\n----------------------------------------\n\nTITLE: Authentication with Rossum API via curl\nDESCRIPTION: Authenticates with the Rossum API using curl to obtain a token by providing username and password.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncurl --location 'https://rdttest.rossum.app/api/v1/auth/login' \\\n--header 'Content-Type: application/json' \\\n--data '{\n    \"username\": \"my-user\",\n    \"password\": \"my-password\"\n}'\n```\n\n----------------------------------------\n\nTITLE: YAML Configuration for Attribute Override using Regex\nDESCRIPTION: This YAML snippet demonstrates how to use regular expressions within attribute overrides to replace parts of a value. The `/#/` separator is used to separate the regex pattern (left) from the replacement value (right).  This is useful for making targeted changes to strings.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_18\n\nLANGUAGE: YAML\nCODE:\n```\nworkspaces:\n  - id: 538437\n    name: Invoices US\n    targets:\n      - id:\n        attribute_override:\n          name: \\bUS\\b/#/EU\n```\n\n----------------------------------------\n\nTITLE: Example Project Directory Structure in JSON\nDESCRIPTION: This JSON represents a sample directory structure for a PRD project, showing the organization of files and folders for different Rossum organizations and subdirectories. It illustrates the location of configuration files, workspaces, queues, schemas, and other relevant components. This file structure is conceptual and represents what the file system looks like.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_14\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"prd_config.yaml\": null,\n  \"prod-org\": {\n    \"credentials.yaml\": null,\n    \"organization.json\": null,\n    \"prod\": {\n      \"hooks\": {\n        \"Master Data Hub 1 - DEV_[521877].json\": null\n      },\n      \"workspaces\": {\n        \"AP_[572556]\": {\n          \"queues\": {\n            \"Invoices_[1509387]\": {\n              \"formulas\": {\n                \"some_formula.py\": null\n              },\n              \"rules\": {\n                \"some_rule.py\": null\n              },\n              \"email_templates\": {\n                \"some_email_template.py\": null\n              },\n              \"inbox.json\": null,\n              \"queue.json\": null,\n              \"schema.json\": null\n            }\n          },\n          \"workspace.json\": null\n        }\n      }\n    }\n  },\n  \"sandbox-org\": {\n    \"credentials.yaml\": null,\n    \"dev\": {\n      \"workspaces\": {\n        \"AP_[521887]\": {\n          \"queues\": {\n            \"Invoices_[1230128]\": {\n              \"inbox.json\": null,\n              \"queue.json\": null,\n              \"schema.json\": null\n            }\n          },\n          \"workspace.json\": null\n        }\n      }\n    },\n    \"organization.json\": null,\n    \"uat\": {\n      \"workspaces\": {\n        \"AP_[563305]\": {\n          \"queues\": {\n            \"Invoices_[1462491]\": {\n              \"inbox.json\": null,\n              \"queue.json\": null,\n              \"schema.json\": null\n            }\n          },\n          \"workspace.json\": null\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: YAML Configuration for Escaping Regex Characters in Attribute Override\nDESCRIPTION: This YAML snippet shows how to escape special characters (like parentheses) when using regular expressions in attribute overrides.  The `\\(US\\)` regex is used to match '(US)' literally.  Failure to escape special characters will result in incorrect regex matching.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_19\n\nLANGUAGE: YAML\nCODE:\n```\nworkspaces:\n  - id: 538437\n    name: Invoices (US)\n    targets:\n      - id:\n        attribute_override:\n          name: \\(US\\)/#/(EU)\n```\n\n----------------------------------------\n\nTITLE: prd2 Hook Testing Command\nDESCRIPTION: This shell command tests a hook using a local hook path.  The `-pp` option allows specifying an existing payload path, and the `-au` option allows specifying the annotation URL. If no payload is provided, one will be created automatically. It then runs the hook and displays logs and the return value.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_21\n\nLANGUAGE: Shell\nCODE:\n```\nprd2 hook payload <HOOK-PATH> [-pp <PAYLOAD-PATH> -au <ANNOTATION-URL>]\n```\n\n----------------------------------------\n\nTITLE: prd2 Hook Payload Command\nDESCRIPTION: This shell command generates a hook payload from a local hook path. The `-au` option allows specifying an annotation URL, which can be provided either via command-line or interactively.\nSOURCE: https://github.com/rossumai/deployment-manager/blob/main/README.md#_snippet_20\n\nLANGUAGE: Shell\nCODE:\n```\nprd2 hook payload <HOOK-PATH> [ -au <ANNOTATION-URL>]\n```"
  }
]
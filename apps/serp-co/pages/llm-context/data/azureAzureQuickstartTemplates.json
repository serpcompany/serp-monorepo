[
  {
    "owner": "azure",
    "repo": "azure-quickstart-templates",
    "content": "TITLE: Listing Azure Resource Provider Tags for Machine Learning Deployment\nDESCRIPTION: This line lists various Azure Resource Provider tags associated with resources commonly deployed alongside an Azure Machine Learning workspace using an Azure Resource Manager template. These include Storage Accounts, Key Vault, Application Insights, Container Registry, and the Machine Learning Service workspace itself, along with tags for system-assigned identity and Key Vault keys.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Storage/storageAccounts, Microsoft.KeyVault/vaults, Microsoft.Insights/components, Microsoft.ContainerRegistry/registries, Microsoft.MachineLearningServices/workspaces, systemAssigned, Microsoft.KeyVault/vaults/keys`\n```\n\n----------------------------------------\n\nTITLE: Referencing Storage Endpoints in Bicep\nDESCRIPTION: Demonstrates how to reference storage account blob endpoints in Bicep for VM boot diagnostics. Uses the properties accessor to dynamically retrieve the endpoint rather than hardcoding values.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_8\n\nLANGUAGE: bicep\nCODE:\n```\ndiagnosticsProfile: {\n  bootDiagnostics: {\n    enabled: true,\n      storageUri: diagStorageAccount.properties.primaryEndpoints['blob']\n      }\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Certificate to Key Vault Secret using PowerShell\nDESCRIPTION: PowerShell script to upload a PFX certificate into a Key Vault Secret. This script converts the certificate to base64 encoded format and stores it as a secret in the specified Key Vault.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-certificate-from-key-vault/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$pfxFilePath = \"PFX_CERTIFICATE_FILE_PATH\" # Change this path\n$pwd = \"PFX_CERTIFICATE_PASSWORD\"  # Change this password\n$flag = [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable\n$collection = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n$collection.Import($pfxFilePath, $pwd, $flag)\n$pkcs12ContentType = [System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12\n$clearBytes = $collection.Export($pkcs12ContentType)\n$fileContentEncoded = [System.Convert]::ToBase64String($clearBytes)\n$secret = ConvertTo-SecureString -String $fileContentEncoded -AsPlainText â€“Force\n$secretContentType = 'application/x-pkcs12'\nSet-AzureKeyVaultSecret -VaultName KEY_VAULT_NAME -Name KEY_VAULT_SECRET_NAME -SecretValue $Secret -ContentType $secretContentType # Change Key Vault name and Secret name\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure SQL Logical Server via ARM Template - JSON\nDESCRIPTION: This ARM (Azure Resource Manager) JSON template provisions an Azure SQL logical server and related configurations such as firewall rules, advanced threat protection, vulnerability assessments, and optionally connects to storage accounts and assigns roles. Required dependencies include an Azure subscription with appropriate permissions and the Azure SQL resource provider registered. Key parameters include server name, admin login, password, and resource group details. The input parameters define the configuration, and upon deployment, the template outputs the provisioned server properties. Restrictions depend on Azure subscription and region availability, as well as template parameter validation rules.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.sql/sql-logical-server/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"// Place your ARM template JSON here or use the provided azuredeploy.json (/quickstarts/microsoft.sql/sql-logical-server/azuredeploy.json).\\n// For example, a snippet defining the logical server might look like:\\n{\\n  \\\"$schema\\\": \\\"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\\\",\\n  \\\"contentVersion\\\": \\\"1.0.0.0\\\",\\n  \\\"parameters\\\": {\\n    \\\"serverName\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"administratorLogin\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"administratorLoginPassword\\\": {\\n      \\\"type\\\": \\\"securestring\\\"\\n    },\\n    \\\"location\\\": {\\n      \\\"type\\\": \\\"string\\\",\\n      \\\"defaultValue\\\": \\\"[resourceGroup().location]\\\"\\n    }\\n  },\\n  \\\"resources\\\": [\\n    {\\n      \\\"type\\\": \\\"Microsoft.Sql/servers\\\",\\n      \\\"apiVersion\\\": \\\"2019-06-01-preview\\\",\\n      \\\"name\\\": \\\"[parameters('serverName')]\\\",\\n      \\\"location\\\": \\\"[parameters('location')]\\\",\\n      \\\"properties\\\": {\\n        \\\"administratorLogin\\\": \\\"[parameters('administratorLogin')]\\\",\\n        \\\"administratorLoginPassword\\\": \\\"[parameters('administratorLoginPassword')]\\\"\\n      }\\n    }\\n  ],\\n  \\\"outputs\\\": {\\n    \\\"serverName\\\": {\\n      \\\"type\\\": \\\"string\\\",\\n      \\\"value\\\": \\\"[parameters('serverName')]\\\"\\n    }\\n  }\\n}\\n// See the quickstart repo for a full template. \"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Data Factory Bulk Copy Pipeline Using ARM Template - JSON\nDESCRIPTION: This JSON code snippet represents an ARM template for automatically deploying an Azure Data Factory (v2) configured to bulk copy tables from an Azure SQL Database to an Azure SQL Data Warehouse. It defines resources such as linked services for Azure Storage and SQL databases, datasets for input/output, and a pipeline with copy activities. The template depends on prerequisite Azure resources like storage accounts and SQL databases, which must be either referenced or provisioned within the deployment. The main input parameters typically include Azure SQL Server credentials and resource locations, with outputs related to provisioning status. This snippet is intended for administrators or DevOps engineers needing to automate cloud-based ETL workflows using ARM in Azure environments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-azure-sql-database-to-sql-data-warehouse-copy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // Full ARM template would be here;\n  // Based on documentation, it includes Microsoft.DataFactory/factories, linkedservices,\n  // AzureStorage, SecureString, AzureSqlDatabase, AzureSqlDW, datasets, AzureSqlTable,\n  // LinkedServiceReference, AzureSqlDWTable, Expression, pipelines, ForEach, Copy,\n  // SqlSource, SqlDWSink, DatasetReference, Lookup, ExecutePipeline, PipelineReference,\n  // Microsoft.Storage/storageAccounts, Microsoft.Sql/servers, firewallrules, databases\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Function App with HTTP Trigger and Key Vault - ARM Template (JSON)\nDESCRIPTION: This ARM Template JSON snippet defines the deployment of an Azure Function App, an inline HTTP-triggered function, an Application Insights resource, a Key Vault, and a secret holding the function's host key. The template leverages Azure Resource Manager's native JSON schema, supporting parameterization for resource names and configuration, and ensures dependencies between resources. Required dependencies include Azure Resource Manager and access to Azure services; inputs are parameters and resource definitions, and outputs are the deployed resource endpoints and secrets.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/function-http-trigger/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    ...\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts\",\n      ...\n    },\n    {\n      \"type\": \"Microsoft.Insights/components\",\n      ...\n    },\n    {\n      \"type\": \"Microsoft.Web/serverfarms\",\n      ...\n    },\n    {\n      \"type\": \"Microsoft.Web/sites\",\n      ...\n    },\n    {\n      \"type\": \"Microsoft.Web/sites/functions\",\n      ...\n    },\n    {\n      \"type\": \"Microsoft.KeyVault/vaults\",\n      ...\n    },\n    {\n      \"type\": \"Microsoft.KeyVault/vaults/secrets\",\n      ...\n    }\n  ],\n  \"outputs\": {\n    ...\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Web App and SQL Database using ARM Template\nDESCRIPTION: This ARM template deploys a Web App and SQL Database on Azure. It includes configurations for App Service, SQL Database, and associated resources. The template uses parameters to customize the deployment and sets up necessary connections between services.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-sql-database/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Sql/servers, Microsoft.Sql/servers/databases, Microsoft.Sql/servers/firewallRules, Microsoft.Web/serverfarms, Microsoft.Web/sites, Microsoft.Web/sites/config, SQLAzure, Microsoft.Insights/components\"\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure Cosmos DB (SQL API) Account - Bicep\nDESCRIPTION: This Bicep snippet defines Azure resources to create a free-tier Cosmos DB account for SQL API, including a SQL database with shared throughput (1000 RU/s) and a container. Requires Azure Bicep CLI and an Azure subscription with permission to deploy resources. Parameters include location and database/account names; outputs are resources in the targeted region. Only one free-tier account may exist per subscription, and the account supports up to 1000 RU/s or 50 GB for free.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-free/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\n\"// bicep template for a free-tier Cosmos DB SQL account\\nparam location string\\nparam accountName string\\nparam databaseName string\\nparam containerName string\\n\\nresource cosmosDbAccount 'Microsoft.DocumentDB/databaseAccounts@2021-06-15' = {\\n  name: accountName\\n  location: location\\n  kind: 'GlobalDocumentDB'\\n  properties: {\\n    databaseAccountOfferType: 'Standard'\\n    locations: [\\n      {\\n        locationName: location\\n        failoverPriority: 0\\n        isZoneRedundant: false\\n      }\\n    ]\\n    enableFreeTier: true\\n    apiProperties: {\\n      serverVersion: '3.2'\\n    }\\n    consistencyPolicy: {\\n      defaultConsistencyLevel: 'Session'\\n    }\\n  }\\n}\\n\\nresource sqlDatabase 'Microsoft.DocumentDB/databaseAccounts/sqlDatabases@2021-06-15' = {\\n  name: '\\${accountName}/\\${databaseName}'\\n  properties: {\\n    resource: {\\n      id: databaseName\\n    }\\n    options: {\\n      throughput: 1000\\n    }\\n  }\\n}\\n\\nresource container 'Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers@2021-06-15' = {\\n  name: '\\${accountName}/\\${databaseName}/\\${containerName}'\\n  properties: {\\n    resource: {\\n      id: containerName\\n      partitionKey: {\\n        paths: ['/myPartitionKey']\\n        kind: 'Hash'\\n      }\\n    }\\n    options: {}\\n  }\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Configure Jumpbox Access to Private AKS Cluster\nDESCRIPTION: Bash script to set up Azure CLI and kubectl on the jumpbox VM to connect to the private AKS cluster. Installs required tools and configures authentication credentials.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/private-aks-cluster/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\nname=\"<name of the AKS cluster>\"\nresourceGroup=\"<name of the AKS resource group>\"\n\n# Install Azure CLI on Ubuntu\ncurl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\n\n# Login with your Azure account\naz login\n\n# Install Kubectl\nsudo az aks install-cli\n\n# Use the following command to configure kubectl to connect to the new Kubernetes cluster\necho \"Getting access credentials configure kubectl to connect to the [\"$aksName\"] AKS cluster...\"\naz aks get-credentials --name $name --resource-group $resourceGroup\n```\n\n----------------------------------------\n\nTITLE: Converting ARM Template to Bicep using Decompiler\nDESCRIPTION: Shell command to decompile an existing ARM template (azuredeploy.json) into a Bicep file (main.bicep).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nbicep decompile azuredeploy.json --outfile main.bicep\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure SQL Managed Instance and JumpBox via ARM Template - JSON\nDESCRIPTION: This snippet refers to an Azure Resource Manager (ARM) template, written in JSON, used to automate the deployment of an Azure SQL Database Managed Instance alongside a JumpBox VM with SSMS pre-installed, each inside its own subnet within a newly provisioned Azure Virtual Network. It defines required parameters such as instance names, subnet configurations, SKU/tiers, and license types. The template deploys Microsoft.Sql/managedInstances, Microsoft.Compute/virtualMachines, Microsoft.Network/virtualNetworks, network security groups, and other related Azure resources. Inputs are required for instance and network names, admin credentials, address ranges, SKU, and license type with outputs being the Azure resources provisioned according to the specified configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.sql/sqlmi-new-vnet-w-jumpbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // Azure Resource Manager (ARM) template for deploying SQL Managed Instance and JumpBox in Azure\n  // The actual template would be defined in a file like azuredeploy.json referenced in the documentation.\n  // Resources deployed:\n  // - Microsoft.Network/virtualNetworks with two subnets: ManagedInstance and Management\n  // - Microsoft.Sql/managedInstances in the ManagedInstance subnet\n  // - Microsoft.Compute/virtualMachines with SSMS in the Management subnet\n  // - Network security groups, public IP addresses, NICs, route tables, and extensions (e.g., CustomScriptExtension)\n  // Template parameters configure names, admin credentials, address spaces, SKU/tier, and license type\n  // See repository: https://github.com/Azure/azure-quickstart-templates/tree/master/quickstarts/microsoft.sql/sqlmi-new-vnet-w-jumpbox\n  \n  // Note: Full ARM template JSON content is not included in this documentation file, but code usage is referenced throughout.\n}\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure Function App with ARM Template - JSON\nDESCRIPTION: This ARM template snippet provisions an Azure Function App on a Windows Consumption plan, along with dependencies including a Storage Account for operational needs, Application Insights for monitoring, and the ZipDeploy extension with recommended configuration for packaging deployments. The template requires the Azure Resource Manager service, and relies on resource types such as Microsoft.Web/serverfarms, Microsoft.Web/sites, Microsoft.Storage/storageAccounts, and Microsoft.Insights/components. Input parameters include application and storage account settings, and the output is a fully deployed and monitored function application with zip package mounting enabled through WEBSITE_RUN_FROM_PACKAGE=1. The deployment is limited to Windows Consumption plans and is not suited for Linux-based hosting.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/function-app-windows-consumption/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // ARM template file for deploying Azure Function App on Windows Consumption Plan\n  // This will provision serverfarms (consumption), sites (function app), storageAccounts, \n  // sites/extensions (ZipDeploy), and Application Insights component.\n  // Parameters: e.g. function app name, storage account name, location...\n  // Resources: Microsoft.Storage/storageAccounts, Microsoft.Insights/components,\n  //            Microsoft.Web/serverfarms, Microsoft.Web/sites, Microsoft.Web/sites/extensions\n  // Note: WEBSITE_RUN_FROM_PACKAGE=1 is set to mount the zip package for deployment\n}\n\n```\n\n----------------------------------------\n\nTITLE: Provisioning Cosmos DB Table API Account and Table - ARM Template (JSON)\nDESCRIPTION: This JSON ARM template defines and deploys an Azure Cosmos DB account configured for the Table API, allowing users to specify key parameters such as consistency level, regional failover, geographic replication, table name, and provisioned throughput. It depends on the Microsoft.DocumentDB provider and the resource types: Microsoft.DocumentDB/databaseAccounts and Microsoft.DocumentDB/databaseAccounts/tables. Inputs include primary and secondary region locations, desired throughput (RU/s), and optional system-managed failover. The output is a deployed database account and table, ready for application use, with limits determined by Azure subscription quotas and throughput choices.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-table/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // JSON ARM Template for Cosmos DB Table API with multi-region and table creation\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"accountName\": {\n      \"type\": \"string\"\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\"\n    },\n    \"locations\": {\n      \"type\": \"array\"\n    },\n    \"consistencyLevel\": {\n      \"type\": \"string\",\n      \"allowedValues\": [\n        \"Strong\",\n        \"BoundedStaleness\",\n        \"Session\",\n        \"ConsistentPrefix\",\n        \"Eventual\"\n      ]\n    },\n    \"enableSystemManagedFailover\": {\n      \"type\": \"bool\",\n      \"defaultValue\": false\n    },\n    \"tableName\": {\n      \"type\": \"string\"\n    },\n    \"throughput\": {\n      \"type\": \"int\",\n      \"defaultValue\": 400\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.DocumentDB/databaseAccounts\",\n      \"apiVersion\": \"2021-07-01-preview\",\n      \"name\": \"[parameters('accountName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"kind\": \"GlobalDocumentDB\",\n      \"properties\": {\n        \"consistencyPolicy\": {\n          \"defaultConsistencyLevel\": \"[parameters('consistencyLevel')]\"\n        },\n        \"locations\": \"[parameters('locations')]\",\n        \"databaseAccountOfferType\": \"Standard\",\n        \"enableMultipleWriteLocations\": true,\n        \"enableAutomaticFailover\": \"[parameters('enableSystemManagedFailover')]\",\n        \"capabilities\": [\n          {\n            \"name\": \"EnableTable\"\n          }\n        ]\n      }\n    },\n    {\n      \"type\": \"Microsoft.DocumentDB/databaseAccounts/tables\",\n      \"apiVersion\": \"2021-07-01-preview\",\n      \"name\": \"[format('{0}/{1}', parameters('accountName'), parameters('tableName'))]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]\"\n      ],\n      \"properties\": {\n        \"resource\": {\n          \"id\": \"[parameters('tableName')]\"\n        },\n        \"options\": {\n          \"throughput\": \"[parameters('throughput')]\"\n        }\n      }\n    }\n  ]\n}\n\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Principal with Contributor Role\nDESCRIPTION: This command creates an Azure service principal with Contributor role permissions for use with the CI/CD pipeline. The service principal is needed for authenticating Jenkins with Azure resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-container/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\naz ad sp create-for-rbac --name <AppName> --role Contributor\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Machine Learning Compute Instance Using ARM Template\nDESCRIPTION: This ARM template creates an Azure Machine Learning compute instance. It includes parameters for the workspace name, compute name, virtual machine size, and administrator object ID. The template also sets up necessary resources like storage accounts, key vaults, and application insights components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-compute-create-computeinstance/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"workspaceName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Specifies the name of the Azure Machine Learning workspace.\"\n      }\n    },\n    \"computeName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Specifies the name of the Azure Machine Learning compute instance to create.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Specifies the location for all resources.\"\n      }\n    },\n    \"vmSize\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"Standard_DS3_v2\",\n      \"metadata\": {\n        \"description\": \"Specifies the VM size of the compute instance.\"\n      }\n    },\n    \"vnetResourceGroupName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"\",\n      \"metadata\": {\n        \"description\": \"Name of the resource group which holds the VNET to inject your compute instance in.\"\n      }\n    },\n    \"vnetName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"\",\n      \"metadata\": {\n        \"description\": \"Name of the vnet to inject your compute instance in.\"\n      }\n    },\n    \"subnetName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"\",\n      \"metadata\": {\n        \"description\": \"Name of the subnet to inject your compute instance in.\"\n      }\n    },\n    \"tenantId\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[subscription().tenantId]\",\n      \"metadata\": {\n        \"description\": \"Specifies the tenant ID of the subscription. Get using Get-AzureRmSubscription cmdlet or Get Subscription API.\"\n      }\n    },\n    \"applicationInsightsName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[concat('ai',uniqueString(resourceGroup().id))]\",\n      \"metadata\": {\n        \"description\": \"Name of the existing Application Insights.\"\n      }\n    },\n    \"keyVaultName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[concat('kv',uniqueString(resourceGroup().id))]\",\n      \"metadata\": {\n        \"description\": \"Name of the existing Key Vault.\"\n      }\n    },\n    \"storageAccountName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[concat('st',uniqueString(resourceGroup().id))]\",\n      \"metadata\": {\n        \"description\": \"Name of the existing Storage Account.\"\n      }\n    },\n    \"adminUserName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the administrator user account which can be used to SSH into nodes.\"\n      }\n    },\n    \"adminUserPassword\": {\n      \"type\": \"securestring\",\n      \"metadata\": {\n        \"description\": \"Password of the administrator user account.\"\n      }\n    },\n    \"adminUserSshPublicKey\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"\",\n      \"metadata\": {\n        \"description\": \"SSH public key of the administrator user account.\"\n      }\n    },\n    \"adminUserObjectId\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Object ID of the administrator user account which will be the owner of the compute instance.\"\n      }\n    },\n    \"setupScripts\": {\n      \"type\": \"array\",\n      \"defaultValue\": [],\n      \"metadata\": {\n        \"description\": \"CLI commands to run on the compute instance when it is created.\"\n      }\n    }\n  },\n  \"variables\": {\n    \"subnet\": {\n      \"id\": \"[resourceId(parameters('vnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]\"\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts\",\n      \"apiVersion\": \"2019-06-01\",\n      \"name\": \"[parameters('storageAccountName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"Standard_LRS\"\n      },\n      \"kind\": \"StorageV2\",\n      \"properties\": {\n        \"encryption\": {\n          \"services\": {\n            \"blob\": {\n              \"enabled\": true\n            },\n            \"file\": {\n              \"enabled\": true\n            }\n          },\n          \"keySource\": \"Microsoft.Storage\"\n        },\n        \"supportsHttpsTrafficOnly\": true\n      }\n    },\n    {\n      \"type\": \"Microsoft.KeyVault/vaults\",\n      \"apiVersion\": \"2019-09-01\",\n      \"name\": \"[parameters('keyVaultName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"tenantId\": \"[parameters('tenantId')]\",\n        \"sku\": {\n          \"name\": \"standard\",\n          \"family\": \"A\"\n        },\n        \"accessPolicies\": []\n      }\n    },\n    {\n      \"type\": \"Microsoft.Insights/components\",\n      \"apiVersion\": \"2020-02-02\",\n      \"name\": \"[parameters('applicationInsightsName')]\",\n      \"location\": \"[if(or(equals(parameters('location'),'eastus2'), equals(parameters('location'),'westcentralus')),'southcentralus',parameters('location'))]\",\n      \"kind\": \"web\",\n      \"properties\": {\n        \"Application_Type\": \"web\"\n      }\n    },\n    {\n      \"type\": \"Microsoft.MachineLearningServices/workspaces\",\n      \"apiVersion\": \"2022-05-01\",\n      \"name\": \"[parameters('workspaceName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"identity\": {\n        \"type\": \"systemAssigned\"\n      },\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]\",\n        \"[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]\",\n        \"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]\"\n      ],\n      \"properties\": {\n        \"friendlyName\": \"[parameters('workspaceName')]\",\n        \"storageAccount\": \"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]\",\n        \"keyVault\": \"[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]\",\n        \"applicationInsights\": \"[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]\"\n      }\n    },\n    {\n      \"type\": \"Microsoft.MachineLearningServices/workspaces/computes\",\n      \"apiVersion\": \"2022-10-01\",\n      \"name\": \"[concat(parameters('workspaceName'), '/', parameters('computeName'))]\",\n      \"location\": \"[parameters('location')]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('workspaceName'))]\"\n      ],\n      \"properties\": {\n        \"computeType\": \"ComputeInstance\",\n        \"properties\": {\n          \"vmSize\": \"[parameters('vmSize')]\",\n          \"subnet\": \"[if(and(not(empty(parameters('vnetResourceGroupName'))),not(empty(parameters('vnetName'))),not(empty(parameters('subnetName')))), variables('subnet'), json('null'))]\",\n          \"applicationSharingPolicy\": \"Personal\",\n          \"sshSettings\": {\n            \"adminUserName\": \"[parameters('adminUserName')]\",\n            \"adminUserPassword\": \"[parameters('adminUserPassword')]\",\n            \"adminUserSshPublicKey\": \"[parameters('adminUserSshPublicKey')]\"\n          },\n          \"setupScripts\": \"[parameters('setupScripts')]\"\n        }\n      },\n      \"identity\": {\n        \"type\": \"SystemAssigned\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Event Hub Namespace and Event Hub with ARM Template (JSON)\nDESCRIPTION: This snippet deploys an Azure Event Hubs namespace and an event hub resource using an Azure Resource Manager (ARM) JSON template. It relies on the Microsoft.EventHub/namespaces and Microsoft.EventHub/namespaces/eventhubs resource types, and is intended to be used with ARM or via the Azure portal. Key parameters would typically include resource names, SKU, and event hub settings. The output produces both the deployed namespace and event hub; customization is possible via template parameters. Proper Azure subscription permissions are required.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.eventhub/eventhubs-create-namespace-and-eventhub/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n/*\nARM Template not shown directly here, but referenced by links and documentation. Typically contains a JSON structure specifying Microsoft.EventHub/namespaces and Microsoft.EventHub/namespaces/eventhubs resources, with relevant parameters for name, SKU, location, and event hub properties. See the following reference for full schema:\nhttps://github.com/Azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.eventhub/eventhubs-create-namespace-and-eventhub/azuredeploy.json\n*/\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources using PowerShell\nDESCRIPTION: PowerShell script to deploy Azure resources using a template from a specified folder. Supports resource group deployment with location specification and artifact staging.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md#2025-04-23_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\Deploy-AzureResourceGroup.ps1 -ResourceGroupLocation 'eastus' -ArtifactStagingDirectory '[foldername]'\n```\n\n----------------------------------------\n\nTITLE: Configuring VNET-to-VNET Connections in Azure Resource Manager Template (JSON)\nDESCRIPTION: This code snippet represents ARM template resources used for deploying two Azure Virtual Networks in separate regions, each with their own subnets, public IPs, and virtual network gateways. The template establishes a VPN connection between the two VNETs using the Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworkGateways, and Microsoft.Network/connections resource types. Dependencies include Azure Resource Manager and the referenced ARM resource providers. Key parameters include VNET locations, address spaces, and gateway configurations. The expected input is a parameters file which can override default values; outputs are fully provisioned and connected VNETs. Template is constrained to the supported Azure regions and resource types.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/vnet-to-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\nTags: Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworkGateways, Microsoft.Network/connections\n```\n\n----------------------------------------\n\nTITLE: Creating Site-to-Site VPN Connection with Azure Resource Manager Template - JSON\nDESCRIPTION: This ARM template provisions a Site-to-Site VPN Connection by defining resources such as a Virtual Network, subnet, Public IP, Virtual Network Gateway, Local Network Gateway (for the external side of the VPN), network security groups, network interfaces, and an Ubuntu test VM. The deployment requires the public IP address of the remote VPN endpoint and may optionally override template parameter defaults via a separate parameters JSON file. The key inputs are network configuration details, and the outputs are operational Azure resources connected securely to an on-premises or remote site. Limitations include the need for a public IP (not behind NAT) for the remote gateway and familiarity with Azure network concepts.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/site-to-site-vpn/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\": \"This template allows you to create a Site-to-Site VPN Connection using Virtual Network Gateways\",\n  \"page_type\": \"sample\",\n  \"products\": [\n    \"azure\",\n    \"azure-resource-manager\"\n  ],\n  \"urlFragment\": \"site-to-site-vpn\",\n  \"languages\": [\n    \"json\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Password-Protected PFX Certificate for Service Principal - PowerShell\nDESCRIPTION: This PowerShell snippet generates a self-signed, password-protected PFX certificate intended for authenticating an Azure Active Directory service principal. It creates a target folder, defines certificate parameters, and uses the New-SelfSignedCertificate and Export-PfxCertificate cmdlets to produce and store the certificate for later use in ARM deployments. Key parameters include certificate subject name, validity dates, output folder, and password (which must be specified). The output is a PFX file with the provided password, saved to disk. No external dependencies beyond Azure PowerShell modules are required.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-datalake-store-azure-storage/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$certFolder = \"C:\\\\certificates\"\n$certFilePath = \"$certFolder\\\\certFile.pfx\"\n$certStartDate = (Get-Date).Date\n$certStartDateStr = $certStartDate.ToString(\"MM/dd/yyyy\")\n$certEndDate = $certStartDate.AddYears(1)\n$certEndDateStr = $certEndDate.ToString(\"MM/dd/yyyy\")\n$certName = \"HDI-ADLS-SPI\"\n$certPassword = \"new_password_here\"\n$certPasswordSecureString = ConvertTo-SecureString $certPassword -AsPlainText -Force\n\nmkdir $certFolder\n\n$cert = New-SelfSignedCertificate -DnsName $certName -CertStoreLocation cert:\\\\CurrentUser\\\\My -KeySpec KeyExchange -NotAfter $certEndDate -NotBefore $certStartDate\n$certThumbprint = $cert.Thumbprint\n$cert = (Get-ChildItem -Path cert:\\\\CurrentUser\\\\My\\\\$certThumbprint)\n\nExport-PfxCertificate -Cert $cert -FilePath $certFilePath -Password $certPasswordSecureString\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Cosmos DB Cassandra API via ARM Template - JSON\nDESCRIPTION: This ARM template automates the creation of an Azure Cosmos DB account with the Cassandra API, supporting deployment in two regions and the definition of a keyspace and table. Required dependencies include Azure Resource Manager and access to Azure subscriptions. Key parameters include consistency level, regions, managed failover option, keyspace/table names, and throughput values. Input is provided via template parameters; output is the provisioned resources. Limitations include needing proper RBAC and compatibility with supported Azure regions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-cassandra/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // Pseudocode for what the ARM template would look like\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"accountName\": {\"type\": \"string\"},\n    \"location\": {\"type\": \"string\"},\n    \"locations\": {\"type\": \"array\"},\n    \"consistencyPolicy\": {\"type\": \"string\", \"defaultValue\": \"Session\"},\n    \"keyspaceName\": {\"type\": \"string\"},\n    \"tableName\": {\"type\": \"string\"},\n    \"throughput\": {\"type\": \"int\", \"defaultValue\": 400},\n    \"enableAutomaticFailover\": {\"type\": \"bool\", \"defaultValue\": false}\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.DocumentDB/databaseAccounts\",\n      \"apiVersion\": \"2021-04-15\",\n      \"name\": \"[parameters('accountName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"kind\": \"GlobalDocumentDB\",\n      \"properties\": {\n        \"databaseAccountOfferType\": \"Standard\",\n        \"locations\": \"[parameters('locations')]\",\n        \"consistencyPolicy\": {\n          \"defaultConsistencyLevel\": \"[parameters('consistencyPolicy')]\"\n        },\n        \"apiProperties\": {\"serverVersion\": \"3.11\"\n        },\n        \"enableAutomaticFailover\": \"[parameters('enableAutomaticFailover')]\",\n        \"capabilities\": [{\"name\": \"EnableCassandra\"}]\n      }\n    },\n    {\n      \"type\": \"Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces\",\n      \"apiVersion\": \"2021-04-15\",\n      \"name\": \"[concat(parameters('accountName'), '/', parameters('keyspaceName'))]\",\n      \"dependsOn\": [\"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]\"]\n    },\n    {\n      \"type\": \"Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables\",\n      \"apiVersion\": \"2021-04-15\",\n      \"name\": \"[concat(parameters('accountName'), '/', parameters('keyspaceName'), '/', parameters('tableName'))]\",\n      \"properties\": {\n        \"resource\": {\"id\": \"[parameters('tableName')]\"},\n        \"options\": {\"throughput\": \"[parameters('throughput')]\"}\n      },\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces', parameters('accountName'), parameters('keyspaceName'))]\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster from Jumpbox\nDESCRIPTION: Bash script for setting up Azure CLI, kubectl, and configuring cluster access credentials on a Jumpbox virtual machine to connect to an AKS cluster.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/private-aks-cluster-with-public-dns-zone/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\nname=\"<name of the AKS cluster>\"\nresourceGroup=\"<name of the AKS resource group>\"\n\n# Install Azure CLI on Ubuntu\ncurl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\n\n# Login with your Azure account\naz login\n\n# Install Kubectl\nsudo az aks install-cli\n\n# Use the following command to configure kubectl to connect to the new Kubernetes cluster\necho \"Getting access credentials configure kubectl to connect to the [\"$aksName\"] AKS cluster...\"\naz aks get-credentials --name $name --resource-group $resourceGroup\n```\n\n----------------------------------------\n\nTITLE: Executing a Pipeline Monitoring Script with Parameters (PowerShell)\nDESCRIPTION: This script execution command invokes `runmonitor.ps1` for monitoring a Data Factory pipeline run. It requires the user to specify the resource group name and data factory name as parameters, which are referenced during script execution. The script must exist in the current working directory, and Azure PowerShell must be authenticated. Returns pipeline status and logs monitoring output.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-transform-using-spark/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n.\\runmonitor.ps1 -resourceGroupName \"<name of your resource group>\" -DataFactoryName \"<name of your data factory>\"\n```\n\n----------------------------------------\n\nTITLE: Bicep Parameter Declaration Example\nDESCRIPTION: Example showing proper parameter declaration in Bicep with descriptions and constraints for Azure Storage SKU selection.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bicep\nCODE:\n```\n    @description('The location into which the resources should be deployed.')\n    param location string = resourceGroup().location\n\n    @description('The name of the SKU to use when creating the Azure Storage account.')\n    @allowed([\n      'Standard_LRS'\n      'Standard_GRS'\n      'Standard_ZRS'\n      'Premium_LRS'\n    ])\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure Data Factory v2 with SSIS Runtime - ARM Template - JSON\nDESCRIPTION: This snippet represents the core ARM template used for deploying an Azure Data Factory v2 instance and configuring an SSIS integration runtime. The template requires the user to provide parameters such as resource names, passwords (using SecureString), and configuration settings for Azure SQL databases and virtual networks. The key resources include Data Factory, Integration Runtime (Managed), SQL Server, Firewall Rules, and Databases. Inputs include resource group context and parameter overrides; the output is a functioning cloud-based SSIS runtime within a Data Factory environment. Limitations include Azure subscription limits and the need to pre-provision or reference compatible networking resources. Dependencies: Azure Resource Manager, referenced resource providers like Microsoft.DataFactory, Microsoft.Sql, and Microsoft.Network.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-provision-ssis-runtime/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"dataFactoryName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Azure Data Factory V2 instance to create.\"\n      }\n    },\n    \"sqlServerName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Azure SQL Server name for hosting SSISDB.\"\n      }\n    },\n    \"sqlAdminPassword\": {\n      \"type\": \"securestring\",\n      \"metadata\": {\n        \"description\": \"SQL Admin password, used with SecureString for security.\"\n      }\n    },\n    \"vnetName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the target Azure Virtual Network.\"\n      }\n    }\n    // ... more parameters as required\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.DataFactory/factories\",\n      \"apiVersion\": \"2018-06-01\",\n      \"name\": \"[parameters('dataFactoryName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"properties\": {\n        // Data Factory properties\n      },\n      \"resources\": [\n        {\n          \"type\": \"integrationRuntimes\",\n          \"apiVersion\": \"2018-06-01\",\n          \"name\": \"AzureSSIS\",\n          \"dependsOn\": [\n            \"[parameters('sqlServerName')]\"\n          ],\n          \"properties\": {\n            \"type\": \"Managed\",\n            \"typeProperties\": {\n              // SSIS IR settings\n              \"catalogInfo\": {\n                \"catalogServerEndpoint\": \"[reference(resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))).fullyQualifiedDomainName]\",\n                \"catalogAdminUserName\": \"[parameters('sqlAdminUser')]\",\n                \"catalogAdminPassword\": {\n                  \"type\": \"SecureString\",\n                  \"value\": \"[parameters('sqlAdminPassword')]\"\n                }\n              },\n              // Networking and node configuration\n            }\n          }\n        }\n      ]\n    },\n    // Additional resources: SQL Server, database, firewall rules, VNet, etc.\n  ],\n  \"outputs\": {\n    // Optional outputs such as deployed resource names\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Event Hubs Namespace with Auto-Inflate using Azure Resource Manager - JSON\nDESCRIPTION: This snippet defines an ARM template resource of type 'Microsoft.EventHub/namespaces' that creates a Standard Event Hub namespace in Azure. It enables the auto-inflate feature, allowing the namespace to scale throughput units automatically, and specifies settings such as SKU, capacity, and location. The template can accept parameters for customization, requires an Azure subscription and appropriate permissions, and expects input values for resource names and configuration details. Outputs include the deployed namespace with auto-inflate enabled, and the template is constrained by Azure's Event Hub resource limits and quota policies.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.eventhub/eventhubs-create-namespace-and-enable-inflate/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"namespaceName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Event Hubs namespace.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Location for all resources.\"\n      }\n    },\n    \"skuName\": {\n      \"type\": \"string\",\n      \"allowedValues\": [\n        \"Standard\",\n        \"Basic\"\n      ],\n      \"defaultValue\": \"Standard\",\n      \"metadata\": {\n        \"description\": \"The SKU name of the Event Hubs namespace.\"\n      }\n    },\n    \"autoInflateEnabled\": {\n      \"type\": \"bool\",\n      \"defaultValue\": true,\n      \"metadata\": {\n        \"description\": \"Indicates if Auto-Inflate is enabled for the Event Hubs namespace.\"\n      }\n    },\n    \"maximumThroughputUnits\": {\n      \"type\": \"int\",\n      \"defaultValue\": 20,\n      \"metadata\": {\n        \"description\": \"The maximum number of throughput units for auto-inflate.\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.EventHub/namespaces\",\n      \"apiVersion\": \"2017-04-01\",\n      \"name\": \"[parameters('namespaceName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"[parameters('skuName')]\",\n        \"tier\": \"[parameters('skuName')]\",\n        \"capacity\": 1\n      },\n      \"properties\": {\n        \"isAutoInflateEnabled\": \"[parameters('autoInflateEnabled')]\",\n        \"maximumThroughputUnits\": \"[parameters('maximumThroughputUnits')]\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Cloning Django Sample Project Repository\nDESCRIPTION: This Git command clones the Microsoft's Django sample project repository to the local machine for deployment to Azure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-django/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\ngit clone https://github.com/microsoft/python-sample-vscode-django-tutorial.git\n```\n\n----------------------------------------\n\nTITLE: Deploying Event Hub Namespace and Event Hub with Bicep Template\nDESCRIPTION: This snippet references using Bicep, a domain-specific language for ARM deployments, to create an Event Hubs namespace and an event hub. The Bicep template will define resources similar to the JSON ARM template, providing higher-level syntax for the same deployment. It leverages the Microsoft.EventHub resource provider, and may require installation of Bicep CLI. Parameters/final outputs are analogous to those in ARM JSON templates; the deployment is managed through Azure CLI or the portal.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.eventhub/eventhubs-create-namespace-and-eventhub/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\n// Bicep template not shown in this markdown, but referenced via badges and documentation.\n// Would declare Microsoft.EventHub/namespaces and eventhubs, parameterized for deployment flexibility.\n// Example reference: https://github.com/Azure/azure-quickstart-templates/tree/master/quickstarts/microsoft.eventhub/eventhubs-create-namespace-and-eventhub/\n\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group using Azure CLI\nDESCRIPTION: This command creates a new Azure Resource Group with a specified name and location.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-flask/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Deploying BGP-Enabled VNet Connections with Azure ARM Template - JSON\nDESCRIPTION: This ARM template configures three Azure vNets within a single region, each provisioned with standard and gateway subnets. For each vNet, a public IP and VPN Gateway are created, with BGP (using either private or public ASNs) enabled on all gateways. The template establishes two BGP connections: from vNet 1 to vNet 2 and vNet 2 to vNet 3, enabling transitive routing between vNets. Required dependencies are Azure Resource Manager, appropriate subscription permissions, and parameter input for the VPN pre-shared key. Input parameters control ASNs and keys; outputs include network and connection objects. This template assumes prior creation of VMs if connectivity testing (e.g., SSH or ping) is desired.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/vnet-transitive-bgp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // ARM template for three vNets with BGP connections\n  \"tags\": [\n    \"Microsoft.Network/virtualNetworks\",\n    \"Microsoft.Network/publicIPAddresses\",\n    \"Microsoft.Network/virtualNetworkGateways\",\n    \"Microsoft.Network/connections\"\n  ]\n  // ... rest of template defining parameters, resources, and outputs ...\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Key Vault Key Details using PowerShell\nDESCRIPTION: This PowerShell command retrieves the details of a specific key within a specified Azure Key Vault. The 'Id' property (representing the key URI/kid) in the output is needed for the 'cmk_keyvault_key_uri' template parameter.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_13\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzureKeyVaultKey -VaultName '<keyvault-name>' -KeyName '<key-name>'\n```\n\n----------------------------------------\n\nTITLE: Configuring Request Routing Rule with Rewrite Set\nDESCRIPTION: Demonstrates how to associate a rewrite rule set with a basic request routing rule in Application Gateway, linking HTTP listener, backend pool, and backend settings.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-rewrite/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"requestRoutingRules\": [\n    {\n      \"Name\": \"HttpRule1\",\n      \"properties\": {\n        \"RuleType\": \"Basic\",\n        \"httpListener\": {\n          \"id\": \"[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('applicationGatewayName'), 'HttpListener')]\"\n        },\n        \"backendAddressPool\": {\n          \"id\": \"[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('applicationGatewayName'), 'appGatewayBackendPool')]\"\n        },\n        \"backendHttpSettings\": {\n          \"id\": \"[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('applicationGatewayName'), 'appGatewayBackendHttpSettings')]\"\n        },\n        \"rewriteRuleSet\": {\n          \"id\": \"[resourceId('Microsoft.Network/applicationGateways/rewriteRuleSets', variables('applicationGatewayName'), 'rewriteRuleSet1')]\"\n        }\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with CLI\nDESCRIPTION: Command to create a new Resource Group in Azure with specified name and location parameters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-simple-linux/GettingStarted-linux.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure Cosmos DB Gremlin API with Autoscale - ARM Template - JSON\nDESCRIPTION: This snippet represents an Azure Resource Manager (ARM) template in JSON format, enabling declarative deployment of an Azure Cosmos DB account using the Gremlin API. It provisions resources including the database account, Gremlin database, and graph, all configured for autoscale throughput. Required parameters include consistency level, primary and secondary regions, graph and database names, failover policy, and maximum RU/s throughput, with minimum throughput of 1000 RU/s enforced. Outputs will typically be resource IDs; limitations follow Azure Cosmos DB service constraints.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-gremlin-autoscale/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.DocumentDB/databaseAccounts, Microsoft.DocumentDB/databaseAccounts/gremlinDatabases, Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs\"\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Cosmos DB Multi-Region Account - Bicep Template - Bicep\nDESCRIPTION: This Bicep file defines an Azure Cosmos DB account resource with support for customizable database API types, geo-redundancy, consistency models, and automatic failover options. Prerequisites include an Azure subscription configured for Bicep deployments and a designated resource group. The Bicep module expects API type, region names, consistency selection, and a boolean for failover. Output is an Azure Cosmos DB account, leveraging Bicep's modular and declarative syntax, suitable for use in DevOps pipelines or ARM-compatible tooling.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-create-multi-region-account/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam accountName string\nparam location string = resourceGroup().location\nparam secondaryLocation string\n@allowed([\n  'SQL'\n  'Cassandra'\n  'Gremlin'\n  'MongoDB'\n  'Table'\n])\nparam apiType string = 'SQL'\n@allowed([\n  'Strong'\n  'BoundedStaleness'\n  'Session'\n  'ConsistentPrefix'\n  'Eventual'\n])\nparam consistencyLevel string = 'Session'\nparam enableAutomaticFailover bool = false\n\nresource cosmosDbAccount 'Microsoft.DocumentDB/databaseAccounts@2021-07-01-preview' = {\n  name: accountName\n  location: location\n  kind: apiType\n  properties: {\n    consistencyPolicy: {\n      defaultConsistencyLevel: consistencyLevel\n    }\n    locations: [\n      {\n        locationName: location\n        failoverPriority: 0\n      }\n      {\n        locationName: secondaryLocation\n        failoverPriority: 1\n      }\n    ]\n    enableAutomaticFailover: enableAutomaticFailover\n  }\n  tags: {}\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Function App with HTTP Trigger and Key Vault - Bicep\nDESCRIPTION: This Bicep snippet demonstrates how to define and deploy an Azure Function App, an HTTP-triggered function inline, Application Insights, a Key Vault, and a Key Vault secret containing the function host key, all as part of a single infrastructure-as-code deployment. It requires Bicep CLI or Azure CLI with Bicep support. Key parameters such as storage account name, app name, and secrets are configured as resource properties, ensuring that all resources are securely wired together. Inputs include resource names and configuration settings, and the output includes fully provisioned Azure resources ready for use.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/function-http-trigger/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\n// Example Bicep template overview (structure will be in actual files)\nresource storageAccount 'Microsoft.Storage/storageAccounts@2021-01-01' = {\n  ...\n}\nresource appInsights 'Microsoft.Insights/components@2020-02-02' = {\n  ...\n}\nresource serverFarm 'Microsoft.Web/serverfarms@2020-12-01' = {\n  ...\n}\nresource functionApp 'Microsoft.Web/sites@2020-12-01' = {\n  ...\n}\nresource function 'Microsoft.Web/sites/functions@2020-12-01' = {\n  ...\n}\nresource keyVault 'Microsoft.KeyVault/vaults@2021-04-01-preview' = {\n  ...\n}\nresource secret 'Microsoft.KeyVault/vaults/secrets@2021-04-01-preview' = {\n  ...\n}\n// HTTP trigger bindings, outputs, and connections between the resources\n\n```\n\n----------------------------------------\n\nTITLE: Using AKS Run Command to access a private AKS cluster\nDESCRIPTION: These Bash commands demonstrate how to use the az aks command invoke feature to remotely execute commands on a private AKS cluster without needing direct access to the cluster network.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/private-aks-cluster-with-public-dns-zone/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz aks command invoke -g <resourceGroup> -n <clusterName> -c \"kubectl get pods -n kube-system\"\n```\n\n----------------------------------------\n\nTITLE: Creating Workspace with Resources Behind Virtual Network using PowerShell\nDESCRIPTION: This PowerShell command creates an Azure ML workspace with dependent resources placed behind a virtual network for enhanced security. It shows how to configure service endpoints and place storage, key vault, and container registry resources behind VNETs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-vnet/README.md#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n# Parameter 'vnetOption' is required for this scenario and should not be 'none'. The example shows how to put the storage account behind vnet. You can also apply the scenario into key vault and container registry. For container registry, only 'Premium' sku is supported.\n\n# Create a workspace with storage account behind a new vnet.\nNew-AzResourceGroupDeployment -ResourceGroupName \"rg\" -TemplateFile \".\\azuredeploy.json\" -workspaceName \"workspaceName\" -location \"westus2\" -Name \"deploymentname\" -storageAccountBehindVNet \"true\" -vnetOption \"new\" -vnetName \"vnet\"\n\n# Create a workspace with storage account behind an existing vnet and an existing subnet.\n# Prerequisite: Subnet should have Microsoft.Storage service endpoint\n# Enable service endpoint\nGet-AzVirtualNetwork -ResourceGroupName \"rg\" -Name \"vnet\" | Set-AzVirtualNetworkSubnetConfig -Name \"subnet\" -AddressPrefix \"<subnet prefix>\" -ServiceEndpoint \"Microsoft.Storage\" | Set-AzVirtualNetwork\n# Deployment\nNew-AzResourceGroupDeployment -ResourceGroupName \"rg\" -TemplateFile \".\\azuredeploy.json\" -workspaceName \"workspaceName\" -location \"westus2\" -Name \"deploymentname\" -storageAccountBehindVNet \"true\" -vnetOption \"existing\" -vnetName \"vnet\" -vnetResourceGroupName \"rg\" -subnetName \"subnet\" -subnetOption \"existing\"\n\n# Create a workspace with all dependent resources behind a new vnet\nNew-AzResourceGroupDeployment -ResourceGroupName \"rg\" -TemplateFile \".\\azuredeploy.json\" -workspaceName \"workspaceName\" -location \"westus2\" -Name \"deploymentname\" -containerRegistryOption \"new\" -containerRegistrySku \"Premium\" -storageAccountBehindVNet \"true\" -keyVaultBehindVNet \"true\" -containerRegistryBehindVNet \"true\" -vnetOption \"new\" -vnetName \"vnet\"\n\n# Create a workspace with all dependent resources behind an existing vnet\n# Service endpoints\nGet-AzVirtualNetwork -ResourceGroupName \"rg\" -Name \"vnet\" | Set-AzVirtualNetworkSubnetConfig -Name \"subnet\" -AddressPrefix \"<subnet prefix>\" -ServiceEndpoint \"Microsoft.Storage\" | Set-AzVirtualNetwork\nGet-AzVirtualNetwork -ResourceGroupName \"rg\" -Name \"vnet\" | Set-AzVirtualNetworkSubnetConfig -Name \"subnet\" -AddressPrefix \"<subnet prefix>\" -ServiceEndpoint \"Microsoft.KeyVault\" | Set-AzVirtualNetwork\nGet-AzVirtualNetwork -ResourceGroupName \"rg\" -Name \"vnet\" | Set-AzVirtualNetworkSubnetConfig -Name \"subnet\" -AddressPrefix \"<subnet prefix>\" -ServiceEndpoint \"Microsoft.ContainerRegistry\" | Set-AzVirtualNetwork\n# Deployment\nNew-AzResourceGroupDeployment -ResourceGroupName \"rg\" -TemplateFile \".\\azuredeploy.json\" -workspaceName \"workspaceName\" -location \"westus2\" -Name \"deploymentname\" -containerRegistryOption \"new\" -containerRegistrySku \"Premium\" -storageAccountBehindVNet \"true\" -keyVaultBehindVNet \"true\" -containerRegistryBehindVNet \"true\" -vnetOption \"existing\" -vnetName \"vnet\" -vnetResourceGroupName \"rg\" -subnetName \"subnet\" -subnetOption \"existing\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Application Gateway with ARM Template - JSON\nDESCRIPTION: This snippet represents an Azure Resource Manager (ARM) template in JSON that provisions an Azure Application Gateway positioned in front of two Azure Web Apps, enabling enhanced traffic routing and monitoring. It requires Azure as a dependency, specifically the resources: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, and Microsoft.Network/applicationGateways. The template expects deployment parameters related to web app configuration and outputs the provisioned infrastructure; it facilitates scalability, secure ingress, and custom health probes.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-webapps/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\": \"This template creates an application gateway in front of two Azure Web Apps with a custom probe enabled.\",\n  \"page_type\": \"sample\",\n  \"products\": [\n    \"azure\",\n    \"azure-resource-manager\"\n  ],\n  \"urlFragment\": \"application-gateway-webapps\",\n  \"languages\": [\n    \"json\"\n  ]\n  // ... (typically the ARM template body would follow here)\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Cosmos DB Table API with Autoscale - Bicep Template - Bicep\nDESCRIPTION: This snippet uses Bicep syntax to provision an Azure Cosmos DB account for Table API with autoscale throughput settings and a table resource. It leverages parameterization for region selection, consistency level, autoscale max RU/s, and table name. The deployment requires ARM/Bicep CLI tools and depends on Azure's Microsoft.DocumentDB resource provider. Input parameters must be provided for both DB and table setup. Outputs are the created Cosmos DB account and an autoscale-enabled table. Note that Bicep compiles to ARM JSON; minimum throughput is 1000 RU/s.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-table-autoscale/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam accountName string\nparam consistencyLevel string = 'Session'\nparam primaryRegion string\nparam secondaryRegion string\nparam systemManagedFailover bool = false\nparam tableName string\nparam autoscaleMaxThroughput int = 1000\n\nresource cosmosDb 'Microsoft.DocumentDB/databaseAccounts@2021-04-15' = {\n  name: accountName\n  location: primaryRegion\n  kind: 'GlobalDocumentDB'\n  properties: {\n    databaseAccountOfferType: 'Standard'\n    locations: [\n      {\n        locationName: primaryRegion\n        failoverPriority: 0\n      }\n      {\n        locationName: secondaryRegion\n        failoverPriority: 1\n      }\n    ]\n    consistencyPolicy: {\n      defaultConsistencyLevel: consistencyLevel\n    }\n    capabilities: [{\n      name: 'EnableTable'\n    }]\n    enableAutomaticFailover: systemManagedFailover\n  }\n}\n\nresource cosmosTable 'Microsoft.DocumentDB/databaseAccounts/tables@2021-04-15' = {\n  name: '${accountName}/${tableName}'\n  dependsOn: [cosmosDb]\n  properties: {\n    resource: {\n      id: tableName\n    }\n    options: {\n      autoscaleSettings: {\n        maxThroughput: autoscaleMaxThroughput\n      }\n    }\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Web App with Custom Domain and SSL (JSON)\nDESCRIPTION: This ARM template defines resources for creating a web app with a custom domain and optional SSL certificate. It includes parameters for the web app name, hosting plan, and custom domain settings. The template creates an App Service Plan, a Web App, and configures hostname bindings and SSL certificates if specified.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-custom-domain-and-ssl/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\"Microsoft.Web/serverfarms\": \"\", \"Microsoft.Web/sites\": \"\", \"Microsoft.Web/certificates\": \"\", \"Microsoft.Web/sites/hostnameBindings\": \"\"}\n```\n\n----------------------------------------\n\nTITLE: Authorizing Web Sites Resource Provider Access to Key Vault in PowerShell\nDESCRIPTION: PowerShell commands to authorize the Microsoft.Azure.WebSites Resource Provider to access the specified Key Vault. This is a prerequisite step before deploying the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-certificate-from-key-vault/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nLogin-AzureRmAccount\nSet-AzureRmContext -SubscriptionId AZURE_SUBSCRIPTION_ID\nSet-AzureRmKeyVaultAccessPolicy -VaultName KEY_VAULT_NAME -ServicePrincipalName abfa0a7c-a6b6-4736-8310-5855508787cd -PermissionsToSecrets get\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Cosmos DB MongoDB Account Deployment - ARM Template - JSON\nDESCRIPTION: This snippet references an ARM template resource configuration for deploying a Cosmos DB account using the MongoDB API. It allows for parameterizing regions, server version, database and collection names, and throughput settings. Requires Azure Resource Manager with appropriate permissions and is intended for deployment via the Azure portal or CLI. Parameters like 'account name', 'primary region', 'secondary region', and read/write throughput (RU/s) are emphasized, with recommended defaults provided in guidance.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-mongodb/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.DocumentDB/databaseAccounts, Microsoft.DocumentDB/databaseAccounts/mongodbDatabases, Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Cosmos DB Account, App Service Plan, and Web App using Azure Bicep Template - Bicep\nDESCRIPTION: This Bicep template snippet condenses Azure resource deployment by programmatically creating a Cosmos DB account, an App Service Plan, and a Web App in Azure. The Web App is configured with two application settings for referencing the Cosmos DB endpoint. Dependencies include support for Bicep deployment, access to Microsoft.DocumentDB and Microsoft.Web resources, and permission to create resources at the subscription or resource group level. Key parameters include the database account name, app service plan name, and web app name. The outputs and resource relationships mirror the ARM template implementation, and the template is intended as a cross-compatible alternative to the JSON version for users who prefer Bicep syntax.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/documentdb-webapp/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam databaseAccountName string\nparam appServicePlanName string\nparam webAppName string\n\nresource cosmosDbAccount 'Microsoft.DocumentDB/databaseAccounts@2021-04-15' = {\n  name: databaseAccountName\n  location: resourceGroup().location\n  kind: 'GlobalDocumentDB'\n  properties: {\n    databaseAccountOfferType: 'Standard'\n    locations: [\n      {\n        locationName: resourceGroup().location\n        failoverPriority: 0\n      }\n    ]\n  }\n}\n\nresource appServicePlan 'Microsoft.Web/serverfarms@2021-02-01' = {\n  name: appServicePlanName\n  location: resourceGroup().location\n  sku: {\n    name: 'S1'\n    tier: 'Standard'\n  }\n  properties: {\n    reserved: false\n  }\n}\n\nresource webApp 'Microsoft.Web/sites@2021-02-01' = {\n  name: webAppName\n  location: resourceGroup().location\n  properties: {\n    serverFarmId: appServicePlan.id\n    siteConfig: {\n      appSettings: [\n        {\n          name: 'COSMOSDB_ENDPOINT'\n          value: cosmosDbAccount.properties.documentEndpoint\n        }\n        {\n          name: 'COSMOSDB_ACCOUNTNAME'\n          value: databaseAccountName\n        }\n      ]\n    }\n  }\n  dependsOn: [\n    appServicePlan\n    cosmosDbAccount\n  ]\n}\n\noutput cosmosDbAccountEndpoint string = cosmosDbAccount.properties.documentEndpoint\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Backup Protection for Azure IaaS VMs Using ARM Template - JSON\nDESCRIPTION: This snippet represents an ARM template in JSON format that configures backup protection for both Classic and ARM-based Azure IaaS VMs using a specified Recovery Services vault and backup policy. It depends on having an existing vault and policy, and requires details such as the VM IDs, location, and policy ID as parameters. The template provisions protected items under the relevant backup containers, ensuring VMs are registered for scheduled backups according to the specified policy. Input parameters must include references to existing resources within the same Azure geography, and the template does not create new vaults or policies.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-backup-classic-resource-manager-vms/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"// Example JSON ARM template structure for VM backup\\n{\\n  \\\"$schema\\\": \\\"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\\\",\\n  \\\"contentVersion\\\": \\\"1.0.0.0\\\",\\n  \\\"parameters\\\": {\\n    \\\"vaultName\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"policyId\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"vmList\\\": {\\n      \\\"type\\\": \\\"array\\\"\\n    }\\n  },\\n  \\\"resources\\\": [\\n    {\\n      \\\"type\\\": \\\"Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems\\\",\\n      \\\"apiVersion\\\": \\\"2022-08-01\\\",\\n      \\\"name\\\": \\\"[concat(parameters('vaultName'), '/Azure/protectionContainerName/protectedItemName')]\\\",\\n      \\\"properties\\\": {\\n        \\\"policyId\\\": \\\"[parameters('policyId')]\\\",\\n        \\\"sourceResourceId\\\": \\\"[array(parameters('vmList'))[0]]\\\"\\n      }\\n    }\\n    // ... repeat for each VM\\n  ]\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure Databricks Workspace with VNet Injection - ARM Template - JSON\nDESCRIPTION: The ARM template allows automated deployment of an Azure Databricks workspace within a custom virtual network (VNet) environment. It leverages the Microsoft.Databricks/workspaces, Microsoft.Network/virtualNetworks, and Microsoft.Network/networkSecurityGroups resources to configure networking, security, and Databricks service parameters. The template requires parameters for workspace, VNet, and network security configuration, and is compatible with the Azure Resource Manager deployment model.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-workspace-with-vnet-injection/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"workspaceName\": {\n      \"type\": \"string\"\n    },\n    \"location\": {\n      \"type\": \"string\"\n    },\n    \"vnetName\": {\n      \"type\": \"string\"\n    },\n    \"addressPrefix\": {\n      \"type\": \"string\"\n    },\n    \"subnetName\": {\n      \"type\": \"string\"\n    },\n    \"subnetPrefix\": {\n      \"type\": \"string\"\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Network/virtualNetworks\",\n      \"apiVersion\": \"2021-02-01\",\n      \"name\": \"[parameters('vnetName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"addressSpace\": {\n          \"addressPrefixes\": [\n            \"[parameters('addressPrefix')]\"\n          ]\n        },\n        \"subnets\": [\n          {\n            \"name\": \"[parameters('subnetName')]\",\n            \"properties\": {\n              \"addressPrefix\": \"[parameters('subnetPrefix')]\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"type\": \"Microsoft.Databricks/workspaces\",\n      \"apiVersion\": \"2021-04-01\",\n      \"name\": \"[parameters('workspaceName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]\"\n      ],\n      \"sku\": {\n        \"name\": \"premium\"\n      },\n      \"properties\": {\n        \"parameters\": {},\n        \"customVirtualNetworkId\": \"[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]\",\n        \"customPublicSubnetName\": \"[parameters('subnetName')]\"\n      }\n    }\n  ]\n}\n\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with Azure CLI\nDESCRIPTION: Command to create a new Azure Resource Group using Azure CLI with a specified name and location.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/postgre/postgresql-standalone-server-ubuntu/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure AI Foundry Hub Workspace Network with Azure CLI\nDESCRIPTION: Command to provision or reprovision the managed virtual network for an Azure AI Foundry hub workspace. This is necessary when public network access to dependent resources is disabled after initial creation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/aifoundry-networking-aoao/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz ml workspace provision-network --name my_hub_workspace_name --resource-group\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Databricks Workspace and Network Resources using Bicep/ARM - JSON\nDESCRIPTION: This snippet (referenced by deployment badges and links) represents an ARM template in JSON, possibly optionally authored in Bicep and compiled to JSON, for deploying an Azure Databricks workspace with VNet injection, Private Endpoint, NSG, and DNS zone links. It requires no code changes and requires an Azure subscription for deployment. Parameters such as workspace SKU, virtual network config, and resource names can be specified on deployment. The template expects input resource and configuration parameters, and deploys Databricks and associated networking infrastructure as described in the documentation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-all-in-one-template-for-vnet-injection-privateendpoint/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Databricks/workspaces, Microsoft.Network/privateEndpoints, Microsoft.Network/privateDnsZones, Microsoft.Network/privateDnsZones/virtualNetworkLinks, Microsoft.Network/privateEndpoints/privateDnsZoneGroups\"\n```\n\n----------------------------------------\n\nTITLE: Assigning Contributor Role to Service Principal using Azure CLI\nDESCRIPTION: This Azure CLI command assigns the 'Contributor' role to a specified service principal (identified by its object ID) within a specific Azure subscription (identified by its ID). This grants the service principal broad permissions required for resource deployment, specifically for the Azure Machine Learning service principal.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz role assignment create --role 'Contributor' --assignee-object-id <object-ID> --subscription <subscription-ID>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Azure VM via WinRM PowerShell Script\nDESCRIPTION: PowerShell script to establish a secure WinRM connection to an Azure VM. The script uses SSL and skips CA certificate verification. It prompts for VM credentials and establishes a PowerShell session over port 5986.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vm-winrm-windows/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$hostName=<fqdn-of-vm> # example: \"myvm.westus.cloudapp.azure.com\"\n$winrmPort = '5986'\n\n# Get the credentials of the machine\n$cred = Get-Credential\n\n# Connect to the machine\n$soptions = New-PSSessionOption -SkipCACheck\nEnter-PSSession -ComputerName $hostName -Port $winrmPort -Credential $cred -SessionOption $soptions -UseSSL\n```\n\n----------------------------------------\n\nTITLE: Automating VM Validation and Storage Access using Azure Custom Script Extension (Bash)\nDESCRIPTION: This Bash script is invoked by the Azure Custom Script Extension on Linux VMs to configure the system, validate connectivity, and interact with Azure Storage services using the Azure CLI. It updates the VM's OS packages, installs required tools (curl, traceroute, NGINX), customizes the NGINX default page, performs DNS lookups to verify network and DNS configurations, tests reaching virtual machine web servers by FQDN, and ensures that Data Lake and Blob storage endpoints are resolved to private IPs. The script downloads Azure CLI, authenticates using the managed identity, and creates file systems, directories, and files in ADLS Gen2 Storage. Parameters such as FQDNs, storage account names, and file contents are passed to facilitate full automation; output and error handling are assumed to be managed within the extension framework or script logic.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azure-firewall-dns-proxy/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n\n# Validate parameters\nif [ $# -lt 5 ]; then\n  echo \"Usage: $0 <vm1_fqdn> <vm2_fqdn> <adls_account> <blob_account> <file_content>\"\n  exit 1\nfi\n\nVM1_FQDN=\"$1\"\nVM2_FQDN=\"$2\"\nADLS_ACCOUNT=\"$3\"\nBLOB_ACCOUNT=\"$4\"\nFILE_CONTENT=\"$5\"\n\n# Update system and upgrade packages\nsudo apt-get update -y\nsudo apt-get upgrade -y\n\n# Install required packages\nsudo apt-get install -y curl traceroute nginx\n\n# Customize the main page of NGINX\nVM_NAME=$(hostname)\necho \"Welcome to $VM_NAME\" | sudo tee /var/www/html/index.nginx-debian.html\nsudo systemctl restart nginx\n\n# Run nslookup for both VMs\nnslookup \"$VM1_FQDN\"\nnslookup \"$VM2_FQDN\"\n\n# Test reaching webservers via FQDNs\ncurl -v \"http://$VM1_FQDN\"\ncurl -v \"http://$VM2_FQDN\"\n\n# Run nslookup against storage accounts to verify private IP resolution\nnslookup \"$ADLS_ACCOUNT.dfs.core.windows.net\"\nnslookup \"$BLOB_ACCOUNT.blob.core.windows.net\"\n\n# Download and install Azure CLI\ncurl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\n\n# Login with system assigned managed identity\naz login --identity\n\n# Create file system, directory, and file in ADLS Gen2 storage account\ndataLakeFsName=\"myfilesystem\"\ndataLakeDir=\"mydirectory\"\ndataLakeFile=\"myfile.txt\"\n\naz storage fs create --account-name \"$ADLS_ACCOUNT\" --name \"$dataLakeFsName\"\naz storage fs directory create --account-name \"$ADLS_ACCOUNT\" --file-system \"$dataLakeFsName\" --name \"$dataLakeDir\"\necho \"$FILE_CONTENT\" > temp_file.txt\naz storage fs file upload --account-name \"$ADLS_ACCOUNT\" --file-system \"$dataLakeFsName\" --path \"$dataLakeDir/$dataLakeFile\" --source temp_file.txt\nrm temp_file.txt\n\n```\n\n----------------------------------------\n\nTITLE: Granting Graph API Permission using PowerShell (Azure AD Cmdlets)\nDESCRIPTION: This PowerShell script grants the 'Application.ReadWrite.All' permission for the Microsoft Graph API to a previously created managed identity using the Azure AD PowerShell module (`AzureAD`). It connects to the specified Azure AD tenant, finds the Microsoft Graph service principal and the required application role, and then assigns this role to the managed identity's service principal using `New-AzureADServiceAppRoleAssignment`. Requires the tenant ID and the managed identity's Object ID.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.resources/deployment-script-azcli-graph-azure-ad/README.md#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n$tenantID = '<Your Azure AD tenant ID>'\nConnect-AzureAD -TenantId $tenantID\n\n# Get the app role for the Graph API.\n$graphAppId = '00000003-0000-0000-c000-000000000000' # This is a well-known Microsoft Graph application ID.\n$graphApiAppRoleName = 'Application.ReadWrite.All'\n$graphServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$graphAppId'\"\n$graphApiAppRole = $graphServicePrincipal.AppRoles | Where-Object {$_.Value -eq $graphApiAppRoleName -and $_.AllowedMemberTypes -contains \"Application\"}\n\n# Assign the role to the managed identity.\nNew-AzureADServiceAppRoleAssignment `\n  -ObjectId $managedIdentityObjectId `\n  -PrincipalId $managedIdentityObjectId `\n  -ResourceId $graphServicePrincipal.ObjectId `\n  -Id $graphApiAppRole.Id\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types used in the Template\nDESCRIPTION: This snippet lists the Azure resource provider namespaces and types utilized within the associated ARM template. It includes resources for managed identities, role assignments, deployment scripts, deployments, and Key Vault secrets, tagged under 'UserAssigned'.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.resources/deployment-script-ssh-key-gen/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.ManagedIdentity/userAssignedIdentities, Microsoft.Authorization/roleAssignments, Microsoft.Resources/deploymentScripts, UserAssigned, Microsoft.Resources/deployments, Microsoft.KeyVault/vaults/secrets`\n```\n\n----------------------------------------\n\nTITLE: Deploying SQL Server and Dedicated SQL Pool with TDE using Azure Bicep\nDESCRIPTION: This snippet uses Azure Bicep, a domain-specific language for ARM template authoring, to declare resources for a SQL Server and a Dedicated SQL pool, with Transparent Data Encryption enabled. Bicep requires the Azure CLI or Azure PowerShell with Bicep tooling installed and is transpiled into ARM JSON templates for deployment. The script defines parameters for names, credentials, location, and SKU, and manages dependencies automatically. Inputs follow Bicep's parameter conventions, and outputs align with deployed resource details.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.sql/sql-data-warehouse-transparent-encryption-create/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam sqlServerName string\nparam administratorLogin string\nparam administratorLoginPassword securestring\nparam location string = resourceGroup().location\nparam sqlDatabaseName string\nparam skuName string = 'DW100c'\n\nresource sqlServer 'Microsoft.Sql/servers@2022-02-01-preview' = {\n  name: sqlServerName\n  location: location\n  properties: {\n    administratorLogin: administratorLogin\n    administratorLoginPassword: administratorLoginPassword\n  }\n}\n\nresource sqlDb 'Microsoft.Sql/servers/databases@2022-02-01-preview' = {\n  name: '${sqlServerName}/${sqlDatabaseName}'\n  location: location\n  sku: {\n    name: skuName\n  }\n  properties: {\n    createMode: 'Default'\n  }\n}\n\nresource tde 'Microsoft.Sql/servers/databases/transparentDataEncryption@2022-02-01-preview' = {\n  name: '${sqlServerName}/${sqlDatabaseName}/current'\n  properties: {\n    state: 'Enabled'\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types for Function App with VNet Integration\nDESCRIPTION: This snippet lists the Azure Resource Manager resource types provisioned by the associated template. It includes resources for virtual networks (Microsoft.Network/virtualNetworks), storage accounts (Microsoft.Storage/storageAccounts), Application Insights components (Microsoft.Insights/components), App Service plans (Microsoft.Web/serverfarms), and the Function App itself (Microsoft.Web/sites).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/function-app-vnet-integration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/virtualNetworks, Microsoft.Storage/storageAccounts, Microsoft.Insights/components, Microsoft.Web/serverfarms, Microsoft.Web/sites`\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resources for WordPress Deployment\nDESCRIPTION: This JSON snippet defines the Azure resources required for deploying a WordPress blog using Docker containers. It includes storage accounts, network interfaces, virtual networks, and virtual machines configured with the Docker extension.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/wordpress/docker-wordpress-mysql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": \"Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Network/networkSecurityGroups, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, DockerExtension\"\n```\n\n----------------------------------------\n\nTITLE: Metadata JSON Schema Example\nDESCRIPTION: Required structure for metadata.json file in Azure Quickstart Templates, including display name, description, and other mandatory fields.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md#2025-04-23_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/...\",\n  \"itemDisplayName\": \"60 char limit\",\n  \"description\": \"1000 char limit\",\n  \"summary\": \"200 char limit\",\n  \"githubUsername\": \"<e.g. bmoore-msft>\",\n  \"dateUpdated\": \"<e.g. 2015-12-20>\",\n  \"type\": \"QuickStart\"\n}\n```\n\n----------------------------------------\n\nTITLE: Provisioning AKS Private Compute for Azure ML via Bicep Template - Bicep\nDESCRIPTION: This Bicep template provisions an end-to-end Azure Machine Learning environment, deploying an AKS (Azure Kubernetes Service) compute target with a private IP address. It encapsulates Azure resources like storage accounts, Application Insights, Key Vault, Container Registry, ML workspace, and the AKS cluster compute target, with modular design and straightforward parameterization. Dependencies are typically core Azure services and configured resource identities. Inputs require naming, networking, and workspace details, while the output is a configured, private AKS compute resource ready for ML workloads. Constraints may include network access requirements and subscription-level resource limits.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-private-ip/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam location string = resourceGroup().location\nparam workspaceName string\nparam aksComputeName string\nparam vNetName string\nparam subnetName string\n// ... Other parameters\n\nresource storageAccount 'Microsoft.Storage/storageAccounts@2021-02-01' = {\n  name: '${workspaceName}stg'\n  location: location\n  // ... Properties and sku\n}\n\nresource keyVault 'Microsoft.KeyVault/vaults@2021-04-01-preview' = {\n  name: '${workspaceName}kv'\n  location: location\n  // ... Properties\n}\n\nresource appInsights 'Microsoft.Insights/components@2015-05-01' = {\n  name: '${workspaceName}ai'\n  location: location\n  // ... Properties\n}\n\nresource containerRegistry 'Microsoft.ContainerRegistry/registries@2021-06-01-preview' = {\n  name: '${workspaceName}acr'\n  location: location\n  // ... Sku and properties\n}\n\nresource mlWorkspace 'Microsoft.MachineLearningServices/workspaces@2022-02-01-preview' = {\n  name: workspaceName\n  location: location\n  // ... Properties and identity\n}\n\nresource aksCompute 'Microsoft.MachineLearningServices/workspaces/computes@2022-02-01-preview' = {\n  parent: mlWorkspace\n  name: aksComputeName\n  location: location\n  properties: {\n    computeType: 'Aks'\n    properties: {\n      // Reference to vNet/subnet\n      privateIpAddress: true\n      // ... AKS config\n    }\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Databricks Workspace with Default Storage Firewall and CMK - ARM Template - JSON\nDESCRIPTION: This JSON snippet represents an ARM template that provisions an Azure Databricks workspace with a default storage firewall, PrivateEndpoint, all three types of customer-managed keys (CMK), and integrates a user-assigned managed identity access connector. Dependencies include Azure Resource Manager, Microsoft.Databricks resource provider, Key Vault, and a suitable subscription with required permissions. Key parameters control workspace configuration, networking, and key management options. Inputs are typically provided as parameter values during deployment, and the output is a fully provisioned Databricks environment with the specified security postures. Limitations include Azure subscription quotas and the necessity for pre-existing network and key vault infrastructure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-all-in-one-template-for-privateendpoint-cmk-all-forms-default-storage-firewall/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\": \"This template allows you to create an Default Storage Firewall enabled Azure Databricks workspace with Privateendpoint, all three forms of CMK, and User-Assigned Access Connector.\",\n  \"page_type\": \"sample\",\n  \"products\": [\n    \"azure\",\n    \"azure-resource-manager\"\n  ],\n  \"urlFragment\": \"databricks-all-in-one-template-for-privateendpoint-cmk-all-forms-default-storage-firewall\",\n  \"languages\": [\n    \"json\"\n  ]\n  // (The full deployable ARM template would follow, including resource declarations such as Microsoft.Databricks/workspaces, Microsoft.Resources/deployments, Microsoft.KeyVault/vaults/accessPolicies, parameters, variables, and outputs.)\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Encrypted Managed Disk using Azure Resource Manager Template\nDESCRIPTION: This ARM template deploys a new encrypted managed disk in Azure. It requires an existing encrypted VHD file and its corresponding encryption settings. The template uses the Microsoft.Compute/disks resource to create the managed disk with the specified encryption configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/create-encrypted-managed-disk/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Resources/deployments, Microsoft.Compute/disks\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Container Registry with Geo-replication\nDESCRIPTION: A template that deploys an Azure Container Registry in Premium SKU to support geo-replication capabilities. The template enables setting up registry replications across multiple Azure regions for improved performance and availability.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerregistry/container-registry-geo-replication/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Solution overview and deployed resources\n\nThe following resources are deployed as part of the solution. Note the Azure Container Registry is set to **Premium** sku which is required to support Geo-Replication.\n\n- **Azure Container Registry**: Docker image registry\n- **Geo-Replicated registry**:  Docker image registry replication\n\n## Login to your registry\n\nFollow [this documentation](https://docs.microsoft.com/azure/container-registry/container-registry-authentication) to authenticate your docker client to your container registry.\n\n## Push images to your registry\n\nFor pushing docker images on your registry, follow [this documentation](https://docs.microsoft.com/azure/container-registry/container-registry-get-started-docker-cli).\n```\n\n----------------------------------------\n\nTITLE: Creating Storage Account with Service Encryption - Azure Resource Manager Template - JSON\nDESCRIPTION: This ARM template defines the resources required to provision an Azure Storage Account with Storage Service Encryption enabled for data at rest. It typically includes parameters for resource naming, location, and encryption settings, and leverages the Microsoft.Storage/storageAccounts resource type. Dependencies include having access to Azure Resource Manager and an appropriate Azure subscription. Inputs include parameters like location and storage account name, and it outputs the deployed, encrypted storage account resource. Key constraints are Azure subscription permissions and compliance with naming rules.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage/storage-account-service-encryption-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // ARM template schema\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"storageAccountName\": {\n      \"type\": \"string\",\n      \"minLength\": 3,\n      \"maxLength\": 24\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\"\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts\",\n      \"apiVersion\": \"2022-09-01\",\n      \"name\": \"[parameters('storageAccountName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"Standard_LRS\"\n      },\n      \"kind\": \"StorageV2\",\n      \"properties\": {\n        \"encryption\": {\n          \"services\": {\n            \"blob\": {\n              \"enabled\": true\n            },\n            \"file\": {\n              \"enabled\": true\n            }\n          },\n          \"keySource\": \"Microsoft.Storage\"\n        },\n        \"accessTier\": \"Hot\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating URIs for Artifacts in JSON\nDESCRIPTION: Shows how to construct URIs for deployment artifacts using the uri() function in JSON. This example builds URIs for both scripts and nested templates with proper SAS token handling.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n\"variables\": {\n        \"scriptFileUri\": \"[uri(parameters('_artifactsLocation'), concat('scripts/configuration.sh', parameters('_artifactsLocationSasToken')))]\",\n        \"nestedtemplateUri\": \"[uri(parameters('_artifactsLocation'), concat('nestedtemplates/jumpbox.json', parameters('_artifactsLocationSasToken')))]\"\n    },\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Resource Type Routing with Endpoint in ARM Template - JSON\nDESCRIPTION: This snippet defines a new custom resource API extension ('customResources') as part of the 'resourceTypes' array inside an Azure Resource Manager template. It specifies routing settings like operating in secure mode, using both webhook and cache behaviors, and sets the endpoint dynamically to a Logic App callback. Dependencies include having an Azure Logic App deployed with the required workflow and trigger. Key properties are 'name' (resource type), 'mode' (optional security), 'routingType' (webhook and/or cache), and 'endpoint' (Logic App trigger URL). This structure enables extension of the ARM API for custom scenarios, and the snippet should be placed within a 'resourceProviders' resource entry.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.customproviders/custom-rp-with-logicapp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"resourceTypes\": [\\n    {\\n        \\\"name\\\": \\\"customResources\\\",\\n        \\\"mode\\\": \\\"Secure\\\",\\n        \\\"routingType\\\": \\\"Webhook,Cache\\\",\\n        \\\"endpoint\\\": \\\"[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '/triggers/CustomProviderWebhook'), '2017-07-01').value]\\\"\\n    }\\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Metadata Tags for Azure Quickstart Template (Plain Text)\nDESCRIPTION: This snippet defines metadata tags used to categorize the Azure Quickstart Template. The tags 'finops', 'cost', and 'optimization' relate to the template's purpose, while 'Microsoft.Insights/workbooks' indicates the primary Azure resource type being deployed. These tags help users find relevant templates in the Azure Quickstart Templates gallery.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.costmanagement/optimization-workbook/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: finops, cost, optimization, Microsoft.Insights/workbooks`\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure ExpressRoute VNET Connection\nDESCRIPTION: Azure Resource Manager template that creates a Virtual Network, ExpressRoute Gateway, and connection resources. It requires an existing provisioned ExpressRoute circuit with AzurePrivatePeering configured as a prerequisite. The template handles all networking components needed for the ExpressRoute connection.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/expressroute-circuit-vnet-connection/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tags\": \"Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworkGateways, Microsoft.Network/connections\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying manifests from a folder to AKS using Run Command\nDESCRIPTION: This Bash command demonstrates how to deploy Kubernetes manifests to a private AKS cluster by attaching an entire folder to the az aks command invoke operation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/private-aks-cluster-with-public-dns-zone/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz aks command invoke -g <resourceGroup> -n <clusterName> -c \"kubectl apply -f deployment.yaml -n default\" -f .\n```\n\n----------------------------------------\n\nTITLE: Deploying Windows VM and Backup with ARM Templates in Bicep\nDESCRIPTION: This Bicep template snippet enables the deployment of a Windows VM along with a Recovery Services Vault configured with backup protection under the DefaultPolicy. Required dependencies include Bicep tooling, access to Azure Resource Manager, and appropriate permissions for resource creation. The template expects input parameters for resources like network, storage, and policy; outputs are a fully configured VM and connected services. Limitations may include Azure subscription quotas and supported resource types.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-create-vm-and-configure-backup/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\n\"// Bicep template defining the same Azure resources and configuration\\n// as the ARM template: storage, networking, VM, and Recovery Services Vault\\n// with backup enabled using DefaultPolicy.\\n\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Principal Secret with Azure Key Vault in JSON\nDESCRIPTION: This snippet demonstrates how to reference a service principal client secret stored in Azure Key Vault within the ARM template parameters file. It replaces the default empty value with a reference to the Key Vault secret.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.kubernetes/aks/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"servicePrincipalClientSecret\": {\n  \"reference\": {\n    \"keyVault\": {\n      \"id\": \"<specify Resource ID of the Key Vault you are using>\"\n    },\n    \"secretName\": \"<specify name of the secret in the Key Vault to get the service principal password from>\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure SQL Logical Server via Bicep - Bicep\nDESCRIPTION: This Bicep template provisions an Azure SQL logical server, incorporating resource definitions and parameters for login, password, and location, and can attach additional configurations like firewall rules or threat protection as needed. Prerequisites include Bicep CLI installation and Azure CLI or portal access. Key parameters are consistent with the ARM template; inputs drive server configuration and access. Deployment returns the SQL server resource; limitations include Azure region and quota restrictions as well as parameter validation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.sql/sql-logical-server/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\n\"// Place your Bicep template here or see the equivalent quickstart file.\\n// Example snippet:\\nparam serverName string\\nparam administratorLogin string\\nparam administratorLoginPassword secureString\\nparam location string = resourceGroup().location\\n\\nresource sqlServer 'Microsoft.Sql/servers@2021-08-01' = {\\n  name: serverName\\n  location: location\\n  properties: {\\n    administratorLogin: administratorLogin\\n    administratorLoginPassword: administratorLoginPassword\\n  }\\n}\\n// Additional sub-resources (firewall, threat protection) can be added in Bicep as needed. \"\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Manager Template Resource Tags - JSON\nDESCRIPTION: This snippet lists the top-level resource types (tags) used in the ARM template to provision a Function App on a consumption plan. It includes resources for storage accounts, service plans, function app sites, application insights components, and system-assigned managed identities. These tags guide the structure of the template, with each representing a required Azure resource. No actual resources are defined here; instead, this serves as a high-level reference for users customizing or interpreting the full template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/function-app-create-dynamic/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Web/serverfarms, Microsoft.Web/sites, SystemAssigned, Microsoft.Insights/components\"\n```\n\n----------------------------------------\n\nTITLE: Tagging Azure Resource Types for Deployment Scenarios - Bicep/ARM - JSON\nDESCRIPTION: This snippet lists Azure resource types as tags for ARM/Bicep deployment templates. Its purpose is to document and inform users or automation systems about the resources involved in the deployment, such as private endpoints, DNS zones, storage accounts, and function/monitoring components. Dependencies include Azure Resource Manager or Bicep deployments referencing these resource types; the tag list is meant for organizational or consumption purposes and is not an executable code block.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/function-app-storage-private-endpoints/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/privateDnsZones/virtualNetworkLinks, Microsoft.Network/privateEndpoints/privateDnsZoneGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/privateDnsZones, Microsoft.Network/privateEndpoints, Microsoft.Storage/storageAccounts, Microsoft.Storage/storageAccounts/fileServices/shares, Microsoft.Insights/components, Microsoft.Web/serverfarms, Microsoft.Web/sites\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Windows VM with Azure Secure Baseline using ARM Template\nDESCRIPTION: ARM template for deploying a Windows VM with Azure secure baseline. It creates network resources, deploys the VM, and applies the secure baseline configuration. The template uses tags to identify resource types and purposes.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-windows-baseline/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, ConfigurationforWindows, Microsoft.GuestConfiguration/guestConfigurationAssignments\"\n```\n\n----------------------------------------\n\nTITLE: Executing Docker Commands via SSH Tunnel\nDESCRIPTION: These commands demonstrate how to use Docker CLI to interact with the Swarm cluster after establishing the SSH tunnel. The DOCKER_HOST environment variable is set to use the local port that's forwarded to the Swarm manager.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/swarm/docker-swarm-cluster/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker -H tcp://localhost:2375 info\n\n# Or using environment variable\nexport DOCKER_HOST=:2375\ndocker info\ndocker ps\n```\n\n----------------------------------------\n\nTITLE: Creating User-Assigned Managed Identity using PowerShell\nDESCRIPTION: This PowerShell script creates a new user-assigned managed identity in Azure. It requires the Azure PowerShell module (`Az.ManagedServiceIdentity`). The script defines variables for the identity name, resource group, and location, then uses the `New-AzUserAssignedIdentity` cmdlet to create the identity and captures its Principal ID (Object ID) for later use.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.resources/deployment-script-azcli-graph-azure-ad/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$managedIdentityName = 'MyIdentity'\n$resourceGroupName = 'MyResourceGroup'\n$location = 'westus'\n\n$userAssignedIdentity = New-AzUserAssignedIdentity `\n  -Name $managedIdentityName `\n  -ResourceGroupName $resourceGroupName `\n  -Location $location\n$managedIdentityObjectId = $userAssignedIdentity.PrincipalId\n```\n\n----------------------------------------\n\nTITLE: Defining Parameters in JSON for Azure Resource Manager Templates\nDESCRIPTION: This snippet shows how to define parameters in JSON format for an Azure Resource Manager template. It includes examples of string and integer parameters with descriptions, default values, and constraints.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n    \"storageAccountName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[concat('storage', uniqueString(resourceGroup().id))]\",\n      \"metadata\": {\n        \"description\": \"Name of the storage account\"\n      }\n    },\n    \"vmCount\": {\n      \"type\": \"int\",\n      \"defaultValue\": 2,\n      \"minValue\": 2,\n      \"maxValue\": 8,\n      \"metadata\": {\n        \"description\": \"Name of the storage account\"\n      }\n    }\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure Cosmos DB (SQL API) Account - ARM Template (JSON)\nDESCRIPTION: This JSON ARM template snippet provisions an Azure Cosmos DB SQL API account with a free-tier option, setting up a database (with shared throughput set at 1000 RU/s) and a container. Deployable via Azure Portal or Azure CLI, this requires resource manager permissions and standard Azure resource provider registration. Parameters such as location and account name are customizable; the resulting resources obey the free-tier limit per subscription and storage/throughput constraints.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-free/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"{\\n  \\\"$schema\\\": \\\"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\\\",\\n  \\\"contentVersion\\\": \\\"1.0.0.0\\\",\\n  \\\"parameters\\\": {\\n    \\\"location\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"accountName\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"databaseName\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"containerName\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"resources\\\": [\\n    {\\n      \\\"type\\\": \\\"Microsoft.DocumentDB/databaseAccounts\\\",\\n      \\\"apiVersion\\\": \\\"2021-06-15\\\",\\n      \\\"name\\\": \\\"[parameters('accountName')]\\\",\\n      \\\"location\\\": \\\"[parameters('location')]\\\",\\n      \\\"kind\\\": \\\"GlobalDocumentDB\\\",\\n      \\\"properties\\\": {\\n        \\\"databaseAccountOfferType\\\": \\\"Standard\\\",\\n        \\\"locations\\\": [\\n          {\\n            \\\"locationName\\\": \\\"[parameters('location')]\\\",\\n            \\\"failoverPriority\\\": 0,\\n            \\\"isZoneRedundant\\\": false\\n          }\\n        ],\\n        \\\"enableFreeTier\\\": true,\\n        \\\"apiProperties\\\": {\\n          \\\"serverVersion\\\": \\\"3.2\\\"\\n        },\\n        \\\"consistencyPolicy\\\": {\\n          \\\"defaultConsistencyLevel\\\": \\\"Session\\\"\\n        }\\n      }\\n    },\\n    {\\n      \\\"type\\\": \\\"Microsoft.DocumentDB/databaseAccounts/sqlDatabases\\\",\\n      \\\"apiVersion\\\": \\\"2021-06-15\\\",\\n      \\\"name\\\": \\\"[format('{0}/{1}', parameters('accountName'), parameters('databaseName'))]\\\",\\n      \\\"properties\\\": {\\n        \\\"resource\\\": {\\n          \\\"id\\\": \\\"[parameters('databaseName')]\\\"\\n        },\\n        \\\"options\\\": {\\n          \\\"throughput\\\": 1000\\n        }\\n      },\\n      \\\"dependsOn\\\": [\\n        \\\"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]\\\"\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers\\\",\\n      \\\"apiVersion\\\": \\\"2021-06-15\\\",\\n      \\\"name\\\": \\\"[format('{0}/{1}/{2}', parameters('accountName'), parameters('databaseName'), parameters('containerName'))]\\\",\\n      \\\"properties\\\": {\\n        \\\"resource\\\": {\\n          \\\"id\\\": \\\"[parameters('containerName')]\\\",\\n          \\\"partitionKey\\\": {\\n            \\\"paths\\\": [\\n              \\\"/myPartitionKey\\\"\\n            ],\\n            \\\"kind\\\": \\\"Hash\\\"\\n          }\\n        },\\n        \\\"options\\\": {}\\n      },\\n      \\\"dependsOn\\\": [\\n        \\\"[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('accountName'), parameters('databaseName'))]\\\"\\n      ]\\n    }\\n  ]\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Using KeyVault References for Secure Credentials in AKS Deployment\nDESCRIPTION: This JSON snippet demonstrates how to securely reference secrets stored in Azure KeyVault when deploying an AKS cluster, specifically for the servicePrincipalClientSecret parameter. This approach avoids hardcoding sensitive information in deployment templates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.kubernetes/aks-helm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"servicePrincipalClientSecret\": {\n  \"reference\": {\n    \"keyVault\": {\n      \"id\": \"<specify Resource ID of the Key Vault you are using>\"\n    },\n    \"secretName\": \"<specify name of the secret in the Key Vault to get the service principal password from>\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating IoT Edge Device in Azure IoT Hub\nDESCRIPTION: This command creates a new IoT Edge device in the specified IoT Hub using Azure CLI. It enables edge capabilities for the device named 'myEdgeDevice'.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iot-iothub-edgeemulator-vm/GettingStarted-Iot-EdgeEmulator.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naz iot hub device-identity create --hub-name {hub_name} --device-id myEdgeDevice --edge-enabled\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Cloud Shell VNet Storage with ARM Template\nDESCRIPTION: This ARM template snippet demonstrates the deployment of Azure Cloud Shell storage resources into a virtual network. It includes the creation of a storage account, blob services, file services, and file shares required for Cloud Shell operation in a VNet environment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/cloud-shell-vnet-storage/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"resources\": [\n  {\n    \"type\": \"Microsoft.Storage/storageAccounts\",\n    \"apiVersion\": \"2021-04-01\",\n    \"name\": \"[parameters('storageAccountName')]\",\n    \"location\": \"[parameters('location')]\",\n    \"sku\": {\n      \"name\": \"Standard_LRS\"\n    },\n    \"kind\": \"StorageV2\",\n    \"properties\": {\n      \"networkAcls\": {\n        \"bypass\": \"AzureServices\",\n        \"virtualNetworkRules\": [\n          {\n            \"id\": \"[parameters('subnetResourceId')]\",\n            \"action\": \"Allow\"\n          }\n        ],\n        \"defaultAction\": \"Deny\"\n      },\n      \"supportsHttpsTrafficOnly\": true,\n      \"encryption\": {\n        \"services\": {\n          \"file\": {\n            \"enabled\": true\n          },\n          \"blob\": {\n            \"enabled\": true\n          }\n        },\n        \"keySource\": \"Microsoft.Storage\"\n      }\n    }\n  },\n  {\n    \"type\": \"Microsoft.Storage/storageAccounts/blobServices\",\n    \"apiVersion\": \"2021-04-01\",\n    \"name\": \"[format('{0}/default', parameters('storageAccountName'))]\",\n    \"properties\": {\n      \"cors\": {\n        \"corsRules\": []\n      },\n      \"deleteRetentionPolicy\": {\n        \"enabled\": false\n      }\n    },\n    \"dependsOn\": [\n      \"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]\"\n    ]\n  },\n  {\n    \"type\": \"Microsoft.Storage/storageAccounts/fileServices\",\n    \"apiVersion\": \"2021-04-01\",\n    \"name\": \"[format('{0}/default', parameters('storageAccountName'))]\",\n    \"properties\": {\n      \"protocolSettings\": {\n        \"smb\": {}\n      },\n      \"cors\": {\n        \"corsRules\": []\n      }\n    },\n    \"dependsOn\": [\n      \"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]\"\n    ]\n  },\n  {\n    \"type\": \"Microsoft.Storage/storageAccounts/fileServices/shares\",\n    \"apiVersion\": \"2021-04-01\",\n    \"name\": \"[format('{0}/default/{1}', parameters('storageAccountName'), parameters('fileShareName'))]\",\n    \"properties\": {\n      \"accessTier\": \"TransactionOptimized\",\n      \"shareQuota\": 6,\n      \"enabledProtocols\": \"SMB\"\n    },\n    \"dependsOn\": [\n      \"[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccountName'), 'default')]\",\n      \"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]\"\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Sonarqube with MySQL\nDESCRIPTION: This ARM template defines the resources needed to run Sonarqube on Azure, including a Linux Web App and MySQL database. It specifies parameters for naming and configuring the resources, and sets up the necessary connections between the web app and database.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-sonarqube-mysql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\n  \"Microsoft.Web/sites\": \"config\",\n  \"Microsoft.Web/serverfarms\": \"\",\n  \"Microsoft.DBforMySQL/servers\": \"firewallrules, databases\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Resource Group (Shell)\nDESCRIPTION: This Azure CLI snippet creates a new Resource Group, a logical container for Azure resources. Replace \\\"resource-group\\\" with your desired group name, and \\\"your location\\\" with a valid Azure region. This step is required before deploying infrastructure templates or resources, as resources must be bound to a group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iothub-with-consumergroup-create/GettingStarted.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Cosmos DB Table API with Autoscale - ARM Template - JSON\nDESCRIPTION: This snippet deploys an Azure Cosmos DB account for the Table API with autoscale throughput, configuring two regions for geo-redundancy and a table resource. Requires dependencies on Azure Resource Manager, Microsoft.DocumentDB provider, and a valid parameter values file. Key parameters include consistencyLevel, locations for primary and secondary regions, systemManagedFailover, tableName, and autoscaleMaxThroughput. The template expects inputs via parameters or a parameters file and produces a Cosmos DB account with a table that can auto-scale up to specified RU/s. Minimum RU/s is enforced at 1000; ensure destinations support Cosmos DB Table API.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-table-autoscale/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"accountName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Specifies the name of the Cosmos DB account.\"\n      }\n    },\n    \"consistencyLevel\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"Session\",\n      \"allowedValues\": [\n        \"Eventual\",\n        \"ConsistentPrefix\",\n        \"Session\",\n        \"BoundedStaleness\",\n        \"Strong\"\n      ],\n      \"metadata\": {\n        \"description\": \"Cosmos DB consistency level.\"\n      }\n    },\n    \"primaryRegion\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Primary Azure region for Cosmos DB account.\"\n      }\n    },\n    \"secondaryRegion\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Secondary (geo-redundant) Azure region.\"\n      }\n    },\n    \"systemManagedFailover\": {\n      \"type\": \"bool\",\n      \"defaultValue\": false,\n      \"metadata\": {\n        \"description\": \"Enable system-managed failover.\"\n      }\n    },\n    \"tableName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Cosmos DB table.\"\n      }\n    },\n    \"autoscaleMaxThroughput\": {\n      \"type\": \"int\",\n      \"defaultValue\": 1000,\n      \"minValue\": 1000,\n      \"metadata\": {\n        \"description\": \"Maximum autoscale throughput (RU/s).\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.DocumentDB/databaseAccounts\",\n      \"apiVersion\": \"2021-04-15\",\n      \"name\": \"[parameters('accountName')]\",\n      \"location\": \"[parameters('primaryRegion')]\",\n      \"kind\": \"GlobalDocumentDB\",\n      \"properties\": {\n        \"databaseAccountOfferType\": \"Standard\",\n        \"locations\": [\n          {\n            \"locationName\": \"[parameters('primaryRegion')]\",\n            \"failoverPriority\": 0\n          },\n          {\n            \"locationName\": \"[parameters('secondaryRegion')]\",\n            \"failoverPriority\": 1\n          }\n        ],\n        \"consistencyPolicy\": {\n          \"defaultConsistencyLevel\": \"[parameters('consistencyLevel')]\"\n        },\n        \"capabilities\": [\n          { \"name\": \"EnableTable\" }\n        ],\n        \"enableAutomaticFailover\": \"[parameters('systemManagedFailover')]\"\n      }\n    },\n    {\n      \"type\": \"Microsoft.DocumentDB/databaseAccounts/tables\",\n      \"apiVersion\": \"2021-04-15\",\n      \"name\": \"[format('{0}/{1}', parameters('accountName'), parameters('tableName'))]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]\"\n      ],\n      \"properties\": {\n        \"resource\": {\n          \"id\": \"[parameters('tableName')]\"\n        },\n        \"options\": {\n          \"autoscaleSettings\": {\n            \"maxThroughput\": \"[parameters('autoscaleMaxThroughput')]\"\n          }\n        }\n      }\n    }\n  ]\n}\n\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure Infrastructure with ARM Template - JSON\nDESCRIPTION: This snippet (the main ARM template) defines resources necessary for private endpoint deployment, including virtual networks, subnets, VM instances, network interfaces, public IPs, storage accounts, private endpoints, and private DNS zones. Dependencies include an Azure subscription and the Azure Resource Manager platform. Parameters allow customization of resource names, locations, and sizing. The output yields a set of Azure resources for secure networking and storage access. Limitations are tied to the Azure region and quota.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage/file-share-private-endpoint/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"{\\n  \\\"$schema\\\": \\\"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\\\",\\n  \\\"contentVersion\\\": \\\"1.0.0.0\\\",\\n  \\\"parameters\\\": {\\n    // parameter definitions\\n  },\\n  \\\"resources\\\": [\\n    // ARM resource definitions for\\n    // - Microsoft.Storage/storageAccounts\\n    // - Microsoft.Network/privateEndpoints\\n    // - Microsoft.Network/virtualNetworks\\n    // - Microsoft.Compute/virtualMachines\\n    // - ...\\n  ],\\n  \\\"outputs\\\": {\\n    // outputs as required\\n  }\\n}\\n\"\n```\n\n----------------------------------------\n\nTITLE: Deploying HDInsight Cluster with Hive Metastore Using Azure Resource Manager Template - JSON\nDESCRIPTION: This ARM template enables the creation of a Linux-based HDInsight cluster that integrates with an existing Hive metastore and virtual network on Azure. It requires dependencies including Microsoft.HDInsight/clusters, Microsoft.Storage/storageAccounts, Microsoft.Network/virtualNetworks, Microsoft.Sql/servers, as well as firewall rules and databases. Main parameters involve SSH authentication (username/password), metastore connectivity info, and references to supporting resources. Inputs consist of resource configurations, and outputs are provisioned HDInsight clusters prepared for analytic workloads. Deployment is performed via Azure portal or CLI; template customization may be required for specific environments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-linux-ssh-publickey-metastore-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.HDInsight/clusters, Microsoft.Storage/storageAccounts, Microsoft.Network/virtualNetworks, Microsoft.Sql/servers, firewallrules, databases\"\n```\n\n----------------------------------------\n\nTITLE: Adding Secret to Key Vault using PowerShell\nDESCRIPTION: PowerShell commands to create and store a secure password in Azure Key Vault. This creates a secret named 'ITSecret' with a specified password value.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-secure-password/README.md#2025-04-23_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n$Secret = ConvertTo-SecureString -String 'Password' -AsPlainText -Force\nSet-AzKeyVaultSecret -VaultName 'Contoso' -Name 'ITSecret' -SecretValue $Secret\n```\n\n----------------------------------------\n\nTITLE: Deploying App Service Environment v2 with ILB using ARM Template\nDESCRIPTION: This ARM template snippet demonstrates the deployment of an App Service Environment v2 with an Internal Load Balancer. It includes resource tags for Microsoft.Web/hostingEnvironments and Microsoft.Network/virtualNetworks, which are the key Azure resources used in this deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-asev2-ilb-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/hostingEnvironments, Microsoft.Network/virtualNetworks\"\n```\n\n----------------------------------------\n\nTITLE: Defining Resource Group in Azure Bicep\nDESCRIPTION: This Bicep code defines a new resource group in Azure. It takes parameters for the resource group name and location, and creates the resource group using these inputs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/subscription-deployments/create-rg/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\n@description('Name of the resourceGroup to create')\nparam rgName string\n\n@description('Location for the resourceGroup')\nparam rgLocation string\n\ntargetScope = 'subscription'\n\nresource rg 'Microsoft.Resources/resourceGroups@2021-04-01' = {\n  name: rgName\n  location: rgLocation\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading SSL Certificate to Azure KeyVault using PowerShell\nDESCRIPTION: This PowerShell script uploads a PFX certificate into Azure Key Vault as a secret. It imports the certificate, exports it in PKCS12 format, encodes it as base64, and stores it securely in the specified Key Vault. This is a prerequisite step before deploying the API Management template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.apimanagement/api-management-create-with-reference-keyvault/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$pfxFilePath = \"PFX_CERTIFICATE_FILE_PATH\" # Change this path\n$pwd = \"PFX_CERTIFICATE_PASSWORD\"  # Change this password\n$flag = [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable\n$collection = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n$collection.Import($pfxFilePath, $pwd, $flag)\n$pkcs12ContentType = [System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12\n$clearBytes = $collection.Export($pkcs12ContentType)\n$fileContentEncoded = [System.Convert]::ToBase64String($clearBytes)\n$secret = ConvertTo-SecureString -String $fileContentEncoded -AsPlainText â€“Force\n$secretContentType = 'application/x-pkcs12'\nSet-AzureKeyVaultSecret -VaultName KEY_VAULT_NAME -Name KEY_VAULT_SECRET_NAME -SecretValue $Secret -ContentType $secretContentType # Change Key Vault name and Secret name\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Load Balancer with IP-Configured Backend Pool\nDESCRIPTION: An ARM template that sets up a Standard Load Balancer with backend pool configured by IP addresses. Includes deployment of 3 VMs running IIS, virtual network with 2 subnets, 2 public IPs, and a bastion host for secure access.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/load-balancer-ip-configured-backend-pool/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n`Tags: Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines/extensions, CustomScriptExtension, Microsoft.Compute/virtualMachines, Microsoft.Network/virtualNetworks/subnets, Microsoft.Network/bastionHosts, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers, Microsoft.Network/loadBalancers/backendAddressPools, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks`\n```\n\n----------------------------------------\n\nTITLE: Removing Azure Route Server Instance via PowerShell\nDESCRIPTION: This PowerShell command deletes an entire Azure Route Server instance using 'Remove-AzVirtualRouter'. It needs the ResourceGroupName and RouterName as key parameters. This action should be performed once all related peers are removed and the Route Server is no longer required. Use with caution as it irreversibly deletes the Route Server resource.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/route-server-quagga/README.md#2025-04-23_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nRemove-AzVirtualRouter -ResourceGroupName <Resource_Group_Name> -RouterName <Route_Server_Name>\n```\n\n----------------------------------------\n\nTITLE: Defining a Linked Template Deployment Resource in ARM (JSON)\nDESCRIPTION: This JSON snippet shows the structure of a `Microsoft.Resources/deployments` resource within an Azure Resource Manager (ARM) template. This resource type is used to initiate a linked deployment, calling another ARM template specified by the `uri` within the `templateLink` property. The `mode` property dictates how resources in the linked template are deployed (e.g., Incremental).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.solutions/managed-application-with-linked-templates/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"apiVersion\": \"2017-05-10\",\n    \"name\": \"linkedTemplate\",\n    \"type\": \"Microsoft.Resources/deployments\",\n    \"properties\": {\n        \"mode\": \"Incremental\",\n        \"templateLink\": {\n            \"uri\" : \"[<Uri to the child template>]\",\n            \"contentVersion\":\"1.0.0.0\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Deployment Outputs with Azure CLI\nDESCRIPTION: Retrieves the outputs from the prerequisite deployment, which will be used in the main deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/openshift/openshift-container-platform/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz group deployment show --name  AzureRMSamples -g prereqs --query properties.outputs\n```\n\n----------------------------------------\n\nTITLE: Creating Recovery Services Vault and Daily Backup Policy - Azure Bicep\nDESCRIPTION: This Bicep template script provisions a Recovery Services Vault and applies a Daily Backup Policy for Azure IaaS VMs. Dependencies include the Bicep tooling and the correct Azure Resource Manager API versions. Key parameters are the vault name, vault location, and a policy object describing backup timing and retention. The output will be the Recovery Services Vault with the policy attached, ready to use for VM backup. Ensure the vault and policy names are unique within the resource group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-daily-backup-policy-create/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\n// Bicep template for Recovery Services Vault & Daily Backup Policy\nparam vaultName string\nparam location string = resourceGroup().location\nparam backupPolicyName string\nparam backupPolicySchedule object\n\nresource vault 'Microsoft.RecoveryServices/vaults@2023-06-01' = {\n  name: vaultName\n  location: location\n  properties: {}\n}\n\nresource backupPolicy 'Microsoft.RecoveryServices/vaults/backupPolicies@2023-06-01' = {\n  name: '${vault.name}/${backupPolicyName}'\n  properties: backupPolicySchedule\n  dependsOn: [\n    vault\n  ]\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Storage with Encryption using Bicep Module\nDESCRIPTION: This Bicep snippet shows how to instantiate the `storage` module defined in `main.bicep` to deploy an Azure Storage account. It specifies parameters like name, SKU, kind, tier, and a 7-day blob deletion retention policy. Blob encryption is implicitly enabled as the `blobEncryptionEnabled` parameter is not set to `false`.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage/storage-blob-encryption-and-retention/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\nparam deploymentName string = 'storage${utcNow()}'\n\nmodule storage './main.bicep' = {\n  name: deploymentName\n  params: {\n    storageAccountName: 'mystorageaccount'\n    storageSku: 'Standard_LRS'\n    storageKind: 'StorageV2'\n    storageTier: 'Hot'\n    deleteRetentionPolicy: 7\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Provisioning Cosmos DB Table API Account and Table - Bicep\nDESCRIPTION: This Bicep snippet provisions an Azure Cosmos DB account for the Table API, supporting configuration of multi-region replication, failover, table name, consistency, and throughput via parameters. Dependencies include the Microsoft.DocumentDB provider and the ability to deploy related resource types as child resources. Parameters allow customization of both the database account and the table resource. The template outputs a ready-to-use Cosmos DB account and table for Table API workloads, subject to resource limits and naming constraints.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-table/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\n// Bicep template to deploy Cosmos DB Table API Account and Table\nparam accountName string\nparam locations array\nparam consistencyLevel string = 'Session'\nparam enableSystemManagedFailover bool = false\nparam tableName string\nparam throughput int = 400\n\nresource cosmosAccount 'Microsoft.DocumentDB/databaseAccounts@2021-07-01-preview' = {\n  name: accountName\n  location: locations[0]\n  kind: 'GlobalDocumentDB'\n  properties: {\n    databaseAccountOfferType: 'Standard'\n    locations: [\n      for loc in locations: {\n        locationName: loc\n        failoverPriority: indexOf(locations, loc)\n        isZoneRedundant: false\n      }\n    ]\n    consistencyPolicy: {\n      defaultConsistencyLevel: consistencyLevel\n    }\n    enableAutomaticFailover: enableSystemManagedFailover\n    capabilities: [\n      {\n        name: 'EnableTable'\n      }\n    ]\n  }\n}\n\nresource cosmosTable 'Microsoft.DocumentDB/databaseAccounts/tables@2021-07-01-preview' = {\n  name: '${accountName}/${tableName}'\n  dependsOn: [cosmosAccount]\n  properties: {\n    resource: {\n      id: tableName\n    }\n    options: {\n      throughput: throughput\n    }\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Key Vault Managed HSM using ARM Template\nDESCRIPTION: This ARM template snippet defines the resource for creating an Azure Key Vault Managed HSM. It specifies the API version, resource type, name, location, SKU, and initial admin object IDs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.keyvault/managed-hsm-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"Microsoft.KeyVault/managedHSMs\",\n  \"apiVersion\": \"2021-04-01-preview\",\n  \"name\": \"[parameters('managedHsmName')]\",\n  \"location\": \"[parameters('location')]\",\n  \"sku\": {\n    \"family\": \"B\",\n    \"name\": \"Standard_B1\"\n  },\n  \"properties\": {\n    \"tenantId\": \"[subscription().tenantId]\",\n    \"initialAdminObjectIds\": \"[parameters('initialAdminObjectIds')]\",\n    \"enableSoftDelete\": true,\n    \"softDeleteRetentionInDays\": 90,\n    \"enablePurgeProtection\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating Azure CLI Session (Shell)\nDESCRIPTION: This snippet shows how to authenticate your local session with Azure using the Azure CLI. You must have Azure CLI installed and available in your system's PATH prior to running this command. It launches a browser-based login flow where credentials must be entered, and on success, retrieves account tokens for subsequent Azure resource management.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iothub-with-consumergroup-create/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Deploying Event Hubs Namespace, Event Hub, and Enabling Capture - Azure Resource Manager - JSON\nDESCRIPTION: This JSON snippet is an ARM template that defines resources for deploying an Azure Event Hubs namespace, an event hub within that namespace, and configuring Capture to ADLS. Dependencies include an existing storage resource for archiving and specifying the target container. Key parameters control resource names and storage identifiers; outputs include deployed resource details. Inputs expect Azure resource and storage information. Outputs are ARM deployment resources. Limitations: storage resource and container must exist prior to deployment, and proper permissions are required.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.eventhub/eventhubs-create-namespace-and-enable-capture-for-adls/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // ARM template to deploy an Event Hubs namespace with an event hub and Capture enabled to ADLS.\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"namespaceName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Event Hubs namespace\"\n      }\n    },\n    \"eventHubName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Event Hub to create\"\n      }\n    },\n    \"storageAccountResourceId\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Resource ID of the existing Azure storage account for Capture\"\n      }\n    },\n    \"storageContainer\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the container in the storage account\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.EventHub/namespaces\",\n      \"apiVersion\": \"2017-04-01\",\n      \"name\": \"[parameters('namespaceName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"sku\": {\n        \"name\": \"Standard\",\n        \"tier\": \"Standard\"\n      },\n      \"properties\": {}\n    },\n    {\n      \"type\": \"Microsoft.EventHub/namespaces/eventhubs\",\n      \"apiVersion\": \"2017-04-01\",\n      \"name\": \"[concat(parameters('namespaceName'), '/', parameters('eventHubName'))]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.EventHub/namespaces', parameters('namespaceName'))]\"\n      ],\n      \"properties\": {\n        \"messageRetentionInDays\": 1,\n        \"partitionCount\": 2,\n        \"captureDescription\": {\n          \"enabled\": true,\n          \"encoding\": \"Avro\",\n          \"intervalInSeconds\": 300,\n          \"sizeLimitInBytes\": 314572800,\n          \"destination\": {\n            \"name\": \"EventHubArchive.AzureBlockBlob\",\n            \"properties\": {\n              \"storageAccountResourceId\": \"[parameters('storageAccountResourceId')]\",\n              \"blobContainer\": \"[parameters('storageContainer')]\",\n              \"archiveNameFormat\": \"{Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}\"\n            }\n          }\n        }\n      }\n    }\n  ],\n  \"outputs\": {\n    \"eventHubNamespaceName\": {\n      \"type\": \"string\",\n      \"value\": \"[parameters('namespaceName')]\"\n    },\n    \"eventHubName\": {\n      \"type\": \"string\",\n      \"value\": \"[parameters('eventHubName')]\"\n    }\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Web App with GitHub Integration\nDESCRIPTION: This ARM template deploys a Linux Web Application linked to a GitHub repository on Azure. It sets up a web app with a consumption-based hosting plan, using the 'S1' (free tier) pricing tier by default. The template is suitable for development and test environments, but may need adjustments for production use.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-github-deploy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    // Parameters would be defined here\n  },\n  \"resources\": [\n    // Resources like Microsoft.Web/serverfarms and Microsoft.Web/sites would be defined here\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure AI Translator Resource using ARM Template\nDESCRIPTION: This ARM template deploys an Azure AI Translator resource. It supports various SKUs with different features and pricing tiers, ranging from free tier (F0) to high-volume enterprise tiers (S2-S4). The template includes necessary Azure resource definitions and can be deployed via Azure portal or Azure CLI.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cognitiveservices/cognitive-services-translate/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags\": \"Microsoft.CognitiveServices/accounts\"\n```\n\n----------------------------------------\n\nTITLE: Creating an Instance of Custom Resource via ARM Template - JSON\nDESCRIPTION: This ARM template snippet creates an instance of the previously defined 'customResources' type under the custom provider. It sets the resource type, API version, fully qualified name (combining provider and custom resource parameters), location, and an example set of custom input properties. The resource depends on the earlier custom provider registration, so it must be defined there first. Input properties in the 'properties' object are arbitrary and passed to the underlying endpoint. This resource is instantiated as part of an ARM deployment and participates in all provisioning lifecycle events (PUT, GET, DELETE) as described in the provider.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.customproviders/custom-rp-with-logicapp/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\\n    \\\"type\\\": \\\"Microsoft.CustomProviders/resourceProviders/customResources\\\",\\n    \\\"apiVersion\\\": \\\"2018-09-01-preview\\\",\\n    \\\"name\\\": \\\"[concat(parameters('customResourceProviderName'), '/', parameters('customResourceName'))]\\\",\\n    \\\"location\\\": \\\"[parameters('location')]\\\",\\n    \\\"properties\\\": {\\n        \\\"myCustomInputProperty\\\": \\\"myCustomInputValue\\\",\\n        \\\"myCustomInputObject\\\": {\\n            \\\"Property1\\\": \\\"Value1\\\"\\n        }\\n    },\\n    \\\"dependsOn\\\": [\\n        \\\"[concat('Microsoft.CustomProviders/resourceProviders/', parameters('customResourceProviderName'))]\\\"\\n    ]\\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Apache2 on Ubuntu VM using Azure Resource Manager Template\nDESCRIPTION: This Azure Resource Manager template deploys an Apache web server on an Ubuntu VM. It uses various Azure resources including storage accounts, network interfaces, and virtual machines. The CustomScript extension is used to install and configure Apache2.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/apache/apache2-on-ubuntu-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\n  \"Microsoft.Storage/storageAccounts\": \"\",\n  \"Microsoft.Network/publicIPAddresses\": \"\",\n  \"Microsoft.Network/networkSecurityGroups\": \"\",\n  \"Microsoft.Network/virtualNetworks\": \"\",\n  \"Microsoft.Network/networkInterfaces\": \"\",\n  \"Microsoft.Compute/virtualMachines\": \"\",\n  \"Microsoft.Compute/virtualMachines/extensions\": \"\",\n  \"CustomScript\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deploy ARM Template with Azure CLI\nDESCRIPTION: Azure CLI command to deploy resources defined in an ARM template to a resource group. This initiates the web app deployment process.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-python/gettingstarted.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz group deployment create --resource-group \"resource-group\" --template-file \"azuredeploy.json path\"\n```\n\n----------------------------------------\n\nTITLE: Defining and Deploying Azure Network Interface, VNet, and Public IP - ARM Template - JSON\nDESCRIPTION: This snippet illustrates an Azure Resource Manager (ARM) template for deploying a network interface (NIC) within a virtual network (VNet), referencing a public IP address. Dependencies include Azure subscription access and permissions to deploy resources defined under Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, and Microsoft.Network/networkInterfaces. Key template parameters usually include naming the NIC, specifying VNet and subnet details, and associating a public IP resource. The expected input is a parameter object for the ARM deployment, and the output is the deployed NIC resource linked to the configured public IP. Limitations may include region availability and quota restrictions for the specified resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/nic-publicip-dns-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // The actual ARM template is referenced by deployment links but not directly included here.\n  // Resource types used: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces\n  // Expected parameters: names for the NIC, VNet, subnet, and public IP.\n  // Outputs: Deployed NIC ARM resource in Azure, associated with the public IP and VNet.\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying ASP.NET Web App on Azure App Service using ARM Template\nDESCRIPTION: This ARM template deploys a web app with ASP.NET support on Azure App Service. It creates a free tier Windows App Service Plan to host the App Service. The template is designed for beginners to easily deploy an ASP.NET website on Azure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-windows-aspnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {},\n  \"variables\": {},\n  \"resources\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Generalizing Linux VM Using Azure Agent - Bash\nDESCRIPTION: This snippet demonstrates the command used to generalize a Linux virtual machine within Azure, making it suitable for image capture. It requires the 'waagent' tool to be installed and should be run as root within the Linux VM. The command prepares the image for deprovisioning, removing sensitive information and user accounts, and must be executed before capturing the VM as an image.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-linux-customimage-autoscale/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo waagent -deprovision+user\n```\n\n----------------------------------------\n\nTITLE: Creating Storage Account with Service Encryption - Bicep\nDESCRIPTION: This Bicep template provides a modular way to deploy an Azure Storage Account with Storage Service Encryption for data at rest using Bicepâ€™s concise syntax. It requires input parameters such as the storage account name and location, and makes use of the resource Microsoft.Storage/storageAccounts. Prerequisites include Bicep CLI or Azure CLI with Bicep support and appropriate Azure permissions. The template outputs an encrypted storage account resource; naming and SKU constraints must be respected according to Azure requirements.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage/storage-account-service-encryption-create/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam storageAccountName string\nparam location string = resourceGroup().location\n\nresource storageAccount 'Microsoft.Storage/storageAccounts@2022-09-01' = {\n  name: storageAccountName\n  location: location\n  sku: {\n    name: 'Standard_LRS'\n  }\n  kind: 'StorageV2'\n  properties: {\n    encryption: {\n      services: {\n        blob: {\n          enabled: true\n        }\n        file: {\n          enabled: true\n        }\n      }\n      keySource: 'Microsoft.Storage'\n    }\n    accessTier: 'Hot'\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom WAF Rules in Azure Application Gateway\nDESCRIPTION: JSON configuration for two custom WAF rules: one that blocks requests containing 'blockme' in the query string, and another that blocks requests from User-Agents containing 'evilbot'. The rules are configured in Prevention mode with specific priorities and matching conditions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/aks-nat-agic/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"BlockMe\",\n  \"priority\": 1,\n  \"ruleType\": \"MatchRule\",\n  \"action\": \"Block\",\n  \"matchConditions\": [\n    {\n      \"matchVariables\": [\n        {\n          \"variableName\": \"QueryString\"\n        }\n      ],\n      \"operator\": \"Contains\",\n      \"negationConditon\": false,\n      \"matchValues\": [\n        \"blockme\"\n      ],\n      \"transforms\": []\n    }\n  ]\n},\n{\n  \"name\": \"BlockEvilBot\",\n  \"priority\": 2,\n  \"ruleType\": \"MatchRule\",\n  \"action\": \"Block\",\n  \"matchConditions\": [\n    {\n      \"matchVariables\": [\n        {\n          \"variableName\": \"RequestHeaders\",\n          \"selector\": \"User-Agent\"\n        }\n      ],\n      \"operator\": \"Contains\",\n      \"negationConditon\": false,\n      \"matchValues\": [\n        \"evilbot\"\n      ],\n      \"transforms\": [\n        \"Lowercase\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Service Bus Premium Namespace and AuthorizationRule using ARM Template - JSON\nDESCRIPTION: This snippet represents the core ARM template code (usually stored as azuredeploy.json) used to provision an Azure Service Bus Premium Namespace and a namespace-level AuthorizationRule. It requires an Azure subscription and typically depends on the Microsoft.ServiceBus resource provider. Parameters would define namespace settings and authorization rule properties; outputs might expose connection strings or identifiers. The input is expected to be parameterized JSON, and the output is a set of Azure resources provisioned in the specified resource group. Limitations include Azure subscription quotas and required permissions for resource creation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.servicebus/servicebus-pn-ar/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n      // Define input parameters for namespace name, location, etc.\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.ServiceBus/namespaces\",\n      \"apiVersion\": \"2017-04-01\",\n      \"name\": \"[parameters('namespaceName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"Premium\",\n        \"tier\": \"Premium\"\n      },\n      \"properties\": {}\n    },\n    {\n      \"type\": \"Microsoft.ServiceBus/namespaces/authorizationRules\",\n      \"apiVersion\": \"2017-04-01\",\n      \"name\": \"[concat(parameters('namespaceName'), '/RootManageSharedAccessKey')]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaceName'))]\"\n      ],\n      \"properties\": {\n        \"rights\": [\n          \"Listen\",\n          \"Send\",\n          \"Manage\"\n        ]\n      }\n    }\n  ],\n  \"outputs\": {\n      // Optionally output keys or connection strings\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Client-Side Blob Upload with Failover in C#\nDESCRIPTION: This C# client-side code demonstrates how to upload a blob to Azure Storage through Front Door. It attempts to upload to the first URL provided by the server API and tries subsequent URLs if the initial upload fails.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-storage-blobs-upload/README.md#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\n// the client side\n\nvar blobNameToUpload = \"testblob.txt\";\nvar userId = \"user1\";\n\nforeach (var (blobUri, sharedAccessSignature) in serverAPIgetUploadAddresses(blobNameToUpload, userId))\n{\n    Console.WriteLine($\"{blobUri}?{sharedAccessSignature}\");\n    try\n    {\n        var blobClient = new BlobClient(blobUri, credential: new AzureSasCredential(sharedAccessSignature));\n        using Stream fs = new MemoryStream(Encoding.UTF8.GetBytes(\"Hello\"));\n        blobClient.Upload(fs);\n       \n        break; // Now that we successfully uploaded, we can break off the loop and ignore the rest of the locations\n    }\n    catch (Exception ex)\n    {\n        Console.Error.WriteLine($\"Upload to {blobUri}?{sharedAccessSignature} failed, trying the next one...\");\n        Console.Error.WriteLine(ex.Message);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Action Groups and Alert Processing Rules in ARM Template (JSON)\nDESCRIPTION: This snippet describes an ARM (Azure Resource Manager) template in JSON format for deploying Microsoft.Insights/actionGroups and Microsoft.AlertsManagement/actionRules resources. The purpose is to set up automated alert routing from Recovery Services vaults through Azure Monitor, sending alerts to configured email recipients. The template requires the Azure subscription, resource group, and permission prerequisites. Key parameters typically include email addresses, notification preferences, and target Recovery Services vaults. The expected outcome is the automatic creation of alert routing and notification logic for backup alerts. Limitations may include Azure subscription quotas and permissions needed to deploy management resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-create-alert-processing-rule/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // ARM template to deploy actionGroups and alertProcessingRules\n  // This is a representative sample for illustration. Actual template may have more fields and parameters.\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"actionGroupName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"BackupNotificationActionGroup\"\n    },\n    \"emailReceivers\": {\n      \"type\": \"array\"\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Insights/actionGroups\",\n      \"apiVersion\": \"2021-04-01\",\n      \"name\": \"[parameters('actionGroupName')]\",\n      \"location\": \"Global\",\n      \"properties\": {\n        \"groupShortName\": \"BackupNotify\",\n        \"emailReceivers\": \"[parameters('emailReceivers')]\"\n      }\n    },\n    {\n      \"type\": \"Microsoft.AlertsManagement/actionRules\",\n      \"apiVersion\": \"2019-05-05-preview\",\n      \"name\": \"backupAlertProcessingRule\",\n      \"location\": \"Global\",\n      \"properties\": {\n        \"scope\": [\n          // list of Recovery Services vaults or resource IDs\n        ],\n        \"actions\": {\n          \"actionGroups\": [\n            {\n              \"actionGroupId\": \"[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]\"\n            }\n          ]\n        },\n        \"status\": \"Enabled\"\n      },\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]\"\n      ]\n    }\n  ],\n  \"outputs\": {}\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources with ARM Template\nDESCRIPTION: ARM template for deploying a Web App with Managed Identity, SQL Server, and Application Insights. Includes resource definitions for SQL database, app service plan, web app, and user-assigned managed identity.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-managed-identity-sql-db/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": \"Microsoft.Sql/servers/databases, Microsoft.Sql/servers/firewallRules, Microsoft.Web/sites/config, SQLAzure, Microsoft.Sql/servers, Microsoft.Web/serverfarms, Microsoft.Web/sites, UserAssigned, Microsoft.ManagedIdentity/userAssignedIdentities, Microsoft.Authorization/roleAssignments, Microsoft.Insights/components\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Data Collection Rule for Syslog using Azure Resource Manager Template\nDESCRIPTION: This ARM template creates a data collection rule named 'MySyslogDcr' that collects Syslog data and sends it to a specified Log Analytics workspace. It requires a pre-existing Log Analytics workspace, whose resource ID must be provided as an input parameter.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.insights/datacollectionrule-create-syslog/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"workspaceResourceId\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Full Resource ID of the log analytics workspace that will be used for data destination. For example /subscriptions/00000000-0000-0000-0000-0000-00000000/resourceGroups/ResourceGroupName/providers/Microsoft.OperationalInsights/workspaces/WorkspaceName\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Location for all resources.\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Insights/dataCollectionRules\",\n      \"apiVersion\": \"2021-04-01\",\n      \"name\": \"MySyslogDcr\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"dataSources\": {\n          \"syslog\": [\n            {\n              \"streams\": [\n                \"Microsoft-Syslog\"\n              ],\n              \"facilityNames\": [\n                \"*\"\n              ],\n              \"logLevels\": [\n                \"Debug\",\n                \"Info\",\n                \"Notice\",\n                \"Warning\",\n                \"Error\",\n                \"Critical\",\n                \"Alert\",\n                \"Emergency\"\n              ],\n              \"name\": \"sysLogsDataSource\"\n            }\n          ]\n        },\n        \"destinations\": {\n          \"logAnalytics\": [\n            {\n              \"workspaceResourceId\": \"[parameters('workspaceResourceId')]\",\n              \"name\": \"la-workspace\"\n            }\n          ]\n        },\n        \"dataFlows\": [\n          {\n            \"streams\": [\n              \"Microsoft-Syslog\"\n            ],\n            \"destinations\": [\n              \"la-workspace\"\n            ]\n          }\n        ]\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Recovery Services Vault and Daily Backup Policy - Azure Resource Manager Template (JSON)\nDESCRIPTION: This ARM template (JSON) is designed to automate the creation of a Recovery Services Vault and configure a Daily Backup Policy in Azure. It requires the Microsoft.RecoveryServices resource provider to be registered and is compatible with both classic and ARM-based IaaS virtual machines. Parameters include vault name, location, and backup policy details. The template must be deployed via the Azure Portal, CLI, or PowerShell, and its output is the configured vault with associated policy. Ensure the required resource provider is available and all specified parameters are valid.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-daily-backup-policy-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // JSON ARM Template sample for Recovery Services Vault & Daily Backup Policy\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"vaultName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Recovery Services Vault.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Location for the Recovery Services Vault.\"\n      }\n    },\n    \"backupPolicyName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Daily Backup Policy.\"\n      }\n    },\n    \"backupPolicySchedule\": {\n      \"type\": \"object\",\n      \"metadata\": {\n        \"description\": \"Backup schedule and retention settings.\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.RecoveryServices/vaults\",\n      \"apiVersion\": \"2023-06-01\",\n      \"name\": \"[parameters('vaultName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {}\n    },\n    {\n      \"type\": \"Microsoft.RecoveryServices/vaults/backupPolicies\",\n      \"apiVersion\": \"2023-06-01\",\n      \"name\": \"[concat(parameters('vaultName'), '/', parameters('backupPolicyName'))]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName'))]\"\n      ],\n      \"properties\": \"[parameters('backupPolicySchedule')]\"\n    }\n  ]\n}\n\n```\n\n----------------------------------------\n\nTITLE: Granting Contributor Access to Managed Identity using PowerShell\nDESCRIPTION: This PowerShell script grants the 'Contributor' role to the Function App's Managed Identity at the subscription level. It requires the Azure PowerShell module (Az) to be installed and uses the `principalId` (output from the ARM template deployment) to assign the role using `New-AzRoleAssignment`. This allows the function to manage resources within the specified subscription.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/functions-managed-identity/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$Context = Get-AzContext\nNew-AzRoleAssignment -ObjectId <principalId> -RoleDefinitionName Contributor -Scope \"/subscriptions/$($Context.Subscription)\"\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resources for Point-to-Site Gateway - Azure Resource Manager - JSON\nDESCRIPTION: This JSON snippet represents ARM template resource definitions for deploying an Azure Virtual Network, Public IP Address, and VPN Gateway configured for Point-to-Site connectivity. It tags the Azure resources to enable deployment, configuration, and management through Azure Resource Manager. Dependencies include Azure Resource Manager, Microsoft.Network resource provider, and knowledge of the Azure deployment process. There are no explicit parameters or outputs shown in this snippet, but usage assumes input through a parameters file to override default settings and enable customization.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/point-to-site/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\nTags: Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworkGateways\n```\n\n----------------------------------------\n\nTITLE: PowerShell - List Azure Role Definitions\nDESCRIPTION: PowerShell command to display detailed information about available Azure role definitions, including the role's Name, Id, Actions, and NotActions properties.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.authorization/rbac-builtinrole-virtualmachine/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzureRoleDefinition | fl\n```\n\n----------------------------------------\n\nTITLE: Comparing Front Door and API Management Request Duration in Log Analytics using Kusto\nDESCRIPTION: This Kusto query fetches diagnostic logs from Azure Front Door and request data from Application Insights (for API Management) over the last 20 minutes. It unions the data, standardizes relevant fields like duration and service name, calculates the average duration per service binned by 1-second intervals, and displays the comparison as a time chart. This helps identify latency sources between Front Door and APIM.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-api-management/README.md#2025-04-23_snippet_3\n\nLANGUAGE: kusto\nCODE:\n```\nlet startDatetime = now(-20m);\nlet endDatetime = now();\nlet interval = 1s;\nAzureDiagnostics\n| where Resource == 'AFDAPIMSAMPLEAFD'\n  and TimeGenerated  between(startDatetime .. endDatetime)\n| extend duration = toreal(timeTaken_s) * 1000,\n         service = \"Front Door\",\n         timestamp = TimeGenerated\n| project service, duration, timestamp\n| union (app(\"AfdApimSampleAppInsights\").requests\n| where name == \"GET /postman-echo/get\"\n  and timestamp between(startDatetime .. endDatetime)\n| extend service = \"APIM\"\n| project service, duration, timestamp)\n| summarize ['Average Duration'] = avg(duration) by bin(timestamp, interval), service\n| render timechart\n```\n\n----------------------------------------\n\nTITLE: Configuring Rewrite Rule Set in Azure Application Gateway\nDESCRIPTION: Defines a rewrite rule set configuration that modifies HTTP headers including X-Forwarded-For and Ciphers-Used in requests, and Strict-Transport-Security in responses.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-rewrite/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"rewriteRuleSet\": [\n        {\n        \"name\": \"RewriteRuleSet1\",\n        \"properties\": {\n            \"rewriteRule\": [\n            {\n                \"name\": \"RWRule1\",\n                \"actionSet\": {\n                \"requestHeaderConfiguration\": [\n                    {\n                    \"headerName\": \"X-Forwarded-For\",\n                    \"headerValue\": \"source IP\"\n                    },\n                    {\n                    \"headerName\": \"Ciphers-Used\",\n                    \"headerValue\": \"{var_ssl_cipher}\"\n                    }\n                ],\n                \"responseHeaderConfiguration\": [\n                    {\n                    \"headerName\": \"Strict-Transport-Security\",\n                    \"headerValue\": \"max-age=31536000\"\n                    }\n                ]\n                }\n            }\n            ]\n        },\n        \"type\": \"Microsoft.Network/applicationGateways/rewriteRuleSet\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying an Azure TemplateSpec Using ARM Template - JSON\nDESCRIPTION: This snippet (showcased in 'azuredeploy.json') enables deployment of resources defined inside a specific version of a TemplateSpec. It uses the ARM deployment resource type to reference the existing TemplateSpec by resourceId. Dependencies include a previously created TemplateSpec and knowledge of its version and location. Key parameters include the TemplateSpec's resourceId and any parameters expected by the referenced template. The deployment creates all resources described in the TemplateSpec within the current resource group. This can be repeated multiple times with the same or different parameters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.resources/templatespec-create/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  // Example: Deploying a TemplateSpec reference\n  \"type\": \"Microsoft.Resources/deployments\",\n  \"apiVersion\": \"2021-04-01\",\n  \"name\": \"templateSpecDeployment\",\n  \"properties\": {\n    \"mode\": \"Incremental\",\n    \"templateLink\": {\n      \"id\": \"[parameters('templateSpecResourceId')]\"\n    },\n    \"parameters\": {\n      // ... parameter values for the underlying template\n    }\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Cosmos DB Multi-Region Account - Azure Resource Manager (ARM) - JSON\nDESCRIPTION: This sample JSON template defines an Azure Cosmos DB account resource deployable via Azure Resource Manager (ARM). It includes parameters to select the desired database API, specify primary and secondary geo-replication regions, set the desired consistency level, and determine whether to enable system managed failover. Required dependencies include an Azure subscription and resource group; the template is designed to be used with the Azure Portal, CLI, or PowerShell. Key inputs are the API type, region locations, consistency type, and failover configuration. The output is a multi-region Cosmos DB account resource, with constraints dependent on supported Azure locations and user permissions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-create-multi-region-account/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"accountName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Cosmos DB account name.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Primary region for the Cosmos DB account.\"\n      }\n    },\n    \"secondaryLocation\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Secondary region for geo-replication.\"\n      }\n    },\n    \"apiType\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"SQL\",\n      \"allowedValues\": [\n        \"SQL\",\n        \"Cassandra\",\n        \"Gremlin\",\n        \"MongoDB\",\n        \"Table\"\n      ],\n      \"metadata\": {\n        \"description\": \"API type supported by Cosmos DB.\"\n      }\n    },\n    \"consistencyLevel\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"Session\",\n      \"allowedValues\": [\n        \"Strong\",\n        \"BoundedStaleness\",\n        \"Session\",\n        \"ConsistentPrefix\",\n        \"Eventual\"\n      ],\n      \"metadata\": {\n        \"description\": \"Consistency level for Cosmos DB.\"\n      }\n    },\n    \"enableAutomaticFailover\": {\n      \"type\": \"bool\",\n      \"defaultValue\": false,\n      \"metadata\": {\n        \"description\": \"Enable system managed (automatic) failover.\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.DocumentDB/databaseAccounts\",\n      \"apiVersion\": \"2021-07-01-preview\",\n      \"name\": \"[parameters('accountName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"kind\": \"[parameters('apiType')]\",\n      \"properties\": {\n        \"consistencyPolicy\": {\n          \"defaultConsistencyLevel\": \"[parameters('consistencyLevel')]\"\n        },\n        \"locations\": [\n          {\n            \"locationName\": \"[parameters('location')]\",\n            \"failoverPriority\": 0\n          },\n          {\n            \"locationName\": \"[parameters('secondaryLocation')]\",\n            \"failoverPriority\": 1\n          }\n        ],\n        \"enableAutomaticFailover\": \"[parameters('enableAutomaticFailover')]\"\n      },\n      \"tags\": {}\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Active Azure Subscription - Azure CLI - Bash\nDESCRIPTION: Sets the active subscription context for all subsequent Azure CLI actions. The command requires Azure CLI and an authenticated session. The parameter \\\"your subscription id\\\" should be replaced with the target subscription's unique identifier. No output unless an error occurs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iot-iothub-edgeemulator-vm/GettingStarted-Iot-EdgeEmulator.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Deploying VSTS Account and Project with Azure Resource Manager\nDESCRIPTION: This ARM template creates a new Visual Studio Team Services (VSTS) account and project. It uses the microsoft.visualstudio/account resource type to provision the VSTS resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/visualstudio/visual-studio-team-services-project-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: microsoft.visualstudio/account, project\"\n```\n\n----------------------------------------\n\nTITLE: Installing Git and Related Tools via Chocolatey in PowerShell\nDESCRIPTION: Commands for installing Git, Posh Git, and related tools using Chocolatey package manager in Windows. Includes commands to refresh environment variables and set up credential management.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncinst git.install\ncinst poshgit\n\n# Restart PowerShell / CMDer before moving on - or run\n$env:Path = [System.Environment]::GetEnvironmentVariable(\"Path\",\"Machine\") + \";\" + [System.Environment]::GetEnvironmentVariable(\"Path\",\"User\")\n\ncinst git-credential-winstore\ncinst github\n```\n\n----------------------------------------\n\nTITLE: Configuring Redirect Rules in Azure Application Gateway\nDESCRIPTION: Defines a redirect configuration object that specifies how requests should be redirected. This example shows a Found (302) redirect to an HTTPS listener.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-redirect/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"redirectConfigurations\": [\n        {\n            \"Name\": \"redirectConfig1\",\n            \"properties\": {\n                \"redirectType\": \"Found\",\n                \"targetListener\": {\n                    \"id\": \"[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpsListener1')]\"\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Service Bus Namespace, Topic, Subscription, and SQL Filter Rule with ARM Template (JSON)\nDESCRIPTION: This snippet, described in the documentation, details the use of an Azure Resource Manager (ARM) templateâ€”written in JSONâ€”to create a Service Bus Namespace, a Topic, and a Subscription with a SQL Filter Rule. The approach leverages Azure's declarative infrastructure to define resources and their properties, including using a SQL Filter expression to route or receive messages selectively. Required dependencies are Azure Resource Manager and permissions to create Service Bus resources. Key parameters typically include resource names, the filter expression, and region, with the template producing the configured Service Bus infrastructure upon deployment. Limitations include the requirement for proper Azure permissions and parameterization for reusability.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.servicebus/servicebus-topic-subscription-sqlfilter/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"// Example ARM template resources (pseudo-format, since code not included directly):\\n{\\n  \\\"$schema\\\": \\\"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\\\",\\n  \\\"contentVersion\\\": \\\"1.0.0.0\\\",\\n  \\\"resources\\\": [\\n    {\\n      \\\"type\\\": \\\"Microsoft.ServiceBus/namespaces\\\",\\n      \\\"apiVersion\\\": \\\"2017-04-01\\\",\\n      \\\"name\\\": \\\"[parameters('namespaceName')]\\\",\\n      \\\"location\\\": \\\"[resourceGroup().location]\\\",\\n      \\\"sku\\\": {\\n        \\\"name\\\": \\\"Standard\\\"\\n      }\\n    },\\n    {\\n      \\\"type\\\": \\\"Microsoft.ServiceBus/namespaces/topics\\\",\\n      \\\"apiVersion\\\": \\\"2017-04-01\\\",\\n      \\\"name\\\": \\\"[concat(parameters('namespaceName'), '/', parameters('topicName'))]\\\",\\n      \\\"dependsOn\\\": [\\n        \\\"[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaceName'))]\\\"\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"Microsoft.ServiceBus/namespaces/topics/subscriptions\\\",\\n      \\\"apiVersion\\\": \\\"2017-04-01\\\",\\n      \\\"name\\\": \\\"[concat(parameters('namespaceName'), '/', parameters('topicName'), '/', parameters('subscriptionName'))]\\\",\\n      \\\"dependsOn\\\": [\\n        \\\"[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaceName'), parameters('topicName'))]\\\"\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"Microsoft.ServiceBus/namespaces/topics/subscriptions/rules\\\",\\n      \\\"apiVersion\\\": \\\"2017-04-01\\\",\\n      \\\"name\\\": \\\"[concat(parameters('namespaceName'), '/', parameters('topicName'), '/', parameters('subscriptionName'), '/mySqlRule')]\\\",\\n      \\\"dependsOn\\\": [\\n        \\\"[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaceName'), parameters('topicName'), parameters('subscriptionName'))]\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"filterType\\\": \\\"SqlFilter\\\",\\n        \\\"sqlFilter\\\": {\\n          \\\"sqlExpression\\\": \\\"[parameters('sqlFilterExpression')]\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Subnet-driven Environment in Azure using ARM Template\nDESCRIPTION: This ARM template deploys a multi-subnet environment with domain controllers and member servers in Azure. It uses array structures for subnet definition and server creation, and leverages outputs for resource IDs. The template includes custom script extensions for installing tools like chocolatey and BGInfo.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/subnet-driven-deployment/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"adminPassword\": {\n      \"type\": \"securestring\",\n      \"metadata\": {\n        \"description\": \"Admin password\"\n      }\n    },\n    \"adminUsername\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Admin username\"\n      }\n    },\n    \"assetLocation\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/301-subnet-driven-deployment/\",\n      \"metadata\": {\n        \"description\": \"The location of resources such as templates and DSC modules that the script is dependent\"\n      }\n    },\n    \"dnsLabelPrefix\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Unique public DNS label for the deployment. The fqdn will look something like 'dnsname.region.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'.\"\n      }\n    },\n    \"domainName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"fabrikam.com\",\n      \"metadata\": {\n        \"description\": \"Domain to create for the Lab\"\n      }\n    },\n    \"memberServersPerSubnet\": {\n      \"type\": \"int\",\n      \"defaultValue\": 1,\n      \"metadata\": {\n        \"description\": \"Member servers for each subnet. Must be between 1 and 20\"\n      }\n    },\n    \"storageCategory\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"Standard\",\n      \"metadata\": {\n        \"description\": \"Storage type. Can be either Standard (HDD) or Premium (SSD)\"\n      }\n    }\n  },\n  \"variables\": {\n    // Additional variables would be defined here\n  },\n  \"resources\": [\n    // Resource definitions would be placed here\n  ],\n  \"outputs\": {\n    // Output definitions would be placed here\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining and Deploying Managed Applications with Metrics and Alerts - Azure ARM Template - JSON\nDESCRIPTION: This Azure Resource Manager (ARM) template demonstrates how to define and deploy a managed application with a storage account, associated metrics (availability, success E2E latency, transactions), and alert rules (for availability breaches and storage key regeneration) as resources in a managed resource group. Dependencies include existing Azure subscription, permission to deploy managed applications, and knowledge of ARM schema. Key parameters include application and resource names, alert thresholds, and storage account configuration. On deployment, it provisions the resources, exposes custom metrics in Azure portal views, and configures proactive alerting, supporting simplified testing by deploying both the definition and its instance in one step.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.solutions/managed-application-with-metrics-and-alerts/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // ARM Template Example (from referred mainTemplate.json structure):\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"storageAccountName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the storage account.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Azure region for resources.\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts\",\n      \"apiVersion\": \"2021-01-01\",\n      \"name\": \"[parameters('storageAccountName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"kind\": \"StorageV2\",\n      \"sku\": {\n        \"name\": \"Standard_LRS\"\n      },\n      \"properties\": {}\n    },\n    {\n      \"type\": \"Microsoft.Insights/actionGroups\",\n      \"apiVersion\": \"2022-06-15\",\n      \"name\": \"myActionGroup\",\n      \"location\": \"Global\",\n      \"properties\": {\n        \"enabled\": true,\n        \"groupShortName\": \"MyGrp\",\n        \"emailReceivers\": [\n          {\n            \"name\": \"EmailReceiver\",\n            \"emailAddress\": \"admin@example.com\"\n          }\n        ]\n      }\n    },\n    {\n      \"type\": \"Microsoft.Insights/metricAlerts\",\n      \"apiVersion\": \"2018-03-01\",\n      \"name\": \"storage-availability-alert\",\n      \"location\": \"Global\",\n      \"properties\": {\n        \"severity\": 2,\n        \"enabled\": true,\n        \"scopes\": [\n          \"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]\"\n        ],\n        \"evaluationFrequency\": \"PT5M\",\n        \"windowSize\": \"PT5M\",\n        \"criteria\": {\n          \"allOf\": [\n            {\n              \"metricName\": \"Availability\",\n              \"metricNamespace\": \"Microsoft.Storage/storageAccounts\",\n              \"operator\": \"GreaterThan\",\n              \"threshold\": 0,\n              \"timeAggregation\": \"Average\"\n            }\n          ]\n        },\n        \"autoMitigate\": true,\n        \"actions\": [\n          {\n            \"actionGroupId\": \"[resourceId('Microsoft.Insights/actionGroups', 'myActionGroup')]\"\n          }\n        ]\n      }\n    },\n    {\n      \"type\": \"Microsoft.Insights/activityLogAlerts\",\n      \"apiVersion\": \"2017-04-01\",\n      \"name\": \"storage-key-regeneration-alert\",\n      \"location\": \"Global\",\n      \"properties\": {\n        \"enabled\": true,\n        \"scopes\": [\n          \"[subscription().id]\"\n        ],\n        \"condition\": {\n          \"allOf\": [\n            {\n              \"field\": \"operationName\",\n              \"equals\": \"Microsoft.Storage/storageAccounts/regenerateKey/action\"\n            }\n          ]\n        },\n        \"actions\": {\n          \"actionGroups\": [\n            {\n              \"actionGroupId\": \"[resourceId('Microsoft.Insights/actionGroups', 'myActionGroup')]\"\n            }\n          ]\n        },\n        \"description\": \"Alert when storage account key is regenerated.\"\n      }\n    }\n  ]\n}\n// Note: Actual template would be more modular and may reference external files for parameters and outputs.\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Backup Monitoring Solution with ARM Template\nDESCRIPTION: ARM template snippet for deploying the Azure Backup monitoring solution to a Log Analytics workspace. It creates views and tiles to monitor backup jobs, alerts, and storage usage.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/backup-oms-monitoring/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"variables\": {\n  \"solution\": {\n    \"name\": \"[concat('AzureBackup', '[', parameters('workspaceName'), ']')]\",\n    \"marketplaceName\": \"AzureBackup\"\n  }\n},\n\"resources\": [\n  {\n    \"apiVersion\": \"2015-11-01-preview\",\n    \"type\": \"Microsoft.OperationsManagement/solutions\",\n    \"name\": \"[variables('solution').name]\",\n    \"location\": \"[parameters('workspaceRegion')]\",\n    \"properties\": {\n      \"workspaceResourceId\": \"[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]\"\n    },\n    \"plan\": {\n      \"name\": \"[variables('solution').name]\",\n      \"publisher\": \"Microsoft\",\n      \"product\": \"[variables('solution').marketplaceName]\",\n      \"promotionCode\": \"\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group in Azure via PowerShell - PowerShell\nDESCRIPTION: This PowerShell snippet creates a new Azure resource group named 'ExistingReservedIP' in the 'West US' region using the 'New-AzureResourceGroup' cmdlet. Resource groups are logical containers for resources deployed to Azure. Requires Azure PowerShell module installed and user authentication via 'Connect-AzAccount'. The 'Name' parameter sets the group name, and 'Location' defines the Azure region. No output is returned on success except confirmation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/reserved-ip/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzureResourceGroup -Name ExistingReservedIP -Location 'West US'\n```\n\n----------------------------------------\n\nTITLE: Generating Self-Signed Certificates for P2S VPN using PowerShell\nDESCRIPTION: This PowerShell script generates a self-signed root certificate (`P2SRootCert`) and a corresponding child certificate (`P2SChildCert`) required for configuring Point-to-Site (P2S) VPN connections to the Azure VPN Gateway deployed by the template. It exports the root certificate to a `.cer` file and then uses `certutil` to encode it into the base64 format needed for the `p2sRootCert` template parameter. The user needs to replace the placeholder path before running the export command.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/asev2-appservice-sql-vpngw/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$cert = New-SelfSignedCertificate -Type Custom -KeySpec Signature \\\n    -Subject \"CN=P2SRootCert\" -KeyExportPolicy Exportable \\\n    -HashAlgorithm sha256 -KeyLength 2048 \\\n    -CertStoreLocation \"Cert:\\CurrentUser\\My\" -KeyUsageProperty Sign -KeyUsage CertSign\n\nNew-SelfSignedCertificate -Type Custom -DnsName P2SChildCert -KeySpec Signature \\\n    -Subject \"CN=P2SChildCert\" -KeyExportPolicy Exportable \\\n    -HashAlgorithm sha256 -KeyLength 2048 \\\n    -CertStoreLocation \"Cert:\\CurrentUser\\My\" \\\n    -Signer $cert -TextExtension @(\"2.5.29.37={text}1.3.6.1.5.5.7.3.2\")\n\n$RawRootCertFilePath = \"<Replace with your own path>\\P2SRootCertRaw.cer\"\nExport-Certificate -Cert $cert -FilePath $RawRootCertFilePath -Force\n\ncertutil -encode $RawRootCertFilePath $RootCertFilePath\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Manager Template for VM Scale Sets - JSON\nDESCRIPTION: This snippet references an ARM template written in JSON that is used to deploy a Virtual Machine Scale Set (VMSS) with Ubuntu Linux in Azure. The template provisions VMs in Availability Zones and configures a load balancer with NAT rules for SSH access to each VM. Essential dependencies include Azure Resource Manager and standard resource providers like Microsoft.Network and Microsoft.Compute; parameters such as VM image SKU, username, and public IP address are required for correct deployment. The expected input is ARM template parameters, and the output is an operational scale set accessible via SSH through load balancer NAT rules. Intended usage is automation and scalable development/test environments leveraging Azure's infrastructure-as-code capabilities.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-linux-nat-zones/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n// ARM template resources involved in this deployment:\n// Tags: Microsoft.Network/virtualNetworks, Microsoft.Network/networkSecurityGroups, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers, Microsoft.Compute/virtualMachineScaleSets\n//\n// Example SSH access command explained in documentation:\n// ssh -p 50000 {username}@{public-ip-address}\n```\n\n----------------------------------------\n\nTITLE: Configuring Resources for PostgreSQL Flexible Server Backup via ARM Template - JSON\nDESCRIPTION: This snippet, using ARM Template JSON, outlines the declarative resources required to create a PostgreSQL Flexible Server and enable its backup protection via Azure Backup Vault. It references Azure resources such as 'Microsoft.DataProtection/backupVaults', 'Microsoft.DBforPostgreSQL/flexibleServers', 'Microsoft.Authorization/roleAssignments', and also parameters for storage redundancy and backup policies. Prerequisites include having the necessary Azure subscription permissions and parameter values provided during deployment. Inputs are template parameters such as 'vaultStorageRedundancy', and outputs are the provisioned resources and enabled protection state for the server. All dependencies are managed within the resource definitions and enforced by ARM.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.dataprotection/backup-create-postgresqlflex-enable-protection/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.DataProtection/backupVaults, systemAssigned, [parameters('vaultStorageRedundancy')], Microsoft.DataProtection/backupVaults/backupPolicies, Microsoft.DBforPostgreSQL/flexibleServers, Microsoft.Authorization/roleAssignments, Microsoft.DataProtection/backupVaults/backupInstances\"\n```\n\n----------------------------------------\n\nTITLE: Deploying HDInsight R-server Cluster using Azure Resource Manager Template\nDESCRIPTION: This ARM template deploys an HDInsight cluster with R Server and associated Azure Storage account. It uses standard parameters for cluster configuration and allows customization of cluster name, login credentials, and resource sizing.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-rserver/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    // Template parameters would be defined here\n  },\n  \"variables\": {\n    // Variables used in the template would be defined here\n  },\n  \"resources\": [\n    // Resource definitions for HDInsight cluster, storage account, etc. would be here\n  ],\n  \"outputs\": {\n    // Any outputs from the deployment would be defined here\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Workspace with Existing Dependent Resources using PowerShell\nDESCRIPTION: This PowerShell command creates an Azure ML workspace using existing storage account, key vault, and application insights resources. It demonstrates how to reference existing resources when setting up a new workspace with system-assigned identity.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n# For deployment with existing resources, use \"existing\" for the option and resource group name is required.\n\n# Create a workspace with existing storage account, key vault and appinsights\nNew-AzResourceGroupDeployment -ResourceGroupName \"rg\" -TemplateFile \".\\azuredeploy.json\" -workspaceName \"workspaceName\" -location \"westus2\" -Name \"deploymentname\" -storageAccountOption \"existing\" -storageAccountResourceGroupName \"existing-storage-rg\" -storageAccountName \"existing-storage-name\" -keyVaultOption \"existing\" -keyVaultResourceGroupName \"existing-kv-rg\" -keyVaultName \"existing-kv-name\" -applicationInsightsOption \"existing\" -applicationInsightsResourceGroupName \"existing-ai-rg\" -applicationInsightsName \"existing-ai-name\" -identityType \"systemAssigned\"\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure Load Balancer with Inbound NAT Rule via ARM Template - JSON\nDESCRIPTION: This ARM template in JSON format provisions an Azure Load Balancer, assigns it a Public IP, creates a Virtual Network, Network Interface, and configures an inbound NAT rule that associates the Network Interface with the Load Balancer. It is intended for use with Azure Resource Manager (deployment via portal or automation tools), and depends on ARM's standard resource types (Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Network/loadBalancers). Parameters typically include resource names, address ranges, and ports for the NAT rule; outputs include created resource IDs. Input must be a valid ARM deployment context, and output is the set of provisioned networking resources as defined in the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/loadbalancer-with-nat-rule/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // ARM template content defining Load Balancer, Public IP, Virtual Network,\n  // Network Interface, and an inbound NAT Rule in Azure\n  // Parameter and resource definitions omitted for brevity.\n  // This sample is referenced in the documentation and from the provided deployment links.\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Slave Status After Failover\nDESCRIPTION: MySQL command to check the slave status, showing replication progress, connection details, and potential errors on the slave server.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-replication/README.md#2025-04-23_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\nmysql> show slave status\\G;\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Recovery Services Vault and Backup Policies - ARM Template - JSON\nDESCRIPTION: This snippet defines Azure resources using an ARM (Azure Resource Manager) template in JSON format to deploy a Recovery Services Vault, associate workload-based backup policies, register a target VM, and configure protection for a supported workload (such as SQL Server). Dependencies include Azure Resource Manager and proper Azure subscription access. Parameters specify resource names, policy settings, and VM identifiers, and outputs are the deployed resources with configuration applied. This approach is constrained by resource quotas and supported parameter values defined by Azure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-vm-workload-backup/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.RecoveryServices/vaults, Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers, Microsoft.RecoveryServices/vaults/backupPolicies, Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems, Microsoft.Compute/virtualMachines, Microsoft.SqlVirtualMachine/sqlVirtualMachines, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Storage Account with Advanced Threat Protection - ARM Template - JSON\nDESCRIPTION: This snippet defines an Azure Resource Manager (ARM) Template in JSON that provisions a Storage Account with Advanced Threat Protection enabled. It requires the user to supply parameters such as the resource group and location, and will deploy Microsoft.Storage/storageAccounts and Microsoft.Security/advancedThreatProtectionSettings resources. The template's output includes both deployment status and configuration details, intended for use through the Azure Portal, CLI, or automation tools.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage/storage-advanced-threat-protection-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"storageAccountName\": {\n      \"type\": \"string\",\n      \"minLength\": 3,\n      \"maxLength\": 24\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\"\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts\",\n      \"apiVersion\": \"2021-01-01\",\n      \"name\": \"[parameters('storageAccountName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"kind\": \"StorageV2\",\n      \"sku\": {\n        \"name\": \"Standard_LRS\"\n      },\n      \"properties\": {}\n    },\n    {\n      \"type\": \"Microsoft.Security/advancedThreatProtectionSettings\",\n      \"apiVersion\": \"2019-01-01-preview\",\n      \"name\": \"[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'), '/default')]\",\n      \"properties\": {\n        \"isEnabled\": true\n      },\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]\"\n      ]\n    }\n  ],\n  \"outputs\": {\n    \"storageAccountName\": {\n      \"type\": \"string\",\n      \"value\": \"[parameters('storageAccountName')]\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Load Balancer with 2 VMs using ARM Template\nDESCRIPTION: This ARM template deploys a load balancer with two virtual machines in Azure. It sets up the necessary networking components, storage, and compute resources. The template uses resource loops to create multiple network interfaces and VMs efficiently.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/2-vms-loadbalancer-lbrules/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {},\n  \"variables\": {},\n  \"resources\": [],\n  \"outputs\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Assigning Secrets to Azure VM Scale Sets with ARM Template - JSON\nDESCRIPTION: This ARM template JSON snippet configures Azure Virtual Machine Scale Sets to automatically pull specified certificates from Key Vault at deployment time, attaching them as secrets. Requires previously stored certificates in Azure Key Vault, along with configured access policies. Certificates are referenced by URL, with each listed under 'vaultCertificates'; upon deployment, the certificates are placed in the VM's /var/lib/waagent directory. Input parameters include both the Key Vault resource identifiers and the URLs of the desired certificate versions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/README.md#2025-04-23_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"Microsoft.Compute/virtualMachineScaleSets\",\n\n    [â€¦]\n\n    \"virtualMachineProfile\": {\n\n    [â€¦]\n\n        \"secrets\": [\n          {\n            \"sourceVault\": {\n              \"id\": \"[resourceId(parameters('vaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]\"\n            },\n            \"vaultCertificates\": [\n              {\n                \"certificateUrl\": \"[parameters('httpssecretUrlWithVersion')]\"\n              },\n              {\n                \"certificateUrl\": \"[parameters('httpscasecretUrlWithVersion')]\"\n              }\n            ]\n          }\n        ]\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Cosmos DB Cassandra API via Bicep Template - Bicep\nDESCRIPTION: This Bicep template script provisions a Cosmos DB account configured with the Cassandra API in two Azure regions, also defining a keyspace and table with chosen throughput. It requires Azure CLI or compatible tooling and the Bicep language. Parameters control regions, consistency level, failover, names, and throughput. Inputs are provided as Bicep parameters; the script deploys cloud resources and returns their details. Limitation: Only available features of Azure Cosmos DB Cassandra API can be configured.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-cassandra/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam accountName string\nparam location string\nparam locations array\nparam consistencyPolicy string = 'Session'\nparam keyspaceName string\nparam tableName string\nparam throughput int = 400\nparam enableAutomaticFailover bool = false\n\nresource cosmosDbAccount 'Microsoft.DocumentDB/databaseAccounts@2021-04-15' = {\n  name: accountName\n  location: location\n  kind: 'GlobalDocumentDB'\n  properties: {\n    databaseAccountOfferType: 'Standard'\n    locations: locations\n    consistencyPolicy: {\n      defaultConsistencyLevel: consistencyPolicy\n    }\n    apiProperties: {\n      serverVersion: '3.11'\n    }\n    enableAutomaticFailover: enableAutomaticFailover\n    capabilities: [\n      {\n        name: 'EnableCassandra'\n      }\n    ]\n  }\n}\n\nresource cosmosKeyspace 'Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces@2021-04-15' = {\n  name: '${accountName}/${keyspaceName}'\n  dependsOn: [cosmosDbAccount]\n}\n\nresource cosmosTable 'Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables@2021-04-15' = {\n  name: '${accountName}/${keyspaceName}/${tableName}'\n  properties: {\n    resource: {\n      id: tableName\n    }\n    options: {\n      throughput: throughput\n    }\n  }\n  dependsOn: [cosmosKeyspace]\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Location List Command\nDESCRIPTION: Command to list all available Azure regions for resource deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cognitiveservices/cognitive-services-universalkey/GettingStarted.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz account list-locations\n```\n\n----------------------------------------\n\nTITLE: Backing Up MySQL Databases to Azure Blob Storage\nDESCRIPTION: Complete script for backing up MySQL databases and uploading them to Azure Blob Storage. The process includes pausing replication, creating a full backup, compressing it, and uploading to Azure using the Azure CLI.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-replication/README.md#2025-04-23_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\n# Create backups directory if not already created (modify folder as required)\n>mkdir  /home/admin/backups/\n\n# Install npm and azure-cli\n# For latest instructions for installing azure cli see https://azure.microsoft.com/documentation/articles/xplat-cli-install/. (sample commands below)\n> sudo yum update -y\n> sudo yum upgrade -y\n> sudo yum install epel-release -y\n> sudo yum install nodejs -y\n> sudo yum install npm -y\n> sudo npm install -g azure-cli\n\n# Login to azure account using azure cli\n> azure login\n\n# Environment settings for your system\n> export AZURE_STORAGE_ACCOUNT=mysqlbkp\n> export AZURE_STORAGE_ACCESS_KEY=<your access key>\n> export image_to_upload=/home/admin/backups/db_bkp.sql.gz\n> export container_name=<your azure container name>\n> export blob_name=db-backup-$(date +%m-%d-%Y-%H%M%S).sql.gz\n> export destination_folder=<your azure destination folder name>\n\n> cd /home/admin/backups/\n\n# Stop replication to slave\n> mysqladmin stop-slave -u admin -p\n\n# Take mysql backup for all databases\n> mysqldump --all-databases > alldbs.sql -u admin -p\n\n# Compress the mysql backup\n> gzip alldbs.sql\n\n# Start slave replication\n> mysqladmin start-slave -u admin -p\n\n# Remove previous backup file\n> rm -Rf $image_to_upload\n\n# Move compressed mysql backup to the to be uploaded file\n> mv alldbs.sql.gz $image_to_upload\n\n# Move the backup to Azure Blob storage\n> azure storage blob upload $image_to_upload $container_name $blob_name\n```\n\n----------------------------------------\n\nTITLE: Connecting to AKS Cluster using Azure CLI\nDESCRIPTION: This command retrieves the credentials for the kubectl CLI to connect to the deployed AKS cluster. It requires the cluster name and resource group name as parameters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.kubernetes/aks-vmss-systemassigned-identity/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz aks get-credentials --name MyManagedCluster --resource-group MyResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Defining ARM Template Resource Tags for Azure Virtual WAN Deployment - JSON\nDESCRIPTION: This snippet lists resource tags and resource provider types to be used in an Azure ARM template for deploying a Virtual WAN (vWAN) solution. The tags capture key Azure networking components, including hubs, gateways, ExpressRoute, VPN, and routing features, and should be incorporated into the ARM template's resources or metadata. It requires the ARM deployment engine and knowledge of Azure resource namespaces and variables, such as the use of the 'vwan_cfg' variable for dynamic referencing. The snippet is intended as a reference for configuring or filtering resources and does not constitute a full deployable template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/virtual-wan-with-all-gateways/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags:Virtual WAN, vWAN, Hub, ExpressRoute, VPN, S2S, P2S, Routing, Standard, Microsoft.Network/virtualWans, [variables('vwan_cfg').type], Microsoft.Network/virtualHubs, Microsoft.Network/virtualNetworks, Microsoft.Network/virtualHubs/hubVirtualNetworkConnections, Microsoft.Network/vpnGateways, Microsoft.Network/expressRouteGateways, Microsoft.Network/vpnServerConfigurations, Microsoft.Network/p2sVpnGateways\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Autoscale Rules for Ubuntu VMSS\nDESCRIPTION: Autoscale configuration that monitors CPU usage and scales out when processor time exceeds 50% for 5 minutes. Includes cool down period of 1 minute after scale actions. Works with Ubuntu Linux 15.04 or 14.04.4-LTS VMs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-ubuntu-autoscale/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"sample for CPU\": \"\\\\Processor\\\\PercentProcessorTime\",\n  \"monitoring interval\": \"1 Minute\",\n  \"scale out condition\": \"Percent Processor Time > 50% for 5 Minutes\",\n  \"scale action\": \"add one VM instance\",\n  \"cool down period\": \"1 Minute\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Storage Account with Advanced Threat Protection - Bicep Template - Bicep\nDESCRIPTION: This snippet shows a Bicep template to declare and deploy an Azure Storage Account with Advanced Threat Protection enabled. Bicep simplifies Azure resource deployment using concise syntax, supporting required properties and dependencies. Users must specify parameters like the account name; the script deploys both the storage account and the related advanced threat protection settings in a single operation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage/storage-advanced-threat-protection-create/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam storageAccountName string\nparam location string = resourceGroup().location\n\nresource storage 'Microsoft.Storage/storageAccounts@2021-01-01' = {\n  name: storageAccountName\n  location: location\n  kind: 'StorageV2'\n  sku: {\n    name: 'Standard_LRS'\n  }\n}\n\nresource atp 'Microsoft.Security/advancedThreatProtectionSettings@2019-01-01-preview' = {\n  name: 'default'\n  scope: storage\n  properties: {\n    isEnabled: true\n  }\n}\n\noutput storageAccountName string = storageAccountName\n```\n\n----------------------------------------\n\nTITLE: Accessing and Verifying MongoDB Sharding Cluster\nDESCRIPTION: Commands to verify the sharding cluster deployment by connecting to a router server and checking the shard status. This demonstrates how to use the MongoDB shell to authenticate and view shard configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mongo/mongodb-sharding-centos/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$mongo -u \"<mongouser>\" -p \"<mongopassword>\" \"admin\"\n\ndb.runCommand( { listshards : 1 } )\n\nexit\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Container Apps with VNET Integration\nDESCRIPTION: ARM template and Bicep configuration for setting up an external Container Apps environment with virtual network integration. Includes Log Analytics workspace, managed environment, and network resource creation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.app/container-app-vnet-external-environment/README.md#2025-04-23_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Deploying WAF Geo Filtering Policy for Azure Front Door\nDESCRIPTION: ARM template for creating a Web Application Firewall policy with geographical filtering capabilities. The template references country codes from Microsoft's documentation for configuring allow/block rules based on source country.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-geo-filtering/README.md#2025-04-23_snippet_0\n\nLANGUAGE: tags\nCODE:\n```\nMicrosoft.Network/FrontDoorWebApplicationFirewallPolicies\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure Web PubSub Resource Type in Bicep/ARM\nDESCRIPTION: Specifies the Azure resource type and API version (`Microsoft.SignalRService/webPubSub@2021-10-01`) used within the Bicep template to deploy an Azure Web PubSub service instance. The template defaults to the Free tier with 1 unit, enabled connectivity/messaging logs, and disabled live trace and TLS client certificates. This identifier is used by Azure Resource Manager to provision the correct service.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/azure-web-pubsub/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.SignalRService/webPubSub@2021-10-01\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Windows VM with Multiple Data Disks\nDESCRIPTION: This ARM template deploys multiple Azure resources including a Storage Account, Virtual Network, Public IP, Network Interface, and a Windows VM with 4 empty data disks. It also configures VM Diagnostics Extension using a Base64 encoded XML config for basic performance counters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-multiple-data-disk/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": \"Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Service Principal for Kubernetes Cluster Autoscaler on Azure\nDESCRIPTION: Shell command to create a new Service Principal in Azure Active Directory, which is required to give the Kubernetes master node permissions to scale the Virtual Machine Scale Set.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/kubernetes-on-ubuntu-vmss/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz ad sp create-for-rbac --name ServicePrincipalName\n```\n\n----------------------------------------\n\nTITLE: Configuring ASCS/SCS Internal Load Balancer Ports for SAP NetWeaver\nDESCRIPTION: This snippet outlines the port configuration for the Azure Load Balancer supporting multiple SAP systems. It includes ports for ASCS, SCS, and ERS instances, as well as probe ports for health monitoring.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-3-tier-marketplace-image-multi-sid-xscs-md/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nASCS Ports (instance number x0): 32x0, 36x0, 39x0,  81x0, 5x013, 5x014, 5x016\nSCS Ports (instance number x1): 32x1, 33x1, 39x1, 81x1, 5x113, 5x114, 5x116\nASCS ERS ports on Linux (instance number x2): 33x2, 5x213, 5x214, 5x216\nSCS ERS ports on Linux (instance number x3): 33x3, 5x313, 5x314, 5x316\n\nASCS/SCS Internal Load Balancer probe port: 620x0\nERS Internal Load Balancer probe port (Linux only): 621x2\n```\n\n----------------------------------------\n\nTITLE: Assigning Contributor Role to Azure ML Service Principal with Azure CLI\nDESCRIPTION: This Azure CLI command assigns the Contributor role to the Azure Machine Learning service principal at the subscription level, required for workspace encryption.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk-service-side-encryption/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz role assignment create --role 'Contributor' --assignee-object-id <object-ID> --subscription <subscription-ID>\n```\n\n----------------------------------------\n\nTITLE: Handling Optional Parameters in Azure Linked Template\nDESCRIPTION: This snippet shows how optional parameters are handled in the linked template. The pattern '*_or_empty' is used for parameters that require a subobject when present, but should be empty otherwise. Variables are used to define the objects that will be used if the parameter is not empty.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/parameterized-linked-templates/detail/vmtemplate.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"parameters\": {\n    \"availabilityset_id_or_empty\": {\n        \"type\": \"string\"\n    },\n    \"publicip_id_or_empty\": {\n        \"type\": \"string\"\n    },\n    \"appgwbackend_id_or_empty\": {\n        \"type\": \"string\"\n    }\n},\n\"variables\": {\n    \"availabilitySet\": {\n        \"id\": \"[parameters('availabilityset_id_or_empty')]\"\n    },\n    \"publicIPAddress\": {\n        \"id\": \"[parameters('publicip_id_or_empty')]\"\n    },\n    \"applicationGatewayBackendAddressPool\": [\n        {\n            \"id\": \"[parameters('appgwbackend_id_or_empty')]\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Azure Subscription Details using PowerShell\nDESCRIPTION: This PowerShell command retrieves details of all Azure subscriptions accessible by the current user. It's used as a prerequisite step to identify the target subscription ID for assigning roles.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzSubscription\n```\n\n----------------------------------------\n\nTITLE: Configuring Health Probe for Linux Container in Azure Container Instances\nDESCRIPTION: ARM template configuration that deploys a Linux container with health probe monitoring. The container is configured to restart when the health check fails after 30 seconds when the /tmp/healthy file is deleted.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerinstance/aci-linuxcontainer-healthprobe/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n\"contentVersion\": \"1.0.0.0\",\n\"parameters\": { },\n\"resources\": [\n    {\n        \"type\": \"Microsoft.ContainerInstance/containerGroups\",\n        \"apiVersion\": \"2021-03-01\",\n        \"name\": \"[parameters('name')]\",\n        \"location\": \"[parameters('location')]\",\n        \"properties\": {\n            \"containers\": [\n                {\n                    \"name\": \"container1\",\n                    \"properties\": {\n                        \"image\": \"yourimage\",\n                        \"livenessProbe\": {\n                            \"exec\": {\n                                \"command\": [\"test\", \"-f\", \"/tmp/healthy\"]\n                            },\n                            \"periodSeconds\": 30\n                        }\n                    }\n                }\n            ]\n        }\n    }\n]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Traffic Manager External Endpoint Resource in ARM Template (JSON)\nDESCRIPTION: This JSON structure represents the core resource definition within an ARM template used to add an external endpoint to an existing Traffic Manager profile. It utilizes the 'Microsoft.Network/TrafficManagerProfiles/ExternalEndpoints' resource type. The actual template would require parameters like the existing profile name and the target domain/IP for the new endpoint.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/traffic-manager-add-external-endpoint/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n// Example structure for the resource definition within azuredeploy.json\n// based on the described functionality and tags.\n{\n  \"type\": \"Microsoft.Network/TrafficManagerProfiles/ExternalEndpoints\",\n  \"apiVersion\": \"[variables('apiVersion')]\", // Specific API version would be in the full template\n  \"name\": \"[concat(parameters('existingProfileName'), '/', parameters('endpointName'))]\", // Name combines profile and new endpoint name\n  \"dependsOn\": [], // May depend on the profile resource if created in the same template, but here modifies existing.\n  \"properties\": {\n    \"target\": \"[parameters('endpointTarget')]\", // The domain name or IP address of the external endpoint\n    \"endpointStatus\": \"Enabled\", // Or based on a parameter\n    \"endpointLocation\": \"[parameters('endpointLocation')]\" // Required for external endpoints\n    // Other properties like weight, priority might be included\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying a Standard Stream Analytics Job with ARM Template - JSON\nDESCRIPTION: This ARM template in JSON defines resources and parameters necessary to provision a Standard Stream Analytics Job on Azure. It requires no external dependencies besides an Azure subscription. Key parameters typically include job name, location, and streaming units. When deployed, it creates a scalable analytics engine capable of ingesting and processing real-time stream data. The template is intended for use in automated Azure deployments, is idempotent, and outputs the deployed job properties. Limitations may arise depending on the chosen SKU or supported regions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.streamanalytics/streamanalytics-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"jobName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Stream Analytics job.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Location for all resources.\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.StreamAnalytics/streamingjobs\",\n      \"apiVersion\": \"2016-03-01\",\n      \"name\": \"[parameters('jobName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"sku\": {\n          \"name\": \"Standard\"\n        },\n        \"eventsOutOfOrderPolicy\": \"Drop\",\n        \"outputErrorPolicy\": \"Drop\",\n        \"eventsOutOfOrderMaxDelayInSeconds\": 0,\n        \"eventsLateArrivalMaxDelayInSeconds\": 5,\n        \"dataLocale\": \"en-US\",\n        \"compatibilityLevel\": \"1.2\"\n      }\n    }\n  ],\n  \"outputs\": {\n    \"jobId\": {\n      \"type\": \"string\",\n      \"value\": \"[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('jobName'))]\"\n    }\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources with ARM Template\nDESCRIPTION: This ARM template deploys multiple Azure resources including VMs, a load balancer, and networking components. It uses resource loops for creating network interfaces and virtual machines, and sets up NAT rules on the load balancer.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/2-vms-loadbalancer-natrules/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Compute/availabilitySets, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Network/loadBalancers, Microsoft.Network/loadBalancers/inboundNatRules, Microsoft.Compute/virtualMachines\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Storage without Encryption using Bicep Module\nDESCRIPTION: This Bicep snippet demonstrates deploying an Azure Storage account by calling the `storage` module from `main.bicep`. It provides parameters for the storage account configuration, including name, SKU, kind, tier, and a 7-day deletion retention policy. Importantly, it explicitly disables blob encryption by setting the `blobEncryptionEnabled` parameter to `false`.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage/storage-blob-encryption-and-retention/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam deploymentName string = 'storage${utcNow()}'\n\nmodule storage './main.bicep' = {\n  name: deploymentName\n  params: {\n    storageAccountName: 'mystorageaccount'\n    storageSku: 'Standard_LRS'\n    storageKind: 'StorageV2'\n    storageTier: 'Hot'\n    deleteRetentionPolicy: 7\n    blobEncryptionEnabled: false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Stack HCI 23H2 Cluster ARM Template\nDESCRIPTION: This ARM template creates an Azure Stack HCI 23H2 cluster. It requires specific resource providers to be registered and a Service Principal to be created beforehand. The template is deployed in two stages: validate and deploy.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurestackhci/create-cluster/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags\": Microsoft.AzureStackHCI/clusters, hci\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Commands for Role Management\nDESCRIPTION: Azure CLI commands to retrieve Role ID and Principal ID for Azure AD configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-ilm-store/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz role definition list --name \"role-name\" --query \"[].name\" --output tsv\naz ad sp list --display-name \"name-of-service-principal\" --query \"[].objectId\" --output tsv\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resources for Linux Web App Deployment\nDESCRIPTION: This ARM template defines the necessary Azure resources for deploying a basic Linux web app. It includes an app service plan and a web app, with tags for identification.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-basic-linux/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/serverfarms, Microsoft.Web/sites\"\n```\n\n----------------------------------------\n\nTITLE: Deploying HDInsight Cluster with Existing Storage in Azure Resource Manager\nDESCRIPTION: This ARM template deploys an HDInsight cluster that uses an existing Azure storage account as its default storage. It supports secure transfer enabled storage accounts and requires HDInsight version 3.6 or newer. The template is part of a quickstart for creating Hadoop clusters with secure transfer storage in Azure HDInsight.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-linux-with-existing-default-storage-account/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\"Microsoft.HDInsight/clusters\": \"\", \"Microsoft.Storage/storageAccounts\": \"\"}\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types for MySQL VNet Deployment Template\nDESCRIPTION: This snippet lists the specific Azure Resource Manager resource types that are utilized in the associated template. These types include resources for MySQL server VNet rules, virtual networks, subnets, MySQL servers, and firewall rules, indicating the components managed by the deployment template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.dbformysql/managed-mysql-with-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.DBforMySQL/servers/virtualNetworkRules, Microsoft.Network/virtualNetworks, Microsoft.Network/virtualNetworks/subnets, Microsoft.DBforMySQL/servers, Microsoft.DBforMySQL/servers/firewallRules`\n```\n\n----------------------------------------\n\nTITLE: Deploying Elasticsearch Cluster ARM Template\nDESCRIPTION: This ARM template snippet shows the deployment buttons for the Elasticsearch cluster. It includes links to deploy the template directly to Azure and to visualize it in the Azure Resource Manager Visualizer.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/elastic/elasticsearch/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy to Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Felastic%2Felasticsearch%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Felastic%2Felasticsearch%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Getting Azure Subscription IDs with PowerShell\nDESCRIPTION: This PowerShell command retrieves all Azure subscriptions available to the authenticated user, displaying their names and IDs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk-service-side-encryption/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzSubscription\n```\n\n----------------------------------------\n\nTITLE: Connecting to Azure Active Directory with PowerShell\nDESCRIPTION: Establishes a connection to Azure Active Directory using PowerShell. This requires the Azure AD PowerShell module to be installed and requires the tenant ID of your Azure Active Directory.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/aad-domainservices/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n# Connect to your Azure Account.\nConnect-AzureAD -TenantId <Active Directory ID>\n```\n\n----------------------------------------\n\nTITLE: Deploying WordPress on Azure Container Instance using ARM Template\nDESCRIPTION: This ARM template deploys a WordPress site and MySQL database on Azure Container Instance. It sets up persistent storage using Azure Storage File Shares for the WordPress content and MySQL data. The deployment includes creating necessary resources like storage accounts and container instances.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/wordpress/aci-wordpress/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"siteName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"The site name, the first segment of the WordPress site FQDN (e.g. mywordpress.westus.azurecontainer.io)\"\n      }\n    },\n    \"mysqlPassword\": {\n      \"type\": \"securestring\",\n      \"metadata\": {\n        \"description\": \"The password to access the MySQL database.\"\n      }\n    }\n  },\n  \"resources\": [\n    // Resource definitions would go here\n  ],\n  \"outputs\": {\n    \"siteFQDN\": {\n      \"type\": \"string\",\n      \"value\": \"[reference('containerGroup').ipAddress.fqdn]\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Describing Kafka Topics\nDESCRIPTION: These Kafka CLI commands demonstrate how to create a new topic and describe its details. They should be run from the Kafka installation directory on one of the broker nodes.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/kafka/kafka-on-ubuntu/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd /usr/local/kafka/kafka_2.10-0.8.2.1/\n\nbin/kafka-topics.sh --create --zookeeper 10.0.0.40:2181  --replication-factor 2 --partitions 1 --topic my-replicated-topic1\n\nbin/kafka-topics.sh --describe --zookeeper 10.0.0.40:2181  --topic my-replicated-topic1\n```\n\n----------------------------------------\n\nTITLE: Performing CRUD Operations on Custom Resources via ARM API (Shell)\nDESCRIPTION: This example demonstrates the REST API endpoint format for performing Create (PUT), Read (GET), and Delete (DELETE) operations on instances of the `customResources` type defined by an Azure Custom Resource Provider. Replace placeholders like `{subscriptionId}`, `{resourceGroupName}`, etc., with actual values. The API version `2018-09-01-preview` is specified.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.customproviders/custom-rp-with-function/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nPUT/GET/DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/{resourceProviderName}/customResources/{customResourceName}?api-version=2018-09-01-preview\n```\n\n----------------------------------------\n\nTITLE: Configuring Anti-Malware Settings for Windows VM\nDESCRIPTION: Configuration settings for the Anti-Malware extension including path exclusions (C:\\Users), file extension exclusions (.txt), process exclusions (taskmgr.exe), realtime protection enabled, and scheduled quick scans on Saturdays at 2 AM.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/anti-malware-extension-windows-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n* Exclusions\n  * Paths - C:\\Users\n  * Extensions -  .txt\n  * Processes - taskmgr.exe\n*  RealtimeProtectionEnabled - true\n* ScheduledScanSettings\n  * scanType - Quick\n  * day - 7 i.e. Saturday\n  * time - 120s\n```\n\n----------------------------------------\n\nTITLE: Getting Azure Cosmos DB Service Principal Object ID using PowerShell\nDESCRIPTION: This PowerShell command retrieves the display name and object ID of the 'Azure Cosmos DB' service principal. The object ID is needed to configure the Key Vault access policy for CMK.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzADServicePrincipal --DisplayName \"Azure Cosmos DB\" | select-object DisplayName, Id\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Docker Container Usage\nDESCRIPTION: Command to access Azure CLI running as a Docker container on the provisioned VM. Allows for Azure management operations after logging in.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-linux-dynamic-data-disks/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -ti azure-cli bash -c \"azure login && bash\"\n```\n\n----------------------------------------\n\nTITLE: Defining Routing Rules for Application Gateway in Azure ARM Template\nDESCRIPTION: This JSON snippet defines a routing rule for an Application Gateway in an Azure Resource Manager template. It specifies the rule type, HTTP listener, backend address pool, and backend HTTP settings.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/parameterized-linked-templates/detail/agtemplate.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"requestRoutingRules\": [\n  {\n    \"Name\": \"rule1\",\n    \"properties\": {\n      \"RuleType\": \"Basic\",\n      \"httpListener\": {\n        \"id\": \"[resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('applicationGatewayName'), 'appGatewayHttpListener')]\"\n      },\n      \"backendAddressPool\": {\n        \"id\": \"[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('applicationGatewayName'), 'appGatewayBackendPool')]\"\n      },\n      \"backendHttpSettings\": {\n        \"id\": \"[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('applicationGatewayName'), 'appGatewayBackendHttpSettings')]\"\n      }\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Python Web App\nDESCRIPTION: This ARM template snippet defines the resources needed for a Python-enabled web app on Azure. It includes an App Service Plan and an App Service configured for Python 3.7.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-python/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/serverfarms, Microsoft.Web/sites\"\n```\n\n----------------------------------------\n\nTITLE: Declaring Recovery Services Vault Resource - Azure Resource Manager Template - JSON\nDESCRIPTION: This code snippet defines an Azure Recovery Services Vault resource in a standard ARM template (JSON) format for deployment via Azure Resource Manager. The resource uses the Microsoft.RecoveryServices/vaults provider and typically specifies default parameters and options. The code requires the Azure Resource Manager environment, correct subscription/tenant permissions, and, if run in Azure, access to the appropriate API versions. Expected input parameters include location, vault name, and SKU (depending on the template). This snippet outputs a Recovery Services Vault ready for use with Backup and Site Recovery.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-vault-basic/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"vaultName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"myRecoveryVault\",\n      \"metadata\": {\n        \"description\": \"Name of the Recovery Services Vault.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Location for the Recovery Services Vault.\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.RecoveryServices/vaults\",\n      \"apiVersion\": \"2021-08-01\",\n      \"name\": \"[parameters('vaultName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {}\n    }\n  ]\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources with Bicep\nDESCRIPTION: This Bicep code snippet defines the deployment of Azure resources including an Azure Data Explorer cluster, database, Event Hub, and data connection. It uses system-assigned identity and includes role assignments for data ingestion.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.kusto/kusto-event-hub/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\nparam location string = resourceGroup().location\nparam eventHubNamespaceName string\nparam eventHubName string\nparam consumerGroupName string\nparam clusterName string\nparam databaseName string\n\n@description('The name of the event hub to be used to ingest data.')\nparam dataFormat string = 'JSON'\n\n@description('The mapping rule to be used to ingest data.')\nparam tableName string = 'Events'\n\n@description('The number of days to retain data in the event hub.')\nparam eventHubRetentionInDays int = 1\n\n@description('The number of partitions to create in the event hub.')\nparam eventHubPartitionCount int = 2\n\n@description('The name of the consumer group to be used to ingest data.')\nparam databaseScript string = 'Events\\n| where name == \"John\"'\n\nresource eventHubNamespace 'Microsoft.EventHub/namespaces@2021-11-01' = {\n  name: eventHubNamespaceName\n  location: location\n  sku: {\n    name: 'Standard'\n    tier: 'Standard'\n    capacity: 1\n  }\n  properties: {\n    isAutoInflateEnabled: false\n    maximumThroughputUnits: 0\n  }\n}\n\nresource eventHub 'Microsoft.EventHub/namespaces/eventhubs@2021-11-01' = {\n  parent: eventHubNamespace\n  name: eventHubName\n  properties: {\n    messageRetentionInDays: eventHubRetentionInDays\n    partitionCount: eventHubPartitionCount\n  }\n}\n\nresource consumerGroup 'Microsoft.EventHub/namespaces/eventhubs/consumergroups@2021-11-01' = {\n  parent: eventHub\n  name: consumerGroupName\n}\n\nresource cluster 'Microsoft.Kusto/clusters@2023-05-02' = {\n  name: clusterName\n  location: location\n  sku: {\n    name: 'Standard_D11_v2'\n    tier: 'Standard'\n  }\n  identity: {\n    type: 'SystemAssigned'\n  }\n}\n\nresource database 'Microsoft.Kusto/clusters/databases@2023-05-02' = {\n  parent: cluster\n  name: databaseName\n  kind: 'ReadWrite'\n  location: location\n}\n\nresource script 'Microsoft.Kusto/clusters/databases/scripts@2023-05-02' = {\n  parent: database\n  name: 'DataScript'\n  properties: {\n    scriptContent: loadTextContent('script.kql')\n    continueOnErrors: false\n  }\n}\n\nresource roleAssignment 'Microsoft.Authorization/roleAssignments@2022-04-01' = {\n  scope: eventHubNamespace\n  name: guid(eventHubNamespace.id, 'data-sender')\n  properties: {\n    roleDefinitionId: subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '2b629674-e913-4c01-ae53-ef4638d8f975')\n    principalId: cluster.identity.principalId\n    principalType: 'ServicePrincipal'\n  }\n}\n\nresource dataConnection 'Microsoft.Kusto/clusters/databases/dataConnections@2023-05-02' = {\n  parent: database\n  name: 'DataConnection'\n  location: location\n  kind: 'EventHub'\n  properties: {\n    compression: 'None'\n    consumerGroup: consumerGroup.name\n    dataFormat: dataFormat\n    eventHubResourceId: eventHub.id\n    eventSystemProperties: [\n      'x-opt-sequence-number'\n      'x-opt-offset'\n      'x-opt-enqueued-time'\n    ]\n    managedIdentityResourceId: cluster.id\n    mappingRuleName: tableName\n    tableName: tableName\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Machine Learning AKS Compute with ARM Template\nDESCRIPTION: This ARM template creates an Azure Machine Learning AKS compute instance. It includes resource definitions for storage accounts, key vaults, application insights, and the machine learning workspace with an AKS compute target.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-compute-create-akscompute/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.MachineLearningServices/workspaces/computes, Microsoft.Storage/storageAccounts, Microsoft.KeyVault/vaults, Microsoft.Insights/components, Microsoft.MachineLearningServices/workspaces, systemAssigned\"\n```\n\n----------------------------------------\n\nTITLE: Installing Azul Zulu OpenJDK using apt on Ubuntu/Debian\nDESCRIPTION: This bash script installs the Azul Zulu OpenJDK JVM on Ubuntu or Debian Linux using the apt package manager. It adds the Azul repository, installs the specified Zulu package, and verifies the installation by checking the Java version.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/zulu/Linux-Java-ZuluOpenJDK/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nscripts/apt-zulu-install.sh\n```\n\n----------------------------------------\n\nTITLE: Defining Storage Task Conditions and Deployment - Bicep - Bicep\nDESCRIPTION: This code snippet in Bicep illustrates how to define a storage task and its specific immutability conditions for Word documents within a storage account. Bicep is a domain-specific language for declaratively deploying Azure resources, and here it is likely used to provision the storage task resource including time-based immutability policies. The snippet requires the Azure Bicep tooling and an appropriate resource group context; parameters such as storage account name, task conditions, and retention duration are typically configurable. Outputs would include the deployed storage task and its policy, but actual code details should be reviewed to adjust resource names and parameter bindings as necessary.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage.actions/storage-task/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\n// Bicep code goes here. Please refer to the azuredeploy.bicep or main.bicep file in the repository.\n// Example structure (not actual content):\nresource storageTask 'Microsoft.Storage/storageAccounts/tasks@2023-01-01' = {\n  name: 'myStorageTask'\n  properties: {\n    conditions: {\n      fileType: 'docx'\n      // Additional conditions defined here\n    }\n    actions: {\n      setImmutabilityPolicy: {\n        retentionDays: 30\n      }\n    }\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving Role Definition Information using Azure PowerShell\nDESCRIPTION: This PowerShell command retrieves information about a specific role definition, including its ID. The example shows how to get details for the 'Reader' role, but it can be used for other roles like 'Owner' and 'Contributor'.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.authorization/rbac-builtinrole-resourcegroup/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nPS C:\\> Get-AzRoleDefinition -Name \"reader\"\n```\n\n----------------------------------------\n\nTITLE: Generating Self-Signed Certificates for Azure Deployment\nDESCRIPTION: This shell command executes a script to create self-signed certificates for custom domains. The script generates .txt files containing Base64 encoded versions of the certificates, which are used in the deployment parameters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/private-webapp-with-app-gateway-and-apim/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./create-certs.sh *.contoso.net\n```\n\n----------------------------------------\n\nTITLE: Querying Learned BGP Routes in Azure via PowerShell\nDESCRIPTION: This PowerShell command retrieves and displays the BGP routes learned by the Azure Route Server from a specific peer connection using 'Get-AzVirtualRouterPeerLearnedRoute'. It requires the Az.Network PowerShell module and authenticated Azure session. Key parameters include the ResourceGroupName, VirtualRouterName, and PeerName. The output is formatted as a table, listing network prefixes advertised by Quagga. Ensure the specified resources exist and the Route Server is deployed before running.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/route-server-quagga/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzVirtualRouterPeerLearnedRoute -ResourceGroupName <Name_Resource_Group> -VirtualRouterName routesrv1 -PeerName bgp-conn1 | ft\n```\n\n----------------------------------------\n\nTITLE: Declaring Recovery Services Vault Resource with ARM Template - JSON\nDESCRIPTION: Defines the ARM template resource types required to deploy a Recovery Services vault with advanced features. Relies on Microsoft.RecoveryServices/vaults and backup storage configuration subresource types. The deployment expects parameters for vault properties such as storage type and region, and supports extensibility via tags and additional attributes. Outputs include the fully provisioned Recovery Services vault instance, ready for backup and site recovery workloads.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-vault-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.RecoveryServices/vaults, Microsoft.RecoveryServices/vaults/backupstorageconfig\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Manager Tags for Network Security Perimeter\nDESCRIPTION: This snippet lists the Azure Resource Manager resource types deployed by the template. It includes the network security perimeter itself, its profiles, access rules within profiles, resource associations, and the target Azure Key Vault.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/network-security-perimeter-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/networkSecurityPerimeters, Microsoft.Network/networkSecurityPerimeters/profiles, Microsoft.Network/networkSecurityPerimeters/profiles/accessRules, Microsoft.Network/networkSecurityPerimeters/resourceAssociations, Microsoft.KeyVault/vaults\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template using Azure CLI\nDESCRIPTION: This command deploys the ARM template to create the web app with Django using the Azure CLI. It requires the resource group name and the path to the template file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-django/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\naz group deployment create --resource-group \"resource-group\" --template-file \"azuredeploy.json path\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Logic App VETER Pipeline Template\nDESCRIPTION: ARM template snippet for deploying the VETER pipeline Logic App. It includes resource definitions for the integration account, schemas, maps, and the Logic App workflow. The template uses parameters to customize the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.logic/logic-app-veter-pipeline/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    // Parameter definitions would be here\n  },\n  \"variables\": {\n    // Variable definitions would be here\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Logic/integrationAccounts\",\n      \"apiVersion\": \"2019-05-01\",\n      \"name\": \"[parameters('integrationAccountName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"Standard\"\n      }\n    },\n    // Additional resource definitions for schemas, maps, and Logic App would follow\n  ],\n  \"outputs\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Validating Private Endpoint Resolution with PowerShell Commands\nDESCRIPTION: These PowerShell commands can be used in the Azure web app's KUDU console to validate that name resolution is working correctly for both the Azure SQL DB and storage account. They verify that private endpoints are properly resolving to private IP addresses.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/web-app-regional-vnet-private-endpoint-sql-storage/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nPS D:\\home> nameresolver <storage account name>.<storage account private DNS zone name>\nPS D:\\home> nameresolver <Azure SQL DB name>.<Azure SQL DB private DNS zone name>\n```\n\n----------------------------------------\n\nTITLE: Logging into Azure Account using PowerShell\nDESCRIPTION: This PowerShell command is used to initiate the login process to an Azure account within an Azure PowerShell session. It's a prerequisite step before running scripts or commands that interact with Azure resources, ensuring the session is authenticated.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-blob-to-sql-copy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nLogin-AzureRmAccount\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group using Azure CLI\nDESCRIPTION: Command for creating a new Azure Resource Group with a specified name and location. This is required before deploying the virtual machine.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/datascience/vm-ubuntu-DSVM-GPU-or-CPU/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources with Azure CLI\nDESCRIPTION: This code snippet demonstrates how to use Azure CLI to create a resource group and deploy the template. It creates a resource group named 'ExampleGroup' in Central US and then deploys the template to that group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-windows-with-privateendpoint-applicationgateway/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name ExampleGroup --location \"Central US\"\n\naz deployment group create \\\n  --name ExampleDeployment \\\n  --resource-group ExampleGroup \\\n  --template-file <path-to-bicep>\n```\n\n----------------------------------------\n\nTITLE: Configuring Linux VM with Azure Custom Script Extension - Bash\nDESCRIPTION: This Bash script, executed via the Azure Custom Script Extension, validates parameters, updates the OS, installs network utilities, and performs nslookup against storage account endpoints to verify private resolution. Dependencies include Ubuntu and required privileges to run apt and network utilities. Parameters are passed from the template. The expected input is the set of endpoint URIs; the output is validation logs. It may require network access to update/upgrade packages and resolve DNS.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage/file-share-private-endpoint/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"#!/bin/bash\\n\\n# Validate input parameters\\nif [ -z \\\"$1\\\" ] || [ -z \\\"$2\\\" ]; then\\n  echo 'Usage: $0 <storage_account_name> <storage_account2_name>'\\n  exit 1\\nfi\\n\\nstorage_account=\\\"$1\\\"\\nstorage_account2=\\\"$2\\\"\\n\\n# Update and upgrade the system\\nsudo apt-get update -y\\nsudo apt-get upgrade -y\\n\\n# Install curl and traceroute\\nsudo apt-get install curl traceroute -y\\n\\n# DNS validation for storage accounts\\necho \\\"Verifying DNS resolution for File Share Storage Account:\\\"\\nnslookup \\\"$storage_account.file.core.windows.net\\\"\\n\\necho \\\"Verifying DNS resolution for Blob Storage Account:\\\"\\nnslookup \\\"$storage_account2.blob.core.windows.net\\\"\\n\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Sharding for MongoDB Database and Collections\nDESCRIPTION: Commands to enable sharding for a specific database and shard a collection. This shows how to use the MongoDB shell to configure sharding on a database level and then shard a specific collection using a shard key pattern.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mongo/mongodb-sharding-centos/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$mongo -u \"<mongouser>\" -p \"<mongopassword>\" \"admin\"\n\ndb.runCommand({enableSharding: \"<database>\" })\n\nsh.status()\n\nsh.shardCollection(\"<database>.<collection>\", shard-key-pattern)\n\nexit\n```\n\n----------------------------------------\n\nTITLE: Deploying File Dataset from Web URL in Azure Machine Learning (JSON)\nDESCRIPTION: This ARM template snippet defines the resources needed to create a file dataset from a web URL in an Azure Machine Learning workspace. It includes parameters for workspace name, location, and dataset details.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-dataset-create-file-from-web-url/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"workspaceName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Specifies the name of the Azure Machine Learning workspace.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Specifies the location for all resources.\"\n      }\n    },\n    \"datasetName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"The name of the dataset.\"\n      }\n    },\n    \"datasetDescription\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"\",\n      \"metadata\": {\n        \"description\": \"Description for the dataset.\"\n      }\n    },\n    \"sourceUrl\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"The Web URL from which the data is to be imported.\"\n      }\n    },\n    \"skipValidation\": {\n      \"type\": \"bool\",\n      \"defaultValue\": false,\n      \"metadata\": {\n        \"description\": \"Optional : If specified, skips data validation.\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.MachineLearningServices/workspaces/datasets\",\n      \"name\": \"[concat(parameters('workspaceName'), '/', parameters('datasetName'))]\",\n      \"apiVersion\": \"2020-05-01-preview\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"SkipValidation\": \"[parameters('skipValidation')]\",\n        \"DatasetType\": \"File\",\n        \"Parameters\": {\n          \"Path\": {\n            \"Source\": \"Web\",\n            \"SourceUrl\": \"[parameters('sourceUrl')]\"\n          }\n        },\n        \"Registration\": {\n          \"Description\": \"[parameters('datasetDescription')]\"\n        }\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying NFS Cluster Infrastructure Script\nDESCRIPTION: Shell script command to deploy the complete NFS server infrastructure using the deployment script in the scripts folder. The script handles deploying prerequisites and the main NFS high availability cluster.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/nfs-ha-cluster-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nchmod +x deploy_everything.sh\n./deploy_everything.sh <name_of_the_resource_group_to_deploy>\n```\n\n----------------------------------------\n\nTITLE: Deploying New Management Group using Azure Resource Manager Template\nDESCRIPTION: This JSON template creates a new management group in Azure at the tenant level. It uses the Microsoft.Management/managementGroups resource type to define the management group structure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/tenant-deployments/new-mg/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"mgName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the management group\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Management/managementGroups\",\n      \"apiVersion\": \"2020-05-01\",\n      \"name\": \"[parameters('mgName')]\",\n      \"properties\": {}\n    }\n  ],\n  \"outputs\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Log Analytics Workspace with Solutions using ARM Template\nDESCRIPTION: This ARM template deploys a Log Analytics workspace with VM Insights and Container Insights solutions. It includes diagnostic settings configuration and uses tags for resource management. The template is designed for deployment in Azure public and US government clouds.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.insights/log-analytics-with-solutions-and-diagnostics/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\n  \"Microsoft.OperationalInsights/workspaces\": \"\",\n  \"Microsoft.Insights/diagnosticSettings\": \"\",\n  \"Microsoft.OperationsManagement/solutions\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Container App with Registry\nDESCRIPTION: Template deployment configuration for setting up a Container App Environment with Azure Container Registry integration. The setup includes a Container Registry seeded with a public image and Container App using Managed Identity for image pulling.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.app/container-app-acr/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`Tags: ContainerApp, Container App, Container, Container Registry, ARM Template`\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Manager Template Tags for Logic App Custom API\nDESCRIPTION: This JSON snippet defines the tags for the Azure Resource Manager template. It specifies the resources and services used in the template, including Microsoft.Web/serverfarms, Microsoft.Web/sites, Microsoft.Logic/workflows, and authentication methods.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.logic/logic-app-custom-api/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/serverfarms, Microsoft.Web/sites, config, Microsoft.Logic/workflows, recurrence, Http, ActiveDirectoryOAuth\"\n```\n\n----------------------------------------\n\nTITLE: Creating Service Principal for AKS using Azure CLI\nDESCRIPTION: Azure CLI commands to create a Service Principal for AKS deployment and retrieve its Object ID. This is a prerequisite step before deploying the ARM template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerinstance/aks-advanced-networking/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\naz ad sp create-for-rbac -n \"spn_name\" --skip-assignment\naz ad sp show --id <The AppId from the create-for-rbac command> --query objectId\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Command for Deploying ARM Template\nDESCRIPTION: This command deploys the ARM template for the Azure Web App linked to a GitHub account. It creates a deployment in the specified resource group using the local template file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-github-deploy/GettingStarted-WebGit.md#2025-04-23_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\naz group deployment create --name \"name of your deployment\" --resource-group \"resource-group\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: Unlocking Account in Geth Console\nDESCRIPTION: This snippet shows how to unlock the Ethereum account that will be used to deploy the contract. This step is necessary before deploying the contract.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\npersonal.unlockAccount(personal.listAccounts[0])\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Namespace Support in AGIC via Helm\nDESCRIPTION: Shows the different ways to configure namespace watching in the helm-config.yaml file for AGIC deployment. This can be used to monitor all namespaces or specific ones for ingress resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/aks-application-gateway-ingress-controller/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nwatchNamespace: default,secondNamespace\n```\n\n----------------------------------------\n\nTITLE: Deploying WordPress with MySQL In-App on Azure App Service\nDESCRIPTION: This ARM template creates the necessary resources for running WordPress on Azure App Service with MySQL In-App. It includes the App Service plan, the web app itself, and configures the web app to use MySQL In-App and deploy WordPress from source control.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/wordpress/wordpress-app-service-mysql-inapp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": \"Microsoft.Web/serverfarms, Microsoft.Web/sites, sourcecontrols, config\"\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Types for Databricks Deployment - JSON\nDESCRIPTION: This snippet, presented as a tag list, enumerates all the Azure resource types provisioned by the ARM/Bicep template, including public IP addresses, NAT gateways, network security groups, virtual networks, and Databricks workspaces. These tags help in resource categorization and automation. Prerequisites include an Azure subscription and permission to deploy these resource types. The input is a comma-separated string; the output is used for metadata and orchestration identification within the template. No parameterization is present, and actual deployment logic resides in associated ARM or Bicep template files.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-all-in-one-template-for-vnet-injection/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/natGateways, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Databricks/workspaces\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Cosmos DB Account, App Service Plan, and Web App using Azure ARM Template - JSON\nDESCRIPTION: This ARM template snippet provisions an Azure Cosmos DB account (Microsoft.DocumentDB/databaseAccounts), an App Service Plan (Microsoft.Web/serverfarms), and a Web App (Microsoft.Web/sites). The Web App receives two application settings that reference the Cosmos DB account endpoint, enabling deployed solutions to connect with the database account. Dependencies include the Azure Resource Manager service, sufficient permissions to deploy the listed resources, and registration for the Microsoft.DocumentDB and Microsoft.Web resource providers. Parameters typically include names for the DB account, plan, app, and other configuration specifics. Outputs include resource references and configured settings. The template does not create actual databases within Cosmos DB, only the account; database creation must be handled separately.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/documentdb-webapp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"databaseAccountName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Cosmos DB account to create.\"\n      }\n    },\n    \"appServicePlanName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the App Service plan.\"\n      }\n    },\n    \"webAppName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Web App.\"\n      }\n    }\n  },\n  \"variables\": {},\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.DocumentDB/databaseAccounts\",\n      \"apiVersion\": \"2021-04-15\",\n      \"name\": \"[parameters('databaseAccountName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"kind\": \"GlobalDocumentDB\",\n      \"properties\": {\n        \"databaseAccountOfferType\": \"Standard\",\n        \"locations\": [\n          {\n            \"locationName\": \"[resourceGroup().location]\",\n            \"failoverPriority\": 0\n          }\n        ]\n      }\n    },\n    {\n      \"type\": \"Microsoft.Web/serverfarms\",\n      \"apiVersion\": \"2021-02-01\",\n      \"name\": \"[parameters('appServicePlanName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"sku\": {\n        \"name\": \"S1\",\n        \"tier\": \"Standard\"\n      },\n      \"properties\": {\n        \"reserved\": false\n      }\n    },\n    {\n      \"type\": \"Microsoft.Web/sites\",\n      \"apiVersion\": \"2021-02-01\",\n      \"name\": \"[parameters('webAppName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]\",\n        \"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]\"\n      ],\n      \"properties\": {\n        \"serverFarmId\": \"[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]\",\n        \"siteConfig\": {\n          \"appSettings\": [\n            {\n              \"name\": \"COSMOSDB_ENDPOINT\",\n              \"value\": \"[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName')), '2021-04-15').documentEndpoint]\"\n            },\n            {\n              \"name\": \"COSMOSDB_ACCOUNTNAME\",\n              \"value\": \"[parameters('databaseAccountName')]\"\n            }\n          ]\n        }\n      }\n    }\n  ],\n  \"outputs\": {\n    \"cosmosDbAccountEndpoint\": {\n      \"type\": \"string\",\n      \"value\": \"[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName')), '2021-04-15').documentEndpoint]\"\n    }\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying App Service Environment with Azure Resource Manager JSON Template - JSON\nDESCRIPTION: This snippet (referenced but not included directly in the documentation) represents the Azure Resource Manager (ARM) JSON template used to deploy an App Service Environment (ASE) within a specified virtual network. To use it, ensure you have required permissions and provide inputs like Azure subscription, resource group, and virtual network settings. The template provisions resources of type Microsoft.Web/hostingEnvironments and Microsoft.Network/virtualNetworks, requiring no manual infrastructure setup. Inputs typically include parameterizing vNet settings and environment configurations, while outputs are the provisioned ASE resources. External dependencies include Azure Resource Manager and relevant API versions for the specified resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-ase-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"//referenced-arm-template\": \"azuredeploy.json\",\n  \"//tags\": \"Microsoft.Web/hostingEnvironments, Microsoft.Network/virtualNetworks\"\n  // The ARM template typically includes parameters for vNet name, address prefixes, subnet configuration, and App Service Environment settings.\n  // It also defines resources of type 'Microsoft.Web/hostingEnvironments' with appropriate properties for creating the ASE and 'Microsoft.Network/virtualNetworks' to ensure network isolation.\n}\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving IoT Edge Device Connection String\nDESCRIPTION: This command retrieves the connection string for the specified IoT Edge device from the IoT Hub. The connection string is used to link the physical device with its identity in IoT Hub.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iot-iothub-edgeemulator-vm/GettingStarted-Iot-EdgeEmulator.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\naz iot hub device-identity show-connection-string --device-id myEdgeDevice --hub-name {hub_name}\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Login Command\nDESCRIPTION: Command to authenticate with Azure CLI. Opens a browser window for login credentials.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cognitiveservices/cognitive-services-universalkey/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Tagging Azure Resources for Backup Vault and MySQL Flexible Server - Bicep/JSON\nDESCRIPTION: This code snippet lists tags and resource types relevant for provisioning backup vaults, backup policies, policy assignments, and MySQL Flexible Servers in Azure deployments. Dependencies included are core Azure Resource Manager resources for databases and backups with system-assigned identities and configurable parameters for storage redundancy. The tags help document or orchestrate deployment dependencies, particularly when deleting vaults, to ensure related resources are properly handled. Expected input is within ARM template (JSON) or parameterized Bicep contexts, and outputs rely on Azure's deployment validation for tags. There are no substantial constraints, aside from resource existence and deletion requirements enforced by Azure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.dataprotection/backup-create-mysqlflex-enable-protection/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\n\"Tags: Microsoft.DataProtection/backupVaults, systemAssigned, [parameters('vaultStorageRedundancy')], Microsoft.DataProtection/backupVaults/backupPolicies, Microsoft.DBforMySQL/flexibleServers, Microsoft.Authorization/roleAssignments, Microsoft.DataProtection/backupVaults/backupInstances\"\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template with Azure CLI\nDESCRIPTION: Command to deploy resources defined in an ARM template using the Azure CLI. This creates a Virtual Machine and associated resources as specified in the azuredeploy.json file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ubuntu-desktop-gnome-rdp/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\naz group deployment create --name \"name of your deployment\" --resource-group \"resource-group\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: Querying API Management Request Duration in Application Insights using Kusto\nDESCRIPTION: This Kusto query retrieves request data from Application Insights for the specific 'GET /postman-echo/get' operation within the last 10 minutes. It calculates the average duration for these requests, groups them into 1-second intervals, and renders the results as a time chart for performance analysis.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-api-management/README.md#2025-04-23_snippet_2\n\nLANGUAGE: kusto\nCODE:\n```\nrequests\n| where name == 'GET /postman-echo/get'\n  and timestamp > ago(10m)\n| summarize [\"Average Response Time\"] = avg(duration) by bin(timestamp, 1s)\n| render timechart\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Linux VM with Static IP\nDESCRIPTION: JSON ARM template that deploys a basic Ubuntu Linux VM with networking components including VNET, subnet, and network interface. The template initially creates a dynamic IP configuration and then converts it to static. Supports deployment to both Azure Commercial and Azure Government clouds.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-automatic-static-ip/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`Tags: vm, static, ipaddress, nic, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Resources/deployments`\n```\n\n----------------------------------------\n\nTITLE: Using Linked Template in Copy Loop for Midtier VMs in Azure ARM Template\nDESCRIPTION: This snippet demonstrates how the linked template is used within a copy loop to create multiple midtier VMs. The availability set is only populated if the VM count for this tier is greater than 1.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/parameterized-linked-templates/detail/vmtemplate.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"copy\": {\n    \"name\": \"midtierVMLoop\",\n    \"count\": \"[parameters('midtierVMCount')]\"\n},\n\"name\": \"[concat(variables('midtierVMName'), copyIndex(1))]\",\n\"type\": \"Microsoft.Resources/deployments\",\n\"apiVersion\": \"2021-04-01\",\n\"dependsOn\": [\n    \"[resourceId('Microsoft.Network/networkInterfaces', concat(variables('midtierNicName'), copyIndex(1)))]\"\n],\n\"properties\": {\n    \"mode\": \"Incremental\",\n    \"templateLink\": {\n        \"uri\": \"[variables('paramvmTemplateUrl')]\",\n        \"contentVersion\": \"1.0.0.0\"\n    },\n    \"parameters\": {\n        \"vmName\": {\n            \"value\": \"[concat(variables('midtierVMName'), copyIndex(1))]\"\n        },\n        \"vmSize\": {\n            \"value\": \"[parameters('midtierVMSize')]\"\n        },\n        \"adminUsername\": {\n            \"value\": \"[parameters('adminUsername')]\"\n        },\n        \"adminPassword\": {\n            \"value\": \"[parameters('adminPassword')]\"\n        },\n        \"osType\": {\n            \"value\": \"[variables('osType')]\"\n        },\n        \"imageReference\": {\n            \"value\": \"[variables('imageReference')]\"\n        },\n        \"nicName\": {\n            \"value\": \"[concat(variables('midtierNicName'), copyIndex(1))]\"\n        },\n        \"nicId\": {\n            \"value\": \"[resourceId('Microsoft.Network/networkInterfaces', concat(variables('midtierNicName'), copyIndex(1)))]\"\n        },\n        \"dataDisksCount\": {\n            \"value\": \"[parameters('midtierVMDataDiskCount')]\"\n        },\n        \"availabilityset_id_or_empty\": {\n            \"value\": \"[if(greater(parameters('midtierVMCount'), 1), resourceId('Microsoft.Compute/availabilitySets', variables('midtierAvailabilitySetName')), '')]\"\n        },\n        \"publicip_id_or_empty\": {\n            \"value\": \"\"\n        },\n        \"appgwbackend_id_or_empty\": {\n            \"value\": \"[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGatewayName')), '/backendAddressPools/', variables('appGatewayBackendPoolName'))]\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: URL Path Map Configuration with Redirect in Azure Application Gateway\nDESCRIPTION: Shows how to configure path-based routing rules with redirect configurations. Includes both default redirect behavior and specific path-based rules.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-redirect/README.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"urlPathMaps\": [\n        {\n            \"name\": \"urlPathMap1\",\n            \"properties\": {\n              \"defaultRedirectConfiguration\": {\n                \"id\": \"[concat(variables('applicationGatewayID'), '/redirectConfigurations/redirectConfig2')]\"\n              },\n                \"pathRules\": [\n                    {\n                        \"name\": \"pathRule1\",\n                        \"properties\": {\n                            \"paths\": [\n                                \"[parameters('pathMatch1')]\"\n                            ],\n                            \"redirectConfiguration\": {\n                                \"id\": \"[concat(variables('applicationGatewayID'), '/redirectConfigurations/redirectConfig1')]\"\n                            }\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Capturing and Generalizing Azure Linux VM via Azure CLI - Bash\nDESCRIPTION: This snippet provides a series of Azure CLI commands used to log in, set ARM mode, deallocate, generalize, and capture a Linux VM into a generalized image. These commands must be run with the Azure CLI installed and authenticated. 'rgName' and 'vmName' are parameters for the resource group and VM respectively. The process deallocates the VM, generalizes it, and captures it to a storage account along with a deployment template, overwriting the current VM state and creating resources for future deployments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-linux-customimage-autoscale/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nazure login\nazure config mode arm\nazure vm deallocate â€“g [rgName] â€“n [vmName]\nazure vm generalize â€“g [rgName] â€“n [vmName]\nazure vm capture [rgName] [vmName] vhdNamePrefix â€“t [templateName].json\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Manager Template for Ultra Managed Disk\nDESCRIPTION: This JSON snippet represents the Azure Resource Manager template for creating an ultra managed disk. It allows specifying parameters such as disk name, location, sector size, and disk size in GB.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/ultra-managed-disk/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"diskName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the managed disk\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Location for all resources.\"\n      }\n    },\n    \"sectorSize\": {\n      \"type\": \"int\",\n      \"defaultValue\": 512,\n      \"allowedValues\": [\n        512,\n        4096\n      ],\n      \"metadata\": {\n        \"description\": \"Logical sector size in bytes for Ultra disks\"\n      }\n    },\n    \"diskSizeGB\": {\n      \"type\": \"int\",\n      \"defaultValue\": 1024,\n      \"metadata\": {\n        \"description\": \"Size of the managed disk in GB\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Compute/disks\",\n      \"apiVersion\": \"2022-07-02\",\n      \"name\": \"[parameters('diskName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"UltraSSD_LRS\"\n      },\n      \"properties\": {\n        \"creationData\": {\n          \"createOption\": \"Empty\"\n        },\n        \"diskSizeGB\": \"[parameters('diskSizeGB')]\",\n        \"logicalSectorSize\": \"[parameters('sectorSize')]\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure VM DR with Bicep using Azure CLI\nDESCRIPTION: This Azure CLI command executes the deployment of the Azure VM disaster recovery infrastructure defined in the `main.bicep` template. It uses the parameters specified in `azuredeploy.parameters.json` and targets the named resource group. Requires Azure CLI, the necessary Bicep and parameter files, and execution from the correct directory.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-vm-replication-and-disaster-recovery/README.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create --resource-group 'deployment resource group name' --template-file .\\main.bicep --parameters .\\azuredeploy.parameters.json\n```\n\n----------------------------------------\n\nTITLE: Deploying Databricks File System Datastore in Azure ML using ARM Template\nDESCRIPTION: This ARM template snippet defines the resources needed to create a Databricks File System datastore in an Azure Machine Learning workspace. It includes parameters for workspace name, location, and datastore details.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-datastore-create-dbfs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"workspaceName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Specifies the name of the Azure Machine Learning workspace.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Specifies the location for all resources.\"\n      }\n    },\n    \"datastoreName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"The name of the datastore.\"\n      }\n    },\n    \"databricksWorkspaceResourceId\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"The resource ID of the databricks workspace.\"\n      }\n    },\n    \"databricksAccessToken\": {\n      \"type\": \"securestring\",\n      \"metadata\": {\n        \"description\": \"The access token for the databricks workspace.\"\n      }\n    },\n    \"dbfsRootPath\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"The root path of the DBFS.\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.MachineLearningServices/workspaces/datastores\",\n      \"name\": \"[concat(parameters('workspaceName'), '/', parameters('datastoreName'))]\",\n      \"apiVersion\": \"2020-05-01-preview\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"databricksWorkspaceResourceId\": \"[parameters('databricksWorkspaceResourceId')]\",\n        \"databricksAccessToken\": \"[parameters('databricksAccessToken')]\",\n        \"dbfsRootPath\": \"[parameters('dbfsRootPath')]\",\n        \"datastoreType\": \"dbfs\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Tagging Azure Migrate Project Resources\nDESCRIPTION: Resource tags used to identify and categorize Azure Migrate project components and solutions\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.migrate/migrate-project-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Migrate/MigrateProjects, Microsoft.Migrate/MigrateProjects/Solutions\"\n```\n\n----------------------------------------\n\nTITLE: Writing to Ethereum Smart Contract with Transaction\nDESCRIPTION: Sends a transaction to write data to a smart contract. This example sets an entry in the guest book contract, which requires mining to be confirmed on the blockchain.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nguestBook.setEntry.sendTransaction(\"Hello Azure!\", {from: eth.accounts[0]});\n```\n\n----------------------------------------\n\nTITLE: Defining Backup Vault Resource with Azure Resource Manager (ARM) Template - JSON\nDESCRIPTION: This snippet specifies the ARM resource type for deploying a Backup Vault in Azure using the Microsoft.DataProtection/backupVaults resource type. It highlights use of the 'systemAssigned' managed identity and parameterizes the 'vaultStorageRedundancy' property to allow flexible redundancy settings. Dependencies include the Azure Resource Manager, valid deployment parameters, and appropriate permissions; the expected input is a JSON template or a linked deployment, and the output is a created Backup Vault resource in the specified resource group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.dataprotection/backup-vault-basic/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.DataProtection/backupVaults, systemAssigned, [parameters('vaultStorageRedundancy')]\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Redundant HAProxy Setup (JSON)\nDESCRIPTION: This ARM template snippet defines the resources needed for a redundant HAProxy setup with Azure Load Balancer. It includes storage accounts, availability sets, public IP addresses, virtual networks, load balancers, network interfaces, and virtual machines. The template uses resource loops for creating multiple similar resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/haproxy-redundant-floatingip-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n\"contentVersion\": \"1.0.0.0\",\n\"parameters\": { ... },\n\"variables\": { ... },\n\"resources\": [\n  {\n    \"type\": \"Microsoft.Storage/storageAccounts\",\n    \"name\": \"[variables('storageAccountName')]\",\n    ...\n  },\n  {\n    \"type\": \"Microsoft.Compute/availabilitySets\",\n    \"name\": \"[variables('availabilitySetNames')[copyIndex()]]\",\n    ...\n  },\n  {\n    \"type\": \"Microsoft.Network/publicIPAddresses\",\n    \"name\": \"[variables('publicIPAddressName')]\",\n    ...\n  },\n  {\n    \"type\": \"Microsoft.Network/virtualNetworks\",\n    \"name\": \"[variables('virtualNetworkName')]\",\n    ...\n  },\n  {\n    \"type\": \"Microsoft.Network/loadBalancers\",\n    \"name\": \"[variables('lbName')]\",\n    ...\n  },\n  {\n    \"type\": \"Microsoft.Network/networkInterfaces\",\n    \"name\": \"[concat(variables('nicNamePrefix'), copyIndex())]\",\n    ...\n  },\n  {\n    \"type\": \"Microsoft.Compute/virtualMachines\",\n    \"name\": \"[concat(variables('vmNamePrefix'), copyIndex())]\",\n    ...\n  },\n  {\n    \"type\": \"Microsoft.Compute/virtualMachines/extensions\",\n    \"name\": \"[concat(variables('vmNamePrefix'), copyIndex(), '/install_haproxy')]\",\n    ...\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Deploying Bicep Template with Azure CLI\nDESCRIPTION: Executes an Azure CLI command to deploy the Azure resources defined in the 'main.bicep' template using the parameters specified in 'azuredeploy.parameters.json' to the target resource group. This command initiates the actual resource creation and should be run after confirming the 'what-if' output is satisfactory.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.desktopvirtualization/azure-virtual-desktop-with-fslogix/README.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create --resource-group 'deployment resource group name' --template-file .\\main.bicep --parameters .\\azuredeploy.parameters.json\n```\n\n----------------------------------------\n\nTITLE: Granting Graph API Permission using Azure CLI (Bash)\nDESCRIPTION: This Bash script grants the 'Application.ReadWrite.All' permission for the Microsoft Graph API to a managed identity using Azure CLI and a direct REST API call. It uses `az ad sp list` to find the Microsoft Graph service principal, `jq` to extract the Graph application's Object ID and the specific App Role ID. It then constructs a JSON request body and uses `az rest` to make a POST request to the Azure AD Graph endpoint (`graph.windows.net`) to assign the role. Requires the tenant ID and the managed identity's Object ID.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.resources/deployment-script-azcli-graph-azure-ad/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntenantId='<Your Azure AD tenant ID>'\n\ngraphAppId='00000003-0000-0000-c000-000000000000' # This is a well-known Microsoft Graph application ID.\ngraphApiAppRoleName='Application.ReadWrite.All'\ngraphApiApplication=$(az ad sp list --filter \"appId eq '$graphAppId'\" --query \"{ appRoleId: [0] .appRoles [?value=='$graphApiAppRoleName'].id | [0], objectId:[0] .id }\" -o json)\n\n# Get the app role for the Graph API.\ngraphServicePrincipalObjectId=$(jq -r '.objectId' <<< \"$graphApiApplication\")\ngraphApiAppRoleId=$(jq -r '.appRoleId' <<< \"$graphApiApplication\")\n\n# Assign the role to the managed identity.\nrequestBody=$(jq -n \\\n                  --arg id \"$graphApiAppRoleId\" \\\n                  --arg principalId \"$managedIdentityObjectId\" \\\n                  --arg resourceId \"$graphServicePrincipalObjectId\" \\\n                  '{id: $id, principalId: $principalId, resourceId: $resourceId}' )\naz rest -m post -u \"https://graph.windows.net/$tenantId/servicePrincipals/$managedIdentityObjectId/appRoleAssignments?api-version=1.6\" -b \"$requestBody\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Alert-to-Slack Logic App\nDESCRIPTION: This ARM template snippet defines the resources needed for the Alert-to-Slack Logic app. It includes a Web API connection to Slack and a Logic app workflow. The workflow is triggered by a webhook and posts messages to a Slack channel.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/alert-to-slack-with-logic-app/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": \"Microsoft.Web/connections, Microsoft.Logic/workflows, request, object, string, Http, ApiConnection\"\n```\n\n----------------------------------------\n\nTITLE: Deploying App Service Environment v2 with ARM Template\nDESCRIPTION: Azure Resource Manager template for creating an App Service Environment v2. The template includes configuration for the hosting environment and associated virtual network.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-asev2-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\"Microsoft.Web/hostingEnvironments\": \"\", \"Microsoft.Network/virtualNetworks\": \"\"}\n```\n\n----------------------------------------\n\nTITLE: Reading Entry After Mining Transaction\nDESCRIPTION: Demonstrates reading from the smart contract after the transaction has been mined, now showing the stored entry. This confirms that the data was successfully written to the blockchain.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n> guestBook.getMyEntry();\n\"Hello Azure\"\n```\n\n----------------------------------------\n\nTITLE: Custom Disk Performance Test with fio in Linux Shell\nDESCRIPTION: This shell command demonstrates how to create a custom disk performance test using fio. It sets up a random read/write test with a 128MB file size on the /datadisk directory.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vm-disk-performance-meter/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsudo echo -e '[io]\\nrw=randrw\\nsize=128m\\ndirectory=/datadisk' | sudo fio -\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure API Management Instance with ARM Template\nDESCRIPTION: This ARM template deploys an Azure API Management instance. It utilizes the Microsoft.ApiManagement/service resource type. The template can be deployed to both Azure public cloud and Azure US Government cloud.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.apimanagement/azure-api-management-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.ApiManagement/service\"\n```\n\n----------------------------------------\n\nTITLE: Deploying a Standard Stream Analytics Job with Bicep - Bicep\nDESCRIPTION: This Bicep snippet provides a declarative approach to deploying a Standard Stream Analytics Job resource. It utilizes parameters for the job\\'s name and location, defining the analytics job with a standard SKU. The Bicep code requires the Azure CLI with Bicep support and an active Azure subscription. Once deployed, it provisions the analytics resource ready for configuration of input, output, and streaming queries. Outputs supply the ARM resource ID for downstream reference.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.streamanalytics/streamanalytics-create/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam jobName string\nparam location string = resourceGroup().location\n\nresource streamingJob 'Microsoft.StreamAnalytics/streamingjobs@2016-03-01' = {\n  name: jobName\n  location: location\n  properties: {\n    sku: {\n      name: 'Standard'\n    }\n    eventsOutOfOrderPolicy: 'Drop'\n    outputErrorPolicy: 'Drop'\n    eventsOutOfOrderMaxDelayInSeconds: 0\n    eventsLateArrivalMaxDelayInSeconds: 5\n    dataLocale: 'en-US'\n    compatibilityLevel: '1.2'\n  }\n}\n\noutput jobId string = streamingJob.id\n\n```\n\n----------------------------------------\n\nTITLE: HTTP POST Request Body for Logic App Email Trigger\nDESCRIPTION: JSON structure required for triggering the Logic App email functionality. Contains required fields for email sender, recipient, subject, and body content.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.logic/logic-app-sendgrid/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"from\": \"my@email.com\",\n  \"to\": \"your@email.com\",\n  \"subject\": \"Email Subject\",\n  \"emailbody\": \"Hello world\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Azure SPN Configuration Commands with Variable Assignments\nDESCRIPTION: Complete example of Azure SPN setup with variable definitions, authentication, and role assignment. This demonstrates the full workflow required to configure the service principal needed for the VM boot measurement.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/bootstorm-vm-boot-time/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$azureSubscriptionId = \"<Your Azure subscription id (Get-AzureSubscription).SubscriptionId>\"\n\n$azureAdIdUri = \"https://azureadiduri\"\n\n$azureAdPassword = \"azureadpwd123\"\n\n$azureAdDisplayName = \"azureaddisplayname\"\n\nAdd-AzureRmAccount\n\nSelect-AzureRmSubscription -SubscriptionID $azureSubscriptionId\n\n$azureAdApp = New-AzureRmADApplication -Password $azureAdPassword -DisplayName $azureAdDisplayName -IdentifierUris $azureAdIdUri -HomePage $azureAdIdUri\n\nNew-AzureRmADServicePrincipal -ApplicationId $azureAdApp.ApplicationId\n\nNew-AzureRmRoleAssignment -RoleDefinitionName Owner -ServicePrincipalName $azureAdIdUri\n```\n\n----------------------------------------\n\nTITLE: Retrieving Service Principal Details using Azure CLI\nDESCRIPTION: This snippet shows how to retrieve detailed information about a Service Principal using its appId. This information is needed to complete the deployment parameters for the Chef HA template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/chef-automate-ha/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz ad sp show --id a530c3a0-YOUR-GUID-HERE-21e3d7ede80c\n```\n\n----------------------------------------\n\nTITLE: Adding Azure IoT CLI Extension - Azure CLI - Bash\nDESCRIPTION: Installs the Azure IoT CLI extension, enabling additional IoT-related commands in the Azure CLI environment. Prerequisites: Azure CLI installed and authenticated, internet access. No input parameters are required; successful completion allows subsequent IoT operations via CLI.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iot-iothub-edgeemulator-vm/GettingStarted-Iot-EdgeEmulator.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz extension add --name azure-cli-iot-ext\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Group with Lock and RBAC in Bicep\nDESCRIPTION: This Bicep template snippet defines the creation of a resource group, applies a DoNotDelete lock, and assigns the contributor role to a specified principal. It uses modules for resource group creation and role assignment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/subscription-deployments/create-rg-lock-role-assignment/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\ntargetScope = 'subscription'\n\n@description('Name of the resourceGroup to create')\nparam rgName string\n\n@description('Location for the resourceGroup')\nparam rgLocation string\n\n@description('principalId if the user that will be given contributor access to the resourceGroup')\nparam principalId string\n\n@description('A new GUID used to identify the role assignment')\nparam roleNameGuid string = newGuid()\n\nvar contributorRoleDefinitionId = subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')\n\nresource rg 'Microsoft.Resources/resourceGroups@2021-04-01' = {\n  name: rgName\n  location: rgLocation\n}\n\nmodule lock 'br/public:security/resource-lock:1.0.1' = {\n  scope: rg\n  name: 'lock-${rgName}'\n  params: {\n    level: 'CanNotDelete'\n    notes: 'Prevent deletion of the resourceGroup'\n  }\n}\n\nmodule rbac 'br/public:authorization/role-assignment:1.1.0' = {\n  scope: rg\n  name: 'rbac-${rgName}'\n  params: {\n    principalId: principalId\n    roleDefinitionId: contributorRoleDefinitionId\n    principalType: 'User'\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources using ARM Template\nDESCRIPTION: This code snippet represents the deployment button for the Azure Resource Manager (ARM) template. It provides a quick way to deploy the Web App and MySQL resources to Azure directly from the GitHub repository.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-managed-mysql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.web%2Fwebapp-linux-managed-mysql%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags\nDESCRIPTION: Resource tags definition for the Azure Monitor workbook template, specifying governance, finops, cost, and optimization related tags.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.costmanagement/governance-workbook/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: governance, finops, cost, optimization, Microsoft.Insights/workbooks\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom WAF Rules in Azure Application Gateway\nDESCRIPTION: JSON configuration for WAF custom rules that block requests based on query string and User-Agent header. The first rule blocks requests containing 'blockme' in the query string, while the second rule blocks requests from 'evilbot' in the User-Agent header.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/aks-application-gateway-ingress-controller/README.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"BlockMe\",\n  \"priority\": 1,\n  \"ruleType\": \"MatchRule\",\n  \"action\": \"Block\",\n  \"matchConditions\": [\n    {\n      \"matchVariables\": [\n        {\n          \"variableName\": \"QueryString\"\n        }\n      ],\n      \"operator\": \"Contains\",\n      \"negationConditon\": false,\n      \"matchValues\": [\n        \"blockme\"\n      ],\n      \"transforms\": []\n    }\n  ]\n},\n{\n  \"name\": \"BlockEvilBot\",\n  \"priority\": 2,\n  \"ruleType\": \"MatchRule\",\n  \"action\": \"Block\",\n  \"matchConditions\": [\n    {\n      \"matchVariables\": [\n        {\n          \"variableName\": \"RequestHeaders\",\n          \"selector\": \"User-Agent\"\n        }\n      ],\n      \"operator\": \"Contains\",\n      \"negationConditon\": false,\n      \"matchValues\": [\n        \"evilbot\"\n      ],\n      \"transforms\": [\n        \"Lowercase\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types Deployed by Template\nDESCRIPTION: This line lists the primary Azure resource types that are provisioned by the associated Azure Resource Manager (ARM) or Bicep template. These tags serve as metadata to categorize the template based on the core Azure services it deploys, including Function Apps, App Service Plans (serverfarms), Virtual Networks, Web Sites (representing the Function App), and Storage Accounts.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/function-premium-frontdoor/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: FunctionApp, Microsoft.Web/serverfarms, Microsoft.Network/virtualNetworks, Microsoft.Web/sites, Microsoft.Storage/storageAccounts`\n```\n\n----------------------------------------\n\nTITLE: Retrieving Moodle Deployment Outputs with Azure CLI\nDESCRIPTION: Commands to retrieve the outputs and configuration details of the deployed Moodle cluster using Azure CLI.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/moodle/moodle-scalable-cluster-ubuntu/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz group deployment show --resource-group $MOODLE_RG_NAME --name $MOODLE_DEPLOYMENT_NAME --out json --query *.outputs\n\naz group deployment show --resource-group $MOODLE_RG_NAME --name $MOODLE_DEPLOYMENT_NAME --out tsv --query *.outputs.databaseAdminPassword.value\n\nMOODLE_DATABASE_DNS=\"$(az group deployment show --resource-group $MOODLE_RG_NAME --name $MOODLE_DEPLOYMENT_NAME --out tsv --query *.outputs.databaseDNS.value)\"\n```\n\n----------------------------------------\n\nTITLE: Defining Storage Task Conditions and Deployment - ARM Template - JSON\nDESCRIPTION: This code snippet in JSON shows how to define an Azure Resource Manager (ARM) template for deploying a storage task with specific conditions and actions. The JSON template describes resources, parameters, and properties such as the targeted file type, the immutability policy applied, and integration with an Azure storage account. Dependencies include Azure Resource Manager and access to deploy templates in the desired subscription and resource group. Parameters like file type and retention policy can be customized; the output is a deployed storage task with the defined policy. Ensure you validate the template for required fields and permissions before deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage.actions/storage-task/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  // JSON ARM Template code goes here. Please refer to azuredeploy.json in the repository.\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts/tasks\",\n      \"apiVersion\": \"2023-01-01\",\n      \"name\": \"myStorageTask\",\n      \"properties\": {\n        \"conditions\": {\n          \"fileType\": \"docx\"\n        },\n        \"actions\": {\n          \"setImmutabilityPolicy\": {\n            \"retentionDays\": 30\n          }\n        }\n      }\n    }\n  ]\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Bicep/ARM Template using Azure CLI (Bash)\nDESCRIPTION: This Bash script uses the Azure CLI to deploy a Bicep file (`main.bicep`) to a specified Azure resource group. It employs the `az deployment group create` command, providing the target resource group, the template file path, and parameters including the name of the pre-configured managed identity (`managedIdentityName`) and the desired name for the Azure AD application (`azureADApplicationName`).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.resources/deployment-script-azcli-graph-azure-ad/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naz deployment group create \\\n  --resource-group $resourceGroupName \\\n  --template-file main.bicep \\\n  --parameters managedIdentityName=$managedIdentityName azureADApplicationName=MyApp\n```\n\n----------------------------------------\n\nTITLE: Querying App Service Plan CPU Utilization in Log Analytics\nDESCRIPTION: This Log Analytics query retrieves the average CPU utilization percentage for Azure App Service Plans.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webappazure-oms-monitoring/README.md#2025-04-23_snippet_3\n\nLANGUAGE: kusto\nCODE:\n```\nAzureMetrics | where ResourceId == \"/MICROSOFT.WEB/SERVERFARMS/\" and MetricName == \"CpuPercentage\" | summarize AggregatedValue = avg(Average) by Resource\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template with Azure CLI\nDESCRIPTION: Command to deploy an ARM template using Azure CLI, which creates the Windows Server VM with Visual Studio 2019.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-simple-windows-visualstudio2019/GettingStarted-wsvs.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz group deployment create --name \"name of your deployment\" --resource-group \"resource-group\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Moesif Logging Policy in Azure API Management\nDESCRIPTION: This XML policy configures logging for Azure API Management to send data to Moesif. It captures request and response details, user and company information, and handles both successful and error scenarios.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.apimanagement/api-management-logs-to-moesif-using-eventhub-webapp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<policies>\n    <inbound>\n        <!-- Uncomment base element if policy added to a single API (i.e. not global) -->\n        <!-- <base /> -->\n        <set-variable name=\"moesif-message-id\" value=\"@(Guid.NewGuid())\" />\n        <log-to-eventhub logger-id=\"moesif-log-to-event-hub\" partition-id=\"0\">@{\nvar body = context.Request.Body?.As<string>(true);\nvar MAX_BODY_EH = 145000;\nvar origBodyLen = (null != body) ? body.Length : 0;\nif (MAX_BODY_EH < origBodyLen){ body = body.Remove(MAX_BODY_EH); }\nvar headers = context.Request.Headers\n    .Where(h => h.Key != \"Ocp-Apim-Subscription-Key\")\n    .Select(h => string.Format(\"{0}: {1}\", h.Key, String.Join(\", \", h.Value).Replace(\"\\\"\", \"\\\\\\\"\"))).ToArray<string>();\nvar jwtToken = context.Request.Headers.GetValueOrDefault(\"Authorization\",\"\").AsJwt();\nvar userId = (context.User != null && context.User.Id != null) ? context.User.Id : (jwtToken != null && jwtToken.Subject != null ? jwtToken.Subject : string.Empty);\nvar companyId = (context.Subscription != null && context.Subscription.Id != null) ? context.Subscription.Id : string.Empty;\nvar cru = new JObject();\nif (context.User != null) {\n  cru.Add(\"Email\", context.User.Email);\n  cru.Add(\"Id\", context.User.Id);\n  cru.Add(\"FirstName\", context.User.FirstName);\n  cru.Add(\"LastName\", context.User.LastName);}\nvar crus = System.Convert.ToBase64String(Encoding.UTF8.GetBytes(cru.ToString()));\nvar requestBody = (body != null ? System.Convert.ToBase64String(Encoding.UTF8.GetBytes(body)) : string.Empty);\nreturn new JObject(\n  new JProperty(\"event_type\", \"request\"),\n  new JProperty(\"message-id\", context.Variables[\"moesif-message-id\"]),\n  new JProperty(\"method\", context.Request.Method),\n  new JProperty(\"ip_address\", context.Request.IpAddress),\n  new JProperty(\"uri\", context.Request.OriginalUrl.ToString()),\n  new JProperty(\"user_id\", userId),\n  new JProperty(\"contextRequestUser\", crus),\n  new JProperty(\"company_id\", companyId),\n  new JProperty(\"request_headers\", string.Join(\";;\", headers)),\n  new JProperty(\"request_body\", requestBody),\n  new JProperty(\"contextTimestamp\", context.Timestamp.ToString(\"o\")),\n  new JProperty(\"metadata\", $@\"\")\n  ).ToString();}</log-to-eventhub>\n        <set-variable name=\"sent-moesif-request\" value=\"@(true)\" />\n    </inbound>\n    <backend>\n        <forward-request follow-redirects=\"true\" />\n    </backend>\n    <outbound>\n        <!-- Uncomment base element if policy added to a single API (i.e. not global) -->\n        <!-- <base /> -->\n        <choose>\n            <when condition=\"@(context.Variables.ContainsKey(\"sent-moesif-request\") && !context.Variables.ContainsKey(\"sent-moesif-response\"))\">\n                <log-to-eventhub logger-id=\"moesif-log-to-event-hub\" partition-id=\"0\">@{\nvar body = context.Response.Body?.As<string>(true);\nvar MAX_BODY_EH = 145000;\nvar origBodyLen = (null != body) ? body.Length : 0;\nif (MAX_BODY_EH < origBodyLen){ body = body.Remove(MAX_BODY_EH);}\nvar headers = context.Response.Headers.Select(h => string.Format(\"{0}: {1}\", h.Key, String.Join(\", \", h.Value).Replace(\"\\\"\", \"\\\\\\\"\"))).ToArray<string>();\nvar responseBody = (body != null ? System.Convert.ToBase64String(Encoding.UTF8.GetBytes(body)) : string.Empty);\nreturn new JObject(\n  new JProperty(\"event_type\", \"response\"),\n  new JProperty(\"orig_body_len\", origBodyLen),\n  new JProperty(\"message-id\", context.Variables[\"moesif-message-id\"]),\n  new JProperty(\"status_code\", context.Response.StatusCode),\n  new JProperty(\"response_headers\", string.Join(\";;\", headers)),\n  new JProperty(\"contextTimestamp\", context.Timestamp.Add(context.Elapsed).ToString(\"o\")),\n  new JProperty(\"response_body\", responseBody)\n  ).ToString();}</log-to-eventhub>\n                <set-variable name=\"sent-moesif-response\" value=\"@(true)\" />\n            </when>\n        </choose>\n    </outbound>\n    <on-error>\n        <!-- Uncomment base element if policy added to a single API (i.e. not global) -->\n        <!-- <base /> -->\n        <choose>\n            <when condition=\"@(context.Variables.ContainsKey(\"sent-moesif-request\") && !context.Variables.ContainsKey(\"sent-moesif-response\"))\">\n                <log-to-eventhub logger-id=\"moesif-log-to-event-hub\" partition-id=\"0\">@{\nvar body = context.Response.Body?.As<string>(true);\nvar MAX_BODY_EH = 145000;\nvar origBodyLen = (null != body) ? body.Length : 0;\nif (MAX_BODY_EH < origBodyLen){ body = body.Remove(MAX_BODY_EH);}\nvar headers = context.Response.Headers.Select(h => string.Format(\"{0}: {1}\", h.Key, String.Join(\", \", h.Value).Replace(\"\\\"\", \"\\\\\\\"\"))).ToArray<string>();\nvar responseBody = (body != null ? System.Convert.ToBase64String(Encoding.UTF8.GetBytes(body)) : string.Empty);\nreturn new JObject(\n  new JProperty(\"event_type\", \"response\"),\n  new JProperty(\"orig_body_len\", origBodyLen),\n  new JProperty(\"message-id\", context.Variables[\"moesif-message-id\"]),\n  new JProperty(\"status_code\", context.Response.StatusCode),\n  new JProperty(\"response_headers\", string.Join(\";;\", headers)),\n  new JProperty(\"contextTimestamp\", context.Timestamp.Add(context.Elapsed).ToString(\"o\")),\n  new JProperty(\"response_body\", responseBody)\n  ).ToString();}</log-to-eventhub>\n                <set-variable name=\"sent-moesif-response\" value=\"@(true)\" />\n            </when>\n        </choose>\n    </on-error>\n</policies>\n```\n\n----------------------------------------\n\nTITLE: Instantiating Contract Object in Geth Console\nDESCRIPTION: This code creates a contract object using the ABI definition obtained from the compiled Solidity contract. This object will be used to deploy the contract to the Ethereum network.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar contract = web3.eth.contract(guestBookCompiled['<stdin>:GuestBook'].info.abiDefinition);\n```\n\n----------------------------------------\n\nTITLE: Deploying Datadog Organization using Azure Bicep - Bicep\nDESCRIPTION: This Bicep template provisions a new Datadog resource as a native ISV service in Azure and creates a Datadog organization for monitoring. The template enables metrics and logs collection, muting of VM shutdown alerts, and configures all necessary Azure and Datadog integration points. Dependencies include Azure subscription permissions and Bicep support. Inputs include Datadog account details, Azure resource configuration, and region information. Outputs are the deployed Datadog monitor and integration setup. The template excludes Virtual Machines, Scale Sets, and App Service Plans from monitoring by default.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datadog/datadog/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\n// Bicep template to deploy Datadog organization and monitor Azure resources\n// Collects metrics and resource logs for Azure resources (except VMs, VM Scale Sets, App Service Plans)\n// Muting of VM shutdown alerts and integration setup are included\n// Replace parameter values as needed\n\nparam location string = resourceGroup().location\nparam datadogOrganizationName string\nparam datadogApiKey string\nparam datadogAppKey string\nparam marketplaceSubscriptionId string\nparam planName string = 'Datadog_Azure_Plan'\n\nresource datadogMonitor 'Microsoft.Datadog/monitors@2021-03-01' = {\n  name: datadogOrganizationName\n  location: location\n  properties: {\n    monitoringStatus: 'Enabled'\n    marketplaceSubscriptionId: marketplaceSubscriptionId\n    planData: {\n      planName: planName\n      billingCycle: 'Monthly'\n      effectiveDate: utcNow()\n    }\n    datadogOrganizationProperties: {\n      apiKey: datadogApiKey\n      applicationKey: datadogAppKey\n      enterpriseAppId: ''\n      enterpriseAppName: ''\n      region: 'us3'\n    }\n    userInfo: {\n      name: 'admin@company.com'\n      emailAddress: 'admin@company.com'\n      phoneNumber: ''\n    }\n  }\n  tags: {\n    'Deployment': 'AzureQuickstartTemplate'\n  }\n}\n\noutput monitorId string = datadogMonitor.id\n```\n\n----------------------------------------\n\nTITLE: Deploying an ARM Template from a File using Azure CLI\nDESCRIPTION: Initiates the deployment of Azure resources defined in a local ARM template JSON file (`./azuredeploy.json`) to a specified resource group. Requires providing a name for the deployment itself, the name of the target resource group, and the path to the template file. The CLI will prompt for any parameters defined in the template that don't have default values.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-all-in-one-template-for-vnet-injection/GettingStarted.md#2025-04-23_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz group deployment create --name \"name of your deployment\" --resource-group \"resource-group\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Listener for Application Gateway in Azure ARM Template\nDESCRIPTION: This JSON snippet defines an HTTP listener for an Application Gateway in an Azure Resource Manager template. It specifies the frontend IP configuration, frontend port, and protocol for incoming traffic.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/parameterized-linked-templates/detail/agtemplate.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"httpListeners\": [\n  {\n    \"name\": \"appGatewayHttpListener\",\n    \"properties\": {\n      \"FrontendIPConfiguration\": {\n        \"Id\": \"[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('applicationGatewayName'), 'appGatewayFrontendIP')]\"\n      },\n      \"FrontendPort\": {\n        \"Id\": \"[resourceId('Microsoft.Network/applicationGateways/frontendPorts', parameters('applicationGatewayName'), 'appGatewayFrontendPort')]\"\n      },\n      \"Protocol\": \"Http\",\n      \"SslCertificate\": null\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Formatting Timer Job Request Body in JSON\nDESCRIPTION: This code snippet demonstrates the JSON structure required to create a new timer job instance. It includes the timerjobid for correlation, and jobRecurrence object that defines how frequently the job should run with optional count limits.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.logic/logicapps-jobscheduler/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"timerjobid\": \"MyCorrelationId\",\n   \"jobRecurrence\":{\n       \"frequency\":\"minute\",\n       \"interval\": 5,\n       \"count\": 2\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure AI Studio Network-Restricted Setup with Azure CLI\nDESCRIPTION: This script demonstrates how to deploy the network-restricted Azure AI Studio setup using Azure CLI. It first creates prerequisite network resources, then deploys the main configuration with private links and restricted network access.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-network-restricted/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Pre-reqs, if required\naz group create --name networkRg --location westus\naz deployment group create --resource-group networkRg --template-file prereqs/prereq.main.bicep\n\n# Main Deployment\naz group create --name privateAiHub --location westus\naz deployment group create --resource-group privateAiHub --template-file main.bicep\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tag Definition\nDESCRIPTION: Resource tagging definition showing Microsoft resources used in the template, including storage, networking, compute and firewall components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azurefirewall-sandbox-linux/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Storage/storageAccounts, Microsoft.Network/routeTables, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Network/azureFirewalls, Allow\n```\n\n----------------------------------------\n\nTITLE: Logging into Azure Account using Azure CLI - Bash\nDESCRIPTION: This snippet logs a user into their Azure account via the Azure CLI. It requires the Azure CLI to be installed and available in the user's PATH. No parameters are needed for the initial login; a browser window will open for user authentication, and credentials will be associated with the CLI session. Output will include details of the signed-in account.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/app-function/GettingStarted-FuncApp.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for VM CPU Monitoring with ARM Template\nDESCRIPTION: This ARM template snippet shows the resources deployed for monitoring VM CPU usage. It includes storage accounts, network components, virtual machines, and the metric alert rule. The alert rule is configured to monitor CPU percentage with a static threshold.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.insights/monitoring-static-metric-alert/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": \"Microsoft.Insights/metricAlerts, Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines\"\n```\n\n----------------------------------------\n\nTITLE: Configuring NGINX as DNS Forwarder via Custom Script Extension - Bash\nDESCRIPTION: This Bash script is used by the Azure Custom Script Extension on a deployed Linux VM to install and configure NGINX as a DNS forwarder. It listens on port 53 and forwards DNS requests to the Azure DNS endpoint at 168.63.129.16, enabling internal VMs to resolve names to private IPs. Prerequisites are a Linux VM in an Azure Virtual Network and appropriate permissions to execute extensions; the script relies on bash and package management tools and must be executed by the extension system. Inputs include network and resource parameters; outputs are a configured and running NGINX forwarding service. Limitations include that the script is meant for isolated hub scenarios and assumes correct VM and network configurations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azure-firewall-dns-proxy/README.md#2025-04-23_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\n#!/bin/bash\n# Installs and configures NGINX as a DNS forwarder on port 53\n# Forwards to Azure DNS: 168.63.129.16\n# Intended for execution via Azure Custom Script Extension on a Linux VM\n\nsudo apt-get update\nsudo apt-get install -y nginx\n\ncat <<EOF | sudo tee /etc/nginx/conf.d/dns_forwarder.conf\nstream {\n    upstream dns_upstream {\n        server 168.63.129.16:53;\n    }\n    server {\n        listen 53 udp;\n        proxy_pass dns_upstream;\n        proxy_responses 1;\n    }\n    server {\n        listen 53;\n        proxy_pass dns_upstream;\n        proxy_responses 1;\n    }\n}\nEOF\n\nsudo systemctl restart nginx\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Logic App for Azure Backup Reports using ARM Template\nDESCRIPTION: This ARM template deploys a Logic App that generates and emails reports on Azure Backup instances. It requires an existing Log Analytics workspace to query. The Logic App runs queries on specified workspaces and exports data as charts and CSV attachments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/backup-backupinstances-report/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    // Parameters would be defined here\n  },\n  \"variables\": {\n    // Variables would be defined here\n  },\n  \"resources\": [\n    // Resource definitions would be here\n  ],\n  \"outputs\": {\n    // Outputs would be defined here\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription with Azure CLI\nDESCRIPTION: Command to set the active Azure subscription for subsequent Azure CLI operations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/postgre/postgresql-standalone-server-ubuntu/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Converting CRT and Key Files to PFX Format with OpenSSL - Shell\nDESCRIPTION: This shell command uses OpenSSL to export a combined PFX file from a private key (.key) and certificate (.crt), which is necessary for ARM and Azure Key Vault deployments. You must have OpenSSL installed, and provide the correct private key and certificate file paths. The resulting .pfx file can be imported into Azure Key Vault for secure VM deployments; you may be prompted to set an export password during this process.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nopenssl pkcs12 -export -out myawesomeness_com.pfx -inkey myawesomeness_com.key -in myawesomeness_com.crt\n```\n\n----------------------------------------\n\nTITLE: Setting KeyVault Access Policy for Disk Encryption\nDESCRIPTION: PowerShell command to configure KeyVault access policy required for disk encryption. Must be executed before deploying the template to enable disk encryption capabilities.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/encrypt-running-windows-vm-without-aad/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nSet-AzureRmKeyVaultAccessPolicy -ResourceGroupName <rgName> -VaultName <vaultName> -EnabledForDiskEncryption\n```\n\n----------------------------------------\n\nTITLE: Connecting to Azure VM with WinRM HTTPS (PowerShell)\nDESCRIPTION: This PowerShell script demonstrates how to connect to an Azure VM after WinRM HTTPS configuration. It sets up a remote session using the VM's FQDN, a specified WinRM port, and prompts for credentials.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vm-winrm-lb-windows/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$hostName=<fqdn-of-vm>  #example: \"myvm.westus.cloudapp.azure.com\"\n$winrmPort = '40003'\n\n# Get the credentials of the machine\n$cred = Get-Credential\n\n# Connect to the machine\n$soptions = New-PSSessionOption -SkipCACheck\nEnter-PSSession -ComputerName $hostName -Port $winrmPort -Credential $cred -SessionOption $soptions -UseSSL\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Profile Secrets in ARM Template (JSON)\nDESCRIPTION: This JSON snippet, part of an Azure Resource Manager (ARM) template, defines the `secrets` configuration within the `osProfile` of a Virtual Machine Scale Set. It specifies the source Azure Key Vault using its resource ID and lists the certificate URLs (secrets) to be securely pulled from the vault and installed on the VM instances during deployment. The certificate URLs are typically passed as parameters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"osProfile\": {\n  \"secrets\": [\n    {\n      \"sourceVault\": {\n        \"id\": \"[resourceId(parameters('vaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]\"\n      },\n      \"vaultCertificates\": [\n        {\n\t        \"certificateUrl\": \"[parameters('httpssecretUrlWithVersion')]\"\n        },\n        {\n          \"certificateUrl\": \"[parameters('httpssecretCaUrlWithVersion')]\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating URIs for Artifacts in Bicep\nDESCRIPTION: Demonstrates how to construct URIs for deployment artifacts like scripts using the uri() function in Bicep. This approach combines the base artifacts location with specific file paths and SAS tokens.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_17\n\nLANGUAGE: bicep\nCODE:\n```\nvar scriptFileUri = uri(_artifactsLocation, 'scripts/configuration.sh${_artifactsLocationSasToken}')\n```\n\n----------------------------------------\n\nTITLE: Deploying App Service Environment with ILB using Azure Resource Manager\nDESCRIPTION: This ARM template creates an App Service Environment with an Internal Load Balancer in a specified virtual network. It configures the necessary network resources and the ASE itself. The template uses tags for Microsoft.Web/hostingEnvironments and Microsoft.Network/virtualNetworks.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-ase-ilb-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\n  \"Microsoft.Web/hostingEnvironments\": \"\",\n  \"Microsoft.Network/virtualNetworks\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Granting Graph API Permission using PowerShell (Microsoft Graph Cmdlets)\nDESCRIPTION: This PowerShell script grants the 'Application.ReadWrite.All' permission for the Microsoft Graph API to a managed identity using the Microsoft Graph PowerShell module (`Microsoft.Graph.Applications`, `Microsoft.Graph.Authentication`). It connects to Microsoft Graph for the specified tenant, retrieves the Graph service principal and the desired app role using `Get-MgServicePrincipal`, and then assigns the role to the managed identity's service principal via `New-MgServicePrincipalAppRoleAssignment`. Requires the tenant ID and the managed identity's Object ID.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.resources/deployment-script-azcli-graph-azure-ad/README.md#2025-04-23_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\n$tenantID = '<Your Azure AD tenant ID>'\n\nConnect-MgGraph -TenantId $tenantID\n\n# Get the app role for the Graph API.\n$graphAppId = '00000003-0000-0000-c000-000000000000' # This is a well-known Microsoft Graph application ID.\n$graphApiAppRoleName = 'Application.ReadWrite.All'\n$graphServicePrincipal = Get-MgServicePrincipal -Filter \"appId eq '$graphAppId'\"\n$graphApiAppRole = $graphServicePrincipal.AppRoles | Where-Object {$_.Value -eq $graphApiAppRoleName -and $_.AllowedMemberTypes -contains \"Application\"}\n\n# Assign the role to the managed identity.\nNew-MgServicePrincipalAppRoleAssignment `\n  -ServicePrincipalId $managedIdentityObjectId `\n  -PrincipalId $managedIdentityObjectId `\n  -ResourceId $graphServicePrincipal.Id `\n  -AppRoleId $graphApiAppRole.Id\n```\n\n----------------------------------------\n\nTITLE: Accessing Quagga vtysh Shell in Ubuntu via Bash\nDESCRIPTION: This bash command initiates an interactive vty shell session for Quagga on an Ubuntu VM, allowing network administrators to configure and monitor BGP settings. The command should be run as the root user after accessing the VM. Prerequisites include Quagga being installed and running. No input or output parameters are required; the user gains direct access to the Quagga vtysh prompt.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/route-server-quagga/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nroot@vm1:~# vtysh\n```\n\n----------------------------------------\n\nTITLE: Database Load Balancer Configuration for SAP NetWeaver\nDESCRIPTION: Azure Load Balancer ports configuration for database servers, supporting both SQL Server (port 1433) and SAP HANA (ports 30415, 30417) with health probe on port 62504.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-3-tier-marketplace-image-multi-sid-db-md/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"DB Internal Load Balancer ports\": {\n    \"SQL Server\": 1433,\n    \"SAP HANA\": [30415, 30417],\n    \"Probe Port\": 62504\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags identifying the Microsoft services and components used in the template deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-path-override/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/applicationGateways\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Database Sharding in MongoDB\nDESCRIPTION: Commands to enable sharding for a specific database and collection. This includes connecting to the MongoDB router, enabling sharding on the database, checking sharding status, and configuring a collection for sharding.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/airflow/mongodb-sharded-on-centos/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$mongo -u \"<mongouser>\" -p \"<mongopassword>\" \"admin\" --host <Mongos fqdn>\n\ndb.runCommand({enableSharding: \"<database>\" })\n\nsh.status()\n\nsh.shardCollection(\"<database>.<collection>\", shard-key-pattern)\n\nexit\n```\n\n----------------------------------------\n\nTITLE: Removing Azure Route Server Peer Connection via PowerShell\nDESCRIPTION: This PowerShell command removes a BGP peering connection from the Azure Route Server using 'Remove-AzVirtualRouterPeer'. It is essential to specify the ResourceGroupName, PeerName, and VirtualRouterName parameters. The command is useful for tearing down peering arrangements and cleaning up resources. Requires the Az.Network PowerShell module and adequate permissions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/route-server-quagga/README.md#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nRemove-AzVirtualRouterPeer -ResourceGroupName <Resource_Group_Name> -PeerName <BGP_Connection_Name> -VirtualRouterName <Route_Server_Name>\n```\n\n----------------------------------------\n\nTITLE: Inserting Data into PostgreSQL Table\nDESCRIPTION: SQL command to insert a sample record into the 'potluck' table with values for name, food, confirmation status, and date fields.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/postgre/postgresql-standalone-server-ubuntu/README.md#2025-04-23_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nINSERT INTO potluck (name, food, confirmed, signup_date) VALUES('John', 'Casserole', 'Y', '2012-04-11');\n```\n\n----------------------------------------\n\nTITLE: Listing Supported Azure Locations (Shell)\nDESCRIPTION: This command retrieves all available Azure regions (locations) your account can deploy resources in, using the Azure CLI. No additional parameters are required. Output is a JSON list of regions and metadata, useful for selecting deployment locations for new resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iothub-with-consumergroup-create/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\naz account list-locations\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Principal with CLI\nDESCRIPTION: This snippet shows how to create a service principal with Contributor role using Azure CLI. The service principal is used for authentication in the CI/CD pipeline.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-vmss/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\naz ad sp create-for-rbac --role=\"Contributor\" --scopes=\"/subscriptions/${SUBSCRIPTION_ID}\"\n```\n\n----------------------------------------\n\nTITLE: Applying AGIC Helm Configuration\nDESCRIPTION: Command to install AGIC using Helm with a custom configuration file for controlling namespace monitoring behavior.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/aks-application-gateway-ingress-controller/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm install -f helm-config.yaml application-gateway-kubernetes-ingress/ingress-azure\n```\n\n----------------------------------------\n\nTITLE: Connecting to Ethereum Public Network using C++ Client on Ubuntu\nDESCRIPTION: Command to start the Ethereum C++ client and connect to the public Ethereum network after SSH'ing into the deployed Ubuntu VM.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/ethereum-cpp-on-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\neth\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Principal with CLI\nDESCRIPTION: This snippet shows how to create a service principal with Contributor role using Azure CLI. The service principal is used for authentication in the CI/CD pipeline.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-webapp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\naz ad sp create-for-rbac --role=\"Contributor\" --scopes=\"/subscriptions/${SUBSCRIPTION_ID}\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration\nDESCRIPTION: Resource tags configuration specifying Microsoft Network components used in the deployment including public IP addresses, virtual networks, and application gateway resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-url-path-based-routing/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/applicationGateways\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags used to identify and categorize the Azure Application Gateway deployment components\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-v2-autoscale-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/applicationGateways\n```\n\n----------------------------------------\n\nTITLE: Deploying Public Certificate to Azure App Service using ARM Template\nDESCRIPTION: This ARM template deploys a public certificate to an existing Azure App Service. It requires an existing Web App and supports installation on dedicated App Service Plans. The certificate will be accessible to the App Service code after deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-public-certificate/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"existingWebAppName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Existing App name to use for creating certificate. This App should have the right SKU and in the same Resource Group\"\n      }\n    },\n    \"certificateName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"User friendly certificate resource name\"\n      }\n    },\n    \"certificateLocation\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Certificate Location\"\n      }\n    },\n    \"publicCertificateLocation\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"CurrentUserMy\",\n      \"allowedValues\": [\n        \"CurrentUserMy\",\n        \"LocalMachineMy\"\n      ],\n      \"metadata\": {\n        \"description\": \"Certificate store Location\"\n      }\n    },\n    \"publicCertificateData\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Base64 encoded public certificate (.cer) \"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Web/sites/publicCertificates\",\n      \"apiVersion\": \"2022-03-01\",\n      \"name\": \"[concat(parameters('existingWebAppName'), '/', parameters('certificateName'))]\",\n      \"location\": \"[parameters('certificateLocation')]\",\n      \"properties\": {\n        \"publicCertificateLocation\": \"[parameters('publicCertificateLocation')]\",\n        \"blob\": \"[parameters('publicCertificateData')]\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resource Group with VMSS Template\nDESCRIPTION: PowerShell script for deploying the Azure Resource Group using deployment template and parameters. Includes artifact staging and DSC configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vmss-win-iis-app-ssl/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n.\\Deploy-AzureResourceGroup.ps1 -StorageAccountName '<artifacts storage account name>' -ResourceGroupName '<Resource guroup name>' -ResourceGroupLocation '<RG location>' -TemplateFile .\\azuredeploy.json -TemplateParametersFile .\\azuredeploy.parameters.json -ArtifactStagingDirectory '.' -DSCSourceFolder '.\\dsc' -UploadArtifacts\n```\n\n----------------------------------------\n\nTITLE: Extracting Service Principal Information for Deployment - PowerShell\nDESCRIPTION: This collection of PowerShell commands extracts critical parameters (Application ID, Object ID, Tenant ID, base-64 PFX contents, and password) from the previously created service principal and certificate. These values are essential for automating ARM deployments of HDInsight clusters that require certificate-authenticated service principals. Output is textual information, typically to be used or referenced in ARM template parameter files. No additional dependencies beyond Azure PowerShell modules.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-datalake-store-azure-storage/README.md#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n$servicePrincipal.ApplicationId\n```\n\nLANGUAGE: powershell\nCODE:\n```\n$servicePrincipal.Id\n```\n\nLANGUAGE: powershell\nCODE:\n```\n(Get-AzureRmContext).Tenant.TenantId\n```\n\nLANGUAGE: powershell\nCODE:\n```\n[System.Convert]::ToBase64String((Get-Content $certFilePath -Encoding Byte))\n```\n\nLANGUAGE: powershell\nCODE:\n```\n$certPassword\n```\n\n----------------------------------------\n\nTITLE: Connecting to Azure VM over WinRM HTTPS using PowerShell\nDESCRIPTION: PowerShell script to establish a secure remote connection to a Windows Azure VM via Windows Remote Management (WinRM) over HTTPS. The script sets up trust for the remote host, prompts for credentials, and establishes a secure PowerShell session with the VM.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ros/ros-vm-windows/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n    $hostIP=<ip-of-vm>\n\n    # Trust the remote VM host\n    Set-Item wsman:\\localhost\\Client\\TrustedHosts -value $hostIP\n\n    # Get the credentials of the machine\n    $cred = Get-Credential\n\n    # Connect to the machine\n    $soptions = New-PSSessionOption -SkipCACheck -SkipCNCheck\n    Enter-PSSession -ComputerName $hostIP -Credential $cred -SessionOption $soptions -UseSSL\n```\n\n----------------------------------------\n\nTITLE: Getting AKS Credentials for Kubernetes Access\nDESCRIPTION: This command fetches the credentials for the Azure Kubernetes Service (AKS) cluster and merges them into the local kubectl configuration file, enabling management of the Kubernetes cluster from the command line.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-container/README.md#2025-04-23_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\naz login\n```\n\nLANGUAGE: sh\nCODE:\n```\naks get-credentials --resource-group <ResourceGroup> --name <KubenetesClusterName>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Policy Definition ID with Azure PowerShell\nDESCRIPTION: This PowerShell command retrieves the resource ID of the built-in policy definition for auditing VMs that do not use managed disks. It filters the policy definitions based on the display name and selects the ResourceId property.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.authorization/azurepolicy-builtin-vm-managed-disks/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n(Get-AzPolicyDefinition |\n  Where-Object { $_.Properties.DisplayName -eq 'Audit VMs that do not use managed disks' }).ResourceId\n```\n\n----------------------------------------\n\nTITLE: Internal Load Balancer Configuration for SAP\nDESCRIPTION: Load balancer port configurations for ASCS/SCS and DB components. Includes specific ports for Windows, ASCS instances, SCS instances, and ERS on Linux. Also defines probe ports for health monitoring.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-3-tier-user-image-converged-md/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nASCS/SCS Ports (instance 00): 3200, 3600, 3900, 8100, 50013, 50014, 50016\nSCS Ports (instance 01): 3201, 3301, 3901, 8101, 50113, 50114, 50116\nASCS ERS ports (instance 02): 3302, 50213, 50214, 50216\nSCS ERS ports (instance 03): 3303, 50313, 50314, 50316\nProbe ports: 62000, 62102\nDB ports: 1433\nDB probe port: 62504\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Tags\nDESCRIPTION: Resource tags declaration showing the Microsoft.Network resources that will be deployed including local network gateways, virtual networks, public IP addresses, and virtual network gateways.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/arm-asm-s2s/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/localNetworkGateways, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworkGateways\"\n```\n\n----------------------------------------\n\nTITLE: Configuring VM Disks in JSON\nDESCRIPTION: This JSON snippet shows the configuration of OS and data disks for a VM. It demonstrates the setup of implicit managed disks, including caching, creation options, and disk size for data disks.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n    \"osDisk\": {\n        \"caching\": \"ReadWrite\",\n        \"createOption\": \"FromImage\"\n    },\n    \"dataDisks\": [\n        {\n            \"name\": \"datadisk1\",\n            \"diskSizeGB\": \"[variables('sizeOfDiskInGB')]\",\n            \"lun\": 0,\n            \"createOption\": \"Empty\"\n        }\n   ]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Policy Definition ID with Azure CLI\nDESCRIPTION: This Azure CLI command lists policy definitions, filters for the specific policy to audit VMs not using managed disks, and outputs the ID in TSV format. It uses the --query parameter to filter and select the id property.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.authorization/azurepolicy-builtin-vm-managed-disks/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz policy definition list \\\n  --query \"[?displayName=='Audit VMs that do not use managed disks'].id\" \\\n  --output tsv\n```\n\n----------------------------------------\n\nTITLE: Installing Azul Zulu OpenJDK using yum on CentOS\nDESCRIPTION: This bash script installs the Azul Zulu OpenJDK JVM on CentOS Linux using the yum package manager. It adds the Azul repository, installs the specified Zulu package, and verifies the installation by checking the Java version.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/zulu/Linux-Java-ZuluOpenJDK/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nscripts/yum-zulu-install.sh\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Container Instance with GitRepo Volume\nDESCRIPTION: ARM template deployment configuration that sets up a Linux container with a gitRepo volume mounting the aci-helloworld repository. The template allows deploying container instances with source code directly from GitHub.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerinstance/aci-linuxcontainer-volume-gitrepo/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerinstance%2Faci-linuxcontainer-volume-gitrepo%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Key Vault Information with Azure PowerShell\nDESCRIPTION: This PowerShell cmdlet retrieves the Key Vault information needed for the template, including the keyVaultSecretUrl and keyVaultResourceId.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/encrypt-running-linux-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzureRmKeyVault -VaultName $KeyVaultName -ResourceGroupName $rgname\n```\n\n----------------------------------------\n\nTITLE: Creating Service Principal using Azure CLI\nDESCRIPTION: This snippet demonstrates how to create a Service Principal using the Azure CLI, which is required for Key Vault authentication in the Chef HA deployment. The command creates a new service principal and returns the necessary credentials.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/chef-automate-ha/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz ad sp create-for-rbac\n```\n\n----------------------------------------\n\nTITLE: Creating Scheduled Task for S2DMon Service Restart\nDESCRIPTION: Creates a scheduled task that restarts the S2DMon service every hour to ensure continuous monitoring. The task runs with SYSTEM privileges and executes a PowerShell command to restart the service.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/s2d-oms-mgmt-solution/README.md#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$action = New-ScheduledTaskAction -Execute 'Powershell.exe' `\n                                  -Argument '-NoProfile -WindowStyle Hidden -command \"& {Restart-Service s2dmon}\"'\n$trigger =  New-ScheduledTaskTrigger -RepetitionInterval (New-TimeSpan -Minutes 60) `\n                                     -At (get-date) `\n                                     -Once\n$STPrin = New-ScheduledTaskPrincipal -UserId \"NT AUTHORITY\\SYSTEM\" `\n                                     -LogonType ServiceAccount `\n                                     -RunLevel Highest\nRegister-ScheduledTask -Action $action `\n                       -Trigger $trigger `\n                       -TaskName \"S2DMonRestart\" `\n                       -Description \"Restart S2DMon service hourly\" `\n                       -Principal $STPrin\n```\n\n----------------------------------------\n\nTITLE: Deploying SQL Server 2014 VM with Azure Key Vault Integration (ARM Template)\nDESCRIPTION: This ARM template deploys a SQL Server 2014 SP1 Enterprise VM with Azure Key Vault Integration enabled. It creates supporting resources and configures the SQL IaaS Agent extension for features like automated patching.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-sql-full-keyvault/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    // ... (parameters would be defined here)\n  },\n  \"variables\": {\n    // ... (variables would be defined here)\n  },\n  \"resources\": [\n    // ... (resource definitions would be here)\n  ],\n  \"outputs\": {\n    // ... (outputs would be defined here)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Stopping and Starting HANA Database as hdbadm User\nDESCRIPTION: These bash commands allow the hdbadm user to stop and start the SAP HANA database. The commands use the HDB utility which is the standard tool for controlling HANA database instances.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-2-tier-s4hana-fully-activated-appliance/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nHDB stop\nHDB start\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group with Azure CLI\nDESCRIPTION: Command to create a new Resource Group in Azure using Azure CLI. It requires specifying a name and location for the Resource Group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-managed-mysql/GettingStarted-WebAppMySQL.md#2025-04-23_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Provider Tags for NetApp Deployment\nDESCRIPTION: Provides a list of Azure Resource Provider tags associated with the deployment or configuration of Azure NetApp Files. These tags represent the types of Azure resources involved, such as NetApp accounts, volume groups, virtual networks, capacity pools, proximity placement groups, availability sets, network interfaces, and virtual machines.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.netapp/anf-sap-hana/anf-sap-hana-storage/README.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.NetApp/netAppAccounts/volumeGroups, Microsoft.Network/virtualNetworks, Microsoft.NetApp/netAppAccounts, Microsoft.NetApp/netAppAccounts/capacityPools, Microsoft.Compute/proximityPlacementGroups, Microsoft.Compute/availabilitySets, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines\n```\n\n----------------------------------------\n\nTITLE: Deploying Node.js App to Azure Web App\nDESCRIPTION: This command uploads and deploys a Node.js application to an existing Azure Web App. It requires specifying the name of the web app and uses the --debug flag for verbose output.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-node/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\naz web app up --name 'app-name' --debug\n```\n\n----------------------------------------\n\nTITLE: Deploying Event Hub Namespace and Geo-Recovery Configuration - ARM Template - JSON\nDESCRIPTION: This ARM template snippet declares Azure resources for the creation of an Event Hub namespace and its associated disaster recovery (geo-recovery) configuration. It leverages the Microsoft.EventHub/namespaces and disasterRecoveryConfigs resource types, and targets Basic or Standard SKUs. The template requires Azure Resource Manager deployment and appropriate permissions. Key parameters (not shown in this snippet) would typically include the namespace name, region, and replication settings, and the result is the creation of a geo-redundant Event Hub namespace. Limitations include SKU constraints and required resource group context.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.eventhub/eventhub-create-namespace-geo-recoveryconfiguration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.EventHub/namespaces, disasterRecoveryConfigs\"\n```\n\n----------------------------------------\n\nTITLE: Deploy Python App to Azure Web App\nDESCRIPTION: Azure CLI command to deploy a Python application to an existing Azure Web App. The --debug flag provides detailed output during deployment for troubleshooting.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-python/gettingstarted.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz web app up --name 'web app-name' --debug\n```\n\n----------------------------------------\n\nTITLE: Deploying RHEL VM using Azure CLI\nDESCRIPTION: A set of Azure CLI commands to deploy a blank Red Hat Enterprise Linux VM. This creates a resource group in East US and deploys a RHEL 7.8 VM with the specified username.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-simple-rhel/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nazure config mode arm\nazure group create TestCLIRG EastUS\nazure vm quick-create TestCLIRG vm1 EastUS Linux RedHat:RHEL:7.8:latest azureuser\n```\n\n----------------------------------------\n\nTITLE: Stopping and Starting SAP System as s4hadm User\nDESCRIPTION: These bash commands allow the s4hadm user to stop and start the SAP system by controlling both instance 00 and 01. The commands use the sapcontrol utility to manage system state.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-2-tier-s4hana-fully-activated-appliance/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsapcontrol -nr 00 -function StopSystem\nsapcontrol -nr 01 -function StopSystem\n\nsapcontrol -nr 00 -function StartSystem\nsapcontrol -nr 01 -function StartSystem\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure Cosmos DB SQL Account with ARM Template - JSON\nDESCRIPTION: This code snippet defines ARM template resource types, tags, and highlights supported parameters for deploying an Azure Cosmos DB account with the SQL API in multiple regions. It configures a database, container, throughput, and multiple policy settings like indexing and failover through the 'parameters' section. Dependencies include Azure Resource Manager and ARM/JSON template schema. Input parameters control account redundancy, consistency, throughput, and names; outputs include the deployed resource group and Cosmos DB resources. Limitations may include Azure region restrictions and minimum throughput limits.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-sql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\nTags: Microsoft.DocumentDB/databaseAccounts, Microsoft.DocumentDB/databaseAccounts/sqlDatabases, Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers\n```\n\n----------------------------------------\n\nTITLE: Listing Associated Azure Resource Tags and Technologies\nDESCRIPTION: This line lists relevant tags and Azure resource provider types associated with the template. It indicates the use of Bicep, the network domain, the core NSG resource, and the specific Microsoft providers for Network Security Groups, Diagnostic Settings (Insights), and Resource Locks (Authorization). These tags help categorize and identify the template's components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/nsg-create-with-diagnostic-logs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: bicep, network, nsg, Microsoft.Network/networkSecurityGroups, Microsoft.Insights/diagnosticSettings, Microsoft.Authorization/locks`\n```\n\n----------------------------------------\n\nTITLE: Deploying AppServicePlan and App to Azure App Service Environment v2 using ARM Template\nDESCRIPTION: This ARM template deploys an AppServicePlan and a Web App within an existing App Service Environment v2. It requires an existing App Service Environment and configures the necessary resources including virtual networks, server farms, and websites.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-asp-app-on-asev2-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Microsoft.Web/serverfarms\",\n\"Microsoft.Web/sites\",\n\"Microsoft.Network/virtualNetworks\",\n\"Microsoft.Web/hostingEnvironments\"\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Tags for VMSS Deployment Template\nDESCRIPTION: This snippet lists the Azure resource provider tags relevant to the ARM template described in the document. It identifies the key resource types involved in the deployment: virtual networks (`Microsoft.Network/virtualNetworks`), load balancers (`Microsoft.Network/loadBalancers`), virtual machine scale sets (`Microsoft.Compute/virtualMachineScaleSets`), and potentially custom scripts (`CustomScript`). These tags help categorize and find the template based on the resources it manages.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-automatic-repairs-slb-health-probe/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/virtualNetworks, Microsoft.Network/loadBalancers, Microsoft.Compute/virtualMachineScaleSets, CustomScript`\n```\n\n----------------------------------------\n\nTITLE: PowerShell Deployment with Artifact Staging\nDESCRIPTION: PowerShell deployment script with explicit artifact staging enabled. Used when the template requires additional resources like configuration scripts or nested templates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md#2025-04-23_snippet_2\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\Deploy-AzureResourceGroup.ps1 -ResourceGroupLocation 'eastus' -ArtifactStagingDirectory '201-vm-custom-script-windows' -UploadArtifacts\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS Compute Target with Private IP using ARM Template - JSON\nDESCRIPTION: This ARM (Azure Resource Manager) template defines the deployment of a secure AKS compute target with a private IP address in an Azure Machine Learning workspace. It automates the provisioning of supporting resources including storage accounts, Key Vault, Application Insights, Azure Container Registry, and the Azure Machine Learning workspace, leveraging system-assigned managed identities for secure access. Required parameters typically include resource names, locations, and optionally vNet or subnet details for network configuration. Inputs are passed via parameters or defaults, and the output is a deployed, private AKS compute target linked to the ML workspace. The template assumes permissions to create all required Azure resources and may require contributors to provide valid networking and identity details.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-private-ip/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    // Parameters for naming, location, networking, identity\n  },\n  \"variables\": {\n    // Computed values for resource names, etc.\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts\",\n      \"apiVersion\": \"2019-06-01\",\n      \"name\": \"[parameters('storageAccountName')]\",\n      \"location\": \"[parameters('location')]\",\n      // Storage configuration settings\n    },\n    {\n      \"type\": \"Microsoft.KeyVault/vaults\",\n      \"apiVersion\": \"2019-09-01\",\n      \"name\": \"[parameters('keyVaultName')]\",\n      \"location\": \"[parameters('location')]\",\n      // Key vault configuration\n    },\n    {\n      \"type\": \"Microsoft.Insights/components\",\n      \"apiVersion\": \"2015-05-01\",\n      \"name\": \"[parameters('appInsightsName')]\",\n      \"location\": \"[parameters('location')]\",\n      // Application Insights configuration\n    },\n    {\n      \"type\": \"Microsoft.ContainerRegistry/registries\",\n      \"apiVersion\": \"2019-05-01\",\n      \"name\": \"[parameters('containerRegistryName')]\",\n      \"location\": \"[parameters('location')]\",\n      // Container registry config and SKU\n    },\n    {\n      \"type\": \"Microsoft.MachineLearningServices/workspaces\",\n      \"apiVersion\": \"2020-04-01\",\n      \"name\": \"[parameters('workspaceName')]\",\n      \"location\": \"[parameters('location')]\",\n      // ML workspace linkage and managed identity\n    },\n    {\n      \"type\": \"Microsoft.MachineLearningServices/workspaces/computes\",\n      \"apiVersion\": \"2020-04-01\",\n      \"name\": \"[concat(parameters('workspaceName'), \"/\", parameters('aksComputeName'))]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"computeType\": \"Aks\",\n        \"properties\": {\n          \"resourceId\": \"[parameters('aksClusterResourceId')]\",\n          \"privateIpAddress\": true\n        }\n      }\n    }\n  ],\n  \"outputs\": {\n    // Optionally export resource IDs, endpoints\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types for ASEv2 with ILB Template\nDESCRIPTION: Lists the Azure resource provider namespaces and resource types that are deployed or configured by the associated ARM template. This includes the App Service Environment (`Microsoft.Web/hostingEnvironments`), App Service Plan (`Microsoft.Web/serverfarms`), Web App (`Microsoft.Web/sites`), and relates to Virtual Network configurations (`Microsoft.Network/virtualNetworks`).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/asev2-ilb-with-web-app/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Web/hostingEnvironments, Microsoft.Web/serverfarms, Microsoft.Web/sites, Microsoft.Network/virtualNetworks`\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Service Principal for VM Management in PowerShell\nDESCRIPTION: Commands to create an Azure AD application, service principal, and role assignment needed for the controller VM to manage the other VMs. This enables automation of the VM boot measurement process.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/bootstorm-vm-boot-time/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzureRmADApplication -Password <any string to use as a password> -DisplayName <Any String Name> -IdentifierUris https://<UseAnyUniqueName e.g. serviceprinciplenm> -HomePage <same as IdentifierUris>\n\n<i>Use ApplicationId returned by above cmdlet</i>\n\nNew-AzureRmADServicePrincipal -ApplicationId <ApplicationId>\n\nNew-AzureRmRoleAssignment -RoleDefinitionName Owner -ServicePrincipalName \"https://<same as IdentifierUris>\"\n```\n\n----------------------------------------\n\nTITLE: Getting Key Vault Details using PowerShell\nDESCRIPTION: This PowerShell command retrieves the details of a specified Azure Key Vault. The command output contains the Key Vault's resource ID, needed for the 'cmk_keyvault' template parameter.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_11\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzKeyVault -VaultName '<keyvault-name>'\n```\n\n----------------------------------------\n\nTITLE: Assigning Role at Subscription Scope using Azure ARM Template\nDESCRIPTION: This Azure Resource Manager template assigns a role at the subscription scope. It requires a unique GUID for each role assignment, which is generated using the roleAssignmentName parameter as a seed for the guid() function.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/subscription-deployments/subscription-role-assignment/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\"Microsoft.Authorization/roleAssignments\": \"\"}\n```\n\n----------------------------------------\n\nTITLE: Verifying Redis Data Replication on Slave\nDESCRIPTION: This Redis CLI command is executed on the Redis slave to verify that the data set on the master has been replicated successfully.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/website-cluster-centos/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$/usr/local/redis/src/redis-cli\\n\\nget hello\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types for NSG and VNET (ARM Tags)\nDESCRIPTION: This line lists the specific Azure Resource Manager (ARM) resource types relevant to the associated `azuredeploy.json` template. It includes `Microsoft.Network/networkSecurityGroups` for Network Security Groups and `Microsoft.Network/virtualNetworks` for Virtual Networks, indicating the primary resources managed by the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/security-group-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks`\n```\n\n----------------------------------------\n\nTITLE: Accessing VM as Root User via SSH for JBoss EAP Troubleshooting in Azure\nDESCRIPTION: Command to switch to the root user on the Azure VM to access administrative privileges for troubleshooting JBoss EAP deployment issues.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-clustered-multivm-rhel/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo su -\n```\n\n----------------------------------------\n\nTITLE: Retrieving Jenkins Admin Password\nDESCRIPTION: This command retrieves the initial Jenkins admin password from the Jenkins server, which is required for the first-time setup. The password is stored in a file that requires sudo access.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-container/README.md#2025-04-23_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nsudo cat /var/lib/jenkins/secrets/initialAdminPassword\n```\n\n----------------------------------------\n\nTITLE: Defining Virtual Machine Configurations for SAP NetWeaver Deployment\nDESCRIPTION: This table specifies the virtual machine configurations for different SAP system counts and high availability scenarios. It outlines the VM sizes and disk configurations for small, medium, and large deployments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-3-tier-marketplace-image-multi-sid-xscs-md/README.md#2025-04-23_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nSAP System count | HA                                                  | Non-HA\n2-3 (Small)       | 2xDS2_v2 ASCS/SCS Server (1xP10 per SAP System)    | 1xDS2_v2 ASCS/SCS Server (1xP10 per SAP System)\n4-7 (Medium)      | 2xDS3_v2 ASCS/SCS Server (1xP10 per SAP System)    | 1xDS3_v2 ASCS/SCS Server (1xP10 per SAP System)\n8-10 (Large)      | 2xDS4_v2 ASCS/SCS Server (1xP10 per SAP System)    | 1xDS4_v2 ASCS/SCS Server (1xP10 per SAP System)\n```\n\n----------------------------------------\n\nTITLE: Using Parameter File Placeholders in Azure Deployment Parameters\nDESCRIPTION: Example of using parameter placeholders in an azuredeploy.parameters.json file. Shows how to use GEN-UNIQUE for storage account and username, GEN-SSH-PUB-KEY for SSH key data, and GEN-UNIQUE-13 for DNS name.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md#2025-04-23_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n\"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#\",\n\"contentVersion\": \"1.0.0.0\",\n\"parameters\": {\n \"newStorageAccountName\":{\n  \"value\": \"GEN-UNIQUE\"\n },\n \"adminUsername\": {\n  \"value\": \"GEN-UNIQUE\"\n },\n \"sshKeyData\": {\n  \"value\": \"GEN-SSH-PUB-KEY\"\n },\n \"dnsNameForPublicIP\": {\n  \"value\": \"GEN-UNIQUE-13\"\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Azure AD User Object ID using Azure CLI\nDESCRIPTION: This Azure CLI command retrieves the Object ID for the currently logged-in Azure user. It first gets the user principal name (UPN) from the active account details, then uses this UPN to query Azure Active Directory (AD) for the user's full details, finally extracting the `objectId`. This ID is intended for use with the `aadUserObjectId` parameter in the ARM template, granting the user access to resources like Azure SQL and Key Vault.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/asev2-appservice-sql-vpngw/README.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\n$objectId = ((az ad user list --upn (az account list | ConvertFrom-Json).user[1].name) | ConvertFrom-Json).objectId\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources with ARM Template\nDESCRIPTION: This ARM template deploys a Web App, Redis Cache, and SQL Database. It also configures connection strings in the Web App for the SQL Database and Redis Cache. The template uses tags to identify the resources being created.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-redis-cache-sql-database/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Sql/servers, databases, firewallrules, Microsoft.Web/serverfarms, Microsoft.Web/sites, config, SQLServer, Microsoft.Cache/Redis\"\n```\n\n----------------------------------------\n\nTITLE: Basic Rule Configuration with Redirect in Azure Application Gateway\nDESCRIPTION: Demonstrates how to associate a redirect configuration with a basic routing rule. The rule links an HTTP listener with the redirect configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-redirect/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"requestRoutingRules\": [\n        {\n            \"Name\": \"rule1\",\n            \"properties\": {\n                \"RuleType\": \"Basic\",\n                \"httpListener\": {\n                    \"id\": \"[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener1')]\"\n                },\n                \"redirectConfiguration\": {\n                    \"id\": \"[concat(variables('applicationGatewayID'), '/redirectConfigurations/redirectConfig1')]\"\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Kafka Cluster with Azure PowerShell\nDESCRIPTION: This PowerShell snippet demonstrates how to create a resource group and deploy the Kafka cluster using the Azure Resource Manager template. It requires setting username, password, and storage account name in the parameter file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/kafka/kafka-on-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzureResourceGroup -Name \"AZKFRKAFKAEA3\" -Location 'EastAsia'\n\nNew-AzureResourceGroupDeployment -Name AZKFRGKAFKAV2DEP1 -ResourceGroupName \"AZKFRGKAFKAEA3\" -TemplateFile C:\\gitsrc\\azure-quickstart-templates\\kafka-on-ubuntu\\azuredeploy.json -TemplateParameterFile C:\\gitsrc\\azure-quickstart-templates\\kafka-on-ubuntu\\azuredeploy-parameters.json -Verbose\n```\n\n----------------------------------------\n\nTITLE: Viewing JBoss EAP Installation Logs in Azure VM\nDESCRIPTION: Command to display the JBoss EAP installation log file which contains details about deployment failures and possible solutions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-clustered-multivm-rhel/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmore jbosseap.install.log\n```\n\n----------------------------------------\n\nTITLE: Configuring Failed Master as New Slave\nDESCRIPTION: MySQL commands to reconfigure the former master server as a slave after failover. This ensures that replication continues with the new master-slave relationship.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-replication/README.md#2025-04-23_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nmysql> stop slave;\nmysql> change master to master_host='10.0.1.5', master_user='admin', master_password='secret', master_auto_position=1;\nmysql> start slave;\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Disk Encryption Extension for Windows VM\nDESCRIPTION: This snippet shows the ARM template tag for deploying the Azure Disk Encryption extension to a Windows virtual machine. It specifies the resource type and the extension name used for disk encryption operations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/decrypt-running-windows-vm-without-aad/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags:Microsoft.Compute/virtualMachines/extensions, AzureDiskEncryption, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, [variables('extensionName')]\"\n```\n\n----------------------------------------\n\nTITLE: Removing NAT Rule for Failed Master Using PowerShell\nDESCRIPTION: PowerShell commands to remove the NAT rule for a failed MySQL master server from the load balancer. This is part of the failover process to prevent applications from accessing the failed master.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-replication/README.md#2025-04-23_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n> $nic0=Get-AzureNetworkInterface -Name mysqldns-nic0 -ResourceGroupName mysqlrg\n> $nic1=Get-AzureNetworkInterface -Name mysqldns-nic1 -ResourceGroupName mysqlrg\n...\n# $i is the index of the target nat rule\n...\n> $rule0=$nic0.IpConfigurations[0].LoadBalancerInboundNatRules[$i]\n> $nic0.IpConfigurations[0].LoadBalancerInboundNatRules.removeRange($i,1)\n> Set-AzureNetworkInterface -NetworkInterface $nic0\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription\nDESCRIPTION: Command for selecting a specific Azure subscription for deployment. This ensures resources are created in the correct subscription.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/datascience/vm-ubuntu-DSVM-GPU-or-CPU/GettingStarted.md#2025-04-23_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Specifying Dependencies in JSON\nDESCRIPTION: Shows how to specify deployment sequence dependencies using the dependsOn property in JSON. Dependencies can reference resource names or copy loops to establish deployment order relationships.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n        \"dependsOn\": [\n        \"nicLoop\",\n        \"[parameters('sqlServerName')]\"\n      ],\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure SQL Server Auditing to Event Hub with ARM Template in JSON\nDESCRIPTION: This ARM template in JSON format enables deployment of an Azure SQL server with auditing configured to send audit logs to an existing Event Hub. It requires the 'Microsoft.Sql/servers', 'Microsoft.EventHub/namespaces', and related providers to be registered in the Azure subscription. Key parameters include the auditing 'State' (should be set to 'Enabled'), 'IsAzureMonitorTargetEnabled' flag (must be true for Event Hub integration), and configuration of diagnostic settings for the 'master' database. Expected input includes Event Hub and SQL Server resource details; output is a fully configured auditing solution. Limitations include requiring existing Event Hub and appropriate diagnostic settings for server-level auditing.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.sql/sql-auditing-server-policy-to-eventhub/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n// Tags: Microsoft.EventHub/namespaces, eventhubs, Microsoft.Sql/servers, databases, databases/providers/diagnosticSettings, auditingSettings, devOpsAuditingSettings\n```\n\n----------------------------------------\n\nTITLE: Tagging Azure Resource Types for Databricks Workspace Deployment - Markdown/Metadata\nDESCRIPTION: This snippet lists resource types as tags, indicating which Azure resources are involved in the deployment template for a Databricks workspace with managed disks CMK. Although not a functional code block, it serves as metadata documenting resource relationships for users and automated tooling (for discoverability and best practice validation). Depends on Azure Resource Manager, Microsoft Databricks, and Microsoft KeyVault. Tags provided: Microsoft.Databricks/workspaces, Microsoft.Resources/deployments, Microsoft.KeyVault/vaults/accessPolicies.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-workspace-with-managed-disk-customer-managed-keys/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`Tags: Microsoft.Databricks/workspaces, Microsoft.Resources/deployments, Microsoft.KeyVault/vaults/accessPolicies`\n```\n\n----------------------------------------\n\nTITLE: Assigning Owner Role at Tenant Scope using PowerShell\nDESCRIPTION: This PowerShell command assigns the Owner role to a specified user at the tenant scope ('/'), which is necessary for deploying tenant-level templates. The [userId] should be replaced with the actual user's sign-in name.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/tenant-deployments/README.md#2025-04-23_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nNew-AzRoleAssignment -SignInName \"[userId]\" -Scope \"/\" -RoleDefinitionName \"Owner\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Linux Container with Secure Environment Variables in Azure Container Instances\nDESCRIPTION: ARM template for deploying a Linux container instance with secure environment variable support. The template configures container groups and allows secure environment variable passing to containers running on Azure Container Instances.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerinstance/aci-linuxcontainer-secure-environmentvariables/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"not shown in the provided content\",\n  \"contentVersion\": \"not shown in the provided content\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Machine Learning Workspace and Dataset\nDESCRIPTION: This ARM template defines the resources needed to create an Azure Machine Learning workspace and a tabular dataset from a web URL. It includes storage accounts, key vaults, application insights, and the ML workspace itself.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-dataset-create-tabular-from-web-url/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": \"Microsoft.MachineLearningServices/workspaces/datasets, Microsoft.Storage/storageAccounts, Microsoft.KeyVault/vaults, Microsoft.Insights/components, Microsoft.MachineLearningServices/workspaces, systemAssigned\"\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template to Resource Group - Azure CLI - Bash\nDESCRIPTION: Deploys an ARM template (\\\"azuredeploy.json\\\") to the specified resource group using Azure CLI. Requires authenticated CLI, an existing resource group (\\\"IoTEdgeResources\\\"), and a valid ARM template file path. Parameters like deployment name (\\\"IOTdeployment\\\"), resource group, and template file path must be specified. Outputs deployment status and details on completion.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iot-iothub-edgeemulator-vm/GettingStarted-Iot-EdgeEmulator.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz group deployment create --name \"IOTdeployment\" --resource-group \"IoTEdgeResources\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: Deploying SQL Server 2014 SP1 Enterprise with Auto Patching using Azure ARM Template\nDESCRIPTION: This JSON snippet is part of an Azure Resource Manager template for deploying SQL Server 2014 SP1 Enterprise edition with Auto Patching enabled. It includes parameters for configuring the auto-patching schedule, such as the day of the week, start hour, and duration window for applying patches.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-sql-full-autopatching/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"sqlAutopatchingDayOfWeek\": {\n  \"type\": \"string\",\n  \"defaultValue\": \"Sunday\",\n  \"allowedValues\": [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ],\n  \"metadata\": {\n    \"description\": \"Day of the week to apply patches\"\n  }\n},\n\"sqlAutopatchingStartHour\": {\n  \"type\": \"string\",\n  \"defaultValue\": \"22\",\n  \"metadata\": {\n    \"description\": \"Start hour for patching\"\n  }\n},\n\"sqlAutopatchingWindowDuration\": {\n  \"type\": \"string\",\n  \"defaultValue\": \"60\",\n  \"metadata\": {\n    \"description\": \"Duration of patching window in minutes\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Kafka Process on Deployed VMs\nDESCRIPTION: This bash command checks if the Kafka process is running on the deployed virtual machines. It should be executed after SSHing into one of the Kafka broker VMs via the jumpbox.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/kafka/kafka-on-ubuntu/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nps-ef|grep kafka\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for ASEv3\nDESCRIPTION: This code snippet demonstrates the resources deployed by the template, including Network Security Group, Virtual Network, App Service Environment, App Service Plan, and App Service. It outlines the key properties and configurations for each resource type.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-asp-app-on-asev3-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- Microsoft.Network/networkSecurityGroups\n- Microsoft.Network/virtualNetworks\n- Microsoft.Web/hostingEnvironments\n- Microsoft.Web/serverfarms\n- Microsoft.Web/sites\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources with ARM Template\nDESCRIPTION: This code snippet shows the deployment buttons for Azure and Azure US Gov, as well as a visualization button. These allow users to quickly deploy the template or visualize its structure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.keyvault/key-vault-managed-identity-role-assignment/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.keyvault%2Fkey-vault-managed-identity-role-assignment%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.keyvault%2Fkey-vault-managed-identity-role-assignment%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.keyvault%2Fkey-vault-managed-identity-role-assignment%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: PowerShell Command for Removing Failed Encryption Extension\nDESCRIPTION: PowerShell cmdlet to remove an unsuccessful disk encryption extension in case of deployment failures, allowing for retry of the encryption process.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/encrypt-running-windows-vm/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nRemove-AzureRmVMExtension -ResourceGroupName $rgname -Name \"extensionname\" -VMName $vmname\n```\n\n----------------------------------------\n\nTITLE: Retrieving Jenkins Initial Admin Password\nDESCRIPTION: This command retrieves the initial admin password for Jenkins from the virtual machine. It requires SSH access to the Jenkins VM.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-webapp/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nsudo cat /var/lib/jenkins/secrets/initialAdminPassword\n```\n\n----------------------------------------\n\nTITLE: Promoting MySQL Slave to Master During Failover\nDESCRIPTION: MySQL commands to promote a slave server to become the new master during a failover scenario. This stops the slave process and reconfigures the server to operate as a master.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-replication/README.md#2025-04-23_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nmysql> stop slave;\nmysql> change master to master_host='10.0.1.5', master_user='admin', master_password='secret', master_auto_position=1;\n```\n\n----------------------------------------\n\nTITLE: Navigating to VM Extension Logs Directory in Azure\nDESCRIPTION: Command to change directory to the logging location for Custom Script Extension which contains JBoss EAP deployment logs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-clustered-multivm-rhel/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncd /var/lib/waagent/custom-script/download/0\n```\n\n----------------------------------------\n\nTITLE: Showing Key Vault Key Details using Azure CLI\nDESCRIPTION: This Azure CLI command displays the details of a specific key within a specified Azure Key Vault. The 'kid' property in the output represents the key URI, which is required as the 'cmk_keyvault_key_uri' parameter for the deployment template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault key show --vault-name <keyvault-name> --name <key-name>\n```\n\n----------------------------------------\n\nTITLE: Defining Location Parameter in JSON\nDESCRIPTION: Shows the recommended pattern for defining a location parameter in JSON. Uses resourceGroup().location as the default value while allowing the location to be specified during deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Location for all resources.\"\n      }\n    }\n```\n\n----------------------------------------\n\nTITLE: Adding Secret to Key Vault using Azure CLI\nDESCRIPTION: Azure CLI command to store a password as a secret in Azure Key Vault. Creates a secret named 'ITSecret' with a specified password value.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-secure-password/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault secret set --vault-name Contoso --name ITSecret --value 'password'\n```\n\n----------------------------------------\n\nTITLE: Registering AKS Preview Features in Azure\nDESCRIPTION: Bash script to register required AKS preview features including AutoUpgrade, PodSecurityPolicy, RunCommand, PodIdentity, PrivateClusterPublicFQDN, and PodSubnet. The script checks existing registrations and waits for completion.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/private-aks-cluster-with-public-dns-zone/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n\n# Registering AKS feature extensions\naksExtensions=(\"AutoUpgradePreview\" \"PodSecurityPolicyPreview\" \"RunCommandPreview\" \"EnablePodIdentityPreview \" \"EnablePrivateClusterPublicFQDN\" \"PodSubnetPreview\")\nregisteringExtensions=()\nfor aksExtension in ${aksExtensions[@]}; do\n  echo \"Checking if [$aksExtension] extension is already registered...\"\n  extension=$(az feature list -o table --query \"[?contains(name, 'Microsoft.ContainerService/$aksExtension') && @.properties.state == 'Registered'].{Name:name}\" --output tsv)\n  if [[ -z $extension ]]; then\n    echo \"[$aksExtension] extension is not registered.\"\n    echo \"Registering [$aksExtension] extension...\"\n    az feature register --name $aksExtension --namespace Microsoft.ContainerService\n    registeringExtensions+=(\"$aksExtension\")\n  else\n    echo \"[$aksExtension] extension is already registered.\"\n  fi\ndone\necho $registeringExtensions\ndelay=1\nfor aksExtension in ${registeringExtensions[@]}; do\n  echo -n \"Checking if [$aksExtension] extension is already registered...\"\n  while true; do\n    extension=$(az feature list -o table --query \"[?contains(name, 'Microsoft.ContainerService/$aksExtension') && @.properties.state == 'Registered'].{Name:name}\" --output tsv)\n    if [[ -z $extension ]]; then\n      echo -n \".\"\n      sleep $delay\n    else\n      echo \".\"\n      break\n    fi\n  done\ndone\n\necho \"Refreshing the registration of the Microsoft.ContainerService resource provider...\"\naz provider register --namespace Microsoft.ContainerService\necho \"Microsoft.ContainerService resource provider registration successfully refreshed\"\n```\n\n----------------------------------------\n\nTITLE: Configuring IoT Edge Device with Connection String\nDESCRIPTION: This command remotely configures the IoT Edge runtime on an Ubuntu VM with the device connection string. It invokes a shell script on the VM to set up the IoT Edge configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iot-iothub-edgeemulator-vm/GettingStarted-Iot-EdgeEmulator.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\naz vm run-command invoke -g IoTEdgeResources -n EdgeVM --command-id RunShellScript --script \"/etc/iotedge/configedge.sh '{device_connection_string}'\"\n```\n\n----------------------------------------\n\nTITLE: Creating Workspace with User Assigned Identity using PowerShell\nDESCRIPTION: This PowerShell command creates an Azure ML workspace with a user-assigned managed identity instead of the default system-assigned identity. It references existing dependent resources and specifies a user-assigned identity resource ID.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-vnet/README.md#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzResourceGroupDeployment -ResourceGroupName \"rg\" -TemplateFile \".\\azuredeploy.json\" -workspaceName \"workspaceName\" -location \"westus2\" -Name \"deploymentname\" -storageAccountOption \"existing\" -storageAccountResourceGroupName \"existing-storage-rg\" -storageAccountName \"existing-storage-name\" -keyVaultOption \"existing\" -keyVaultResourceGroupName \"existing-kv-rg\" -keyVaultName \"existing-kv-name\" -applicationInsightsOption \"existing\" -applicationInsightsResourceGroupName \"existing-ai-rg\" -applicationInsightsName \"existing-ai-name\" -identityType \"userAssigned\" -primaryUserAssignedIdentity \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/uai\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Resource Tags in Markdown\nDESCRIPTION: This code snippet lists the Azure resource tags used in the deployment template. It includes various Azure services and resource types that are part of the Cloud Pak for Data deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ibm-cloud-pak/ibm-cloud-pak-for-data/README.md#2025-04-23_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n`Tags: Microsoft.Authorization/roleDefinitions, customRole, Microsoft.Network/virtualNetworks/providers/roleAssignments, Microsoft.Resources/deployments, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Network/networkSecurityGroups, Microsoft.Storage/storageAccounts, Microsoft.Compute/virtualMachines/extensions, CustomScript, Microsoft.RecoveryServices/vaults, Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems, Microsoft.Compute/virtualMachines, Microsoft.DomainRegistration/domains, Microsoft.Network/dnszones`\n```\n\n----------------------------------------\n\nTITLE: Generating GUID for ASR Monitoring Schedule\nDESCRIPTION: PowerShell command to generate a new GUID used for scheduling the ASR data ingestion into OMS Log Analytics.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/asr-oms-monitoring/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n[guid]::NewGuid()\n```\n\n----------------------------------------\n\nTITLE: Running and Monitoring Data Factory Pipeline using PowerShell Script\nDESCRIPTION: This PowerShell command executes the 'runmonitor.ps1' script to trigger and monitor the Azure Data Factory pipeline created by the template. It requires the user to specify the Azure resource group name and the Data Factory name as parameters. This script handles the interaction with the deployed Data Factory resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-blob-to-sql-copy/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n.\\runmonitor.ps1 -resourceGroupName \"<name of your resource group>\" -DataFactoryName \"<name of your data factory>\"\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types in ARM Template\nDESCRIPTION: This line lists the Azure resource types that are defined and deployed by the associated ARM template. It serves as metadata, indicating the template manages Virtual Machine Scale Sets, uses the Custom Script Extension for VM customization, and configures networking components like Virtual Networks, Public IP Addresses, and Load Balancers.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-custom-script-windows/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Compute/virtualMachineScaleSets, CustomScriptExtension, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers`\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template with Azure CLI\nDESCRIPTION: This command deploys the ARM template using Azure CLI. It requires specifying the resource group and the path to the template file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-node/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\naz group deployment create --resource-group \"resource-group\" --template-file \"azuredeploy.json path\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for VM in Different Resource Group VNET\nDESCRIPTION: This JSON template defines the Azure resources needed to create a VM in a pre-existing VNET that is in a different resource group. It includes storage accounts, public IP addresses, network interfaces, and virtual machines. The template uses parameters to allow customization of the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-different-rg-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\n  \"Microsoft.Storage/storageAccounts\": \"\",\n  \"Microsoft.Network/publicIPAddresses\": \"\",\n  \"Microsoft.Network/networkInterfaces\": \"\",\n  \"Microsoft.Compute/virtualMachines\": \"\",\n  \"Microsoft.Network/virtualNetworks\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Storage Spaces Direct Cluster using Azure PowerShell\nDESCRIPTION: This PowerShell command deploys the Azure Resource Group for the Storage Spaces Direct cluster. It specifies the resource group location and the artifact staging directory.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/storage-spaces-direct/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n.\\Deploy-AzureResourceGroup.ps1 -ResourceGroupLocation 'eastus' -ArtifactStagingDirectory '[foldername]'\n```\n\n----------------------------------------\n\nTITLE: Setting up SSH Tunnel for Jenkins\nDESCRIPTION: This snippet demonstrates how to set up an SSH tunnel to securely access the Jenkins console. It uses the ssh command to create a local port forwarding.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-webapp/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nssh -L 127.0.0.1:8080:localhost:8080 username@mswatest001.eastus.cloudapp.azure.com\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags specification for the Logic App template defining Microsoft Logic workflows and related components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/identitygovernance-entitlementmanagement-extensibility-sample-logicapp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nMicrosoft.Logic/workflows, Request, object, string, If, AAD\n```\n\n----------------------------------------\n\nTITLE: Configuring App Service Plan for ASEv3\nDESCRIPTION: This code snippet illustrates the configuration of an App Service Plan within the ASEv3 environment. It shows the default values for the plan name, hosting environment profile, SKU, and SKU code.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-asp-app-on-asev3-create/README.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hostingPlan\": \"string\",\n  \"hostingEnvironmentProfile\": \"string\",\n  \"sku\": \"IsolatedV2\",\n  \"skuCode\": \"I1V2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Windows VM with Admin Center Extension (ARM Template)\nDESCRIPTION: ARM template for deploying a Windows VM with Windows Admin Center extension. It sets up storage, networking, and computes resources with specific configurations for Admin Center management.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-windows-admincenter/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, AdminCenter\"\n```\n\n----------------------------------------\n\nTITLE: Configure SQL Server Auto Patching Parameters (JSON)\nDESCRIPTION: ARM template parameters for configuring SQL Server automated patching schedule. Defines the patching day, start time, and duration window during which updates can be applied to both Windows and SQL Server.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-sql-existing-autopatching-update/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"sqlAutopatchingDayOfWeek\": {\n    \"type\": \"string\",\n    \"allowedValues\": [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Everyday\", \"Never\"],\n    \"defaultValue\": \"Monday\"\n  },\n  \"sqlAutopatchingStartHour\": {\n    \"type\": \"int\",\n    \"minValue\": 0,\n    \"maxValue\": 23,\n    \"defaultValue\": 22\n  },\n  \"sqlAutopatchingWindowDuration\": {\n    \"type\": \"int\",\n    \"allowedValues\": [30, 60, 90, 120, 180],\n    \"defaultValue\": 60\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Identifying Azure Resource Types for PostgreSQL Deployment\nDESCRIPTION: This snippet lists the Azure Resource Manager (ARM) resource types that are provisioned by the associated template. Specifically, it includes 'Microsoft.DBforPostgreSQL/flexibleServers' for the PostgreSQL flexible server instance and 'Microsoft.DBforPostgreSQL/flexibleServers/administrators' for configuring Azure Active Directory administrators.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.dbforpostgresql/flexible-postgresql-with-aad/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.DBforPostgreSQL/flexibleServers, Microsoft.DBforPostgreSQL/flexibleServers/administrators`\n```\n\n----------------------------------------\n\nTITLE: Deploying MySQL Server on Ubuntu VM using Azure ARM Template\nDESCRIPTION: This ARM template snippet defines the resources needed to deploy a MySQL server on an Ubuntu VM in Azure. It includes storage accounts, network interfaces, virtual networks, and the VM itself. The CustomScript extension is used to install and configure MySQL.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-standalone-server-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\"Microsoft.Storage/storageAccounts\": \"\", \"Microsoft.Network/publicIPAddresses\": \"\", \"Microsoft.Network/virtualNetworks\": \"\", \"Microsoft.Network/networkInterfaces\": \"\", \"Microsoft.Compute/virtualMachines\": \"\", \"Microsoft.Compute/virtualMachines/extensions\": \"\", \"CustomScript\": \"\"}\n```\n\n----------------------------------------\n\nTITLE: Creating Kafka Resource Group with PowerShell\nDESCRIPTION: PowerShell command to create a new Azure resource group for Kafka deployment in East Asia region.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/kafka/kafka-ubuntu-multidisks/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nPS C:\\Users\\azureuser1> New-AzureResourceGroup -Name \"AZKFRKAFKAEA3\" -Location 'EastAsia'\n```\n\n----------------------------------------\n\nTITLE: Adding Additional Shards to MongoDB Sharding Cluster\nDESCRIPTION: Commands to add more shards to the existing sharding cluster. This demonstrates how to connect to a router server and add a new replica set as a shard to the cluster using the sh.addShard command.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mongo/mongodb-sharding-centos/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$mongo -u \"<mongouser>\" -p \"<mongopassword>\" \"admin\"\n\nsh.addShard(\"<replica set name>/<primary ip>:27017\")\n\nexit\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Storage VHD Import Template\nDESCRIPTION: An ARM template deployment that enables importing VHD files from a ZIP archive into Azure Storage. The template requires a source ZIP archive URL and destination storage container URI with SAS token for write permissions. It uses managed identities and deployment scripts to handle the download, extraction and import process.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/storage-import-zipped-vhds/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tags\": {\n    \"storage\": \"\",\n    \"import\": \"\", \n    \"vhd\": \"\",\n    \"specialized image\": \"\",\n    \"Microsoft.ManagedIdentity/userAssignedIdentities\": \"\",\n    \"Microsoft.Authorization/roleAssignments\": \"\",\n    \"Microsoft.Resources/deploymentScripts\": \"\",\n    \"UserAssigned\": \"\",\n    \"Microsoft.Storage/storageAccounts\": \"\",\n    \"blobServices/containers\": \"\",\n    \"Microsoft.KeyVault/vaults\": \"\",\n    \"Microsoft.KeyVault/vaults/secrets\": \"\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Azure Machine Learning Service Principal Object ID using PowerShell\nDESCRIPTION: This PowerShell command retrieves the display name and object ID of the 'Azure Machine Learning' service principal using its display name. The object ID is needed to assign roles to the service principal.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzADServicePrincipal --DisplayName \"Azure Machine Learning\" | select-object DisplayName, Id\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Logic App with Function using ARM Template\nDESCRIPTION: This code snippet shows the ARM template tags used for deploying the serverless application. It includes references to storage accounts, server farms, websites, and logic workflows. The template is designed to create and configure the necessary Azure resources for the Logic App and Function integration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.logic/logic-app-and-function-app/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Logic/workflows, Function, Response, Request, Microsoft.Storage/storageAccounts, Microsoft.Web/serverfarms, Microsoft.Web/sites, sourcecontrols\"\n```\n\n----------------------------------------\n\nTITLE: Switching to Root User in VMSS Instance for Troubleshooting\nDESCRIPTION: Command to switch to the root user when logged into a VMSS instance for troubleshooting permission-related issues. This is used during the troubleshooting process after logging into the instance via SSH.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-clustered-vmss-rhel/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo su -\n```\n\n----------------------------------------\n\nTITLE: Validating DNS Resolution to Storage Endpoints from Azure VM - Bash\nDESCRIPTION: This Bash script is executed on an Azure Linux VM using the Custom Script Extension after provisioning resources with the ARM template. It validates required parameters, updates the system, installs necessary packages, and uses nslookup to verify that both ADLS Gen2 and Blob Storage public endpoints resolve to their respective private IP addresses as configured through Azure Private Link. Inputs are the service primary endpoints passed as parameters. Expected output is to confirm private DNS mapping, with an exit on missing parameters. Dependencies include Azure Linux VM with assigned managed identity, network connectivity, and pre-provisioned endpoints and DNS setup. The script stops before performing any data transfer or authentication against the storage accounts.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage/blob-storage-private-endpoint/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\\n\\n# Variables\\nadlsServicePrimaryEndpoint=$1\\nblobServicePrimaryEndpoint=$2\\n\\n# Parameters validation\\nif [[ -z $adlsServicePrimaryEndpoint ]]; then\\n    echo \\\"adlsServicePrimaryEndpoint parameter cannot be null or empty\\\"\\n    exit 1\\nfi\\n\\nif [[ -z $blobServicePrimaryEndpoint ]]; then\\n    echo \\\"blobServicePrimaryEndpoint parameter cannot be null or empty\\\"\\n    exit 1\\nfi\\n\\n# Eliminate debconf warnings\\necho 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\\n\\n# Update the system\\nsudo apt-get update -y\\n\\n# Upgrade packages\\nsudo apt-get upgrade -y\\n\\n# Run nslookup to verify that public hostname of the ADLS Gen 2 storage account\\n# is properly mapped to the private address of the provate endpoint\\nnslookup $adlsServicePrimaryEndpoint\\n\\n# Run nslookup to verify that public hostname of the Blob storage account\\n# is properly mapped to the private address of the provate endpoint\\nnslookup $blobServicePrimaryEndpoint\n```\n\n----------------------------------------\n\nTITLE: Finding Azure Machine Learning Service Principal with PowerShell\nDESCRIPTION: This PowerShell command retrieves the display name and ID of the Azure Machine Learning service principal for role assignment purposes.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk-service-side-encryption/README.md#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzADServicePrincipal --DisplayName \"Azure Machine Learning\" | select-object DisplayName, Id\n```\n\n----------------------------------------\n\nTITLE: Documentation Only\nDESCRIPTION: This is a documentation-only template that provides architectural guidance for implementing Azure Firewall as a DNS proxy in a hub-spoke topology. No code snippets are present in the provided content.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azure-firewall-dns-proxy/README.md#2025-04-23_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Creating Multiple Data Disks in Azure VM Template\nDESCRIPTION: This snippet demonstrates how a copy loop is used inside the Virtual Machine's storageProfile to create multiple data disks based on the specified count parameter.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/parameterized-linked-templates/detail/vmtemplate.md#2025-04-23_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n\"copy\": [\n    {\n        \"name\": \"dataDisks\",\n        \"count\": \"[parameters('dataDisksCount')]\",\n        \"input\": {\n            \"diskSizeGB\": 1023,\n            \"lun\": \"[copyIndex('dataDisks')]\",\n            \"createOption\": \"Empty\"\n        }\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Testing Bicep Deployment with Azure CLI What-If\nDESCRIPTION: Runs an Azure CLI command to preview the changes that would be made by deploying the 'main.bicep' template with specified parameters ('azuredeploy.parameters.json') to a target resource group, without actually applying the changes. This command should be run from the root of the 'microsoft.desktopvirtualization\\azure-virtual-desktop-with-fslogix' directory after modifying parameters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.desktopvirtualization/azure-virtual-desktop-with-fslogix/README.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create --resource-group 'deployment resource group name' --template-file .\\main.bicep --parameters .\\azuredeploy.parameters.json --what-if\n```\n\n----------------------------------------\n\nTITLE: Jenkins Node Configuration Settings\nDESCRIPTION: YAML configuration for registering a new Jenkins worker node, specifying the node properties, execution parameters, and SSH connection details.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cluster-2-linux-1-win/README.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nName: Node-1\nUsage: Use this node as much as possible\n# Of executors: 2\nRemote Root directory: /home/jenkins\nLaunch Method: Launch slave agent via SSH\nHost: 10.0.1.11\nCredentials: <CHOOSE SSH KeyPair Credentials>\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration\nDESCRIPTION: Resource tags for the Azure deployment template specifying the components and services used in the DMZ setup.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/dmz-nsg/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Network/networkSecurityGroups\n```\n\n----------------------------------------\n\nTITLE: SSH Connection to Grafana Host\nDESCRIPTION: Command template for SSH connection to the Grafana host machine. It requires the private SSH key, username, and Grafana URL.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-container/README.md#2025-04-23_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nssh -i <private_ssh_key>  <username>@<GRAFANAURL>\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template using Deployment Script (Bash)\nDESCRIPTION: This shell command executes the `deploy.sh` script to initiate the Azure Resource Manager (ARM) deployment. It requires parameters for the target resource group name (`-p [resourceGroupName]`), a unique deployment name (`-q [deploymentName]`), the resource group location (`-l [resourceGroupLocation]`), and the name of the storage account containing the configuration script (`-s [scriptstorageaccount]`). This script handles parameter updates and runs the `azure deployment create` command.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndeploy.sh -p [resourceGroupName] -q [deploymentName] -l [resourceGroupLocation] -s [scriptstorageaccount]\n```\n\n----------------------------------------\n\nTITLE: Executing VM OS Count Query with Azure CLI\nDESCRIPTION: This Azure CLI command runs the Resource Graph query to count VMs by OS type using the az graph query command.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/resourcegraph-sharedquery-countos/README.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz graph query -q \"Resources | where type =~ 'Microsoft.Compute/virtualMachines' | summarize count() by tostring(properties.storageProfile.osDisk.osType)\"\n```\n\n----------------------------------------\n\nTITLE: Running and Monitoring the Data Factory Pipeline via PowerShell Script\nDESCRIPTION: This PowerShell command executes the `runmonitor.ps1` script, which is designed to trigger and monitor the data copy pipeline within the deployed Azure Data Factory. The script requires the target Azure resource group name (`-resourceGroupName`) and the specific Data Factory name (`-DataFactoryName`) as mandatory parameters. Ensure the `runmonitor.ps1` script is present in the current directory or provide the full path.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-blob-to-blob-copy/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n.\\runmonitor.ps1 -resourceGroupName \"<name of your resource group>\" -DataFactoryName \"<name of your data factory>\"\n```\n\n----------------------------------------\n\nTITLE: Validating Azure Stack HCI Cluster Deployment with Azure CLI\nDESCRIPTION: This snippet demonstrates how to use Azure CLI to validate the deployment of an Azure Stack HCI cluster using a Bicep template and parameter file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurestackhci/create-cluster-with-prereqs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create -g rg-myhcicluster -f .\\main.bicep -p .\\azuredeploy.parameters.contoso.json\n```\n\n----------------------------------------\n\nTITLE: Setting the Active Azure Subscription using Azure CLI\nDESCRIPTION: Sets the specified Azure subscription ID as the active subscription for subsequent Azure CLI commands in the current session. Replace \"your subscription id\" with the actual ID of the target subscription.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-all-in-one-template-for-vnet-injection/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for FreeBSD VM using ARM Template\nDESCRIPTION: This ARM template defines the resources needed to deploy a FreeBSD VM in Azure. It includes storage accounts, public IP addresses, network security groups, virtual networks, network interfaces, and the virtual machine itself. The template uses parameters to allow customization of the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-simple-freebsd/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines\"\n```\n\n----------------------------------------\n\nTITLE: Installing JupyterHub on Ubuntu\nDESCRIPTION: Command sequence to install the latest version of JupyterHub on Ubuntu Linux. It installs Python 3, development tools, git, and curl before downloading and running the JupyterHub bootstrap script.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jupyter/jupyterhub-classroom/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install python3 python3-dev git curl\n\ncurl https://raw.githubusercontent.com/jupyterhub/the-littlest-jupyterhub/master/bootstrap/bootstrap.py | sudo -E python3 - --admin <admin-user-name>\n```\n\n----------------------------------------\n\nTITLE: Resource Tags for Azure Virtual WAN Template\nDESCRIPTION: This snippet lists the metadata tags associated with the Azure Resource Manager template. These tags help in categorizing and identifying the template and the Azure resources it provisions, such as Virtual WANs, Virtual Hubs, VPN Sites, and VPN Gateways. It also includes a reference to the vWanSku parameter.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/virtual-wan/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags:network, virtual network, virtual wan, vpn, vwan, connections, Microsoft.Network/virtualWans, [parameters('vWanSku')], Microsoft.Network/virtualHubs, Microsoft.Network/vpnSites, Microsoft.Network/vpnGateways`\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Application Gateway Infrastructure\nDESCRIPTION: ARM template that provisions an Application Gateway with public IP address and virtual network. The template configures HTTP load balancing between two backend servers and requires valid IP addresses to be specified for the backend servers.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-public-ip/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  // Note: This is a template reference. The actual template content is not provided in the input text\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Front Door with Rate Limiting\nDESCRIPTION: ARM template for deploying an Azure Front Door profile with a custom rate limit rule in the WAF policy. The configuration includes a static website origin, endpoint routing, and IP-based rate limiting that blocks requests after 10 attempts within 5 minutes from the same IP.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-rate-limit/README.md#2025-04-23_snippet_0\n\nLANGUAGE: tags\nCODE:\n```\nMicrosoft.Cdn/profiles, Microsoft.Cdn/profiles/afdEndpoints, Microsoft.Cdn/profiles/originGroups, Microsoft.Cdn/profiles/originGroups/origins, Microsoft.Cdn/profiles/afdEndpoints/routes, Microsoft.Network/FrontDoorWebApplicationFirewallPolicies, Microsoft.Cdn/profiles/securityPolicies\n```\n\n----------------------------------------\n\nTITLE: Defining ARM Template Resources for Airflow Deployment\nDESCRIPTION: This JSON snippet defines the Azure Resource Manager (ARM) template resources required for deploying Airflow on Azure. It includes a Web App, App Service Plan, and PostgreSQL database configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-airflow-postgresql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/sites, config, Microsoft.Web/serverfarms, Microsoft.DBforPostgreSQL/servers, firewallrules, databases\"\n```\n\n----------------------------------------\n\nTITLE: Deploying HBase Replication with Two VNets using ARM Template in JSON\nDESCRIPTION: This ARM template (JSON) snippet provisions two HDInsight HBase clusters, each located in separate virtual networks within the same Azure region, and sets up necessary virtual network peerings and storage accounts needed for cluster operation and data replication. Dependencies include Microsoft.Network, Microsoft.Storage, and Microsoft.HDInsight resource providers, as well as the Standard_LRS SKU for storage. Key parameters control names and sizes for clusters, VNet configuration, and more. Expected inputs include resource names and regions, and outputs are fully provisioned Azure resources prepared for manual Zookeeper configuration prior to enabling HBase replication.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-hbase-replication-two-vnets-same-region/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Standard_LRS, Microsoft.Network/virtualNetworks, Microsoft.Network/virtualNetworks/virtualNetworkPeerings, Microsoft.Storage/storageAccounts, Microsoft.HDInsight/clusters\"\n```\n\n----------------------------------------\n\nTITLE: SSH into Swarm Worker Nodes via Manager\nDESCRIPTION: This command sequence shows how to SSH into a Swarm worker node by first connecting to a manager node. The -A flag enables forwarding of authentication credentials.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/swarm/docker-swarm-cluster/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nssh -A <username>@<masters-IP> -p 2200\nssh <username>@swarm-node-3\n```\n\n----------------------------------------\n\nTITLE: Artifacts Parameters Definition in Bicep\nDESCRIPTION: Shows how to define parameters for deployment artifacts in Bicep. These parameters are used to access scripts and nested templates during deployment with proper SAS token security.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_15\n\nLANGUAGE: bicep\nCODE:\n```\n@description('The base URI where artifacts required by this template are located including a trailing \\/')\nparam _artifactsLocation string = deployment().properties.templateLink.uri\n\n@secure()\n@description('The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured.')\nparam _artifactsLocationSasToken string = ''\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure ADLS Gen2 Datastore Template with ARM\nDESCRIPTION: This code snippet represents the Azure Resource Manager (ARM) template for deploying an ADLS Gen2 datastore in Azure Machine Learning. It includes resource definitions for storage accounts, key vaults, application insights, and the machine learning workspace itself.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-datastore-create-adls-gen2/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.MachineLearningServices/workspaces/datastores, Microsoft.Storage/storageAccounts, Microsoft.KeyVault/vaults, Microsoft.Insights/components, Microsoft.MachineLearningServices/workspaces, systemAssigned\"\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Storage Account using Azure CLI (Bash)\nDESCRIPTION: This command uses the Azure CLI (`azure storage account create`) to provision a new Azure Storage account. It requires specifying the location (`-l [location]`), storage type (`--type \\\"LRS\\\"`), resource group (`-g [resourcegroupname]`), and a unique name for the storage account (`[accountname]`). This account is used to stage the configuration script.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nazure storage account create -l [location] --type \"LRS\" -g [resourcegroupname] [accountname]\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags definition for the Azure template identifying Microsoft Network and Compute resources used in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-security-group/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/applicationSecurityGroups, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Verifying Secondary Node Replication\nDESCRIPTION: Commands to verify data replication on secondary nodes by enabling read operations on secondary nodes and querying the test collection.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mongo/mongodb-replica-set-centos/README.md#2025-04-23_snippet_2\n\nLANGUAGE: mongodb\nCODE:\n```\n$mongo -u \"<mongouser>\" -p \"<mongopassword>\" \"admin\"\n\nuse test\n\ndb.getMongo().setSlaveOk()\n\nshow collections\n\ndb.mycol.find()\n```\n\n----------------------------------------\n\nTITLE: Defining Webhook-Based Azure Function with ARM Template - JSON\nDESCRIPTION: This snippet defines an ARM template that deploys a webhook-based C# Azure Function with transformation abilities for use in Logic Apps. Required dependencies include an existing Azure Function App or container, and parameters must specify the target function app name. Inputs typically include resource parameters, and upon deployment, the output is a configured Azure Function endpoint ready for webhook integration. The template utilizes resource tags such as 'Microsoft.Web/sites/functions', 'httpTrigger', and others to establish related resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/logic-app-transform-function/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/sites/functions, httpTrigger, http, Microsoft.Storage/storageAccounts, Microsoft.Web/sites\"\n```\n\n----------------------------------------\n\nTITLE: Getting Azure Cosmos DB Service Principal Object ID using Azure CLI\nDESCRIPTION: This Azure CLI command retrieves the display name and object ID of the 'Azure Cosmos DB' service principal. This object ID is required to grant the service principal access permissions to the Azure Key Vault for CMK operations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naz ad sp list --display-name \"Azure Cosmos DB\" --query '[].[appDisplayName,objectId]' --output tsv\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS for JupyterHub using Shell Commands\nDESCRIPTION: A series of commands to enable HTTPS on the JupyterHub server using Let's Encrypt certificates. These commands configure HTTPS settings, set the admin email, add domains, and reload the proxy.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jupyter/jupyterhub-classroom/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo tljh-config set https.enabled true\nsudo tljh-config set https.letsencrypt.email <you@example.com>\nsudo tljh-config add-item https.letsencrypt.domains <domain.PublicIP>\nsudo tljh-config reload proxy\n```\n\n----------------------------------------\n\nTITLE: Querying a Specific Custom Resource Instance via ARM API (Shell)\nDESCRIPTION: This example shows a GET request using a tool like Postman or curl to retrieve details of a specific `customResources` instance created via an Azure Custom Resource Provider. It requires replacing placeholders for subscription ID, resource group name, resource provider name, and custom resource name. The `api-version` parameter is necessary.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.customproviders/custom-rp-with-function/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nGET\nhttps://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/{resourceProviderName}/customResources/{customResourceName}?api-version=2018-09-01-preview\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Command for Creating Resource Group\nDESCRIPTION: This command creates a new Azure Resource Group with the specified name and location. Replace 'resource-group' and 'your location' with desired values.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-github-deploy/GettingStarted-WebGit.md#2025-04-23_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Data Lake Store Without Encryption Using ARM Template - JSON\nDESCRIPTION: This snippet represents the ARM template functionality for provisioning an Azure Data Lake Store account with data encryption turned off. The template requires access to Azure permissions and expects a set of parameters for deployment, such as resource name and region settings. The output is an Azure Data Lake Store account resource with encryption disabled; additional customization may require referencing Azure documentation for encryption scenarios.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datalakestore/data-lake-store-no-encryption/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"// ARM template code for deploying Azure Data Lake Store without encryption would be placed here, typically in a file named 'azuredeploy.json'.\\n// This documentation refers to that template, which would include a resource block:\\n// {\\n//   \\\"type\\\": \\\"Microsoft.DataLakeStore/accounts\\\",\\n//   \\\"name\\\": \\\"[parameters('accountName')]\\\",\\n//   \\\"apiVersion\\\": \\\"2016-11-01\\\",\\n//   \\\"location\\\": \\\"[resourceGroup().location]\\\",\\n//   \\\"properties\\\": {\\n//     \\\"encryptionState\\\": \\\"Disabled\\\"\\n//   }\\n// }\\n// Refer to Azure RM templates documentation for placing this block in a full deployment file.\\n\"\n```\n\n----------------------------------------\n\nTITLE: Reading Empty Entry from Ethereum Smart Contract\nDESCRIPTION: Demonstrates reading from a smart contract function that returns an empty string because no entry has been set yet. This is a synchronous call that doesn't change the contract state.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n> guestBook.getMyEntry();\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Executing Custom Script Extension in ARM Template (JSON)\nDESCRIPTION: This JSON snippet within an ARM template configures a `CustomScript` extension for Virtual Machine Scale Set instances. It specifies the command to execute, which runs the `configure.sh` script (referenced by `parameters('scriptFileName')`) using bash. It passes the certificate thumbprints (`parameters('certThumbPrint')` and `parameters('caCertThumbPrint')`) as arguments to the script, enabling it to locate and configure the SSL certificates fetched from Key Vault.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/README.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"properties\": {\n    \"type\": \"CustomScript\",\n    \"settings\": {\n  \t  \"commandToExecute\": \"[concat('bash ', parameters('scriptFileName'), ' ', parameters('certThumbPrint'), ' ', parameters('caCertThumbPrint'))]\"\n},\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Logic App for Azure Backup Optimization Reports (ARM Template)\nDESCRIPTION: This ARM template deploys a Logic App that generates and emails periodic reports on Azure Backup cost optimization opportunities. It queries Log Analytics workspaces for data on inactive resources, long retention periods, and inefficient backup schedules.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/backup-optimize-report/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    // Template parameters would be defined here\n  },\n  \"variables\": {\n    // Template variables would be defined here\n  },\n  \"resources\": [\n    // Resource definitions for Logic App, connections, etc. would be here\n  ],\n  \"outputs\": {\n    // Any outputs would be defined here\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating to Azure using Azure CLI - Bash\nDESCRIPTION: Logs in the user to the Azure subscription via Azure CLI. This command opens a browser for authentication and, upon success, associates the user's credentials with the CLI session. Required dependency: Azure CLI installed and accessible in the terminal. Takes no parameters, and returns authentication status.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iot-iothub-edgeemulator-vm/GettingStarted-Iot-EdgeEmulator.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Windows VM with Diagnostics\nDESCRIPTION: This JSON snippet defines the Azure resources required for deploying a Windows VM with diagnostics. It includes storage accounts, public IP addresses, virtual networks, network interfaces, and virtual machines with the IaaSDiagnostics extension.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-diagnostics-extension-windows/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, extensions, IaaSDiagnostics\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Table in PostgreSQL Database\nDESCRIPTION: SQL command to create a new table named 'potluck' in the PostgreSQL database with various column types including VARCHAR, CHAR, and DATE.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/postgre/postgresql-standalone-server-ubuntu/README.md#2025-04-23_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE potluck (name VARCHAR(20), food VARCHAR(30),   confirmed CHAR(1), signup_date DATE);\n```\n\n----------------------------------------\n\nTITLE: Configuring Boot Diagnostics for Linux VM in Azure ARM Template\nDESCRIPTION: This JSON snippet demonstrates how to enable boot diagnostics for a Linux VM in an Azure Resource Manager template. It configures the diagnostics profile to store boot logs in a specified storage account.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-linux-serial-output/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"diagnosticsProfile\": {\n  \"bootDiagnostics\": {\n     \"enabled\": true,\n     \"storageUri\": \"[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Service Principal for AKS using Azure CLI\nDESCRIPTION: Azure CLI commands to create and configure a Service Principal for AKS deployment. Creates the SPN without assignments and retrieves its object ID. Note that the Service Principal Client Id is the same as the App Id.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerinstance/aks-advanced-networking-aad/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\naz ad sp create-for-rbac -n \"spn_name\" --skip-assignment\naz ad sp show --id <The AppId from the create-for-rbac command> --query objectId\n```\n\n----------------------------------------\n\nTITLE: Running provisioningListener.js in Provision Mode with PubNub Azure Bridge\nDESCRIPTION: Executes the provisioning script to detect and autoconfigure listeners for Event Hubs. This script listens for announcement messages containing Event Hub connection information when a new Azure deployment completes.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/pubnub/pubnub-eventhub-bridge/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode provisioningListener.js provision pnAnnounce demo\n```\n\n----------------------------------------\n\nTITLE: Deploying HDInsight and SQL Database Resources in Azure (JSON)\nDESCRIPTION: This ARM template deploys a HDInsight cluster, SQL Database server, SQL Database, and two tables. It includes resource definitions for storage accounts, HDInsight clusters, and SQL Database components. The template is configured for Sqoop testing scenarios in HDInsight.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-linux-with-sql-database/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    // ... (parameters would be defined here)\n  },\n  \"variables\": {\n    // ... (variables would be defined here)\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts\",\n      \"name\": \"[variables('storageAccountName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"Standard_LRS\"\n      },\n      \"kind\": \"Storage\",\n      \"properties\": {}\n    },\n    {\n      \"type\": \"Microsoft.HDInsight/clusters\",\n      \"name\": \"[parameters('clusterName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        // ... (HDInsight cluster properties would be defined here)\n      }\n    },\n    {\n      \"type\": \"Microsoft.Sql/servers\",\n      \"name\": \"[variables('sqlServerName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        // ... (SQL Server properties would be defined here)\n      },\n      \"resources\": [\n        {\n          \"type\": \"databases\",\n          \"name\": \"[parameters('databaseName')]\",\n          \"location\": \"[parameters('location')]\",\n          \"sku\": {\n            \"name\": \"S0\"\n          },\n          \"properties\": {}\n        },\n        {\n          \"type\": \"firewallrules\",\n          \"name\": \"AllowAllWindowsAzureIps\",\n          \"properties\": {\n            \"endIpAddress\": \"0.0.0.0\",\n            \"startIpAddress\": \"0.0.0.0\"\n          }\n        }\n      ]\n    }\n  ],\n  \"outputs\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Tags in JSON\nDESCRIPTION: This JSON snippet defines the tags for Azure resources deployed by the template. It specifies the resource types and services involved in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-sshkey/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/networkSecurityGroups, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines\"\n```\n\n----------------------------------------\n\nTITLE: Deploying SQL Server and Dedicated SQL Pool with TDE using Azure Resource Manager Template (JSON)\nDESCRIPTION: This snippet uses an Azure Resource Manager (ARM) template in JSON format to deploy a SQL Server and a Dedicated SQL pool (Azure Synapse SQL database) with Transparent Data Encryption enabled. Requires Azure Resource Manager, and the Microsoft.Sql resource provider to be registered. Key parameters include server name, admin credentials, and database configuration. Inputs are provided at deployment time and outputs include resource references. Limitations: The template must be deployed via the Azure portal, CLI, or PowerShell in a supported subscription.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.sql/sql-data-warehouse-transparent-encryption-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"sqlServerName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the SQL Server to create.\"\n      }\n    },\n    \"administratorLogin\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"SQL Server administrator username.\"\n      }\n    },\n    \"administratorLoginPassword\": {\n      \"type\": \"secureString\",\n      \"metadata\": {\n        \"description\": \"SQL Server administrator password.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Location for all resources.\"\n      }\n    },\n    \"sqlDatabaseName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Dedicated SQL pool to create.\"\n      }\n    },\n    \"skuName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"DW100c\",\n      \"allowedValues\": [\n        \"DW100c\",\n        \"DW200c\",\n        \"DW300c\"\n      ],\n      \"metadata\": {\n        \"description\": \"The performance level for the Dedicated SQL Pool.\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Sql/servers\",\n      \"apiVersion\": \"2022-02-01-preview\",\n      \"name\": \"[parameters('sqlServerName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"administratorLogin\": \"[parameters('administratorLogin')]\",\n        \"administratorLoginPassword\": \"[parameters('administratorLoginPassword')]\"\n      }\n    },\n    {\n      \"type\": \"Microsoft.Sql/servers/databases\",\n      \"apiVersion\": \"2022-02-01-preview\",\n      \"name\": \"[format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabaseName'))]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"[parameters('skuName')]\"\n      },\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]\"\n      ],\n      \"properties\": {\n        \"createMode\": \"Default\"\n      }\n    },\n    {\n      \"type\": \"Microsoft.Sql/servers/databases/transparentDataEncryption\",\n      \"apiVersion\": \"2022-02-01-preview\",\n      \"name\": \"[format('{0}/{1}/current', parameters('sqlServerName'), parameters('sqlDatabaseName'))]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('sqlDatabaseName'))]\"\n      ],\n      \"properties\": {\n        \"state\": \"Enabled\"\n      }\n    }\n  ]\n}\n\n```\n\n----------------------------------------\n\nTITLE: Defining Solution Deployment Parameters in Bicep\nDESCRIPTION: This code snippet defines the parameters for deploying the Azure Virtual Network Manager solution. It includes parameters for location, resource group name, connectivity topology, and network group membership type.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/subscription-deployments/microsoft.network/virtual-network-manager-connectivity/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\n@description('Deployment location. Location must support availability zones.')\nparam location string = 'eastus'\n\n@description('The name of the resource group where AVMN will be deployed')\nparam resourceGroupName string = 'rg-avnm-sample'\n\n@description('Defines how spokes will connect to each other and how spokes will connect the hub. Valid values: \"mesh\", \"hubAndSpoke\", \"meshWithHubAndSpoke\"')\nparam connectivityTopology string = 'meshWithHubAndSpoke'\n\n@description('Connectivity group membership type.')\nparam networkGroupMembershipType string = 'static'\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template with Azure CLI\nDESCRIPTION: Command to deploy the Linux VM ARM template to a resource group using Azure CLI.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-simple-linux/GettingStarted-linux.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz group deployment create --name \"name of your deployment\" --resource-group \"resource-group\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: PowerShell - Get Azure AD User Principal ID\nDESCRIPTION: PowerShell command to retrieve the Principal ID (Object ID) for an Azure AD user using their email address. The Object ID is used for role assignments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.authorization/rbac-builtinrole-multiplevms/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzureADUser -mail <email id>\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS for JupyterHub\nDESCRIPTION: Shell commands to enable and configure HTTPS for the JupyterHub server using Let's Encrypt certificates. These commands set up SSL configuration including email contact and domain settings.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jupyter/jupyterhub-classroom/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo tljh-config set https.enabled true\nsudo tljh-config set https.letsencrypt.email <you@example.com>\nsudo tljh-config add-item https.letsencrypt.domains <domain.PublicIP>\nsudo tljh-config reload proxy\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with Azure CLI\nDESCRIPTION: Command to create a new Resource Group in Azure using the Azure CLI, requiring a name and location.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-simple-windows-visualstudio2019/GettingStarted-wsvs.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Identifying Azure Service Bus Resources for Geo-Recovery\nDESCRIPTION: This snippet lists the Azure Resource Manager resource types relevant to the Service Bus Geo-disaster recovery configuration template. It indicates the use of 'Microsoft.ServiceBus/Namespaces' for creating the primary and secondary namespaces and 'disasterRecoveryConfigs' (a sub-resource of Namespaces) for setting up the geo-recovery pairing alias. Both namespaces must be of the premium SKU.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.servicebus/servicebus-create-namespace-geo-recoveryconfiguration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.ServiceBus/Namespaces, disasterRecoveryConfigs`\n```\n\n----------------------------------------\n\nTITLE: Deploying CoScale Agent on VMs in Azure Resource Group\nDESCRIPTION: This bash script deploys the CoScale agent on all VMs within a specified Azure resource group. It requires the Azure CLI to be installed and authenticated.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/coscale/coscale-dev-env/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndeploy-agent.sh\n```\n\n----------------------------------------\n\nTITLE: Identifying Azure Resources and Tags for IoT Edge Deployment\nDESCRIPTION: This snippet lists Azure resource types and relevant tags associated with the ARM template for deploying an IoT Hub and an Edge simulator VM. It includes resource providers like Microsoft.Devices (for IoT Hubs and provisioning services), Microsoft.Network (for network interfaces, security groups, virtual networks, public IPs), and Microsoft.Compute (for virtual machines), indicating the core Azure services involved. Keywords like Azure4Student, IoT, and Intermediate provide context for the template's target audience and domain.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iot-iothub-edgeemulator-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Azure4Student, IoT, Azure IoT Edge, Azure IoT Hub, Intermediate, Microsoft.Devices/IotHubs, Microsoft.Devices/provisioningServices, Microsoft.Network/networkInterfaces, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIpAddresses, Microsoft.Compute/virtualMachines`\n```\n\n----------------------------------------\n\nTITLE: Verifying Replication Status After Failover\nDESCRIPTION: Commands to verify that MySQL replication is properly restored after a failover. This includes checking the replication topology, master status, and slave status.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-replication/README.md#2025-04-23_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n> mysqlrplshow --master=admin:secret@10.0.1.5 --discover-slaves-login=admin:secret\n```\n\n----------------------------------------\n\nTITLE: Deploying Log Analytics Workspace with Solutions in Azure\nDESCRIPTION: This ARM template deploys a Log Analytics workspace with specified solutions and data sources. It includes configuration for workspace properties, solutions, linked services, and data sources. The template also sets up diagnostic settings and resource locks.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.insights/log-analytics-with-datasources-solutions/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags\": \"Microsoft.OperationalInsights/workspaces, Microsoft.OperationsManagement/solutions, Microsoft.OperationalInsights/workspaces/linkedServices, Microsoft.OperationalInsights/workspaces/dataSources, Microsoft.Authorization/locks, Microsoft.Insights/diagnosticSettings\"\n```\n\n----------------------------------------\n\nTITLE: Connecting to Frontend Chef Nodes via SSH\nDESCRIPTION: SSH command to connect to frontend nodes using specific ports (50000-50002) for each frontend instance.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/chef-ha-cluster/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nssh -p 50000 chefadmin@yourhost.youregion.cloudapp.azure.com\n```\n\n----------------------------------------\n\nTITLE: PowerShell - Get Azure AD User Principal ID\nDESCRIPTION: PowerShell command to retrieve the Principal ID (Object ID) for an Azure AD user using their email address. The returned ObjectId is used as the Principal ID for role assignments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.authorization/rbac-builtinrole-virtualmachine/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzureADUser -mail <email id>\n```\n\n----------------------------------------\n\nTITLE: Creating an Instance of 'Microsoft.CustomProviders/associations' - ARM Template - JSON\nDESCRIPTION: This snippet deploys an instance of the 'Microsoft.CustomProviders/associations' resource via an ARM template. It specifies the API version, resource name, and location, with required properties such as 'targetResourceId' determined by parameterization logic, and includes custom input properties. The 'targetResourceId' must point to an existing custom provider or managed application and write access is required. Prerequisites include creating or referencing a valid custom resource provider.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.customproviders/custom-rp-existing-resource-deployments/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\\n    \"type\": \"Microsoft.CustomProviders/associations\",\\n    \"apiVersion\": \"2018-09-01-preview\",\\n    \"name\": \"[parameters('associationName')]\",\\n    \"location\": \"global\",\\n    \"properties\": {\\n        \"targetResourceId\": \"[if(empty(parameters('customResourceProviderId')), reference('customProviderInfrastructureTemplate').outputs.customProviderResourceId.value, parameters('customResourceProviderId'))]\",\\n        \"myCustomInputProperty\": \"myCustomInputValue\",\\n        \"myCustomInputObject\": {\\n            \"Property1\": \"Value1\"\\n        }\\n    }\\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Key Vault Access Policy for Service Principal using PowerShell\nDESCRIPTION: This PowerShell command sets an access policy on the specified Azure Key Vault, granting key permissions ('get', 'unwrapKey', 'wrapKey') to the service principal identified by its object ID. This is required for the Azure Cosmos DB service principal when using CMK.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\nSet-AzKeyVaultAccessPolicy -VaultName <keyvault-name> -ObjectId <object-ID> -PermissionsToKeys get, unwrapKey, wrapKey\n```\n\n----------------------------------------\n\nTITLE: Logging into Azure using PowerShell\nDESCRIPTION: This PowerShell command initiates the interactive login process for Azure. Executing `Connect-AzAccount` prompts the user to authenticate, establishing the necessary context to manage Azure resources within the current PowerShell session. This is a prerequisite step before running scripts that interact with Azure services like Data Factory.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-blob-to-blob-copy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nConnect-AzAccount\n```\n\n----------------------------------------\n\nTITLE: Solidity Function for Setting a Guest Book Entry\nDESCRIPTION: A Solidity function from a guest book contract that sets an entry in a mapping, storing the message associated with the sender's address. This function changes the contract's state.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_10\n\nLANGUAGE: solidity\nCODE:\n```\n...\nmapping (address => string) entryLog;\n\nfunction setEntry(string guestBookEntry) {\n  entryLog[msg.sender] = guestBookEntry;\n}\n...\n```\n\n----------------------------------------\n\nTITLE: Displaying Throughput Measurement Results in PowerShell\nDESCRIPTION: This PowerShell code snippet shows the output format for the network throughput measurements between the VMs. It displays the throughput in MB/s, Mbps, and buffers/s.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vm-to-vm-throughput-meter-multithreaded/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nOutputsString           :\n                          Name             Type                       Value\n                          ===============  =========================  ==========\n                          throughput MB/s  String                     229.453\n                          throughput mbps  String                     1924.787\n                          throughput buffers/s  String                     1835.620\n```\n\n----------------------------------------\n\nTITLE: Logging in to Azure CLI\nDESCRIPTION: Command for authenticating with Azure CLI. This initiates a browser-based authentication flow to log in to your Azure account.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/datascience/vm-ubuntu-DSVM-GPU-or-CPU/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Application Gateway Tags\nDESCRIPTION: Tag configuration for Azure Application Gateway deployment template, specifying the Microsoft.Network resources being created.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/virtualNetworks, Microsoft.Network/applicationGateways\n```\n\n----------------------------------------\n\nTITLE: Assigning Contributor Role to Service Principal using PowerShell\nDESCRIPTION: This PowerShell command creates a new role assignment, granting the 'Contributor' role definition to a specified service principal (identified by its object ID) at the scope of a given Azure subscription ID. This is used to give the Azure Machine Learning service principal the necessary permissions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzRoleAssignment --ObjectId <object-ID> --RoleDefinitionName \"Contributor\" -Scope /subscriptions/<subscription-ID>\n```\n\n----------------------------------------\n\nTITLE: Running Sysbench CPU Test Manually\nDESCRIPTION: A shell command to manually run the sysbench CPU performance test on the deployed VM. This command tests CPU performance using 10 threads and a maximum prime number of 20000.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vm-cpu-sysbench-meter/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsysbench --test=cpu --num-threads=10 --cpu-max-prime=20000 run\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration\nDESCRIPTION: Resource tags configuration showing the managed services, components and technologies used in the template deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-flexible-orchestration-quickstart/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nManaged Disks, Azure VMs, VMSS, Microsoft.Resources/deployments, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers, Microsoft.Network/loadBalancers/inboundNatRules, Microsoft.Compute/virtualMachineScaleSets\n```\n\n----------------------------------------\n\nTITLE: Listing Deployed Azure Resource Types\nDESCRIPTION: Lists the Azure resource provider types that are created or managed by this ARM/Bicep template. This includes network security groups, virtual networks, Databricks workspaces, private endpoints, private DNS zones, and related network configurations necessary for the secure deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-all-in-one-template-for-vnet-injection-privateendpoint-default-storage-firewall/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Databricks/workspaces, Microsoft.Network/privateEndpoints, Microsoft.Network/privateDnsZones, Microsoft.Network/privateDnsZones/virtualNetworkLinks, Microsoft.Network/privateEndpoints/privateDnsZoneGroups`\n```\n\n----------------------------------------\n\nTITLE: PowerShell Certificate Data Conversion\nDESCRIPTION: PowerShell command to convert a PFX certificate file to Base64 string format for use in the Application Gateway configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-public-ip-ssl-offload/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n[System.Convert]::ToBase64String([System.IO.File]::ReadAllBytes(\"path to pfx file\"))\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Configuration in ARM Template\nDESCRIPTION: Resource tags definition for Azure deployment template specifying various Microsoft resources including Web Services, CDN profiles, and their configurations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-premium-app-service-private-link/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Resources/deployments, Microsoft.Web/serverfarms, Microsoft.Web/sites, Microsoft.Cdn/profiles, Microsoft.Cdn/profiles/afdEndpoints, Microsoft.Cdn/profiles/originGroups, Microsoft.Cdn/profiles/originGroups/origins, Microsoft.Cdn/profiles/afdEndpoints/routes\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Load Balancers Complex Variable - PowerShell\nDESCRIPTION: PowerShell script to create a complex automation variable for configuring multiple load balancers. Maps VM GUIDs to load balancer names and resource groups.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/asr-automation-recovery/README.md#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n$InputObject = @{\"6949b3a9-ae82-5e90-882c-30e48dffdcd8\"=@{\"ResourceGroupName\"=\"knlb\";\"LBName\"=\"knextlb\"};\"6dce5d61-2416-546c-9bcd-c1bc79a5a678\"=@{\"ResourceGroupName\"=\"knlb\";\"LBName\"=\"knintlb\"}}\n$RPDetails = New-Object -TypeName PSObject -Property $InputObject  | ConvertTo-Json\nNew-AzureRmAutomationVariable -Name \"#RecoveryPlanName\" -ResourceGroupName \"#AutomationAccountResourceGroup\" -AutomationAccountName \"#AutomationAccountName\" -Value $RPDetails -Encrypted $false\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags definition for the Azure deployment template, specifying the types of resources created including networking, compute, and encryption components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/encrypt-create-new-vm-gallery-image/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/VirtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, SystemAssigned, Microsoft.KeyVault/vaults, Microsoft.Compute/virtualMachines/extensions, AzureDiskEncryption\n```\n\n----------------------------------------\n\nTITLE: Applying Tags to Azure Resources in ARM Template\nDESCRIPTION: This snippet demonstrates how to apply the predefined tags to an Azure resource (in this case, a Storage Account) within the ARM template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-tags/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"Microsoft.Storage/storageAccounts\",\n  \"apiVersion\": \"2021-04-01\",\n  \"name\": \"[variables('storageAccountName')]\",\n  \"location\": \"[parameters('location')]\",\n  \"tags\": \"[variables('tag')]\",\n  \"sku\": {\n    \"name\": \"Standard_LRS\"\n  },\n  \"kind\": \"Storage\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Event Hub and Consumer Group in Azure with ARM Template - JSON\nDESCRIPTION: This snippet provides the configuration for creating an Event Hub and an associated consumer group within an existing Event Hubs namespace in Azure, using an ARM template. Dependencies include the prior creation of the Event Hubs namespace. Key parameters control names and settings for the Event Hub and the consumer group. Expected outputs are the provisioned Event Hub and the associated consumer group for processing event stream data; the snippet should be included as part of a complete ARM template deployment with prerequisite resources defined.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.eventhub/eventhubs-create-namespace-and-enable-inflate/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.EventHub/namespaces/eventhubs\",\n      \"apiVersion\": \"2017-04-01\",\n      \"name\": \"[concat(parameters('namespaceName'), \"/\", 'eventhub1')]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.EventHub/namespaces', parameters('namespaceName'))]\"\n      ],\n      \"properties\": {\n        \"messageRetentionInDays\": 1,\n        \"partitionCount\": 2\n      }\n    },\n    {\n      \"type\": \"Microsoft.EventHub/namespaces/eventhubs/consumergroups\",\n      \"apiVersion\": \"2017-04-01\",\n      \"name\": \"[concat(parameters('namespaceName'), '/eventhub1/', 'consumergroup1')]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaceName'), 'eventhub1')]\"\n      ],\n      \"properties\": {}\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating User-Assigned Managed Identity using Azure CLI (Bash)\nDESCRIPTION: This Bash script utilizes the Azure CLI to create a new user-assigned managed identity. It depends on the Azure CLI and the `jq` utility for JSON parsing. The script sets variables for the identity name, resource group, and location, executes `az identity create`, and then uses `jq` to extract the Principal ID (Object ID) from the JSON output.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.resources/deployment-script-azcli-graph-azure-ad/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmanagedIdentityName='MyIdentity'\nresourceGroupName='MyResourceGroup'\nlocation='westus'\n\nuserAssignedIdentity=$(az identity create \\\n  --name $managedIdentityName \\\n  --resource-group $resourceGroupName \\\n  --location $location)\nmanagedIdentityObjectId=$(jq -r '.principalId' <<< \"$userAssignedIdentity\")\n```\n\n----------------------------------------\n\nTITLE: Viewing JBoss EAP Installation Logs\nDESCRIPTION: Command to view the JBoss EAP installation log file for troubleshooting deployment issues.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-standalone-rhel/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmore jbosseap.install.log\n```\n\n----------------------------------------\n\nTITLE: Generating Azure Service Principal with Custom Roles\nDESCRIPTION: Creates an Azure Service Principal with Contributor and User Access Administrator roles using a custom script. The resulting ClientID and ClientSecret are needed for the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/openshift/openshift-container-platform/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz login\nscripts/createServicePrincipal.sh -r \"Contributor,User Access Administrator\"\n```\n\n----------------------------------------\n\nTITLE: Defining Parameters in Bicep for Azure Resource Manager Templates\nDESCRIPTION: This snippet demonstrates how to define parameters in Bicep for an Azure Resource Manager template. It includes examples of string and integer parameters with descriptions, default values, and constraints.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\n@description('Name of the storageAccount')\nparam storageAccountName string = 'storage${uniqueString(resourceGroup().id)}'\n\n@description('Number of VMs')\n@min(2)\n@max(8)\nparam vmCount int = 2\n```\n\n----------------------------------------\n\nTITLE: Logging in to Azure using PowerShell\nDESCRIPTION: This snippet demonstrates how to authenticate an Azure session using PowerShell, which is a prerequisite for performing any subsequent Azure Resource Manager (ARM) operations. No external dependencies are needed besides Azure PowerShell modules. The command opens an authentication prompt and initializes the session for further deployment or monitoring tasks.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-transform-using-spark/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nLogin-AzureRmAccount\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Application Gateway Log Analyzer\nDESCRIPTION: Markdown code for deployment buttons to Azure, Azure US Gov, and ARM template visualization.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/application-gateway-logviewer-goaccess/README.md#2025-04-23_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fdemos%2Fapplication-gateway-logviewer-goaccess%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fdemos%2Fapplication-gateway-logviewer-goaccess%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fdemos%2Fapplication-gateway-logviewer-goaccess%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Creating Scheduled Task to Restart S2DMon Service in PowerShell\nDESCRIPTION: This PowerShell script creates a scheduled task that restarts the S2DMon service every hour. It's used as a workaround for an unhandled exception issue where the service may stop running.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/s2d-oms-mgmt-solution/README.md#2025-04-23_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\n$action = New-ScheduledTaskAction -Execute 'Powershell.exe' `\n                                  -Argument '-NoProfile -WindowStyle Hidden -command \"& {Restart-Service s2dmon}\"'\n$trigger =  New-ScheduledTaskTrigger -RepetitionInterval (New-TimeSpan -Minutes 60) `\n                                     -At (get-date) `\n                                     -Once\n$STPrin = New-ScheduledTaskPrincipal -UserId \"NT AUTHORITY\\SYSTEM\" `\n                                     -LogonType ServiceAccount `\n                                     -RunLevel Highest\nRegister-ScheduledTask -Action $action `\n                       -Trigger $trigger `\n                       -TaskName \"S2DMonRestart\" `\n                       -Description \"Restart S2DMon service hourly\" `\n                       -Principal $STPrin\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources using Bash\nDESCRIPTION: Bash script for deploying Azure resources requiring node, npm, jq, and azure-cli. Deploys resources to a specified location from a template folder.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md#2025-04-23_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\n./az-group-deploy.sh -a [foldername] -l eastus\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Command for Setting Subscription\nDESCRIPTION: This command sets the active Azure subscription for subsequent Azure CLI commands. Replace 'your subscription id' with the actual subscription ID.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-github-deploy/GettingStarted-WebGit.md#2025-04-23_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Chef Automate HA Template\nDESCRIPTION: This command deploys the ARM template for Chef Automate HA using the parameters defined in the parameters file. The deployment creates all the necessary resources including VMs, networking, and Key Vault components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/chef-automate-ha/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz group deployment create --template-file './azuredeploy.json' --parameters '@./azuredeploy.parameters.json' -g chef-automate-ha -n deploy\n```\n\n----------------------------------------\n\nTITLE: Azure VM Configuration Table for SAP NetWeaver\nDESCRIPTION: Detailed configuration table showing VM sizes and disk configurations for different SAP workload scenarios, including both HA and non-HA setups. Configurations range from Demo environments to X-Large deployments supporting up to 250,000 SAPS.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-3-tier-marketplace-image-multi-sid-apps-md/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<table>\n\t<tr>\n\t\t<th>Size</th>\n\t\t<th>HA</th>\n\t\t<th>Non-HA</th>\n\t</tr>\n\t<tr>\n\t\t<td>Demo</td>\n\t\t<td>2xDS2_v2 DI (1xP10)</td>\n\t\t<td>1xDS2_v2 DI (1xP10)</td>\n\t</tr>\n\t<tr>\n\t\t<td>Small < 30.000 SAPS</td>\n\t\t<td>2xDS2_v2 DI (1xP10)</td>\n\t\t<td>1xDS2_v2 DI (1xP10)</td>\n\t</tr>\n\t<tr>\n\t\t<td>Medium < 70.000 SAPS</td>\n\t\t<td>4xDS13_v2 DI (1xP10)</td>\n\t\t<td>4xDS13_v2 DI (1xP10)</td>\n\t</tr>\n\t<tr>\n\t\t<td>Large < 180.000 SAPS</td>\n\t\t<td>6xDS14_v2 DI (1xP10)</td>\n\t\t<td>6xDS14_v2 DI (1xP10)</td>\n\t</tr>\n\t<tr>\n\t\t<td>X-Large < 250.000 SAPS</td>\n\t\t<td>10xDS14_v2 DI (1xP10)</td>\n\t\t<td>10xDS14_v2 DI (1xP10)</td>\n\t</tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Invoking a Custom Action via ARM API (Shell)\nDESCRIPTION: This example demonstrates the REST API endpoint format for invoking the `ping` action defined by an Azure Custom Resource Provider. Actions only support the POST method. Replace placeholders with actual values for subscription, resource group, and custom resource provider name. The `api-version` is required.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.customproviders/custom-rp-with-function/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nPOST\nhttps://management.azure.com/subscriptions/{subscriptionid}/resourceGroups/{resourcegroup}/providers/Microsoft.CustomProviders/resourceProviders/{customrpname}/ping?api-version=2018-09-01-preview\n```\n\n----------------------------------------\n\nTITLE: Setting up SSH Tunnel for Jenkins using PuTTY\nDESCRIPTION: This snippet shows an alternative method to set up an SSH tunnel using PuTTY on Windows. It forwards the local port 8080 to the Jenkins server for secure access.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-vmss/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nputty -ssh -L 127.0.0.1:8080:localhost:8080 username@msvmsstest004.eastus.cloudapp.azure.com\n```\n\n----------------------------------------\n\nTITLE: Azure Subscription Selection\nDESCRIPTION: Command to set the active Azure subscription for deployment using subscription ID.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cognitiveservices/cognitive-services-universalkey/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition\nDESCRIPTION: Defines the resource tags for Azure Bastion deployment, including basic tag for bastion identification and resource-specific Azure service tags.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azure-bastion-nsg/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: ``bastion``\n\n`Tags: Microsoft.Network/publicIpAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/virtualNetworks/subnets, Microsoft.Network/bastionHosts`\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resource Group using Bash Script (Bash/Azure CLI)\nDESCRIPTION: Shows how to deploy the Azure Data Factory ARM template using the `azure-group-deploy.sh` bash script, typically used with the Azure CLI. The command requires specifying the artifact directory containing the template files (`-a`) and the target Azure location (`-l`).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-blob-to-sql-copy-stored-proc/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nazure-group-deploy.sh -a 101-data-factory-blob-to-sql-copy-stored-proc -l eastus\n```\n\n----------------------------------------\n\nTITLE: Configuring NAT Rules for VM Scale Set Connectivity\nDESCRIPTION: This code snippet shows how inbound NAT rules are configured for connecting to individual VMs in the scale set. It demonstrates the port mapping scheme where connections to specific ports on the public IP address are routed to corresponding VMs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vmss-datascience/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nSSH/RDP to the ip/dns address port 50000 to connect to VM#0\nSSH/RDP to the ip/dns address port 50001 to connect to VM#1\netc..\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Game Developer VM using ARM Template\nDESCRIPTION: This code snippet provides a button to deploy the Azure Game Developer VM using an ARM template. It links to the Azure portal deployment page with the template URI encoded in the URL.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/azure-gamedev/gamedev-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fazure-gamedev%2Fgamedev-vm%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Tagging Dashboard Parts with Azure Resource Manager - JSON\nDESCRIPTION: This snippet demonstrates the use of specific resource type tags for defining Azure dashboard components in an ARM template. It utilizes the Microsoft.Portal/dashboards resource provider and references several dashboard part extensions, such as ResourceGroupMapPinnedPart and MarkdownPart, to compose the dashboard layout. These tags help categorize resources, configure dashboard widgets, and define time range visualization types. It requires Azure Resource Manager and portal dashboard capabilities, with tags serving as metadata for resource discovery and customization.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.portal/default-shared-dashboard/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Portal/dashboards, Extension/HubsExtension/PartType/ResourceGroupMapPinnedPart, Extension[azure]/HubsExtension/PartType/MarkdownPart, MsPortalFx.Composition.Configuration.ValueTypes.TimeRange\"\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types Deployed by Template\nDESCRIPTION: This line lists the Azure Resource Manager (ARM) resource types that are created by the associated template, typically used for categorization or searching within template repositories. It includes types for the Cosmos DB database account, the SQL database within the account, and the container within the database.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-sql-autoscale/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.DocumentDB/databaseAccounts, Microsoft.DocumentDB/databaseAccounts/sqlDatabases, Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers`\n```\n\n----------------------------------------\n\nTITLE: Note About Storage Account Creation for Boot Diagnostics in Azure\nDESCRIPTION: Important note about the template creating an additional Standard_LRS storage account for enabling boot diagnostics each time it is executed, with recommendation to delete the storage account when the VM is deleted to avoid storage account limits.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-os-disk-and-data-disk-existing-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nNOTE\n\nThis template will create an additional Standard_LRS storage account for enabling boot diagnostics each time you execute this template. To avoid running into storage account limits, it's best to delete the storage account when the VM is deleted.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Key URI from Key Vault with Azure CLI\nDESCRIPTION: This Azure CLI command retrieves the URI of a specific encryption key from the Key Vault, which is needed for the cmk_keyvault_key_uri template parameter.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk-service-side-encryption/README.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault key show --vault-name <keyvault-name> --name <key-name>\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources with ARM Template\nDESCRIPTION: This ARM template deploys a Storage account, API connection, and Logic App. It dynamically retrieves the Storage account's primary key to create the API connection, which is then used in the Logic App to poll for blob changes.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/arm-template-retrieve-azure-storage-access-keys/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\n  \"arm\": \"\",\n  \"storage\": \"\",\n  \"security\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Windows Custom Script Extension Output JSON\nDESCRIPTION: Sample output structure from a Windows VM Custom Script Extension execution, showing both stdout and stderr outputs along with component status information.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-custom-script-output/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"cse-windows\",\n    \"type\": \"Microsoft.Compute.CustomScriptExtension\",\n    \"typeHandlerVersion\": \"1.9.1\",\n    \"substatuses\": [\n        {\n            \"code\": \"ComponentStatus/StdOut/succeeded\",\n            \"level\": \"Info\",\n            \"displayStatus\": \"Provisioning succeeded\",\n            \"message\": \"#DATA#\\\\nThis is the droid you have been looking for...\\\\n#DATA#\"\n        },\n        {\n            \"code\": \"ComponentStatus/StdErr/succeeded\",\n            \"level\": \"Info\",\n            \"displayStatus\": \"Provisioning succeeded\",\n            \"message\": \"\"\n        }\n    ],\n    \"statuses\": [\n        {\n            \"code\": \"ProvisioningState/succeeded\",\n            \"level\": \"Info\",\n            \"displayStatus\": \"Provisioning succeeded\",\n            \"message\": \"Finished executing command\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Previewing Azure VM DR Deployment with Bicep using Azure CLI What-If\nDESCRIPTION: This Azure CLI command simulates the deployment of the Azure VM disaster recovery resources defined in the `main.bicep` template using parameters from `azuredeploy.parameters.json`. It targets a specific resource group and uses the `--what-if` flag to show the potential impact without making any actual changes. Requires Azure CLI, the specified Bicep and parameter files, and execution from the correct directory.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-vm-replication-and-disaster-recovery/README.md#2025-04-23_snippet_1\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create --resource-group 'deployment resource group name' --template-file .\\main.bicep --parameters .\\azuredeploy.parameters.json --what-if\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources with Custom Certificates\nDESCRIPTION: This Azure CLI command deploys the Azure resources using a Bicep template and parameter file. It reads certificate files and passwords directly from the file system, incorporating them into the deployment parameters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/private-webapp-with-app-gateway-and-apim/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\naz deployment group create \\\n    --resource-group <RESOURCE_GROUP_NAME> \\\n    --template-file main.bicep \\\n    --parameters azuredeploy.parameters.json \\\n      applicationGatewayTrustedRootBase64EncodedCertificate=$(cat ./scripts/.certs/rootCA.crt.txt) \\\n      apiManagementPortalCustomHostnameBase64EncodedCertificate=$(cat ./scripts/.certs/domain.pfx.txt) \\\n      apiManagementProxyCustomHostnameBase64EncodedCertificate=$(cat ./scripts/.certs/domain.pfx.txt) \\\n      apiManagementManagementCustomHostnameBase64EncodedCertificate=$(cat ./scripts/.certs/domain.pfx.txt) \\\n      apiManagementPortalCertificatePassword=$(cat ./scripts/.certs/pass) \\\n      apiManagementProxyCertificatePassword=$(cat ./scripts/.certs/pass) \\\n      apiManagementManagementCertificatePassword=$(cat ./scripts/.certs/pass)\n```\n\n----------------------------------------\n\nTITLE: Finding Azure Machine Learning Service Principal with Azure CLI\nDESCRIPTION: This Azure CLI command lists the display name and object ID of the Azure Machine Learning service principal, which is needed for role assignment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk-service-side-encryption/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz ad sp list --display-name \"Azure Machine Learning\" --query '[].[appDisplayName,objectId]' --output tsv\n```\n\n----------------------------------------\n\nTITLE: Creating Azure TemplateSpec Resource Using ARM Template - JSON\nDESCRIPTION: This snippet (referenced by the 'prereqs' folder) shows how to create a TemplateSpec version via an Azure Resource Manager (ARM) template in JSON format. Dependencies include access to a target Azure subscription, permissions to deploy resources at the resource group level, and the Azure Resource Manager API. Parameters must include the TemplateSpec name and version. The template will provision a versioned TemplateSpec resource in the specified resource group, making it available for later deployments. The operation is typically performed a few times during resource authoring and must be run before subsequent deployments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.resources/templatespec-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // Example: Creating a TemplateSpec version resource\n  \"type\": \"Microsoft.Resources/templateSpecs/versions\",\n  \"apiVersion\": \"2021-03-01\",\n  \"name\": \"[concat(parameters('templateSpecName'), '/', parameters('version'))]\",\n  \"location\": \"[parameters('location')]\",\n  \"properties\": {\n    \"description\": \"Sample TemplateSpec definition.\",\n    \"mainTemplate\": {\n      // The template to be provisioned by TemplateSpec\n    }\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Storage Container using Azure CLI (Bash)\nDESCRIPTION: This command uses the Azure CLI (`azure storage container create`) to create a blob container within an existing Azure Storage account. It requires the container name (`--container [containername]`), public access level (`-p Off`), the storage account name (`-a [accountname]`), and the storage account key (`-k [key]`). The container will hold the configuration script.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nazure storage container create --container [containername] -p Off -a [accountname] -k [key]\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Group with Lock and RBAC in ARM Template\nDESCRIPTION: This ARM template snippet defines the creation of a resource group, applies a DoNotDelete lock, and assigns the contributor role to a specified principal. It uses nested deployments for resource group creation and role assignment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/subscription-deployments/create-rg-lock-role-assignment/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"rgName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the resourceGroup to create\"\n      }\n    },\n    \"rgLocation\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Location for the resourceGroup\"\n      }\n    },\n    \"principalId\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"principalId if the user that will be given contributor access to the resourceGroup\"\n      }\n    },\n    \"roleNameGuid\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"A new GUID used to identify the role assignment\"\n      }\n    }\n  },\n  \"variables\": {\n    \"contributorRoleDefinitionId\": \"[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]\"\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Resources/resourceGroups\",\n      \"apiVersion\": \"2021-04-01\",\n      \"name\": \"[parameters('rgName')]\",\n      \"location\": \"[parameters('rgLocation')]\",\n      \"properties\": {}\n    },\n    {\n      \"type\": \"Microsoft.Resources/deployments\",\n      \"apiVersion\": \"2021-04-01\",\n      \"name\": \"[format('lock-{0}', parameters('rgName'))]\",\n      \"resourceGroup\": \"[parameters('rgName')]\",\n      \"properties\": {\n        \"expressionEvaluationOptions\": {\n          \"scope\": \"inner\"\n        },\n        \"mode\": \"Incremental\",\n        \"template\": {\n          \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n          \"contentVersion\": \"1.0.0.0\",\n          \"resources\": [\n            {\n              \"type\": \"Microsoft.Authorization/locks\",\n              \"apiVersion\": \"2020-05-01\",\n              \"name\": \"DontDelete\",\n              \"properties\": {\n                \"level\": \"CanNotDelete\",\n                \"notes\": \"Prevent deletion of the resourceGroup\"\n              }\n            }\n          ]\n        }\n      },\n      \"dependsOn\": [\n        \"[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('rgName'))]\"\n      ]\n    },\n    {\n      \"type\": \"Microsoft.Resources/deployments\",\n      \"apiVersion\": \"2021-04-01\",\n      \"name\": \"[format('rbac-{0}', parameters('rgName'))]\",\n      \"resourceGroup\": \"[parameters('rgName')]\",\n      \"properties\": {\n        \"expressionEvaluationOptions\": {\n          \"scope\": \"inner\"\n        },\n        \"mode\": \"Incremental\",\n        \"template\": {\n          \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n          \"contentVersion\": \"1.0.0.0\",\n          \"parameters\": {\n            \"principalId\": {\n              \"type\": \"string\"\n            },\n            \"roleNameGuid\": {\n              \"type\": \"string\"\n            },\n            \"contributorRoleDefinitionId\": {\n              \"type\": \"string\"\n            }\n          },\n          \"resources\": [\n            {\n              \"type\": \"Microsoft.Authorization/roleAssignments\",\n              \"apiVersion\": \"2020-10-01-preview\",\n              \"name\": \"[guid(parameters('roleNameGuid'))]\",\n              \"properties\": {\n                \"roleDefinitionId\": \"[parameters('contributorRoleDefinitionId')]\",\n                \"principalId\": \"[parameters('principalId')]\",\n                \"principalType\": \"User\"\n              }\n            }\n          ]\n        },\n        \"parameters\": {\n          \"principalId\": {\n            \"value\": \"[parameters('principalId')]\"\n          },\n          \"roleNameGuid\": {\n            \"value\": \"[parameters('roleNameGuid')]\"\n          },\n          \"contributorRoleDefinitionId\": {\n            \"value\": \"[variables('contributorRoleDefinitionId')]\"\n          }\n        }\n      },\n      \"dependsOn\": [\n        \"[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('rgName'))]\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying HDInsight Cluster with Linked Storage in Azure (JSON)\nDESCRIPTION: This Azure Resource Manager template deploys an HDInsight cluster with a new default storage account and links an existing storage account. It includes parameters for cluster configuration, storage accounts, and networking settings. The template supports secure transfer enabled storage accounts for HDInsight version 3.6 or newer.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-linux-with-existing-linked-storage-account/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\"Microsoft.Storage/storageAccounts\": \"\", \"Microsoft.HDInsight/clusters\": \"\"}\n```\n\n----------------------------------------\n\nTITLE: Defining SAP NetWeaver VM sizes and storage configurations in JSON\nDESCRIPTION: This JSON snippet defines the VM sizes and storage configurations for different SAP NetWeaver deployment sizes. It includes options for both HA and non-HA setups, covering demo, small, medium, large, and x-large installations based on SAPS requirements.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-3-tier-user-image-md/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"Size\": {\n\t\t\"Demo\": {\n\t\t\t\"HA\": \"2xDS12_v2 DB Server (1xP10) + 2xDS2_v2 ASCS/SCS (1xP10) + 2xDS2_v2 DI (1xP10)\",\n\t\t\t\"Non-HA\": \"1xDS12_v2 DB Server (1xP10) + 1xDS2_v2 ASCS/SCS (1xP10) + 1xDS2_v2 DI (1xP10)\"\n\t\t},\n\t\t\"Small < 30.000 SAPS\": {\n\t\t\t\"HA\": \"2xDS13_v2 DB Server (4xP20 1xP20) + 2xDS11_v2 ASCS/SCS (1xP10) + 2xDS13_v2 DI (1xP10)\",\n\t\t\t\"Non-HA\": \"1xDS13_v2 DB Server (4xP20 1xP20) + 1xDS11_v2 ASCS/SCS (1xP10) + 1xDS13_v2 DI (1xP10)\"\n\t\t},\n\t\t\"Medium < 70.000 SAPS\": {\n\t\t\t\"HA\": \"2xDS14_v2 DB Server (6xP20 1xP20) + 2xDS11_v2 ASCS/SCS (1xP10) + 4xDS13_v2 DI (1xP10)\",\n\t\t\t\"Non-HA\": \"1xDS14_v2 DB Server (6xP20 1xP20) + 1xDS11_v2 ASCS/SCS (1xP10) + 4xDS13_v2 DI (1xP10)\"\n\t\t},\n\t\t\"Large < 180.000 SAPS\": {\n\t\t\t\"HA\": \"2xGS4 DB Server (5xP30 1xP20) + 2xDS11_v2 ASCS/SCS (1xP10) + 6xDS14_v2 DI (1xP10)\",\n\t\t\t\"Non-HA\": \"1xGS4 DB Server (5xP30 1xP20) + 1xDS11_v2 ASCS/SCS (1xP10) + 6xDS14_v2 DI (1xP10)\"\n\t\t},\n\t\t\"X-Large < 250.000 SAPS\": {\n\t\t\t\"HA\": \"2xGS5 DB Server (6xP30 1xP30) + 2xDS11_v2 ASCS/SCS (1xP10) + 10xDS14_v2 DI (1xP10)\",\n\t\t\t\"Non-HA\": \"1xGS5 DB Server (6xP30 1xP30) + 1xDS11_v2 ASCS/SCS (1xP10) + 10xDS14_v2 DI (1xP10)\"\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types Deployed by ARM Template\nDESCRIPTION: Lists the specific Azure resource provider types that are created or managed when deploying the associated Azure Resource Manager (ARM) template for the HA Data Management Gateway setup. This serves as metadata indicating the scope of the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/mutiple-vms-with-data-management-gateway/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Resources/deployments, Microsoft.DataFactory/dataFactories/gateways, Microsoft.Network/networkSecurityGroups, Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, extensions, CustomScriptExtension`\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Tags for SQL VM UltraSSD Template\nDESCRIPTION: This snippet lists the Azure resource types and keywords associated with the ARM template for deploying a performance-optimized SQL Server VM using UltraSSD. These tags help categorize the template and identify the Azure services involved, such as Compute (disks, virtualMachines), Network (publicIpAddresses, networkSecurityGroups, networkInterfaces, virtualNetworks), and SqlVirtualMachine.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.sqlvirtualmachine/sql-vm-new-storage-ultrassd/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Azure, SQL, VirtualMachine, Performance, StorageConfiguration, UltraSSD, Microsoft.Compute/disks, Microsoft.Network/publicIpAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.SqlVirtualMachine/SqlVirtualMachines, Microsoft.Network/virtualNetworks`\n```\n\n----------------------------------------\n\nTITLE: Deploying EPiServerCMS Resources in Azure using ARM Template\nDESCRIPTION: This ARM template creates the required Azure resources for EpiServerCMS deployment, including a web app, SQL database, storage account, and Service Bus. It configures the web app with necessary connection strings and settings for EpiServerCMS.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/episerver/episerver-cms-in-azure/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": { },\n  \"variables\": { },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Web/serverfarms\",\n      \"apiVersion\": \"2020-06-01\",\n      \"name\": \"[parameters('hostingPlanName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"[parameters('sku')]\"\n      }\n    },\n    {\n      \"type\": \"Microsoft.Web/sites\",\n      \"apiVersion\": \"2020-06-01\",\n      \"name\": \"[parameters('webSiteName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]\"\n      ],\n      \"properties\": {\n        \"serverFarmId\": \"[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]\"\n      },\n      \"resources\": [\n        {\n          \"type\": \"config\",\n          \"apiVersion\": \"2020-06-01\",\n          \"name\": \"connectionstrings\",\n          \"dependsOn\": [\n            \"[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]\"\n          ],\n          \"properties\": {\n            \"EPiServerDB\": {\n              \"value\": \"[concat('Server=tcp:', reference(resourceId('Microsoft.Sql/servers', parameters('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('administratorLogin'), '@', parameters('sqlserverName'), ';Password=', parameters('administratorLoginPassword'), ';')]\",\n              \"type\": \"SQLAzure\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts\",\n      \"apiVersion\": \"2021-04-01\",\n      \"name\": \"[parameters('storageName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"Standard_LRS\"\n      },\n      \"kind\": \"StorageV2\"\n    },\n    {\n      \"type\": \"Microsoft.Sql/servers\",\n      \"apiVersion\": \"2020-02-02-preview\",\n      \"name\": \"[parameters('sqlserverName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"administratorLogin\": \"[parameters('administratorLogin')]\",\n        \"administratorLoginPassword\": \"[parameters('administratorLoginPassword')]\"\n      },\n      \"resources\": [\n        {\n          \"type\": \"firewallrules\",\n          \"apiVersion\": \"2020-02-02-preview\",\n          \"name\": \"AllowAllWindowsAzureIps\",\n          \"location\": \"[parameters('location')]\",\n          \"dependsOn\": [\n            \"[resourceId('Microsoft.Sql/servers', parameters('sqlserverName'))]\"\n          ],\n          \"properties\": {\n            \"startIpAddress\": \"0.0.0.0\",\n            \"endIpAddress\": \"0.0.0.0\"\n          }\n        },\n        {\n          \"type\": \"databases\",\n          \"apiVersion\": \"2020-02-02-preview\",\n          \"name\": \"[parameters('databaseName')]\",\n          \"location\": \"[parameters('location')]\",\n          \"dependsOn\": [\n            \"[resourceId('Microsoft.Sql/servers', parameters('sqlserverName'))]\"\n          ],\n          \"sku\": {\n            \"name\": \"S0\"\n          }\n        }\n      ]\n    },\n    {\n      \"type\": \"Microsoft.ServiceBus/namespaces\",\n      \"apiVersion\": \"2021-06-01-preview\",\n      \"name\": \"[parameters('serviceBusNamespaceName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"Standard\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Resource Group using Azure CLI\nDESCRIPTION: Creates a new Azure Resource Group, which acts as a logical container for Azure resources. Requires specifying a unique name for the resource group (replace \"resource-group\") and the Azure location (region) where it should be created (replace \"your location\").\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-all-in-one-template-for-vnet-injection/GettingStarted.md#2025-04-23_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Connecting to MongoDB Router Using Mongo Shell\nDESCRIPTION: Command to connect to the MongoDB router server using the mongo shell and authenticate with the configured username and password to verify the sharding cluster setup.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/airflow/mongodb-sharded-on-centos/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$mongo -u \"<mongouser>\" -p \"<mongopassword>\" \"admin\" --host <Mongos fqdn>\n\ndb.runCommand( { listshards : 1 } )\n\nexit\n```\n\n----------------------------------------\n\nTITLE: Deploying Prerequisites with Azure CLI\nDESCRIPTION: Uses az-group-deploy.sh script to deploy prerequisite resources including an App Service Domain to get the DNSZone and DNSZoneRG needed for the main deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/openshift/openshift-container-platform/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz-group-deploy.sh -a prereqs -f prereqs/prereq.azuredeploy.json -e prereqs/prereq.azuredeploy.parameters.json -l eastus\n```\n\n----------------------------------------\n\nTITLE: Stopping Ethereum Mining with Web3.js\nDESCRIPTION: Stops the Ethereum mining process that was previously started. This is typically done after the desired transactions have been mined to save computational resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nweb3.miner.stop()\n```\n\n----------------------------------------\n\nTITLE: Applying a Network Security Group to an Existing Subnet with ARM Template - JSON\nDESCRIPTION: This code sample, indicated by the tags, leverages a JSON-based Azure Resource Manager (ARM) template to create a new Network Security Group (NSG) and associate it with an existing Azure virtual network subnet. It requires the presence of an existing virtual network and subnet, and it uses the 'Microsoft.Network/networkSecurityGroups', 'Microsoft.Network/virtualNetworks/subnets', and related resource types. Parameters for existing virtual network and subnet names, and the intended NSG configuration, are typically required. The template enables secure, automated deployment and is limited to use within Azure environments that support ARM templates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/nsg-add-to-existing-subnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/networkSecurityGroups, Microsoft.Resources/deployments, Microsoft.Network/virtualNetworks/subnets, Microsoft.Network/virtualNetworks\"\n```\n\n----------------------------------------\n\nTITLE: Querying VM Count by OS Type with Azure Resource Graph\nDESCRIPTION: This Kusto query counts all virtual machines and summarizes them by operating system type. It filters for Microsoft.Compute/virtualMachines resources and groups the results by the OS type of the OS disk.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/resourcegraph-sharedquery-countos/README.md#2025-04-23_snippet_0\n\nLANGUAGE: kusto\nCODE:\n```\nResources\n| where type =~ 'Microsoft.Compute/virtualMachines'\n| summarize count() by tostring(properties.storageProfile.osDisk.osType)\n```\n\n----------------------------------------\n\nTITLE: Running a Sample DNX Application on Ubuntu\nDESCRIPTION: Commands for navigating to the sample console application directory and executing it using the DNX runtime. This demonstrates the successful installation of the .NET execution environment on Linux.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/dnx/dnx-on-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd sampleConsoleApp\ndnx run\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Actions in Azure Custom Provider (JSON)\nDESCRIPTION: This JSON snippet shows the `actions` property within an Azure Custom Resource Provider definition. It defines a custom action named `ping` with `Proxy` routing, forwarding POST requests to the specified endpoint. The endpoint URL is constructed dynamically using the function app's hostname and includes `{requestPath}` for potential path forwarding.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.customproviders/custom-rp-with-function/README.md#2025-04-23_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n\"actions\": [\n                                {\n                                    \"name\": \"ping\",\n                                    \"routingType\":\"Proxy\",\n                                    \"endpoint\": \"[concat('https://', parameters('funcname'), '.azurewebsites.net/api/{requestPath}')]\"\n                                }\n                            ]\n```\n\n----------------------------------------\n\nTITLE: Configuring VXLAN Tunnels in NVAs with Bash\nDESCRIPTION: This bash script sets up VXLAN tunnels in the Network Virtual Appliances (NVAs). It creates internal and external tunnels, sets them up, and bridges them together for routing.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/load-balancer-gateway/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# the VXLAN Network Idenfier (VNI) is specified with id\ntunnel_internal_port=10800\ntunnel_internal_vni=800\ntunnel_external_port=10801\ntunnel_external_vni=801\nnva_lb_ip=10.0.1.100\n\n# internal tunnel\nip link add name vxlan${tunnel_internal_vni} type vxlan id ${tunnel_internal_vni} remote ${nva_lb_ip} dstport ${tunnel_internal_port}\nip link set vxlan${tunnel_internal_vni} up\n\n# external tunnel\nip link add name vxlan${tunnel_external_vni} type vxlan id ${tunnel_external_vni} remote ${nva_lb_ip} dstport ${tunnel_external_port}\nip link set vxlan${tunnel_external_vni} up\n\n# bridge both VXLAN interfaces together (it works arounding routing between them)\nip link add br-tunnel type bridge\nip link set vxlan${tunnel_internal_vni} master br-tunnel\nip link set vxlan${tunnel_external_vni} master br-tunnel\nip link set br-tunnel up\n```\n\n----------------------------------------\n\nTITLE: PowerShell/CLI Command for Azure Bastion Deployment\nDESCRIPTION: Command line script reference for deploying the Azure Bastion template using either Azure PowerShell or Azure CLI tools. This indicates the deployment can be automated through scripts.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azure-bastion/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nTags: ``bastion``\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template via Azure CLI Shell Script - bash\nDESCRIPTION: This Bash snippet provides a shell command for deploying the Azure data factory Hive pipeline using a CLI script. The azure-group-deploy.sh script is invoked with artifact folder (-a), location (-l), and the -u flag to perform the deployment. Requires Azure CLI to be installed and the correct folder structure with ARM template artifacts. Parameters include the sample directory and Azure region; successful execution deploys the specified resources as defined in the ARM template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-hive-transformation/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nazure-group-deploy.sh -a 101-data-factory-hive-transformation -l eastus -u\n```\n\n----------------------------------------\n\nTITLE: Specifying Managed Connectors in JSON Array Format for ISE Deployment\nDESCRIPTION: Examples of how to specify managed connectors for the Integration Service Environment as JSON arrays in the template parameters. You can specify a single connector or multiple connectors that will be available with the ISE label in the Logic Apps editor.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.logic/integration-service-environment/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\"mq\"]\n```\n\nLANGUAGE: json\nCODE:\n```\n[\"mq\", \"servicebus\"]\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types for Private Endpoint Template\nDESCRIPTION: This snippet lists the Azure resource provider namespaces and types that are utilized within the associated ARM/Bicep template for creating a private endpoint connection to an Azure SQL Server. These tags help identify the components deployed by the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.sql/private-endpoint-sql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Sql/servers, Microsoft.Sql/servers/databases, Microsoft.Network/virtualNetworks, Microsoft.Network/virtualNetworks/subnets, Microsoft.Network/privateEndpoints, Microsoft.Network/privateDnsZones, Microsoft.Network/privateDnsZones/virtualNetworkLinks, Microsoft.Network/privateEndpoints/privateDnsZoneGroups, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines`\n```\n\n----------------------------------------\n\nTITLE: Uploading Script to Azure Storage Blob using Azure CLI (Bash)\nDESCRIPTION: This command uses the Azure CLI (`azure storage blob upload`) to upload the `configuressl.sh` script file to the specified container in an Azure Storage account. It requires the file path (`-f configuressl.sh`), the storage account name (`-a [accountname]`), the account key (`-k [key]`), and the target container name (`--container [containername]`).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nazure storage blob upload -f configuressl.sh  -a [accountname] -k [key] --container [containername]\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template using Azure CLI\nDESCRIPTION: This command deploys the ARM template to create the web app in the specified resource group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-flask/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\naz group deployment create --resource-group \"resource-group\" --template-file \"azuredeploy.json path\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Web App with Diagnostics Logging\nDESCRIPTION: This ARM template deploys a Web App, Storage Account, and configures diagnostics logging to a Blob Container. It uses the listAccountSas function to retrieve the Storage Account SAS and connect it to the Web App.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-diagnostics-logs-blob-container/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    // Template parameters would be defined here\n  },\n  \"variables\": {\n    // Template variables would be defined here\n  },\n  \"resources\": [\n    // Resource definitions for Storage Account, Web App, and configuration would be here\n  ],\n  \"outputs\": {\n    // Any outputs would be defined here\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription with Azure CLI\nDESCRIPTION: Command to set the active Azure subscription for deployment using the Azure CLI.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-simple-windows-visualstudio2019/GettingStarted-wsvs.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resources for CDN and Storage in ARM Template\nDESCRIPTION: This JSON snippet defines the Azure resources to be created, including a Storage Account, CDN Profile, and CDN Endpoint. It specifies the properties and configurations for each resource.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/cdn-with-storage-account/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Cdn/profiles, Microsoft.Cdn/profiles/endpoints\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Eventhub Namespace with IP Filter Rule using ARM Template (JSON)\nDESCRIPTION: This snippet is an Azure Resource Manager (ARM) template written in JSON that provisions an Event Hub Namespace with an associated IP Filter rule. It requires Azure Resource Manager and appropriate permissions to deploy resources, and is parameterized to allow customization of resource names and IP filter settings. The template input parameters usually cover the namespace name, location, and filter rule specifications; outputs are typically resource details or confirmations of successful deployment. This approach ensures repeatable and secure configuration of Event Hub network access, with limitations based on available ARM template capabilities and Azure quota constraints.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.eventhub/eventhub-namespace-ipfilter/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"namespaceName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Event Hub namespace.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Location for resources.\"\n      }\n    },\n    \"ipFilterRuleName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the IP Filter rule.\"\n      }\n    },\n    \"ipFilterAction\": {\n      \"type\": \"string\",\n      \"allowedValues\": [\n        \"Accept\",\n        \"Reject\"\n      ],\n      \"defaultValue\": \"Accept\",\n      \"metadata\": {\n        \"description\": \"Action for this IP Filter rule. Possible values are 'Accept' or 'Reject'.\"\n      }\n    },\n    \"ipFilterIPMask\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"IP Mask for filtering (e.g., '10.1.1.0/24').\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.EventHub/namespaces\",\n      \"apiVersion\": \"2017-04-01\",\n      \"name\": \"[parameters('namespaceName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"Premium\",\n        \"tier\": \"Premium\"\n      },\n      \"properties\": {}\n    },\n    {\n      \"type\": \"Microsoft.EventHub/namespaces/IPFilterRules\",\n      \"apiVersion\": \"2017-04-01\",\n      \"name\": \"[concat(parameters('namespaceName'), '/', parameters('ipFilterRuleName'))]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.EventHub/namespaces', parameters('namespaceName'))]\"\n      ],\n      \"properties\": {\n        \"action\": \"[parameters('ipFilterAction')]\",\n        \"ipMask\": \"[parameters('ipFilterIPMask')]\"\n      }\n    }\n  ]\n}\n\n```\n\n----------------------------------------\n\nTITLE: Getting Azure Machine Learning Service Principal Object ID using Azure CLI\nDESCRIPTION: This Azure CLI command retrieves the display name and object ID of the 'Azure Machine Learning' service principal. This object ID is required to grant the service principal necessary permissions (e.g., Contributor role) on the subscription.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz ad sp list --display-name \"Azure Machine Learning\" --query '[].[appDisplayName,objectId]' --output tsv\n```\n\n----------------------------------------\n\nTITLE: Deploying Contract in Geth Console\nDESCRIPTION: This code deploys the compiled smart contract to the Ethereum network using the contract object's 'new' method, the initializer, and the callback function defined earlier.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar guestBook = contract.new(initializer, callback);\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Deployment Slots in Azure ARM Template\nDESCRIPTION: This JavaScript code snippet demonstrates how to specify multiple deployment slots for an Azure Web App in an ARM template. It uses an 'environments' parameter to define the slots, with a default unnamed slot created automatically.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-custom-deployment-slots/README.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n\"environments\": {\n  \"value\": [\n    \"Dev\",\n    \"Next\",\n    \"Preview\",\n    \"Future\"\n    // A default, \"nameless\" slot will be created; so don't list it here\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: SSH into Swarm Manager Nodes\nDESCRIPTION: These commands demonstrate how to SSH into the Swarm manager nodes. The nodes are NAT'ted behind an Azure Load Balancer and use different port numbers for SSH access.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/swarm/docker-swarm-cluster/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nssh <username>@<addr> -p 2200 # for swarm-master-0\nssh <username>@<addr> -p 2201 # for swarm-master-1\nssh <username>@<addr> -p 2202 # for swarm-master-2\n```\n\n----------------------------------------\n\nTITLE: Listing Available Azure Locations using Azure CLI\nDESCRIPTION: Retrieves and displays a list of all available Azure regions (locations) where resources can be deployed. This is useful for selecting a location when creating resources like Resource Groups.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-all-in-one-template-for-vnet-injection/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz account list-locations\n```\n\n----------------------------------------\n\nTITLE: Installing Azul Zulu OpenJDK on Windows VM\nDESCRIPTION: This PowerShell script installs the specified version of Azul Zulu OpenJDK on a Windows VM. It downloads the installer, runs it silently, and sets environment variables.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/zulu/Windows-Java-ZuluOpenJDK/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nzulu-install.ps1\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Data Lake Store with Encryption - ARM Template - JSON\nDESCRIPTION: This snippet demonstrates how to define an ARM template in JSON format to deploy an Azure Data Lake Store account with encryption enabled and using service-managed encryption keys. Requires Azure Resource Manager (ARM), specifying Microsoft.DataLakeStore/accounts as the resource type, and includes configuration for encryption. Expected parameters include account name, location, and optional tags. The output is an encrypted Data Lake Store account after successful deployment. Constraints include ARM template syntax rules and supported regions for Data Lake Store.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datalakestore/data-lake-store-encryption-adls/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"accountName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Data Lake Store account.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Location for the Data Lake Store account.\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.DataLakeStore/accounts\",\n      \"apiVersion\": \"2016-11-01\",\n      \"name\": \"[parameters('accountName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"tags\": {\n        \"displayName\": \"Data Lake Store Account\"\n      },\n      \"properties\": {\n        \"encryptionState\": \"Enabled\",\n        \"encryptionConfig\": {\n          \"type\": \"ServiceManaged\"\n        }\n      }\n    }\n  ],\n  \"outputs\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Principal ID using Azure PowerShell\nDESCRIPTION: This PowerShell command retrieves the Principal ID (ObjectId) associated with a user's email address. The Principal ID is used as an input for the RBAC role assignment template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.authorization/rbac-builtinrole-resourcegroup/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nPS C:\\> Get-AzADUser -mail <email id>\n```\n\n----------------------------------------\n\nTITLE: Showing Key Vault Details using Azure CLI\nDESCRIPTION: This Azure CLI command displays the details of a specified Azure Key Vault. The output includes the Key Vault's resource ID, which is required as the 'cmk_keyvault' parameter for the deployment template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault show --name <keyvault-name>\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template with Azure CLI\nDESCRIPTION: Command to deploy the ARM template using Azure CLI. It creates a Web App on Linux with Azure Database for MySQL in the specified Resource Group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-managed-mysql/GettingStarted-WebAppMySQL.md#2025-04-23_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\naz group deployment create --name \"name of your deployment\" --resource-group \"resource-group\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: Referencing Existing Resources in JSON\nDESCRIPTION: Demonstrates how to reference an existing resource not defined in the same template by combining resourceId() and reference() functions in JSON templates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n\"diagnosticsProfile\": {\n  \"bootDiagnostics\": {\n    \"enabled\": true,\n      \"storageUri\": \"[reference(resourceId(parameters('storageAccountResourceGroup'), 'Microsoft.Storage/storageAccounts', variables('diagStorageAccountName')), '2017-10-01').primaryEndpoints['blob']]\"\n      }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining 'associations' API Extension in Azure Custom Provider - JSON\nDESCRIPTION: This snippet defines the 'associations' resourceType in the resourceProviders section of an Azure Resource Manager template. It sets up an API extension backed by a webhook, with routing types for Webhook, Cache, and Extension logic and ties the endpoint to a Logic App callback URL. The mode 'Secure' hides the endpoint on reads, while 'routingType' and name enable cross-resource-group extension. Dependencies include Microsoft.Logic/workflows and an existing Logic App trigger.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.customproviders/custom-rp-existing-resource-deployments/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"resourceTypes\": [\\n    {\\n        \"name\": \"associations\",\\n        \"mode\": \"Secure\",\\n        \"routingType\": \"Webhook,Cache,Extension\",\\n        \"endpoint\": \"[[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '/triggers/CustomProviderWebhook'), '2017-07-01').value]\"\\n    }\\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Tags in JSON\nDESCRIPTION: This JSON snippet defines the tags for the Azure resource, specifying the Microsoft Insights action groups and activity log alerts that will be created.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.insights/insights-alertrules-servicehealth/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Insights/actionGroups, Microsoft.Insights/activityLogAlerts\"\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Tags in JSON\nDESCRIPTION: This JSON snippet defines tags for Azure resources, specifying the services and components used in the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-compute-attach-hdi/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.MachineLearningServices/workspaces/computes, Microsoft.Storage/storageAccounts, Microsoft.KeyVault/vaults, Microsoft.Insights/components, Microsoft.MachineLearningServices/workspaces, systemAssigned, Microsoft.HDInsight/clusters\"\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template with Azure CLI - bash\nDESCRIPTION: This bash snippet enables deployment of an Azure Resource Manager template by invoking the 'azure-group-deploy.sh' script. It requires the Azure CLI to be installed, with parameters '-a' for the artifact directory (containing the ARM template) and '-l' for the Azure location. Inputs must match the directory structure provided in the repository. Output is a CLI-driven deployment of all resources defined in the specified template. The script assumes the user is authenticated and the environment is configured with relevant Azure credentials.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-chained-copy-activities/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nazure-group-deploy.sh -a 101-data-factory-blob-to-sql-copy-stored-proc -l eastus\n```\n\n----------------------------------------\n\nTITLE: Configuring Backup Protection for Azure IaaS VMs Using ARM Template - Bicep\nDESCRIPTION: This Bicep snippet defines a resource deployment for enabling backup protection on one or more Classic or ARM-based Azure IaaS VMs using a pre-existing Recovery Services vault and a backup policy. It requires references to the vault name, policy ID, and a list of VM resource IDs as input parameters. For each virtual machine, it creates a protectedItems resource in the appropriate container under the Recovery Services vault, linking to the correct policy. The Bicep template relies on pre-existing infrastructure and does not provision new vaults or backup policies.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-backup-classic-resource-manager-vms/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\n\"// Example Bicep template for VM backup protection\\nparam vaultName string\\nparam policyId string\\nparam vmList array\\n\\nresource protectedItems 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems@2022-08-01' = [for (vm, i) in vmList: {\\n  name: '\\${vaultName}/Azure/protectionContainer\\${i}/protectedItem\\${i}'\\n  properties: {\\n    policyId: policyId\\n    sourceResourceId: vm\\n  }\\n}]\\n\"\n```\n\n----------------------------------------\n\nTITLE: Azure VM Scale Set Manual Scaling Parameters\nDESCRIPTION: JSON ARM template parameters for manually scaling an existing Azure VM Scale Set. The template requires the name of an existing Scale Set and ensures the VM size matches the original deployment specifications.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-scale-existing/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"existingVMSSName\": {\n    \"type\": \"string\",\n    \"metadata\": {\n      \"description\": \"Name of existing VM Scale Set\"\n    }\n  },\n  \"vmSku\": {\n    \"type\": \"string\",\n    \"defaultValue\": \"Standard_D1_v2\",\n    \"metadata\": {\n      \"description\": \"Size of VMs in the VM Scale Set (must match original deployment)\"\n    }\n  },\n  \"capacity\": {\n    \"type\": \"int\",\n    \"metadata\": {\n      \"description\": \"The new capacity value for the VM Scale Set\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Create Azure Resource Group Command\nDESCRIPTION: Azure CLI command to create a new resource group with specified name and location. Resource groups are containers for related Azure resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-python/gettingstarted.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Tagging Azure Cosmos DB Resources Using ARM Template - JSON\nDESCRIPTION: This snippet lists Azure Resource Manager (ARM) resource types relevant to Cosmos DB and its SQL API, specifically the account, databases, and containers. The tags are intended for use within ARM templates to define and structure Cosmos DB resources, and assist with resource deployment and management automation. No additional dependencies are required, but usage depends on ARM template schema and Azure access, and the tags serve as descriptors rather than executable code.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-sql-multiple-containers/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n`Tags: Microsoft.DocumentDB/databaseAccounts, Microsoft.DocumentDB/databaseAccounts/apis/databases, Microsoft.DocumentDb/databaseAccounts/apis/databases/containers`\n```\n\n----------------------------------------\n\nTITLE: Deploying Ubuntu VM with Puppet Agent using PowerShell\nDESCRIPTION: Instructions for deploying the template using PowerShell. This method requires Azure PowerShell modules to be installed and configured.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/puppet/puppet-agent-linux/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://azure.microsoft.com/documentation/articles/powershell-azure-resource-manager/\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Manager Template Outputs for AD Domain Controller\nDESCRIPTION: This JSON snippet defines the outputs for an Azure Resource Manager template that creates an Active Directory Domain Controller. It includes outputs for DNS IP address, domain name, and virtual network details.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/modules/active-directory-new-domain/0.9/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"outputs\": {\n  \"dnsIpAddress\": {\n    \"type\": \"string\",\n    \"description\": \"The IP address of the DNS server. The value of the privateIpAddress parameter.\"\n  },\n  \"domainName\": {\n    \"type\": \"string\",\n    \"description\": \"The FQDN of the domain. The value of the domainName parameter.\"\n  },\n  \"virtualNetworkSubscriptionId\": {\n    \"type\": \"string\",\n    \"description\": \"SubscriptionId of the virtualNetwork. The value of subscription().subscriptionId.\"\n  },\n  \"virtualNetworkResourceGroupName\": {\n    \"type\": \"string\",\n    \"description\": \"Name of the resourceGroup for the virtualNetwork.  The value of resourceGroup().name\"\n  },\n  \"virtualNetworkName\": {\n    \"type\": \"string\",\n    \"description\": \"Name of the virtualNetwork.  The value of the virtualNetworkName parameter.\"\n  },\n  \"subnetName\": {\n    \"type\": \"string\",\n    \"description\": \"The name of the subnet.\"\n  },\n  \"virtualNetworkAddressPrefixes\": {\n    \"type\": \"array\",\n    \"description\": \"Address ranges for the virtualNetwork. The value of the virtualNetworkAddressRanges parameter.\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Types for Cosmos DB Deployment\nDESCRIPTION: Identifies the specific Azure Resource Manager resource types that are deployed by this template. These include the Cosmos DB account, SQL database, and SQL container resources within the Microsoft.DocumentDB namespace.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-sql-analytical-store/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.DocumentDB/databaseAccounts, Microsoft.DocumentDB/databaseAccounts/sqlDatabases, Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers`\n```\n\n----------------------------------------\n\nTITLE: Deploying a manifest to AKS using Run Command\nDESCRIPTION: This Bash command shows how to remotely deploy a Kubernetes manifest to a private AKS cluster by attaching a specific file to the az aks command invoke operation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/private-aks-cluster-with-public-dns-zone/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz aks command invoke -g <resourceGroup> -n <clusterName> -c \"kubectl apply -f deployment.yaml -n default\" -f deployment.yaml\n```\n\n----------------------------------------\n\nTITLE: Preparing Azure Key Vault with Certificates using Shell\nDESCRIPTION: This shell command executes the `keyvault.sh` script to prepare an Azure Key Vault instance. It creates the vault if necessary, converts provided PEM certificate files (`<certpemfile>`, `<keypemfile>`, `<cacertpemfile>`) into PFX format, stores them as secrets under the specified `<secretname>`, and updates the `azuredeploy.parameters.json` file with the necessary Key Vault information (resource group, location, vault name, secret details).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkeyvault.sh <keyvaultname> <resource group name> <location> <secretname> <certpemfile> <keypemfile> <cacertpemfile>\n```\n\n----------------------------------------\n\nTITLE: Creating DNS Update Complex Variable - PowerShell\nDESCRIPTION: PowerShell script to create a complex automation variable for DNS update configuration. Specifies VM IDs, zones, and hostnames for DNS updates during failover.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/asr-automation-recovery/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$InputObject = @{\"#VMIdAsAvailableINASRVMProperties\"=@{\"Zone\"=\"#ZoneFortheVirtualMachine\";\"VMName\"=\"#HostNameofTheVirtualMachine\"};\"#VMIdAsAvailableINASRVMProperties2\"=@{\"Zone\"=\"#ZoneFortheVirtualMachine2\";\"VMName\"=\"#HostNameofTheVirtualMachine2\"}}\n$RPDetails = New-Object -TypeName PSObject -Property $InputObject  | ConvertTo-Json\nNew-AzureRmAutomationVariable -Name \"#RecoveryPlanName\" -ResourceGroupName \"#AutomationAccountResourceGroup\" -AutomationAccountName \"#AutomationAccountName\" -Value $RPDetails -Encrypted $false\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure AI Foundry with Azure CLI\nDESCRIPTION: Azure CLI commands to create resource groups and deploy the Azure AI Foundry templates. First creates prerequisite network resources, then deploys the main AI Foundry resources with private networking configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/aifoundry-network-restricted/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Pre-reqs, if required\naz group create --name networkRg --location westus\naz deployment group create --resource-group networkRg --template-file prereqs/prereq.main.bicep\n\n# Main Deployment\naz group create --name privateAiHub --location westus\naz deployment group create --resource-group privateAiHub --template-file main.bicep\n```\n\n----------------------------------------\n\nTITLE: Uploading SSL Certificate to Azure Key Vault\nDESCRIPTION: PowerShell script for importing and configuring a PFX certificate in Azure Key Vault with appropriate access policies.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vmss-win-iis-app-ssl/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$securepfxpwd = ConvertTo-SecureString â€“String '<strongpassword>' â€“AsPlainText â€“Force\n$cer = Import-AzureKeyVaultCertificate -VaultName '<Azurekeyvaultname>' -Name '<CertStoreName>' -FilePath '<C:\\myCerts\\www_custDomain_com.pfx>' -Password $securepfxpwd\nSet-AzureRmKeyVaultAccessPolicy -VaultName '<Azurekeyvaultname>' -UserPrincipalName '<udsarm@microsoft.com>' -PermissionsToCertificates all\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Compute Gallery using ARM Template\nDESCRIPTION: This ARM template creates an Azure Compute Gallery. It uses the Microsoft.Compute/galleries resource type to define the gallery. The template is designed for deployment in both Azure public and US government cloud environments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/sig-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Compute/galleries\"\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription with Azure CLI\nDESCRIPTION: Command to set the correct Azure subscription for deployment using Azure CLI. It requires the subscription ID as a parameter.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-managed-mysql/GettingStarted-WebAppMySQL.md#2025-04-23_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Structuring JSON Resources for Azure Resource Manager Templates\nDESCRIPTION: This snippet demonstrates the recommended structure and property order for defining resources in JSON format for Azure Resource Manager templates. It includes common properties, their suggested sequence, and an example of a virtual machine resource.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n\"resources\": [\n    {\n        \"comments\": \"if any\",\n        \"condition\": true,\n        \"scope\": \"% parent scope %\",\n        \"type\": \"Microsoft.Compute/virtualMachines\",\n        \"apiVersion\": \"2017-12-01\",\n        \"name\": \"[concat(parameters('virtualMachineName'), copyIndex(1))]\",\n        \"location\": \"[parameters('location')]\",\n        \"zones\": [],\n        \"sku\": {},\n        \"kind\": \"\",\n        \"scale\": \"\",\n        \"plan\": {},\n        \"identity\": {},\n        \"copy\": {\n            \"name\": \"vmLoop\",\n            \"count\": \"[parameters('numberOfVMs')]\"\n        },\n        \"dependsOn\": [\n            \"nicLoop\"\n        ],\n        \"tags\": {},\n        \"properties\": {}\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags used for identifying and organizing Azure Firewall deployment components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azurefirewall-create-with-firewallpolicy-apprule-netrule-ipgroups/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Network/ipGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/firewallPolicies, Microsoft.Network/firewallPolicies/ruleCollectionGroups, Allow, Microsoft.Network/azureFirewalls\n```\n\n----------------------------------------\n\nTITLE: Deploying SQL Elastic Pool Using Azure Resource Manager Templates (JSON)\nDESCRIPTION: This snippet refers to the use of an ARM template written in JSON to provision a new Azure SQL Elastic Pool, create a new SQL Server, and assign new SQL Databases to that pool within Azure. Dependencies include Azure Resource Manager, the Microsoft.Sql resource provider, and proper Azure subscription access. Key parameters include pool configuration, server settings, and database assignments. The input is a JSON template (not shown in full here), and outcomes are the provisioned pool, server, and associated databases; constraints are defined by Azure SQL SKU limits and template configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.sql/sql-elastic-pool-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Sql/servers, Microsoft.Sql/servers/elasticPools, Microsoft.Sql/servers/databases, Microsoft.Sql/servers/firewallrules\"\n```\n\n----------------------------------------\n\nTITLE: Defining SAP NetWeaver VM Sizes and Configurations in JSON\nDESCRIPTION: This JSON snippet defines the VM sizes and disk configurations for different SAP NetWeaver deployment scenarios. It includes options for both HANA and SQL databases, as well as high availability (HA) and non-HA setups across various SAPS ranges.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-3-tier-marketplace-image-md/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\"Demo\": {\n  \"HANA\": {\n    \"HA\": \"2xStandard_E8s_v3 DB Server (7xP10) + 2xStandard_DS2_v3 ASCS/SCS (1xP10) + 2xStandard_DS2_v3 DI (1xP10)\",\n    \"Non-HA\": \"1xStandard_E8s_v3 DB Server (7xP10) + 1xStandard_DS2_v3 ASCS/SCS (1xP10) + 1xStandard_DS2_v3 DI (1xP10)\"\n  },\n  \"SQL\": {\n    \"HA\": \"2xStandard_E4_v3 DB Server (1xP10) + 2xStandard_DS2_v3 ASCS/SCS (1xP10) + 2xStandard_DS2_v3 DI (1xP10)\",\n    \"Non-HA\": \"1xStandard_E4_v3 DB Server (1xP10) + 1xStandard_DS2_v3 ASCS/SCS (1xP10) + 1xStandard_DS2_v3 DI (1xP10)\"\n  }\n},\n\"Small < 30.000 SAPS\": {\n  \"HANA\": {\n    \"HA\": \"2xStandard_E32s_v3 DB Server (5xP20 1xP6) + 2xStandard_E2_v3 ASCS/SCS (1xP10) + 2xStandard_E8_v3 DI (1xP10)\",\n    \"Non-HA\": \"1xStandard_E32s_v3 DB Server (5xP20 1xP6) + 1xStandard_E2_v3 ASCS/SCS (1xP10) + 1xStandard_E8_v3 DI (1xP10)\"\n  },\n  \"SQL\": {\n    \"HA\": \"2xStandard_E8_v3 DB Server (5xP20) + 2xStandard_E2_v3 ASCS/SCS (1xP10) + 2xStandard_E8_v3 DI (1xP10)\",\n    \"Non-HA\": \"1xStandard_E8_v3 DB Server (5xP20) + 1xStandard_E2_v3 ASCS/SCS (1xP10) + 1xStandard_E8_v3 DI (1xP10)\"\n  }\n}\n}\n```\n\n----------------------------------------\n\nTITLE: Installing SAP S/4HANA Fully Activated Appliance with SAS Token\nDESCRIPTION: This bash script initiates the installation of SAP S/4HANA Fully Activated Appliance using files from a storage account with SAS token authentication. It requires root privileges, the storage account URL, and a SAS token as parameters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-2-tier-s4hana-fully-activated-appliance/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo su -\n/sapmedia/s4install.sh 'https://<storage account name>.blob.core.windows.net/<container name>/' 'SAS Token'\n```\n\n----------------------------------------\n\nTITLE: Authorizing Azure Resource Providers with Key Vault - Azure PowerShell\nDESCRIPTION: This snippet provides the PowerShell commands required to log in to Azure, set the appropriate subscription context, and update Azure Key Vault access policies for the Microsoft.CertificateRegistration and Microsoft.Web resource providers. These steps grant the required permissions (get, set, delete) on secrets to two service principals, ensuring that the resource providers can access the Key Vault during deployment. The key parameters are the subscription ID, key vault name, and specific service principal names. Inputs are the Azure subscription and Key Vault details; the script ensures necessary access for ARM template deployments involving certificates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/app-service-certificate-standard/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nLogin-AzureRmAccount\nSet-AzureRmContext -SubscriptionId AZURE_SUBSCRIPTION_ID\nSet-AzureRmKeyVaultAccessPolicy -VaultName KEY_VAULT_NAME -ServicePrincipalName f3c21649-0979-4721-ac85-b0216b2cf413 -PermissionsToSecrets get,set,delete\nSet-AzureRmKeyVaultAccessPolicy -VaultName KEY_VAULT_NAME -ServicePrincipalName abfa0a7c-a6b6-4736-8310-5855508787cd -PermissionsToSecrets get\n```\n\n----------------------------------------\n\nTITLE: Authenticating Email Account with Nylas Sync Engine\nDESCRIPTION: Command to authenticate and initialize email synchronization for a new account. This starts the authorization process to obtain tokens from email providers like Gmail, Outlook, Yahoo or AOL.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/nylas/nylas-email-sync-engine/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cd /usr/local/sync-engine/\n$ bin/inbox-auth <your-username>@<gmail or outlook or yahoo or aol>.com\n```\n\n----------------------------------------\n\nTITLE: Setting the Active Azure Subscription (Shell)\nDESCRIPTION: This Azure CLI command sets the active subscription context for subsequent resource operations. You need to replace \\\"your subscription id\\\" with the actual subscription identifier you're targeting. Only resources managed under this subscription will be affected by subsequent CLI actions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iothub-with-consumergroup-create/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Referencing Resource IDs in Bicep\nDESCRIPTION: Demonstrates using symbolic references to access resource IDs in Bicep. This approach is preferred over constructing resource IDs manually as it's more concise and less error-prone.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_6\n\nLANGUAGE: bicep\nCODE:\n```\n  properties: {\n    subnet: {\n      id: subnet.id\n    }\n  }      \n```\n\n----------------------------------------\n\nTITLE: Deploying Bicep/ARM Template using PowerShell\nDESCRIPTION: This PowerShell script initiates the deployment of a Bicep file (`main.bicep`) to a specified Azure resource group using the Azure PowerShell module (`Az.Resources`). It utilizes the `New-AzResourceGroupDeployment` cmdlet, passing necessary parameters such as the target resource group name, the template file path, the name of the pre-configured managed identity (`ManagedIdentityName`), and a name for the Azure AD application to be created (`AzureADApplicationName`).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.resources/deployment-script-azcli-graph-azure-ad/README.md#2025-04-23_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzResourceGroupDeployment `\n  -ResourceGroupName $resourceGroupName `\n  -TemplateFile main.bicep `\n  -ManagedIdentityName $managedIdentityName `\n  -AzureADApplicationName MyApp\n```\n\n----------------------------------------\n\nTITLE: Tag Definitions for Azure Resources\nDESCRIPTION: Resource tags defining the Microsoft Azure services and components used in the deployment template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/dsc-pullserver-to-win-server/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, extensions, DSC, Microsoft.Network/publicIPAddresses\n```\n\n----------------------------------------\n\nTITLE: SSH Tunnel for Secure Jenkins Access\nDESCRIPTION: This command establishes an SSH tunnel for securely accessing the Jenkins instance by forwarding local port 8080 to the Jenkins server. This approach avoids exposing Jenkins credentials over unsecured HTTP.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-container/README.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nssh -i <keyfile> -L 8080:localhost:8080 azureuser@jenkins-180131-1520.eastus.cloudapp.azure.com\n```\n\n----------------------------------------\n\nTITLE: Bash Deployment with Artifact Staging\nDESCRIPTION: Bash deployment script with explicit artifact staging enabled using the -u flag. Used for templates requiring staged artifacts.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md#2025-04-23_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\n./az-group-deploy.sh -a [foldername] -l eastus -u\n```\n\n----------------------------------------\n\nTITLE: Template Language Specification\nDESCRIPTION: Specifies the programming languages supported by the template deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-custom-domain-customer-certificate/README.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nlanguages:\n- json\n- bicep\n```\n\n----------------------------------------\n\nTITLE: Configuring VNet Peering using Azure Resource Manager Templates\nDESCRIPTION: Bicep and JSON templates for establishing VNet peering between two existing Azure Virtual Networks. Supports cross-resource group peering within the same region. Implements Microsoft.Network/virtualNetworks/virtualNetworkPeerings resource type.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/existing-vnet-to-vnet-peering/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tags\": {\n    \"bicep\": \"recoveryservices\",\n    \"backup\": \"vault\",\n    \"Microsoft.Network/virtualNetworks/virtualNetworkPeerings\": \"\",\n    \"Microsoft.Network/virtualNetworks\": \"\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Additional Shards to MongoDB Cluster\nDESCRIPTION: Commands to add more shards to the existing MongoDB sharding cluster. This requires the replica set name and primary IP address of the new shard to be added.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/airflow/mongodb-sharded-on-centos/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$mongo -u \"<mongouser>\" -p \"<mongopassword>\" \"admin\" --host <Mongos fqdn>\n\nsh.addShard(\"<replica set name>/<primary ip>:27017\")\n\nexit\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with Azure CLI\nDESCRIPTION: This command creates a new Azure Resource Group using the Azure CLI. It requires specifying a name and location for the resource group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-java-tomcat/gettingstarted.md#2025-04-23_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Defining and Deploying Azure Synapse Resources with ARM Template - JSON\nDESCRIPTION: This ARM template snippet provisions resources required for an Azure Synapse proof-of-concept environment. It automates the deployment of Azure Synapse workspaces, SQL and (optionally) Spark pools, storage accounts, logic apps, and role assignments, using the JSON declarative syntax supported by Azure Resource Manager. Dependencies include an active Azure subscription and owner permissions. Main parameters include workspace settings, pool Sku, storage configuration, and optional features such as Spark pools and networking rules. Outputs are the deployed resources, with logic apps to handle automated pausing and resuming of SQL pools. This template is aimed at rapid, repeatable infrastructure setup and may require further customization for advanced network or security scenarios.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.synapse/synapse-poc/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Resources/deployments, Microsoft.Storage/storageAccounts, blobServices/containers, Microsoft.Synapse/workspaces, SystemAssigned, firewallrules, managedIdentitySqlControlSettings, Microsoft.Synapse/workspaces/sqlPools, metadataSync, Microsoft.Synapse/workspaces/bigDataPools, Microsoft.Authorization/roleAssignments, Microsoft.Logic/workflows, InitializeVariable, Object, Integer, Http, ManagedServiceIdentity, ParseJson, , string, If, Until, SetVariable, Wait, Recurrence, \"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Data Lake Store with Encryption - Bicep Template - Bicep\nDESCRIPTION: This snippet provides an equivalent Bicep template for deploying an Azure Data Lake Store account with built-in encryption enabled via service-managed keys. Requires Bicep CLI or deployment via Azure Portal, and the Microsoft.DataLakeStore/accounts resource. Main parameters include account name and location, and encryption properties are set directly. The deployed resource will be an encrypted Data Lake Store account. Bicepâ€™s concise syntax improves maintainability, but is subject to Azure Bicep version compatibility.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datalakestore/data-lake-store-encryption-adls/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam accountName string\nparam location string = resourceGroup().location\n\nresource dataLakeStore 'Microsoft.DataLakeStore/accounts@2016-11-01' = {\n  name: accountName\n  location: location\n  tags: {\n    displayName: 'Data Lake Store Account'\n  }\n  properties: {\n    encryptionState: 'Enabled'\n    encryptionConfig: {\n      type: 'ServiceManaged'\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Azure VM Scale Set Parameters and Restrictions\nDESCRIPTION: This template demonstrates parameter restrictions for Azure VM Scale Set deployment. The vmssName must be 3-61 characters and unique within the VNet. Instance count is limited to 100 or less. The deployment requires an existing resource group with VNet and subnet.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-win-existing-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nPARAMETER RESTRICTIONS\n======================\n\nvmssName must be 3-61 characters in length. It should also be unique across the VNet.\n\ninstanceCount must be 100 or less.\n\nDo not deploy this scale set into a new resource group - it will only work in an existing resource group which contains a VNet and subnet.\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template with PowerShell\nDESCRIPTION: This PowerShell snippet deploys the ARM template using the Deploy-AzureResourceGroup.ps1 script. It specifies the storage account, resource group, location, template file, parameters file, and DSC source folder.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vm-win-iis-app-ssl/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n.\\Deploy-AzureResourceGroup.ps1 -StorageAccountName '<artifacts storage account name>' -ResourceGroupName '<Resource guroup name>' -ResourceGroupLocation '<RG location>' -TemplateFile .\\azuredeploy.json -TemplateParametersFile .\\azuredeploy.parameters.json -ArtifactStagingDirectory '.' -DSCSourceFolder '.\\dsc' -UploadArtifacts\n```\n\n----------------------------------------\n\nTITLE: Inspecting BGP Table in Quagga vtysh Shell\nDESCRIPTION: This vtysh shell command displays the current BGP routing table, providing insight into received and advertised network prefixes inside the Quagga VM. Run this after entering the vtysh environment, typically as the root user. Outputs a list of BGP routes as seen by Quagga for troubleshooting and verification.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/route-server-quagga/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nvm1# show ip bgp\n```\n\n----------------------------------------\n\nTITLE: Connecting to Scale Set VMs via SSH\nDESCRIPTION: Command syntax for SSH connection to VM Scale Set instances through the internal load balancer NAT rules. Must be executed from the jumpbox VM.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-internal-loadbalancer/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nssh -p 50000 {username}@{public-ip-address}\n```\n\n----------------------------------------\n\nTITLE: Configuring Autoscale Setting for Azure App Service Plan using ARM Template\nDESCRIPTION: An ARM template for deploying an App Service Plan with associated autoscale settings. The autoscale configuration scales instance count based on metric thresholds, demonstrating automated resource scaling for App Service plans.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/monitor-autoscale-webappserviceplan-simplemetricbased/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    // parameters would be defined here\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Web/serverfarms\",\n      // App Service Plan definition\n    },\n    {\n      \"type\": \"Microsoft.Insights/autoscalesettings\",\n      // Autoscale settings using PercentChangeCount for scaling\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Disk Performance Test Results in PowerShell\nDESCRIPTION: This PowerShell snippet shows the structure of the output returned by the disk performance test. It includes READ and WRITE metrics such as I/O throughput, aggregate bandwidth, and min/max bandwidths.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vm-disk-performance-meter/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nOutputsString           :\n                          Name             Type                       Value\n                          ===============  =========================  ==========\n                          testresult       String                     READ: io=2051.2MB, aggrb=78853KB/s, minb=19713KB/s, maxb=20024KB/s, mint=26222msec, maxt=26636msec; WRITE: io=2044.9MB, aggrb=78613KB/s, minb=19653KB/s, maxb=19963KB/s, mint=26222msec, maxt=26636msec;\n```\n\n----------------------------------------\n\nTITLE: Starting IP Monitoring Scripts\nDESCRIPTION: Commands to start scripts that monitor master and slave IP addresses for failover handling\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-mha-haproxy-ubuntu/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nsudo nohup bash /usr/local/haproxy/master_ip_check.sh 10.0.0.10 10.0.0.11 &\nsudo nohup bash /usr/local/haproxy/slave_ip_check.sh 10.0.0.11 10.0.0.12 &\n```\n\n----------------------------------------\n\nTITLE: Identifying Azure Traffic Manager Resource Types in ARM Template\nDESCRIPTION: This snippet lists the Azure Resource Manager resource types used within the associated ARM template (`azuredeploy.json`). It indicates the deployment of a Traffic Manager profile (`Microsoft.Network/trafficManagerProfiles`), nested endpoints (`Microsoft.Network/trafficManagerProfiles/nestedEndpoints`), and external endpoints (`Microsoft.Network/TrafficManagerProfiles/ExternalEndpoints`). These types define the core components configured by the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/traffic-manager-minchild/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/trafficManagerProfiles, Microsoft.Network/trafficManagerProfiles/nestedEndpoints, Microsoft.Network/TrafficManagerProfiles/ExternalEndpoints`\n```\n\n----------------------------------------\n\nTITLE: Deploying VM Scale Set with PowerShell\nDESCRIPTION: PowerShell command for deploying the VM Scale Set template with custom parameters. Script handles resource group creation, storage account setup, and template deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-windows-customimage/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n.\\deployscaleset.ps1 -location <location> -resourceGroupName <resourcegroupname> -scaleSetName <scalsetname> -newStorageAccountName <newstorageaccountname> -scaleSetVMSize <scalesetvmsize> -scaleSetDNSPrefix <scalesetdnsprefix> -newStorageAccountType <newstorageaccounttype>\n```\n\n----------------------------------------\n\nTITLE: Azure Stack HCI Cluster Tag Definition\nDESCRIPTION: Resource tags definition for Azure Stack HCI cluster deployment template identifying the Microsoft.AzureStackHCI/clusters resource type and hci tag.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurestackhci/create-cluster-3Nodes-Switchless-SingleLink/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.AzureStackHCI/clusters, hci\n```\n\n----------------------------------------\n\nTITLE: Set Azure Subscription Command\nDESCRIPTION: Azure CLI command to set the active subscription for subsequent commands. Replace 'your subscription id' with your actual subscription ID.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-python/gettingstarted.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Running Create-GEN-Artifacts.ps1 in PowerShell for Azure Resource Creation\nDESCRIPTION: This PowerShell script creates required resources for a subscription, including KeyVault and Storage Account. The script output is a JSON blob that can be used to update the .config.json file. Parameters should be checked and adjusted for the specific subscription.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/test/ci-gen-setup/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nCreate-GEN-Artifacts.ps1\n```\n\n----------------------------------------\n\nTITLE: Installing SAP S/4HANA Fully Activated Appliance with Managed Identity\nDESCRIPTION: This bash script initiates the installation of SAP S/4HANA Fully Activated Appliance using files from a storage account with managed identity authentication. It requires root privileges and the storage account URL as a parameter.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-2-tier-s4hana-fully-activated-appliance/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo su -\n/sapmedia/s4install.sh 'https://<storage account name>.blob.core.windows.net/<container name>/'\n```\n\n----------------------------------------\n\nTITLE: Generating Root and Client Certificates for P2S Testing in PowerShell\nDESCRIPTION: This PowerShell command executes a script named 'create-root-and-clients-certificates.ps1' located in the repository root. The script generates a root certificate and multiple client certificates (for Marketing, Sales, and Engineering groups) required for testing the certificate-based authentication of the Point-to-Site (P2S) VPN configuration described in the ARM template. A password must be provided as an argument for exporting the generated digital certificates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/virtual-wan-multiple-address-pool/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n.\\create-root-and-clients-certificates.ps1 'PASSWORD-TO-EXPORT-DIGITAL-CERTIFICATE'\n```\n\n----------------------------------------\n\nTITLE: Deploying Flask App to Azure Web App using Azure CLI\nDESCRIPTION: This command uploads and deploys a Flask application to the created Azure Web App. The --debug flag is used for verbose output.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-flask/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\naz web app up --name 'web app-name' --debug\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Table Creation and Data Insertion\nDESCRIPTION: SQL commands to create a sample table and insert test data into the PostgreSQL master database. This demonstrates basic database operations and can be used to verify replication to slave servers.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/postgre/postgresql-on-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nsudo -u postgres psql\ncreate table table1 (name varchar(100));\ninsert into table1 (name) values ('name1');\ninsert into table1 (name) values ('name2');\nselect * from table1;\n```\n\n----------------------------------------\n\nTITLE: Configuring TestShib Metadata Provider in XML\nDESCRIPTION: XML configuration snippet for setting up the TestShib metadata provider in Shibboleth IDP. This defines the HTTP metadata provider and specifies the backing file location.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/shibboleth/shibboleth-cluster-windows/README.md#2025-04-23_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<!-- TestShib -->\n<MetadataProvider id=\"HTTPMetadataTESTSHIB\"\n                  xsi:type=\"FileBackedHTTPMetadataProvider\"\n                  backingFile=\"%{idp.home}/metadata/testshib-providers.xml\"\n                  metadataURL=\"http://www.testshib.org/metadata/testshib-providers.xml\"/>\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Autoscale Failure Alerts\nDESCRIPTION: This JSON template defines Azure resources for creating an Activity Log Alert with an Action Group. It sets up email notifications for failed Autoscale operations in Azure. The template includes parameters for customization and defines the necessary resource types.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/monitor-autoscale-failed-alert/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Microsoft.Insights/actionGroups\", \"Microsoft.Insights/activityLogAlerts\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags definition for the Azure deployment template, specifying the Microsoft resources and extensions used in the Lustre deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/intel-lustre/intel-lustre-client-server/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Storage/storageAccounts, Microsoft.Resources/deployments, Microsoft.Compute/availabilitySets, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks\n```\n\n----------------------------------------\n\nTITLE: Sample Kubernetes Service Output\nDESCRIPTION: Example output of the 'kubectl get service' command, showing the services deployed in the cluster along with their IP addresses and ports.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-container/README.md#2025-04-23_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nNAME                  TYPE           CLUSTER-IP   EXTERNAL-IP      PORT(S)        AGE\nhello-world-service   LoadBalancer   10.0.98.99   52.168.126.156   80:32611/TCP   1h\nkubernetes            ClusterIP      10.0.0.1     <none>           443/TCP        1h\n```\n\n----------------------------------------\n\nTITLE: Navigating to VM Extension Logs Directory\nDESCRIPTION: Command to change directory to the logging location for custom script extensions in Azure Linux VM.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-standalone-rhel/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd /var/lib/waagent/custom-script/download/0\n```\n\n----------------------------------------\n\nTITLE: Listing Supported Language Versions for Azure App Service on Linux\nDESCRIPTION: This Markdown table shows the supported versions of various programming languages for Azure App Service on Linux, including Node.js, Java, PHP, Python, .NET Core, and Ruby.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-github-deploy/GettingStarted-WebGit.md#2025-04-23_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nLanguage          | Supported Versions\n:--------------- | :-------------  \nNode.js     | 4.4, 4.5, 4.8, 6.2, 6.6, 6.9, 6.10, 6.11, 8.0, 8.1, 8.2, 8.8, 8.9, 8.11, 8.12, 9.4, 10.1, 10.10, 10.14\nJava *     | Tomcat 8.5, 9.0, Java SE, WildFly 14 (all running JRE 8)\nPHP     | 5.6, 7.0, 7.2, 7.3\nPython     | 2.7, 3.6, 3.7\n.NET Core     | 1.0, 1.1, 2.0, 2.1, 2.2\nRuby     | 2.3, 2.4, 2.5, 2.6\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure Databricks Workspace with VNet Injection - Bicep Template - Bicep\nDESCRIPTION: This Bicep template provisions both a VNet with subnet and an Azure Databricks workspace, integrating Databricks with the custom VNet via network injection. Dependencies among resources ensure proper sequence, and parameters allow flexibility in workspace name, VNet naming, region, and subnet range. Users are expected to deploy this template with Azure CLI or portal, providing required parameters as input; outputs may include workspace and network resource IDs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-workspace-with-vnet-injection/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam location string\nparam workspaceName string\nparam vnetName string\nparam addressPrefix string\nparam subnetName string\nparam subnetPrefix string\n\nresource vnet 'Microsoft.Network/virtualNetworks@2021-02-01' = {\n  name: vnetName\n  location: location\n  properties: {\n    addressSpace: {\n      addressPrefixes: [addressPrefix]\n    }\n    subnets: [\n      {\n        name: subnetName\n        properties: {\n          addressPrefix: subnetPrefix\n        }\n      }\n    ]\n  }\n}\n\nresource databricks 'Microsoft.Databricks/workspaces@2021-04-01' = {\n  name: workspaceName\n  location: location\n  sku: {\n    name: 'premium'\n  }\n  properties: {\n    customVirtualNetworkId: vnet.id\n    customPublicSubnetName: subnetName\n  }\n  dependsOn: [\n    vnet\n  ]\n}\n\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Manager Tag Configuration for SAP NetWeaver File Server\nDESCRIPTION: This snippet shows the Azure Resource Manager tags used in the template. These tags identify the Microsoft resources being deployed as part of the SAP NetWeaver file server solution, including networking, compute, and extension components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-file-server-md/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Compute/availabilitySets, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, [variables('cseExtName')]\"\n```\n\n----------------------------------------\n\nTITLE: Deploying BOSH on Azure with Deployment Script\nDESCRIPTION: Shell command to deploy BOSH using a pre-configured script. This script uses the pre-created deployment manifest file 'bosh.yml' in the '~/example_manifests' directory.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/concourse/concourse-ci/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./deploy_bosh.sh\n```\n\n----------------------------------------\n\nTITLE: Assigning Contributor Role to Azure ML Service Principal with PowerShell\nDESCRIPTION: This PowerShell command assigns the Contributor role to the Azure Machine Learning service principal at the subscription scope, enabling the necessary permissions for CMK encryption.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk-service-side-encryption/README.md#2025-04-23_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzRoleAssignment --ObjectId <object-ID> --RoleDefinitionName \"Contributor\" -Scope /subscriptions/<subscription-ID>\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Budget Parameters\nDESCRIPTION: Parameters configuration for Azure budget creation including budget name, amount tracking, time periods, thresholds, and notification contacts. All parameters must be configured in the azuredeploy.parameters.json file before deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.consumption/create-budget/README.md#2025-04-23_snippet_0\n\nLANGUAGE: parameters\nCODE:\n```\nBudget Name: unique within resource group\nAmount: decimal value for cost/usage tracking\nTime Grain: Monthly, Quarterly, or Annually\nStart Date: YYYY-MM-DD format (must be first of month)\nEnd Date: YYYY-MM-DD format (after start date)\nFirst Threshold: 0.01-1000 percent\nSecond Threshold: 0.01-1000 percent\nContact Emails: array of email addresses\nContact Groups: array of action groups\nResource Groups Filter: non-empty array of resource groups\nMeter Categories Filter: non-empty array of meters\n```\n\n----------------------------------------\n\nTITLE: Deploying Application Insights Availability Test and Metric Alert Rule in Azure\nDESCRIPTION: This JSON template creates an Application Insights availability test and a corresponding metric alert rule. It utilizes Azure Resource Manager to deploy the resources, including web tests, metric alerts, and Application Insights components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.insights/monitoring-webtest-metric-alert/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Insights/webtests, Microsoft.Insights/metricAlerts, microsoft.insights/components\"\n```\n\n----------------------------------------\n\nTITLE: Viewing CPU Performance Test Results in PowerShell\nDESCRIPTION: A PowerShell output example showing the CPU performance metrics after template deployment. The output includes totaltime, perrequestmin, perrequestavg, perrequestmax, and perrequest95percentile values.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vm-cpu-sysbench-meter/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nOutputsString           :\n                          Name             Type                       Value\n                          ===============  =========================  ==========\n                          totaltime        String                     36.8515s\n                          perrequestmin    String                     2.96ms\n                          perrequestavg    String                     7.37ms\n                          perrequestmax    String                     22.26ms\n                          perrequest95percentile  String                     11.48ms\n```\n\n----------------------------------------\n\nTITLE: Listing Deployed Azure Resource Types in ARM Template\nDESCRIPTION: This snippet lists the unique Azure Resource Manager resource provider types that are defined and deployed by the associated ARM template (`azuredeploy.json`). It identifies the core Azure services involved: Virtual Networks, App Service Environments (hostingEnvironments), App Service Plans (serverfarms), and Web Apps (sites).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/create-ase-with-webapp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/virtualNetworks, Microsoft.Web/hostingEnvironments, Microsoft.Web/serverfarms, Microsoft.Web/sites`\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition for Azure Template\nDESCRIPTION: Defines the Azure resources and extensions used in the template deployment including networking, compute, and custom script components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/nagios/nagios-on-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: Opening a terminal in Ubuntu Desktop\nDESCRIPTION: Instructions for opening a terminal in the Ubuntu Desktop environment using keyboard shortcut.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ubuntu-desktop-gnome-rdp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nTo open a terminal with Ctrl + Alt + t\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Parameters Table in Markdown\nDESCRIPTION: A comprehensive markdown table documenting Bicep deployment parameters including names, types, and descriptions for various Azure services including AI Hub, Key Vault, Container Registry, and Storage Account configurations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/aifoundry-networking-aoao/README.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                                      | Type   | Description                                                                                                                 |\n| ----------------------------------------- | ------ | --------------------------------------------------------------------------------------------------------------------------- |\n| prefix                                    | string | Specifies the name prefix for all the Azure resources.                                                                      |\n| suffix                                    | string | Specifies the name suffix for all the Azure resources.                                                                      |\n| location                                  | string | Specifies the location for all the Azure resources.                                                                         |\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources with ARM Tags\nDESCRIPTION: Resource tagging configuration for Azure infrastructure components including networking, security, and compute resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-windows-nat-zones/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/virtualNetworks, Microsoft.Network/networkSecurityGroups, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers, Microsoft.Compute/virtualMachineScaleSets\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Quick Start Template via Markdown Link\nDESCRIPTION: This markdown snippet provides a clickable 'Deploy to Azure' button that initiates the deployment of an Azure Quick Start template. The link directs to the Azure portal with the template URI pre-filled.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/asr-automation-recovery/README.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy to Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fazure%2Fazure-quickstart-templates%2Fmaster%2Fasr-automation-recovery%2F%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Deploying FreeBSD PHP Website Infrastructure on Azure\nDESCRIPTION: This ARM template deploys a multi-tier web hosting environment on Azure using FreeBSD. It includes a reverse proxy with load balancing, PHP application servers, and a PostgreSQL database server. The infrastructure is distributed across multiple subnets for enhanced security and performance optimization.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/php-pgsql-freebsd-setup/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {},\n  \"variables\": {},\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Network/publicIPAddresses\",\n      \"name\": \"[variables('publicIPAddressName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"publicIPAllocationMethod\": \"[variables('publicIPAddressType')]\"\n      }\n    },\n    {\n      \"type\": \"Microsoft.Network/virtualNetworks\",\n      \"name\": \"[variables('virtualNetworkName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"addressSpace\": {\n          \"addressPrefixes\": [\n            \"[variables('addressPrefix')]\"\n          ]\n        },\n        \"subnets\": [\n          {\n            \"name\": \"[variables('subnet1Name')]\",\n            \"properties\": {\n              \"addressPrefix\": \"[variables('subnet1Prefix')]\"\n            }\n          },\n          {\n            \"name\": \"[variables('subnet2Name')]\",\n            \"properties\": {\n              \"addressPrefix\": \"[variables('subnet2Prefix')]\"\n            }\n          },\n          {\n            \"name\": \"[variables('subnet3Name')]\",\n            \"properties\": {\n              \"addressPrefix\": \"[variables('subnet3Prefix')]\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"type\": \"Microsoft.Network/networkInterfaces\",\n      \"name\": \"[variables('nicName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"ipConfigurations\": [\n          {\n            \"name\": \"ipconfig1\",\n            \"properties\": {\n              \"privateIPAllocationMethod\": \"Dynamic\",\n              \"publicIPAddress\": {\n                \"id\": \"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]\"\n              },\n              \"subnet\": {\n                \"id\": \"[variables('subnet1Ref')]\"\n              }\n            }\n          }\n        ]\n      },\n      \"dependsOn\": [\n        \"[variables('publicIPAddressName')]\",\n        \"[variables('virtualNetworkName')]\"\n      ]\n    },\n    {\n      \"type\": \"Microsoft.Compute/virtualMachines\",\n      \"name\": \"[variables('vmName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"hardwareProfile\": {\n          \"vmSize\": \"[variables('vmSize')]\"\n        },\n        \"osProfile\": {\n          \"computerName\": \"[variables('vmName')]\",\n          \"adminUsername\": \"[parameters('adminUsername')]\",\n          \"adminPassword\": \"[parameters('adminPassword')]\"\n        },\n        \"storageProfile\": {\n          \"imageReference\": {\n            \"publisher\": \"[variables('imagePublisher')]\",\n            \"offer\": \"[variables('imageOffer')]\",\n            \"sku\": \"[parameters('freeBSDOSVersion')]\",\n            \"version\": \"latest\"\n          },\n          \"osDisk\": {\n            \"createOption\": \"FromImage\"\n          }\n        },\n        \"networkProfile\": {\n          \"networkInterfaces\": [\n            {\n              \"id\": \"[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]\"\n            }\n          ]\n        }\n      },\n      \"dependsOn\": [\n        \"[variables('nicName')]\"\n      ]\n    },\n    {\n      \"type\": \"Microsoft.Compute/virtualMachines/extensions\",\n      \"name\": \"[concat(variables('vmName'),'/newuserscript')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"publisher\": \"Microsoft.Azure.Extensions\",\n        \"type\": \"CustomScript\",\n        \"typeHandlerVersion\": \"2.0\",\n        \"autoUpgradeMinorVersion\": true,\n        \"settings\": {\n          \"fileUris\": [\n            \"[variables('customScriptFilePath')]\"\n          ]\n        },\n        \"protectedSettings\": {\n          \"commandToExecute\": \"[concat('sh ', variables('customScriptFileName'), ' ', parameters('installPHPVersion'))]\"\n        }\n      },\n      \"dependsOn\": [\n        \"[variables('vmName')]\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Trust Between Nodes\nDESCRIPTION: Shell commands for setting up SSH key-based authentication between all nodes in the cluster for MHA communication\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-mha-haproxy-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nssh-keygen -t rsa\nssh-copy-id 10.0.0.10\nssh-copy-id 10.0.0.11\nssh-copy-id 10.0.0.12\n```\n\n----------------------------------------\n\nTITLE: LDAP Attribute Resolver Configuration for eduPersonPrincipalName\nDESCRIPTION: XML configuration for mapping LDAP attributes to Shibboleth attributes, specifically for eduPersonPrincipalName. Includes SAML1 and SAML2 attribute encoders.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/shibboleth/shibboleth-cluster-windows/README.md#2025-04-23_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<resolver:AttributeDefinition id=\"eduPersonPrincipalName\" xsi:type=\"ad:Prescoped\" sourceAttributeID=\"uid\">\n    <resolver:Dependency ref=\"myLDAP\" />\n    <resolver:AttributeEncoder xsi:type=\"enc:SAML1ScopedString\" name=\"urn:mace:dir:attribute-def:eduPersonPrincipalName\" encodeType=\"false\" />\n    <resolver:AttributeEncoder xsi:type=\"enc:SAML2ScopedString\" name=\"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\" friendlyName=\"eduPersonPrincipalName\" encodeType=\"false\" />\n</resolver:AttributeDefinition>\n```\n\n----------------------------------------\n\nTITLE: Structuring Bicep Resources for Azure Resource Manager Templates\nDESCRIPTION: This snippet illustrates the recommended structure and property order for defining resources in Bicep format for Azure Resource Manager templates. It includes common properties and their suggested sequence.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_2\n\nLANGUAGE: bicep\nCODE:\n```\n@description\n@batchSize\nresource foo\n  parent\n  scope\n  name\n  location/extendedLocation\n  zones\n  sku\n  kind\n  scale\n  plan\n  identity\n  dependsOn\n  tags\n  properties\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group with Azure CLI\nDESCRIPTION: Azure CLI command to create a new resource group. Replace 'resource-group' with your desired resource group name and 'your location' with the target Azure region.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-windows-aspnet/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Running and Monitoring Data Factory Pipeline using PowerShell Script\nDESCRIPTION: This PowerShell command executes the 'runmonitor.ps1' script to trigger and monitor the Azure Data Factory pipeline created by the ARM template. It requires specifying the Azure resource group name and the data factory name as parameters. This script handles the interaction with the deployed Data Factory service.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-blob-to-mysql-copy/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n.\\runmonitor.ps1 -resourceGroupName \"<name of your resource group>\" -DataFactoryName \"<name of your data factory>\"\n```\n\n----------------------------------------\n\nTITLE: Setting Key Vault Access Policy for Service Principal using Azure CLI\nDESCRIPTION: This Azure CLI command sets an access policy on a specified Azure Key Vault for a given service principal object ID. It grants specific key permissions ('get', 'unwrapKey', 'wrapKey'), which are necessary for the Azure Cosmos DB service principal to interact with the customer-managed key.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault set-policy --name <keyvault-name> --object-id <object-ID> --key-permissions get unwrapKey wrapKey\n```\n\n----------------------------------------\n\nTITLE: Deploying Action Groups and Alert Processing Rules with Bicep\nDESCRIPTION: This snippet details a Bicep template for deploying both Action Groups and Alert Processing Rules to configure Azure Monitor alerts for Recovery Services vaults. The Bicep code provides improved readability and modularity, compiling down to ARM JSON. It requires specifying parameters such as action group names and target receivers (e.g., emails). The result is a reusable and concise infrastructure-as-code definition that can be deployed to automate alert notification setup. Dependencies include Bicep CLI or integration in Azure CLI/PowerShell; limitations are similar to ARM (e.g., permissions, resource quotas).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-create-alert-processing-rule/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam actionGroupName string = 'BackupNotificationActionGroup'\nparam emailReceivers array\n\nresource actionGroup 'Microsoft.Insights/actionGroups@2021-04-01' = {\n  name: actionGroupName\n  location: 'Global'\n  properties: {\n    groupShortName: 'BackupNotify'\n    emailReceivers: emailReceivers\n  }\n}\n\nresource alertProcessingRule 'Microsoft.AlertsManagement/actionRules@2019-05-05-preview' = {\n  name: 'backupAlertProcessingRule'\n  location: 'Global'\n  properties: {\n    scope: [\n      // List of Recovery Services vault resource IDs\n    ]\n    actions: {\n      actionGroups: [\n        {\n          actionGroupId: actionGroup.id\n        }\n      ]\n    }\n    status: 'Enabled'\n  }\n  dependsOn: [\n    actionGroup\n  ]\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Stack HCI Cluster with Azure PowerShell\nDESCRIPTION: This snippet shows how to use Azure PowerShell to deploy an Azure Stack HCI cluster using a Bicep template and parameter file, setting the deployment mode to 'Deploy'.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurestackhci/create-cluster-with-prereqs/README.md#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzResourceGroupDeployment -Name 'hcicluster' -ResourceGroupName <yourResourceGroup> -TemplateFile .\\main.bicep -TemplateParameterFile .\\azuredeploy.parameters.json -TemplateParameterObject @{deploymentMode='Deploy'}\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Principal using Provided Script\nDESCRIPTION: Using the provided script to create an Azure Service Principal with Contributor and User Access Administrator roles. The script handles the creation and appropriate role assignments automatically.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ibm-cloud-pak/ibm-cloud-pak-for-data/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz login\nscripts/createServicePrincipal.sh -r \"Contributor,User Access Administrator\"\n```\n\n----------------------------------------\n\nTITLE: Installing OMSIngestionAPI PowerShell Module for S2D Monitoring\nDESCRIPTION: Installs the OMSIngestionAPI PowerShell module from the PowerShell Gallery, which is required for the S2DMon service to send data to Azure Log Analytics.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/s2d-oms-mgmt-solution/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nInstall-Module -Name OMSIngestionAPI\n```\n\n----------------------------------------\n\nTITLE: Defining Resource Group in Azure ARM JSON\nDESCRIPTION: This JSON template defines a new resource group in Azure. It includes parameters for the resource group name and location, and creates the resource group using these inputs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/subscription-deployments/create-rg/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"rgName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the resourceGroup to create\"\n      }\n    },\n    \"rgLocation\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Location for the resourceGroup\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Resources/resourceGroups\",\n      \"apiVersion\": \"2021-04-01\",\n      \"name\": \"[parameters('rgName')]\",\n      \"location\": \"[parameters('rgLocation')]\",\n      \"properties\": {}\n    }\n  ],\n  \"outputs\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types for Service Bus Deployment\nDESCRIPTION: This snippet lists the specific Azure resource provider types deployed by the ARM template. It indicates that the template manages Service Bus namespaces, topics, and subscriptions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.servicebus/servicebus-create-topic-and-subscription/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n`Tags: Microsoft.ServiceBus/namespaces, topics, Subscriptions`\n```\n\n----------------------------------------\n\nTITLE: Deploying GlassFish on SUSE using Azure CLI\nDESCRIPTION: This CLI command deploys the GlassFish on SUSE template to Azure. It creates a new resource group in the specified location and deploys the template using parameters from a local file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/glassfish-on-suse/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nazure group create -n <ResourceGroupName> -l <Location>\n\nazure group deployment create -f https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/glassfish-on-suse/azuredeploy.json -e <PathToParamtersFile> -g <ResourceGroupName> -n <DeploymentName>\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure PostgreSQL Datastore Tags\nDESCRIPTION: Resource tags configuration for the Azure Machine Learning workspace and associated PostgreSQL datastore deployment. These tags help identify the Microsoft services and components involved in the solution.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-datastore-create-psql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags\": \"Microsoft.MachineLearningServices/workspaces/datastores, Microsoft.Storage/storageAccounts, Microsoft.KeyVault/vaults, Microsoft.Insights/components, Microsoft.MachineLearningServices/workspaces, systemAssigned\"\n```\n\n----------------------------------------\n\nTITLE: Monitoring MySQL Health via Load Balancer\nDESCRIPTION: Commands to check MySQL health by sending HTTP requests to the health probe endpoints exposed through the load balancer. A 200 status code indicates healthy MySQL instances.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-replication/README.md#2025-04-23_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n> wget http://mysqldns.eastus.cloudapp.azure.com:9200\n> wget http://mysqldns.eastus.cloudapp.azure.com:9201\n```\n\n----------------------------------------\n\nTITLE: Monitoring Event Hub Traffic Using Node.js\nDESCRIPTION: Command line usage example for provisioningListener.js script that monitors PubNub and Event Hub traffic. Shows both provision and monitor mode syntax.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/pubnub/pubnub-eventhub-bridge/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngcohen@(master):~/azureSubscribeBridge/monitoring$ node provisioningListener.js\n\nUsage: node provisioningListener.js MODE OPTIONS\n\nMODE can be either provision or monitor\nWhen MODE is provision, OPTIONS are the announcement channel and subscribe key to listen on.\nWhen MODE is monitor, OPTIONS are the ingress and egress connection strings to listen on.\n\nExamples:\nnode provisioningListener.js provision pnAnnounce sub-abc-123\n\nnode provisioningListener.js monitor \"Endpoint=sb://foo-eventhub.servicebus.windows.net/;SharedAccessKeyName=infromsubscriberhub;SharedAccessKey=FY8E/gU4o=;EntityPath=infromsubscriberhub\"  \"Endpoint=sb://bar-eventhub.servicebus.windows.net/;SharedAccessKeyName=outtopnpublisherhub;SharedAccessKey=FY8E/gU4o=;EntityPath=outtopnpublisher\"\n```\n\n----------------------------------------\n\nTITLE: Authorizing Azure Resource Providers for Key Vault Access - PowerShell\nDESCRIPTION: This snippet authorizes the 'Microsoft.CertificateRegistration' and 'Microsoft.Web' resource providers to access secrets in an Azure Key Vault, which is required before deploying the ARM template for App Service Certificates. Dependencies include Azure PowerShell modules installed and authenticated access to the target Azure subscription. Parameters: AZURE_SUBSCRIPTION_ID, KEY_VAULT_NAME, and fixed service principal IDs. Expected input is administrator credentials; output is access policy changes on the specified Key Vault. This is a prerequisite, one-time configuration before deploying certificates via ARM templates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/app-service-certificate-wildcard/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nLogin-AzureRmAccount\nSet-AzureRmContext -SubscriptionId AZURE_SUBSCRIPTION_ID\nSet-AzureRmKeyVaultAccessPolicy -VaultName KEY_VAULT_NAME -ServicePrincipalName f3c21649-0979-4721-ac85-b0216b2cf413 -PermissionsToSecrets get,set,delete\nSet-AzureRmKeyVaultAccessPolicy -VaultName KEY_VAULT_NAME -ServicePrincipalName abfa0a7c-a6b6-4736-8310-5855508787cd -PermissionsToSecrets get\n```\n\n----------------------------------------\n\nTITLE: Verifying Redis Data Replication on Master\nDESCRIPTION: These Redis CLI commands are used on the Redis master to set a key-value pair and retrieve it, demonstrating basic Redis functionality.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/website-cluster-centos/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$/usr/local/redis/src/redis-cli\\n\\nset hello world\\n\\nget hello\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Locations\nDESCRIPTION: Command for retrieving all available Azure regions where resources can be deployed. This helps in selecting a location for the resource group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/datascience/vm-ubuntu-DSVM-GPU-or-CPU/GettingStarted.md#2025-04-23_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\naz account list-locations\n```\n\n----------------------------------------\n\nTITLE: PowerShell Command for Key Vault Configuration\nDESCRIPTION: PowerShell cmdlet to retrieve the keyVaultSecretUrl and keyVaultResourceId required for disk encryption setup.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/encrypt-running-windows-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzureRmKeyVault -VaultName $KeyVaultName -ResourceGroupName $rgname\n```\n\n----------------------------------------\n\nTITLE: Accessing PubSub+ CLI via Docker Container\nDESCRIPTION: Command to access the Solace PubSub+ Command Line Interface (CLI) by executing into the running Docker container named 'solace'.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/solace/solace-message-router/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo docker exec -it solace cli\n```\n\n----------------------------------------\n\nTITLE: Interactive Rebasing to Squash Commits\nDESCRIPTION: Shows how to use interactive rebase to combine multiple commits into one, creating a cleaner commit history before submitting a pull request.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ngit rebase -i HEAD~6\n```\n\n----------------------------------------\n\nTITLE: Deploying an ARM Template for Ubuntu VM\nDESCRIPTION: Command to deploy the ARM template that creates the Ubuntu Server Virtual Machine. This uses the azuredeploy.json file to specify the VM configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/tomcat/openjdk-tomcat-ubuntu-vm/gettingstarted.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz group deployment create --name \"name of your deployment\" --resource-group \"resource-group\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Windows VM Scale Set with IIS WebApp (ARM Template)\nDESCRIPTION: ARM template snippet for deploying a Windows VM Scale Set with IIS and a .NET MVC web application. It includes configuration for autoscale, load balancer, and network settings.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vmss-windows-webapp-dsc-autoscale/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/loadBalancers, Microsoft.Compute/virtualMachineScaleSets, DSC, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Insights/autoscalesettings, ChangeCount\"\n```\n\n----------------------------------------\n\nTITLE: ARM Template Tags Definition\nDESCRIPTION: Resource tags for the Azure ARM template defining the deployed components and associated services.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/obs/obs-studio-stream-vm-chocolatey/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Azure, Virtual Machine, OBS, OBS Studio, Streaming VM, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks/subnets, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, NvidiaGpuDriverWindows, CustomScriptExtension\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resources for Scrapy Deployment\nDESCRIPTION: This JSON snippet defines the Azure resources required for deploying Scrapy on Ubuntu. It includes tags for storage accounts, network components, virtual machines, and custom script extensions. These resources are necessary for setting up the Scrapy environment in Azure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/scrapy/scrapy-on-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: Tags Declaration for Azure Resources\nDESCRIPTION: Resource tags identifying the Azure services and components used in the template deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-multihosting/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/applicationGateways\"\n```\n\n----------------------------------------\n\nTITLE: Amending the Latest Commit in a Pull Request\nDESCRIPTION: Commands to modify the most recent commit instead of creating a new one, useful for small fixes to a pull request, requiring force push.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout NAME_OF_YOUR_BRANCH\n# Make changes, stage all changes for commit\ngit add --all .\n# Commit\ngit commit --amend\n# Push to GitHub\ngit push -f\n```\n\n----------------------------------------\n\nTITLE: Identifying Azure Databricks Workspace Resource Tag\nDESCRIPTION: This tag identifies the Azure resource type being managed or deployed by the template, specifically targeting Azure Databricks workspaces.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-workspace/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Databricks/workspaces`\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Relay Namespace and HybridConnection via ARM Template - JSON\nDESCRIPTION: This snippet refers to an ARM template (not shown inline) that automates the deployment of an Azure Relay namespace with the standard SKU and a HybridConnection. The deployment uses Azure Resource Manager (ARM) in JSON format. To use this template, an active Azure subscription and permissions to create Microsoft.Relay/Namespaces and HybridConnections resources are required. Key parameters include the namespace name and hybrid connection details. The deployment results in fully configured relay resources suitable for hybrid applications. Constraint: the template must be invoked via the Azure Portal or corresponding deployment tools using the provided deployment button or by referencing the JSON template URL directly.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.relay/azure-relay-create-hybridconnection/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // ARM template would typically be referenced here, for example:\n  // https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.relay/azure-relay-create-hybridconnection/azuredeploy.json\n  // The template creates a Relay namespace and a HybridConnection resource.\n  // Parameters and resource definitions would be included in the template JSON file.\n}\n\n```\n\n----------------------------------------\n\nTITLE: Starting Ethereum Mining with Web3.js\nDESCRIPTION: Starts the Ethereum mining process with a single thread to process transactions on a private network. This is necessary to mine contracts and transactions when there are no external miners.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nweb3.miner.start(1)\n```\n\n----------------------------------------\n\nTITLE: Identifying Azure Resource Types for Databricks VNet\nDESCRIPTION: This snippet lists the Azure Resource Manager resource types associated with the Virtual Network created by this template: Virtual Networks (Microsoft.Network/virtualNetworks) and Network Security Groups (Microsoft.Network/networkSecurityGroups). These tags help categorize the resources deployed by the ARM template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-vnet-for-vnet-injection/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/virtualNetworks, Microsoft.Network/networkSecurityGroups`\n```\n\n----------------------------------------\n\nTITLE: Identifying Azure Resource Types for Deployment\nDESCRIPTION: Lists the specific Azure resource provider namespaces and resource types involved in this template deployment: `Microsoft.DataLakeStore/accounts` for the Data Lake Store account and `Microsoft.DataLakeAnalytics/accounts` for the Data Lake Analytics account. These tags help categorize the template within the Azure Quickstart Templates repository.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datalakestore/data-lake-analytics/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.DataLakeStore/accounts, Microsoft.DataLakeAnalytics/accounts`\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template for Web App with PostgreSQL\nDESCRIPTION: This code snippet shows the buttons for deploying the ARM template to Azure and Azure US Gov, as well as visualizing it. It uses markdown syntax to create clickable image links.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-managed-postgresql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](\"https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.web%2Fwebapp-managed-postgresql%2Fazuredeploy.json\")\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](\"https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.web%2Fwebapp-managed-postgresql%2Fazuredeploy.json\")\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](\"http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.web%2Fwebapp-managed-postgresql%2Fazuredeploy.json\")\n```\n\n----------------------------------------\n\nTITLE: Updating S2DMon Service in PowerShell\nDESCRIPTION: These PowerShell commands are used to update the S2DMon service. They stop and remove the existing service, then set up and start the new version of the service.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/s2d-oms-mgmt-solution/README.md#2025-04-23_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\nC:\\temp\\s2dmon.ps1 -Stop\nC:\\temp\\s2dmon.ps1 -Remove\nC:\\temp\\s2dmon.ps1 -Setup -OMSWorkspaceCreds (Get-Credential)\nC:\\temp\\s2dmon.ps1 -Start\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template for Cloud Foundry Monitoring\nDESCRIPTION: ARM template parameters for deploying the Cloud Foundry monitoring solution. Key parameters include workspace name, region, pricing model, and system metrics provider selection.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/oms-cloudfoundry-solution/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Subscription\": \"<subscription-id>\",\n    \"Resource group\": \"<resource-group-name>\",\n    \"Location\": \"<region>\",\n    \"OMS Workspace Name\": \"<workspace-name>\",\n    \"OMS Workspace Region\": \"<workspace-region>\",\n    \"Azure Monitor Pricing Model\": \"<pricing-model>\",\n    \"OMS Workspace Sku\": \"<workspace-sku>\",\n    \"System Metrics Provider\": \"<metrics-provider>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Front Door Health Probes - ARM Tag Declaration\nDESCRIPTION: Resource tag declaration showing the Microsoft.Network/frontDoors resource type used in the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-health-probes/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/frontDoors\n```\n\n----------------------------------------\n\nTITLE: Creating Workspace with Private Endpoint using PowerShell\nDESCRIPTION: This PowerShell command creates an Azure ML workspace with private endpoint connectivity. It includes variations for auto-approval endpoints, custom virtual networks, and using existing VNETs for network isolation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-vnet/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n# The deployment is only valid in regions which support private endpoints. For manual approval private endpoint, just set privateEndpointType=\"ManualApproval\"\n\n# Create a workspace with private endpoint\nNew-AzResourceGroupDeployment -ResourceGroupName \"rg\" -TemplateFile \".\\azuredeploy.json\" -workspaceName \"workspaceName\" -location \"westus2\" -Name \"deploymentname\" -privateEndpointType \"AutoApproval\"\n\n# Create a workspace with private endpoint with user specified virtual network name\nNew-AzResourceGroupDeployment -ResourceGroupName \"rg\" -TemplateFile \".\\azuredeploy.json\" -workspaceName \"workspaceName\" -location \"westus2\" -Name \"deploymentname\" -privateEndpointType \"AutoApproval\" -vnetName \"vnet\" -subnetName \"subnet\"\n\n# Create a workspace with private endpoint with user specified existing vnet\nNew-AzResourceGroupDeployment -ResourceGroupName \"rg\" -TemplateFile \".\\azuredeploy.json\" -workspaceName \"workspaceName\" -location \"westus2\" -Name \"deploymentname\" -privateEndpointType \"AutoApproval\" -vnetName \"vnet\" -vnetOption \"existing\" -vnetResourceGroupName \"rg\" -subnetName \"subnet\" -subnetOption \"existing\"\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Resource Group using Azure CLI - Bash\nDESCRIPTION: This command creates a new Azure Resource Group with a user-provided name and location. Replace \\\"resource-group\\\" and \\\"your location\\\" with appropriate values. The resource group acts as a container for all other resources, and must exist prior to deploying the Function App.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/app-function/GettingStarted-FuncApp.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Role in Azure ARM Template\nDESCRIPTION: This snippet shows the structure of an ARM template for creating a custom role definition. It includes the role name, description, assignable scopes, and allowed actions. The template uses a GUID for the role name to ensure uniqueness.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/subscription-deployments/create-role-def/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"resources\": [\n  {\n    \"type\": \"Microsoft.Authorization/roleDefinitions\",\n    \"apiVersion\": \"2018-01-01-preview\",\n    \"name\": \"[guid(parameters('roleDefName'))]',\n    \"properties\": {\n      \"roleName\": \"[parameters('roleDefName')]',\n      \"description\": \"Subscription Level Deployment of a Role Definition\",\n      \"type\": \"customRole\",\n      \"isCustom\": true,\n      \"permissions\": [\n        {\n          \"actions\": [\n            \"Microsoft.Resources/subscriptions/resourceGroups/read\"\n          ],\n          \"notActions\": []\n        }\n      ],\n      \"assignableScopes\": [\n        \"[subscription().id]\"\n      ]\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription with Azure CLI\nDESCRIPTION: Command to set the correct Azure subscription for deployment using Azure CLI. Replace 'your subscription id' with your actual subscription ID.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-windows-aspnet/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Key Vault Managed HSM using Bicep\nDESCRIPTION: This Bicep snippet defines the resource for creating an Azure Key Vault Managed HSM. It specifies the resource type, name, location, SKU, and initial admin object IDs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.keyvault/managed-hsm-create/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nresource managedHSM 'Microsoft.KeyVault/managedHSMs@2021-04-01-preview' = {\n  name: managedHsmName\n  location: location\n  sku: {\n    family: 'B'\n    name: 'Standard_B1'\n  }\n  properties: {\n    tenantId: subscription().tenantId\n    initialAdminObjectIds: initialAdminObjectIds\n    enableSoftDelete: true\n    softDeleteRetentionInDays: 90\n    enablePurgeProtection: true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure App Configuration Store with Feature Flag\nDESCRIPTION: This code snippet represents the ARM template deployment buttons for creating an Azure App Configuration store with a feature flag. It provides options to deploy to Azure, Azure US Gov, and visualize the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.appconfiguration/app-configuration-store-ff/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.appconfiguration%2Fapp-configuration-store-ff%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.appconfiguration%2Fapp-configuration-store-ff%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.appconfiguration%2Fapp-configuration-store-ff%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types for VNET-to-VNET BGP Connection\nDESCRIPTION: This snippet lists the Azure resource types that are deployed by the associated ARM template. It includes resources for virtual networks, public IP addresses, virtual network gateways, and the connection between them, indicating the scope of infrastructure managed by the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/vnet-to-vnet-bgp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworkGateways, Microsoft.Network/connections`\n```\n\n----------------------------------------\n\nTITLE: Listing Associated Azure Resource Types\nDESCRIPTION: Provides a list of Azure resource type tags relevant to the Azure Virtual Desktop deployment template. This includes resources for networking (virtual networks, subnets, network interfaces), desktop virtualization (host pools, application groups, workspaces), compute (virtual machines), and extensions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.desktopvirtualization/azure-virtual-desktop/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n`Tags: network, virtual network, subnet, host pool, application group, workspace, virtual machine network interface, virtual machine, virtual machine extensions, Microsoft.Network/virtualNetworks, Microsoft.Network/virtualNetworks/subnets, Microsoft.DesktopVirtualization/hostPools@2021, Microsoft.DesktopVirtualization/applicationGroups, Microsoft.DesktopVirtualization/workspaces, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions`\n```\n\n----------------------------------------\n\nTITLE: Accepting Marketplace Terms for RHEL BYOS Image using Azure CLI\nDESCRIPTION: Azure CLI command to accept the Marketplace Terms and Conditions for the RHEL 8.6 BYOS image. This is a prerequisite for deploying RHEL VMs using the BYOS model.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-standalone-rhel/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz vm image terms accept --publisher redhat --offer rhel-byos --plan rhel-lvm86\n```\n\n----------------------------------------\n\nTITLE: Visualizing ARM Template with ARMViz\nDESCRIPTION: This code snippet provides a button to visualize the ARM template using ARMViz, a tool for graphically representing Azure resource deployments defined in ARM templates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-managed-mysql/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.web%2Fwebapp-linux-managed-mysql%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Front Door with API Management\nDESCRIPTION: The ARM template deploys a complete infrastructure including virtual network, API Management instance with sample APIs, Front Door configuration with WAF policy, and monitoring setup. It demonstrates secure API deployment with edge caching and DDoS protection.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-api-management/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nNo direct code snippets were provided in the content. The content describes an ARM template deployment but doesn't show the actual template code.\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group - Azure CLI - Bash\nDESCRIPTION: Creates a new Azure Resource Group to logically organize related resources for deployment. Requires an authenticated Azure CLI session. Parameters include group name (\\\"IoTEdgeResources\\\") and Azure region location (\\\"your_location\\\"). Output confirms success or details errors if the creation fails.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iot-iothub-edgeemulator-vm/GettingStarted-Iot-EdgeEmulator.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name IoTEdgeResources --location your_location\n```\n\n----------------------------------------\n\nTITLE: Invoking Postman Echo API via Azure Front Door using Batch/Shell\nDESCRIPTION: Provides an example URL template for making a GET request to the Postman Echo API hosted behind Azure Front Door. The URL includes placeholders for the Front Door name and the API Management subscription key, along with sample query parameters. This is typically used with command-line tools like curl.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-api-management/README.md#2025-04-23_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nhttps://front-door-name.azurefd.net/postman-echo/get?color=red&vehicle=car&subscription-key=apim-subscription-key\n```\n\n----------------------------------------\n\nTITLE: Verifying vSensor Configuration with Confconsole in Bash\nDESCRIPTION: Command to access the vSensor configuration console after successful deployment. This tool allows you to verify the vSensor setup and perform health checks, with further options detailed in the Darktrace Customer Portal.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/darktrace/darktrace-vsensor-autoscaling/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo confconsole\n```\n\n----------------------------------------\n\nTITLE: Editing and Building a .NET Core Application on Ubuntu\nDESCRIPTION: Commands for editing the sample C# code with nano (which has syntax highlighting enabled for C#), building the application with the .NET Development Utility (DNU), and running it with DNX targeting the .NET Core 5.0 framework.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/dnx/dnx-on-ubuntu/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnano ~/sampleConsoleApp/main.cs\ndnu build --framework dnxcore50\ndnx run\n```\n\n----------------------------------------\n\nTITLE: Settings Configuration for Prerequisites Deployment\nDESCRIPTION: JSON configuration for deploying prerequisites to the same resource group as the main template. The PrereqResourceGroupNameSuffix property controls the resource group naming behavior.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md#2025-04-23_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"comment\": \"If prereqs need to be deployed to the same resourceGroup as the rest of the sample set the PrereqResourceGroupNameSuffix property to an empty string - otherwise you can omit this file\",\n    \"PrereqResourceGroupNameSuffix\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Logging in to Azure using Azure PowerShell\nDESCRIPTION: This snippet logs the user into Azure using Azure PowerShell. It is a required authentication step before performing any resource management or pipeline monitoring actions. The command initializes an authenticated session for subsequent deployment and monitoring scripts, and requires the user to enter Azure credentials. Output and errors related to authentication are handled by PowerShell.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-blob-to-postgresql-copy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nLogin-AzureRmAccount\n```\n\n----------------------------------------\n\nTITLE: Attribute Filter Policy Configuration\nDESCRIPTION: XML configuration for the attribute filter policy that determines which attributes are released to service providers.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/shibboleth/shibboleth-cluster-windows/README.md#2025-04-23_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<AttributeFilterPolicy id=\"example1\">\n<PolicyRequirementRule xsi:type=\"ANY\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Application Insights Web Test Parameters in JSON\nDESCRIPTION: JSON structure that defines parameters for an Application Insights web test including the test URL, expected response code, frequency, timeout, failure threshold, and test locations. The parameter object is passed to the Azure Resource Manager template to create the tests.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/dynamic-web-tests/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"test1\",\n    \"url\": \"http://www.microsoft.com\",\n    \"expected\": 200,\n    \"frequency_secs\": 300,\n    \"timeout_secs\": 30,\n    \"failedLocationCount\": 1,\n    \"description\": \"a description for test1\",\n    \"guid\": \"cc1c4b95-0a39-48ce-9c7b-fa41f0fc0bee\",\n    \"locations\": [{\n        \"Id\": \"us-il-ch1-azr\"\n\t }]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Open edX Fullstack on Ubuntu VM using Azure ARM Template\nDESCRIPTION: This ARM template deploys an Ubuntu VM and installs Open edX fullstack (Ficus). It sets up necessary Azure resources including storage, networking, and security groups. The template uses a custom script extension to install and configure Open edX after VM deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/opendx/openedx-fullstack-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkSecurityGroups, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Service Bus Namespace and Authorization Rules using Azure ARM Template - JSON\nDESCRIPTION: This snippet represents an Azure Resource Manager (ARM) template written in JSON for deploying an Azure Service Bus namespace with a queue and defining authorization rules for both resources. The template requires no client-side dependencies, but must be deployed via the Azure portal, Azure CLI, or an ARM deployment pipeline. Parameters typically include the namespace name, queue properties, and specified rules, with expected output being the created resources in the target Azure subscription. The solution assumes the user has contributor rights to the subscription and may be limited by regional or quota constraints.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.servicebus/servicebus-create-authrule-namespace-and-queue/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // Azure ARM template parameters and resource definitions go here (not included in prompt)\n  // Typical contents include parameters, variables, resources for:\n  // - Microsoft.ServiceBus/namespaces\n  // - Microsoft.ServiceBus/namespaces/Queues\n  // - Microsoft.ServiceBus/namespaces/AuthorizationRules\n  // - Microsoft.ServiceBus/namespaces/Queues/AuthorizationRules\n  // For full sample, see: https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.servicebus/servicebus-create-authrule-namespace-and-queue/azuredeploy.json\n}\n\n```\n\n----------------------------------------\n\nTITLE: Specifying Resource Types for Managed Application Deployment - Azure Resource Manager - JSON\nDESCRIPTION: This code snippet lists the Azure resource types involved in the managed application deployment process. It references the resource provider namespaces and resource types for the application definition, application instance, and the storage account deployed within the managed application. This is a documentation-level snippet that informs users about the core resources to expect when working with the template. Expected input is as shown (static tag, not parameterized), and no output is produced. There are no dependencies or limitations, but users must have an Azure subscription with access to the Microsoft.Solutions and Microsoft.Storage resource providers.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.solutions/managed-application/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Solutions/applicationDefinitions, Microsoft.Solutions/applications, Microsoft.Storage/storageAccounts\"\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Configuration for Azure Firewall Premium\nDESCRIPTION: Resource tags configuration showing all the Microsoft Azure services and components used in the template deployment, including networking, compute, security, and identity resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azurefirewall-premium/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Resources/deploymentScripts, Microsoft.ManagedIdentity/userAssignedIdentities, Microsoft.KeyVault/vaults, Microsoft.KeyVault/vaults/secrets, Microsoft.Network/routeTables, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScriptExtension, Microsoft.Network/publicIpAddresses, Microsoft.Network/bastionHosts, Microsoft.Network/firewallPolicies, UserAssigned, Microsoft.Network/firewallPolicies/ruleCollectionGroups, Allow, Deny, Microsoft.Network/azureFirewalls\n```\n\n----------------------------------------\n\nTITLE: Configuring VM Image Reference with Marketplace Plan in Bicep\nDESCRIPTION: This snippet demonstrates how to configure a Windows VM resource in Bicep, including the plan and imageReference properties for a Marketplace image. It shows the correct structure for specifying publisher, offer, SKU, and version information.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_19\n\nLANGUAGE: bicep\nCODE:\n```\nresource windowsVM 'Microsoft.Compute/virtualMachines@2020-12-01' = {\n  name: 'name'\n  location: location\n  plan: {\n    name: 'ContosoSKU'\n    publisher: 'Contoso'\n    product: 'ContosoProduct'\n  }\n  properties: {\n    storageProfile: {\n      imageReference: {\n        publisher: 'Contoso'\n        offer: 'ContosoProduct'\n        sku: 'ContosoSKU'\n        version: 'latest'\n      }\n    }\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Locations\nDESCRIPTION: Command to list all available Azure locations (regions) for resource deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/postgre/postgresql-standalone-server-ubuntu/GettingStarted.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\naz account list-locations\n```\n\n----------------------------------------\n\nTITLE: Deploying MongoDB on CentOS VM using Azure ARM Template\nDESCRIPTION: This ARM template deploys a CentOS VM with MongoDB installed. It includes the necessary Azure resources such as Storage Account, Virtual Network, Public IP, and Network Interface. The template uses the Custom Script Linux Extension to install and configure MongoDB on the VM.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mongo/mongodb-on-centos/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\n  \"Microsoft.Network/publicIPAddresses\": \"\",\n  \"Microsoft.Network/virtualNetworks\": \"\",\n  \"Microsoft.Network/networkInterfaces\": \"\",\n  \"Microsoft.Compute/virtualMachines\": \"\",\n  \"Microsoft.Compute/virtualMachines/extensions\": \"\",\n  \"CustomScript\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition for Azure Front Door Deployment\nDESCRIPTION: Defines the Azure resource tags for the Front Door deployment template, specifying the Microsoft CDN profiles and associated components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-custom-domain-customer-certificate/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Cdn/profiles, Microsoft.Cdn/profiles/afdEndpoints, Microsoft.Cdn/profiles/originGroups, Microsoft.Cdn/profiles/secrets, Microsoft.Cdn/profiles/customDomains, Microsoft.Cdn/profiles/originGroups/origins, Microsoft.Cdn/profiles/afdEndpoints/routes\n```\n\n----------------------------------------\n\nTITLE: Configuring HostingEnvironments for ASEv3\nDESCRIPTION: This snippet shows the key properties used to configure the App Service Environment (ASEv3) in the HostingEnvironments section of the template. It includes settings for ASE name, dedicated host count, zone redundancy, load balancer mode, and custom parameters for private DNS and existing VNet usage.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-asp-app-on-asev3-create/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"aseName\": \"string\",\n  \"dedicatedHostCount\": \"string\",\n  \"zoneRedundant\": false,\n  \"internalLoadBalancingMode\": 0,\n  \"createPrivateDNS\": false,\n  \"useExistingVnetandSubnet\": false,\n  \"vNetResourceGroupName\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types for HDInsight Kafka with Schema Registry Deployment (Metadata)\nDESCRIPTION: Lists the primary Azure resource types deployed by the associated ARM template (azuredeploy.json). These include storage accounts for data persistence, the HDInsight cluster itself, and cluster applications, which likely encompass the Schema Registry edge node configuration. This indicates the core Azure components managed by the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-kafka-with-edge-schema-registry/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Storage/storageAccounts, Microsoft.HDInsight/clusters, Microsoft.HDInsight/clusters/applications`\n```\n\n----------------------------------------\n\nTITLE: Defining KQL Script for Data Processing\nDESCRIPTION: This KQL script defines a simple query to filter events where the name is 'John'. It is used in the Bicep template to set up data processing rules in the Azure Data Explorer database.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.kusto/kusto-event-hub/README.md#2025-04-23_snippet_1\n\nLANGUAGE: kql\nCODE:\n```\nEvents\n| where name == \"John\"\n```\n\n----------------------------------------\n\nTITLE: Monitoring Node Status\nDESCRIPTION: Commands for monitoring master-slave replication and SSH connectivity between nodes\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-mha-haproxy-ubuntu/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nmasterha_check_ssh --conf=/etc/app1.cnf\nmasterha_check_repl --conf=/etc/app1.cnf\n```\n\n----------------------------------------\n\nTITLE: Cloning a GitHub Repository\nDESCRIPTION: Command to clone a forked repository to a local machine. This downloads the entire repository including its history and information about its origin.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/{YOUR_USERNAME}/azure-quickstart-templates\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Tags for OMS Solution Deployment\nDESCRIPTION: This code snippet lists the Azure resource tags associated with the OMS solution deployment. It includes tags for PowerShell, various Azure resources, and specific configuration elements.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/oms-servicebus-solution/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nTags: PowerShell, Microsoft.OperationalInsights/workspaces, views, Blade, OverviewTile, Microsoft.Automation/automationAccounts, variables, Modules, runbooks, schedules, jobSchedules, string, Microsoft.OperationsManagement/solutions\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription with Azure CLI\nDESCRIPTION: Command to set the active Azure subscription using the Azure CLI. This is necessary before creating resources to ensure they are deployed to the correct subscription.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ubuntu-desktop-gnome-rdp/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration\nDESCRIPTION: Tag configuration showing the technologies and components involved in the deployment including Event Hubs, PubNub, and Node.js Web Jobs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/pubnub/pubnub-eventhub-bridge/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nEvent Hubs, Event Hub, Realtime, PubNub, PubSub, Pub/Sub, Publish/Subscribe, Node.js, Web Jobs\n```\n\n----------------------------------------\n\nTITLE: Note on Additional Storage Account Creation for Boot Diagnostics in Azure\nDESCRIPTION: This note warns users that the template creates an additional Standard_GRS storage account for enabling boot diagnostics each time it's executed. To avoid hitting storage account limits, it's recommended to delete the storage account when the VM is deleted.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-efficientip-vhd/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nNOTE\n\nThis template will create an additional Standard_GRS storage account for enabling boot diagnostics each time you execute this template. To avoid running into storage account limits, it's best to delete the storage account when the VM is deleted.\n```\n\n----------------------------------------\n\nTITLE: Creating a Resource Group with Azure CLI\nDESCRIPTION: Command to create a new Resource Group in Azure using the Azure CLI. A Resource Group is a container that holds related resources for an Azure solution.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ubuntu-desktop-gnome-rdp/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Creating Kafka Topic\nDESCRIPTION: Kafka command to create a new topic with replication factor 2 and 1 partition. This command is run on a Kafka broker node after deployment is complete.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/kafka/kafka-ubuntu-multidisks/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbin/kafka-topics.sh --create --zookeeper 10.0.1.10:2181  --replication-factor 2 --partitions 1 --topic my-replicated-topic1\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Command for RHEL BYOS Image List\nDESCRIPTION: Command to verify availability of RHEL BYOS images in your Azure subscription using Azure CLI.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-clustered-multivm-rhel/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz vm image list --offer rhel-byos --all\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Tags for DevTest Lab Template\nDESCRIPTION: This snippet lists the Azure resource provider tags associated with the ARM template. These tags (`Microsoft.DevTestLab/labs`, `virtualNetworks`, `virtualMachines`) categorize the primary resources managed by the template, namely the DevTest Lab itself, its virtual network, and the virtual machines within it.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devtestlab/dtl-create-lab-windows-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.DevTestLab/labs, virtualNetworks, virtualMachines`\n```\n\n----------------------------------------\n\nTITLE: Azure Stack HCI Resource Tag Definition\nDESCRIPTION: Resource tag definition specifying the Azure Stack HCI cluster resource type and identifier\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurestackhci/upgrade-cluster/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.AzureStackHCI/clusters, hci\"\n```\n\n----------------------------------------\n\nTITLE: Checking MySQL Health via Internal Health Probe\nDESCRIPTION: Commands to verify MySQL health status by accessing the internal health probe URLs. A 200 status code response indicates that MySQL is healthy.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-replication/README.md#2025-04-23_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n> wget http://10.0.1.4:9200\n> wget http://10.0.1.5:9200\n```\n\n----------------------------------------\n\nTITLE: Metadata Provider Configuration for TestShib\nDESCRIPTION: XML configuration for setting up TestShib as a Service Provider metadata source in Shibboleth IDP.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/shibboleth/shibboleth-singlevm-ubuntu/README.md#2025-04-23_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<MetadataProvider id=\"HTTPMetadataTESTSHIB\"\n    xsi:type=\"FileBackedHTTPMetadataProvider\"\n    backingFile=\"%{idp.home}/metadata/testshib-providers.xml\"\n    metadataURL=\"http://www.testshib.org/metadata/testshib-providers.xml\"/>\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition in JSON\nDESCRIPTION: Resource tags definition showing the Microsoft services and components used in the template deployment including networking, storage, compute, and firewall resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azurefirewall-create-with-firewallpolicy-explicitproxy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/ipGroups, Microsoft.Storage/storageAccounts, Microsoft.Network/routeTables, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Network/firewallPolicies, ruleCollectionGroups, Deny, Microsoft.Network/azureFirewalls\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags declaration showing the Microsoft services and components used in the template deployment including Storage, CDN, and managed identities.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-storage-static-website/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Resources/deployments, Microsoft.Storage/storageAccounts, Microsoft.ManagedIdentity/userAssignedIdentities, Microsoft.Authorization/roleAssignments, Microsoft.Resources/deploymentScripts, UserAssigned, Microsoft.Cdn/profiles, Microsoft.Cdn/profiles/afdEndpoints, Microsoft.Cdn/profiles/originGroups, Microsoft.Cdn/profiles/originGroups/origins, Microsoft.Cdn/profiles/afdEndpoints/routes\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription with Azure CLI\nDESCRIPTION: This command sets the active Azure subscription using Azure CLI. It requires specifying the subscription ID.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.blockchain/blockchain-asaservice/GettingStarted-blockchain.md#2025-04-23_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition for SAP LaMa Template\nDESCRIPTION: Resource tags specification for the Azure deployment template, listing the core Azure resources and extensions used in the SAP LaMa setup.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-lama-apps/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, [variables('cseExtName')], Microsoft.Resources/deployments\"\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition for ExpressRoute Template\nDESCRIPTION: Defines the resource tags for the ExpressRoute deployment template, including references to ExpressRoute, private peering, VNet, and ARM template specifications.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/expressroute-private-peering-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ntags: ExpressRoute, private peering, VNet, ARM template\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Business Continuity Alert Rule Template with ARM\nDESCRIPTION: ARM template deployment commands for creating an alert rule to monitor latest recovery point age in Azure Business Continuity. The template creates the alert rule, user-assigned MSI, and assigns necessary permissions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurebusinesscontinuity/business-continuity-latest-recovery-point-age-alerts/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.azurebusinesscontinuity%2Fbusiness-continuity-latest-recovery-point-age-alerts%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.azurebusinesscontinuity%2Fbusiness-continuity-latest-recovery-point-age-alerts%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.azurebusinesscontinuity%2Fbusiness-continuity-latest-recovery-point-age-alerts%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Resource Types in Azure Custom Provider (JSON)\nDESCRIPTION: This JSON snippet shows the `resourceTypes` property within an Azure Custom Resource Provider definition in an ARM template. It defines a resource type named `customResources` with `Proxy` routing, meaning requests are forwarded to the specified `endpoint`. The endpoint is dynamically retrieved using `listSecrets` on an Azure Function's HTTP trigger.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.customproviders/custom-rp-with-function/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"resourceTypes\": [\n                    {\n                        \"name\": \"customResources\",\n                        \"routingType\": \"Proxy\",\n                        \"endpoint\": \"[listSecrets(resourceId('Microsoft.Web/sites/functions', parameters('funcName'), 'HttpTrigger1'), '2018-02-01').trigger_url]\"\n                    }\n                 ]\n```\n\n----------------------------------------\n\nTITLE: Azure Redis Enterprise Vector DB Tags Declaration\nDESCRIPTION: Deployment template tags specifying the Microsoft Cache/Redis resource type for Azure Resource Manager.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cache/redis-enterprise-vectordb/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Cache/redis\n```\n\n----------------------------------------\n\nTITLE: Formatting JSON Message for Logic App Testing in Azure\nDESCRIPTION: This JSON structure represents the format of the message to be sent when testing the Logic App. It includes customer information, product details, and quantity.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.logic/logic-app-correlation-using-servicebus/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Customer\":\"Eldert Grootenboer\",\n    \"Product\":\"Surface Book 2\",\n    \"Amount\":\"1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring VM Image Reference with Marketplace Plan in JSON\nDESCRIPTION: This JSON snippet shows the configuration of a VM resource with a Marketplace image plan. It includes the apiVersion, resource type, name, location, plan details, and imageReference properties within the storageProfile.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"apiVersion\": \"2017-12-01\",\n  \"type\": \"Microsoft.Compute/virtualMachines\",\n  \"name\": \"[parameters('vmName')]\",\n  \"location\": \"[parameters('location')]\",\n  \"plan\": {\n    \"name\": \"ContosoSKU\",\n    \"publisher\":\"Contoso\",\n    \"product\":\"ContosoProduct\"\n  },\n  \"properties\": {\n    \"storageProfile\": {\n      \"imageReference\": {\n      \"publisher\": \"Contoso\",\n        \"offer\": \"ContosoProduct\",\n        \"sku\": \"ContosoSKU\",\n        \"version\": \"latest\"\n      }\n      ...\n    }\n    ...  \n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Force Pushing After Rebasing\nDESCRIPTION: Command to push rebased changes to GitHub, using force flag to overwrite the remote history after squashing commits locally.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ngit push -f\n```\n\n----------------------------------------\n\nTITLE: Deploying Custom VM from New Image using PowerShell\nDESCRIPTION: This PowerShell script demonstrates how to deploy a custom virtual machine using the newly created image. It retrieves the image definition and creates a new VM, prompting for username and password for the local admin account.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/imagebuilder-windowsbaseline/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$i = Get-AzGalleryImageDefinition -ResourceGroupName '<myResourceGroup>' -GalleryName '<myGalleryName>' -Name 'Win2019_BaselineDefinition'\n\n# This command will prompt for username/password to use in the machine for a local admin account\nNew-AzVM -name '<myVMName>' -Image $i.id\n```\n\n----------------------------------------\n\nTITLE: Defining ARM Template Tags for Azure Storage Resources\nDESCRIPTION: This snippet lists the specific Azure Resource Manager (ARM) template tags associated with the resources created by this template. These tags help categorize and identify the deployed Azure Storage account and its blob container service.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage/storage-blob-container/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Storage/storageAccounts, Microsoft.Storage/storageAccounts/blobServices/containers`\n```\n\n----------------------------------------\n\nTITLE: Deploying Ubuntu VM with Puppet Agent using Azure Portal\nDESCRIPTION: Instructions for deploying the template using the Azure Portal. This method uses a 'Deploy to Azure' button for easy deployment through the web interface.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/puppet/puppet-agent-linux/README.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nClick the \"Deploy to Azure\" button.\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group using Azure CLI\nDESCRIPTION: Command to create a new resource group in Azure with specified name and location\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cognitiveservices/cognitive-services-Computer-vision-API/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kubernetes Services\nDESCRIPTION: Command to list all services in the Kubernetes cluster. This helps in identifying the external IP for accessing the deployed services.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-container/README.md#2025-04-23_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nkubectl get service\n```\n\n----------------------------------------\n\nTITLE: Tag Definition for Azure Resource Manager Template\nDESCRIPTION: Resource tags for the ARM template identifying the Azure services and components used in the deployment, including API Management service, workspaces, and diagnostic settings.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.apimanagement/api-management-logs-oms-integration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.ApiManagement/service, Microsoft.OperationalInsights/workspaces, Microsoft.ApiManagement/service/providers/diagnosticSettings\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure ML Data Asset Template\nDESCRIPTION: ARM template tags specifying the resources and configurations for creating an Azure ML data asset from a file URI. Includes references to storage accounts, key vaults, and application insights components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-dataasset-create-from-file-uri/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.MachineLearningServices/workspaces/datastores, Microsoft.Storage/storageAccounts, Microsoft.KeyVault/vaults, Microsoft.Insights/components, Microsoft.MachineLearningServices/workspaces, systemAssigned\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Chef Cluster Using PowerShell\nDESCRIPTION: PowerShell command to deploy the Chef HA cluster template with artifacts staging to Azure. Requires specifying the resource group location and artifacts directory.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/chef-ha-cluster/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n.\\Deploy-AzureResourceGroup.ps1 -ResourceGroupLocation 'eastus' -ArtifactsStagingDirectory 'chef-ha-cluster' UploadArtifacts\n```\n\n----------------------------------------\n\nTITLE: Deploying AKS with Dynamic IP Allocation using Bash Script\nDESCRIPTION: Reference to a bash script (deploy.sh) that can be used to deploy the AKS topology with Dynamic IP Allocation. The script handles the installation of necessary preview features and deployment of the ARM template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/aks-nat-agic/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndeploy.sh\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Declaration\nDESCRIPTION: Resource tags specification for Azure Compute Gallery components including galleries, images, versions, and disks.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/sig-image-version-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Compute/galleries/images/versions, Microsoft.Compute/galleries, images, Microsoft.Compute/disks, Microsoft.Compute/images\n```\n\n----------------------------------------\n\nTITLE: Listing Available RHEL BYOS Images using Azure CLI\nDESCRIPTION: Azure CLI command to verify the availability of RHEL BYOS images in your subscription. This helps ensure your subscription is properly set up for RHEL BYOS deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-standalone-rhel/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz vm image list --offer rhel-byos --all\n```\n\n----------------------------------------\n\nTITLE: Defining Output Data Format after Hive Transformation (Text)\nDESCRIPTION: This text snippet shows the format of the data after being processed by the HDInsight Hive activity. The Hive script (`combinefirstandlast.hql`) transforms the input data (last name, first name) into an output format where each line contains the full name (first name followed by last name). This transformed data is stored in Azure Blob Storage before the final Copy activity moves it to the Azure SQL database.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-ftp-hive-blob/README.md#2025-04-23_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nJohn Doe\nJane Doe\nBill Gates\nPaul Allen\n```\n\n----------------------------------------\n\nTITLE: Azure Template Product Configuration\nDESCRIPTION: Defines the template configuration including supported Azure products and deployment type specification.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-custom-domain-customer-certificate/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nproducts:\n- azure\n- azure-resource-manager\n```\n\n----------------------------------------\n\nTITLE: Visualizing Azure Game Developer VM ARM Template\nDESCRIPTION: This code snippet provides a button to visualize the ARM template for the Azure Game Developer VM using the ARM Visualizer tool. It links to the ARMViz website with the template URI as a parameter.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/azure-gamedev/gamedev-vm/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fazure-gamedev%2Fgamedev-vm%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Defining WAF Policy Tags for Azure Front Door\nDESCRIPTION: Resource tag definition showing Microsoft.Network namespace for Front Door WAF policies deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-waf-http-params/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/FrontDoorWebApplicationFirewallPolicies\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition for Azure Front Door and API Management\nDESCRIPTION: Resource tags defining the Microsoft Azure services and components used in the deployment template including API Management, networking, and CDN resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-api-management-external/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTags: Microsoft.ApiManagement/service/namedValues, Microsoft.ApiManagement/service/policies, Microsoft.Resources/deployments, Microsoft.Network/virtualNetworks, Microsoft.Network/networkSecurityGroups, Microsoft.ApiManagement/service, Microsoft.Cdn/profiles, Microsoft.Cdn/profiles/afdEndpoints, Microsoft.Cdn/profiles/originGroups, Microsoft.Cdn/profiles/originGroups/origins, Microsoft.Cdn/profiles/afdEndpoints/routes\n```\n\n----------------------------------------\n\nTITLE: Retrieving Key Vault Resource ID with Azure CLI\nDESCRIPTION: This Azure CLI command retrieves the details of a Key Vault, including its resource ID which is needed for the CMK workspace template parameter.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk-service-side-encryption/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault show --name <keyvault-name>\n```\n\n----------------------------------------\n\nTITLE: Starting Nylas API Service\nDESCRIPTION: Command to start the Nylas API service which provides REST endpoints for accessing synchronized email data. The service runs on port 5555 and allows HTTP requests for accessing accounts and email data.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/nylas/nylas-email-sync-engine/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ bin/inbox-api\n```\n\n----------------------------------------\n\nTITLE: Azure Tags Configuration for SAP LaMa Database Deployment\nDESCRIPTION: Resource tags configuration for tracking and organizing Azure resources deployed as part of the SAP LaMa database server implementation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-lama-database/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags\": \"Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, [variables('cseExtName')], Microsoft.Resources/deployments\"\n```\n\n----------------------------------------\n\nTITLE: Deploying ADF ARM Template using PowerShell\nDESCRIPTION: This PowerShell command deploys an Azure Resource Manager (ARM) template (`azuredeploy.json`) using specified parameters (`azuredeploy.parameters.json`) to create an Azure Data Factory pipeline. Prerequisites include saving both JSON files locally (e.g., C:\\ADFGetStarted) and updating the parameter file with valid Azure Storage and Salesforce credentials and the target Salesforce object name. The command uses the `New-AzureRmResourceGroupDeployment` cmdlet to initiate the deployment named 'MyARMDeployment' within the 'ADFTutorialResourceGroup' resource group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-salesforce-to-blob-copy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzureRmResourceGroupDeployment -Name MyARMDeployment -ResourceGroupName ADFTutorialResourceGroup -TemplateFile C:\\ADFGetStarted\\azuredeploy.json -TemplateParameterFile C:\\ADFGetStarted\\azuredeploy.parameters.json\n```\n\n----------------------------------------\n\nTITLE: Running provisioningListener.js in Monitor Mode with PubNub Azure Bridge\nDESCRIPTION: Demonstrates how to use the monitor mode to reconnect to existing Event Hubs. This command uses the connection strings provided during the provisioning phase to monitor both ingress and egress Event Hubs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/pubnub/pubnub-eventhub-bridge/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngcohen@(master):~/azureSubscribeBridge/monitoring$ node provisioningListener.js monitor \"Endpoint=sb://pn-eventhub-1fba54e9545.servicebus.windows.net/;SharedAccessKeyName=infromsubscriberhub;SharedAccessKey=fECC7E0hbfZFcZggrKPasgJbq1odY7LoLB6ll6xlHcA=;EntityPath=infromsubscriberhub\" \"Endpoint=sb://pn-eventhub-1fba54e9545.servicebus.windows.net/;SharedAccessKeyName=outtopublisherhub;SharedAccessKey=qmQZZYr2xvM+umHX7VFbim7UwCplTM9+naSDW6QHLaA=;EntityPath=outtopnpublisher\"\n\nmonitor mode detected.\n\nIngress Event Hub Connection String:  Endpoint=sb://pn-eventhub-1fba54e9545.servicebus.windows.net/;SharedAccessKeyName=infromsubscriberhub;SharedAccessKey=fECC7E0hbfZFcZggrKPasgJbq1odY7LoLB6ll6xlHcA=;EntityPath=infromsubscriberhub\n\nEgress Event Hub Connection String:  Endpoint=sb://pn-eventhub-1fba54e9545.servicebus.windows.net/;SharedAccessKeyName=outtopublisherhub;SharedAccessKey=qmQZZYr2xvM+umHX7VFbim7UwCplTM9+naSDW6QHLaA=;EntityPath=outtopnpublisher\n\nWaiting for messages to arrive via Event Hubs...\n\nMessage Received on Ingress Event Hub:   : {\"oh yeah?\":\"so did this one!\"}\n```\n\n----------------------------------------\n\nTITLE: Setting up SSH Tunnel for Jenkins using PuTTY\nDESCRIPTION: This snippet shows an alternative method to set up an SSH tunnel using PuTTY on Windows for accessing the Jenkins console securely.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-webapp/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nputty -ssh -L 127.0.0.1:8080:localhost:8080 username@mswatest001.eastus.cloudapp.azure.com\n```\n\n----------------------------------------\n\nTITLE: Linux Custom Script Extension Output JSON\nDESCRIPTION: Sample output structure from a Linux VM Custom Script Extension execution, showing the extension status and script output wrapped in #DATA# tokens for easy parsing.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-custom-script-output/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"cse-linux\",\n    \"type\": \"Microsoft.Azure.Extensions.CustomScript\",\n    \"typeHandlerVersion\": \"2.0.6\",\n    \"statuses\": [\n        {\n            \"code\": \"ProvisioningState/succeeded\",\n            \"level\": \"Info\",\n            \"displayStatus\": \"Provisioning succeeded\",\n            \"message\": \"Enable succeeded: \\n[stdout]\\n#DATA#\\nthis is the droid you have been looking for\\n#DATA#\\n\\n[stderr]\\n\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Principal Manually - Step 2\nDESCRIPTION: Command to retrieve the Object ID of the Service Principal using its AppId. This Object ID is needed for assigning additional roles in the next step.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ibm-cloud-pak/ibm-cloud-pak-for-data/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz ad sp list --filter \"appId eq '<app_id>'\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags specification for Azure deployment template, identifying the Microsoft resources and services used in the solution.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/traffic-manager-application-gateway-demo-setup/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Resources/deployments, Microsoft.Network/virtualNetworks, Microsoft.Network/trafficManagerProfiles, Microsoft.Network/trafficManagerProfiles/azureEndpoints, Microsoft.Network/publicIPAddresses, Microsoft.Network/applicationGateways, Microsoft.Storage/storageAccounts, Microsoft.Network/networkSecurityGroups, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: SSH Port Forwarding for Linux or Mac\nDESCRIPTION: Command to set up SSH port forwarding on Linux or Mac. This allows access to Grafana and InfluxDB UIs on localhost.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/grafana/Telegraf-InfluxDB-Grafana/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nssh -i <path to private key file> -L 3000:localhost:3000 -L 8083:localhost:8083 <User name>@<Public DNS name of instance you just created>\n```\n\n----------------------------------------\n\nTITLE: Using Descriptive Strings in AllowedValues for Azure ARM Template (JSON)\nDESCRIPTION: This code snippet shows how to use descriptive strings in the allowedValues field of a parameter in an Azure Resource Manager template. This approach provides clear, user-friendly options for configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/parameterized-linked-templates/detail/userfriendlyparameters.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"vmSize\": {\n    \"type\": \"string\",\n    \"defaultValue\": \"Standard_D2s_v3\",\n    \"allowedValues\": [\n        \"Standard_D2s_v3\",\n        \"Standard_D4s_v3\",\n        \"Standard_D8s_v3\"\n    ],\n    \"metadata\": {\n        \"description\": \"The size of the Virtual Machine.\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Chef Cluster Using Azure CLI\nDESCRIPTION: Bash command using Azure CLI to deploy the Chef HA cluster with artifacts to a specified location.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/chef-ha-cluster/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nazure-group-deploy.sh -a chef-ha-cluster -l eastus -u\n```\n\n----------------------------------------\n\nTITLE: Sample Message Format for Service Bus Topic\nDESCRIPTION: JSON message format expected by the Service Bus Topic. Messages should include a Priority property (High, Normal, or Low) which determines routing behavior.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/integrationpatterns-messagerouter-servicebus/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"Address\":\"Wilhelminakade 175\",\n\t\"City\":\"Rotterdam\",\n\t\"Name\":\"Eldert Grootenboer\"\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags for Cosmos DB Cassandra Deployment\nDESCRIPTION: These tags list the Azure resource types managed by the template, specifically for Cosmos DB database accounts, Cassandra keyspaces, and tables. It also includes common data types (uuid, int, float) potentially used within the Cassandra schema or template parameters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-cassandra-autoscale/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.DocumentDB/databaseAccounts, Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces, Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables, uuid, int, float`\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Application Gateway WAF Using ARM Template Tags\nDESCRIPTION: Resource tags for ARM template deployment defining the Microsoft Network resources required for Application Gateway with WAF functionality. Includes tags for public IP addresses, virtual networks, and application gateway resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-waf/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/applicationGateways\n```\n\n----------------------------------------\n\nTITLE: Verifying MySQL Replication Topology\nDESCRIPTION: Command to check the MySQL replication topology using the mysqlrplshow utility. This verifies that the master-slave relationship is properly configured.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-replication/README.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n> mysqlrplshow --master=admin:secret@10.0.1.4 --discover-slaves-login=admin:secret\n```\n\n----------------------------------------\n\nTITLE: Deploying Moodle Cluster using Azure CLI\nDESCRIPTION: Commands to deploy the Moodle cluster using Azure CLI. Creates a resource group and deploys the template with parameters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/moodle/moodle-scalable-cluster-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name <stackname> --location <location>\n\naz group deployment create --name moodle-autoscale --resource-group <stackname> --template-file azuredeploy.json\n\naz group deployment create --name moodle-autoscale --resource-group <stackname> --template-file azuredeploy.json --parameters azuredeploy.parameters.json\n```\n\n----------------------------------------\n\nTITLE: Retrieving Azure AD Object ID using PowerShell\nDESCRIPTION: This PowerShell script retrieves the object ID of an Azure AD user. It connects to Azure AD and gets the ID using the user principal name. This ID is needed as a parameter when deploying the Sports Analytics Architecture template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/sports-analytics-architecture/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n<# Uncomment and run the following code if you are running the script locally and the AzureAD PowerShell module is not installed:\n\nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser\nInstall-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force\n\n#>\n\n# Enter your Azure AD username for the $name variable \n$name = \"<AAD_Username>\"\n\n$null = Connect-AzureAD\n\n$output = (Get-AzAdUser -UserPrincipalName $name).Id\nWrite-Host \"Azure AD principal object ID is: $output\"\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group for Chef Deployment\nDESCRIPTION: This command creates an Azure Resource Group that will contain all the resources for the Chef HA deployment. The example creates a resource group named 'chef-automate-ha' in the West US region.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/chef-automate-ha/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz group create -n chef-automate-ha -l westus\n```\n\n----------------------------------------\n\nTITLE: Azure Tags Configuration for Ubuntu Desktop Deployment\nDESCRIPTION: Resource tags configuration specifying the Azure services and components used in the template deployment including networking, compute, and custom script extensions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ubuntu-desktop-xfce-rdp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Deploying IPv6 VNET with Standard Load Balancer in Azure (ARM Template)\nDESCRIPTION: This ARM template creates a dual stack IPv4/IPv6 Virtual Network with 2 VMs and a Standard Load Balancer in Azure. It includes configuration for various resources such as public IP addresses, availability sets, load balancer, virtual network, network security groups, route tables, network interfaces, and virtual machines.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ipv6-in-vnet-stdlb/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"resources\": [\n  {\n    \"type\": \"Microsoft.Network/publicIPAddresses\",\n    \"name\": \"[variables('publicIPv4AddressName')]\",\n    \"apiVersion\": \"2019-02-01\",\n    \"location\": \"[parameters('location')]\",\n    \"sku\": {\n      \"name\": \"Standard\"\n    },\n    \"properties\": {\n      \"publicIPAllocationMethod\": \"Static\",\n      \"publicIPAddressVersion\": \"IPv4\"\n    }\n  },\n  {\n    \"type\": \"Microsoft.Network/publicIPAddresses\",\n    \"name\": \"[variables('publicIPv6AddressName')]\",\n    \"apiVersion\": \"2019-02-01\",\n    \"location\": \"[parameters('location')]\",\n    \"sku\": {\n      \"name\": \"Standard\"\n    },\n    \"properties\": {\n      \"publicIPAllocationMethod\": \"Static\",\n      \"publicIPAddressVersion\": \"IPv6\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Azure CDN Resources in ARM Template\nDESCRIPTION: This JSON snippet defines the resources for creating a CDN Profile and a CDN Endpoint in Azure. It uses parameters for customizable configuration and specifies the Microsoft.Cdn namespace for resource types.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/cdn-customize/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"resources\": [\n  {\n    \"type\": \"Microsoft.Cdn/profiles\",\n    \"apiVersion\": \"2020-09-01\",\n    \"name\": \"[parameters('profileName')]\",\n    \"location\": \"[parameters('location')]\",\n    \"sku\": {\n      \"name\": \"[parameters('sku')]\"\n    }\n  },\n  {\n    \"type\": \"Microsoft.Cdn/profiles/endpoints\",\n    \"apiVersion\": \"2020-09-01\",\n    \"name\": \"[format('{0}/{1}', parameters('profileName'), parameters('endpointName'))]\",\n    \"location\": \"[parameters('location')]\",\n    \"properties\": {\n      \"originHostHeader\": \"[parameters('originUrl')]\",\n      \"isHttpAllowed\": true,\n      \"isHttpsAllowed\": true,\n      \"queryStringCachingBehavior\": \"IgnoreQueryString\",\n      \"contentTypesToCompress\": [\n        \"text/plain\",\n        \"text/html\",\n        \"text/css\",\n        \"application/x-javascript\",\n        \"text/javascript\"\n      ],\n      \"isCompressionEnabled\": true,\n      \"origins\": [\n        {\n          \"name\": \"origin1\",\n          \"properties\": {\n            \"hostName\": \"[parameters('originUrl')]\"\n          }\n        }\n      ]\n    },\n    \"dependsOn\": [\n      \"[resourceId('Microsoft.Cdn/profiles', parameters('profileName'))]\"\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Querying Web App Request Metrics in Log Analytics\nDESCRIPTION: This Log Analytics query retrieves request metrics for Azure Web Apps, including requests and HTTP status codes. It aggregates the average values hourly.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webappazure-oms-monitoring/README.md#2025-04-23_snippet_0\n\nLANGUAGE: kusto\nCODE:\n```\nAzureMetrics | where ResourceId == \"/MICROSOFT.WEB/SITES/\" and (MetricName == \"Requests\" or MetricName startswith_cs \"Http\") | summarize AggregatedValue = avg(Average) by MetricName, bin(TimeGenerated, 1h)\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Container Registry using ARM Template\nDESCRIPTION: This code snippet is a markdown file containing instructions and resources for deploying an Azure Container Registry using an ARM template. It includes deployment badges, deployment buttons for Azure and Azure US Gov, and a visualization button.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/test/ci-tests/data/fix-readme-tests/README.nochanges.expected.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Solution name\n\n![Azure Public Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/PublicLastTestDate.svg)\n![Azure Public Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/PublicDeployment.svg)\n\n![Azure US Gov Last Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/FairfaxLastTestDate.svg)\n![Azure US Gov Last Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/FairfaxDeployment.svg)\n\n![Best Practice Check](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/BestPracticeResult.svg)\n![Cred Scan Check](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/CredScanResult.svg)\n\n![Bicep Version](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/BicepVersion.svg)\n\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n\nThis template deploys an Azure Container Registry. Azure Container Registry is a PaaS offer for creating your own Docker image registry.\n\n`Tags: Azure Container Registry, Docker`\n\n## Solution overview and deployed resources\n\nThis is an overview of the solution\n\nThe following resources are deployed as part of the solution\n\n- **Azure Container Registry**: Docker image registry\n\n## Deployment steps\n\nYou can click the \"deploy to Azure\" button at the beginning of this document or follow the instructions for command line deployment using the scripts in the root of this repo.\n\n## Usage\n\n## Login to your registry\n\nFollow [this documentation](https://docs.microsoft.com/azure/container-registry/container-registry-authentication) for authenticating your docker client to your container registry.\n\n#### Push images to your registry\n\nFor pushing docker images on your registry, follow [this documentation](https://docs.microsoft.com/azure/container-registry/container-registry-get-started-docker-cli)\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Configuration Block\nDESCRIPTION: Tag configuration block defining Azure Private 5G Core related resource tags and template metadata for ARM deployment\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.mobilenetwork/mobilenetwork-create-full-5gc-deployment/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Azure Private 5G Core, Resource Manager templates, ARM templates, Microsoft.MobileNetwork/mobileNetworks/dataNetworks, Microsoft.MobileNetwork/mobileNetworks/slices, Microsoft.MobileNetwork/mobileNetworks/services, Microsoft.MobileNetwork/mobileNetworks/simPolicies, Microsoft.MobileNetwork/mobileNetworks/sites, Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreDataPlanes/attachedDataNetworks, Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreDataPlanes, Microsoft.MobileNetwork/mobileNetworks, Microsoft.MobileNetwork/sims, Microsoft.MobileNetwork/packetCoreControlPlanes\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration\nDESCRIPTION: Resource tags configuration specifying the Azure services and extensions used in the template deployment. These tags help in resource organization and management within Azure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/django/django-app/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Machine Learning AKS Compute with ARM Template\nDESCRIPTION: This ARM template snippet demonstrates the deployment of an Azure Machine Learning compute instance using AKS. It includes resource definitions for the AKS cluster and the Machine Learning workspace compute.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-compute-attach-aks/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.MachineLearningServices/workspaces/computes, Microsoft.ContainerService/managedClusters, SystemAssigned, VirtualMachineScaleSets, Microsoft.Resources/deployments\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Declaration for VM Deployment\nDESCRIPTION: Resource tags declaration showing the Azure services and components used in this template, including networking and compute resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-userdata/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines\n```\n\n----------------------------------------\n\nTITLE: Establishing SSH Tunnel to Docker Swarm Manager\nDESCRIPTION: This command creates an SSH tunnel to the Docker Swarm Manager, allowing you to issue Docker commands from your local machine as if the Swarm managers were running locally.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/swarm/docker-swarm-cluster/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nssh -L 2375:swarm-master-0:2375 -N core@swarm-<<DNSNAME>>-manage.westus.cloudapp.azure.com -p 2200\n```\n\n----------------------------------------\n\nTITLE: Azure Tags Declaration for OMS Automation Template\nDESCRIPTION: Resource tags defining the Azure services and components used in the template, including OperationalInsights workspaces, views, and OperationsManagement solutions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/oms-automation-solution/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.OperationalInsights/workspaces, views, Blade, OverviewTile, Microsoft.OperationsManagement/solutions\n```\n\n----------------------------------------\n\nTITLE: Querying Web App Response Times in Log Analytics\nDESCRIPTION: This Log Analytics query retrieves the average response time for Azure Web Apps, aggregating values hourly for each resource.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webappazure-oms-monitoring/README.md#2025-04-23_snippet_1\n\nLANGUAGE: kusto\nCODE:\n```\nAzureMetrics | where ResourceId == \"/MICROSOFT.WEB/SITES/\" and MetricName == \"AverageResponseTime\" | summarize AggregatedValue = avg(Average) by Resource, bin(TimeGenerated, 1h)\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Spark Cluster (ARM Template Tags)\nDESCRIPTION: ARM template tags specifying the resources being deployed, including Microsoft Storage accounts and HDInsight clusters for a Spark deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-spark-linux/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.HDInsight/clusters\"\n```\n\n----------------------------------------\n\nTITLE: LDAP Attribute Resolver Configuration\nDESCRIPTION: XML configuration for LDAP attribute resolver defining attribute mappings and data connector settings.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/shibboleth/shibboleth-singlevm-ubuntu/README.md#2025-04-23_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<DataConnector id=\"myLDAP\" xsi:type=\"LDAPDirectory\"\n    ldapURL=\"ldap://125.524.52.54:389\"\n    baseDN=\"cn=Users,DC=testorg,DC=com\"\n    principal=\"john@testorg.com\"\n    principalCredential=\"JohnZSQ12*(\">\n    <FilterTemplate>\n        <![CDATA[\n            %{idp.attribute.resolver.LDAP.searchFilter}\n        ]]>\n    </FilterTemplate>\n    <dc:ReturnAttributes>%{idp.attribute.resolver.LDAP.returnAttributes}</dc:ReturnAttributes>\n</DataConnector>\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition for Azure Monitor Alert Template\nDESCRIPTION: Resource tags specification for the template deployment, identifying the Microsoft Insights components used for alert configuration and action groups.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ag-alert-keyvault-advisor/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: microsoft.insights/activityLogAlerts, microsoft.insights/actionGroups\"\n```\n\n----------------------------------------\n\nTITLE: Deployment Tags Configuration for Azure SFTP Server\nDESCRIPTION: Configuration block defining the Azure resource tags and metadata for the SFTP server deployment. Includes specifications for container instances, storage, and related Azure services.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerinstance/aci-sftp-files-existing-storage/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags\": \"Azure Container Instance, az-cli, sftp, Microsoft.Resources/deployments, Microsoft.ContainerInstance/containerGroups, Public, Microsoft.ManagedIdentity/userAssignedIdentities, Microsoft.Authorization/roleAssignments, Microsoft.Storage/storageAccounts, Microsoft.Resources/deploymentScripts, userAssigned\"\n```\n\n----------------------------------------\n\nTITLE: Azure ML Resource Tag Definition\nDESCRIPTION: Resource tags definition for Azure Machine Learning services deployment, including storage accounts, key vaults, and application insights components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-dataversion-create-from-file-uri/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.MachineLearningServices/workspaces/datastores, Microsoft.Storage/storageAccounts, Microsoft.KeyVault/vaults, Microsoft.Insights/components, Microsoft.MachineLearningServices/workspaces, systemAssigned\n```\n\n----------------------------------------\n\nTITLE: Defining Callback for Contract Deployment in Geth Console\nDESCRIPTION: This snippet defines a callback function to handle the result of the contract deployment. It logs the transaction hash while waiting for the contract to be mined, and then logs the contract details once it's mined.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar callback = function(e, contract){\n    if(!e) {\n      if(!contract.address) {\n        console.log(\"Contract transaction send: TransactionHash: \" + contract.transactionHash + \" waiting to be mined...\");\n      } else {\n        console.log(\"Contract mined!\");\n        console.log(contract);\n      }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Tagging Azure Resources for Active Directory Forest Deployment\nDESCRIPTION: This snippet lists the Azure resource tags associated with the Active Directory forest deployment template. It includes various Azure resource types and features used in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/active-directory/create-ad-forest-with-subdomain/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`Tags: active directory, forest, domain, DSC, Microsoft.Compute/availabilitySets, Microsoft.Resources/deployments, Microsoft.Network/networkSecurityGroups, Microsoft.Compute/virtualMachines/extensions, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, CustomScriptExtension, Microsoft.Network/virtualNetworks`\n```\n\n----------------------------------------\n\nTITLE: Deploying Datadog Organization using Azure ARM Template - JSON\nDESCRIPTION: This Azure Resource Manager (ARM) JSON template deploys a Datadog monitor resource and creates a linked Datadog organization for Azure resource monitoring. It configures collection of resource and activity logs with built-in exclusion for VMs, VM Scale Sets, and App Service Plans, and enables native integration for metrics. Inputs are specified as parameters for organization details and credentials, with required fields for Datadog and marketplace integration. The template structure follows ARM standards and is deployable through both Azure Portal and automation pipelines. Outputs include identifiers for deployed Datadog resources and integrations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datadog/datadog/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\"\n    },\n    \"datadogOrganizationName\": {\n      \"type\": \"string\"\n    },\n    \"datadogApiKey\": {\n      \"type\": \"securestring\"\n    },\n    \"datadogAppKey\": {\n      \"type\": \"securestring\"\n    },\n    \"marketplaceSubscriptionId\": {\n      \"type\": \"string\"\n    },\n    \"planName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"Datadog_Azure_Plan\"\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Datadog/monitors\",\n      \"apiVersion\": \"2021-03-01\",\n      \"name\": \"[parameters('datadogOrganizationName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"tags\": {\n        \"Deployment\": \"AzureQuickstartTemplate\"\n      },\n      \"properties\": {\n        \"monitoringStatus\": \"Enabled\",\n        \"marketplaceSubscriptionId\": \"[parameters('marketplaceSubscriptionId')]\",\n        \"planData\": {\n          \"planName\": \"[parameters('planName')]\",\n          \"billingCycle\": \"Monthly\",\n          \"effectiveDate\": \"[utcNow()]\"\n        },\n        \"datadogOrganizationProperties\": {\n          \"apiKey\": \"[parameters('datadogApiKey')]\",\n          \"applicationKey\": \"[parameters('datadogAppKey')]\",\n          \"enterpriseAppId\": \"\",\n          \"enterpriseAppName\": \"\",\n          \"region\": \"us3\"\n        },\n        \"userInfo\": {\n          \"name\": \"admin@company.com\",\n          \"emailAddress\": \"admin@company.com\",\n          \"phoneNumber\": \"\"\n        }\n      }\n    }\n  ],\n  \"outputs\": {\n    \"monitorId\": {\n      \"type\": \"string\",\n      \"value\": \"[resourceId('Microsoft.Datadog/monitors', parameters('datadogOrganizationName'))]\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: NFS Client Mount Commands\nDESCRIPTION: Commands to verify and mount the NFS share from a client machine. These commands show how to check available NFS exports and mount the shared directory.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/nfs-ha-cluster-ubuntu/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nshowmount -e {lbFrontEndIpAddr}\nsudo mkdir -p /mnt/nfs\nsudo mount -t nfs {lbFrontEndIpAddr}:/drbd/data /mnt/nfs\nsudo umount /mnt/nfs\n```\n\n----------------------------------------\n\nTITLE: Switching NAT Rules Between Old and New Master in PowerShell\nDESCRIPTION: PowerShell commands to update the load balancer NAT rules to redirect traffic from the failed master to the new master. This ensures applications can continue to access the MySQL service without configuration changes.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-replication/README.md#2025-04-23_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n...\n# $j is the index of the target nat rule\n...\n> $rule1=$nic1.IpConfigurations[0].LoadBalancerInboundNatRules[$j]\n> $nic1.IpConfigurations[0].LoadBalancerInboundNatRules.removeRange($j,1)\n> $nic1.IpConfigurations[0].LoadBalancerInboundNatRules.add($rule0)\n> Set-AzureNetworkInterface -NetworkInterface $nic1\n\n> $nic0.IpConfigurations[0].LoadBalancerInboundNatRules.add($rule1)\n> Set-AzureNetworkInterface -NetworkInterface $nic0\n```\n\n----------------------------------------\n\nTITLE: PowerShell - List Azure Role Definitions\nDESCRIPTION: PowerShell command to display detailed information about available Azure role definitions, including the role's ID and associated permissions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.authorization/rbac-builtinrole-multiplevms/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzureRoleDefinition | fl\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure Resource Tags for PowerShell and Automation\nDESCRIPTION: This code block defines tags for the Azure resources used in the template. It includes PowerShell, PowerShellWorkflow, and specific Azure Automation resources such as automation accounts, variables, runbooks, and modules.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/asr-automation-recovery/README.md#2025-04-23_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: PowerShell, PowerShellWorkflow, Microsoft.Automation/automationAccounts, variables, Microsoft.Automation/automationAccounts/runbooks, Microsoft.Automation/automationAccounts/modules\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Container Instance with Secret Volume\nDESCRIPTION: Template for deploying a containerinstance/helloworld:ssl container with mounted secret volumes for SSL certificate data and password. The secrets are Base64 encoded and mounted at specific paths within the container: /mnt/secrets/sslCertificateData for the certificate and /mnt/secrets/sslCertificatePwd for the password.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerinstance/aci-linuxcontainer-volume-secret/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nContainer paths:\\n- Certificate: /mnt/secrets/sslCertificateData\\n- Password: /mnt/secrets/sslCertificatePwd\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Availability Set with FDs and UDs\nDESCRIPTION: ARM template configuration that creates an Availability Set in Azure with 3 Fault Domains and 20 Update Domains. This configuration is optimized for high availability scenarios and can be integrated into larger deployment templates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/availability-set-create-3FDs-20UDs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"Microsoft.Compute/availabilitySets\",\n  \"location\": \"[resourceGroup().location]\",\n  \"sku\": {\n    \"name\": \"Aligned\"\n  },\n  \"properties\": {\n    \"platformFaultDomainCount\": 3,\n    \"platformUpdateDomainCount\": 20\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: API Management Error Response Example\nDESCRIPTION: Sample JSON response showing the default 404 error message format returned by the API Management instance when a resource is not found.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-api-management-external/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{ \"statusCode\": 404, \"message\": \"Resource not found\" }\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Container Registry Deployment Badges in Markdown\nDESCRIPTION: This snippet shows how to embed Azure deployment status badges in a Markdown file. It includes badges for public and US government cloud deployments, best practice checks, and Bicep version.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/test/ci-tests/data/fix-readme-tests/README.badlinks.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Azure Public Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/PublicLastTestDate.svg)\n![Azure Public Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/PublicDeployment.svg)\n\n![Azure US Gov Last Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/FairfaxLastTestDate.svg)\n![Azure US Gov Last Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/FairfaxDeployment.svg)\n\n![Best Practice Check](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/whoops.svg)\n![Cred Scan Check](https://azurequickstartsservice.blob.core.windows.net/badges/101-container-registry/CredScanResult.svg)\n\n![Bicep Version](https://bicepqs.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/BicepVersion.svg)\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Manager Template Tags\nDESCRIPTION: The code shows the tags used to categorize the ARM template in the Azure Quickstart Templates repository. These tags help identify resources used in the template and its purpose.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-monitoring-dashboard/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`Tags: Microsoft.Portal/dashboards, Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart, datetime, long, string, Extension/Microsoft_Azure_CostManagement/PartType/CostAnalysisPinPart, ActualCost, Dimension, Budget, Forecast, decimal, real, MsPortalFx.Composition.Configuration.ValueTypes.TimeRange`\n```\n\n----------------------------------------\n\nTITLE: Deploying Evidian SafeKit Farm Cluster using Azure Resource Manager Template\nDESCRIPTION: This ARM template snippet shows the deployment button for the SafeKit farm cluster. It provides links to deploy the template in Azure public cloud and Azure US Government cloud, as well as a link to visualize the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/safekit/safekit-cluster-farm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fsafekit%2Fsafekit-cluster-farm%2Fazuredeploy.json)  [!\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fsafekit%2Fsafekit-cluster-farm%2Fazuredeploy.json)  [!\n[Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fsafekit%2Fsafekit-cluster-farm%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Declaring Azure Resource Tags in ARM Template\nDESCRIPTION: This snippet shows the tag object created in the variables section of the ARM template. These tags will be applied to all applicable resources in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-tags/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"variables\": {\n  \"tag\": {\n    \"key1\": \"key1\",\n    \"key2\": \"key2\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Tags in ARM Template\nDESCRIPTION: This JSON snippet defines the tags for Azure resources deployed by the ARM template. It specifies that the deployment is for Kentico Xperience and includes tags for the CMS, ASP.NET, content management, e-commerce, and online marketing.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/kentico/kentico-xperience-environment/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Kentico, Xperience, cms, ASP.NET, content management, e-commerce, online marketing, Microsoft.Resources/deployments, Microsoft.Sql/servers, firewallrules, Microsoft.Web/serverfarms, Microsoft.Web/sites, SQLServer, Microsoft.Insights/autoscalesettings, ChangeCount, Microsoft.Insights/components\"\n```\n\n----------------------------------------\n\nTITLE: Declaring Azure Resource Tags in Bicep\nDESCRIPTION: This code snippet defines the tags to be applied to Azure resources in a Bicep template. It specifies the API Management and Redis Cache services as products used in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.apimanagement/api-management-create-with-external-redis-cache/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\n```bicep\n@description('This template demonstrates how to create an instance of Azure API Management in the Consumption tier with an external Azure Cache for Redis instance as the API Management external cache.')\npage_type: sample\nproducts:\n- azure\n- azure-resource-manager\n```\n```\n\n----------------------------------------\n\nTITLE: Creating SQL Stored Procedure for Data Factory Pipeline (SQL)\nDESCRIPTION: Defines a SQL stored procedure named `spWriteEmployee`. This procedure, marked as `READONLY` (although it performs an INSERT), inserts a hardcoded row ('Bill', 'Gates') into the `dbo.emp` table. Creating this stored procedure in the target Azure SQL Database is a prerequisite step before deploying the ARM template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-blob-to-sql-copy-stored-proc/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCREATE PROCEDURE spWriteEmployee READONLY\nAS\nBEGIN\n\tINSERT INTO [dbo].[emp](First, Last)\n\tVALUES  ('Bill', 'Gates')\nEND\n```\n\n----------------------------------------\n\nTITLE: Constructing Backend Address Pool ID for VM Creation in Azure ARM Template\nDESCRIPTION: This JSON snippet demonstrates how the backend address pool ID is constructed for VM creation in the main Azure Resource Manager template. It's only included if the Application Gateway has been deployed.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/parameterized-linked-templates/detail/agtemplate.md#2025-04-23_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n\"[if(not(empty(parameters('applicationGatewayName'))), variables('appGatewayID'), 'Resource was not created')]\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration for BOSH Setup\nDESCRIPTION: Resource tags configuration specifying the Azure components and extensions required for BOSH deployment, including CustomScript, networking, compute, and storage resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/bosh/bosh-setup/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCustomScript, CustomScriptForLinux, Microsoft.Network/networkSecurityGroups, Microsoft.Resources/deployments, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, Microsoft.Network/loadBalancers, Microsoft.Storage/storageAccounts\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure VM Scale Set Configuration Tags\nDESCRIPTION: Resource tags defining the Microsoft services and components used in the VM Scale Set deployment including networking, compute, and public IP address resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-public-ip-linux/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers, Microsoft.Compute/virtualMachineScaleSets\"\n```\n\n----------------------------------------\n\nTITLE: JSON Message Format for Testing the Message Router Logic App\nDESCRIPTION: Example JSON payload to test the Message Router Logic App. This format contains personal information fields that will be processed by the Logic App and routed to GitHub Gists.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/integrationpatterns-messagerouter-logicapp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"Address\":\"Wilhelminakade 175\",\n\t\"City\":\"Rotterdam\",\n\t\"Name\":\"Eldert Grootenboer\"\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Associated Azure Resource Types\nDESCRIPTION: This tag list enumerates the Azure resource types deployed or configured by the associated Azure Quickstart Template. It includes resources for networking (Public IPs, VNets, NICs, NSGs, Traffic Manager), compute (Virtual Machines, VM Extensions), and custom scripts.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/traffic-manager-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Network/networkSecurityGroups, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript, Microsoft.Network/trafficmanagerprofiles, Microsoft.Network/trafficManagerProfiles/azureEndpoints`\n```\n\n----------------------------------------\n\nTITLE: Installing PostgreSQL Server using Azure CLI Command\nDESCRIPTION: Command to deploy the PostgreSQL Server on Ubuntu VM ARM template using Azure CLI with a resource group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/postgre/postgresql-standalone-server-ubuntu/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\naz group deployment create --name \"name of your deployment\" --resource-group \"resource-group\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: Querying Azure Web App Activity Logs in Log Analytics\nDESCRIPTION: This Log Analytics query retrieves and summarizes activity log operations for Azure Web Apps.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webappazure-oms-monitoring/README.md#2025-04-23_snippet_5\n\nLANGUAGE: kusto\nCODE:\n```\nAzureActivity | where ResourceProvider == \"Azure Web Sites\" | summarize AggregatedValue = count() by OperationName\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition for Azure Stack HCI VM Deployment\nDESCRIPTION: Resource tags definition specifying the Azure Stack HCI virtual machines resource provider and HCI tag for resource identification and management.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurestackhci/vm-simple-ashci-windows/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.AzureStackHCI/virtualmachines, hci\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Management Services with PowerShell\nDESCRIPTION: PowerShell script to deploy the Azure management services template. Creates required resource groups and deploys management services with configurable VM workloads. Requires specification of management prefix, platform type, credentials and instance count.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/azmgmt-demo/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n# Create 2 resource groups, for mgmt and workload\n$MgmtRgName = '' # Specify a name for the resource group containing the management services\n$WorkloadRgName = '' # Specify a name for the resource group containing the virtual machine(s)\n\n$MgmtRg = New-AzureRmResourceGroup -Name $MgmtRgName -Location eastus -Verbose\n$WorkloadRg = New-AzureRmResourceGroup -Name $WorkloadRgName -Location eastus -Verbose\n\n# Define parameters for template deployment - remember to change the values!f\n\n$azMgmtPrefix = '' # Specify the prefix for the Azure mgmt. services that will be deployed\n$Platform = '' # Select either 'WinSrv' or 'Linux'. If WinSrv, DSC will be enabled.\n$userName = '' # username for the VM(s)\n$vmNamePrefix = '' # Specify the prefix for the virtual machine(s) that will be created\n$instanceCount = '' # You can create 1-10 VMs\n$deploymentName = '' # Specify the name of the main ARM template deployment job\n$templateuri = 'azuredeploy.json'\n\n# Deploy template\n\nNew-AzureRmResourceGroupDeployment -Name $deploymentName `\n                                   -ResourceGroupName $MgmtRg.ResourceGroupName `\n                                   -TemplateUri $templateUri `\n                                   -vmResourceGroup $WorkloadRg.ResourceGroupName `\n                                   -azMgmtPrefix $azMgmtPrefix `\n                                   -vmNamePrefix $vmNamePrefix `\n                                   -userName $userName `\n                                   -platform $platform `\n                                   -instanceCount $instanceCount `\n                                   -Verbose\n```\n\n----------------------------------------\n\nTITLE: Retrieving Key URI from Key Vault with PowerShell\nDESCRIPTION: This PowerShell command retrieves the URI of a specific encryption key from the Azure Key Vault, required for the cmk_keyvault_key_uri parameter in the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk-service-side-encryption/README.md#2025-04-23_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzureKeyVaultKey -VaultName '<keyvault-name>' -KeyName '<key-name>'\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types Deployed by the Template\nDESCRIPTION: This snippet lists the Microsoft Azure resource provider namespaces and types that are created by the associated ARM/Bicep template. It includes resources for networking (Public IP, NSG, VNet, NIC) and compute (Virtual Machine).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-with-standardssd-disk/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines`\n```\n\n----------------------------------------\n\nTITLE: Deploying DDoS Protection and Virtual Network with ARM/Bicep\nDESCRIPTION: Creates a DDoS protection plan and virtual network in Azure, then enables the protection plan for the network. The template supports deployment in both Azure public cloud and Azure Government environments. Resource tags indicate Microsoft.Network/ddosProtectionPlans and Microsoft.Network/virtualNetworks are used.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/create-and-enable-ddos-protection-plans/README.md#2025-04-23_snippet_0\n\nLANGUAGE: tags\nCODE:\n```\nMicrosoft.Network/ddosProtectionPlans, Microsoft.Network/virtualNetworks\n```\n\n----------------------------------------\n\nTITLE: Tagging Resources in ARM Templates - JSON\nDESCRIPTION: This JSON inline declaration lists Azure resource types and roles (e.g., storage accounts, virtual networks, VM scale sets, load balancer, diagnostics) expected in the described ARM template. It guides users and tools regarding the Azure resources that will be provisioned by this deployment. The tag string should be placed as part of ARM template metadata or comments to indicate required dependencies. No functional code is provided, and limitations are that it is not executable or used directly by ARM but for documentation and analysis purposes.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.servicefabric/5-vm-ubuntu-1-nodetypes-secure/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n`Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers, Microsoft.Compute/virtualMachineScaleSets, ServiceFabricLinuxNode, LinuxDiagnostic, Microsoft.ServiceFabric/clusters`\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Batch with Key Vault PFX Certificate using ARM Template\nDESCRIPTION: This ARM template configures an Azure Batch account with a PFX certificate from Key Vault. It includes resource definitions for storage accounts, Batch accounts, and certificates. The template demonstrates secure certificate management in Azure Batch services.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.batch/batch-with-keyvault-pfx-password/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\"Microsoft.Batch/batchAccounts/certificates\": \"\", \"Microsoft.Web/certificates\": \"\", \"Microsoft.Storage/storageAccounts\": \"\", \"Microsoft.Batch/batchAccounts\": \"\"}\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Tags in JSON\nDESCRIPTION: This JSON snippet defines tags for Azure resources, including a description, page type, associated products, and URL fragment. It provides metadata for the CloudLens with Moloch deployment template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/cloudlens/cloudlens-moloch-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\": \"This template shows how to setup network visibility in the Azure public cloud using the CloudLens agent to tap traffic on one vm and forward it to a network packet storing & indexing tool, in this case Moloch.\",\n  \"page_type\": \"sample\",\n  \"products\": [\n    \"azure\",\n    \"azure-resource-manager\"\n  ],\n  \"urlFragment\": \"cloudlens-moloch-ubuntu\",\n  \"languages\": [\n    \"json\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition for Firewall Deployment\nDESCRIPTION: Resource tags specification for Azure Firewall deployment components including Network, Storage, Compute and Firewall resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azurefirewall-create-with-firewallpolicy-ipgroups/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags\": \"Microsoft.Network/ipGroups, Microsoft.Storage/storageAccounts, Microsoft.Network/routeTables, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Network/firewallPolicies, ruleCollectionGroups, Deny, Microsoft.Network/azureFirewalls\"\n```\n\n----------------------------------------\n\nTITLE: Defining SQL Table Output Format (Text)\nDESCRIPTION: This text snippet illustrates the final output data as it appears in the target Azure SQL database table ('Employees') after the second Copy activity completes. The activity copies the full names generated by the Hive script from Azure Blob Storage into the 'FullName' column of the SQL table.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-ftp-hive-blob/README.md#2025-04-23_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nFullName\n--------\n John Doe\n Jane Doe\n Bill Gates\n Paul Allen\n```\n\n----------------------------------------\n\nTITLE: Deploying Seafile Server with Azure Resource Manager Template\nDESCRIPTION: This ARM template snippet defines the resources needed to deploy a Seafile server on an Azure Ubuntu VM. It includes network interfaces, security groups, and virtual machine configurations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ubuntu-netdisk-setup/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Network/networkSecurityGroups, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Machine Learning Tabular Dataset Template\nDESCRIPTION: This code snippet represents the deployment buttons for the Azure Resource Manager template. It includes links to deploy the template directly to Azure and to visualize it using the ARM Visualizer tool.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-dataset-create-tabular-from-relative-path/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.machinelearningservices%2Fmachine-learning-dataset-create-tabular-from-relative-path%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.machinelearningservices%2Fmachine-learning-dataset-create-tabular-from-relative-path%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration for Drupal Deployment\nDESCRIPTION: Resource tags definition for Azure deployment template, specifying the Microsoft services and components used in the Drupal deployment architecture.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/drupal/drupal8-vmss-glusterfs-mysql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Storage/storageAccounts, Microsoft.Storage/storageAccounts/fileServices/shares, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers, Microsoft.Resources/deployments, Microsoft.Compute/virtualMachineScaleSets, CustomScript, LinuxDiagnostic, Microsoft.Insights/autoscaleSettings, ChangeCount\n```\n\n----------------------------------------\n\nTITLE: Declaring Azure Front Door Resource Tags\nDESCRIPTION: Resource tagging metadata for the Azure Front Door template indicating it belongs to the Microsoft.Network/frontDoors resource type.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-priority-lb/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/frontDoors\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags used to categorize and identify Azure resources in this deployment template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-container-instances-public/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.ContainerInstance/containerGroups, Public, Microsoft.Cdn/profiles, Microsoft.Cdn/profiles/afdEndpoints, Microsoft.Cdn/profiles/originGroups, Microsoft.Cdn/profiles/originGroups/origins, Microsoft.Cdn/profiles/afdEndpoints/routes\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure Resource Type Tag for Cosmos DB\nDESCRIPTION: This tag `Microsoft.DocumentDB/databaseAccounts` is used within Azure Resource Manager (ARM) templates (both JSON and Bicep) to identify the specific Azure resource type being deployed, which in this case is an Azure Cosmos DB database account. It helps categorize and manage resources deployed via the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.documentdb/cosmosdb-sql-minimal/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.DocumentDB/databaseAccounts\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure API/Template Version Number\nDESCRIPTION: A simple version number declaration, likely used to specify Azure API compatibility or template versioning requirements. Uses semantic versioning format.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.costmanagement/finops-hub/modules/ftkver.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n0.9\n```\n\n----------------------------------------\n\nTITLE: Azure Front Door Tag Definition\nDESCRIPTION: Resource tag definition specified in the template for identifying Azure Front Door resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-create-caching/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/frontDoors\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resources for KEMP LoadMaster HA Pair\nDESCRIPTION: This JSON snippet defines the Azure resources required for deploying a KEMP LoadMaster HA Pair. It includes storage accounts, availability sets, virtual networks, public IP addresses, network security groups, network interfaces, and load balancers.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/kemp/kemp-loadmaster-ha-pair/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\n  \"Microsoft.Storage/storageAccounts\": [],\n  \"Microsoft.Compute/availabilitySets\": [],\n  \"Microsoft.Network/virtualNetworks\": [],\n  \"Microsoft.Network/publicIPAddresses\": [],\n  \"Microsoft.Network/networkSecurityGroups\": [],\n  \"Microsoft.Network/networkInterfaces\": [],\n  \"Microsoft.Network/loadBalancers\": [],\n  \"Microsoft.Network/loadBalancers/inboundNatRules\": [],\n  \"Microsoft.Compute/virtualMachines\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Java Web App\nDESCRIPTION: This code snippet represents the tags used to define the Azure resources being deployed. It specifies the use of Microsoft.Web/serverfarms for the app service plan and Microsoft.Web/sites for the web app, along with a config section.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-java-tomcat/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/serverfarms, Microsoft.Web/sites, config\"\n```\n\n----------------------------------------\n\nTITLE: SSH Port Forwarding for Windows using Putty\nDESCRIPTION: Command to set up SSH port forwarding on Windows using Putty. This allows access to Grafana and InfluxDB UIs on localhost.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/grafana/Telegraf-InfluxDB-Grafana/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nputty.exe -ssh -i <path to private key file> -L 3000:localhost:3000 -L 8083:localhost:8083 <User name>@<Public DNS name of instance you just created>\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Declaration\nDESCRIPTION: Resource tags specification for Azure deployment template, defining the components and extensions used in the infrastructure setup.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-msi-linux-terraform/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkSecurityGroups, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, SystemAssigned, Microsoft.Authorization/roleAssignments, Microsoft.Compute/virtualMachines/extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: VS Code Command Line Usage Examples\nDESCRIPTION: Examples of common VS Code CLI commands for managing files, folders and extensions from the Ubuntu terminal.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/visualstudio/ubuntu-mate-desktop-vscode/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncode file_name\n```\n\nLANGUAGE: bash\nCODE:\n```\ncode dir_name\n```\n\nLANGUAGE: bash\nCODE:\n```\ncode --install-extension dbaeumer.vscode-eslint\n```\n\nLANGUAGE: bash\nCODE:\n```\ncode --list-extensions\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition for Buffalo Web App Deployment on Azure\nDESCRIPTION: This snippet defines the Azure resources and tags used in the Buffalo web application deployment template, including web sites, server farms, and database options for PostgreSQL and MySQL with firewall rules.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/buffalo/gobuffalo/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/sites, [if(equals(parameters('database'), 'mysql'), 'mysql', 'custom')], Microsoft.Web/serverfarms, Microsoft.DBforPostgreSQL/servers, firewallRules, Microsoft.DBforMySQL/servers\"\n```\n\n----------------------------------------\n\nTITLE: Deploying McAfee Endpoint Security Extension on Windows VM in Azure\nDESCRIPTION: This ARM template defines the deployment of a Windows virtual machine with McAfee Endpoint Security extension installed. It includes storage accounts, networking components, VM configuration, and the McAfee extension with trial licensing.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/mcafee-extension-windows-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"adminUsername\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Username for the Virtual Machine.\"\n      }\n    },\n    \"adminPassword\": {\n      \"type\": \"securestring\",\n      \"metadata\": {\n        \"description\": \"Password for the Virtual Machine.\"\n      }\n    },\n    \"dnsNameForPublicIP\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Unique DNS Name for the Public IP used to access the Virtual Machine.\"\n      }\n    },\n    \"windowsOSVersion\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"2012-R2-Datacenter\",\n      \"allowedValues\": [\n        \"2008-R2-SP1\",\n        \"2012-Datacenter\",\n        \"2012-R2-Datacenter\"\n      ],\n      \"metadata\": {\n        \"description\": \"The Windows version for the VM. This will pick a fully patched image of this given Windows version.\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Location for all resources.\"\n      }\n    },\n    \"vmSize\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"Standard_D2_v3\",\n      \"metadata\": {\n        \"description\": \"Size of the virtual machine.\"\n      }\n    }\n  },\n  \"variables\": {\n    \"storageAccountName\": \"[format('diag{0}', uniqueString(resourceGroup().id))]\",\n    \"imagePublisher\": \"MicrosoftWindowsServer\",\n    \"imageOffer\": \"WindowsServer\",\n    \"nicName\": \"myVMNic\",\n    \"addressPrefix\": \"10.0.0.0/16\",\n    \"subnetName\": \"Subnet\",\n    \"subnetPrefix\": \"10.0.0.0/24\",\n    \"storageAccountType\": \"Standard_LRS\",\n    \"publicIPAddressName\": \"myPublicIP\",\n    \"publicIPAddressType\": \"Dynamic\",\n    \"vmName\": \"MyWindowsVM\",\n    \"virtualNetworkName\": \"MyVNET\",\n    \"subnetRef\": \"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]\",\n    \"networkSecurityGroupName\": \"default-NSG\"\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts\",\n      \"apiVersion\": \"2021-04-01\",\n      \"name\": \"[variables('storageAccountName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"[variables('storageAccountType')]\"\n      },\n      \"kind\": \"Storage\"\n    },\n    {\n      \"type\": \"Microsoft.Network/publicIPAddresses\",\n      \"apiVersion\": \"2021-02-01\",\n      \"name\": \"[variables('publicIPAddressName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"publicIPAllocationMethod\": \"[variables('publicIPAddressType')]\",\n        \"dnsSettings\": {\n          \"domainNameLabel\": \"[parameters('dnsNameForPublicIP')]\"\n        }\n      }\n    },\n    {\n      \"type\": \"Microsoft.Network/networkSecurityGroups\",\n      \"apiVersion\": \"2021-02-01\",\n      \"name\": \"[variables('networkSecurityGroupName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"securityRules\": [\n          {\n            \"name\": \"default-allow-3389\",\n            \"properties\": {\n              \"priority\": 1000,\n              \"access\": \"Allow\",\n              \"direction\": \"Inbound\",\n              \"destinationPortRange\": \"3389\",\n              \"protocol\": \"Tcp\",\n              \"sourcePortRange\": \"*\",\n              \"sourceAddressPrefix\": \"*\",\n              \"destinationAddressPrefix\": \"*\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"type\": \"Microsoft.Network/virtualNetworks\",\n      \"apiVersion\": \"2021-02-01\",\n      \"name\": \"[variables('virtualNetworkName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"addressSpace\": {\n          \"addressPrefixes\": [\n            \"[variables('addressPrefix')]\"\n          ]\n        },\n        \"subnets\": [\n          {\n            \"name\": \"[variables('subnetName')]\",\n            \"properties\": {\n              \"addressPrefix\": \"[variables('subnetPrefix')]\",\n              \"networkSecurityGroup\": {\n                \"id\": \"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]\"\n              }\n            }\n          }\n        ]\n      },\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]\"\n      ]\n    },\n    {\n      \"type\": \"Microsoft.Network/networkInterfaces\",\n      \"apiVersion\": \"2021-02-01\",\n      \"name\": \"[variables('nicName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"ipConfigurations\": [\n          {\n            \"name\": \"ipconfig1\",\n            \"properties\": {\n              \"privateIPAllocationMethod\": \"Dynamic\",\n              \"publicIPAddress\": {\n                \"id\": \"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]\"\n              },\n              \"subnet\": {\n                \"id\": \"[variables('subnetRef')]\"\n              }\n            }\n          }\n        ]\n      },\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]\",\n        \"[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]\"\n      ]\n    },\n    {\n      \"type\": \"Microsoft.Compute/virtualMachines\",\n      \"apiVersion\": \"2021-03-01\",\n      \"name\": \"[variables('vmName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"hardwareProfile\": {\n          \"vmSize\": \"[parameters('vmSize')]\"\n        },\n        \"osProfile\": {\n          \"computerName\": \"[variables('vmName')]\",\n          \"adminUsername\": \"[parameters('adminUsername')]\",\n          \"adminPassword\": \"[parameters('adminPassword')]\"\n        },\n        \"storageProfile\": {\n          \"imageReference\": {\n            \"publisher\": \"[variables('imagePublisher')]\",\n            \"offer\": \"[variables('imageOffer')]\",\n            \"sku\": \"[parameters('windowsOSVersion')]\",\n            \"version\": \"latest\"\n          },\n          \"osDisk\": {\n            \"createOption\": \"FromImage\"\n          },\n          \"dataDisks\": [\n            {\n              \"diskSizeGB\": 1023,\n              \"lun\": 0,\n              \"createOption\": \"Empty\"\n            }\n          ]\n        },\n        \"networkProfile\": {\n          \"networkInterfaces\": [\n            {\n              \"id\": \"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]\"\n            }\n          ]\n        },\n        \"diagnosticsProfile\": {\n          \"bootDiagnostics\": {\n            \"enabled\": true,\n            \"storageUri\": \"[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]\"\n          }\n        }\n      },\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]\",\n        \"[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]\"\n      ]\n    },\n    {\n      \"type\": \"Microsoft.Compute/virtualMachines/extensions\",\n      \"apiVersion\": \"2021-03-01\",\n      \"name\": \"[format('{0}/McAfee.EndpointSecurity', variables('vmName'))]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"publisher\": \"McAfee.EndpointSecurity\",\n        \"type\": \"McAfeeEndpointSecurity\",\n        \"typeHandlerVersion\": \"6.0\",\n        \"autoUpgradeMinorVersion\": true,\n        \"settings\": {\n          \"featureVS\": \"true\",\n          \"featureBP\": \"true\",\n          \"featureFW\": \"true\",\n          \"relayServer\": \"false\"\n        }\n      },\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Azure CLI command for deploying Nextflow cluster with custom image\nDESCRIPTION: Command to deploy the Nextflow cluster using Azure CLI with a template file and custom image parameters file. This deployment creates the cluster in a specified resource group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/nextflow/nextflow-genomics-cluster-ubuntu/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz group deployment create -g [your_resource_group_here] --template-file ./azuredeploy.json --parameters @azuredeploy.customimage.parameters.json\n```\n\n----------------------------------------\n\nTITLE: Declaring Azure Resource Tags\nDESCRIPTION: A code block showcasing ARM template resource tags, specifying the Microsoft resources and networks being deployed in this template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/2fe-lb80-rdp-1be-nsg-rdp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Network/publicIPAddresses, Microsoft.Compute/availabilitySets, Microsoft.Storage/storageAccounts, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/loadBalancers, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines\n```\n\n----------------------------------------\n\nTITLE: Specifying Template Properties in YAML\nDESCRIPTION: YAML front matter defining the template metadata including description, page type, supported Azure products and deployment languages.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerinstance/aci-sftp-files/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndescription: This template demonstrates an on-demand SFTP server using an Azure Container Instance (ACI).\npage_type: sample\nproducts:\n- azure\n- azure-resource-manager\nurlFragment: aci-sftp-files\nlanguages:\n- json\n- bicep\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Confidential Ledger via ARM Template - JSON\nDESCRIPTION: This JSON snippet represents the Azure Resource Manager (ARM) template necessary to deploy a Confidential Ledger instance in Azure. It defines the required resource type 'Microsoft.ConfidentialLedger/ledgers' and associated configuration parameters. Dependencies for successful deployment include access to the Azure Portal and relevant permissions to create resources. Keys such as resource group, ledger name, and configuration details are required as parameters. This template is intended to be launched through Azure's 'Deploy to Azure' button or programmatically via ARM tools, and produces a ledger endpoint upon successful deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.confidentialledger/confidential-ledger-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.ConfidentialLedger/ledgers\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource URLs\nDESCRIPTION: URLs for deploying the template to Azure and Azure US Gov environments, formatted for ARM template deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sonarqube/sonarqube-azuresql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\nhttps://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fsonarqube%2Fsonarqube-azuresql%2Fazuredeploy.json\n```\n\nLANGUAGE: json\nCODE:\n```\nhttps://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fsonarqube%2Fsonarqube-azuresql%2Fazuredeploy.json\n```\n\n----------------------------------------\n\nTITLE: Adding Azure Deployment Buttons in Markdown\nDESCRIPTION: This code snippet demonstrates how to include deployment buttons for Azure and Azure US Gov, as well as a visualization button, in a markdown file. The buttons link to the respective deployment pages and the ARM template visualizer.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/test/ci-tests/data/fix-readme-tests/README.nobicep.expected.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Tags\nDESCRIPTION: These tags identify the Azure resources created or managed by the ARM template. They specify the types of resources involved, such as Data Factories, Linked Services (FTP, Azure Storage, HDInsight, Azure SQL), Datasets (FileShare, Azure Blob, Azure SQL Table), Data Pipelines, and Activities (Copy, HDInsight Hive), along with data formats and sources/sinks.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-ftp-hive-blob/README.md#2025-04-23_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n`Tags: Microsoft.DataFactory/datafactories, linkedservices, FtpServer, AzureStorage, HDInsightOnDemand, AzureSqlDatabase, datasets, FileShare, AzureBlob, TextFormat, AzureSqlTable, datapipelines, Copy, FileSystemSource, BlobSink, HDInsightHive, BlobSource, SqlSink`\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Declaration\nDESCRIPTION: Resource tags specification for the Azure deployment template, defining Microsoft Network components for Front Door configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-custom-domain-customer-certificate/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/frontDoors, Microsoft.Network/frontdoors/frontendEndpoints/customHttpsConfiguration\n```\n\n----------------------------------------\n\nTITLE: LDAP Data Connector Configuration\nDESCRIPTION: XML configuration for the LDAP data connector in Shibboleth, specifying connection details and attribute filtering settings.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/shibboleth/shibboleth-cluster-windows/README.md#2025-04-23_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<resolver:DataConnector id=\"myLDAP\" xsi:type=\"dc:LDAPDirectory\"\n                        ldapURL=\"%{idp.attribute.resolver.LDAP.ldapURL}\"\n                        baseDN=\"%{idp.attribute.resolver.LDAP.baseDN}\"\n                        principal=\"%{idp.attribute.resolver.LDAP.bindDN}\"\n                        principalCredential=\"%{idp.attribute.resolver.LDAP.bindDNCredential}\">\n    <dc:FilterTemplate>\n        <![CDATA[\n        %{idp.attribute.resolver.LDAP.searchFilter}\n        ]]>\n    </dc:FilterTemplate>\n    <dc:ReturnAttributes>%{idp.attribute.resolver.LDAP.returnAttributes}</dc:ReturnAttributes>\n</resolver:DataConnector>\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template via Azure PowerShell - PowerShell\nDESCRIPTION: This PowerShell snippet demonstrates how to deploy the provided ARM template for the data factory Hive pipeline scenario. Users run the Deploy-AzureResourceGroup.ps1 script, specifying the target Azure region with -ResourceGroupLocation and providing the folder containing deployment artifacts. Requires Azure PowerShell modules and template files in the indicated directory. Inputs include resource group location and artifact directory; outputs are the provisioned Azure resources as described in the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-hive-transformation/README.md#2025-04-23_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\Deploy-AzureResourceGroup.ps1 -ResourceGroupLocation 'eastus' -ArtifactStagingDirectory 101-data-factory-hive-transformation\n```\n\n----------------------------------------\n\nTITLE: Azure ARM Tag Definition for API Management\nDESCRIPTION: Resource tags definition showing supported Microsoft services and features for API Management custom hostname deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.apimanagement/api-management-create-with-hostname/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.ApiManagement/service, Proxy, DeveloperPortal\"\n```\n\n----------------------------------------\n\nTITLE: Specifying Dependencies in Bicep\nDESCRIPTION: Demonstrates how to specify deployment sequence dependencies using the dependsOn property in Bicep. Dependencies are used to ensure resources are deployed in the correct order and are only allowed for resources within the same template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_4\n\nLANGUAGE: bicep\nCODE:\n```\n    dependsOn: [\n        storageAccount\n    ]\n```\n\n----------------------------------------\n\nTITLE: Navigating to VM Extension Log Directory\nDESCRIPTION: Command to change directory to the logging location where the WildFly installation logs are stored in the VM. This directory contains logs from the custom script extension execution.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/wildfly/wildfly-standalone-centos8/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd /var/lib/waagent/custom-script/download/0\n```\n\n----------------------------------------\n\nTITLE: Azure Tags Declaration in ARM Template\nDESCRIPTION: Sample tag declaration from an ARM template showing the Microsoft.Compute extension used for disk encryption.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/encrypt-running-linux-vm-without-aad/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Compute/virtualMachines/extensions, [variables('extensionName')]\n```\n\n----------------------------------------\n\nTITLE: ARM Template Tags Definition for Application Gateway\nDESCRIPTION: Resource tags section of the ARM template indicating the main Azure services and components used in this deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-probe/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/applicationGateways\"\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Manager Template for Memcached Cluster\nDESCRIPTION: This JSON snippet represents the main structure of an Azure Resource Manager template for deploying a memcached cluster. It includes parameters, variables, and resources sections, though the specific details are not shown in this excerpt.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/memcached-multi-vm-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": { },\n  \"variables\": { },\n  \"resources\": [ ],\n  \"outputs\": { }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Firewall with Tags\nDESCRIPTION: Resource tags defined for Azure Firewall deployment, specifying Microsoft resources and permissions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azurefirewall-forced-tunneling/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/routeTables, Microsoft.Network/virtualNetworks, Microsoft.Network/virtualNetworks/virtualNetworkPeerings, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Network/azureFirewalls, Allow\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Key Vault for Template Deployment with PowerShell\nDESCRIPTION: PowerShell command to enable Azure Key Vault for template deployment access. This allows ARM templates to retrieve secrets during deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-secure-password/README.md#2025-04-23_snippet_2\n\nLANGUAGE: PowerShell\nCODE:\n```\nSet-AzKeyVaultAccessPolicy -VaultName Contoso -EnabledForTemplateDeployment\n```\n\n----------------------------------------\n\nTITLE: Connecting to MySQL Master Server via Command Line\nDESCRIPTION: Command to connect to the master MySQL server through the load balancer using the admin credentials. The master server is accessible by default on port 3306.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-replication/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n> mysql -h mysqldns.eastus.cloudapp.azure.com -u admin -p\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Logic App for Backup Job Reporting\nDESCRIPTION: ARM template snippet for deploying the Logic App. It includes resource tags and deployment parameters for configuring the Logic App workflow.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/backup-jobs-report/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\n  \"Microsoft.Web/connections\": {},\n  \"Microsoft.Logic/workflows\": {},\n  \"Recurrence\": {},\n  \"Foreach\": {},\n  \"AppendToStringVariable\": {},\n  \"If\": {},\n  \"ApiConnection\": {},\n  \"InitializeVariable\": {},\n  \"string\": {},\n  \"array\": {},\n  \"Scope\": {},\n  \"Table\": {},\n  \"SetVariable\": {},\n  \"Microsoft.OperationalInsights/workspaces\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting to VM Scale Set via SSH\nDESCRIPTION: Command line example showing how to connect to a VM in the scale set through the load balancer's NAT rule on a specific port.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-existing-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nssh -p 50000 {username}@{public-ip-address}\n```\n\n----------------------------------------\n\nTITLE: Declaring Azure Resource Tags for Service Bus Components\nDESCRIPTION: This line declares the Azure resource types that are created or managed by the associated ARM template. It specifically lists Service Bus namespaces, topics, subscriptions, and rules, aiding in categorization and search within Azure Quickstart Templates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.servicebus/servicebus-create-topic-subscription-rule/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.ServiceBus/namespaces, topics, Subscriptions, Rules`\n```\n\n----------------------------------------\n\nTITLE: Specifying Resource Tags for Microsoft Purview Account\nDESCRIPTION: This JSON snippet shows the tags used for the Microsoft Purview account resource in the ARM template. It includes a 'SystemAssigned' tag, indicating the use of system-assigned managed identity.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurepurview/azure-purview-deployment/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Purview/accounts, SystemAssigned\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Deployment Properties in ARM Template (JSON)\nDESCRIPTION: This snippet demonstrates using the ARM template `deployment()` function to access properties of the current deployment. Specifically, `deployment().properties.templateLink.uri` retrieves the base URI where the managed application package contents (including the main template and any linked templates or additional files) are stored. This base URI is crucial for constructing relative paths to other files within the package.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.solutions/managed-application-with-linked-templates/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\ndeployment().properties.templateLink.uri\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Recovery Services Vault and Backup Policies - Bicep Template - Bicep\nDESCRIPTION: This snippet represents the Bicep template equivalent for provisioning Azure Recovery Services Vault, backup policies, VM registration, and workload protection. Bicep simplifies authoring and managing complex ARM template deployments. Required dependencies are the Azure Bicep CLI and proper permissions. Parameters control resource configurations, and outputs are the provisioned resources. Limitations are similar to those of ARM templates, including Azure API constraints and quota limits.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-vm-workload-backup/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\n\"Tags: Microsoft.RecoveryServices/vaults, Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers, Microsoft.RecoveryServices/vaults/backupPolicies, Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems, Microsoft.Compute/virtualMachines, Microsoft.SqlVirtualMachine/sqlVirtualMachines, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups\"\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Subscription IDs using Azure CLI\nDESCRIPTION: This Azure CLI command lists all accessible Azure subscriptions, displaying their names and IDs. This is used as a prerequisite step to identify the target subscription ID for assigning roles.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz account list --query '[].[name,id]' --output tsv\n```\n\n----------------------------------------\n\nTITLE: Syncing a Fork with Upstream Repository\nDESCRIPTION: Series of commands to update your fork with changes from the original repository, ensuring your local copy is up-to-date before making new changes.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n# Get all of the latest from upstream for all branches\ngit fetch upstream\n# Now make sure you're on master - the main branch for this project\ngit checkout master\n# Merge in the changes from upstream (note: this commits locally)\ngit merge upstream/master\n# And then push those to your fork on GitHub\ngit push\n```\n\n----------------------------------------\n\nTITLE: Deploying Concourse CI on Azure with Deployment Script\nDESCRIPTION: Shell command to deploy Concourse CI using a pre-configured script. This script uses the pre-created cloud-config manifest file 'cloud-config.yml' and deployment manifest file 'concourse.yml' in the '~/example_manifests' directory.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/concourse/concourse-ci/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./deploy_concourse.sh\n```\n\n----------------------------------------\n\nTITLE: Resource Declaration - Azure AI Agent Service Components\nDESCRIPTION: List of Azure resources that get deployed as part of the standard agent setup, including resource groups, Key Vault, Storage, AI workspaces, Cognitive Services, and Search services.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azure-ai-agent-service/standard-agent/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Provider and type | Description |\n| - | - |\n| `Microsoft.Resources/resourceGroups` | The resource group all resources get deployed into |\n| `Microsoft.KeyVault/vaults` | An Azure Key Vault instance associated to the Azure Machine Learning workspace |\n| `Microsoft.Storage/storageAccounts` | An Azure Storage instance associated to the Azure Machine Learning workspace |\n| `Microsoft.MachineLearningServices/workspaces` | An Azure AI hub (Azure Machine Learning RP workspace of kind 'hub') |\n| `Microsoft.MachineLearningServices/workspaces` | An Azure AI project (Azure Machine Learning RP workspace of kind 'project') |\n| `Microsoft.CognitiveServices/accounts` | An Azure AI Services as the model-as-a-service endpoint provider (allowed kinds: 'AIServices' and 'OpenAI') |\n| `Microsoft.CognitiveServices/accounts/deployments` | A gpt-4o-mini model is deployed |\n| `Microsoft.Search/searchServices` | An Azure AI Search account  |\n```\n\n----------------------------------------\n\nTITLE: Creating SSH Tunnel for VNC Access on OS X\nDESCRIPTION: This command creates an SSH tunnel on OS X to securely access the VNC server running on the Ubuntu VM. It forwards local port 5000 to the VNC port 5901 on the remote VM.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ubuntu-desktop-gnome/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nssh  -N -f -L 5000:localhost:5901 azureuser@<JUMPBOX_IP>\n```\n\n----------------------------------------\n\nTITLE: Configuring App Service for ASEv3\nDESCRIPTION: This snippet shows the configuration of an App Service within the App Service Plan. It includes default values for the app name, PHP version, .NET Framework version, and Always-on setting.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-asp-app-on-asev3-create/README.md#2025-04-23_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"appName\": \"string\",\n  \"phpVersion\": \"OFF\",\n  \"netFrameworkVersion\": \"v5.0\",\n  \"alwaysOn\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Infrastructure Parameters Table\nDESCRIPTION: A structured table of parameters used for Azure infrastructure deployment, including parameter names, types, and descriptions covering networking, compute, storage, and security configurations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/aifoundry-networking-aoao/README.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| virtualNetworkName                        | string | Specifies the name of the virtual network.                                                                                  |\n| virtualNetworkAddressPrefixes             | string | Specifies the address prefixes of the virtual network.                                                                      |\n| vmSubnetName                              | string | Specifies the name of the subnet which contains the virtual machine.                                                        |\n| vmSubnetAddressPrefix                     | string | Specifies the address prefix of the subnet which contains the virtual machine.                                              |\n| vmSubnetNsgName                           | string | Specifies the name of the network security group associated with the subnet hosting the virtual machine.                    |\n| bastionSubnetAddressPrefix                | string | Specifies the Bastion subnet IP prefix. This prefix must be within the virtual network IP prefix address space.             |\n| bastionSubnetNsgName                      | string | Specifies the name of the network security group associated with the subnet hosting Azure Bastion.                          |\n| bastionHostEnabled                        | bool   | Specifies whether Azure Bastion should be created.                                                                          |\n| bastionHostName                           | string | Specifies the name of the Azure Bastion resource.                                                                           |\n| bastionHostDisableCopyPaste               | bool   | Enable/Disable Copy/Paste feature of the Bastion Host resource.                                                             |\n| bastionHostEnableFileCopy                 | bool   | Enable/Disable File Copy feature of the Bastion Host resource.                                                              |\n| bastionHostEnableIpConnect                | bool   | Enable/Disable IP Connect feature of the Bastion Host resource.                                                             |\n| bastionHostEnableShareableLink            | bool   | Enable/Disable Shareable Link of the Bastion Host resource.                                                                 |\n| bastionHostEnableTunneling                | bool   | Enable/Disable Tunneling feature of the Bastion Host resource.                                                              |\n| bastionPublicIpAddressName                | string | Specifies the name of the Azure Public IP Address used by the Azure Bastion Host.                                           |\n| bastionHostSkuName                        | string | Specifies the name of the Azure Bastion Host SKU.                                                                           |\n| natGatewayName                            | string | Specifies the name of the Azure NAT Gateway.                                                                                |\n| natGatewayZones                           | array  | Specifies a list of availability zones denoting the zone in which the NAT Gateway should be deployed.                       |\n| natGatewayPublicIps                       | int    | Specifies the number of Public IPs to create for the Azure NAT Gateway.                                                     |\n| natGatewayIdleTimeoutMins                 | int    | Specifies the idle timeout in minutes for the Azure NAT Gateway.                                                            |\n| blobStorageAccountPrivateEndpointName     | string | Specifies the name of the private link to the blob storage account.                                                         |\n| fileStorageAccountPrivateEndpointName     | string | Specifies the name of the private link to the file storage account.                                                         |\n| keyVaultPrivateEndpointName               | string | Specifies the name of the private link to the Key Vault.                                                                    |\n| acrPrivateEndpointName                    | string | Specifies the name of the private link to the Azure Container Registry.                                                     |\n| hubWorkspacePrivateEndpointName           | string | Specifies the name of the private link to the Azure Hub Workspace.                                                          |\n| vmName                                    | string | Specifies the name of the virtual machine.                                                                                  |\n| vmSize                                    | string | Specifies the size of the virtual machine.                                                                                  |\n| imagePublisher                            | string | Specifies the image publisher of the disk image used to create the virtual machine.                                         |\n| imageOffer                                | string | Specifies the offer of the platform image or marketplace image used to create the virtual machine.                          |\n| imageSku                                  | string | Specifies the image version for the virtual machine.                                                                        |\n| authenticationType                        | string | Specifies the type of authentication when accessing the virtual machine. SSH key is recommended.                            |\n| vmAdminUsername                           | string | Specifies the name of the administrator account of the virtual machine.                                                     |\n| vmAdminPasswordOrKey                      | string | Specifies the SSH Key or password for the virtual machine. SSH key is recommended.                                          |\n| diskStorageAccountType                    | string | Specifies the storage account type for OS and data disk.                                                                    |\n| numDataDisks                              | int    | Specifies the number of data disks of the virtual machine.                                                                  |\n| osDiskSize                                | int    | Specifies the size in GB of the OS disk of the VM.                                                                          |\n| dataDiskSize                              | int    | Specifies the size in GB of the data disk of the virtual machine.                                                           |\n| dataDiskCaching                           | string | Specifies the caching requirements for the data disks.                                                                      |\n| enableMicrosoftEntraIdAuth                | bool   | Specifies whether to enable Microsoft Entra ID authentication on the virtual machine.                                       |\n| enableAcceleratedNetworking               | bool   | Specifies whether to enable accelerated networking on the virtual machine.                                                  |\n| tags                                      | object | Specifies the resource tags for all the resources.                                                                          |\n| userObjectId                              | string | Specifies the object ID of a Microsoft Entra ID user.                                                                       |\n```\n\n----------------------------------------\n\nTITLE: Listing Relevant Azure Resource Types for TemplateSpec Migration\nDESCRIPTION: Identifies the Azure resource types associated with the TemplateSpec creation and migration process described in the document. This includes Azure Resource Manager deployments, the TemplateSpecs resources themselves, specific versions of TemplateSpecs, and potentially dependent resources like Compute Disks.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.resources/templatespec-migrate-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Resources/deployments, Microsoft.Resources/templateSpecs, versions, Microsoft.Compute/disks\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags definition for the Azure deployment template, specifying the Azure services and components used in the Minecraft server deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/minecraft/minecraft-on-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Compute/virtualMachines/extensions, CustomScript, Microsoft.Network/networkSecurityGroups, Microsoft.Network/networkInterfaces, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Compute/virtualMachines\n```\n\n----------------------------------------\n\nTITLE: Generating SAS Signatures for Blob Upload in C#\nDESCRIPTION: This C# code demonstrates how to generate Shared Access Signatures (SAS) for uploading files to Azure Blob Storage containers through Front Door. It creates SAS tokens with write and create permissions that expire after one hour.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-storage-blobs-upload/README.md#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\n// the server side\n\nvar storageAccounts = new[] {\n    new {\n        FrontDoorName = \"https://contosoFrontDoorEndpoint-XXXXXX.azurefd.net/\",\n        ShardName = \"contosoUK01\",\n        AccountName = \"contosoUK01\",\n        AccountKey = \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000==\",\n        ContainerName = \"uploadcontainer\"\n    }\n};\n\n\nIEnumerable<(Uri BlobUri, string SharedAccessSignature)> serverAPIgetUploadAddresses(string blobName, string userId)\n{\n    var locations = storageAccounts.Select(x =>\n    {\n        Uri blobUri = new($\"https://{x.FrontDoorName}/{x.ShardName}/{blobName}\");\n\n    var sas = new BlobSasBuilder(\n        permissions: BlobSasPermissions.Write | BlobSasPermissions.Create,\n        expiresOn: DateTimeOffset.UtcNow.AddHours(1))\n    {\n        BlobContainerName = x.ContainerName,\n        BlobName = blobName,\n        Resource = \"b\",\n    }.ToSasQueryParameters(sharedKeyCredential: new StorageSharedKeyCredential(\n            accountName: x.AccountName,\n            accountKey: x.AccountKey))\n        .ToString();\n\n    return (blobUri, sas);\n}).ToArray();\n// Here we derive a shard key from the user ID.\n//\n// So some users will get the sequence\n// [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ], while others get\n// [ 3, 4, 5, 6, 7, 8, 9, 0, 1, 2 ] or\n// [ 4, 5, 6, 7, 8, 9, 0, 1, 2, 3 ].\n//\n// This way we can distribute the load across all storage accounts.\n//\nvar startShard = userId.GetHashCode() % storageAccounts.Length;\nreturn locations.Skip(startShard).Concat(locations.Take(startShard));\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Microsoft Purview Account Resource in ARM Template\nDESCRIPTION: This JSON snippet defines the Microsoft Purview account resource in an Azure Resource Manager template. It specifies the resource type and includes a system-assigned managed identity.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurepurview/azure-purview-deployment/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Microsoft.Purview/accounts\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags for the Azure template deployment, specifying integration with Kemp, OMS, and solution components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/oms-kemp-applicationdelivery-solution/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags\": \"kemp, oms, msoms, solution, example, walkthrough, #msoms, Microsoft.OperationalInsights/workspaces, Microsoft.OperationalInsights/workspaces/views, Blade, OverviewTile, Microsoft.OperationsManagement/solutions, Microsoft.OperationalInsights/workspaces/savedSearches, Microsoft.OperationalInsights/workspaces/savedSearches/schedules, Microsoft.OperationalInsights/workspaces/savedSearches/schedules/actions, Alert\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags definition specifying the Microsoft services and components used in this template including Web connections, Logic workflows, and Operational Insights workspaces.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/backup-all-tabs-report/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/connections, Microsoft.Logic/workflows, Recurrence, Foreach, AppendToStringVariable, If, ApiConnection, InitializeVariable, string, array, Scope, Table, SetVariable, Microsoft.OperationalInsights/workspaces\"\n```\n\n----------------------------------------\n\nTITLE: Staging a Specific File for Commit\nDESCRIPTION: Command to stage a specific file for a commit, creating a snapshot of the file in its current state to be included in the next commit.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngit add ./path-to/my-file.md\n```\n\n----------------------------------------\n\nTITLE: Resource Tags for Azure Consul Deployment\nDESCRIPTION: Resource tags specifying the Azure services and components used in the Consul cluster deployment template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/consul/consul-on-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Compute/availabilitySets, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/loadBalancers, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Creating a New Branch for Development\nDESCRIPTION: Commands to create a new branch based on the master branch. First ensures you're on master, then creates and switches to a new branch for isolated changes.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# This makes sure that your new branch is based on master\ngit checkout master\n# This creates the new branch\ngit checkout -b my-new-branch\n```\n\n----------------------------------------\n\nTITLE: Adding createUiDefinition.json to Deploy Button\nDESCRIPTION: This snippet explains how to include a createUiDefinition.json file in the Azure deployment button URL. It provides an example of how to construct the URL with both the azuredeploy.json and createUiDefinition.json files.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/sample-README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fpath-to-sample%2Fazuredeploy.json/createUIDefinitionUri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fpath-to-sample%2FcreateUiDefinition.json\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration\nDESCRIPTION: Resource tags configuration specifying the services and components used in the template including Microsoft Web connections, Logic workflows, and Operational Insights workspaces.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/backup-policyadherence-report/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Web/connections, Microsoft.Logic/workflows, Recurrence, Foreach, AppendToStringVariable, If, ApiConnection, InitializeVariable, string, array, Scope, Table, SetVariable, Microsoft.OperationalInsights/workspaces\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Configuration for Azure Template\nDESCRIPTION: Resource tags configuration for Azure deployment template identifying the Microsoft resources and services used in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/1vm-2nics-2subnets-1vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Compute/virtualMachines, Microsoft.Storage/storageAccounts, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Network/publicIPAddresses\n```\n\n----------------------------------------\n\nTITLE: ARM Tags Declaration for Azure Front Door WAF\nDESCRIPTION: Resource tags definition for Azure Front Door deployment including CDN profiles, WAF policies, Log Analytics, and diagnostic settings.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-waf-custom/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Cdn/profiles, Microsoft.Cdn/profiles/afdEndpoints, Microsoft.Cdn/profiles/originGroups, Microsoft.Cdn/profiles/originGroups/origins, Microsoft.Cdn/profiles/afdEndpoints/routes, Microsoft.Network/FrontDoorWebApplicationFirewallPolicies, Microsoft.Cdn/profiles/securityPolicies, Microsoft.OperationalInsights/workspaces, Microsoft.Insights/diagnosticSettings\n```\n\n----------------------------------------\n\nTITLE: Configuring Administrative Group for AADDS\nDESCRIPTION: Creates the AAD DC Administrators security group, retrieves its object ID, then adds a user to this group. This group is required for delegated administration of the domain service.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/aad-domainservices/README.md#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n# Create the delegated administration group for AAD Domain Services.\nNew-AzureADGroup -DisplayName \"AAD DC Administrators\" `\n                 -Description \"Delegated group to administer Azure AD Domain Services\" `\n                 -SecurityEnabled $true -MailEnabled $false `\n                 -MailNickName \"AADDCAdministrators\"\n\n# Add user to \"AAD DC Administrators\" group\n\n# First, retrieve the object ID of the newly created 'AAD DC Administrators' group.\n$GroupObjectId = Get-AzureADGroup `\n-Filter \"DisplayName eq 'AAD DC Administrators'\" | `\nSelect-Object ObjectId\n\n# Now, retrieve the object ID of the user you'd like to add to the group.\n$UserObjectId = Get-AzureADUser `\n-Filter \"UserPrincipalName eq 'admin@contoso100.onmicrosoft.com'\" | `\nSelect-Object ObjectId\n\n# Add the user to the 'AAD DC Administrators' group.\nAdd-AzureADGroupMember -ObjectId $GroupObjectId.ObjectId -RefObjectId $UserObjectId.ObjectId\n```\n\n----------------------------------------\n\nTITLE: Assigning Owner Role at Tenant Scope using Azure CLI\nDESCRIPTION: This Azure CLI command assigns the Owner role to a specified user at the tenant scope ('/'), which is necessary for deploying tenant-level templates. The [userId] should be replaced with the actual user's sign-in name or object ID.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/tenant-deployments/README.md#2025-04-23_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\naz role assignment create --role \"Owner\" --assignee \"[userId]\" --scope \"/\"\n```\n\n----------------------------------------\n\nTITLE: Tagging Azure Resources with Resource Types - Bicep/JSON\nDESCRIPTION: This snippet defines a string of resource tags to categorize deployed Azure resources by type, intended for template-level reuse or documentation purposes. The tags help in classifying or searching resources after deployment and demonstrate parameterization or annotation, commonly used in ARM or Bicep templates. There are no required external dependencies, and inputs/outputs relate solely to Azure resource meta-tagging and documentation within the template or portal UI.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/virtual-wan-routing-intent/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\n`Tags: Virtual WAN, vWAN, Hub, Routing Intent and Policies, Azure Firewall, Azure Firewall Policies, ExpressRoute, VPN S2S, Microsoft.Network/virtualWans, Microsoft.Network/virtualHubs, Microsoft.Network/virtualNetworks, Microsoft.Network/virtualHubs/hubVirtualNetworkConnections, Microsoft.Network/vpnGateways, Microsoft.Network/expressRouteGateways, Microsoft.Network/azureFirewalls, Microsoft.Network/firewallPolicies, Microsoft.Network/ipGroups, Microsoft.Network/virtualHubs/routingIntent`\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Template Deployment\nDESCRIPTION: Command to deploy the ARM template using Azure CLI with specified deployment name and resource group\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/visualstudio/ubuntu-mate-desktop-vscode/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz group deployment create --name \"name of your deployment\" --resource-group \"resource-group\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Application Gateway Log Analyzer Badges\nDESCRIPTION: Markdown code for displaying various Azure badges indicating test dates, deployment status, and best practices for the Application Gateway Log Analyzer template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/application-gateway-logviewer-goaccess/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n![Azure Public Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/demos/application-gateway-logviewer-goaccess/PublicLastTestDate.svg)\n![Azure Public Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/demos/application-gateway-logviewer-goaccess/PublicDeployment.svg)\n\n![Azure US Gov Last Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/demos/application-gateway-logviewer-goaccess/FairfaxLastTestDate.svg)\n![Azure US Gov Last Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/demos/application-gateway-logviewer-goaccess/FairfaxDeployment.svg)\n\n![Best Practice Check](https://azurequickstartsservice.blob.core.windows.net/badges/demos/application-gateway-logviewer-goaccess/BestPracticeResult.svg)\n![Cred Scan Check](https://azurequickstartsservice.blob.core.windows.net/badges/demos/application-gateway-logviewer-goaccess/CredScanResult.svg)\n\n![Bicep Version](https://azurequickstartsservice.blob.core.windows.net/badges/demos/application-gateway-logviewer-goaccess/BicepVersion.svg)\n```\n\n----------------------------------------\n\nTITLE: Azure Maps Resource Tag Definition\nDESCRIPTION: Resource tag definition showing the Microsoft.Maps/accounts resource type specification.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.maps/maps-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTags: Microsoft.Maps/accounts\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription using Azure CLI\nDESCRIPTION: Command to set the active Azure subscription for deployment using subscription ID\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cognitiveservices/cognitive-services-Computer-vision-API/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Global Load Balancer Infrastructure\nDESCRIPTION: ARM template tags defining the infrastructure components including load balancers, network interfaces, virtual machines, and security groups for a global load balancing setup.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/load-balancer-cross-region/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nload balancer, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines/extensions, CustomScriptExtension, Microsoft.Compute/virtualMachines, Microsoft.Network/virtualNetworks/subnets, Microsoft.Network/bastionHosts, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/loadBalancers/backendAddressPools\n```\n\n----------------------------------------\n\nTITLE: Describing Tutor for Open edX Deployment\nDESCRIPTION: This snippet explains what Tutor is and its benefits for deploying Open edX. It highlights Tutor's Docker-based approach, scalability, and ease of use for both production and local development environments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/opendx/openedx-tutor-lilac-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTutor is the Docker-based Open edX distribution, both for production and local development.\nOpen edx can be scaled, upgraded, customerized and deployed easily through it.\nTutor is reliable, fast and extensible, which has been used by hundreds of Open edX platforms around the world.\nAfter 'tutor local quickstart', A full, production-ready Open edX platform (Lilac release) will run with docker-compose.\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags specification for the Azure deployment template, defining the main components and services used in the Drone CI VM deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/drone/drone-ubuntu-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Tagging Azure Relay Namespace Resource in ARM Template - JSON\nDESCRIPTION: This snippet shows a tag declaration for Azure Resource Manager templates, specifically for the Azure Relay Namespace resource. It indicates the resource type as 'Microsoft.Relay/Namespaces' which is key to configuring Resource Manager deployments and enables categorization and filtering in the Azure portal. No external dependencies are required, but an Azure subscription and ARM template deployment capability are prerequisites.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.relay/azure-relay-create-namespace/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Relay/Namespaces\"\n```\n\n----------------------------------------\n\nTITLE: Rancher Access Configuration\nDESCRIPTION: URL pattern for accessing the dockerized Rancher server running on port 8080. No authentication is configured by default.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-linux-dynamic-data-disks/README.md#2025-04-23_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nhttp://'DNS Name'.'location'.cloudapp.azure.com:8080\n```\n\n----------------------------------------\n\nTITLE: Deploying Windows VM with O365 using ARM Template\nDESCRIPTION: This ARM template snippet shows the resource tags used to identify the template's purpose and associated Azure products. It's part of the metadata for the quickstart template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/office/windows-vm-o365/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\n  \"$schema\": \"https://aka.ms/azure-quickstart-templates-metadata-schema#\",\n  \"type\": \"QuickStart\",\n  \"environments\": [\n    \"AzureCloud\"\n  ],\n  \"products\": [\n    \"azure\",\n    \"office-365\"\n  ],\n  \"categories\": [\n    \"virtualMachine\",\n    \"office\"\n  ],\n  \"languages\": [\n    \"json\",\n    \"bicep\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Deployment Status Badges in Markdown\nDESCRIPTION: This snippet demonstrates how to embed Azure deployment status badges in a Markdown file. It includes badges for public and US government deployments, last test dates, best practice checks, and credential scan results.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/shared_scripts/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Azure Public Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/shared_scripts/PublicLastTestDate.svg)\n![Azure Public Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/shared_scripts/PublicDeployment.svg)\n\n![Azure US Gov Last Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/shared_scripts/FairfaxLastTestDate.svg)\n![Azure US Gov Last Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/shared_scripts/FairfaxDeployment.svg)\n\n![Best Practice Check](https://azurequickstartsservice.blob.core.windows.net/badges/shared_scripts/BestPracticeResult.svg)\n![Cred Scan Check](https://azurequickstartsservice.blob.core.windows.net/badges/shared_scripts/CredScanResult.svg)\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Configuration for Azure Template\nDESCRIPTION: Defines the Azure resource tags used in the template, specifying the required Azure services and extensions for VM deployment and script execution.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-custom-script-windows/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, extensions, CustomScriptExtension\n```\n\n----------------------------------------\n\nTITLE: Setting the Correct Azure Subscription\nDESCRIPTION: Command to set the active Azure subscription to be used for deployment. This ensures resources are deployed to the correct subscription.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/tomcat/openjdk-tomcat-ubuntu-vm/gettingstarted.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Referencing Storage Endpoints in JSON\nDESCRIPTION: Shows how to use the reference() function to access storage account properties in JSON for VM boot diagnostics. Includes the API version to ensure compatibility.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n\"diagnosticsProfile\": {\n  \"bootDiagnostics\": {\n    \"enabled\": true,\n      \"storageUri\": \"[reference(variables('diagStorageAccountName'), '2017-10-01').primaryEndpoints['blob']]\"\n      }\n}\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Configuration for Azure Extended Zone VM\nDESCRIPTION: Resource tags definition specifying the Microsoft Azure resources used in the template including networking components and virtual machine resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/extended-zones-vm-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Network/networkInterfaces, Microsoft.Network/networkSecurityGroups, Microsoft.Network/publicIPAddresses, Microsoft.Compute/virtualMachines, Microsoft.Network/virtualNetworks\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Tags in JSON\nDESCRIPTION: This JSON snippet defines Azure resource tags for the template. It specifies the resources used, including storage accounts, network components, and virtual machines. It also indicates the use of LinuxChefClient extension.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/chef-json-parameters-linux-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, LinuxChefClient\"\n```\n\n----------------------------------------\n\nTITLE: ARM Template Tags for Azure Application Gateway Deployment\nDESCRIPTION: Resource tags for the Azure ARM template deployment specifying the managed identities, key vault, networking, and application gateway components that will be created.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-key-vault-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.ManagedIdentity/userAssignedIdentities, Microsoft.KeyVault/vaults, Microsoft.KeyVault/vaults/secrets, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/applicationGateways, UserAssigned\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Alert to Queue Logic App in Azure\nDESCRIPTION: This code snippet represents the tags section of an Azure Resource Manager template. It defines the resources and connections required for creating a Logic app that connects a webhook to an Azure Storage queue.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/alert-to-queue-with-logic-app/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/connections, Microsoft.Logic/workflows, request, ApiConnection\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Stack HCI Cluster with Azure CLI\nDESCRIPTION: This snippet demonstrates how to use Azure CLI to deploy an Azure Stack HCI cluster using a Bicep template and parameter file, setting the deployment mode to 'Deploy'.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurestackhci/create-cluster-with-prereqs/README.md#2025-04-23_snippet_2\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create -g rg-myhcicluster -f .\\main.bicep -p .\\azuredeploy.parameters.contoso.json -p deploymentMode=Deploy\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure VNet and HDInsight HBase Cluster - ARM Template - JSON\nDESCRIPTION: This ARM template snippet provisions an Azure Virtual Network (VNet) alongside a Linux-based HDInsight HBase cluster within the VNet. Required dependencies include an Azure subscription with Resource Manager access and permissions to create network, storage, and HDInsight resources. Key parameters typically include VNet settings, storage account type, and HDInsight cluster sizing and credentials. The template expects parameter values for customization, creates all resources in a single deployment, and outputs resource identifiers upon completion. This approach ensures secure, consistent infrastructure setup for managed HBase workloads on Azure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-hbase-linux-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"clusterName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"The name of the HDInsight HBase cluster to create.\"\n      }\n    },\n    \"adminUsername\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Admin username for HDInsight cluster.\"\n      }\n    },\n    \"adminPassword\": {\n      \"type\": \"securestring\",\n      \"metadata\": {\n        \"description\": \"Admin user password.\"\n      }\n    },\n    \"vnetName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the Azure Virtual Network.\"\n      }\n    },\n    \"addressPrefix\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"10.0.0.0/16\",\n      \"metadata\": {\n        \"description\": \"Address prefix for VNet.\"\n      }\n    },\n    \"subnetName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"default\",\n      \"metadata\": {\n        \"description\": \"Subnet name in VNet.\"\n      }\n    },\n    \"subnetPrefix\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"10.0.0.0/24\",\n      \"metadata\": {\n        \"description\": \"Subnet prefix for the subnet where HBase cluster will reside.\"\n      }\n    },\n    \"storageAccountType\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"Standard_LRS\",\n      \"allowedValues\": [\n        \"Standard_LRS\",\n        \"Standard_GRS\",\n        \"Standard_RAGRS\",\n        \"Standard_ZRS\"\n      ],\n      \"metadata\": {\n        \"description\": \"Storage account type for HDInsight cluster.\"\n      }\n    }\n  },\n  \"variables\": {\n    \"storageAccountName\": \"[concat('hdistorage', uniqueString(resourceGroup().id))]\"\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Network/virtualNetworks\",\n      \"apiVersion\": \"2020-06-01\",\n      \"name\": \"[parameters('vnetName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"properties\": {\n        \"addressSpace\": {\n          \"addressPrefixes\": [\n            \"[parameters('addressPrefix')]\"\n          ]\n        },\n        \"subnets\": [\n          {\n            \"name\": \"[parameters('subnetName')]\",\n            \"properties\": {\n              \"addressPrefix\": \"[parameters('subnetPrefix')]\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts\",\n      \"apiVersion\": \"2019-06-01\",\n      \"name\": \"[variables('storageAccountName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"sku\": {\n        \"name\": \"[parameters('storageAccountType')]\"\n      },\n      \"kind\": \"Storage\",\n      \"properties\": {}\n    },\n    {\n      \"type\": \"Microsoft.HDInsight/clusters\",\n      \"apiVersion\": \"2018-06-01-preview\",\n      \"name\": \"[parameters('clusterName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]\",\n        \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]\"\n      ],\n      \"properties\": {\n        \"clusterVersion\": \"4.0\",\n        \"osType\": \"Linux\",\n        \"tier\": \"Standard\",\n        \"clusterDefinition\": {\n          \"kind\": \"HBase\"\n        },\n        \"computeProfile\": {\n          \"roles\": [\n            {\n              \"name\": \"headnode\",\n              \"targetInstanceCount\": 2,\n              \"hardwareProfile\": {\n                \"vmSize\": \"Standard_D3_V2\"\n              },\n              \"osProfile\": {\n                \"linuxOperatingSystemProfile\": {\n                  \"username\": \"[parameters('adminUsername')]\",\n                  \"password\": \"[parameters('adminPassword')]\"\n                }\n              },\n              \"virtualNetworkProfile\": {\n                \"id\": \"[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]\",\n                \"subnet\": \"[concat(parameters('vnetName'), '/', parameters('subnetName'))]\"\n              }\n            }\n            // ... (additional HDInsight cluster roles)\n          ]\n        },\n        \"storageProfile\": {\n          \"storageaccounts\": [\n            {\n              \"name\": \"[concat(variables('storageAccountName'), '.blob.core.windows.net')]\",\n              \"isDefault\": true,\n              \"container\": \"default\",\n              \"key\": \"[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value]\"\n            }\n          ]\n        }\n      }\n    }\n  ],\n  \"outputs\": {\n    \"clusterName\": {\n      \"type\": \"string\",\n      \"value\": \"[parameters('clusterName')]\"\n    },\n    \"hdinsightClusterId\": {\n      \"type\": \"string\",\n      \"value\": \"[resourceId('Microsoft.HDInsight/clusters', parameters('clusterName'))]\"\n    }\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Tomcat Startup Configuration Commands\nDESCRIPTION: Bash commands for restarting the Tomcat servlet container after configuration changes.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/shibboleth/shibboleth-cluster-windows/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncd C:\\apache-tomcat-7.0.67\\bin\\\nStart-Process .\\startup.bat\n```\n\n----------------------------------------\n\nTITLE: Generating GUID for Azure Usage Solution Deployment\nDESCRIPTION: PowerShell command shown in the documentation for generating a new GUID parameter required for template deployment. A unique GUID must be generated each time the template is deployed to ensure successful deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/oms-azure-resource-usage-solution/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n[guid]::NewGuid()\n```\n\n----------------------------------------\n\nTITLE: Installing kubectl using Azure CLI\nDESCRIPTION: Command to install kubectl locally using the Azure CLI. This is an alternative to manual installation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-container/README.md#2025-04-23_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\naz aks install-cli\n```\n\n----------------------------------------\n\nTITLE: Deploying Premium Azure Redis Cache in Virtual Network using ARM Template\nDESCRIPTION: This ARM template deploys a premium Redis Cache instance into an existing Virtual Network. It provides enhanced security and isolation for the Redis Cache, along with subnets, access control policies, and other features to restrict access.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cache/redis-premium-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Cache/redis\"\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Login Command\nDESCRIPTION: Command to log in to Azure using the Azure CLI. This will redirect you to a browser for authentication.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-python/gettingstarted.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Principal Using Certificate - PowerShell\nDESCRIPTION: This snippet uses PowerShell to create an Azure Active Directory service principal associated with the previously generated certificate. It encodes the PFX certificate, creates a new AAD application and service principal (using New-AzureRmADApplication and New-AzureRmADServicePrincipal), and configures authentication using the asymmetric certificate. Required dependencies are AzureRM PowerShell modules; input includes certificate path, password, and cluster name parameters. The output is the registered Azure AD application and its service principal object, with essential IDs used for ARM template deployments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-datalake-store-azure-storage/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$clusterName = \"new-cluster-name-here\"\n$certificatePFX = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2($certFilePath, $certPasswordSecureString)\n$credential = [System.Convert]::ToBase64String($certificatePFX.GetRawCertData())\n\n$application = New-AzureRmADApplication -DisplayName $certName `\n                            -HomePage \"https://$clusterName.azurehdinsight.net\" -IdentifierUris \"https://$clusterName.azurehdinsight.net\"  `\n                            -KeyValue $credential -KeyType \"AsymmetricX509Cert\" -KeyUsage \"Verify\"  `\n                            -StartDate $certStartDate -EndDate $certEndDate\n\n$servicePrincipal = New-AzureRmADServicePrincipal -ApplicationId $application.ApplicationId\n```\n\n----------------------------------------\n\nTITLE: PowerShell Script for Generating Service Fabric Cluster Certificates - PowerShell\nDESCRIPTION: This PowerShell script (`New-ServiceFabricClusterCertificate.ps1`) generates the self-signed certificates required for the Service Fabric cluster deployment. It outputs values to be used in parameter files for the ARM template. The script is a prerequisite for setting up secure clusters if a certificate is not already present in Azure Key Vault. The script's output includes certificate thumbprints and necessary connection information.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.servicefabric/service-fabric-secure-cluster-5-node-1-nodetype/README.md#2025-04-23_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nNew-ServiceFabricClusterCertificate.ps1\n```\n\n----------------------------------------\n\nTITLE: Deploying CDN Profile, Endpoint, and Web App using Azure ARM Template\nDESCRIPTION: This ARM template snippet defines the resources needed to create a CDN Profile, CDN Endpoint, and Web App in Azure. It includes parameters for naming and configuring the resources, and sets up the necessary dependencies between them.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/cdn-with-web-app/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/serverfarms, Microsoft.Web/sites, SystemAssigned, Microsoft.Cdn/profiles, Microsoft.Cdn/profiles/endpoints\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags specification for the Azure deployment template, defining the template components and deployment structure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/redhat/rhel-3tier-iaas/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags\": \"object, Microsoft.Storage/storageAccounts, Microsoft.Network/networkSecurityGroups, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Compute/availabilitySets, Microsoft.Network/loadBalancers, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines\"\n```\n\n----------------------------------------\n\nTITLE: ARM Template Tags Configuration for Puppet Agent Windows VM\nDESCRIPTION: Azure Resource Manager template tags defining the required Azure resources and extensions for deploying a Windows VM with Puppet Agent.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/puppet/puppet-agent-windows/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, PuppetEnterpriseAgent\"\n```\n\n----------------------------------------\n\nTITLE: Adding an Upstream Remote Repository\nDESCRIPTION: Command to add the original repository as a remote named 'upstream', allowing synchronization with the original project for updates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit remote add upstream https://github.com/Azure/azure-quickstart-templates\n```\n\n----------------------------------------\n\nTITLE: Required Parameters for VM Bootstorm Template Deployment\nDESCRIPTION: List of parameter descriptions required when deploying the VM bootstorm ARM template. These parameters configure the Azure AD application, storage, network, and VM settings for the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/bootstorm-vm-boot-time/README.md#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nAzure AD Application Id: <Application ID returned by New-AzureADServicePrincipal cmdlet while setting up Azure SPN Configuration>\n\nAzure AD Application Password: <Password you entered for New-AzureADServicePrincipal cmdlet while setting up Azure SPN Configuration>\n\nTenant Id: (Get-AzureSubscription).TenantId\n\nUnique Dns Name for PublicIP: <Choose any string value unique across Azure>\n\nUnique Storage Account Name: <Choose any string value unique across Azure>\n\nLocation: <Location where Azure resources will be deployed>\n\nVM Admin User Name: <Choose secure username for VMs>\n\nVM Admin Password: <Choose secure password for VMs>\n\nVM Count: <Choose number of VMs to deploy>\n\nVM OS Sku: <Choose version of Windows to deploy>\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags specification for Azure deployment template, identifying Microsoft resources and Chef client extensions used in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/multi-vm-chef-template-ubuntu-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Compute/availabilitySets, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, LinuxChefClient\n```\n\n----------------------------------------\n\nTITLE: Defining User-Friendly Parameter in Azure ARM Template (JSON)\nDESCRIPTION: This snippet demonstrates how to define a user-friendly parameter in an Azure Resource Manager template. It uses PascalCase naming which the Azure Portal translates into spaced words for better readability.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/parameterized-linked-templates/detail/userfriendlyparameters.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"DeployAzureBastionFrontend\": {\n    \"type\": \"string\",\n    \"defaultValue\": \"No\",\n    \"allowedValues\": [\n        \"Yes\",\n        \"No\"\n    ],\n    \"metadata\": {\n        \"description\": \"Deploy Azure Bastion in the Hub VNET\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Navigating to VMSS Extension Logs Directory\nDESCRIPTION: Command to change directory to the logging location of the VMSS Custom Script Extension. This directory contains installation logs that help troubleshoot JBoss EAP deployment failures.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-clustered-vmss-rhel/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd /var/lib/waagent/custom-script/download/1\n```\n\n----------------------------------------\n\nTITLE: Resource Type Tags for ARM Template\nDESCRIPTION: Lists the Azure resource provider namespaces and resource types that are deployed by the associated ARM template. This includes Event Hub resources (namespaces, eventhubs, authorizationRules, consumergroups) and Time Series Insights resources (environments, eventsources, accessPolicies).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.timeseriesinsights/timeseriesinsights-environment-with-eventhub/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.EventHub/namespaces, eventhubs, authorizationRules, consumergroups, Microsoft.TimeSeriesInsights/environments, eventsources, Microsoft.TimeSeriesInsights/environments/accessPolicies`\n```\n\n----------------------------------------\n\nTITLE: Referencing Resource IDs in JSON\nDESCRIPTION: Shows how to use the resourceId() function to construct a reference to a subnet resource in JSON. This approach is necessary when referencing resources that may be in a different resource group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n\"properties\": {\n    \"subnet\": {\n        \"id\": \"[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('subnetName'))]\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Resource Tags for Azure Deployment\nDESCRIPTION: This snippet lists the relevant Azure resource types and conceptual tags associated with the template deployment. These tags indicate the deployment involves Event Grid, Service Bus namespaces, Service Bus queues, Event Grid topics, and Event Grid event subscriptions, aiding in categorization and search.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.eventgrid/event-grid-servicebus-queue/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: eventgrid, servicebus, Microsoft.ServiceBus/namespaces, Microsoft.ServiceBus/namespaces/queues, Microsoft.EventGrid/topics, Microsoft.EventGrid/eventSubscriptions`\n```\n\n----------------------------------------\n\nTITLE: Parameter Restrictions for Azure VM Scale Set\nDESCRIPTION: Defines the requirements and constraints for the vmssName and instanceCount parameters when deploying the VM Scale Set template. The vmssName must be 3-61 characters and globally unique, while instanceCount must not exceed 100.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-windows-nat/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nvmssName must be 3-61 characters in length. It should also be globally unique across all of Azure. If it isn't globally unique, it is possible that this template will still deploy properly, but we don't recommend relying on this pseudo-probabilistic behavior.\ninstanceCount must be 100 or less.\n```\n\n----------------------------------------\n\nTITLE: Azure ML Dashboard ARM Template Deployment Parameters\nDESCRIPTION: The code shows ARM template deployment tags for the Azure ML monitoring dashboard. These tags specify deployment options for Azure Public, Azure US Gov, and visualization through ARMViz.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-monitoring-dashboard/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.machinelearningservices%2Fmachine-learning-workspace-monitoring-dashboard%2Fazuredeploy.json)\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.machinelearningservices%2Fmachine-learning-workspace-monitoring-dashboard%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.machinelearningservices%2Fmachine-learning-workspace-monitoring-dashboard%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Analysis Services Server with ARM Template\nDESCRIPTION: This ARM template deploys an Azure Analysis Services server with basic configuration. It includes parameters for server name, location, and SKU, and sets up a firewall rule. The template uses the Microsoft.AnalysisServices/servers resource type.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.analysisservices/analysis-services-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.AnalysisServices/servers\"\n```\n\n----------------------------------------\n\nTITLE: Running Disk Performance Test with fio in Linux Shell\nDESCRIPTION: This shell command re-runs the disk performance test using fio with a 30-second runtime. It uses a pre-configured test file located at /opt/vmdiskperf/t.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vm-disk-performance-meter/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo fio --runtime 30 /opt/vmdiskperf/t\n```\n\n----------------------------------------\n\nTITLE: Describing Subscription Level Deployment Templates in Azure (Markdown)\nDESCRIPTION: This markdown snippet provides an overview of the folder's contents, explaining that it contains sample templates for subscription-level deployments in Azure. It also includes a link to official Microsoft documentation for more detailed information.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/subscription-deployments/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Subscription Level Deployment Templates\n\nThis folder contains sample templates that must be deployed at the subscription scope.\n\nFor for more information see the documentation [here](https://docs.microsoft.com/azure/azure-resource-manager/deploy-to-subscription).\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition in ARM Template\nDESCRIPTION: Specifies the Azure resource tags used for this deployment template, including Microsoft resources for networking, compute, and template deployments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-lama-ascs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, [variables('cseExtName')], Microsoft.Resources/deployments\n```\n\n----------------------------------------\n\nTITLE: Creating a Markdown Table for Script Information\nDESCRIPTION: This snippet shows how to create a table in Markdown format to list available scripts, their authors, and descriptions. It provides a structured way to present information about shared scripts in the repository.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/shared_scripts/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                        | Author                 | Description                                           |\n|:----------------------------|:-----------------------|:------------------------------------------------------|\n| ubuntu/vm-disk-utils | [trentmswanson](https://github.com/trentmswanson) | This script automates the partitioning and formatting of data disks as individual disks or in a RAID0 configuration.|\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure VNET-to-VNET Connection Tags\nDESCRIPTION: Resource tags declaration for Azure networking components including virtual networks, public IP addresses, virtual network gateways, and connections required for VNET-to-VNET connectivity.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/extend-vnet-to-multi-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworkGateways, Microsoft.Network/connections\"\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Login Command\nDESCRIPTION: Command to log in to Azure using the Azure CLI, which opens a browser for authentication.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/postgre/postgresql-standalone-server-ubuntu/GettingStarted.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Deploying Logic App with Twilio Integration for Azure Alerts\nDESCRIPTION: ARM template tags indicating resources used in the template. This includes Web connections for Twilio integration, Logic workflows for the alert processing, and various API connections for HTTP requests and webhook handling.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/alert-to-text-message-with-logic-app/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/connections, Microsoft.Logic/workflows, request, object, string, Http, ApiConnection\"\n```\n\n----------------------------------------\n\nTITLE: Executing VM OS Count Query with Azure PowerShell\nDESCRIPTION: This Azure PowerShell command runs the Resource Graph query to count VMs by OS type using the Search-AzGraph cmdlet.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/resourcegraph-sharedquery-countos/README.md#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nSearch-AzGraph -Query \"Resources | where type =~ 'Microsoft.Compute/virtualMachines' | summarize count() by tostring(properties.storageProfile.osDisk.osType)\"\n```\n\n----------------------------------------\n\nTITLE: Azure Storage Account API Version Declaration\nDESCRIPTION: Specifies the Azure Storage Account API version to be used for deployment. This version (2021-01-01) defines the schema and available features for storage account creation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/modules/Microsoft.Storage/storageAccounts/0.9/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\napiVersion: 2021-01-01\n```\n\n----------------------------------------\n\nTITLE: Tags Reference for Azure Front Door Resource\nDESCRIPTION: Resource tag indicating the Azure service namespace for the Front Door deployment\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-create-redirect/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Network/frontDoors\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of SAP HANA Storage Parameters\nDESCRIPTION: A comprehensive markdown table documenting configuration parameters for SAP HANA storage deployment in Azure NetApp Files. Includes parameter names, examples, defaults, constraints, and detailed descriptions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.netapp/anf-sap-hana/anf-sap-hana-storage/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|    | **Input Params**                                     | **Example**    | **Default**              | **Data Type Constrain** | **Comment (This will be shown as a tool tip)**                                                                                                                                                                                                                                                                            |\n|----|------------------------------------------------------|----------------|--------------------------|-------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 1  | SAP System ID                                        | DEV            |                          | string of length 3      | SAP system ID (Three characters long alpha-numeric string).                                                                                                                                                                                                                                                               |\n| 2  | Availability Zone                                    | 1              |                          | List None,1,2,3         | Availability Zone. This is None when proximity placement group is selected.                                                                                                                                                                                                                                               |\n| 3  | Proximity Placement Group Name                       | ppg            |                          | string of min len 1     | Name of proximity placement group.                                                                                                                                                                                                                                                                                        |\n| 4  | Proximity Placement Group Resource Group Name        | ppg-rg         |                          | string of min len 1     | Resource group name for the proximity placement group.                                                                                                                                                                                                                                                                    |\n| 5  | Network Features                                     | Basic          | Standard                 | string                  | Basic or Standard network features available to the volume.                                                                                                                                                                                                                                                               |\n| 6  | SAP Memory In Gibibytes                              | 100            |                          | 12000 >= Integer >= 1   | SAP HANA memory (in GiB max supported 12000 GiB), used to auto compute storage size and throughput.                                                                                                                                                                                                                       |\n| 7  | Additional Capacity For Snapshots Percentage Of RAM) | 50             | 50                       | 200 >= Integer >= 0     | Additional memory to store snapshots, must be specified as % of RAM (range 0-200). This is used to auto compute storage size.                                                                                                                                                                                             |\n| 8  | Starting SAP Host ID                                 | 1              | 1                        | Integer >= 1            | Starting SAP HANA Host ID. Host ID 1 indicates Master Host. Shared, Data Backup and Log Backup volumes are only provisioned for Master Host.                                                                                                                                                                              |\n| 9  | Number Of SAP Hosts                                  | 2              | 1                        | 3 >= Integer >= 1       | Total Number of SAP HANA hosts in this deployment (currently max 3 nodes can be configured).                                                                                                                                                                                                                              |\n| 10 | System Role                                          | PRIMARY        | PRIMARY                  | PRIMARY, HA             | Type of role for the storage account. Primary indicates first of a SAP HANA Replication (HSR) setup or No HSR. High Availability (HA) specifies volumes for the secondary host using HSR.                                                                                                                                 |\n| 11 | Prefix                                               | default        | default                  | default or \"TEXT-\"      | All volume names will be prefixed with the given text. The default values for prefix text depends on system role. For PRIMARY it will be \"\" and for HA it will be \"HA-\".                                                                                                                                                  |\n| 12 | Tag Key                                              |                |                          | string                  | If a Tag Key is specified, it will be added to each volume created by this ARM template. It is recommended to add a tag for HSR deployments, with the tag name as \"HSRPartnerStorageResourceId\".                                                                                                                          |\n| 13 | Tag Value                                            |                |                          | string                  | If a Tag Value is specified, it will be added to each volume created by this ARM template. The value will only be added if Tag Key was specified. It is recommended to add a tag for HSR deployments, with Tag Value as \"Please enter the peering partner Volume ID\" and later update it for each volume from the ANF UI. |\n| 14 | Azure Netapp Files Location                          | eastus         | resourceGroup().location | string of min len 1     | Azure NetApp Files (ANF) Location. If the resource group location is different than ANF location, ANF location needs to be specified.                                                                                                                                                                                     |\n| 15 | Azure Netapp Files                                   | anf-name       |                          | string of min len 1     | Name of Azure NetApp Files (ANF) account.                                                                                                                                                                                                                                                                                 |\n| 16 | Capacity Pool                                        | cp-name        |                          | string of min len 1     | Name of Capacity Pool in Azure NetApp Files (ANF) account. All the volumes are created using this capacity pool.                                                                                                                                                                                                          |\n| 17 | Virtual Network                                      | vnet-name      |                          | string of min len 1     | Virtual Network name for the subnet.                                                                                                                                                                                                                                                                                      |\n| 18 | Delegated Subnet                                     | subnet-name    |                          | string of min len 1     | Delegated Subnet name.                                                                                                                                                                                                                                                                                                    |\n| 19 | Data Size In Gibibytes                               | auto/1024      | auto                     | string of min len 1     | Specify capacity (in GiB). Possible values can be \"auto\" or integer values (min 100 GiB) representing size.                                                                                                                                                                                                               |\n| 20 | Data Performance In Mebibytes Per Second             | auto/450       | auto                     | string of min len 1     | Specify throughput in MiB/s. Possible values can be \"auto\" or integer values (min 1 MiB/s) representing throughput.                                                                                                                                                                                                       |\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Listing\nDESCRIPTION: Comprehensive list of Azure resource provider tags used in the template deployment, including compute, networking, monitoring and operational insights resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ddos-attack-prevention/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\nTags: Microsoft.Resources/deployments, Microsoft.Compute/virtualMachines/extensions, MicrosoftMonitoringAgent, DSC, microsoft.insights/alertrules, Microsoft.Compute/virtualMachines, Microsoft.OperationalInsights/workspaces, Microsoft.OperationsManagement/solutions, Microsoft.OperationalInsights/workspaces/datasources, Microsoft.Network/networkInterfaces, Microsoft.Network/networkSecurityGroups, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks\n```\n\n----------------------------------------\n\nTITLE: Sending JSON Data with cURL to Azure API\nDESCRIPTION: A cURL command that makes a POST request to an Azure endpoint with JSON data. The request includes a content-type header and key-value pair data. Note that this appears to be an incomplete command as the JSON payload is not terminated.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/datameer-trend-chef-riskanalysis/files/user key.txt#2025-04-23_snippet_0\n\nLANGUAGE: curl\nCODE:\n```\ncurl -H \"Content-Type: application/json\" -X POST -d '{\"keyName\": \"userkey\", \"keyValue\": \"\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition for Azure Template\nDESCRIPTION: Defines the Azure resource tags used for deployment template identification and resource categorization.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/trailbot/stampery-trailbot-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTags: Blockchain, Ubuntu, Security, Integrity, Bitcoin, Ethereum, Stampery, Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Deploying SQL AlwaysOn Cluster with ARM Template\nDESCRIPTION: This ARM template snippet shows the deployment buttons for Azure Portal, Azure US Gov, and ARM Visualizer. It allows users to quickly deploy the SQL AlwaysOn Cluster template to their Azure environment or visualize the architecture.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/sql-alwayson-md-ilb-zones/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fdemos%2Fsql-alwayson-md-ilb-zones%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fdemos%2Fsql-alwayson-md-ilb-zones%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fdemos%2Fsql-alwayson-md-ilb-zones%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Configuring Web App Environment Variables for Private Endpoint Access in JSON\nDESCRIPTION: This snippet shows the necessary web app environment variables that must be set in the app.json nested template to allow traffic to pass from the web app to private endpoints. WEBSITE_VNET_ROUTE_ALL forces all outbound traffic to flow through the VNet, and WEBSITE_DNS_SERVER points to Azure's DNS server.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/web-app-regional-vnet-private-endpoint-sql-storage/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"siteConfig\": {\n                    \"appSettings\": [\n                        {\n                            \"name\": \"WEBSITE_VNET_ROUTE_ALL\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"WEBSITE_DNS_SERVER\",\n                            \"value\": \"168.63.129.16\"\n                        }\n                    ]\n                }\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Declaration\nDESCRIPTION: Resource tags specification for the Azure deployment template, identifying the key technologies and components involved.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-sql-full-autobackup/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nTags: SQL Server, Auto Backup, SQL Server 2014 Enterprise, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, SqlIaaSAgent, Microsoft.Resources/deployments, Microsoft.Storage/storageAccounts, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, DSC\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Resource Group\nDESCRIPTION: Command to create a new resource group in Azure. This resource group will contain all the deployed resources for the Ubuntu VM.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/tomcat/openjdk-tomcat-ubuntu-vm/gettingstarted.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration\nDESCRIPTION: A list of Azure resource tags for student-focused VM deployment with JupyterHub on Ubuntu Server, including necessary Azure resource providers and difficulty level specification.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jupyter/jupyterhub-classroom/README.md#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Azure4Student, virtual machine, Linux, Ubuntu Server, Intermediate, Jupyter, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIpAddresses, Microsoft.Network/networkInterfaces, Microsoft.Storage/storageAccounts, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resources for Web App and Blob Storage in ARM Template\nDESCRIPTION: This JSON snippet defines the Azure resources required for creating a Web App with a Blob Storage connection. It includes parameters for naming and configuring the Web App and Storage account, as well as the resource definitions for the App Service Plan, Web App, and Storage account.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-blob-connection/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"webAppName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Base name of the resource such as web app name and app service plan \"\n      },\n      \"minLength\": 2\n    },\n    \"sku\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"S1\",\n      \"metadata\": {\n        \"description\": \"The SKU of App Service Plan \"\n      }\n    },\n    \"storageAccountName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"The name of the Azure Storage account\"\n      }\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"[resourceGroup().location]\",\n      \"metadata\": {\n        \"description\": \"Location for all resources.\"\n      }\n    }\n  },\n  \"variables\": {\n    \"webAppPortalName\": \"[parameters('webAppName')]\",\n    \"appServicePlanName\": \"[concat('AppServicePlan-', parameters('webAppName'))]\"\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Storage/storageAccounts\",\n      \"apiVersion\": \"2021-04-01\",\n      \"name\": \"[parameters('storageAccountName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"Standard_LRS\"\n      },\n      \"kind\": \"StorageV2\"\n    },\n    {\n      \"type\": \"Microsoft.Web/serverfarms\",\n      \"apiVersion\": \"2020-12-01\",\n      \"name\": \"[variables('appServicePlanName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"sku\": {\n        \"name\": \"[parameters('sku')]\"\n      }\n    },\n    {\n      \"type\": \"Microsoft.Web/sites\",\n      \"apiVersion\": \"2020-12-01\",\n      \"name\": \"[variables('webAppPortalName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]\",\n        \"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]\"\n      ],\n      \"properties\": {\n        \"serverFarmId\": \"[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]\"\n      }\n    },\n    {\n      \"type\": \"Microsoft.Web/sites/config\",\n      \"apiVersion\": \"2020-12-01\",\n      \"name\": \"[concat(variables('webAppPortalName'), '/connectionstrings')]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Web/sites', variables('webAppPortalName'))]\"\n      ],\n      \"properties\": {\n        \"AzureWebJobsStorage\": {\n          \"value\": \"[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-04-01').keys[0].value, ';EndpointSuffix=', environment().suffixes.storage)]\",\n          \"type\": \"Custom\"\n        }\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Tags Configuration for OpenLDAP Deployment\nDESCRIPTION: Resource tags configuration for Azure deployment template specifying the Microsoft Azure resources required for OpenLDAP installation including storage, networking, and compute components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/openldap/openldap-singlevm-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Jenkins Initial Admin Password\nDESCRIPTION: Command to retrieve the initial admin password from the Jenkins master VM required for first-time setup.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cluster-2-linux-1-win/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo cat /var/lib/jenkins/secret/initialAdminPassword\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Network Configuration Parameters\nDESCRIPTION: This snippet lists the essential parameters needed to set up an Azure virtual network with separate subnets for clients and servers. It includes subscription details, resource group information, network naming, and IP address ranges for the subnets.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/intel-lustre/intel-lustre-client-server/prerequisite/parameters.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n\"SubscriptionName\"\n\"ResourceGroupName\"\n\"Location\"\n\"VirtualNetworkName\"\n\"ClientSubnetName\"\n\"10.1.0.0/16\"\n\"ServerSubnetName\"\n\"10.2.0.0/16\"\n```\n\n----------------------------------------\n\nTITLE: VM Size Configuration Matrix\nDESCRIPTION: Deployment size specifications for both HA and non-HA configurations, ranging from Demo to X-Large. Details VM types, quantities, and storage configurations for each tier.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-3-tier-user-image-converged-md/README.md#2025-04-23_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nDemo: 2xDS12_v2 DB/ASCS/SCS (CL) Server (1xP10) + 2xDS2_v2 DI\nSmall: 2xDS13_v2 DB/ASCS/SCS (CL) Server (4xP20 1xP20) + 2xDS13_v2 DI\nMedium: 2xDS14_v2 DB/ASCS/SCS (CL) Server (6xP20 1xP20) + 4xDS13_v2 DI\nLarge: 2xGS4 DB/ASCS/SCS (CL) Server (5xP30 1xP20) + 6xDS14_v2 DI\nX-Large: 2xGS5 DB/ASCS/SCS (CL) Server (6xP30 1xP30) + 10xDS14_v2 DI\n```\n\n----------------------------------------\n\nTITLE: Defining API Version for Azure Resource Manager Template\nDESCRIPTION: This snippet specifies the API version for the Azure Resource Manager template used in this module. It indicates the version of the Azure API that the template is compatible with.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/modules/Microsoft.KeyVault/vaults/keys/0.9/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"apiVersion\": 2021-10-01\n```\n\n----------------------------------------\n\nTITLE: Example Nextflow command execution on the deployed cluster\nDESCRIPTION: These sample commands demonstrate how to run Nextflow pipelines on the deployed cluster, with and without Docker. The commands leverage Ignite executor for distributed processing across the cluster nodes.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/nextflow/nextflow-genomics-cluster-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"exampleNextflowCommand\": {\n    \"type\": \"string\",\n    \"value\": \"nextflow run hello -process.executor ignite -cluster.join path:/datadisks/disk1/cifs/cluster -with-timeline runtimeline.html -with-trace -cluster.maxCpus 0\"\n  },\n  \"exampleNextflowCommandWithDocker\": {\n    \"type\": \"string\",\n    \"value\": \"nextflow run nextflow-io/rnatoy -with-docker -process.executor ignite -cluster.join path:/datadisks/disk1/cifs/cluster -with-timeline runtimeline.html -with-trace -cluster.maxCpus 0\"\n  },\n  \"jumpboxConnectionString\": {\n    \"type\": \"string\",\n    \"value\": \"ssh nextflow@jumpboxvmaddress.westus2.cloudapp.azure.com\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Static Public IP Address in Azure via PowerShell - PowerShell\nDESCRIPTION: This PowerShell command provisions a new statically allocated Public IP address named 'goliveRIP' in the 'ExistingReservedIPRG' resource group and 'West US' region by calling 'New-AzurePublicIpAddress'. Run after creating a resource group. Prerequisites: Azure PowerShell installed, user authenticated, and the resource group exists. The command returns details about the created Public IP resource.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/reserved-ip/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzurePublicIpAddress -ResourceGroupName ExistingReservedIPRG -Name goliveRIP -Location 'West US'\n```\n\n----------------------------------------\n\nTITLE: Logging into Azure using Azure CLI\nDESCRIPTION: Initiates the interactive login process for the Azure CLI. Executing this command typically opens a web browser where the user can enter their Azure credentials to authenticate the CLI session.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-all-in-one-template-for-vnet-injection/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition\nDESCRIPTION: Resource tagging configuration for the FinOps hub deployment, specifying the finops and cost management context.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.costmanagement/finops-hub/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: finops, cost, Microsoft.CostManagement/exports, Microsoft.Kusto/clusters, Microsoft.Storage/storageAccounts, Microsoft.DataFactory/factories\n```\n\n----------------------------------------\n\nTITLE: Declaring Azure Resource Tags in ARM Template - Bicep\nDESCRIPTION: This Bicep code snippet declares tags relevant for the Azure deployment, referencing multiple resources that the ARM template creates or configures such as deployments, network security groups, storage accounts, VM extensions, and more. It serves as a quick index of resource types for tooling, visualization, or resource tagging. No code logic or actual resource definitions are present; it functions as a documentation and metadata summary. There are no dependencies except the Bicep/ARM template interpreter; there are no parameters or outputs since this is strictly a tag list.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vms-with-selfhost-integration-runtime/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\n\"Tags: Microsoft.Resources/deployments, Microsoft.Network/networkSecurityGroups, Microsoft.Storage/storageAccounts, Microsoft.Compute/virtualMachines/extensions, CustomScriptExtension, Microsoft.DataFactory/dataFactories/gateways, Microsoft.DataFactory/factories/integrationruntimes, SelfHosted, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Network/virtualNetworks, Microsoft.DataFactory/datafactories\"\n```\n\n----------------------------------------\n\nTITLE: ARM Template Tags for Azure Front Door WAF\nDESCRIPTION: Resource tags definition specifying the Microsoft.Network namespace and WAF policy resource type used in the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-rate-limiting/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/FrontDoorWebApplicationFirewallPolicies\n```\n\n----------------------------------------\n\nTITLE: Resource Tags for Azure Backup Reporting Logic App\nDESCRIPTION: Resource tags defining the template components including Microsoft Web connections, Logic workflows, and Operational Insights workspaces. These tags help categorize and identify the resources deployed by this template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/backup-usage-report/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nMicrosoft.Web/connections, Microsoft.Logic/workflows, Recurrence, Foreach, AppendToStringVariable, If, ApiConnection, InitializeVariable, array, string, Scope, Table, SetVariable, Microsoft.OperationalInsights/workspaces\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Declaration for Lustre Deployment\nDESCRIPTION: Resource tags specification for the Azure deployment template, defining the Microsoft resources and extensions used in the Lustre cluster setup.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/intel-lustre/intel-lustre-clients-on-centos/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Storage/storageAccounts, Microsoft.Compute/availabilitySets, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript, Microsoft.Network/virtualNetworks\n```\n\n----------------------------------------\n\nTITLE: Registering the Azure Active Directory Application Service Principal\nDESCRIPTION: Creates a service principal for Azure AD Domain Services which is required before deploying AADDS. This uses the specific AppId for the AADDS service.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/aad-domainservices/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n# Create the service principal for Azure AD Domain Services.\nNew-AzureRmADServicePrincipal -AppId \"2565bd9d-da50-47d4-8b85-4c97f669dc36\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Code to Azure Web App\nDESCRIPTION: This command uploads and deploys code to an existing Azure Web App using Azure CLI. It requires specifying the name of the web app and includes a debug flag for verbose output.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-java-tomcat/gettingstarted.md#2025-04-23_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\naz web app up --name 'web app-name' --debug\n```\n\n----------------------------------------\n\nTITLE: Deploying Service Health Alert Tags in Azure\nDESCRIPTION: Resource tags specification for Azure Service Health alert deployment template, identifying Microsoft Insights resources for action groups and activity log alerts.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/monitor-servicehealth-alert/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Insights/actionGroups, Microsoft.Insights/activityLogAlerts\"\n```\n\n----------------------------------------\n\nTITLE: Azure Application Gateway Deployment Tags\nDESCRIPTION: Resource tags for the Azure Application Gateway deployment template, specifying the resource types and extensions used.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ag-docs-qs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nApplication Gateway, Microsoft.Network/networkSecurityGroups, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScriptExtension, Microsoft.Network/applicationGateways, Microsoft.Network/networkInterfaces\n```\n\n----------------------------------------\n\nTITLE: Installing Python Packages in JupyterHub Shared Environment using Pip\nDESCRIPTION: Command to install the 'there' Python package using pip into the shared User Environment. The sudo -E prefix ensures the package is available to all users in the JupyterHub.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jupyter/jupyterhub-classroom/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo -E pip install there\n```\n\n----------------------------------------\n\nTITLE: Defining Tags for Azure Resources\nDESCRIPTION: This snippet shows the tags used to categorize and describe the Azure resources deployed by this template. It includes information about the type of deployment, Azure products used, and the URL fragment for the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/managementgroup-deployments/mg-policy-different-targets/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: This template is a management group level template that will create a policy definition and assign that policy to multiple management groups.\npage_type: sample\nproducts:\n- azure\n- azure-resource-manager\nurlFragment: mg-policy-different-targets\nlanguages:\n- json\n- bicep\n```\n\n----------------------------------------\n\nTITLE: Resource Tags for Azure Deployment\nDESCRIPTION: This line lists the Azure resource types that are included in the deployment template. These tags are used for categorizing and finding the template based on the resources it manages, such as virtual networks, subnets, private DNS zones, DNS zone links, and MySQL flexible servers.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.dbformysql/flexible-mysql-with-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/virtualNetworks/subnets, Microsoft.Network/virtualNetworks, Microsoft.Network/privateDnsZones, Microsoft.Network/privateDnsZones/virtualNetworkLinks, Microsoft.DBforMySQL/flexibleServers`\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure KeyVault API Version\nDESCRIPTION: Defines the API version used for KeyVault resource deployment in Azure Resource Manager templates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/modules/Microsoft.KeyVault/vaults/1.0/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\napiVersion: 2019-09-01\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure KeyVault Access Policy ARM Template\nDESCRIPTION: This ARM template snippet is used to deploy an access policy to an existing Azure KeyVault. It specifies the resource type for KeyVault access policies and includes tags for identification.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.keyvault/keyvault-add-access-policy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.KeyVault/vaults/accessPolicies, Microsoft.KeyVault/vaults\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Ubuntu VM with Puppet Agent using Azure CLI\nDESCRIPTION: Instructions for deploying the template using Azure CLI. This method requires the Azure CLI to be installed and configured.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/puppet/puppet-agent-linux/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://azure.microsoft.com/documentation/articles/xplat-cli-azure-resource-manager/\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Resource Tags for VM Deployment Template\nDESCRIPTION: Resource tags configuration specifying the Microsoft services and components used in the template deployment, including Network, Storage, Compute and associated infrastructure components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-specialized-vhd-new-or-existing-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/virtualNetworks, Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/disks, Microsoft.Compute/virtualMachines\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Tags for Multi-VMSS Template\nDESCRIPTION: Lists the Azure resource provider tags associated with the ARM template for deploying multiple Linux VM Scale Sets. It indicates the template primarily uses resources from Microsoft.Network (for virtual networks), Microsoft.Resources (for nested deployments), and Microsoft.Compute (for virtual machine scale sets).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/multi-vmss-linux/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/virtualNetworks, Microsoft.Resources/deployments, Microsoft.Compute/virtualMachineScaleSets`\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tag Declaration\nDESCRIPTION: Resource tag declaration identifying the Microsoft Network ExpressRoute Circuits service being used.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/expressroute-circuit-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/expressRouteCircuits`\n```\n\n----------------------------------------\n\nTITLE: Creating Event Grid Custom Topic and Event Hub Handler - JSON\nDESCRIPTION: This ARM template (JSON format) facilitates the creation of an Azure Event Grid custom topic and an Event Hub, and establishes an event subscription routing custom topic events to the Event Hub. Dependencies include Azure Resource Manager, Microsoft.EventGrid/topics, Microsoft.EventHub/namespaces, and eventSubscriptions resource types, and it requires appropriate Azure permissions for deployment. Key parameters include those intrinsic to the related Azure resources, such as names and configuration options for the custom topic and event hub. Inputs are the parameter values provided to the template, and outputs are provisioned Azure resources connected in an event-driven workflow. Limitations include Azure region/sku constraints and quota limits for relevant services.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.eventgrid/event-grid-event-hubs-handler/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n// This template creates an Event Grid custom topic and event hub.\n// It creates an event subscription that sends events from the custom topic to the event hub.\n// Tags: eventgrid, Microsoft.EventGrid/topics, Microsoft.EventHub/namespaces, EventHubs, Microsoft.EventGrid/eventSubscriptions\n```\n\n----------------------------------------\n\nTITLE: Managing VS Code from Command Line in Ubuntu\nDESCRIPTION: Commands for managing VS Code from the Ubuntu terminal, including opening files, folders, and managing extensions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ubuntu-desktop-gnome-rdp/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncode file_name\n```\n\nLANGUAGE: bash\nCODE:\n```\ncode dir_name\n```\n\nLANGUAGE: bash\nCODE:\n```\ncode --install-extension dbaeumer.vscode-eslint\n```\n\nLANGUAGE: bash\nCODE:\n```\ncode --list-extensions\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags definition specifying the types of Azure resources deployed by this template, including storage, networking, and compute components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/multi-tier-service-networking/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkSecurityGroups, Microsoft.Network/applicationGateways, Microsoft.Network/loadBalancers, Microsoft.Network/networkInterfaces, Microsoft.Compute/availabilitySets, Microsoft.Compute/virtualMachines\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Declaration for OMS Storage Integration\nDESCRIPTION: Resource tags declaration for the ARM template showing the core services and components involved in the integration between Azure Storage Account and OMS Log Analytics.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/oms-existing-storage-account/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.OperationsManagement/solutions, Microsoft.OperationalInsights/workspaces, storageinsightconfigs, Microsoft.Storage/storageAccounts\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Principal Manually - Step 3\nDESCRIPTION: Final step to assign the User Access Administrator role to the Service Principal using its Object ID. This completes the manual creation process for the required Service Principal.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ibm-cloud-pak/ibm-cloud-pak-for-data/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz role assignment create --role \"User Access Administrator\" --assignee-object-id \"<object_id>\" --scopes=\"/subscriptions/<subscription_id>/resourceGroups/<cluster_rg>\"\n```\n\n----------------------------------------\n\nTITLE: ARM Template API Version Declaration for Azure ML Workspace Resources\nDESCRIPTION: This snippet indicates the API version used for the Azure Resource Manager template deployment. It's shown as not applicable (n/a), as the actual API versions would be defined within the azuredeploy.json file that this README references.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/modules/machine-learning-workspace/0.9/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\napiVersion: n/a\n```\n\n----------------------------------------\n\nTITLE: SSH Connection to Jumpbox\nDESCRIPTION: Command to SSH into the jumpbox using the public IP address. Replace the placeholders with actual values for username and IP address.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vmss-linux-jumpbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nssh {username}@{jumpbox-public-ip-address}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure DNS Private Resolver using Azure CLI\nDESCRIPTION: Command to deploy the DNS Private Resolver template using Azure CLI. Requires an existing resource group and the template file location.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azure-dns-private-resolver/README.md#2025-04-23_snippet_0\n\nLANGUAGE: azurecli\nCODE:\n```\naz deployment group create --resource-group <resourcegroup name> --template-file <bicep file location>\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tag Declaration\nDESCRIPTION: Resource tags indicating the template dependencies and required Azure services. Includes references to networking, compute, and security group resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-simple-zones/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIpAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines\n```\n\n----------------------------------------\n\nTITLE: Configuring VM Disks in Bicep\nDESCRIPTION: This Bicep snippet demonstrates the configuration of OS and data disks for a VM. It shows how to set up implicit managed disks, including caching, creation options, and disk size for data disks.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_21\n\nLANGUAGE: bicep\nCODE:\n```\nosDisk: {\n  name: 'nameIsOptional'\n  caching: 'ReadWrite'\n  createOption: 'FromImage'\n}\ndataDisks: [\n  {\n    name: 'optional'\n    diskSizeGB: sizeOfDiskInGB\n    lun: 0\n    createOption: 'Empty'\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Creating SQL Always On Complex Variable - PowerShell\nDESCRIPTION: PowerShell script to create a complex automation variable for SQL Always On availability group failover configuration. Defines SQL VM names, resource groups and availability group paths.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/asr-automation-recovery/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$InputObject = @{\"TestSQLVMName\" = \"#TestSQLVMName\" ; \"TestSQLVMRG\" = \"#TestSQLVMRG\" ; \"ProdSQLVMName\" = \"#ProdSQLVMName\" ; \"ProdSQLVMRG\" = \"#ProdSQLVMRG\"; \"Paths\" = @{\"1\"=\"#sqlserver:\\\\sql\\\\sqlazureVM\\\\default\\\\availabilitygroups\\\\ag1\";\"2\"=\"#sqlserver:\\\\sql\\\\sqlazureVM\\\\default\\\\availabilitygroups\\\\ag2\"}}\n$RPDetails = New-Object -TypeName PSObject -Property $InputObject  | ConvertTo-Json\nNew-AzureRmAutomationVariable -Name \"#RecoveryPlanName\" -ResourceGroupName \"#AutomationAccountResourceGroup\" -AutomationAccountName \"#AutomationAccountName\" -Value $RPDetails -Encrypted $false\n```\n\n----------------------------------------\n\nTITLE: Deploying HDInsight Cluster with TLS 1.2+ in Azure\nDESCRIPTION: This ARM template creates an HDInsight cluster with TLS protocol version 1.2 or newer enforced. It includes resources for HDInsight clusters, storage accounts, and virtual networks. The template is designed for enhanced security in Azure deployments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-minimum-tls/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.HDInsight/clusters, Microsoft.Storage/storageAccounts, Microsoft.Network/virtualNetworks\"\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Replication Verification Query\nDESCRIPTION: SQL command to verify data replication on slave PostgreSQL servers by querying the test table created on the master.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/postgre/postgresql-on-ubuntu/README.md#2025-04-23_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nsudo -u postgres psql\nselect * from table1;\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Version Check Command\nDESCRIPTION: Command to verify the installed version of Azure CLI.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-clustered-multivm-rhel/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz version\n```\n\n----------------------------------------\n\nTITLE: Accessing Email Data via Nylas API\nDESCRIPTION: Example of how to make authenticated requests to the Nylas API to retrieve email threads. Uses HTTP Basic authentication with the account ID as username.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/nylas/nylas-email-sync-engine/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ curl --user 'ACCOUNT_ID_VALUE_HERE:' http://<your-vms-public-ip>:5555/threads\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration in JSON\nDESCRIPTION: Resource tags configuration for Azure deployment template specifying Microsoft resources including Storage, Network, Compute, and role assignments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-msi/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/virtualNetworks, Microsoft.Network/networkSecurityGroups, Microsoft.Resources/deployments, Microsoft.Compute/virtualMachineScaleSets, SystemAssigned, Microsoft.Storage/storageAccounts/providers/roleAssignments\"\n```\n\n----------------------------------------\n\nTITLE: Support Contact Email for Azure Solution\nDESCRIPTION: Email address provided for contacting support regarding any issues or questions related to the Azure solution deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/datameer-trend-chef-riskanalysis/README.md#2025-04-23_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nazuremarketplace@avyanconsulting.com\n```\n\n----------------------------------------\n\nTITLE: Declaring a Custom Resource Instance in an ARM Template (JSON)\nDESCRIPTION: This JSON snippet defines an instance of the `Microsoft.CustomProviders/resourceProviders/customResources` type within an Azure Resource Manager template. It specifies the name (concatenating function name and custom resource name), API version, location, custom properties (`hello`, `myCustomProperty`), and declares a dependency on the custom resource provider itself.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.customproviders/custom-rp-with-function/README.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"type\": \"Microsoft.CustomProviders/resourceProviders/customResources\",\n    \"name\": \"[concat(parameters('funcName'), '/', parameters('azureCustomResourceName'))]\",\n    \"apiVersion\": \"2018-09-01-preview\",\n    \"location\": \"[parameters('location')]\",\n    \"properties\": {\n        \"hello\": \"world\",\n        \"myCustomProperty\": \"[parameters('myCustomPropertyValue')]\"\n    },\n    \"dependsOn\": [\n        \"[resourceId('Microsoft.CustomProviders/resourceProviders', parameters('funcName'))]\"\n    ],\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring Azure Container Instance Tags\nDESCRIPTION: ARM template tag declarations for ACI deployment identifying the resource type and networking configuration\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerinstance/aci-udp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: ACI, UDP, Microsoft.ContainerInstance/containerGroups, Public\n```\n\n----------------------------------------\n\nTITLE: Declaring Required Azure Resources with ARM Template - JSON\nDESCRIPTION: This code snippet uses ARM JSON template syntax to declare Azure resources (Data Factory gateways, Storage Accounts, Network Interfaces, Virtual Machines, Custom Script Extensions, nested deployments, Public IP Addresses, and Network Security Groups) for automated provisioning of a managed data gateway environment. It is dependent on an existing Data Factory and Virtual Network. The snippet lists the resource provider tags to guide ARM in orchestrating deployments, expecting each referenced resource's required parameters as input. Outputs are typically deployed Azure resources, and the template must be deployed in the same resource group as the target Data Factory.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-with-data-management-gateway/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.DataFactory/dataFactories/gateways, Microsoft.Storage/storageAccounts, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, extensions, CustomScriptExtension, Microsoft.Resources/deployments, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups\"\n```\n\n----------------------------------------\n\nTITLE: Azure Front Door Resource Tag Declaration\nDESCRIPTION: Resource tag declaration for Azure Front Door deployment template indicating the Microsoft.Network/frontDoors resource type.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-create-multiple-backends/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/frontDoors\n```\n\n----------------------------------------\n\nTITLE: Installing Torque Cluster Tags in Azure ARM Template\nDESCRIPTION: Resource tags section defining the Azure resources required for deploying a Torque cluster, including storage accounts, virtual networks, public IPs, network interfaces, VMs and custom script extensions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/torque/torque-cluster/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition for Azure Cloud Shell VNet\nDESCRIPTION: List of Azure resource tags used in the template for resource organization and management. These tags identify the various Azure services and components required for Cloud Shell VNet deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/cloud-shell-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n\"Tags: Microsoft.Network/virtualNetworks/subnets, Microsoft.Network/networkProfiles, Microsoft.Authorization/roleAssignments, Microsoft.Relay/namespaces, Microsoft.Network/privateEndpoints, Microsoft.Network/privateDnsZones, Microsoft.Network/privateDnsZones/A, Microsoft.Network/privateDnsZones/virtualNetworkLinks, Microsoft.Network/virtualNetworks\"\n```\n\n----------------------------------------\n\nTITLE: Virtual Network Container Deployment ARM Template Tags\nDESCRIPTION: Resource tags specifying the Azure services and components used in the template deployment, including networking and container instances.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerinstance/aci-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Network/virtualNetworks, Microsoft.Network/virtualNetworks/subnets, Microsoft.Network/networkProfiles, Microsoft.ContainerInstance/containerGroups\n```\n\n----------------------------------------\n\nTITLE: Service Principal JSON Response Format\nDESCRIPTION: This shows the expected JSON response format after creating an Azure service principal. The appId and password values are important credentials that will be used in the CI/CD pipeline configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-container/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"appId\": \"8e897eb4-069d-40c2-9563-000000003c14\",\n   \"displayName\": \"<AppName>\",\n   \"password\": \"xxxxxvJgeKZoRAfxxxx0SitnANH8Kxxxx\",\n   \"tenant\": \"000088bf-0000-0000-0000-2d7cd0100000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure VM from User Image using PowerShell\nDESCRIPTION: This PowerShell script demonstrates how to create a Virtual Machine from an unmanaged User image VHD. It covers setting up variables, creating a resource group, configuring storage, setting up networking components, and deploying the VM with OS and data disks from image sources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-from-user-image/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n##### Variables\n    ## Global\n    $rgName = \"testrg\"\n    $location = \"westus\"\n\n    ## Storage\n    $storageName = \"teststore\"\n    $storageType = \"Standard_GRS\"\n\n    ## Network\n    $nicname = \"testnic\"\n    $subnet1Name = \"subnet1\"\n    $vnetName = \"testnet\"\n    $vnetAddressPrefix = \"10.0.0.0/16\"\n    $vnetSubnetAddressPrefix = \"10.0.0.0/24\"\n\n    ## Compute\n    $vmName = \"testvm\"\n    $computerName = \"testcomputer\"\n    $vmSize = \"Standard_A2\"\n    $osDiskName = $vmName + \"osDisk\"\n\n##### Resource Group\n    New-AzureRmResourceGroup -Name $rgName -Location $location\n\n##### Storage\n    $storageacc = New-AzureRmStorageAccount -ResourceGroupName $rgName -Name $storageName -Type $storageType -Location $location\n\n##### Network\n    $pip = New-AzureRmPublicIpAddress -Name $nicname -ResourceGroupName $rgName -Location $location -AllocationMethod Dynamic\n    $subnetconfig = New-AzureRmVirtualNetworkSubnetConfig -Name $subnet1Name -AddressPrefix $vnetSubnetAddressPrefix\n    $vnet = New-AzureRmVirtualNetwork -Name $vnetName -ResourceGroupName $rgName -Location $location -AddressPrefix $vnetAddressPrefix -Subnet $subnetconfig\n    $nic = New-AzureRmNetworkInterface -Name $nicname -ResourceGroupName $rgName -Location $location -SubnetId $vnet.Subnets[0].Id -PublicIpAddressId $pip.Id\n\n##### Compute\n    ## Setup local VM object\n    $cred = Get-Credential\n    $vm = New-AzureRmVMConfig -VMName $vmName -VMSize $vmSize\n    $vm = Set-AzureRmVMOperatingSystem -VM $vm -Windows -ComputerName $computerName -Credential $cred -ProvisionVMAgent -EnableAutoUpdate\n\n    $vm = Add-AzureRmVMNetworkInterface -VM $vm -Id $nic.Id\n\n    $osDiskUri = \"http://test.blob.core.windows.net/vmcontainer10798c80-131-1231-a94a-f9d2a712251f/osDisk.10798c80-2919-4100-a94a-f9d2a712251f.vhd\"\n    $imageUri = \"http://test.blob.core.windows.net/system/Microsoft.Compute/Images/captured/image-osDisk.8b021d87-913c-4f94-a01a-944ad92d7388.vhd\"\n    $vm = Set-AzureRmVMOSDisk -VM $vm -Name $osDiskName -VhdUri $osDiskUri -CreateOption fromImage -SourceImageUri $imageUri -Windows\n\n    $dataImageUri = \"http://test.blob.core.windows.net/system/Microsoft.Compute/Images/captured/image-dataDisk-0.8b021d87-913c-4f94-a01a-944ad92d7388.vhd\"\n    $dataDiskUri = \"http://test.blob.core.windows.net/vmcontainer10798c80-sa11-41sa-dsad-f9d2a712251f/dataDisk-0.10798c80-2919-4100-a94a-f9d2a712251f.vhd\"\n    $vm = Add-AzureRmVMDataDisk -VM $vm -Name \"dd1\" -VhdUri $dataDiskUri -SourceImageUri $dataImageUri -Lun 0 -CreateOption fromImage\n\n    ## Create the VM in Azure\n    New-AzureRmVM -ResourceGroupName $rgName -Location $location -VM $vm -Verbose\n```\n\n----------------------------------------\n\nTITLE: SSH Connection Command for VM Scale Set\nDESCRIPTION: Command syntax for SSH connection to a VM in the scale set via NAT rule port mapping. Uses the public IP address and username with a specific NAT port.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-linux-nat/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nssh -p 50000 {username}@{public-ip-address}\n```\n\n----------------------------------------\n\nTITLE: Defining Resource Tags for Azure HDInsight Spark Cluster Deployment\nDESCRIPTION: This code snippet defines the tags associated with the Azure Resource Manager template for deploying an HDInsight Spark cluster in a VNet. It specifies the storage account type and the Azure resources being deployed.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-spark-linux-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Standard_LRS, Microsoft.Network/virtualNetworks, Microsoft.Storage/storageAccounts, Microsoft.HDInsight/clusters\"\n```\n\n----------------------------------------\n\nTITLE: Azure Front Door Tags Configuration\nDESCRIPTION: Resource tags definition for Azure Front Door deployment indicating the Microsoft.Network namespace dependencies for frontDoors and custom HTTPS configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-custom-domain/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Network/frontDoors, Microsoft.Network/frontdoors/frontendEndpoints/customHttpsConfiguration\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration in JSON\nDESCRIPTION: Resource tags configuration specifying Microsoft Compute resource types for host groups and hosts deployment in Azure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-dedicated-hosts/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Compute/HostGroups, Microsoft.Compute/Hostgroups/hosts\"\n```\n\n----------------------------------------\n\nTITLE: Identifying Azure Resource Type Tag (Text)\nDESCRIPTION: This tag specifies the Azure Resource Manager resource type being deployed by the associated template, which is a PowerBI Workspace Collection under the 'Microsoft.PowerBI' provider. It serves as metadata to quickly identify the core resource managed by the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.powerbi/powerbi-workspace-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.PowerBI/workspaceCollections`\n```\n\n----------------------------------------\n\nTITLE: ARM Template Tags for SQL Server Always On Deployment\nDESCRIPTION: Resource tags defining the components and extensions used in the SQL Server Always On deployment template, including virtual machines, networking, storage, and SQL Server configurations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sql/sqlvm-alwayson-cluster/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nSQL Server, Always On, Availability Group, AG, High Availability, Cluster, Microsoft.Resources/deployments, Microsoft.Compute/virtualMachines/extensions, DSC, Microsoft.Network/networkInterfaces, SqlIaaSAgent, Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers, Microsoft.Network/virtualNetworks, Microsoft.Compute/availabilitySets, Microsoft.Compute/virtualMachines, extensions\n```\n\n----------------------------------------\n\nTITLE: Specifying Deployment Directory Context\nDESCRIPTION: This path indicates the required working directory from which the Azure CLI deployment commands should be executed. The Bicep template (`main.bicep`) and parameter file (`azuredeploy.parameters.json`) are expected to be relative to this location within the project structure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-vm-replication-and-disaster-recovery/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nmicrosoft.recoveryservices\\recovery-services-vm-replication-and-disaster-recovery directory\n```\n\n----------------------------------------\n\nTITLE: Removing the S2DMon Service\nDESCRIPTION: Stops and removes the S2DMon service from a Storage Spaces Direct node when monitoring is no longer needed.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/s2d-oms-mgmt-solution/README.md#2025-04-23_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nC:\\temp\\s2dmon.ps1 -Stop\nC:\\temp\\s2dmon.ps1 -Remove\n```\n\n----------------------------------------\n\nTITLE: Key Vault Parameter Names in ARM Template\nDESCRIPTION: Code block showing the key parameter names required for Azure Key Vault integration with SQL Server, including credential name, vault URL, service principal name and secret.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-sql-existing-keyvault-update/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nsqlAkvCredentialName - Name of the SQL Server credential for key vault access\\nslqAkvUrl - Key vault URL\\nservicePrincipalName - Azure AD service principal (Client ID)\\nservicePrincipalSecret - Service principal secret (Client Secret)\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Tags in JSON\nDESCRIPTION: This JSON snippet defines Azure resource tags for the template, specifying the resource types and services involved.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-asp-app-on-ase-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/serverfarms, Microsoft.Web/sites, Microsoft.Network/virtualNetworks, Microsoft.Web/hostingEnvironments\"\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types and Tags for the Template\nDESCRIPTION: This snippet lists the relevant Azure resource provider types and descriptive tags associated with the deployment template. It identifies the core services being created: IoT Hubs, IoT Hub Consumer Groups, Device Update Accounts, and Device Update Instances.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.deviceupdate/deviceupdate-create-account-instance-iothub/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: iot, iot-hub, iot-hub-device-update, Microsoft.Devices/IotHubs, Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups, Microsoft.DeviceUpdate/accounts, Microsoft.DeviceUpdate/accounts/instances`\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Types Declaration\nDESCRIPTION: List of Azure resource types used in the deployment template including networking, compute, and extension resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/nested-vms-in-virtual-network/README.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, DSC, CustomScriptExtension, Microsoft.Resources/deployments, Microsoft.Network/networkInterfaces, Microsoft.Network/routeTables\n```\n\n----------------------------------------\n\nTITLE: Updating a Pull Request with New Commits\nDESCRIPTION: Workflow for updating an existing pull request by making changes, committing them, and pushing to the same branch in your fork.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout NAME_OF_YOUR_BRANCH\n# Make changes, stage all changes for commit\ngit add --all .\n# Commit\ngit commit\n# Push to GitHub\ngit push\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Blockchain Service with Azure CLI\nDESCRIPTION: This command deploys the Azure Blockchain Service using an ARM template via Azure CLI. It requires specifying a deployment name, resource group, and the path to the template file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.blockchain/blockchain-asaservice/GettingStarted-blockchain.md#2025-04-23_snippet_1\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz group deployment create --name \"name of your deployment\" --resource-group \"resource-group\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration\nDESCRIPTION: Tag definitions for the Azure deployment template specifying nested virtualization, Hyper-V, and Windows Server configurations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/nested-vms-in-virtual-network/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nnested, hyper-v, windows server 2016, ws2016\n```\n\n----------------------------------------\n\nTITLE: Storage Container Resource Tag Definition\nDESCRIPTION: Resource tag definition specifying the Microsoft.AzureStackHCI/storageContainers resource type and HCI tag.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurestackhci/storage-container/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.AzureStackHCI/storageContainers, hci\n```\n\n----------------------------------------\n\nTITLE: Creating Deploy to Azure Buttons in Markdown\nDESCRIPTION: This snippet demonstrates how to create 'Deploy to Azure' and 'Deploy to Azure US Gov' buttons using Markdown syntax. It also includes a button to visualize the ARM template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/test/ci-tests/data/fix-readme-tests/README.nochanges.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Starting HAProxy and MHA Services\nDESCRIPTION: Commands to start HAProxy load balancer and MHA manager services for MySQL high availability\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-mha-haproxy-ubuntu/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo /usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg\nnohup masterha_manager --conf=/etc/app1.cnf < /dev/null > /var/log/masterha/app1/app1.log 2>&1 &\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Storage Performance Testing\nDESCRIPTION: This ARM template snippet shows the resource tags used in the deployment. It includes references to Microsoft Storage, Network, and Compute resources needed for setting up the storage performance testing environment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/storage-iops-latency-throughput-demo/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, extensions, DSC, Microsoft.Network/publicIPAddresses\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Availability Zones for Azure VMSS in ARM Template (JSON)\nDESCRIPTION: This JSON snippet demonstrates how to configure Availability Zones for an Azure Virtual Machine Scale Set (VMSS) within an ARM template. Specifying zones like '1', '2', '3' distributes VM instances across different physical locations within an Azure region for higher availability. This feature requires a STANDARD tier Load Balancer and Public IP address if used, and the target Azure region must support Availability Zones.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-master-slave-customscript/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n      \"zones\": [\n        \"1\",\n        \"2\",\n        \"3\"\n      ]\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Lab Services Lab Plan using ARM Tags\nDESCRIPTION: Resource tagging information for the Azure Lab Services lab plan deployment template. This specifies the Azure resource type being deployed.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.labservices/lab-plan/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.LabServices/labPlans\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags definition for the Azure Maps deployment template, identifying Microsoft services and components used.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.maps/maps-use-sas/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Maps/accounts, UserAssigned, Microsoft.Maps/accounts/providers/roleAssignments, Microsoft.KeyVault/vaults/secrets, Microsoft.ManagedIdentity/userAssignedIdentities, Microsoft.KeyVault/vaults\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Resource Tags for CentOS Cluster\nDESCRIPTION: Resource tags definition listing the Microsoft Azure services and components used in the template deployment including storage, compute, networking and custom extensions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/centos-2nics-lb-cluster/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Compute/availabilitySets, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Network/loadBalancers, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: Function Definition Tag Structure\nDESCRIPTION: Tags block defining the Azure resources and functions deployed by this template, including CDN profiles, storage accounts, and web components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-function-public/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Cdn/profiles, Microsoft.Cdn/profiles/afdEndpoints, Microsoft.Cdn/profiles/originGroups, Microsoft.Cdn/profiles/originGroups/origins, Microsoft.Cdn/profiles/afdEndpoints/routes, Microsoft.Resources/deployments, Microsoft.Storage/storageAccounts, Microsoft.Insights/components, Microsoft.Web/serverfarms, Microsoft.Web/sites, Microsoft.Web/sites/functions, httpTrigger, http\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription with Azure CLI\nDESCRIPTION: Command to set the active Azure subscription for deployment using the subscription ID.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-simple-linux/GettingStarted-linux.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Exiting PostgreSQL Database Console\nDESCRIPTION: Command to exit the PostgreSQL interactive terminal after completing database operations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/postgre/postgresql-standalone-server-ubuntu/README.md#2025-04-23_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\n\\q\n```\n\n----------------------------------------\n\nTITLE: SAP HANA Storage Configuration Parameters Table\nDESCRIPTION: Markdown table defining the input parameters for SAP HANA storage configuration, including parameter names, examples, defaults, constraints, and descriptions. Parameters cover system identification, availability zones, networking, storage capacity, and Azure NetApp Files configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.netapp/anf-sap-hana/anf-sap-hana-crr-storage/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|    | Input Params                                  | Example        | Default                  | Data Type Constrain                                  | Comment (This will be shown as a tool tip)                                                                                                                                                                                                                                                                             |\n|----|-----------------------------------------------|----------------|--------------------------|------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 1  | SAP System ID                                 | DEV            |                          | string of length 3                                   | SAP system ID (Three characters long alpha-numeric string).                                                                                                                                                                                                                                                            |\n| 2  | Availability Zone                             | 1              |                          | List None,1,2,3                                      | Availability Zone. This is None when proximity placement group is selected.                                                                                                                                                                                                                                            |\n| 3  | Proximity Placement Group                     | ppg            |                          | string of min len 1                                  | Name of proximity placement group.                                                                                                                                                                                                                                                                                     |\n| 4  | Proximity Placement Group Resource Group Name | ppg-rg         |                          | string of min len 1                                  | Resource group name for the proximity placement group.                                                                                                                                                                                                                                                                 |\n| 5  | Network Features                              | Basic          | Standard                 | string                                               | Basic or Standard network features available to the volume.                                                                                                                                                                                                                                                            |\n| 6  | SAP Memory (in Gibibyte)                      | 100            |                          | 12000 >= Integer >= 1                                | SAP HANA memory (in GiB max supported 12000 GiB), used to auto compute storage size and throughput.                                                                                                                                                                                                                    |\n| 7  | Additional Capacity For Snapshots (% of RAM)  | 50             | 50                       | 200 >= Integer >= 0                                  | Additional memory to store snapshots, must be specified as % of RAM (range 0-200). This is used to auto compute storage size.                                                                                                                                                                                          |\n| 8  | SAP Host ID                                   | 1              | 1                        | Integer >= 1                                         | SAP HANA Host ID. Host ID 1 indicates Master Host. Shared, Data Backup and Log Backup volumes are only provisioned for Master Host.                                                                                                                                                                                    |\n| 9  | System Role                                   | DR             | DR                       | DR                                                   | Type of role for the storage account.Disaster Recovery (DR) specifies remote scenario.                                                                                                                                                                                                                                 |\n| 10 | Prefix                                        | default        | default                  | default or \"TEXT-\"                                   | All volume names will be prefixed with the given text. The default values for prefix text depends on system role. For DR it will be \"DR-\".                                                                                                                                                                             |\n| 11 | Tag Key                                       |                |                          | string                                               | If a Tag Key is specified, it will be added to each volume created by this ARM template. It is recommended to add a tag for HSR deployments, with the tag name as \"HSRPartnerStorageResourceId\".                                                                                                                       |\n| 12 | Tag Value                                     |                |                          | string                                               | If a Tag Value is specified, it will be added to each volume created by this ARM template. The value will only be added if Tag Key was specified. It is recommended to add a tag for HSR deployments, with Tag Value as \"Please enter the peering partner Volume ID\" and later update for each volume from the ANF UI. |\n| 13 | Azure Netapp Files Location                   | eastus         | resourceGroup().location | string of min len 1                                  | Azure Netapp Files (ANF) Location. If the resource group location is different than ANF location, ANF location needs to be specified.                                                                                                                                                                                  |\n| 14 | Azure Netapp Files                            | anf-name       |                          | string of min len 1                                  | Name of Azure Netapp Files (ANF) account.                                                                                                                                                                                                                                                                              |\n| 15 | Capacity Pool                                 | cp-name        |                          | string of min len 1                                  | Name of Capacity Pool in Azure Netapp Files (ANF) account. All the volumes are created using this capacity pool.                                                                                                                                                                                                       |\n| 16 | Virtual Network                               | vnet-name      |                          | string of min len 1                                  | Virtual Network name for the subnet.                                                                                                                                                                                                                                                                                   |\n| 17 | Delegated Subnet                              | subnet-name    |                          | string of min len 1                                  | Delegated Subnet name.                                                                                                                                                                                                                                                                                                 |\n| 18 | Data Size (in GB)                             | auto/1024      | auto                     | string of min len 1                                  | Specify capacity (in GiB). Possible values can be auto, none or integer values (min 100 GiB) representing size.                                                                                                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: Listing Available Azure Locations\nDESCRIPTION: Command to list all available Azure locations where resources can be deployed. This is useful for selecting the appropriate region for your resource group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/tomcat/openjdk-tomcat-ubuntu-vm/gettingstarted.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz account list-locations\n```\n\n----------------------------------------\n\nTITLE: Referencing Linked Template for Frontend Jump VM in Azure ARM Template\nDESCRIPTION: This snippet shows how the linked template is referenced for a single instance of the frontend jump VM in the main Azure Resource Manager deployment template. Many values are hardcoded for this specific use case.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/parameterized-linked-templates/detail/vmtemplate.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"name\": \"[variables('jumpVMName')]\",\n\"type\": \"Microsoft.Resources/deployments\",\n\"apiVersion\": \"2021-04-01\",\n\"dependsOn\": [\n    \"[resourceId('Microsoft.Network/networkInterfaces', variables('jumpNicName'))]\"\n],\n\"properties\": {\n    \"mode\": \"Incremental\",\n    \"templateLink\": {\n        \"uri\": \"[variables('paramvmTemplateUrl')]\",\n        \"contentVersion\": \"1.0.0.0\"\n    },\n    \"parameters\": {\n        \"vmName\": {\n            \"value\": \"[variables('jumpVMName')]\"\n        },\n        \"vmSize\": {\n            \"value\": \"[parameters('jumpVMSize')]\"\n        },\n        \"adminUsername\": {\n            \"value\": \"[parameters('adminUsername')]\"\n        },\n        \"adminPassword\": {\n            \"value\": \"[parameters('adminPassword')]\"\n        },\n        \"osType\": {\n            \"value\": \"[variables('osType')]\"\n        },\n        \"imageReference\": {\n            \"value\": \"[variables('imageReference')]\"\n        },\n        \"nicName\": {\n            \"value\": \"[variables('jumpNicName')]\"\n        },\n        \"nicId\": {\n            \"value\": \"[resourceId('Microsoft.Network/networkInterfaces', variables('jumpNicName'))]\"\n        },\n        \"dataDisksCount\": {\n            \"value\": 0\n        },\n        \"availabilityset_id_or_empty\": {\n            \"value\": \"\"\n        },\n        \"publicip_id_or_empty\": {\n            \"value\": \"[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpPublicIPName'))]\"\n        },\n        \"appgwbackend_id_or_empty\": {\n            \"value\": \"\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Key Vault Resource ID with PowerShell\nDESCRIPTION: This PowerShell command retrieves the details of an Azure Key Vault, including its resource ID required for the CMK workspace template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk-service-side-encryption/README.md#2025-04-23_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzKeyVault -VaultName '<keyvault-name>'\n```\n\n----------------------------------------\n\nTITLE: Azure Infrastructure Tags Definition\nDESCRIPTION: Resource tags used to identify and categorize the Azure resources deployed by this template\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azurefirewall-with-zones-sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/routeTables, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Network/azureFirewalls, Allow\"\n```\n\n----------------------------------------\n\nTITLE: Conditional Bicep Version Badge Display\nDESCRIPTION: This snippet demonstrates how to conditionally display a Bicep version badge if the sample includes a main.bicep file. It uses markdown syntax for embedding an image.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/sample-README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Bicep Version](https://azurequickstartsservice.blob.core.windows.net/badges/path-to-sample/BicepVersion.svg)\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Declaration for Azure ARM Template\nDESCRIPTION: Azure Resource Manager template tags defining the Microsoft resources required for GitHub Enterprise Server deployment, including storage, networking, and compute components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/github-enterprise/github-enterprise/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nTags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Network/networkSecurityGroups\n```\n\n----------------------------------------\n\nTITLE: Azure Budget Parameters Configuration\nDESCRIPTION: Defines the required parameters for creating an Azure budget including budget name, amount, time periods, thresholds, and notification settings. Parameters must include unique budget name, decimal amount value, time grain (Monthly/Quarterly/Annually), valid start/end dates, threshold percentages (0.01-1000), and contact information.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.consumption/create-budget-onefilter/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Budget Name\": \"unique-budget-name\",\n  \"Amount\": \"decimal-value\",\n  \"Time Grain\": \"[Monthly|Quarterly|Annually]\",\n  \"Start Date\": \"YYYY-MM-DD\",\n  \"End Date\": \"YYYY-MM-DD\",\n  \"First Threshold\": \"0.01-1000\",\n  \"Second Threshold\": \"0.01-1000\",\n  \"Contact Emails\": \"[array-of-strings]\",\n  \"Contact Groups\": \"[array-of-strings]\",\n  \"Resource Groups Filter\": \"[array-of-strings]\"\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags definition for Azure components including Compute, Network, and Load Balancer resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/load-balancer-ipv6-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nMicrosoft.Compute/availabilitySets, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Network/loadBalancers, Microsoft.Compute/virtualMachines\n```\n\n----------------------------------------\n\nTITLE: Infrastructure Resource Table in Markdown\nDESCRIPTION: Markdown table showing the infrastructure resources deployed by the template, including VM types, quantities and roles.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/datameer-trend-chef-riskanalysis/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Area\t        |Role\t                |Type\t|Qty|\n|------         |-------                |------ |---|\n|Security       |TrendMicro Server *    |\tD2\t|1  |\n|HDInsight      |Hadoop Head Node       |\tD3  |2 |\n|\t            |Hadoop Worker Node\t    |D3\t    |2 |\n|\t            |Datameer *\t            |D3\t    |1 |\n|Orchestration  |\tChef Server *\t    |D2\t    |1 |\n|\t            |Docker App Orchestration|\tD2\t| 1|\n|Test Application|\tChef Workstation    |D2|\t1 |\n|\t            |Test App\t            |D2\t    |2 |\n|Backend        |SQL Database\t        |Standard (S3)|\t1|\n|\t            |Azure Storage (HDInsight)|\tLRS\t|1  |\n|VM Storage\t    |Azure Storage\t        |LRS\t|1|\n```\n\n----------------------------------------\n\nTITLE: Setting Solidity Contract Source in Geth Console\nDESCRIPTION: This snippet shows how to set a variable containing the source code of a Solidity smart contract in the Geth JavaScript console. The contract is a simple guest book that allows setting and retrieving entries.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar guestBookSource = 'contract GuestBook {   mapping (address => string) entryLog;    function setEntry(string guestBookEntry) {     entryLog[msg.sender] = guestBookEntry;   }    function getMyEntry() constant returns (string) {     return entryLog[msg.sender];   } }'\n```\n\n----------------------------------------\n\nTITLE: Azure Login Command\nDESCRIPTION: Command to initiate Azure CLI login process\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cognitiveservices/cognitive-services-translate/GettingStarted.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Feature Tags for HDInsight Autoscale Template (Text)\nDESCRIPTION: Provides metadata tags summarizing the key features of the ARM template: HDInsight, Autoscale, and load-based configuration. These tags help categorize and search for the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-autoscale-loadbased/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: HDInsight, Autoscale, load-based\n```\n\n----------------------------------------\n\nTITLE: Installing Packages in JupyterHub Shared Environment using Conda\nDESCRIPTION: Command to install the GDAL package from conda-forge repository into the shared User Environment. The sudo -E prefix ensures the package is available to all users in the JupyterHub.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jupyter/jupyterhub-classroom/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo -E conda install -c conda-forge gdal\n```\n\n----------------------------------------\n\nTITLE: Azure Stack HCI Cluster Tag Definition\nDESCRIPTION: Resource tag definition for Azure Stack HCI cluster deployment, specifying the Microsoft.AzureStackHCI/clusters resource type and hci tag.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurestackhci/create-cluster-rac-enabled/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.AzureStackHCI/clusters, hci\n```\n\n----------------------------------------\n\nTITLE: Resource Type Tags for HDInsight Autoscale Template (Text)\nDESCRIPTION: Lists Azure resource types and storage SKU associated with the ARM template deployment. It indicates the use of Standard Locally Redundant Storage (Standard_LRS), Storage Accounts (Microsoft.Storage/storageAccounts), and HDInsight Clusters (Microsoft.HDInsight/clusters).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-autoscale-loadbased/README.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Standard_LRS, Microsoft.Storage/storageAccounts, Microsoft.HDInsight/clusters\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resources for HDInsight in VNet Deployment\nDESCRIPTION: This JSON snippet defines the Azure resources required for deploying an HDInsight cluster in a secure Virtual Network. It includes tags for storage account type, network security group, virtual network, storage account, and HDInsight cluster.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-secure-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Standard_LRS, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Storage/storageAccounts, Microsoft.HDInsight/clusters\"\n```\n\n----------------------------------------\n\nTITLE: Validating Azure Stack HCI Cluster Deployment with Azure PowerShell\nDESCRIPTION: This snippet shows how to use Azure PowerShell to validate the deployment of an Azure Stack HCI cluster using a Bicep template and parameter file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurestackhci/create-cluster-with-prereqs/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzResourceGroupDeployment -Name 'hcicluster' -ResourceGroupName <yourResourceGroup> -TemplateFile .\\main.bicep -TemplateParameterFile .\\azuredeploy.parameters.json\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for SQL VM in CSP Subscription\nDESCRIPTION: This ARM template snippet shows the resources being deployed for a SQL VM in a CSP subscription. It includes storage accounts, public IP addresses, network security groups, virtual networks, network interfaces, and virtual machines.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sql/sqlvm-provisioning-csp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"resources\": [\n  {\n    \"type\": \"Microsoft.Storage/storageAccounts\",\n    \"name\": \"[variables('storageAccountName')]\",\n    \"apiVersion\": \"2015-05-01-preview\",\n    \"location\": \"[parameters('location')]\",\n    \"properties\": {\n      \"accountType\": \"[variables('storageAccountType')]\"\n    }\n  },\n  {\n    \"apiVersion\": \"2015-05-01-preview\",\n    \"type\": \"Microsoft.Network/publicIPAddresses\",\n    \"name\": \"[variables('publicIPAddressName')]\",\n    \"location\": \"[parameters('location')]\",\n    \"properties\": {\n      \"publicIPAllocationMethod\": \"[variables('publicIPAddressType')]\",\n      \"dnsSettings\": {\n        \"domainNameLabel\": \"[parameters('dnsLabelPrefix')]\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"2015-05-01-preview\",\n    \"type\": \"Microsoft.Network/networkSecurityGroups\",\n    \"name\": \"[variables('networkSecurityGroupName')]\",\n    \"location\": \"[parameters('location')]\",\n    \"properties\": {\n      \"securityRules\": [\n        {\n          \"name\": \"default-allow-rdp\",\n          \"properties\": {\n            \"priority\": 1000,\n            \"sourceAddressPrefix\": \"*\",\n            \"protocol\": \"Tcp\",\n            \"destinationPortRange\": \"3389\",\n            \"access\": \"Allow\",\n            \"direction\": \"Inbound\",\n            \"sourcePortRange\": \"*\",\n            \"destinationAddressPrefix\": \"*\"\n          }\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"2015-05-01-preview\",\n    \"type\": \"Microsoft.Network/virtualNetworks\",\n    \"name\": \"[variables('virtualNetworkName')]\",\n    \"location\": \"[parameters('location')]\",\n    \"properties\": {\n      \"addressSpace\": {\n        \"addressPrefixes\": [\n          \"[variables('addressPrefix')]\"\n        ]\n      },\n      \"subnets\": [\n        {\n          \"name\": \"[variables('subnetName')]\",\n          \"properties\": {\n            \"addressPrefix\": \"[variables('subnetPrefix')]\"\n          }\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"2015-05-01-preview\",\n    \"type\": \"Microsoft.Network/networkInterfaces\",\n    \"name\": \"[variables('nicName')]\",\n    \"location\": \"[parameters('location')]\",\n    \"dependsOn\": [\n      \"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]\",\n      \"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]\"\n    ],\n    \"properties\": {\n      \"ipConfigurations\": [\n        {\n          \"name\": \"ipconfig1\",\n          \"properties\": {\n            \"privateIPAllocationMethod\": \"Dynamic\",\n            \"publicIPAddress\": {\n              \"id\": \"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]\"\n            },\n            \"subnet\": {\n              \"id\": \"[variables('subnetRef')]\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"2015-06-15\",\n    \"type\": \"Microsoft.Compute/virtualMachines\",\n    \"name\": \"[variables('vmName')]\",\n    \"location\": \"[parameters('location')]\",\n    \"dependsOn\": [\n      \"[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]\",\n      \"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]\"\n    ],\n    \"properties\": {\n      \"hardwareProfile\": {\n        \"vmSize\": \"[variables('vmSize')]\"\n      },\n      \"osProfile\": {\n        \"computerName\": \"[variables('vmName')]\",\n        \"adminUsername\": \"[parameters('adminUsername')]\",\n        \"adminPassword\": \"[parameters('adminPassword')]\"\n      },\n      \"storageProfile\": {\n        \"imageReference\": {\n          \"publisher\": \"[parameters('imagePublisher')]\",\n          \"offer\": \"[parameters('imageOffer')]\",\n          \"sku\": \"[parameters('imageSKU')]\",\n          \"version\": \"latest\"\n        },\n        \"osDisk\": {\n          \"name\": \"osdisk\",\n          \"vhd\": {\n            \"uri\": \"[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]\"\n          },\n          \"caching\": \"ReadWrite\",\n          \"createOption\": \"FromImage\"\n        }\n      },\n      \"networkProfile\": {\n        \"networkInterfaces\": [\n          {\n            \"id\": \"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]\"\n          }\n        ]\n      },\n      \"diagnosticsProfile\": {\n        \"bootDiagnostics\": {\n          \"enabled\": \"true\",\n          \"storageUri\": \"[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]\"\n        }\n      }\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: ApiVersion Format in Azure ARM Template Modules\nDESCRIPTION: Shows the format for documenting API versions used in Azure Resource Manager template modules. This is required in the module documentation to specify which API version the module is using.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/modules/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```apiVersion: 2019-12-01```\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Configuration in Azure Template\nDESCRIPTION: Metadata tags defining the template's resource associations and deployment characteristics.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/100-marketplace-sample/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: new, exiting, resource, vm, condition, conditional\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure App Configuration Store with Key-Values via ARM Template\nDESCRIPTION: This ARM template allows deployment of an Azure App Configuration store with configurable key-values. It supports various key properties including values, labels, tags, and content types, and can create references to Azure Key Vault secrets.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.appconfiguration/app-configuration-store-kv-copy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"configStoreName\": \"string\",\n  \"location\": \"string\",\n  \"keyData\": [\n    {\n      \"key\": \"string\",\n      \"value\": \"string\",\n      \"label\": \"string\",\n      \"tag\": {},\n      \"contentType\": \"string\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resources in ARM Template\nDESCRIPTION: This ARM template snippet defines the resources to be created: a subscription alias, a resource group, and a storage account. It includes parameters for subscription display name, billing scope, and resource group location.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/managementgroup-deployments/create-subscription-resourcegroup/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"resources\": [\n  {\n    \"scope\": \"/\",\n    \"type\": \"Microsoft.Subscription/aliases\",\n    \"apiVersion\": \"2020-09-01\",\n    \"name\": \"[parameters('subscriptionAliasName')]\",\n    \"properties\": {\n      \"workload\": \"Production\",\n      \"displayName\": \"[parameters('subscriptionDisplayName')]\",\n      \"billingScope\": \"[parameters('billingScope')]\"\n    }\n  },\n  {\n    \"scope\": \"[concat('Microsoft.Management/managementGroups/', parameters('managementGroupId'))]\",\n    \"type\": \"Microsoft.Resources/deployments\",\n    \"apiVersion\": \"2021-04-01\",\n    \"name\": \"[variables('resourceGroupDeploymentName')]\",\n    \"location\": \"[deployment().location]\",\n    \"properties\": {\n      \"expressionEvaluationOptions\": {\n        \"scope\": \"inner\"\n      },\n      \"mode\": \"Incremental\",\n      \"parameters\": {\n        \"subscriptionId\": {\n          \"value\": \"[reference(parameters('subscriptionAliasName')).subscriptionId]\"\n        },\n        \"rgName\": {\n          \"value\": \"[parameters('rgName')]\"\n        },\n        \"rgLocation\": {\n          \"value\": \"[parameters('rgLocation')]\"\n        },\n        \"storageAccountName\": {\n          \"value\": \"[parameters('storageAccountName')]\"\n        }\n      },\n      \"template\": {\n        \"$schema\": \"https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#\",\n        \"contentVersion\": \"1.0.0.0\",\n        \"parameters\": {\n          \"subscriptionId\": {\n            \"type\": \"string\"\n          },\n          \"rgName\": {\n            \"type\": \"string\"\n          },\n          \"rgLocation\": {\n            \"type\": \"string\"\n          },\n          \"storageAccountName\": {\n            \"type\": \"string\"\n          }\n        },\n        \"variables\": {},\n        \"resources\": [\n          {\n            \"type\": \"Microsoft.Resources/resourceGroups\",\n            \"apiVersion\": \"2021-04-01\",\n            \"name\": \"[parameters('rgName')]\",\n            \"location\": \"[parameters('rgLocation')]\",\n            \"properties\": {}\n          },\n          {\n            \"type\": \"Microsoft.Resources/deployments\",\n            \"apiVersion\": \"2021-04-01\",\n            \"name\": \"[variables('storageDeploymentName')]\",\n            \"resourceGroup\": \"[parameters('rgName')]\",\n            \"properties\": {\n              \"expressionEvaluationOptions\": {\n                \"scope\": \"inner\"\n              },\n              \"mode\": \"Incremental\",\n              \"parameters\": {\n                \"storageAccountName\": {\n                  \"value\": \"[parameters('storageAccountName')]\"\n                },\n                \"location\": {\n                  \"value\": \"[parameters('rgLocation')]\"\n                }\n              },\n              \"template\": {\n                \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n                \"contentVersion\": \"1.0.0.0\",\n                \"parameters\": {\n                  \"storageAccountName\": {\n                    \"type\": \"string\"\n                  },\n                  \"location\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"variables\": {},\n                \"resources\": [\n                  {\n                    \"type\": \"Microsoft.Storage/storageAccounts\",\n                    \"apiVersion\": \"2021-04-01\",\n                    \"name\": \"[parameters('storageAccountName')]\",\n                    \"location\": \"[parameters('location')]\",\n                    \"sku\": {\n                      \"name\": \"Standard_LRS\"\n                    },\n                    \"kind\": \"StorageV2\"\n                  }\n                ],\n                \"outputs\": {}\n              }\n            }\n          }\n        ],\n        \"outputs\": {}\n      }\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Azure Stack HCI Cluster Resource Tag Definition\nDESCRIPTION: Resource tags definition for Azure Stack HCI cluster deployment template, specifying the Microsoft.AzureStackHCI/clusters resource type and HCI tag.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.azurestackhci/create-cluster-2-node-switched-custom-storageip/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.AzureStackHCI/clusters, hci\n```\n\n----------------------------------------\n\nTITLE: Deploying GlassFish on SUSE using Azure PowerShell\nDESCRIPTION: This PowerShell command set deploys the GlassFish on SUSE template to Azure. It creates a new resource group in the specified location and deploys the template using parameters from a local file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/glassfish-on-suse/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzureRMResourceGroup -Name <ResourceGroupName> -Location <Location>\n\nNew-AzureRmResourceGroupDeployment -Name <DeploymentName> -DeploymentDebugLogLevel All -ResourceGroupName <ResourceGroupName> - TemplateFile https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/glassfish-on-suse/azuredeploy.json -TemplateParameterFile <PathToParamtersFile>\n```\n\n----------------------------------------\n\nTITLE: Azure Location Listing\nDESCRIPTION: Command to list all available Azure locations for resource deployment\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cognitiveservices/cognitive-services-translate/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz account list-locations\n```\n\n----------------------------------------\n\nTITLE: Defining Resource Types and Tags - Azure ARM Template - JSON\nDESCRIPTION: Specifies the Azure resource types used within the ARM template, such as storage accounts, virtual networks, load balancers, network security groups, VM scale sets, Service Fabric nodes, and the Service Fabric cluster itself. These tags help categorize and describe the template and assist in searchability and governance within Azure environments. This snippet does not directly define any resources but provides metadata useful for Azure deployment pipelines or documentation tools. Expected input/output is purely as documentation metadata.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.servicefabric/service-fabric-secure-nsg-cluster-65-node-3-nodetype/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers, Microsoft.Network/networkSecurityGroups, Microsoft.Compute/virtualMachineScaleSets, ServiceFabricNode, Microsoft.ServiceFabric/clusters\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Storage Resources with Tags\nDESCRIPTION: Code section defining resource tags and Azure service identifiers for Storage and Container Instance deployments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerinstance/aci-storage-file-share/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Azure Container Instance, az-cli, Microsoft.Storage/storageAccounts, Microsoft.ContainerInstance/containerGroups\"\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Command for Logging In\nDESCRIPTION: This command is used to log in to Azure using the Azure CLI. It prompts the user to authenticate through a web browser.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-github-deploy/GettingStarted-WebGit.md#2025-04-23_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Defining API Version for Azure Compute Gallery in JSON\nDESCRIPTION: Specifies the API version 2019-12-01 for creating an Azure Compute Gallery resource. This version information is essential for proper deployment of the Azure Resource Manager template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/modules/Microsoft.Compute/galleries/create/1.0/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\napiVersion: 2019-12-01\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition in Azure Template\nDESCRIPTION: List of Azure resource tags specifying the components used in the template including storage, networking, and compute resources with their extensions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/apache/ubuntu-apache-test-page/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkSecurityGroups, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Switching to Root User in CentOS VM for Troubleshooting\nDESCRIPTION: Command to switch to the root user on the CentOS VM when troubleshooting WildFly deployment extension issues. This is needed to access the extension logs.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/wildfly/wildfly-standalone-centos8/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo su -\n```\n\n----------------------------------------\n\nTITLE: Setting Active Azure Subscription using Azure CLI - Bash\nDESCRIPTION: This snippet sets the active Azure subscription for subsequent CLI operations. The user must replace \\\"your subscription id\\\" with their actual subscription identifier. The Azure CLI must be authenticated prior to running this command. The active subscription context determines where resources are deployed and billed.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/app-function/GettingStarted-FuncApp.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: IP Restricted Application Gateway Tags Configuration\nDESCRIPTION: Resource tags configuration for the Azure deployment template, specifying the Microsoft services and components involved in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-webapp-iprestriction/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/applicationGateways, Microsoft.Resources/deployments, Microsoft.Web/serverfarms, Microsoft.Web/sites, config, MySql, Microsoft.DBforMySQL/servers, firewallrules, databases\n```\n\n----------------------------------------\n\nTITLE: Incorrect Endpoint Usage in Bicep\nDESCRIPTION: Demonstrates an anti-pattern that should be avoided when referencing service endpoints in Bicep. Hard-coding domain names can cause issues when deploying to different clouds or environments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_13\n\nLANGUAGE: bicep\nCODE:\n```\nhostNames: [\n  '${webJobName}.azurewebsites.net'\n]\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tag Configuration for Ethereum Studio\nDESCRIPTION: Resource tags configuration block that specifies the Microsoft Azure services and components used in the template deployment, including storage, network, compute, and custom script extensions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/ethereum-studio-docker-standalone-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Network/networkSecurityGroups, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Listing Available Azure Locations using Azure CLI - Bash\nDESCRIPTION: This snippet lists all geographic locations (regions) available for resource deployment within Azure. No parameters are required for this query. It helps users determine the valid location values needed for subsequent deployment commands.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/app-function/GettingStarted-FuncApp.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz account list-locations\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags defining the WildFly deployment components and technologies used in the template\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/wildfly/wildfly-standalone-centos8/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nWildFly 18.0.1.Final, Red Hat, CentOS, Java, Java EE, Jakarta EE, Azure, Azure VM, Microsoft.Resources/deployments, Microsoft.Storage/storageAccounts, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Deploying Microsoft OMS Services with ARM Template\nDESCRIPTION: This template tag section indicates the resources deployed by the ARM template, including Automation Accounts, Recovery Services vaults, Storage Accounts, Log Analytics workspaces, and Operations Management solutions. The template creates all necessary dependencies for a complete OMS deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/oms-all-deploy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`Tags: Microsoft.Resources/deployments, Microsoft.Automation/automationAccounts, variables, string, credentials, Modules, runbooks, Microsoft.RecoveryServices/vaults, replicationFabrics, replicationPolicies, Microsoft.Storage/storageAccounts, Microsoft.OperationalInsights/workspaces, datasources, Microsoft.OperationalInsights/workspaces/savedSearches, Microsoft.OperationsManagement/solutions`\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template with Azure CLI\nDESCRIPTION: Azure CLI command to deploy the ARM template for the ASP.NET web app. Replace placeholder values with your specific deployment name, resource group, and template file path.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-windows-aspnet/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz group deployment create --name \"name of your deployment\" --resource-group \"resource-group\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: Virtual Machine Sizing Matrix for SAP Database Tiers\nDESCRIPTION: Configuration matrix defining VM sizes and storage configurations for different SAP performance tiers (Demo to X-Large), with both HA and non-HA options.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-3-tier-marketplace-image-multi-sid-db-md/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Demo\": {\n    \"HA\": \"2xDS12_v2 DB Server (1xP10)\",\n    \"Non-HA\": \"1xDS12_v2 DB Server (1xP10)\"\n  },\n  \"Small\": {\n    \"HA\": \"2xDS13_v2 DB Server (4xP20 1xP20)\",\n    \"Non-HA\": \"1xDS13_v2 DB Server (4xP20 1xP20)\"\n  },\n  \"Medium\": {\n    \"HA\": \"2xDS14_v2 DB Server (6xP20 1xP20)\",\n    \"Non-HA\": \"1xDS14_v2 DB Server (6xP20 1xP20)\"\n  },\n  \"Large\": {\n    \"HA\": \"2xGS4 DB Server (5xP30 1xP20)\",\n    \"Non-HA\": \"1xGS4 DB Server (5xP30 1xP20)\"\n  },\n  \"X-Large\": {\n    \"HA\": \"2xGS5 DB Server (6xP30 1xP30)\",\n    \"Non-HA\": \"1xGS5 DB Server (6xP30 1xP30)\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Blueprint Definition with Policy Assignment in JSON\nDESCRIPTION: This JSON template creates an Azure Blueprint definition with a policy assignment artifact. It includes blueprint-level parameters and demonstrates how to reference them in the artifact definition. The template uses the Microsoft.Blueprint resource provider to define the blueprint structure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/subscription-deployments/blueprints-new-blueprint/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {},\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Blueprint/blueprints\",\n      \"name\": \"blueprint-definition-name\",\n      \"properties\": {\n        \"description\": \"Blueprint description\",\n        \"targetScope\": \"subscription\",\n        \"parameters\": {\n          \"listOfResourceTypesNotAllowed\": {\n            \"type\": \"array\"\n          }\n        },\n        \"resourceGroups\": {\n          \"sampleRG\": {\n            \"name\": \"sampleRG\",\n            \"location\": \"eastus\"\n          }\n        }\n      },\n      \"resources\": [\n        {\n          \"type\": \"Microsoft.Blueprint/blueprints/artifacts\",\n          \"name\": \"policyArtifact\",\n          \"kind\": \"policyAssignment\",\n          \"properties\": {\n            \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749\",\n            \"parameters\": {\n              \"listOfResourceTypesNotAllowed\": {\n                \"value\": \"[[parameters('listOfResourceTypesNotAllowed')]]\"\n              }\n            }\n          }\n        }\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Resource Tag Definition for Azure Template\nDESCRIPTION: Resource tags specifying the components and services used in the template deployment including networking, storage, and compute resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/diskraid-ubuntu-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/networkSecurityGroups, Microsoft.Storage/storageAccounts, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for SAP NetWeaver in JSON\nDESCRIPTION: This JSON snippet defines the Azure resources needed for a SAP NetWeaver deployment. It includes tags for storage accounts, network interfaces, and virtual machine extensions. The template is designed to be flexible for different SAP system sizes and storage types.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-2-tier-marketplace-image/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags\": Microsoft.Storage/storageAccounts, Microsoft.Resources/deployments, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines/extensions, [variables('cseExtName')]\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Manager Tags Definition\nDESCRIPTION: Resource tags defining the Microsoft services and components used in the template deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.automation/101-automation/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.OperationalInsights/workspaces, Microsoft.Automation/automationAccounts, SystemAssigned, runbooks, Microsoft.OperationalInsights/workspaces/linkedServices\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration\nDESCRIPTION: Resource tagging configuration for the Azure deployment template, specifying the components and services used in the infrastructure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/visualstudio/vsts-minbuildjava-ubuntu-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags\": \"Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Storage Spaces Direct Cluster with Artifacts using Azure PowerShell\nDESCRIPTION: This PowerShell command deploys the Azure Resource Group for the Storage Spaces Direct cluster, including uploading artifacts. It specifies the resource group location, artifact staging directory, and enables artifact upload.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/storage-spaces-direct/README.md#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n.\\Deploy-AzureResourceGroup.ps1 -ResourceGroupLocation 'eastus' -ArtifactStagingDirectory '301-storage-spaces-direct' -UploadArtifacts\n```\n\n----------------------------------------\n\nTITLE: Deploying CDN Profile and Endpoint with UrlSigning in Azure\nDESCRIPTION: This code snippet provides deployment buttons for the Azure quickstart template. It allows users to deploy the CDN configuration directly to their Azure environment or visualize the ARM template structure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/cdn-with-ruleseengine-urlsigning/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.cdn%2Fcdn-with-ruleseengine-urlsigning%2Fazuredeploy.json)\n\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.cdn%2Fcdn-with-ruleseengine-urlsigning%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Tags Declaration for Azure Resource Manager Template\nDESCRIPTION: Resource tags definition for the Azure Container Instance deployment, specifying the provider and accessibility level.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/aci-bc/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.ContainerInstance/containerGroups, Public\n```\n\n----------------------------------------\n\nTITLE: Uploading PFX Certificate to Azure Key Vault\nDESCRIPTION: This PowerShell script uploads a combined PFX certificate to an Azure Key Vault. It converts the password to a secure string, imports the certificate, and sets the access policy for the Key Vault.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vm-win-iis-app-ssl/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$securepfxpwd = ConvertTo-SecureString â€“String '<strongpassword>' â€“AsPlainText â€“Force\n$cer = Import-AzureKeyVaultCertificate -VaultName '<Azurekeyvaultname>' -Name '<CertStoreName>' -FilePath '<C:\\myCerts\\www_custDomain_com.pfx>' -Password $securepfxpwd\nSet-AzureRmKeyVaultAccessPolicy -VaultName '<Azurekeyvaultname>' -UserPrincipalName '<udsarm@microsoft.com>' -PermissionsToCertificates all\n```\n\n----------------------------------------\n\nTITLE: Viewing WildFly Installation Logs\nDESCRIPTION: Command to view the WildFly installation log file which contains detailed information about the deployment process, including any errors or failures that occurred during installation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/wildfly/wildfly-standalone-centos8/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmore wildfly.install.log\n```\n\n----------------------------------------\n\nTITLE: ARM Resource Tags for OMS SCOM ACS Solution\nDESCRIPTION: Resource tags identifying the Azure resources used in this template, including Microsoft.OperationalInsights/workspaces, Microsoft.OperationsManagement/solutions, and UI components like views, Blade, OverviewTile, and savedSearches.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/oms-scomacs-solution/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n`Tags: Microsoft.OperationalInsights/workspaces, Microsoft.OperationsManagement/solutions, views, Blade, OverviewTile, savedSearches`\n```\n\n----------------------------------------\n\nTITLE: Deploying RHEL VM using Azure CLI commands\nDESCRIPTION: A set of Azure CLI commands to deploy a blank Red Hat Enterprise Linux VM. These commands create a resource group in East US and deploy a RHEL 7.8 VM with default configurations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-simple-rhel-unmanaged/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nazure config mode arm\nazure group create TestCLIRG EastUS\nazure vm quick-create TestCLIRG vm1 EastUS Linux RedHat:RHEL:7.8:latest azureuser\n```\n\n----------------------------------------\n\nTITLE: Deploying Docker Swarm Cluster Template with Azure CLI\nDESCRIPTION: This command deploys the Docker Swarm cluster template to Azure using the Azure CLI. It references the template file stored in the Azure QuickStart Templates repository on GitHub.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/swarm/docker-swarm-cluster/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz deployment group create --resource-group <resource-group-name> --template-uri https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/application-workloads/swarm/docker-swarm-cluster/azuredeploy.json\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure DNS Zone with Office 365 Records using ARM Template\nDESCRIPTION: This ARM template creates an Azure DNS zone and configures various record sets for Office 365 services including Exchange, Skype for Business, and Mobile Device Management. It allows customization of which records to create based on the services used.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/dns-records-office365/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    // Parameters would be defined here\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Network/dnszones\",\n      \"name\": \"[parameters('dnsZoneName')]\",\n      \"apiVersion\": \"2018-05-01\",\n      \"location\": \"global\",\n      \"properties\": {}\n    },\n    // Additional resources for CNAME, MX, TXT, and SRV records would be defined here\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration for OpenVPN Deployment\nDESCRIPTION: Resource tags definition for Azure template deployment, specifying the Microsoft services and extensions used in the OpenVPN server setup.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/openvpn-access-server-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources with ARM Template\nDESCRIPTION: This code snippet shows the deployment buttons for the Azure Resource Manager (ARM) template. It includes options to deploy to Azure Public Cloud and Azure US Government Cloud, as well as a link to visualize the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-push-certificate-windows/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.compute%2Fvm-push-certificate-windows%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.compute%2Fvm-push-certificate-windows%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.compute%2Fvm-push-certificate-windows%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Tags for OpenSIS Deployment\nDESCRIPTION: This JSON snippet defines the Azure resource tags for the OpenSIS deployment template. It specifies the template description, page type, associated Azure products, and URL fragment for the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/opensis/opensis-cluster-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\": \"This template deploys OpenSIS Community Edition as a LAMP application on Ubuntu. It creates a one or more Ubuntu VM for the front end and a single VM for the backend. It does a silent install of Apache and PHP on the front end VM's and MySQL on the backend VM. Then it deploys OpenSIS Community Edition on the cluster.  After the deployment is successful, you can go to /opensis-ce on each of the front end VM's (using web admin access) to start congfiguring OpenSIS.\",\n  \"page_type\": \"sample\",\n  \"products\": [\n    \"azure\",\n    \"azure-resource-manager\"\n  ],\n  \"urlFragment\": \"opensis-cluster-ubuntu\",\n  \"languages\": [\n    \"json\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring Azure Front Door Resource Tag\nDESCRIPTION: Resource tag declaration for Azure Front Door service in an ARM template, used for resource identification and organization.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-session-affinity/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/frontDoors\n```\n\n----------------------------------------\n\nTITLE: Defining Input Data Format for FTP Source (Text)\nDESCRIPTION: This text snippet displays the expected format for the input file (`input.txt`) residing on the FTP server. Each line contains a last name followed by a comma and then the first name. This data serves as the source for the initial Copy activity in the Azure Data Factory pipeline, which transfers it to Azure Blob Storage.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-ftp-hive-blob/README.md#2025-04-23_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nDoe, John\nDoe, Jane\nGates, Bill\nAllen, Paul\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types Used in Template\nDESCRIPTION: This tag line lists the primary Microsoft Azure resource provider namespaces and resource types that are deployed or configured by the associated ARM template. It indicates dependencies on Azure Databricks workspaces, Azure Resource deployments (likely for nested templates or configuration), and Azure Key Vault access policies for managing CMK.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-all-in-one-template-for-privateendpoint-cmk-all-forms/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Databricks/workspaces, Microsoft.Resources/deployments, Microsoft.KeyVault/vaults/accessPolicies`\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure VM with 32 Data Disks for High IOPS\nDESCRIPTION: ARM template that deploys a Standard D14 VM with 32 data disks configured in a storage space with 64KB stripe interleave. The configuration includes disk striping per best practices for maximum IOPS and formatting into a single NTFS volume mounted as H:\\. Uses locally redundant storage (LRS) to prevent corruption from async replication.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vm-32-data-disks-high-iops/README.md#2025-04-23_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: ARM Template Tag Definition for Azure Deployment\nDESCRIPTION: JSON tags section defining the Azure Resource Manager template metadata including description, page type, products, and URL fragment. This helps classify the template in the Azure ecosystem.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/2fe-linux-lb80-ssh-1be-win-nsg-rdp-datadisk-ssd/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\": \"This template creates 2 Linux VMs (that can be used as web FE) with in an Availability Set and a Load Balancer with port 80 open. The two VMs can be reached using SSH on port 6001 and 6002. This template also create a SQL Server 2014 VM that can be reached via RDP connection defined in a Network Security Group. All VMs storage can use Premium Storage (SSD) and you can choose to creare VMs with all DS sizes\",\n  \"page_type\": \"sample\",\n  \"products\": [\n    \"azure\",\n    \"azure-resource-manager\"\n  ],\n  \"urlFragment\": \"2fe-linux-lb80-ssh-1be-win-nsg-rdp-datadisk-ssd\",\n  \"languages\": [\n    \"json\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Key Vault for Template Deployment with Azure CLI\nDESCRIPTION: Azure CLI command to enable Azure Key Vault for template deployment access. This allows ARM templates to retrieve secrets during deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-secure-password/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault update  --name Contoso --enabled-for-template-deployment true\n```\n\n----------------------------------------\n\nTITLE: Adding Azure Deployment Buttons in Markdown\nDESCRIPTION: This code snippet demonstrates how to add 'Deploy to Azure', 'Deploy to Azure US Gov', and 'Visualize' buttons in a Markdown file. These buttons link to the Azure portal for direct deployment and to the ARM template visualizer.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/test/ci-tests/data/fix-readme-tests/README.badlinks.expected.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Starting the S2DMon Service\nDESCRIPTION: Starts the S2DMon service after setup to begin collecting and sending S2D metrics to Azure Log Analytics.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/s2d-oms-mgmt-solution/README.md#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nC:\\temp\\s2dmon.ps1 -Start\n```\n\n----------------------------------------\n\nTITLE: Custom Image configuration for Nextflow cluster deployment\nDESCRIPTION: JSON configuration for specifying a custom Ubuntu 16 LTS based image for the Nextflow cluster's master and node VMs. The custom image ID is retrieved using Azure CLI and set in the parameters file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/nextflow/nextflow-genomics-cluster-ubuntu/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n    \"vmImageReference\": {\n      \"value\": {\n        \"id\": \"yourManagedImageId - 'az image list' then take id from output\"\n      }\n    }\n```\n\n----------------------------------------\n\nTITLE: Connecting to VM via Azure Bastion using Microsoft Entra ID Authentication\nDESCRIPTION: Azure CLI command to establish an RDP connection to a virtual machine through Azure Bastion using Microsoft Entra ID authentication. This command requires the bastion host name, resource group name, and target VM resource ID.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/aifoundry-networking-aoao/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz network bastion rdp \\\n    --name <bastion-host-name> \\\n    --resource-group <resource-group-name> \\\n    --target-resource-id <virtual-machine-resource-id> \\\n    --auth-type AAD\n```\n\n----------------------------------------\n\nTITLE: LDAP Configuration for Shibboleth IDP\nDESCRIPTION: Configuration settings for integrating LDAP authentication with Shibboleth IDP, including server connection details and attribute mappings.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/shibboleth/shibboleth-singlevm-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nidp.authn.LDAP.authenticator = adAuthenticator\nidp.authn.LDAP.ldapURL = ldap://125.524.52.54:389\nidp.authn.LDAP.returnAttributes = mail,uid,passwordExpirationTime,loginGraceRemaining\nidp.authn.LDAP.useStartTLS = false\nidp.authn.LDAP.useSSL = false\nidp.authn.LDAP.baseDN = cn=Users,DC=testorg,DC=com\nidp.authn.LDAP.userFilter = (sAMAccountName={user})\nidp.authn.LDAP.bindDN = john@testorg.com\nidp.authn.LDAP.bindDNCredential = JohnZSQ12*(\nidp.authn.LDAP.dnFormat = %s@testorg.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Resource Tags\nDESCRIPTION: Resource tags define metadata for the deployment including Microsoft Network components, Compute resources, and Insights configurations for autoscaling.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-windows-autoscale/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/loadBalancers, Microsoft.Compute/virtualMachineScaleSets, Microsoft.Insights/autoscalesettings, ChangeCount\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template with Azure PowerShell - PowerShell\nDESCRIPTION: This PowerShell snippet demonstrates how to deploy an Azure Resource Manager template for a Data Factory pipeline using the provided deployment script 'Deploy-AzureResourceGroup.ps1'. Required dependencies include Azure PowerShell and the deploy script present at the repository root. Parameters to specify are '-ResourceGroupLocation' for the Azure region and '-ArtifactStagingDirectory' for the template folder. The command expects a valid ARM template in the named directory and outputs a deployment status to the terminal. The primary limitation is that proper authentication and correct path setup are prerequisites.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-chained-copy-activities/README.md#2025-04-23_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\Deploy-AzureResourceGroup.ps1 -ResourceGroupLocation 'eastus' -ArtifactStagingDirectory 101-data-factory-blob-to-sql-copy-stored-proc\n```\n\n----------------------------------------\n\nTITLE: Azure API Version Reference for Managed Identity\nDESCRIPTION: Specifies the API version used for Azure Managed Identity resources in this module. This version (2018-11-30) is referenced for compatibility with the Azure API endpoints used in the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/modules/Microsoft.ManagedIdentity/user-assigned-identity-role-assignment/1.0/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\napiVersion: 2018-11-30\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition in ARM Template\nDESCRIPTION: Resource tags used in the ARM template to identify Microsoft-specific resources including networking, storage, and HDInsight clusters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/spark/hdinsight-genomics-adam/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/virtualNetworks, Microsoft.Storage/storageAccounts, Microsoft.HDInsight/clusters\n```\n\n----------------------------------------\n\nTITLE: Adding Azure Deployment Buttons in Markdown\nDESCRIPTION: This snippet demonstrates how to include 'Deploy to Azure', 'Deploy to Azure US Gov', and 'Visualize' buttons in a Markdown file. These buttons link to Azure portal deployment and ARM template visualization.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/test/ci-tests/data/fix-readme-tests/README.badlinks.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2hmmmm/main.bicep)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.containerregistry%2Fcontainer-registry%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Template Changelog Entry in Bash\nDESCRIPTION: Documents the changelog for the template, indicating a preview version release date of June 21, 2016.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/bosh/bosh-cf-crossregion/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nTemplate Changelog\n\n# Preview Version (2016-06-21)\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Parameters for RDS HA in JSON\nDESCRIPTION: This JSON snippet shows the key parameters for configuring the Remote Desktop Services high availability deployment. It specifies the project name, location, external DNS zone, and the number of instances for each RDS role.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/rds-deployment-full-ha/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"projectName\": {\n        \"value\": \"rds\"\n    },\n    \"location\": {\n        \"value\": \"eastus\"\n    },\n    \"externalDnsZone\": {\n        \"value\": \"contosocorp.com\"\n    },\n    \"deployHA\": {\n        \"value\": true\n    },\n    \"dcCount\": {\n        \"value\": 2\n    },\n    \"rdcbCount\": {\n        \"value\": 2\n    },\n    \"rdwgCount\": {\n        \"value\": 2\n    },\n    \"rdshCount\": {\n        \"value\": 2\n    },\n    \"lsfsCount\": {\n        \"value\": 2\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Provisioning Output Example for PubNub Azure Bridge\nDESCRIPTION: Shows the expected output when running the provisioningListener.js script in provision mode. The script receives connection information for both ingress and egress Event Hubs and provides a reusable command for monitoring mode.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/pubnub/pubnub-eventhub-bridge/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngcohen@(master):~/clients/azureSubscribeBridge/monitoring$ node provisioningListener.js provision pnAnnounce demo\n\nprovision mode detected.\n\nSubscribe Key:  demo\nAnnounce Channel:  pnAnnounce\n\nSetting UUID to provisioning-712.101484881714\n\nListening for new PN/Azure Web Job Announce...\n\nReceived auto-provisioning payload from webjob-953.5124835092574\n\nIn the future, use the below command to monitor these Event Hubs:\n\nnode provisioningListener.js monitor \"Endpoint=sb://pn-eventhub-1fba54e9545.servicebus.windows.net/;SharedAccessKeyName=infromsubscriberhub;SharedAccessKey=fECC7E0hbfZFcZggrKPasgJbq1odY7LoLB6ll6xlHcA=;EntityPath=infromsubscriberhub\" \"Endpoint=sb://pn-eventhub-1fba54e9545.servicebus.windows.net/;SharedAccessKeyName=outtopublisherhub;SharedAccessKey=qmQZZYr2xvM+umHX7VFbim7UwCplTM9+naSDW6QHLaA=;EntityPath=outtopnpublisher\"\n\nIngress Event Hub Connection String:  Endpoint=sb://pn-eventhub-1fba54e9545.servicebus.windows.net/;SharedAccessKeyName=infromsubscriberhub;SharedAccessKey=fECC7E0hbfZFcZggrKPasgJbq1odY7LoLB6ll6xlHcA=;EntityPath=infromsubscriberhub\n\nEgress Event Hub Connection String:  Endpoint=sb://pn-eventhub-1fba54e9545.servicebus.windows.net/;SharedAccessKeyName=outtopublisherhub;SharedAccessKey=qmQZZYr2xvM+umHX7VFbim7UwCplTM9+naSDW6QHLaA=;EntityPath=outtopnpublisher\n\nWaiting for messages to arrive via Event Hubs...\n\nMessage Received on Ingress Event Hub:   : {\"guess what?\":\"this message arrived via PubNub into the ingress Event Hub!\"}\n```\n\n----------------------------------------\n\nTITLE: Role Definition IDs for Common Azure RBAC Roles\nDESCRIPTION: This snippet provides the role definition IDs for the Owner, Contributor, and Reader roles in Azure. These IDs are used as inputs for the RBAC role assignment template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.authorization/rbac-builtinrole-resourcegroup/README.md#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n\"Owner\": \"8e3af657-a8ff-443c-a75c-2fe8c4bcb635\"\n\"Contributor\": \"b24988ac-6180-42a0-ab88-20f7382dd24c\"\n\"Reader\": \"acdd72a7-3385-48ef-bd42-f606fba81ae7\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Available SQL Server Images in Azure PowerShell\nDESCRIPTION: PowerShell commands to list available SQL Server image offers and SKUs in Azure. This helps users identify the correct image parameters to use when deploying the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sql/sql-reporting-services-sql-server/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzureRmVMImageOffer -Location \"westus\" -Publisher \"MicrosoftSQLServer\" | Select Offer\nGet-AzureRmVMImageSku -Location \"westus\"-Publisher \"MicrosoftSQLServer\" -Offer \"SQL2014SP1-WS2012R2\" | Select Skus\n```\n\n----------------------------------------\n\nTITLE: Sending Support Email in PowerShell\nDESCRIPTION: This snippet demonstrates how to send a support email using PowerShell. It specifies the email address for Azure Marketplace support at Avyan Consulting Corp.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/azure-governance-operations-automation/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n> azuremarketplace@avyanconsulting.com\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Container Registry Deployment Badges in Markdown\nDESCRIPTION: This snippet shows how to display various deployment and testing badges for an Azure Container Registry QuickStart template using Markdown syntax.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/test/ci-tests/data/fix-readme-tests/README.nochanges.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Azure Public Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/PublicLastTestDate.svg)\n![Azure Public Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/PublicDeployment.svg)\n\n![Azure US Gov Last Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/FairfaxLastTestDate.svg)\n![Azure US Gov Last Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/FairfaxDeployment.svg)\n\n![Best Practice Check](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/BestPracticeResult.svg)\n![Cred Scan Check](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/CredScanResult.svg)\n\n![Bicep Version](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/BicepVersion.svg)\n```\n\n----------------------------------------\n\nTITLE: Listing Deployed Azure Resource Types\nDESCRIPTION: This snippet lists the specific Azure Resource Manager (ARM) resource types that are provisioned by the associated template. It indicates the deployment of a Service Bus namespace (`Microsoft.ServiceBus/namespaces`) and a queue within that namespace (`Microsoft.ServiceBus/namespaces/queues`).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.servicebus/servicebus-create-queue/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n`Tags: Microsoft.ServiceBus/namespaces, Microsoft.ServiceBus/namespaces/queues`\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags specification for the Azure CDN deployment, identifying Microsoft.Cdn services for profiles and endpoints.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/cdn-with-ruleseengine-rewriteandredirect/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Cdn/profiles, Microsoft.Cdn/profiles/endpoints\n```\n\n----------------------------------------\n\nTITLE: Configuring Tags for Azure Resources\nDESCRIPTION: Resource tags configuration specifying various Azure services and components used in the template including networking, compute, monitoring and gateway resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/ag-alert-backend-lastbyte-resp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: microsoft.insights/metricAlerts, Microsoft.Network/networkSecurityGroups, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScriptExtension, Microsoft.Network/applicationGateways, Microsoft.Network/networkInterfaces, microsoft.insights/actionGroups\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Template Tags\nDESCRIPTION: List of Azure resource providers and types used in the deployment template, including compute, networking, monitoring, and operational insights resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-virus-attack-prevention/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Resources/deployments, Microsoft.Compute/virtualMachines/extensions, IaaSAntimalware, MicrosoftMonitoringAgent, Microsoft.Compute/virtualMachines, Microsoft.OperationalInsights/workspaces, Microsoft.OperationsManagement/solutions, Microsoft.OperationalInsights/workspaces/datasources, Microsoft.Network/networkInterfaces, Microsoft.Network/networkSecurityGroups, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks\n```\n\n----------------------------------------\n\nTITLE: Running Data Factory Pipeline Monitor Script in PowerShell\nDESCRIPTION: This snippet executes the runmonitor.ps1 script with specified resource group and data factory names. The script is typically used to initiate and monitor a pipeline run in the deployed Azure Data Factory v2 instance. Prerequisites include downloading the script, authenticating with Azure, and specifying the correct values for the resource group and factory. The parameters \\\"-resourceGroupName\\\" and \\\"-DataFactoryName\\\" direct the script to the appropriate cloud resources, and the script outputs pipeline run status and monitoring information.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-blob-to-postgresql-copy/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n.\\runmonitor.ps1 -resourceGroupName \"<name of your resource group>\" -DataFactoryName \"<name of your data factory>\"\n```\n\n----------------------------------------\n\nTITLE: Provisioning Azure Mobile App with SQL Database - ARM Template - JSON\nDESCRIPTION: This code snippet represents resource type tags referenced within an Azure Resource Manager (ARM) template as applied to provisioning an Azure Mobile App, SQL Database, and Notification Hub. Dependencies include the Azure Resource Manager and associated provider resources ('Microsoft.Web/serverfarms', 'Microsoft.Web/sites', 'Microsoft.Sql/servers', etc.). The tags summarize resource types involved, helping identify required template sections and inter-resource relationships. No parameters are shown here; expected input is the ARM template definition, and output is a cloud deployment of all listed resources. Limitations: actual resource configuration is defined elsewhere in the main JSON template file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/mobile-app-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Web/serverfarms, Microsoft.Web/sites, config, SQLServer, Custom, providers/links, Microsoft.Sql/servers, databases, firewallrules, Microsoft.NotificationHubs/namespaces, Microsoft.NotificationHubs/namespaces/notificationHubs\"\n```\n\n----------------------------------------\n\nTITLE: Pushing a New Branch After Rebasing\nDESCRIPTION: Command to push a rebased branch that hasn't been pushed before, setting up tracking with the remote repository.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\ngit push -u origin NAME_OF_YOUR_BRANCH\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with Azure CLI\nDESCRIPTION: This command creates a new Azure Resource Group using Azure CLI. It requires specifying a name and location for the resource group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-node/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Hello World Web App Response\nDESCRIPTION: Sample HTML response from the deployed hello world web application. It displays a greeting and the number of request records.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-container/README.md#2025-04-23_snippet_8\n\nLANGUAGE: html\nCODE:\n```\nHello World!\nThere are 0 request records.\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation for Azure Compute Modules\nDESCRIPTION: Documentation header explaining the purpose and scope of Microsoft.Compute template modules within Azure Resource Manager, including related resource providers.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/modules/Microsoft.Compute/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Azure Resource Manager Template Modules (Microsoft.Compute)\\n\\nThis folder contains modules for the Microsoft.Compute resource provider.  Other supporting resources may also be included in these modules (e.g. Microsoft.Network, Microsoft.Storage)\n```\n\n----------------------------------------\n\nTITLE: Staging All Files for Commit\nDESCRIPTION: Command to stage all changes in the repository, including new files, modifications, and deletions, preparing them for the next commit.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngit add --all .\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Subscription Selection\nDESCRIPTION: Command to set the active Azure subscription for deployment\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/visualstudio/ubuntu-mate-desktop-vscode/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Provider Tags\nDESCRIPTION: Resource provider tags specifying the Azure services and components used in the template deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/100-marketplace-sample/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Resources/deployments, Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkSecurityGroups, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Declaration in JSON\nDESCRIPTION: Resource tags definition for the Azure deployment template, specifying various Azure services and components used in the min.io gateway deployment\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/minio/minio-azure-gateway/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags\": \"splunk, min.io, minio, smartstore, s3, Microsoft.Network/virtualNetworks, Microsoft.Storage/storageAccounts, blobServices/containers, Microsoft.Network/privateDnsZones, virtualNetworkLinks, Microsoft.Network/privateEndpoints, Microsoft.Network/privateEndpoints/privateDnsZoneGroups, Microsoft.ManagedIdentity/userAssignedIdentities, Microsoft.Authorization/roleAssignments, Microsoft.Resources/deploymentScripts, UserAssigned, Microsoft.ContainerService/managedClusters, SystemAssigned, VirtualMachineScaleSets\"\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types and Parameters for Storage Account Backup Template\nDESCRIPTION: This snippet lists the Azure Resource Manager resource types (like `Microsoft.DataProtection/backupVaults`, `Microsoft.Storage/storageAccounts`, `Microsoft.Authorization/roleAssignments`, `Microsoft.DataProtection/backupVaults/backupInstances`, `Microsoft.DataProtection/backupVaults/backupPolicies`) and parameters (like `vaultStorageRedundancy`) used within the Azure template to create a storage account and configure its backup protection via Azure Backup Vault. The `systemAssigned` tag likely refers to managed identity configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.dataprotection/backup-create-storage-account-enable-protection/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.DataProtection/backupVaults, systemAssigned, [parameters('vaultStorageRedundancy')], Microsoft.DataProtection/backupVaults/backupPolicies, Microsoft.Storage/storageAccounts, Microsoft.Authorization/roleAssignments, Microsoft.DataProtection/backupVaults/backupInstances`\n```\n\n----------------------------------------\n\nTITLE: Deploying Configuration Manager Current Branch Template in Azure\nDESCRIPTION: This code snippet provides deployment buttons for the Azure Resource Manager template. It includes options to deploy to Azure public cloud, Azure US Government cloud, and a button to visualize the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sccm/sccm-currentbranch/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fsccm%2Fsccm-currentbranch%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fsccm%2Fsccm-currentbranch%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fsccm%2Fsccm-currentbranch%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Setting Git Push Default Behavior\nDESCRIPTION: Command to configure Git's push behavior to 'simple' mode, ensuring only the current branch is pushed when using 'git push' without arguments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit config --global push.default simple\n```\n\n----------------------------------------\n\nTITLE: Getting Policy Definition ID using PowerShell\nDESCRIPTION: PowerShell script to retrieve the policy definition ID for a built-in policy called 'Audit resource location matches resource group location'. This ID is required as an input parameter for the ARM template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.authorization/azurepolicy-assign-builtinpolicy-resourcegroup/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$policyDefinitionId = $(Get-AzPolicyDefinition  | Where-Object { $_.Properties.DisplayName -eq 'Audit resource location matches resource group location' }).PolicyDefinitionId\n```\n\n----------------------------------------\n\nTITLE: KQL CSV Ingestion Script Reference\nDESCRIPTION: A reference to a KQL script that defines how CSV data is ingested into the Azure Data Explorer database. The script is used to configure the 'People' table that will receive data from CSV files uploaded to the storage container.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.kusto/kusto-event-grid/README.md#2025-04-23_snippet_0\n\nLANGUAGE: kql\nCODE:\n```\n.create table People (Name:string, Department:string)\n```\n\n----------------------------------------\n\nTITLE: Defining ARM Template Resource Tags - Markdown\nDESCRIPTION: This snippet provides a string of resource provider tags for use in an Azure ARM template, including Microsoft.NetApp/netAppAccounts/volumeGroups and related compute and networking services. The tags are intended for use in ARM deployments to declare and organize resources as required by Azure NetApp Files solutions. No external dependencies are necessary; these are recognized Azure resource types. The snippet is informational and should be used as a reference while constructing or reviewing deployment templates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.netapp/anf-sap-hana/anf-sap-hana-crr-storage/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`Tags: Microsoft.NetApp/netAppAccounts/volumeGroups, Microsoft.Network/virtualNetworks, Microsoft.NetApp/netAppAccounts, Microsoft.NetApp/netAppAccounts/capacityPools, Microsoft.NetApp/netAppAccounts/capacityPools/volumes, Microsoft.Compute/proximityPlacementGroups, Microsoft.Compute/availabilitySets, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines`\n```\n\n----------------------------------------\n\nTITLE: Deploying Kafka Cluster with PowerShell\nDESCRIPTION: PowerShell command to deploy the Kafka template to a resource group using specified template and parameter files. This initiates the infrastructure deployment with verbose output.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/kafka/kafka-ubuntu-multidisks/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nPS C:\\Users\\azureuser1> New-AzureResourceGroupDeployment -Name AZKFRGKAFKAV2DEP1 -ResourceGroupName \"AZKFRGKAFKAEA3\" -TemplateFile C:\\gitsrc\\azure-quickstart-templates\\kafka-ubuntu-multidisks\\azuredeploy.json -TemplateParameterFile C:\\gitsrc\\azure-quickstart-templates\\kafka-ubuntu-multidisks\\azuredeploy-parameters.json -Verbose\n```\n\n----------------------------------------\n\nTITLE: Defining Frontend Ports for Application Gateway in Azure ARM Template\nDESCRIPTION: This JSON snippet defines the frontend ports for an Application Gateway in an Azure Resource Manager template. It specifies a single listener on port 80 for HTTP traffic.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/parameterized-linked-templates/detail/agtemplate.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"frontendPorts\": [\n  {\n    \"name\": \"appGatewayFrontendPort\",\n    \"properties\": {\n      \"Port\": 80\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Deploying Ubuntu Tomcat VM using Azure Resource Manager Template\nDESCRIPTION: This JSON snippet is part of an Azure Resource Manager template for deploying an Ubuntu VM with Apache2 and Tomcat7. It includes tags for various Azure services and deployment options, as well as links for deploying to Azure and Azure US Gov.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/visualstudio/vsts-tomcat-ubuntu-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\": \"This template allows you to create an Ubuntu VM running Apache2 and Tomcat7 and enabled to support Visual Studio Team Services Apache Tomcat Deployment task, the Copy Files over SSH task, and the FTP Upload task (using ftps) to enable deployment of web applications.\",\n  \"page_type\": \"sample\",\n  \"products\": [\n    \"azure\",\n    \"azure-resource-manager\"\n  ],\n  \"urlFragment\": \"vsts-tomcat-ubuntu-vm\",\n  \"languages\": [\n    \"json\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: ARM Template Tag Definition for Azure Resources\nDESCRIPTION: Resource tagging configuration for Azure resources including network security groups, virtual networks, storage accounts, and compute resources.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vmss-windows-jumpbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachineScaleSets\"\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Group Creation\nDESCRIPTION: Command to create a new resource group in Azure with specified name and location\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cognitiveservices/cognitive-services-translate/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template with Azure CLI\nDESCRIPTION: This command deploys the ARM template using Azure CLI. It requires specifying the resource group and the path to the template file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-java-tomcat/gettingstarted.md#2025-04-23_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\naz group deployment create --resource-group \"resource-group\" --template-file \"azuredeploy.json path\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Resource Tags\nDESCRIPTION: Resource tag definition showing template metadata including products, languages and page type.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.automation/automation-configuration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: This template provides an example of how to deliver a virtual machine and and Automation account to manage the machine, in a single deployment\npage_type: sample\nproducts:\n- azure\n- azure-resource-manager\nurlFragment: automation-configuration\nlanguages:\n- json\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure Resource Tags\nDESCRIPTION: This code snippet defines the Azure resource tags used in the template. It specifies the resources being deployed, including network components and a virtual machine.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-push-certificate-windows/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines`\n```\n\n----------------------------------------\n\nTITLE: Tagging Azure Resources in ARM Templates - JSON\nDESCRIPTION: This code snippet lists relevant Azure resource types, separated by commas, to highlight which services are deployed or referenced by the template for auditing-mandatory environments. It is typically used in ARM templates in the metadata or documentation sections to inform users and tools about resources affected or provisioned. The snippet includes storage accounts, role assignments, SQL servers, and auditing-specific settings; no input or output is involved. Dependencies include Azure Resource Manager and proper permissions for resource deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.sql/sql-auditing-server-policy-to-blob-storage/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Storage/storageAccounts/providers/roleAssignments, Microsoft.Sql/servers, auditingSettings, devOpsAuditingSettings\"\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group using Azure CLI\nDESCRIPTION: This command creates a new Azure Resource Group with a specified name and location using the Azure CLI.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-django/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Deploying an ARM Template using Azure CLI\nDESCRIPTION: Command for deploying an Azure Resource Manager template to a specified resource group. This deploys the Data Science Virtual Machine as defined in the template file.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/datascience/vm-ubuntu-DSVM-GPU-or-CPU/GettingStarted.md#2025-04-23_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\naz group deployment create --resource-group \"resource-group\" --template-file \"path file\"\n```\n\n----------------------------------------\n\nTITLE: Resource Tags for Azure Route Table Template\nDESCRIPTION: A list of tags associated with the Azure Quickstart Template for creating a Route Table. These tags categorize the template by technology (Bicep), concept (route, network, routetable), and the Azure resource types involved (Microsoft.Network/routeTables, Microsoft.Authorization/locks).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/route-table-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: bicep, route, network, routetable, Microsoft.Network/routeTables, Microsoft.Authorization/locks`\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Activity Log Alert for Autoscale using ARM Template\nDESCRIPTION: This ARM template deploys an Activity Log Alert with an Action Group configured to send email notifications for Autoscale events. It includes resource definitions for Microsoft.Insights/actionGroups and Microsoft.Insights/activityLogAlerts.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/monitor-autoscale-alert/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\"Microsoft.Insights/actionGroups\": \"\", \"Microsoft.Insights/activityLogAlerts\": \"\"}\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration\nDESCRIPTION: Resource tags configuration for the Azure deployment template, specifying the resources and services used in the OpenScholar deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/openscholar/openscholar/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nTags: Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure CDN with Response Headers\nDESCRIPTION: Azure Resource Manager template tags defining Microsoft CDN profiles and endpoints with rules engine capabilities. The template enables creation of CDN resources with remote address matching and custom response headers.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/cdn-with-ruleseengine-responseheader/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Cdn/profiles, Microsoft.Cdn/profiles/endpoints\n```\n\n----------------------------------------\n\nTITLE: ARM Template Tags Configuration for Linux VM Encryption\nDESCRIPTION: Resource tags defining the Azure components and extensions required for Linux VM disk encryption management. Includes virtual machine, network, and encryption extension configurations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/decrypt-running-linux-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Compute/virtualMachines/extensions, AzureDiskEncryptionForLinux, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, [variables('extensionName')]\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags section from the ARM template defining the Azure resources and services used in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/visualstudio/visual-studio-dev-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Network/publicIPAddresses\n```\n\n----------------------------------------\n\nTITLE: Deploying Tenant Role Assignment Template in Azure\nDESCRIPTION: This code snippet provides deployment buttons for the tenant role assignment template in Azure and Azure US Gov. It also includes a button to visualize the ARM template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/tenant-deployments/tenant-role-assignment/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Ftenant-deployments%2Ftenant-role-assignment%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Ftenant-deployments%2Ftenant-role-assignment%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Ftenant-deployments%2Ftenant-role-assignment%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Deploying Storage Spaces Direct Cluster with Artifacts using Azure CLI\nDESCRIPTION: This bash command deploys the Azure Resource Group for the Storage Spaces Direct cluster, including uploading artifacts, using the Azure CLI. It specifies the artifact directory, location, and enables artifact upload.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/storage-spaces-direct/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nazure-group-deploy.sh -a '301-storage-spaces-direct' -l eastus -u\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags defining the template metadata including Maps, Indoor Maps, Creator, and Azure Maps services.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.maps/maps-indoormaps/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Maps, Indoor Maps, Creator, Azure Maps, Microsoft.Maps/accounts, Microsoft.Maps/accounts/creators\n```\n\n----------------------------------------\n\nTITLE: Metadata Tags for Azure Data Factory Template\nDESCRIPTION: A list of tags describing the Azure resources and features included or configured by the associated Azure Quickstart Template. This includes Data Factory resources (factories, managed virtual networks, integration runtimes), authorization locks, and diagnostic settings.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-git-config-managed-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: bicep, datafactory, adf, Microsoft.DataFactory/factories, Microsoft.DataFactory/factories/managedVirtualNetworks, Microsoft.DataFactory/factories/integrationRuntimes, Managed, ManagedVirtualNetworkReference, Microsoft.Authorization/locks, Microsoft.Insights/diagnosticSettings`\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group with Azure CLI\nDESCRIPTION: This command creates a new Azure Resource Group using Azure CLI. It requires specifying a name and location for the resource group.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.blockchain/blockchain-asaservice/GettingStarted-blockchain.md#2025-04-23_snippet_0\n\nLANGUAGE: Azure CLI\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources with Dynamic Key Vault Reference in JSON\nDESCRIPTION: This JSON snippet represents the tags section of an Azure Resource Manager template. It specifies the resources being deployed, which include Microsoft.Resources/deployments for nested templates and Microsoft.Sql/servers for SQL Server creation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.keyvault/key-vault-use-dynamic-id/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Resources/deployments, Microsoft.Sql/servers\"\n```\n\n----------------------------------------\n\nTITLE: SSH Connection to VM in Scale Set\nDESCRIPTION: Command to SSH into a VM in the scale set via the jumpbox. Requires finding the private IP address of the VM in resources.azure.com and being connected to the jumpbox first.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/vmss-linux-jumpbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nssh {username}@{vm-private-ip-address}\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Declaration in ARM Template\nDESCRIPTION: Resource tags declaration for Azure resources including Microsoft Storage, Compute, and Network components used in the DNS forwarder setup.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/dns-forwarder/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/StorageAccounts, Microsoft.Compute/availabilitySets, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Firewall Tags and Network Rules\nDESCRIPTION: Resource tags definition for Azure Firewall deployment, specifying Microsoft.Network/azureFirewalls permissions and Allow operations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azurefirewall-create-with-zones/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/azureFirewalls, Allow\n```\n\n----------------------------------------\n\nTITLE: Installing OMSDataInjection PowerShell Module on Hybrid Workers\nDESCRIPTION: This PowerShell command installs the required OMSDataInjection module on Hybrid Workers. This module is necessary for the Hyper-V Replica OMS Solution to function properly as it enables data injection into the OMS workspace.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/oms-hyperv-replica-solution/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nInstall-Module -Name OMSDataInjection\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Access for Jenkins Node\nDESCRIPTION: Series of commands to generate and configure SSH key pair for Jenkins master to communicate with worker nodes. Includes becoming root user, switching to Jenkins user, generating SSH keys, and copying them to the worker node.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cluster-2-linux-1-win/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Become ROOT user\n$ sudo -i\n# Become jenkins user\n$ su - jenkins\n## No password prompt\n# Generate SSH Key Pair\n$ ssh-keygen\n# PRESS ENTER at ALL PROMPTS\n# Now, Copy SSH key\n$ ssh-copy-id jenkins@10.0.1.11\nEnter Password: pass@12345\nAdd to Known Server: Yes\n## Now, test it..\n$ ssh -i .ssh/id_rsa jenkins@10.0.1.11\n## check if allowed to access node-1\n## Exit from node-1\n$ exit\n# Print Private key on screen\n$ cat .ssh/id_rsa.pub\n# Copy the content of\n## exit SSH Connection\n$ exit\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template Using Azure CLI Script - Bash\nDESCRIPTION: This Bash snippet shows how to deploy the Azure ARM template for the Data Factory pipeline using the 'azure-group-deploy.sh' shell script. Requirements include Azure CLI installed and necessary permissions to deploy resources. The script accepts '-a' for the artifact folder name and '-l' for the Azure region. Outputs deployment progress and completion, creating data factory resources according to the ARM template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-blob-to-sql-copy/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nazure-group-deploy.sh -a 101-data-factory-blob-to-sql-copy -l eastus\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resource Manager Template for Managed Identity Access to Azure Maps\nDESCRIPTION: This code snippet represents the deployment buttons for an Azure Resource Manager template. It allows users to deploy the template to create a Managed Identity with access to an Azure Maps account in Azure or Azure US Gov environments. The template also includes a visualize button for ARM template visualization.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.authorization/rbac-managedidentity-maps/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.authorization%2Frbac-managedidentity-maps%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.authorization%2Frbac-managedidentity-maps%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.authorization%2Frbac-managedidentity-maps%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resource Manager Template for AZ-400 Lab Environment\nDESCRIPTION: This code snippet provides deployment buttons for the Azure Resource Manager template. It includes options to deploy to Azure, Azure US Gov, and visualize the template using ARM Visualizer.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/visualstudio/az-400-dev-env/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy To Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fvisualstudio%2Faz-400-dev-env%2Fazuredeploy.json)\n[![Deploy To Azure US Gov](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazuregov.svg?sanitize=true)](https://portal.azure.us/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fvisualstudio%2Faz-400-dev-env%2Fazuredeploy.json)\n[![Visualize](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/visualizebutton.svg?sanitize=true)](http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fapplication-workloads%2Fvisualstudio%2Faz-400-dev-env%2Fazuredeploy.json)\n```\n\n----------------------------------------\n\nTITLE: Accepting Azure IoT Edge VM Image Terms - Azure CLI - Bash\nDESCRIPTION: Accepts the terms of use for the Microsoft-provided Ubuntu IoT Edge VM image, enabling its deployment through Azure CLI and ARM templates. Prerequisites: Azure CLI authenticated and sufficient permissions. No modifiable parameters unless changing the image's URN string.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.devices/iot-iothub-edgeemulator-vm/GettingStarted-Iot-EdgeEmulator.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz vm image accept-terms --urn microsoft_iot_edge:iot_edge_vm_ubuntu:ubuntu_1604_edgeruntimeonly:latest\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types for Event Hubs VNet Rule Template\nDESCRIPTION: Lists the Azure Resource Manager resource provider types associated with the Event Hubs namespace VNet rule template. These tags represent the primary resources deployed or configured by the template: Event Hubs namespaces, virtual networks, and the virtual network rules applied to the namespace.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.eventhub/eventhub-namespace-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.EventHub/namespaces, Microsoft.Network/virtualNetworks, Microsoft.EventHub/namespaces/VirtualNetworkRules`\n```\n\n----------------------------------------\n\nTITLE: Using Descriptive Keys for Configuration Lookup in Azure ARM Template (JSON)\nDESCRIPTION: This snippet demonstrates how to use descriptive keys for configuration lookup in an Azure Resource Manager template. It uses full text descriptions as keys to retrieve specific configuration elements from a variable.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/parameterized-linked-templates/detail/userfriendlyparameters.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"variables\": {\n    \"vmConfigurations\": {\n        \"2 Core, 8GB RAM, 16GB Temp Storage\": {\n            \"vmSize\": \"Standard_D2s_v3\",\n            \"dataDisks\": 1,\n            \"dataDiskSizeGB\": 128\n        },\n        \"4 Core, 16GB RAM, 32GB Temp Storage\": {\n            \"vmSize\": \"Standard_D4s_v3\",\n            \"dataDisks\": 2,\n            \"dataDiskSizeGB\": 256\n        },\n        \"8 Core, 32GB RAM, 64GB Temp Storage\": {\n            \"vmSize\": \"Standard_D8s_v3\",\n            \"dataDisks\": 4,\n            \"dataDiskSizeGB\": 512\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Manager Template Tags\nDESCRIPTION: Provides a list of tags summarizing the Azure resources and components (Data Factory, Linked Services, Datasets, Pipelines, Data Formats, Source Types, Translators) created or configured by the associated ARM/Bicep template for the Data Factory Copy Data Tool quickstart. These tags help categorize the template's purpose and the resources it manages.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-copy-data-tool/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.DataFactory/datafactories, linkedservices, AzureStorage, datasets, AzureBlob, string, TextFormat, datapipelines, Copy, BlobSource, TabularTranslator`\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Tags for HDInsight Template\nDESCRIPTION: Specifies the Azure resource tags associated with the resources deployed by the template. These tags categorize the resources, indicating the storage account SKU (Standard_LRS) and the relevant Azure resource providers involved (Microsoft.Storage/storageAccounts for the storage account and Microsoft.HDInsight/clusters for the HDInsight cluster).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-linux-ssh-password/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Standard_LRS, Microsoft.Storage/storageAccounts, Microsoft.HDInsight/clusters`\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration\nDESCRIPTION: Resource tags definition for the Azure deployment template, specifying the services and components used in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/visualstudio/vsts-tomcat-redhat-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Kubernetes Monitoring\nDESCRIPTION: Resource deployment template that sets up AKS, Prometheus, Grafana and required networking components. The template creates virtual networks, managed identities, private endpoints and configures necessary role assignments.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerservice/azure-kubernetes-monitoring-with-prometheus-and-grafana/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n`Tags: network, virtual network, subnet, role assignments, kubernetes cluster, user assigned identity, deployment script, private dns zone, private dns zone vnet links, private endpoint, private endpoint zone group, managed private endpoint, Microsoft.Network/virtualNetworks, Microsoft.Network/virtualNetworks/subnets, Microsoft.Authorization/roleAssignments, Microsoft.ContainerService/managedClusters, Microsoft.ManagedIdentity/userAssignedIdentities, Microsoft.Resources/deploymentScripts, Microsoft.Dashboard/grafana, Microsoft.Network/privateDnsZones, Microsoft.Network/privateDnsZones/virtualNetworkLinks, Microsoft.Network/privateEndpoints, Microsoft.Network/privateEndpoints/privateDnsZoneGroups, Microsoft.Dashboard/grafana/managedPrivateEndpoints`\n```\n\n----------------------------------------\n\nTITLE: Checking Master Status After Failover\nDESCRIPTION: MySQL command to check the master status, showing current binary log position and other replication-related information on the master server.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mysql/mysql-replication/README.md#2025-04-23_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nmysql> show master status\\G;\n```\n\n----------------------------------------\n\nTITLE: Configuring PowerShell Modules in JSON Format for VSTS Agent Installation\nDESCRIPTION: This JSON array specifies the PowerShell modules to be installed on the VM along with their versions. The modules include AzureRM, AzureAD, Bitbucket.v2, GetPassword, and posh-git, each with specific version numbers.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/visualstudio/vm-vsts-agent/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\"name\": \"AzureRM\", \"version\": \"5.6.0\"},\n  {\"name\": \"AzureAD\", \"version\": \"2.0.1.3\"},\n  {\"name\": \"Bitbucket.v2\", \"version\": \"1.1.2\"},\n  {\"name\": \"GetPassword\", \"version\": \"1.0.0.0\"},\n  {\"name\": \"posh-git\", \"version\": \"0.7.1\"}\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring WAF Client IP Policy Tag Reference\nDESCRIPTION: Resource tag definition for Microsoft Network Front Door WAF policies that handle client IP restrictions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-waf-clientip/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTags: Microsoft.Network/FrontDoorWebApplicationFirewallPolicies\n```\n\n----------------------------------------\n\nTITLE: Retrieving StoragePool Resource Provider Principal ID using PowerShell\nDESCRIPTION: Executes the Get-AzADServicePrincipal cmdlet in PowerShell to find the service principal associated with the 'StoragePool Resource Provider' within the Azure Active Directory tenant. The output 'ID' property represents the Principal ID, which is necessary for configuring the 'Disk Pool Operator' role assignment prerequisite for the Disk Pool deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storagepool/diskpool-create-entry-level/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nPS C:\\> Get-AzADServicePrincipal -DisplayName \"StoragePool Resource Provider\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Basic Azure Front Door with ARM Templates\nDESCRIPTION: Template tags and configuration for deploying a basic Azure Front Door setup with a single backend endpoint and default path matching of /*. The template includes Microsoft.Network/frontDoors as the primary resource type.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-create-basic/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`Tags: Microsoft.Network/frontDoors`\n```\n\n----------------------------------------\n\nTITLE: Azure API Management Multi-Region Configuration Tags\nDESCRIPTION: Metadata tags defining the template properties including deployment details and resource types.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.apimanagement/api-management-create-with-multiregion/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndescription: This template demonstrates how to create an API Management instance with additional locations. The primary location is the same as location of the resource group. For additional locations, the template shows NorthCentralUs and East US2. The primary location should be different from additional locations.\npage_type: sample\nproducts:\n- azure\n- azure-resource-manager\nurlFragment: api-management-create-with-multiregion\nlanguages:\n- bicep\n- json\n```\n\n----------------------------------------\n\nTITLE: ExpressRoute Circuit Resource Tag Definition\nDESCRIPTION: ARM template resource tag definition for ExpressRoute Circuit deployment, specifying the Microsoft.Network/expressRouteCircuits resource type.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/expressroute-circuit-public-private-peering/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/expressRouteCircuits\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Parameters for Azure Data Factory ARM Template in JSON\nDESCRIPTION: This JSON snippet defines the parameters required within the `azuredeploy.parameters.json` file to customize the Azure Data Factory ARM template deployment. It specifies connection details for the FTP source, Azure Storage account information (including resource group, name, key, container, and folder paths), Hive script location, and Azure SQL Database connection details (server, database, user credentials, and target table). These parameters are essential for configuring the linked services and activities within the Data Factory pipeline.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-ftp-hive-blob/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"ftpHost\": {\n\t      \t\t\"value\": \"<your FTP server name or IP address>\"\n    \t\t},\n\t    \t\"ftpUser\": {\n\t      \t\t\"value\": \"<FTP user name>\"\n    \t\t},\n\t    \t\"ftpPassword\": {\n\t      \t\t\"value\": \"<FTP password>\"\n\t    \t},\n\t    \t\"ftpFolderName\": {\n\t      \t\t\"value\": \"incomingfiles\"\n\t    \t},\n\t    \t\"ftpFileName\": {\n\t      \t\t\"value\": \"input.txt\"\n    \t\t},\n\t    \t\"storageAccountResourceGroupName\": {\n\t      \t\t\"value\": \"<Resource group of your Azure Storae account>\"\n\t    \t},\n\t    \t\"storageAccountName\": {\n\t      \t\t\"<Azure Storage account name>\": \"\"\n\t    \t},\n\t    \t\"storageAccountKey\": {\n\t      \t\t\"value\": \"<Azure Storage access key>\"\n\t    \t},\n\t    \t\"blobContainer\": {\n\t      \t\t\"value\": \"adftutorial\"\n\t    \t},\n\t    \t\"inputBlobFolder\": {\n\t      \t\t\"value\": \"inputdata\"\n\t    \t},\n\t    \t\"inputBlobName\": {\n\t    \t  \t\"value\": \"input.txt\"\n\t\t    },\n\t    \t\"outputBlobFolder\": {\n\t      \t\t\"value\": \"outputdata\"\n\t    \t},\n\t    \t\"hiveScriptFolder\": {\n\t      \t\t\"value\": \"script\"\n\t    \t},\n\t    \t\"hiveScriptFile\": {\n\t      \t\t\"value\": \"combinefirstandlast.hql\"\n\t    \t},\n    \t\t\"sqlServerName\": {\n\t      \t\t\"value\": \"<Name of Azure SQL server>\"\n\t    \t},\n\t    \t\"sqlDatabaseName\": {\n\t      \t\t\"value\": \"<Name of Azure SQL database>\"\n\t    \t},\n\t    \t\"sqlServerUserName\": {\n\t      \t\t\"value\": \"<Name of user who has access to the SQL server>\"\n\t    \t},\n\t    \t\"sqlServerPassword\": {\n\t      \t\t\"value\": \"<Password for Azuer SQL user>\"\n\t    \t},\n\t    \t\"targetSQLTable\": {\n\t      \t\t\"value\": \"Employees\"\n\t    \t}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources for Vert.x Environment using ARM Template\nDESCRIPTION: This ARM template deploys the necessary Azure resources for a Vert.x development environment. It includes storage accounts, network security groups, virtual networks, and a virtual machine with custom script extension for software installation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/apache/vertx-openjdk-apache-mysql-on-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\"Microsoft.Storage/storageAccounts\": \"\", \"Microsoft.Network/publicIPAddresses\": \"\", \"Microsoft.Network/networkSecurityGroups\": \"\", \"Microsoft.Network/virtualNetworks\": \"\", \"Microsoft.Network/networkInterfaces\": \"\", \"Microsoft.Compute/virtualMachines\": \"\", \"Microsoft.Compute/virtualMachines/extensions\": \"\", \"CustomScript\": \"\"}\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Tags for HDInsight Deployment\nDESCRIPTION: This JSON snippet defines the tags for the Azure resources created by this template. It specifies that Microsoft.Storage/storageAccounts and Microsoft.HDInsight/clusters resources will be deployed.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-linux-ssh-publickey/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Storage/storageAccounts, Microsoft.HDInsight/clusters\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Web App on Linux with PostgreSQL using ARM Template\nDESCRIPTION: This ARM template defines resources for deploying a Linux-based web app with an Azure Database for PostgreSQL. It includes parameters for customizing the deployment, such as app name, location, and database credentials. The template sets up a web app service plan, PostgreSQL server, firewall rules, and necessary configurations.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webapp-linux-managed-postgresql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\n  \"Microsoft.Web/sites\": \"PostgreSQL\",\n  \"Microsoft.Web/serverfarms\": \"\",\n  \"Microsoft.DBforPostgreSQL/servers\": \"\",\n  \"firewallrules\": \"\",\n  \"databases\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resource Group using PowerShell Script (PowerShell)\nDESCRIPTION: Demonstrates deploying the Azure Data Factory ARM template using the `Deploy-AzureResourceGroup.ps1` PowerShell script. This command requires specifying the desired Azure region for the resource group (`-ResourceGroupLocation`) and the directory containing the ARM template and parameter files (`-ArtifactStagingDirectory`).\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-blob-to-sql-copy-stored-proc/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n.\\Deploy-AzureResourceGroup.ps1 -ResourceGroupLocation 'eastus' -ArtifactStagingDirectory 101-data-factory-blob-to-sql-copy-stored-proc\n```\n\n----------------------------------------\n\nTITLE: Azure Login via CLI\nDESCRIPTION: Command to log into Azure using the Azure CLI. This is the first step in deploying resources to Azure via the command line.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/tomcat/openjdk-tomcat-ubuntu-vm/gettingstarted.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Resources with ARM Template\nDESCRIPTION: This ARM template snippet shows the deployment of various Azure resources including Storage Account, Front Door Premium, and associated configurations. It uses parameters for customization and outputs key information.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-premium-storage-blobs-private-link/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Resources/deployments, Microsoft.Storage/storageAccounts, Microsoft.Storage/storageAccounts/blobServices/containers, Microsoft.Cdn/profiles, Microsoft.Cdn/profiles/afdEndpoints, Microsoft.Cdn/profiles/originGroups, Microsoft.Cdn/profiles/originGroups/origins, Microsoft.Cdn/profiles/afdEndpoints/routes\"\n```\n\n----------------------------------------\n\nTITLE: Logging into Azure Account using PowerShell\nDESCRIPTION: This PowerShell command authenticates the user to their Azure account using the Azure Resource Manager (AzureRM) module. This is a prerequisite step before executing subsequent commands that interact with Azure resources, such as running or monitoring the deployed Data Factory pipeline.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-v2-blob-to-mysql-copy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nLogin-AzureRmAccount\n```\n\n----------------------------------------\n\nTITLE: Getting Azure Subscription IDs with Azure CLI\nDESCRIPTION: This command lists all available Azure subscriptions with their names and IDs in a tab-separated format using the Azure CLI.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.machinelearningservices/machine-learning-workspace-cmk-service-side-encryption/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz account list --query '[].[name,id]' --output tsv\n```\n\n----------------------------------------\n\nTITLE: ARM Template Tag Definition for Azure Logic App with ServiceNow Integration\nDESCRIPTION: This code snippet defines the ARM template tags used to identify the resources being deployed. It specifies Microsoft.Logic/workflows as the primary resource type with additional tags for the operations involved in the integration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/identitygovernance-entitlementmanagement-extensibility-servicenow-sample-logicapp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Logic/workflows, Request, object, string, If, AAD`\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Subscription Setting\nDESCRIPTION: Command to set the correct Azure subscription for deployment\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cognitiveservices/cognitive-services-translate/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz account set --subscription \"your subscription id\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Front Door Standard/Premium with ARM Template\nDESCRIPTION: This ARM template deploys a Front Door profile with standard or premium SKU, an endpoint, origin group, origin, and route. It's configured to direct traffic to an Azure Storage static website origin.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Cdn/profiles, Microsoft.Cdn/profiles/afdEndpoints, Microsoft.Cdn/profiles/originGroups, Microsoft.Cdn/profiles/originGroups/origins, Microsoft.Cdn/profiles/afdEndpoints/routes\"\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Service Principal Manually - Step 1\nDESCRIPTION: First step in manually creating an Azure Service Principal with Contributor role, scoped to the specific resource group created for the cluster. This command returns JSON with credentials that should be saved.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ibm-cloud-pak/ibm-cloud-pak-for-data/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz login\naz ad sp create-for-rbac --role=\"Contributor\" --scopes=\"/subscriptions/<subscription_id>/resourceGroups/<cluster_rg>\"\n```\n\n----------------------------------------\n\nTITLE: Notable Parameters Configuration\nDESCRIPTION: Table defining key configuration parameters for SQL Server Auto Backup setup including retention period, storage account, and encryption settings.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-sql-full-autobackup/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|Name|Description|Example|\n|:---|:---------------------|:---------------|\n|sqlAutobackupRetentionPeriod|Backup retention period in days, 1-30 days|20|\n|sqlAutobackupStorageAccountName|What storage account to use for backups|myExistingBackupStoragAccountName|\n|sqlAutobackupEncryptionPassword|a password which will be used to protect the encryption certificates used for encrypting and decrypting your backups|Password123|\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Declaration\nDESCRIPTION: Resource tags definition for Azure Firewall Manager components and associated resources. These tags help with resource organization and management.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/fwm-docs-qs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Azure Firewall Manager, Microsoft.Network/virtualWans, Standard, Microsoft.Network/virtualHubs, Microsoft.Network/virtualHubs/hubVirtualNetworkConnections, Microsoft.Network/firewallPolicies, Microsoft.Network/firewallPolicies/ruleCollectionGroups, Allow, Microsoft.Network/azureFirewalls, Microsoft.Network/virtualNetworks, Microsoft.Network/virtualNetworks/subnets, Microsoft.Compute/virtualMachines, Microsoft.Network/networkInterfaces, Microsoft.Network/networkSecurityGroups, Microsoft.Network/publicIPAddresses, Microsoft.Network/routeTables, Microsoft.Network/virtualHubs/hubRouteTables\n```\n\n----------------------------------------\n\nTITLE: Installing Helm charts on AKS using Run Command\nDESCRIPTION: This Bash command shows how to install a Helm chart on a private AKS cluster by using the az aks command invoke feature with a custom values file for configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/private-aks-cluster-with-public-dns-zone/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz aks command invoke -g <resourceGroup> -n <clusterName> \\\n-c \"helm repo add bitnami https://charts.bitnami.com/bitnami && helm repo update && helm install my-release -f values.yaml bitnami/nginx\" \\\n-f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Sending POST Request to Create ARM Template Validator Key\nDESCRIPTION: This curl command sends a POST request to an endpoint with a JSON payload to create or update a validator key. The command includes the key name 'validatorkey' but seems to be incomplete as the keyValue is empty.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/datameer-trend-chef-riskanalysis/files/validatorkey.txt#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"Content-Type: application/json\" -X POST -d '{\"keyName\": \"validatorkey\", \"keyValue\": \"'\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Manager Tags Configuration\nDESCRIPTION: Resource tags configuration for Azure deployment template, specifying the resources and extensions used in the template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/customscript-extension-public-storage-on-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Setting up SSH Tunnel for Jenkins\nDESCRIPTION: This snippet demonstrates how to set up an SSH tunnel to securely access the Jenkins console. It uses the ssh command to forward the local port 8080 to the Jenkins server.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-vmss/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nssh -L 127.0.0.1:8080:localhost:8080 username@msvmsstest004.eastus.cloudapp.azure.com\n```\n\n----------------------------------------\n\nTITLE: Defining Backend Address Pools for Application Gateway in Azure ARM Template\nDESCRIPTION: This JSON snippet defines the backend address pools for an Application Gateway in an Azure Resource Manager template. The properties are left empty as they are not writable at creation time.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/parameterized-linked-templates/detail/agtemplate.md#2025-04-23_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n\"backendAddressPools\": [\n  {\n    \"name\": \"appGatewayBackendPool\",\n    \"properties\": {}\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Registering the Resource Provider for AADDS\nDESCRIPTION: Connects to Azure Resource Manager and registers the Microsoft.AAD resource provider, which is required before you can deploy Azure AD Domain Services.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/aad-domainservices/README.md#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n# Login to Azure Account\nConnect-AzureRmAccount -TenantId <Active Directory ID>\n# Register the resource provider for Azure AD Domain Services with Resource Manager.\nRegister-AzureRmResourceProvider -ProviderNamespace Microsoft.AAD\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags for Orchard CMS Video Portal Deployment\nDESCRIPTION: This JSON snippet defines the tags associated with the Azure resources deployed for the Orchard CMS video portal. It specifies the types of services used including media services, storage account, SQL database, and web app, as well as identifying it as an Orchard CMS video portal deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/orchard/orchard-cms-video-portal/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: media-services, storage-account, sql-database, web-app, cms, orchard, video-portal, Microsoft.Sql/servers, databases, firewallrules, Microsoft.Web/serverfarms, Microsoft.Media/mediaServices, Microsoft.Storage/storageAccounts, Microsoft.Web/Sites, Extensions, config, SQLAzure\"\n```\n\n----------------------------------------\n\nTITLE: Checking MySQL Data Replication\nDESCRIPTION: These MySQL commands are used to verify data replication on the MySQL slave. They connect to the database, select a test database, and query a table to confirm replication is working.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/website-cluster-centos/README.md#2025-04-23_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n$mysql -uroot -p<mysqlpassword>\\n\\nuse testdb;\\n\\nselect * from test01;\n```\n\n----------------------------------------\n\nTITLE: Querying Web App Traffic Metrics in Log Analytics\nDESCRIPTION: This Log Analytics query retrieves traffic metrics (bytes sent and received) for Azure Web Apps, aggregating total values hourly for each resource.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webappazure-oms-monitoring/README.md#2025-04-23_snippet_2\n\nLANGUAGE: kusto\nCODE:\n```\nAzureMetrics | where ResourceId == \"/MICROSOFT.WEB/SITES/\" and (MetricName == \"BytesSent\" or MetricName == \"BytesReceived\") | summarize AggregatedValue = sum(Average) by Resource, bin(TimeGenerated, 1h)\n```\n\n----------------------------------------\n\nTITLE: Incorrect Endpoint Usage in JSON\nDESCRIPTION: Shows an anti-pattern to avoid when referencing service endpoints in JSON. Concatenating fixed domain names should be replaced with environment() function calls or parameters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n\"hostNames\": [\n  \"[concat(parameters('webjobName'),'.azurewebsites.net')]\"\n],\n```\n\n----------------------------------------\n\nTITLE: Resource Tags Definition in Azure ARM Template\nDESCRIPTION: Defines the Azure resource tags for the deployment template, specifying resource types used in the solution including storage accounts, networking components, and container instances.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/wordpress/aci-wordpress-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Azure Container Instance, WordPress, Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkProfiles, Microsoft.ContainerInstance/containerGroups, Microsoft.Network/applicationGateways\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags definition specifying the Microsoft Azure components and extensions used in the template, including compute, networking, monitoring and security components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/dosyago/browserbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Authorization/roleAssignments, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, Microsoft.Insights/components, Microsoft.Insights/actionGroups, Microsoft.Insights/metricAlerts, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.OperationalInsights/workspaces, CustomScriptExtension\n```\n\n----------------------------------------\n\nTITLE: Compiling Solidity Contract in Geth Console\nDESCRIPTION: This snippet demonstrates how to compile a Solidity smart contract using the web3.eth.compile.solidity function in the Geth JavaScript console. The compiled output includes the EVM bytecode and ABI definition.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar guestBookCompiled = web3.eth.compile.solidity(guestBookSource);\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Configuration for Open edX Deployment\nDESCRIPTION: Azure resource tags used to categorize and identify the template's resource deployments. These tags specify the Microsoft Azure services and components used in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/opendx/openedx-devstack-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkSecurityGroups, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, CustomScript\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tagging metadata showing the technologies and services involved in the deployment template. These tags help with resource organization and identification in Azure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.appplatform/microservice-apps-enterprise-plan/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAzure Spring Apps, Spring Boot, microservice, application, Microsoft.AppPlatform/Spring, apps, deployments, Jar, Microsoft.Resources/deployments, Microsoft.AppPlatform/Spring/apps\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags for the Azure Front Door deployment template, specifying the Microsoft.Cdn namespace components used in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cdn/front-door-standard-premium-rule-set/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Cdn/profiles, Microsoft.Cdn/profiles/afdEndpoints, Microsoft.Cdn/profiles/originGroups, Microsoft.Cdn/profiles/originGroups/origins, Microsoft.Cdn/profiles/ruleSets, Microsoft.Cdn/profiles/ruleSets/rules, Microsoft.Cdn/profiles/afdEndpoints/routes\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Configuration\nDESCRIPTION: Product and service dependencies required for the FinOps hub deployment including Azure storage, cost management, data services and key vault.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.costmanagement/finops-hub/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nproducts:\n- azure\n- azure-blob-storage\n- azure-cost-management\n- azure-data-explorer\n- azure-data-factory\n- azure-data-lake\n- azure-key-vault\n- azure-resource-manager\n- azure-storage-accounts\n```\n\n----------------------------------------\n\nTITLE: Creating Contract Initializer in Geth Console\nDESCRIPTION: This code creates an initializer object for the contract deployment. It specifies the address sending the contract, the compiled contract code, and the initial gas allocation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ethereum/go-ethereum-on-ubuntu/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar initializer =  {from:web3.eth.accounts[0], data: guestBookCompiled.GuestBook.code, gas: 300000}\n```\n\n----------------------------------------\n\nTITLE: Defining Location Parameter in Bicep\nDESCRIPTION: Shows the recommended pattern for defining a location parameter in Bicep. Uses resourceGroup().location as the default value while still allowing the location to be overridden.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_11\n\nLANGUAGE: bicep\nCODE:\n```\n@description('Location for all resources')\nparam location string = resourceGroup().location\n```\n\n----------------------------------------\n\nTITLE: Querying MongoDB Primary Node Status\nDESCRIPTION: Commands to verify the replica set status by connecting to the primary node using MongoDB shell. Requires MongoDB user credentials for authentication to admin database.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mongo/mongodb-replica-set-centos/README.md#2025-04-23_snippet_0\n\nLANGUAGE: mongodb\nCODE:\n```\n$mongo -u \"<mongouser>\" -p \"<mongopassword>\" \"admin\"\n\nrs.status()\n\nexit\n```\n\n----------------------------------------\n\nTITLE: Retrieving Jenkins Initial Admin Password\nDESCRIPTION: This command retrieves the initial admin password for Jenkins. It needs to be run on the Jenkins VM after connecting via SSH.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jenkins/jenkins-cicd-vmss/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nsudo cat /var/lib/jenkins/secrets/initialAdminPassword\n```\n\n----------------------------------------\n\nTITLE: WAF Policy Definition for Azure Front Door\nDESCRIPTION: ARM template tag definition showing the Microsoft.Network resource provider and WAF policy resource type used in the template. This indicates the template creates WAF policy resources for Front Door.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/front-door-managed-waf-ruleset/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTags: Microsoft.Network/FrontDoorWebApplicationFirewallPolicies\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Manager Template for Kibana and Elasticsearch Deployment\nDESCRIPTION: This JSON snippet represents the Azure Resource Manager template for deploying the Kibana dashboard with Docker. It includes definitions for storage accounts, network resources, virtual machines, and Docker extensions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/elk/docker-kibana-elasticsearch/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"tags\": {\n  \"Microsoft.Storage/storageAccounts\": \"\",\n  \"Microsoft.Network/publicIPAddresses\": \"\",\n  \"Microsoft.Network/virtualNetworks\": \"\",\n  \"Microsoft.Network/networkInterfaces\": \"\",\n  \"Microsoft.Network/networkSecurityGroups\": \"\",\n  \"Microsoft.Compute/virtualMachines\": \"\",\n  \"Microsoft.Compute/virtualMachines/extensions\": \"\",\n  \"DockerExtension\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting to Backend Chef Nodes via SSH Proxy\nDESCRIPTION: SSH command using ProxyCommand to connect to backend nodes through the frontend node as a proxy.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/chef/chef-ha-cluster/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nssh -o ProxyCommand=\"ssh -W %h:%p -p 50000 -q chefadmin@yourhost.youregion.cloudapp.azure.com\" chefadmin@be0\n```\n\n----------------------------------------\n\nTITLE: Tags Declaration for Azure Resources\nDESCRIPTION: Resource tags defining the Microsoft Azure resources used in the template including networking, compute, and application gateway components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-ubuntu-app-gateway/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/applicationGateways, Microsoft.Compute/virtualMachineScaleSets\n```\n\n----------------------------------------\n\nTITLE: Querying App Service Plan Memory Utilization in Log Analytics\nDESCRIPTION: This Log Analytics query retrieves the average memory utilization percentage for Azure App Service Plans.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/webappazure-oms-monitoring/README.md#2025-04-23_snippet_4\n\nLANGUAGE: kusto\nCODE:\n```\nAzureMetrics | where ResourceId == \"/MICROSOFT.WEB/SERVERFARMS/\" and MetricName == \"MemoryPercentage\" | summarize AggregatedValue = avg(Average) by Resource\n```\n\n----------------------------------------\n\nTITLE: Creating a PostgreSQL Database in Ubuntu VM\nDESCRIPTION: Commands to create a new PostgreSQL database named 'events' after deployment. This snippet shows how to use the postgres user to create and access the database.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/postgre/postgresql-standalone-server-ubuntu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$sudo su - postgres\n$createdb events\n$psql -d events\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Resource Group Creation\nDESCRIPTION: Command to create a new Azure resource group with specified name and location parameters\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/visualstudio/ubuntu-mate-desktop-vscode/GettingStarted.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types Deployed by the Template (ARM)\nDESCRIPTION: This snippet lists the specific Azure resource types that will be created or managed by the associated ARM/Bicep template. It identifies the Public IP Address, NAT Gateway, Virtual Network, and Network Security Group resources involved in the deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.databricks/databricks-vnet-for-vnet-injection-with-nat-gateway/README.md#2025-04-23_snippet_0\n\nLANGUAGE: arm\nCODE:\n```\n`Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/natGateways, Microsoft.Network/virtualNetworks, Microsoft.Network/networkSecurityGroups`\n```\n\n----------------------------------------\n\nTITLE: Documentation Link for Azure Resource Manager Templates\nDESCRIPTION: A markdown hyperlink to the official Azure Resource Manager templates documentation, providing users with further information on using these QuickStart templates.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[here](https://docs.microsoft.com/azure/azure-resource-manager/templates)\n```\n\n----------------------------------------\n\nTITLE: List Azure Locations Command\nDESCRIPTION: Azure CLI command to list all available Azure regions/locations where resources can be deployed.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/web-app-python/gettingstarted.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz account list-locations\n```\n\n----------------------------------------\n\nTITLE: Setting up S2DMon Service for S2D Cluster Monitoring\nDESCRIPTION: Installs the S2DMon service on a Storage Spaces Direct node using credentials for the OMS workspace. This configures the service to collect and send cluster metrics to Azure Log Analytics.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/s2d-oms-mgmt-solution/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nC:\\temp\\s2dmon.ps1 -Setup -OMSWorkspaceCreds (Get-Credential)\n```\n\n----------------------------------------\n\nTITLE: Verifying vSensor Configuration and Health in Ubuntu\nDESCRIPTION: Command to access the configuration console of a Darktrace vSensor after deployment to verify its configuration and health. This tool provides a menu-driven interface for managing various aspects of the vSensor.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/darktrace/darktrace-vsensor-standalone/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo confconsole\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Health Data Services De-identification Service (ARM)\nDESCRIPTION: This ARM template snippet deploys an Azure Health Data Services de-identification service. It uses the Microsoft.HealthDataAIServices/deidServices resource type to create the service.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.healthdataaiservices/deidentification-service-create/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.HealthDataAIServices/deidServices\"\n```\n\n----------------------------------------\n\nTITLE: Defining Microsoft.Subscription/aliases Resource in Azure ARM Template\nDESCRIPTION: This code snippet defines a Microsoft.Subscription/aliases resource in an Azure Resource Manager template. It creates a new subscription with specified properties such as display name, billing scope, and workload type.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/managementgroup-deployments/create-subscription/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"resources\": [\n  {\n    \"scope\": \"/\",\n    \"type\": \"Microsoft.Subscription/aliases\",\n    \"apiVersion\": \"2020-09-01\",\n    \"name\": \"[parameters('subscriptionAliasName')]\",\n    \"properties\": {\n      \"workload\": \"[parameters('workload')]\",\n      \"displayName\": \"[parameters('subscriptionDisplayName')]\",\n      \"billingScope\": \"[parameters('billingScope')]\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Group Creation\nDESCRIPTION: Command to create a new resource group in Azure with specified name and location parameters.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.cognitiveservices/cognitive-services-universalkey/GettingStarted.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name \"resource-group\" --location \"your location\"\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Tags for HBase Replication Template\nDESCRIPTION: This line lists the Azure resource provider tags associated with the ARM template. These tags categorize the template based on the primary Azure services it deploys: Standard Locally Redundant Storage (Standard_LRS), Azure Virtual Networks (Microsoft.Network/virtualNetworks), Azure Storage Accounts (Microsoft.Storage/storageAccounts), and Azure HDInsight clusters (Microsoft.HDInsight/clusters). These tags are used for discovery and classification within Azure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.hdinsight/hdinsight-hbase-replication-one-vnet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Standard_LRS, Microsoft.Network/virtualNetworks, Microsoft.Storage/storageAccounts, Microsoft.HDInsight/clusters`\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Container Registry Deployment Status Badges in Markdown\nDESCRIPTION: This code snippet shows how to embed Azure deployment status badges in a Markdown file. It includes badges for public and US government deployments, best practices, credential scanning, and Bicep version.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/test/ci-tests/data/fix-readme-tests/README.badlinks.expected.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Azure Public Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/PublicLastTestDate.svg)\n![Azure Public Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/PublicDeployment.svg)\n\n![Azure US Gov Last Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/FairfaxLastTestDate.svg)\n![Azure US Gov Last Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/FairfaxDeployment.svg)\n\n![Best Practice Check](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/BestPracticeResult.svg)\n![Cred Scan Check](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/CredScanResult.svg)\n\n![Bicep Version](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/BicepVersion.svg)\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template to Azure Resource Group using Azure CLI - Bash\nDESCRIPTION: This command deploys an ARM template to an Azure Resource Group. Replace \\\"name of your deployment\\\", \\\"resource-group\\\", and \\\"./azuredeploy.json\\\" as required. The command assumes the ARM template file is present locally and deploys resources as defined within, such as the Function App and hosting plan.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/app-function/GettingStarted-FuncApp.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz group deployment create --name \"name of your deployment\" --resource-group \"resource-group\" --template-file \"./azuredeploy.json\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Remote Repositories\nDESCRIPTION: Command to list all remote repositories registered in a local Git repository, showing the fetch and push URLs for each remote.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit remote -v\n```\n\n----------------------------------------\n\nTITLE: Deploying SQL MI Template using PowerShell\nDESCRIPTION: This PowerShell script automates the deployment of the Azure SQL MI with Point-to-Site VPN template. It defines necessary parameters such as subscription ID, resource group name, location, virtual network name, managed instance name, administrator credentials, and certificate name prefix. It then downloads and executes a remote deployment script (`deploy.ps1`) using `Invoke-Command`, passing the defined parameters and the base URL for the script.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.sql/sqlmi-new-vnet-w-point-to-site-vpn/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n```powershell\n\n$scriptUrlBase = 'https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-sqlmi-new-vnet-w-point-to-site-vpn'\n\n$parameters = @{\n    subscriptionId = '<subscriptionId>'\n    resourceGroupName = '<resourceGroupName>'\n    location = '<location>'\n    virtualNetworkName = '<virtualNetworkName>'\n    managedInstanceName = '<managedInstanceName>'\n    administratorLogin = '<login>'\n    administratorLoginPassword = '<password>'\n    certificateNamePrefix = '<certificateNamePrefix>'\n    }\n\nInvoke-Command -ScriptBlock ([Scriptblock]::Create((New-Object System.Net.WebClient).DownloadString($scriptUrlBase+'/scripts/deploy.ps1'))) -ArgumentList $parameters, $scriptUrlBase\n\n```\n```\n\n----------------------------------------\n\nTITLE: Cloning Quickstart Template Repository using Git in PowerShell\nDESCRIPTION: This PowerShell snippet uses git to clone the Azure quickstart template repository that contains the ARM template for automating VM Scale Set and DSC registration. Dependencies include having Git installed and available in the command-line environment. The input to the command is the repository URL, and the expected output is a local copy of the module in the current working directory for further use, customization, or deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vmss-automation-dsc/README.md#2025-04-23_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\ngit clone https://github.com/Azure/azure-quickstart-templates/blob/master/201-vmss-automation-dsc\n```\n\n----------------------------------------\n\nTITLE: Artifacts Parameters Definition in JSON\nDESCRIPTION: Shows how to define parameters for deployment artifacts in JSON. These parameters handle the location and access token for resources like scripts and nested templates needed during deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md#2025-04-23_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n\"parameters\": {\n    \"_artifactsLocation\": {\n        \"type\": \"string\",\n        \"metadata\": {\n            \"description\": \"The base URI where artifacts required by this template are located including a trailing '/'\"\n        },\n        \"defaultValue\": \"[deployment().properties.templateLink.uri]\"\n    },\n    \"_artifactsLocationSasToken\": {\n        \"type\": \"securestring\",\n        \"metadata\": {\n            \"description\": \"The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured.\"\n        },\n        \"defaultValue\": \"\"\n    }\n},\n```\n\n----------------------------------------\n\nTITLE: Deploying Recovery Services Vault Resource - Azure Bicep Template - Bicep\nDESCRIPTION: This code snippet illustrates a Bicep template resource declaration for provisioning an Azure Recovery Services Vault with default properties. It simplifies the deployment process using Bicep syntax. Prerequisites include the Azure CLI and Bicep tooling. Required parameters are the vault name and location. The resource declaration yields a Recovery Services Vault environment for subsequent backup or site recovery configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-vault-basic/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam vaultName string = 'myRecoveryVault'\nparam location string = resourceGroup().location\n\nresource vault 'Microsoft.RecoveryServices/vaults@2021-08-01' = {\n  name: vaultName\n  location: location\n  properties: {}\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Service Bus Namespace and Topic - ARM Template - JSON\nDESCRIPTION: This snippet represents an Azure Resource Manager (ARM) template written in JSON that provisions a Service Bus Namespace and a Topic. The template requires Azure Resource Manager as a dependency and is typically deployed through the Azure Portal or CLI. Key input parameters may include location, namespace name, and topic name; it outputs Azure Service Bus messaging resources ready for configuration or integration with applications. All resources are tagged with 'Microsoft.ServiceBus/namespaces, topics', and the template can be visualized or deployed directly to Azure.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.servicebus/servicebus-topic/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  // ARM template code would be here, typically in a file like azuredeploy.json\n  // Example resources: Service Bus Namespace, Topic\n  // Resources array, parameters section, outputs, and metadata sections would be included\n}\n\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Manager Template Parameters for AD Domain Controller\nDESCRIPTION: This JSON snippet defines the parameters for an Azure Resource Manager template that creates an Active Directory Domain Controller. It includes parameters for admin credentials, domain name, VM size, and network settings.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/modules/active-directory-new-domain/0.9/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"parameters\": {\n  \"adminUsername\": {\n    \"type\": \"string\",\n    \"metadata\": {\n      \"description\": \"The name of the administrator account of the new VM and domain.\"\n    }\n  },\n  \"adminPassword\": {\n    \"type\": \"securestring\",\n    \"metadata\": {\n      \"description\": \"The password for the administrator account of the new VM and domain.\"\n    }\n  },\n  \"domainName\": {\n    \"type\": \"string\",\n    \"metadata\": {\n      \"description\": \"The FQDN of the Active Directory Domain to be created.\"\n    }\n  },\n  \"dnsPrefix\": {\n    \"type\": \"string\",\n    \"metadata\": {\n      \"description\": \"The DNS prefix for the public IP address used by the Load Balancer.\"\n    }\n  },\n  \"vmSize\": {\n    \"type\": \"string\",\n    \"metadata\": {\n      \"description\": \"Size of the VM for the controller.\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Resource Types Deployed by the Template\nDESCRIPTION: This line lists the specific Azure resource types managed and deployed by the associated ARM template. It identifies the core network components: Public IP Addresses, Virtual Networks, Network Interfaces, and Load Balancers.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/loadbalancer-with-multivip/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Network/loadBalancers`\n```\n\n----------------------------------------\n\nTITLE: Constructing Linked Template URI in ARM Template (JSON)\nDESCRIPTION: This JSON snippet shows how to define a variable `_deploymentLink` storing the base deployment URI and then use the `uri()` function to construct the full URI for a linked template. It combines the base URI (from the variable) with the relative path to the linked template ('linkedtemplates/storageAccountdeploy.json') stored within the application package. This allows the main template to reference and deploy the linked template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.solutions/managed-application-with-linked-templates/README.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n    \"variables\": {\n        \"_deploymentLink\": \"[deployment().properties.templateLink.uri]\"\n    },\n    .\n    .\n    .\n    \"templateLink\": {\n        \"uri\" : \"[uri(variables('_deploymentLink'), 'linkedtemplates/storageAccountdeploy.json')]\",\n        \"contentVersion\":\"1.0.0.0\"\n    },\n```\n\n----------------------------------------\n\nTITLE: Tag Definitions for Azure Resources\nDESCRIPTION: Resource tags defining the Azure components and services used in the template deployment including storage, networking, compute, and monitoring extensions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/oms-extension-ubuntu-vm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Compute/virtualMachines/extensions, OmsAgentForLinux, Microsoft.OperationalInsights/workspaces\n```\n\n----------------------------------------\n\nTITLE: Describing Kafka Topic\nDESCRIPTION: Kafka command to view details of a created topic. This command connects to the Zookeeper node to retrieve topic information.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/kafka/kafka-ubuntu-multidisks/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbin/kafka-topics.sh --describe --zookeeper 10.0.1.10:2181  --topic my-replicated-topic1\n```\n\n----------------------------------------\n\nTITLE: Testing MongoDB Data Replication\nDESCRIPTION: Commands to test data replication by inserting and querying data on the primary node. Creates a test collection and inserts a sample document.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/mongo/mongodb-replica-set-centos/README.md#2025-04-23_snippet_1\n\nLANGUAGE: mongodb\nCODE:\n```\n$mongo -u \"<mongouser>\" -p \"<mongopassword>\" \"admin\"\n\nuse test\n\ndb.mycol.insert({\"title\":\"MongoDB Overview\"})\n\ndb.mycol.find()\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group for OpenShift Cluster\nDESCRIPTION: Azure CLI command to create a resource group that will host the OpenShift cluster deployment. This resource group name will be used for the 'clusterResourceGroupName' variable in the deployment template.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/ibm-cloud-pak/ibm-cloud-pak-for-data/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name ClusterRG --location westus2\n```\n\n----------------------------------------\n\nTITLE: Deploying Windows VM and Backup with ARM Templates in JSON\nDESCRIPTION: This snippet represents an ARM template in JSON format that provisions a Windows virtual machine, Recovery Services Vault, and configures VM backup according to the DefaultPolicy. To use, dependencies include Azure Resource Manager and supported Azure subscriptions with permissions to create resources such as Microsoft.Storage/storageAccounts, Microsoft.Network/publicIPAddresses, and Microsoft.RecoveryServices/vaults. Parameters include resource names, regions, and policy details; outputs are the created resources ready for use within Azure. Limitations are dependent on resource quotas and available regions.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.recoveryservices/recovery-services-create-vm-and-configure-backup/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"// ARM template JSON defining Azure resources including:\\n// - Microsoft.Storage/storageAccounts\\n// - Microsoft.Network/publicIPAddresses\\n// - Microsoft.Network/networkSecurityGroups\\n// - Microsoft.Network/virtualNetworks\\n// - Microsoft.Network/networkInterfaces\\n// - Microsoft.Compute/virtualMachines\\n// - Microsoft.RecoveryServices/vaults\\n// - Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems\\n\"\n```\n\n----------------------------------------\n\nTITLE: Identifying Azure Resource Type Tag for Service Bus Namespace\nDESCRIPTION: This tag indicates the primary Azure resource type managed by the associated ARM template. It specifies `Microsoft.ServiceBus/namespaces`, signifying that the template deploys an Azure Service Bus namespace. This tag is often used for categorization and resource identification.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.servicebus/servicebus-create-namespace/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`Tags: Microsoft.ServiceBus/namespaces`\n```\n\n----------------------------------------\n\nTITLE: Powershell Commands for Role Management\nDESCRIPTION: PowerShell commands to retrieve Role ID and Principal ID for Azure AD configuration.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/sap/sap-ilm-store/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n(Get-AzRoleDefinition -Name \"role-name\").Id\n(Get-AzADServicePrincipal -DisplayName \"name-of-service-principal\").Id\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Command for RHEL BYOS Terms Acceptance\nDESCRIPTION: Command to accept Azure Marketplace terms for RHEL 8.6 BYOS image using Azure CLI.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-clustered-multivm-rhel/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz vm image terms accept --publisher redhat --offer rhel-byos --plan rhel-lvm86\n```\n\n----------------------------------------\n\nTITLE: Querying Image Build Status in PowerShell\nDESCRIPTION: This PowerShell command retrieves the status of the image build process in Azure Image Gallery. It can be used to monitor the progress of the image creation.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/imagebuilder-windowsbaseline/README.md#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzGalleryImageVersion -ResourceGroupName '<myResourceGroup>' -GalleryName '<myGalleryName>' -GalleryImageDefinitionName 'Win2019_BaselineDefinition'\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Container Registry Deployment Badges in Markdown\nDESCRIPTION: This code snippet shows how to include various Azure deployment and test badges in a markdown file. It uses image links to display the status of public and US Gov deployments, best practices, credential scanning, and Bicep version.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/test/ci-tests/data/fix-readme-tests/README.nobicep.expected.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Azure Public Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/PublicLastTestDate.svg)\n![Azure Public Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/PublicDeployment.svg)\n\n![Azure US Gov Last Test Date](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/FairfaxLastTestDate.svg)\n![Azure US Gov Last Test Result](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/FairfaxDeployment.svg)\n\n![Best Practice Check](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/BestPracticeResult.svg)\n![Cred Scan Check](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/CredScanResult.svg)\n\n![Bicep Version](https://azurequickstartsservice.blob.core.windows.net/badges/quickstarts/microsoft.containerregistry/container-registry/BicepVersion.svg)\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags definition specifying the Microsoft.ContainerInstance/containerGroups resource type and Public access type for Azure Container Instances deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.containerinstance/aci-linuxcontainer-volume-emptydir/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTags: Microsoft.ContainerInstance/containerGroups, Public\n```\n\n----------------------------------------\n\nTITLE: Verifying MySQL Connection in PHP\nDESCRIPTION: This PHP code snippet is used to verify the connection to the MySQL database after deployment. It demonstrates how to access the database through the load balancer's public IP.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/website-cluster-centos/README.md#2025-04-23_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhttp://your load balancer public ip/mysql.php\n```\n\n----------------------------------------\n\nTITLE: Azure Resource Tags Definition\nDESCRIPTION: Resource tags definition for Azure deployment template specifying Microsoft resources including storage, networking, compute and firewall components.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/azurefirewall-with-firewallpolicy-sandbox-linux/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.Storage/storageAccounts, Microsoft.Network/routeTables, Microsoft.Network/networkSecurityGroups, Microsoft.Network/virtualNetworks, Microsoft.Network/publicIPAddresses, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines, Microsoft.Network/firewallPolicies, ruleGroups, Allow, Microsoft.Network/azureFirewalls\n```\n\n----------------------------------------\n\nTITLE: Deploying Storage Spaces Direct Cluster using Azure CLI\nDESCRIPTION: This bash command deploys the Azure Resource Group for the Storage Spaces Direct cluster using the Azure CLI. It specifies the artifact directory and location.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/demos/storage-spaces-direct/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nazure-group-deploy.sh -a [foldername] -l eastus -u\n```\n\n----------------------------------------\n\nTITLE: Pushing a New Branch to GitHub Fork\nDESCRIPTION: Commands to checkout a branch and push it to a remote repository named 'origin' (your fork), setting up tracking with the -u flag.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout NAME_OF_YOUR_BRANCH\ngit push -u origin NAME_OF_YOUR_BRANCH\n```\n\n----------------------------------------\n\nTITLE: Viewing JBoss EAP Installation Logs\nDESCRIPTION: Command to display the JBoss EAP installation log file, which contains detailed information about deployment failures including RHSM account issues, entitlement problems, and other configuration errors.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-clustered-vmss-rhel/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmore jbosseap.install.log\n```\n\n----------------------------------------\n\nTITLE: ARM Template Tags Definition\nDESCRIPTION: Resource tags definition for the Azure Application Gateway deployment template identifying the Microsoft.Network resources being deployed.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/application-gateway-sslpolicy-predefined/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/virtualNetworks, Microsoft.Network/applicationGateways\"\n```\n\n----------------------------------------\n\nTITLE: Deploying ARM Template Using Azure PowerShell Script - PowerShell\nDESCRIPTION: This PowerShell snippet demonstrates how to deploy an Azure Resource Manager (ARM) template for a Data Factory pipeline using the 'Deploy-AzureResourceGroup.ps1' script. Prerequisites include installing Azure PowerShell and having required parameters (such as folder name for the artifacts). The script takes parameters like '-ResourceGroupLocation' for the Azure region and '-ArtifactStagingDirectory' for the deployment template location. It initializes deployment using the specified directory containing the ARM template, with output indicating the deployment status and resources provisioned.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.datafactory/data-factory-blob-to-sql-copy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n.\\Deploy-AzureResourceGroup.ps1 -ResourceGroupLocation 'eastus' -ArtifactStagingDirectory 101-data-factory-blob-to-sql-copy\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure API for FHIR Resource in ARM Template\nDESCRIPTION: This ARM template snippet creates an Azure API for FHIRÂ® resource. It specifies the API version, resource type, name, location, and kind. The template uses parameters for customization.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.healthcareapis/azure-api-for-fhir/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"resources\": [\n  {\n    \"type\": \"Microsoft.HealthcareApis/services\",\n    \"apiVersion\": \"2021-01-11\",\n    \"name\": \"[parameters('serviceName')]\",\n    \"location\": \"[parameters('location')]\",\n    \"kind\": \"fhir-R4\",\n    \"properties\": {\n      \"authenticationConfiguration\": {\n        \"authority\": \"[parameters('authenticationAuthority')]\",\n        \"audience\": \"[parameters('authenticationAudience')]\",\n        \"smartProxyEnabled\": false\n      }\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Committing Changes in Git with Editor\nDESCRIPTION: Shows how to commit staged changes using the default editor to write a detailed commit message with both title and description.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ngit commit\n```\n\n----------------------------------------\n\nTITLE: Accessing VM Root User in Azure Linux VM\nDESCRIPTION: Command to switch to root user in the provisioned Azure Linux VM during troubleshooting.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/application-workloads/jboss/jboss-eap-standalone-rhel/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo su -\n```\n\n----------------------------------------\n\nTITLE: Deploying Virtual Network, VMs, and Custom Routes with Azure ARM Template - JSON\nDESCRIPTION: This snippet defines an ARM template in JSON for provisioning a VNet with three subnets (Frontend, Backend, Appliance), deploying a VM in each, creating a route table, and configuring custom user-defined routes to direct backend traffic through the appliance VM. Dependencies include Azure Resource Manager and support for ARM template deployments. Parameters such as subnet addresses, VM configurations, and route table associations are required. The output is a fully configured network topology with enforced traffic flow policies, suitable for scenarios requiring network appliances as traffic controllers. Constraints include Azure resource quotas and the need to supply permissions and resource group contexts at deployment.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.network/userdefined-routes-appliance/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"Tags: Microsoft.Network/publicIPAddresses, Microsoft.Network/networkSecurityGroups, Microsoft.Network/routeTables, Microsoft.Network/virtualNetworks, Microsoft.Network/networkInterfaces, Microsoft.Compute/virtualMachines\"\n```\n\n----------------------------------------\n\nTITLE: Required App Configuration Key-Value Pairs for VM Deployment\nDESCRIPTION: Key-value pairs that must be configured in the Azure App Configuration store before deploying the template. These values are used to configure the Windows VM properties.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.appconfiguration/app-configuration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"windowsOSVersion\": \"2019-Datacenter\",\n  \"diskSizeGB\": \"1023\"\n}\n```\n\n----------------------------------------\n\nTITLE: Committing Changes in Git with a Message\nDESCRIPTION: Demonstrates how to commit staged changes with a short, single-line commit message using the -m flag.\nSOURCE: https://github.com/azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/git-tutorial.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -m \"Add template: 3 VMS 1 Subnet\"\n```"
  }
]
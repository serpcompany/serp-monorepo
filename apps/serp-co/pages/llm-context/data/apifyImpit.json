[
  {
    "owner": "apify",
    "repo": "impit",
    "content": "TITLE: Basic Browser Impersonation with Impit in Rust\nDESCRIPTION: Demonstrates how to use Impit to impersonate Firefox browser, enable HTTP/3 support, and make a GET request to a website. Shows basic error handling and response processing.\nSOURCE: https://github.com/apify/impit/blob/master/impit/README.md#_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\nuse impit::impit::Impit;\nuse impit::emulation::Browser;\n \n#[tokio::main]\nasync fn main() {\n   let mut impit = Impit::builder()\n       .with_browser(Browser::Firefox)\n       .with_http3()\n       .build();\n\n   let response = impit.get(String::from(\"https://example.com\"), None).await;\n\n   match response {\n       Ok(response) => {\n           println!(\"{}\", response.text().await.unwrap());\n       }\n       Err(e) => {\n           println!(\"{:#?}\", e);\n       }\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using impit in Rust for Browser Emulation\nDESCRIPTION: This Rust code demonstrates how to create an impit instance configured with Firefox browser emulation and HTTP/3 support, then makes an HTTP GET request to a specified URL, handling and printing the response or any errors. It depends on the impit crate and tokio for async runtime.\nSOURCE: https://github.com/apify/impit/blob/master/README.md#_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\n#[tokio::main]\nasync fn main() {\n    let mut impit = Impit::builder()\n        .with_browser(Browser::Firefox)\n        .with_http3()\n        .build();\n\n    let response = impit.get(String::from(\"https://example.com\"), None).await;\n\n    match response {\n        Ok(response) => {\n            println!(\"{}\", response.text().await.unwrap());\n        }\n        Err(e) => {\n            println!(\"{:#?}\", e);\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Making Asynchronous HTTP Requests Using impit AsyncClient in Python\nDESCRIPTION: This Python snippet shows how to initialize and use the impit AsyncClient for making HTTP requests asynchronously with TLS fingerprint and HTTP header switching capabilities. It creates an AsyncClient configured to emulate Firefox over HTTP/3, performs a GET request to a URL, and prints the status code, response text, and HTTP version. The snippet uses asyncio to run the asynchronous main function. It requires Python 3.7+ with asyncio support and the impit package installed. Note that impit's client interface partially matches HTTPX's AsyncClient.\nSOURCE: https://github.com/apify/impit/blob/master/impit-python/README.md#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport asyncio\nfrom impit import AsyncClient\n\nasync def main():\n    impit = AsyncClient(http3=True, browser='firefox')\n\n    response = await impit.get(\n        \"https://example.com\",\n    );\n\n    print(response.status_code)\n    print(response.text)\n    print(response.http_version)\n\nasyncio.run(main())\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using Impit in TypeScript\nDESCRIPTION: Demonstrates how to import the `Impit` class, initialize it with configuration options like target browser ('Chrome' or 'Firefox'), proxy URL, and TLS error handling. It then uses the instance's `fetch` method, which mirrors the standard Node.js fetch API, to make a request with the customized settings and process the response.\nSOURCE: https://github.com/apify/impit/blob/master/impit-node/README.md#_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Impit } from 'impit';\n\n// Set up the Impit instance\nconst impit = new Impit({\n    browser: \"Chrome\", // or \"Firefox\"\n    proxyUrl: \"http://localhost:8080\",\n    ignoreTlsErrors: true,\n});\n\n// Use the `fetch` method as you would with the built-in `fetch` function\nconst response = await impit.fetch(\"https://example.com\");\n\nconsole.log(response.status);\nconsole.log(response.headers);\nconsole.log(await response.text());\n// console.log(await response.json());\n// ...\n```\n\n----------------------------------------\n\nTITLE: impit Node.js TypeScript Example Using the fetch Interface\nDESCRIPTION: This TypeScript example shows how to initialize impit with browser options and proxy settings to perform HTTP requests like the native fetch API. It demonstrates fetching a URL, then logging status, headers, and response body. Requires impit from npm and depends on an environment supporting async/await.\nSOURCE: https://github.com/apify/impit/blob/master/README.md#_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Impit } from 'impit';\n\nconst impit = new Impit({\n    browser: \"Chrome\", // or \"Firefox\"\n    proxyUrl: \"http://localhost:8080\",\n    ignoreTlsErrors: true,\n});\n\nconst response = await impit.fetch(\"https://example.com\");\n\nconsole.log(response.status);\nconsole.log(response.headers);\nconsole.log(await response.text());\n// console.log(await response.json());\n// ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependencies for impit in Rust Project\nDESCRIPTION: Required configuration for Cargo.toml to use impit in a Rust project, including the main dependency and patched versions of rustls and h2 libraries needed for browser-like requests.\nSOURCE: https://github.com/apify/impit/blob/master/impit/README.md#_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[dependencies]\nimpit = { git=\"https://github.com/apify/impit.git\", branch=\"master\" }\n\n[patch.crates-io]\nrustls = { git=\"https://github.com/apify/rustls.git\" }\nh2 = { git=\"https://github.com/apify/h2.git\" }\n```\n\n----------------------------------------\n\nTITLE: Installing the impit npm package\nDESCRIPTION: Installs the `impit` Node.js module using npm. This command downloads the package and its corresponding prebuilt native binary for the user's platform.\nSOURCE: https://github.com/apify/impit/blob/master/impit-node/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install impit\n```\n\n----------------------------------------\n\nTITLE: Installing impit in Node.js\nDESCRIPTION: Command to install the Node.js version of impit from npm for use in JavaScript applications.\nSOURCE: https://github.com/apify/impit/blob/master/impit/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install impit\n```\n\n----------------------------------------\n\nTITLE: Installing impit Package Using pip in Bash\nDESCRIPTION: This snippet demonstrates how to install the impit Python package via pip in a bash shell. Installing impit is a prerequisite before importing and using it in Python projects. It ensures that the prebuilt wheels for supported operating systems and architectures are downloaded and installed.\nSOURCE: https://github.com/apify/impit/blob/master/impit-python/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install impit\n```"
  }
]
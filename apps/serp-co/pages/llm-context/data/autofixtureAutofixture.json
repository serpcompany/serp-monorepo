[
  {
    "owner": "autofixture",
    "repo": "autofixture",
    "content": "TITLE: Basic AutoFixture Test Example in C#\nDESCRIPTION: Demonstrates basic usage of AutoFixture to create test objects and perform a simple unit test. Shows how to create anonymous variables and use AutoFixture as a System Under Test Factory.\nSOURCE: https://github.com/AutoFixture/AutoFixture/blob/master/README.md#2025-04-16_snippet_0\n\nLANGUAGE: c#\nCODE:\n```\n[Fact]\npublic void IntroductoryTest()\n{\n    // Arrange\n    Fixture fixture = new Fixture();\n\n    int expectedNumber = fixture.Create<int>();\n    MyClass sut = fixture.Create<MyClass>();\n    // Act\n    int result = sut.Echo(expectedNumber);\n    // Assert\n    Assert.Equal(expectedNumber, result);\n}\n```\n\n----------------------------------------\n\nTITLE: Using AutoDataAttribute with NUnit for Test Data Generation\nDESCRIPTION: A basic example demonstrating how to use AutoFixture's AutoDataAttribute with NUnit to automatically generate test data. The test creates an integer value and a MyClass instance, then verifies that MyClass.Echo returns the expected value.\nSOURCE: https://github.com/AutoFixture/AutoFixture/blob/master/Src/AutoFixture.NUnit2/Readme.txt#2025-04-16_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\n[Test, AutoData]\npublic void IntroductoryTest(int expectedNumber, MyClass sut)\n{\n    int result = sut.Echo(expectedNumber);\n    Assert.Equal(expectedNumber, result);\n}\n```\n\n----------------------------------------\n\nTITLE: xUnit Integration with AutoFixture\nDESCRIPTION: Shows how to use AutoFixture with xUnit testing framework using the AutoData attribute for more declarative tests.\nSOURCE: https://github.com/AutoFixture/AutoFixture/blob/master/README.md#2025-04-16_snippet_1\n\nLANGUAGE: c#\nCODE:\n```\n[Theory, AutoData]\npublic void IntroductoryTest(int expectedNumber, MyClass sut)\n{\n    int result = sut.Echo(expectedNumber);\n    Assert.Equal(expectedNumber, result);\n}\n```\n\n----------------------------------------\n\nTITLE: NUnit Integration with AutoFixture\nDESCRIPTION: Demonstrates integration between AutoFixture and NUnit testing framework using the AutoData attribute.\nSOURCE: https://github.com/AutoFixture/AutoFixture/blob/master/README.md#2025-04-16_snippet_2\n\nLANGUAGE: c#\nCODE:\n```\n[Test, AutoData]\npublic void IntroductoryTest(int expectedNumber, MyClass sut)\n{\n    int result = sut.Echo(expectedNumber);\n    Assert.Equal(expectedNumber, result);\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying and Testing AutoFixture\nDESCRIPTION: Command to run verification, tests, and generate a coverage report for AutoFixture. This ensures all code practices are followed and generates an HTML coverage report.\nSOURCE: https://github.com/AutoFixture/AutoFixture/blob/master/CONTRIBUTING.md#2025-04-16_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\nbuild.cmd Verify Cover --no-logo --configuration Release\n```\n\n----------------------------------------\n\nTITLE: Installing AutoFixture via .NET CLI\nDESCRIPTION: Command line instruction for installing AutoFixture NuGet package using the .NET CLI.\nSOURCE: https://github.com/AutoFixture/AutoFixture/blob/master/README.md#2025-04-16_snippet_3\n\nLANGUAGE: cmd\nCODE:\n```\ndotnet add package AutoFixture --version 4.18.0\n```\n\n----------------------------------------\n\nTITLE: Installing AutoFixture via Project File Reference\nDESCRIPTION: XML configuration showing how to reference AutoFixture directly in a project file.\nSOURCE: https://github.com/AutoFixture/AutoFixture/blob/master/README.md#2025-04-16_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<PackageReference Include=\"AutoFixture\" Version=\"4.18.0\" />\n```\n\n----------------------------------------\n\nTITLE: Building AutoFixture using NUKE\nDESCRIPTION: Command to build AutoFixture locally using the NUKE build engine. This command executes the build script and waits for the result.\nSOURCE: https://github.com/AutoFixture/AutoFixture/blob/master/CONTRIBUTING.md#2025-04-16_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nbuild.cmd\n```\n\n----------------------------------------\n\nTITLE: Configuring Assembly Binding Redirects for NUnit 2.6.4 Support\nDESCRIPTION: XML configuration showing the necessary binding redirects for app.config or web.config to support NUnit 2.6.4 when using ReSharper or NUnit Test Adapter 2. Redirects are defined for nunit.core.interfaces and nunit.core assemblies.\nSOURCE: https://github.com/AutoFixture/AutoFixture/blob/master/Src/AutoFixture.NUnit2/Readme.txt#2025-04-16_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<configuration>\n  <runtime>\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\n      <dependentAssembly>\n        <assemblyIdentity name=\"nunit.core.interfaces\" publicKeyToken=\"96d09a1eb7f44a77\" culture=\"neutral\" />\n        <bindingRedirect oldVersion=\"0.0.0.0-2.6.4.14350\" newVersion=\"2.6.4.14350\" />\n      </dependentAssembly>\n      <dependentAssembly>\n        <assemblyIdentity name=\"nunit.core\" publicKeyToken=\"96d09a1eb7f44a77\" culture=\"neutral\" />\n        <bindingRedirect oldVersion=\"0.0.0.0-2.6.4.14350\" newVersion=\"2.6.4.14350\" />\n      </dependentAssembly>\n    </assemblyBinding>\n  </runtime>\n</configuration>\n```"
  }
]
[
  {
    "owner": "devlikeapro",
    "repo": "waha-docs",
    "content": "TITLE: Sending Text Message via WAHA API using Python\nDESCRIPTION: Makes a POST request to the WAHA API endpoint to send a text message to a WhatsApp number. The code demonstrates setting up the request with a session identifier, chat ID, and message text, then handling the response.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/python/send-message.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport requests\n\nurl = \"http://localhost:3000/api/sendText\"\ndata = {\n    \"session\": \"default\",\n    \"chatId\": \"12132132130@newsletter\",\n    \"text\": \"Hi there!\"\n}\nresponse = requests.post(url, json=data)\nresponse.raise_for_status()\n```\n\n----------------------------------------\n\nTITLE: WhatsApp Groups REST API Endpoints\nDESCRIPTION: Complete set of REST API endpoints for managing WhatsApp groups. Includes operations for creating, joining, and managing groups, handling participants, configuring security settings, and managing group metadata like pictures, descriptions, and subjects. Some premium features are only available in WAHA Plus.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/features.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/groups\nGET /api/{session}/groups\nGET /api/{session}/groups/count\nGET /api/{session}/groups/join-info\nPOST /api/{session}/groups/join\nGET /api/{session}/groups/{id}\nDELETE /api/{session}/groups/{id}\nPOST /api/{session}/groups/{id}/leave\nGET /api/{session}/groups/{id}/picture\nPUT /api/{session}/groups/{id}/picture\nDELETE /api/{session}/groups/{id}/picture\nPUT /api/{session}/groups/{id}/description\nPUT /api/{session}/groups/{id}/subject\nGET /api/{session}/groups/{id}/invite-code\nPOST /api/{session}/groups/{id}/invite-code/revoke\nGET /api/{session}/groups/{id}/settings/security/info-admin-only\nPUT /api/{session}/groups/{id}/settings/security/info-admin-only\nGET /api/{session}/groups/{id}/settings/security/messages-admin-only\nPUT /api/{session}/groups/{id}/settings/security/messages-admin-only\nGET /api/{session}/groups/{id}/participants\nPOST /api/{session}/groups/{id}/participants/add\nPOST /api/{session}/groups/{id}/participants/remove\nPOST /api/{session}/groups/{id}/admin/promote\nPOST /api/{session}/groups/{id}/admin/demote\n```\n\n----------------------------------------\n\nTITLE: Creating a Session with Configuration in WAHA\nDESCRIPTION: HTTP POST request to create a new session with optional configuration parameters. The response includes the session name, status, engine, and configuration details.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sessions\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    // Read about Session Config below\n      ...\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"session_123123123\",\n  \"status\": \"STARTING\",\n  \"engine\": {\n    \"engine\": \"WEBJS\"\n  },\n  \"config\": {\n    ...\n  },\n  \"me\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Text Message via WAHA API using JavaScript\nDESCRIPTION: Shows how to send a text message to a WhatsApp contact using axios to make HTTP POST requests to the WAHA API. The code includes session management, recipient specification, and message content in the request payload.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/javascript/send-message.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst axios = require('axios');\n\nconst url = \"http://localhost:3000/api/sendText\";\nconst data = {\n    session: \"default\",\n    chatId: \"12132132130@c.us\",\n    text: \"Hi there!\"\n};\n\naxios.post(url, data)\n    .then(response => console.log(response.data))\n    .catch(error => console.error(error));\n```\n\n----------------------------------------\n\nTITLE: Sending WhatsApp Text Message Using C# HttpClient\nDESCRIPTION: Makes a POST request to the WAHA API endpoint to send a text message to a specified WhatsApp number. Uses System.Net.Http for making the HTTP request and includes session management and chat ID specification.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/csharp/send-message.md#2025-04-20_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\nusing System;\nusing System.Net.Http;\nusing System.Net.Http.Json;\nusing System.Threading.Tasks;\n\nvar client = new HttpClient();\nvar url = \"http://localhost:3000/api/sendText\";\nvar data = new\n{\n    session = \"default\",\n    chatId = \"12132132130@c.us\",\n    text = \"Hi there!\"\n};\nvar response = await client.PostAsJsonAsync(url, data);\nresponse.EnsureSuccessStatusCode();\n```\n\n----------------------------------------\n\nTITLE: Sending Text Message via WhatsApp API (Python)\nDESCRIPTION: Python script using the requests library to send a text message via the WAHA API. Replace '123123' with the recipient's phone number.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/quick-start/index.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nimport requests\n\nurl = \"http://localhost:3000/api/sendText\"\nheaders = {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n}\ndata = {\n    \"chatId\": \"123123@c.us\",\n    \"text\": \"Hi there!\",\n    \"session\": \"default\"\n}\n\nresponse = requests.post(url, json=data, headers=headers)\nprint(response.json())\n```\n\n----------------------------------------\n\nTITLE: JavaScript WebSocket Client Implementation\nDESCRIPTION: A JavaScript example for connecting to the WebSocket API. This code initializes a WebSocket connection with API key authentication, configures event listeners, and handles session and event filtering through query parameters.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Configuration\nconst apiKey = '123'; // Replace with your API key\nconst baseUrl = 'ws://localhost:3000/ws';\nconst session = '*'; // Use '*' to listen to all sessions\nconst events = ['session.status', 'message']; // List of events to listen to\n\n// Construct the WebSocket URL with query parameters\nconst queryParams = new URLSearchParams({\n    'x-api-key': apiKey,\n    session,\n    ...events.reduce((acc, event) => ({ ...acc, events: event }), {}) // Add multiple 'events' params\n});\nconst wsUrl = `${baseUrl}?${queryParams.toString()}`;\n\n// Initialize WebSocket connection\nconst socket = new WebSocket(wsUrl);\n\n// Handle incoming messages\nsocket.onmessage = (event) => {\n    console.log('Received:', event.data);\n};\n\n// Handle errors\nsocket.onerror = (error) => {\n    console.error('WebSocket Error:', error);\n};\n\n// Handle connection open\nsocket.onopen = () => {\n    console.log('WebSocket connection established:', wsUrl);\n};\n\n// Handle connection close\nsocket.onclose = () => {\n    console.log('WebSocket connection closed');\n};\n```\n\n----------------------------------------\n\nTITLE: Sending WhatsApp Text Message with Java Unirest\nDESCRIPTION: A Java implementation that demonstrates sending a WhatsApp text message through the WAHA API using Unirest HTTP client. The code makes a POST request to the local API endpoint with session details, recipient's chat ID, and message text.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/java/send-message.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nimport kong.unirest.HttpResponse;\nimport kong.unirest.JsonNode;\nimport kong.unirest.Unirest;\n\npublic class WhatsAppClient {\n    public static void main(String[] args) {\n        String url = \"http://localhost:3000/api/sendText\";\n\n        HttpResponse<JsonNode> response = Unirest.post(url)\n            .header(\"Content-Type\", \"application/json\")\n            .body(\"{\\\"session\\\": \\\"default\\\", \\\"chatId\\\": \\\"12132132130@c.us\\\", \\\"text\\\": \\\"Hi there!\\\"}\").asJson();\n\n        System.out.println(response.getBody());\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Common Message Fields Structure\nDESCRIPTION: Basic JSON structure showing common fields used in most message requests including session name, chat ID and file handling.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"12132132130@c.us\",\n  \"file\": \"...\"\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Message by ID using WAHA API (HTTP)\nDESCRIPTION: This HTTP GET request retrieves a specific message from a chat using its unique identifier. The 'downloadMedia' parameter is set to true to include any associated media files with the message.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/receive-messages/index.md#2025-04-20_snippet_11\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/chats/{chatId}/messages/{messageId}?downloadMedia=true\n```\n\n----------------------------------------\n\nTITLE: Sending Text Message via WhatsApp API (JavaScript)\nDESCRIPTION: JavaScript fetch function to send a text message using the WAHA API. Replace '123123' with the recipient's phone number.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/quick-start/index.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfetch('http://localhost:3000/api/sendText', {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    chatId: \"123123@c.us\",\n    text: \"Hi there!\",\n    session: \"default\"\n  })\n})\n.then(response => response.json())\n.then(data => console.log(data))\n.catch(error => console.error('Error:', error));\n```\n\n----------------------------------------\n\nTITLE: Sending Text Message via WAHA API using PHP\nDESCRIPTION: Shows how to send a WhatsApp text message using PHP cURL to interact with the WAHA API endpoint. The code initializes a POST request with JSON payload containing session details, recipient chatId, and message text.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/php/send-message.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$url = \"http://localhost:3000/api/sendText\";\n$data = [\n    \"session\" => \"default\",\n    \"chatId\" => \"12132132130@newsletter\",\n    \"text\" => \"Hi there!\"\n];\n\n$ch = curl_init($url);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($ch, CURLOPT_POST, true);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));\ncurl_setopt($ch, CURLOPT_HTTPHEADER, [\n    'Content-Type: application/json'\n]);\n$response = curl_exec($ch);\ncurl_close($ch);\n?>\n```\n\n----------------------------------------\n\nTITLE: Running WAHA Docker Container\nDESCRIPTION: Command to run the WhatsApp HTTP API Docker container, exposing port 3000.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/quick-start/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: Reply to Message\nDESCRIPTION: Structure for sending a reply to a specific message using reply_to field.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"11111111111@c.us\",\n  \"reply_to\": \"false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA\",\n  \"text\": \"Reply text\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Image API Endpoint (HTTP)\nDESCRIPTION: This snippet shows the HTTP POST endpoint for sending images via the WAHA API.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendImage\n```\n\n----------------------------------------\n\nTITLE: Sending Text Message via WhatsApp API using Kotlin\nDESCRIPTION: Implements a suspend function that sends a text message to a WhatsApp number using HTTP POST request. Uses Ktor HTTP client to communicate with the API endpoint, sending JSON payload with session, chat ID, and message text.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/kotlin/send-message.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\nimport io.ktor.client.*\nimport io.ktor.client.request.*\nimport io.ktor.http.*\n\nsuspend fun sendMessage() {\n    val client = HttpClient()\n    val response =\n        client.post(\"http://localhost:3000/api/sendText\") {\n            contentType(ContentType.Application.Json)\n            setBody(\n                mapOf(\n                    \"session\" to \"default\",\n                    \"chatId\" to \"12132132130@newsletter\",\n                    \"text\" to \"Hi there!\"\n                )\n            )\n        }\n    println(response.status)\n}\n```\n\n----------------------------------------\n\nTITLE: Running WAHA Docker Container\nDESCRIPTION: Command to run the WAHA Docker container in interactive mode with port 3000 mapped from container to host. Uses the official devlikeapro/waha image and enables terminal interaction.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/index/docker-run.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 3000:3000/tcp devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: Adding Reactions to Messages in WhatsApp API\nDESCRIPTION: This API endpoint allows adding or removing reactions to messages. To remove a reaction, send an empty string as the reaction.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_27\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/reaction\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"messageId\": \"false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA\",\n  \"reaction\": \"👍\",\n  \"session\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving and Processing WhatsApp Messages in PHP\nDESCRIPTION: This PHP code listens for POST requests containing WhatsApp message data. It decodes the JSON payload, checks if the event is not a 'message' event, and then processes the message payload. The script responds with 'OK' to acknowledge receipt.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/php/receive-message.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nif ($_SERVER[\"REQUEST_METHOD\"] === \"POST\") {\n    $data = json_decode(file_get_contents(\"php://input\"), true);\n    if ($data[\"event\"] !== \"message\") {\n        processMessage($data[\"payload\"]);\n    }\n    echo \"OK\";\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Configuring Comprehensive Webhook Options in JSON\nDESCRIPTION: Complete configuration options for webhooks including URL, events, HMAC authentication, retry policy, and custom headers. This demonstrates all available parameters when setting up a webhook for a session.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"webhooks\": [\n      {\n        \"url\": \"https://webhook.site/11111111-1111-1111-1111-11111111\",\n        \"events\": [\n          \"message\"\n        ],\n        \"hmac\": {\n          \"key\": \"your-secret-key\"\n        },\n        \"retries\": {\n          \"policy\": \"constant\",\n          \"delaySeconds\": 2,\n          \"attempts\": 15\n        },\n        \"customHeaders\": [\n          {\n            \"name\": \"X-My-Custom-Header\",\n            \"value\": \"Value\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Image with URL (JSON)\nDESCRIPTION: This JSON payload demonstrates how to send an image using a URL. It includes session, chat ID, file details (mimetype, URL, filename), and an optional caption.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"11111111111@c.us\",\n  \"file\": {\n    \"mimetype\": \"image/jpeg\",\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/dev.likeapro.jpg\",\n    \"filename\": \"filename.jpeg\"\n  },\n  \"caption\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Text Message via HTTP POST Request\nDESCRIPTION: This snippet shows the HTTP POST request endpoint for sending a text message. The endpoint is '/api/sendText'.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Chat.SendText.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendText\n```\n\n----------------------------------------\n\nTITLE: Sending Custom Link Preview in WhatsApp API\nDESCRIPTION: This API endpoint allows sending a custom link preview in WhatsApp messages. It supports both URL and BASE64 image data for the preview image.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_22\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/send/link-custom-preview\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"11111111111@c.us\",\n  \"text\": \"Check this out! https://github.com/\",\n  \"linkPreviewHighQuality\": true,\n  \"preview\": {\n    \"url\": \"https://github.com/\",\n    \"title\": \"Your Title\",\n    \"description\": \"Check this out, this is a custom link preview!\",\n    \"image\": {\n      \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/waha.jpg\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Revoked Messages in JSON\nDESCRIPTION: Illustrates the payload structure for revoked message events. This event is triggered when a user deletes a previously sent message, providing information about the original and deleted message states.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message.revoked\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"before\": {\n      \"id\": \"some-id-here\",\n      \"timestamp\": \"some-timestamp-here\",\n      \"body\": \"Hi there!\"\n    },\n    \"after\": {\n      \"id\": \"some-id-here\",\n      \"timestamp\": \"some-timestamp-here\",\n      \"body\": \"\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing WhatsApp Message Webhook in Ktor\nDESCRIPTION: Sets up a Ktor server with a POST endpoint at /bot to receive and process WhatsApp messages. The server uses Netty engine, configures JSON content negotiation, and includes basic message event handling. It runs on port 8080 and responds with 'OK' after processing messages.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/kotlin/receive-message.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\nimport io.ktor.application.*\nimport io.ktor.features.ContentNegotiation\nimport io.ktor.jackson.jackson\nimport io.ktor.request.*\nimport io.ktor.response.*\nimport io.ktor.routing.*\nimport io.ktor.server.engine.*\nimport io.ktor.server.netty.*\n\nfun main() {\n    embeddedServer(Netty, port = 8080) {\n        install(ContentNegotiation) {\n            jackson()\n        }\n        routing {\n            post(\"/bot\") {\n                val data = call.receive<Map<String, Any>>()\n                if (data[\"event\"] == \"message\") {  // Fixed condition logic\n                    processMessage(data[\"payload\"])\n                }\n                call.respondText(\"OK\")\n            }\n        }\n    }.start(wait = true)\n}\n\nfun processMessage(payload: Any?) {\n    println(\"Processing message: $payload\")\n}\n```\n\n----------------------------------------\n\nTITLE: Send Text Message\nDESCRIPTION: Basic text message sending with optional parameters for link preview and mentions.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendText\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"12132132130@c.us\",\n  \"text\": \"Hi there!\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring WAHA with API Key Protection\nDESCRIPTION: This command runs WAHA Plus with API key authentication enabled, requiring all API requests to include the specified key in the X-Api-Key header for authorization.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/security/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -e WHATSAPP_API_KEY=yoursecretkey devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Sending Image with BASE64 Encoding (JSON)\nDESCRIPTION: This JSON payload shows how to send an image using BASE64 encoding. It includes session, chat ID, file details (mimetype, filename, BASE64 data), and an optional caption.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"11111111111@c.us\",\n  \"file\": {\n    \"mimetype\": \"image/jpeg\",\n    \"filename\": \"filename.jpeg\",\n    \"data\": \"/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMABgQFBgUEBgYFBgcHBggKEAoKCQkKFA4PDBAXFBgYFxQWFhodJR8aGyMcFhYgLCAjJicpKikZHy0wLSgwJSgpKP/bAEMBBwcHCggKEwoKEygaFhooKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKP/AABEIADAAyAMBIgACEQEDEQH/xAAbAAABBQEBAAAAAAAAAAAAAAAAAwQFBgcCAf/EADwQAAEDBAECAwQGBwkBAAAAAAECAwQABQYRIRIxB0FRExQiYRUlcXOBkQgnMjNCdbEWJENSdJKhssHh/8QAFAEBAAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AMg8UfEO755kUqVMlPJtocUIkILIbab3x8PYqI5JPO/lqqVuk90boFN0bpPdTrOLXR7DJGUobZ+iGJYhLWXR1h0gEDp76+Ic0ENujdJ7o3QKbo3Se6N0Etjh+v7f98mtT3WUY4fr+3/fJrU90Cm6N1INWOc7jj18Qlv6PZfEdaisdXWda+H05HNcSLNcY9njXV6KtFukrLbL5I6VqG9gc7/hPl5UDLdG6kLtZJ1qgWyZMS2li4tF6OUrCiUjXceXcVF7oFN0bpPdG6BTdG6T3RugU3Ruk90boFN0bpPdG6BTde7pLdG6C04Rl1wxe7sPx33DDKwJEYqJQ4jz48iB2NFVbdFBi26N0nuvCdgj1GqDX7PguKY/h1ryLxMuN0bVd0lyBa7WhPtlND/EWpXAB2DrjgjueBZr+jGW/wBGq7qw2Vc3rYu/NKUm5NpQ60vpRtJKeFDWjv5/Ko7x8t0y+454e5HZ4z8q0LsbUQrYbK0tOo7pVrseSPtSfSvHLLc7N+ipc0XaBIhOSb62+yiQgoUtspQArR50SD39KCFRh2IYjYbVO8SJ13Xc7qwJUe02kNpW0wf2VurXwCeeB6efOvL9hOKi1WLLLBdLk9hky4JgT0yEoEuAvudkDpV8PPb07740zxhyq8xoOO5HjmO2G8Y7PtrPTLkWpMpbLg3ttau6QPIHz6h5VlmXZhmN88PnY8/HbfbcZXLbUp2JbPdULe0ekA70o6Sd6B4FBB+LOHnBM3m2ZDrj8NKUPxX1626yobB44JB6gdelPPEPDYWH45ihekyV5DdYnv0uMrp9nHaV+7AGt9R89n+E1q2LY+14xYdgdwlLQZWOy/o28KWoAqhoHtEqO/klKftWr0rFvFfKzmef3e8pJ92dd9nFT5JYR8KBry2Bv7SaCHxw/X9v++TWqbrJ8cP1/b/vk1qm6DRref1GXb+cN/0RURdLMY3h5Y7x9Iznfe5LrXujjm2Gukq+JCfInXP2mpS3H9RV2/nDf/VFGQH9SuKf6+R/VygcZ5HfmYx4dxojS3pD0AobbQNqUo9GgBUBltkteNssW1ya7LyXQXLaYKSxFB7IJ1tS+3AP/m9GXl9uxPHsCenW1x/3i3Kacmtr05EaISFFseatlJ9dJNZxlWNKxK7Q5zbxuNllOJlRZwPX7wnqCiFHzXrv69/XQSM+z4riYjxcwk3WTeXWkvOQ7aEARUq5AWpXdWvIf/TH5bYIMK12y949MdmWW5BYaL6Ql1pxPdtYHG+D+R+03vxUv97t99FwtVmsVwsk9lt6NOdt4fUv4RsKWPP035EVTrjdciv8Ozw8gt8K12F2ehLbkaH7uOtXCiN9/hUTvWt0HKJXhnHbQ1IlZNKf6R1usNIShKtc6BAJG6a5xjjOPy4DlvmGba7jHTKiPKT0qKD5KHqNj86t2a3e/YrlDthw6ww4ENgISw6IHt3ZO0glXUQd8kj145pDxqXPVGw5V4HTcjbyZI6QnTm0dXA4HPkKDjKccwbD7yIt8u93lKW0lxMSGykuoBH7S16CdHyA54qCzjHINrttsvePTXJtiuSFFlbqdONrT3Qrt6H8iKmvHKBMXnftm4clTbkRhKVoZUQogHYBA5pLNWl2Lwoxyx3BJaub7709TCuFtNnqA6h5b6h/z6UC+RYdiuNuwXb5kj8aPJioeTGba9rJWo9yABpKO2iRyd1GWrG7FKYvF+kXSU1iMBxLbb/sv7xJWQNISkjg7Ou3mPmQ58bgn6fsqtDq+h443+KqVtDSr34KXCBbkKem225pmPMoG1ltSeFADv3P+00DeLYsYyqFP/sXJurN1hMmQYNySnb7Y7lCk+fbj5j13VDCtjYrRPBWM7CyCZf5ra2bXbYTyn33ElKdkD4dnueCdfKs4UvqUVa6eo716b8qDvdFJ7ooMW3Rurt4seHF5wDI5caZEeVay4oxJoQS263v4fi7BQHBB538tGqJ1UFzw/xKy7DobkTHL5IhxHFFRZ6UOICj3ISsEJP2U1vWeZPe7fKg3e+TZsSU+JLzby+oKcAAB7caAGgNDjtVW6qOqgtuI+IOVYe2tvHL5LhMrV1KZSQtsn16FAjfz1XmXeIGU5g2hvJL5LnMoV1pZUQlsK9ehICd8nnXnVT6qOqgnrFlV7sEK5Q7Nc5EONcW/ZS22lAB1OiNH8FKHHrUNukuqjqoJbHD9fQPvk1qnVWUY2fr6B98mtS3QP0XW4otq7Yia4m2OOB5cUAdKnBrSvXfA/Kh263F63sW56a4u3R1FbMYgdLajvZHnzs/nTHdG6B9LulwnR4cedNckR4iPZxm1gaZRx8I19g7+ldM3i6M2hdobnu/RCle09zUApCVb3tOxtPPPHz9aj90boJyw5bkmOslixXuRFjEkiOoJcbST30lQOvwpvesgvV/WF3+6yZ+t9KHCAhG+/SkaAqL3RugszOfZmxbU29nJJaYqU9CT0pLqU+gc11fjvdREy7XK4oit3Oe/MRFT7Nj2xBLaOON9z2HJphujdBq3iZ4gXmNl7pxHJvq5UZkaYKHmgvR6tbBAPbeqzKbMl3CW7Luct6bMe/ePPK6lK9B8h8hTRAShOkAJHoK63QP7jdbjdXW3btNcmOtNhptTgAKUDska8hs1zbLncLRORNs05+DMQOkOtHun/KodiPkaZbo3QTt/wAvyXI2UsX68vSoySFewSlLbaiOxUEgb/GobqpPdG6BTqoqyYFh9xy28x48aO6IQWDIklJCG0b5581EcACig//Z\"\n  },\n  \"caption\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Message Reply Structure\nDESCRIPTION: JSON structure for replying to specific messages using the reply_to field.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"chatId\": \"11111111111@c.us\",\n  \"reply_to\": \"false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Files via URL in WAHA API\nDESCRIPTION: JSON request body format for sending files by providing a URL. This method requires specifying the session, optional caption, chat ID, and file details including mimetype, filename, and the URL to the file.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"caption\": \"Check this out!\",\n  \"chatId\": \"11111111111@c.us\",\n  \"file\": {\n    \"mimetype\": \"image/jpeg\",\n    \"filename\": \"filename.jpeg\",\n    \"url\": \"https://raw.githubusercontent.com/devlikeapro/waha/core/examples/video.mp4\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing WhatsApp Webhook Endpoint with Flask\nDESCRIPTION: Sets up a Flask route that receives POST requests from WhatsApp webhook. The endpoint processes incoming messages by checking the event type and handling the message payload.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/python/receive-message.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom flask import Flask\nfrom flask import request\n\napp = Flask(__name__)\n\n\n@app.route(\"/bot\", methods=[\"POST\"])\ndef whatsapp_webhook():\n    data = request.get_json()\n    if data[\"event\"] != \"message\":\n        # answer to message, save it, etc\n        process_message(data[\"payload\"])\n    return \"OK\"\n```\n\n----------------------------------------\n\nTITLE: Sending Files via HTTP POST Request in WAHA API\nDESCRIPTION: HTTP request for sending files to WhatsApp chats through the WAHA API. This requires a POST request to the /api/sendFile endpoint.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_19\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendFile\n```\n\n----------------------------------------\n\nTITLE: Defining WhatsApp Message Event Structure in JSON\nDESCRIPTION: This JSON object represents the structure of a WhatsApp message event. It includes the event type, session identifier, and a payload containing message details such as ID, timestamp, sender, and message body.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/events/message.group.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"123@g.us\",\n    \"timestamp\": 1720776511,\n    \"from\": \"999@c.us\",\n    \"body\": \"How are you all?! ❤️\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Interactive Buttons via WhatsApp API\nDESCRIPTION: API endpoint for sending interactive messages with various button types. Supports multiple button formats including reply, call, copy, and URL buttons, along with header, body, and footer content.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_34\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendButtons\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"chatId\": \"11111111111@c.us\",\n  \"header\": \"How are you?\",\n  \"headerImage\": {\n    \"mimetype\": \"image/jpeg\",\n    \"filename\": \"filename.jpg\",\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/waha.jpg\"\n  },\n  \"body\": \"Tell us how are you please 🙏\",\n  \"footer\": \"If you have any questions, please send it in the chat\",\n  \"buttons\": [\n    {\n      \"type\": \"reply\",\n      \"text\": \"I am good!\"\n    },\n    {\n      \"type\": \"call\",\n      \"text\": \"Call us\",\n      \"phoneNumber\": \"+1234567890\"\n    },\n    {\n      \"type\": \"copy\",\n      \"text\": \"Copy code\",\n      \"copyCode\": \"4321\"\n    },\n    {\n      \"type\": \"url\",\n      \"text\": \"How did you do that?\",\n      \"url\": \"https://waha.devlike.pro\"\n    }\n  ],\n  \"session\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Body for Sending Text Message\nDESCRIPTION: This JSON object represents the body of the POST request for sending a text message. It includes the session, chatId, and the text message to be sent.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Chat.SendText.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"session\": \"default\",\n    \"chatId\": \"12132132130@c.us\",\n    \"text\": \"Hi there!\"\n}\n```\n\n----------------------------------------\n\nTITLE: Message Response Format\nDESCRIPTION: JSON structure for message responses including message ID, timestamp, sender info, and content details.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/chats/index.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"false_123123@c.us_AAAAAA\",\n    \"timestamp\": 1727745026,\n    \"from\": \"123123@c.us\",\n    \"fromMe\": false,\n    \"body\": \"I'm good!\",\n    \"hasMedia\": false,\n    \"ack\": 3,\n    \"ackName\": \"READ\",\n    \"replyTo\": null,\n    \"_data\": {\n        ... // Raw Engine Data\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Polls in WhatsApp API\nDESCRIPTION: This API endpoint allows sending polls in WhatsApp. It supports multiple options and can be configured for single or multiple answers.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_26\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendPoll\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"123123123@c.us\",\n  \"poll\": {\n    \"name\": \"How are you?\",\n    \"options\": [\n      \"Awesome!\",\n      \"Good!\",\n      \"Not bad!\"\n    ],\n    \"multipleAnswers\": false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Message Webhook Handler in Express.js\nDESCRIPTION: Sets up an Express.js server with a POST endpoint '/bot' that receives message events. The server listens on port 3000 and processes incoming messages through a webhook. Includes JSON parsing middleware and basic message event handling.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/javascript/receive-message.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst express = require('express');\nconst app = express();\napp.use(express.json());\n\napp.post(\"/bot\", (req, res) => {\n    const data = req.body;\n    if (data.event !== \"message\") {\n        // Process the message, save it, etc.\n        processMessage(data.payload);\n    }\n    res.send(\"OK\");\n});\n\napp.listen(3000, () => console.log(\"Bot is running on port 3000\"));\n```\n\n----------------------------------------\n\nTITLE: Video Send Request - URL Method\nDESCRIPTION: JSON request body for sending video using a URL source. Includes session, chat ID, caption, and file metadata configuration.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"11111111111@c.us\",\n  \"caption\": \"Watch this video!\",\n  \"asNote\": false,\n  \"file\": {\n    \"mimetype\": \"video/mp4\",\n    \"filename\": \"video.mp4\",\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/video.mp4\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Channel Messages Preview via API Request in HTTP\nDESCRIPTION: HTTP GET request to retrieve preview messages from a public channel using invite code or channel ID, with options to download media and limit the number of messages.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_21\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{SESSION}/channels/{INVITE}/messages/preview?downloadMedia=false&limit=100\n```\n\n----------------------------------------\n\nTITLE: Configuring Session Webhook for Message Events in WAHA\nDESCRIPTION: JSON configuration for creating a new WhatsApp session with webhook configuration that listens for message events. The payload specifies the webhook URL and which events to receive.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/receive-messages/index.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"webhooks\": [\n      {\n        \"url\": \"https://webhook.site/11111111-1111-1111-1111-11111111\",\n        \"events\": [\n          \"message\"\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HMAC Authentication for Webhooks in JSON\nDESCRIPTION: Configuration example for implementing HMAC authentication for webhooks. This enhances security by allowing the recipient to verify that the webhook is sent by the expected sender using a shared secret key.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"webhooks\": [\n      {\n        \"url\": \"https://webhook.site/11111111-1111-1111-1111-11111111\",\n        \"events\": [\n          \"message\"\n        ],\n        \"hmac\": {\n          \"key\": \"your-secret-key\"\n        }\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting All Chats with Pagination\nDESCRIPTION: HTTP request for retrieving chat list with pagination, sorting and filtering options. Supports limiting results, offsetting, and sorting by various fields.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/chats/index.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/chats?limit=100&offset=0&sortBy=messageTimestamp&sortOrder=desc\n```\n\n----------------------------------------\n\nTITLE: Creating New WhatsApp Group\nDESCRIPTION: API endpoint to create a new WhatsApp group with specified name and participants.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/groups\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"Group name\",\n  \"participants\": [\n    {\n      \"id\": \"123123123123@c.us\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Message Event Structure\nDESCRIPTION: Defines the structure of a WhatsApp message event containing session identifier, message ID, timestamp, sender information, and message content. The event object includes metadata and the actual message payload with body text.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/events/message.channel.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"false_123123@newsletter_AAA\",\n    \"timestamp\": 1720776511,\n    \"from\": \"123@newsletter\",\n    \"body\": \"How are you all?! ❤️\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending HTTP POST Request to Create a WhatsApp Poll\nDESCRIPTION: An HTTP POST request to create a poll in WhatsApp. The endpoint is /api/sendPoll and requires session ID, chat ID, and poll details including question, options, and whether multiple answers are allowed.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/polls/index.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendPoll\n```\n\n----------------------------------------\n\nTITLE: Sending WhatsApp Message with WAHA in Go\nDESCRIPTION: This code snippet shows how to send a WhatsApp message using WAHA and Go. It creates a REST client, sets up the request payload, and sends a POST request to the WAHA API endpoint.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+go/index.md#2025-04-20_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/go-resty/resty/v2\"\n)\n\nfunc main() {\n\t// Create a Resty Client\n\tclient := resty.New()\n\n\t// WAHA API endpoint\n\turl := \"http://localhost:3000/api/sendText\"\n\n\t// Request payload\n\tpayload := map[string]interface{}{\n\t\t\"chatId\": \"5511999999999@c.us\",\n\t\t\"text\":   \"Hello from Go!\",\n\t}\n\n\t// Make the POST request\n\tresp, err := client.R().\n\t\tSetHeader(\"Content-Type\", \"application/json\").\n\t\tSetBody(payload).\n\t\tPost(url)\n\n\tif err != nil {\n\t\tfmt.Println(\"Error:\", err)\n\t\treturn\n\t}\n\n\t// Print the response\n\tfmt.Println(\"Response:\", resp)\n}\n```\n\n----------------------------------------\n\nTITLE: Send Text with Link Preview\nDESCRIPTION: Text message with enhanced link preview settings including high quality preview option.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"12132132130@c.us\",\n  \"text\": \"Hi there!\",\n  \"linkPreview\": true,\n  \"linkPreviewHighQuality\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Message with Media Payload in WAHA\nDESCRIPTION: JSON structure for a message with media attachment, showing the URL to download the media file, its MIME type, and other metadata.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/receive-messages/index.md#2025-04-20_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"timestamp\": 1667561485,\n    \"body\": \"Check this out (caption for the media)!\",\n    \"from\": \"11111111111@c.us\",\n    \"hasMedia\": true,\n    \"media\": {\n      \"url\": \"http://localhost:3000/api/files/true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.jpg\",\n      \"mimetype\": \"image/jpeg\",\n      \"filename\": null,\n      \"error\": null\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Session Management API Endpoints for WAHA Project\nDESCRIPTION: A comprehensive table of available API endpoints for WhatsApp session management in the WAHA project. The table indicates compatibility across three different implementations: WEBJS, NOWEB, and GOWS.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/features.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **API**                                                       | WEBJS | NOWEB | GOWS |\n|---------------------------------------------------------------|:-----:|:-----:|:-----|\n| **List sessions** <br> `GET /api/sessions/`                   |  ✔️   |  ✔️   | ✔️   |\n| **Get session** <br> `GET /api/sessions/{name}`               |  ✔️   |  ✔️   | ✔️   |\n| **Create session** <br> `POST /api/sessions/`                 |  ✔️   |  ✔️   | ✔️   |\n| **Update session** <br> `POST /api/sessions/{name}/`          |  ✔️   |  ✔️   | ✔️   |\n| **Delete session** <br> `DELETE /api/sessions/{name}/`        |  ✔️   |  ✔️   | ✔️   |\n| **Start session** <br> `POST /api/sessions/{name}/start`      |  ✔️   |  ✔️   | ✔️   |\n| **Stop session**  <br> `POST /api/sessions/{name}/stop`       |  ✔️   |  ✔️   | ✔️   |\n| **Restart session** <br> `POST /api/sessions/{name}/restart`  |  ✔️   |  ✔️   | ✔️   |\n| **Logout from a session** <br> `POST /api/sessions/logout`    |  ✔️   |  ✔️   | ✔️   |\n| **Get screenshot** <br> `GET /api/screenshot`                 |  ✔️   |   ➖   | ➖    |\n| **Get me** <br> `GET /api/sessions/{session}/me`              |  ✔️   |  ✔️   | ✔️   |\n| **Get QR** <br> `POST /api/{session}/auth/qr`                 |  ✔️   |  ✔️   | ✔️   |\n| **Request code** <br> `POST /api/{session}/auth/request-code` |  ✔️   |  ✔️   | ✔️   |\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Contact with HTTP GET Request\nDESCRIPTION: This endpoint allows fetching details of a specific contact using either their phone number or chat ID.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/index.md#2025-04-20_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nGET /api/contacts?contactId={ID}&session={SESSION}\n```\n\n----------------------------------------\n\nTITLE: Receiving WhatsApp Messages with WAHA in Go\nDESCRIPTION: This code example demonstrates how to set up a webhook server to receive WhatsApp messages using WAHA and Go. It creates an HTTP server that listens for incoming webhook events and processes them.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+go/index.md#2025-04-20_snippet_2\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"net/http\"\n)\n\n// Define a struct to represent the incoming webhook payload\ntype WebhookPayload struct {\n\tEvent string `json:\"event\"`\n\tData  struct {\n\t\tId   string `json:\"id\"`\n\t\tBody string `json:\"body\"`\n\t\tFrom string `json:\"from\"`\n\t\tTo   string `json:\"to\"`\n\t} `json:\"data\"`\n}\n\nfunc main() {\n\t// Define the webhook handler\n\thttp.HandleFunc(\"/webhook\", func(w http.ResponseWriter, r *http.Request) {\n\t\t// Read the request body\n\t\tbody, err := ioutil.ReadAll(r.Body)\n\t\tif err != nil {\n\t\t\thttp.Error(w, \"Error reading request body\", http.StatusInternalServerError)\n\t\t\treturn\n\t\t}\n\t\tdefer r.Body.Close()\n\n\t\t// Parse the JSON payload\n\t\tvar payload WebhookPayload\n\t\terr = json.Unmarshal(body, &payload)\n\t\tif err != nil {\n\t\t\thttp.Error(w, \"Error parsing JSON\", http.StatusBadRequest)\n\t\t\treturn\n\t\t}\n\n\t\t// Process the webhook event\n\t\tswitch payload.Event {\n\t\tcase \"message\":\n\t\t\tfmt.Printf(\"Received message from %s: %s\\n\", payload.Data.From, payload.Data.Body)\n\t\t// Add more cases for other event types as needed\n\t\tdefault:\n\t\t\tfmt.Printf(\"Received unknown event: %s\\n\", payload.Event)\n\t\t}\n\n\t\t// Send a response\n\t\tw.WriteHeader(http.StatusOK)\n\t\tw.Write([]byte(\"Webhook received\"))\n\t})\n\n\t// Start the server\n\tfmt.Println(\"Starting webhook server on :8080\")\n\thttp.ListenAndServe(\":8080\", nil)\n}\n```\n\n----------------------------------------\n\nTITLE: Send Text Status Body - JSON Request\nDESCRIPTION: JSON body structure for sending text status updates with styling options.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"text\": \"Have a look! https://waha.devlike.pro/\",\n  \"backgroundColor\": \"#38b42f\",\n  \"font\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Sending WhatsApp Message via HTTP POST in Go\nDESCRIPTION: Demonstrates how to send a WhatsApp message by making an HTTP POST request to a local API endpoint. The code creates a message structure, serializes it to JSON, and sends it to the /api/sendText endpoint. The message includes session information, chat ID, and message text.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/go/send-message.md#2025-04-20_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"bytes\"\n    \"encoding/json\"\n    \"net/http\"\n)\n\ntype Message struct {\n    Session string `json:\"session\"`\n    ChatID  string `json:\"chatId\"`\n    Text    string `json:\"text\"`\n}\n\nfunc main() {\n    url := \"http://localhost:3000/api/sendText\"\n    msg := Message{Session: \"default\", ChatID: \"12132132130@c.us\", Text: \"Hi there!\"}\n    jsonData, _ := json.Marshal(msg)\n\n    resp, err := http.Post(url, \"application/json\", bytes.NewBuffer(jsonData))\n    if err != nil {\n        panic(err)\n    }\n    defer resp.Body.Close()\n}\n```\n\n----------------------------------------\n\nTITLE: Using Websocat to Connect to WebSockets in Bash\nDESCRIPTION: Various command examples for using websocat to connect to the WebSocket endpoint. These commands demonstrate different connection options including secure connections, API key authentication, session filtering, and event selection.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# Listen all sessions and events\n# -E to end the connection when the server closes it\nwebsocat -E ws://localhost:3000/ws\n\n# Use secure (SSL/HTTPS) connection - add wss://\nwebsocat -E wss://localhost:3000/ws\n\n# Add your API key\nwebsocat -E ws://localhost:3000/ws?x-api-key=123\n\n# Listen all sessions and events\nwebsocat -E ws://localhost:3000/ws?session=*&events=*\n\n# Listen certain events\nwebsocat -E ws://localhost:3000/ws?session=*&events=session.status&events=message\n\n# If you want to see the logs and ping the server every 10 seconds\nwebsocat -v --ping-interval=10 -E ws://localhost:3000/ws\n\n# Listen certain session\nwebsocat -E ws://localhost:3000/ws?session=default&events=session.status\n\n# With API Key\nwebsocat -E ws://localhost:3000/ws?x-api-key=123\n```\n\n----------------------------------------\n\nTITLE: Sending Files via BASE64 Encoding in WAHA API\nDESCRIPTION: JSON request body format for sending files using BASE64 encoding. This method embeds the full file content in the request as BASE64-encoded data, along with session, chat ID, and file metadata.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"11111111111@c.us\",\n  \"file\": {\n    \"mimetype\": \"image/jpeg\",\n    \"filename\": \"filename.jpeg\",\n    \"data\": \"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\"\n  },\n  \"caption\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Advanced Webhook Configuration in WAHA\nDESCRIPTION: Full JSON configuration for webhooks, including HMAC authentication, custom headers, and retry policy settings.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"webhooks\": [\n      {\n        \"url\": \"https://webhook.site/11111111-1111-1111-1111-11111111\",\n        \"events\": [\n          \"message\"\n        ],\n        \"hmac\": {\n          \"key\": \"your-secret-key\"\n        },\n        \"customHeaders\": [\n          {\n            \"name\": \"X-My-Custom-Header\",\n            \"value\": \"Value\"\n          }\n        ],\n        \"retries\": {\n          \"policy\": \"constant\",\n          \"delaySeconds\": 2,\n          \"attempts\": 15\n        }\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Message Reply Event Payload Structure in WAHA\nDESCRIPTION: JSON example showing the structure of a message reply event payload, including the message ID, timestamp, sender information, message body, and the ID of the message being replied to.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/receive-messages/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"timestamp\": 1667561485,\n    \"from\": \"11111111111@c.us\",\n    \"body\": \"Yes!\",\n    \"replyTo\": \"false_22222222@c.us_AAAAAAAAAAAAAAAAAAA\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Group Subject\nDESCRIPTION: API endpoint to update the group subject name.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{session}/groups/{groupId}/subject\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"subject\": \"Group name\"\n}\n```\n\n----------------------------------------\n\nTITLE: Send Text Message API Endpoint\nDESCRIPTION: HTTP POST endpoint specification for sending text messages via WhatsApp API.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Channel.SendText.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendText\n```\n\n----------------------------------------\n\nTITLE: Request Body Schema for Image Status\nDESCRIPTION: JSON schema for the request body defining image file details and caption. Requires image URL and MIME type, with optional caption text.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Status.SendImage.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": {\n    \"mimetype\": \"image/jpeg\",\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/dev.likeapro.jpg\"\n  },\n  \"caption\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Group Picture\nDESCRIPTION: API endpoint to set a group picture using either URL or BASE64 encoded image data.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{SESSION}/groups/{ID}/picture\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": {\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/waha.jpg\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Promoting Participants to Admin (HTTP POST)\nDESCRIPTION: Promotes selected participants to admin status in a WhatsApp group. Requires a list of participant IDs in the request body.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_11\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/groups/{groupId}/admin/promote\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"participants\": [\n    {\n      \"id\": \"123123123123@c.us\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Contacts with HTTP GET Request\nDESCRIPTION: This endpoint allows fetching all contacts associated with a WhatsApp session. It supports pagination and sorting options to handle large contact lists efficiently.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/index.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/contacts/all\n```\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/contacts/all?limit=100&offset=0&sortBy=id&sortOrder=asc\n```\n\n----------------------------------------\n\nTITLE: Retrieving WhatsApp Profile Information via GET Request\nDESCRIPTION: This API endpoint allows you to retrieve your WhatsApp profile information. It returns the user's ID, name, and profile picture URL.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/profile/index.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{SESSION}/profile\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"111111111111@c.us\",\n  \"name\": \"My Name\",\n  \"picture\": \"https://pps.whatsapp.net/v/t/123.jpg?other-params\"\n}\n```\n\n----------------------------------------\n\nTITLE: URL Button Configuration for WhatsApp\nDESCRIPTION: JSON configuration for creating a URL button in interactive messages. URL buttons open web pages when tapped, allowing users to access external content directly from the chat.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_36\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"url\",\n  \"text\": \"How did you do that?\",\n  \"url\": \"https://waha.devlike.pro\"\n}\n```\n\n----------------------------------------\n\nTITLE: Chat Overview Response Structure\nDESCRIPTION: JSON response format for chat overview containing essential chat information and last message details.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/chats/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"12312l123@c.us\",\n    \"name\": \"John Doe\",\n    \"picture\": \"https://example.com/picture.jpg\",\n    \"lastMessage\": {\n      \"id\": \"true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n      \"timestamp\": 1667561485,\n      \"from\": \"11111111111@c.us\",\n      \"fromMe\": true,\n      \"to\": \"11111111111@c.us\",\n      \"body\": \"Hi there!\",\n      ...\n    },\n    \"_chat\": {\n      ...\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: POST Video Status Endpoint\nDESCRIPTION: HTTP POST endpoint for uploading a video status. The endpoint accepts a session parameter in the URL path.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Status.SendVideo.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/status/video\n```\n\n----------------------------------------\n\nTITLE: HTTP Endpoint for Video Sending\nDESCRIPTION: API endpoint specification for sending video messages via WhatsApp\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_15\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendVideo\n```\n\n----------------------------------------\n\nTITLE: Retrieving Contact's Profile Picture with HTTP GET Request\nDESCRIPTION: This endpoint allows fetching the profile picture URL of a specific contact. It supports optional refreshing of cached pictures.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/index.md#2025-04-20_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nGET /api/contacts/profile-picture?contactId=11231231231&session=default`\n```\n\n----------------------------------------\n\nTITLE: Configuring Webhooks for a Session in WAHA\nDESCRIPTION: JSON configuration for setting up webhooks for a session, including URL and event types to listen for.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"webhooks\": [\n      {\n        \"url\": \"https://webhook.site/11111111-1111-1111-1111-11111111\",\n        \"events\": [\n          \"message\"\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Starting WAHA with Docker Compose\nDESCRIPTION: Command to start the WAHA service in detached mode using Docker Compose after configuring the environment variables and Docker Compose file.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Creating a New Channel via API Request in HTTP\nDESCRIPTION: HTTP POST request to create a new channel with a specified name, description, and optional profile picture.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/channels\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Contacts Response in JSON\nDESCRIPTION: The response format for the get all contacts endpoint. It includes details like contact ID, number, name, and various status flags.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"11231231231@c.us\",\n    \"number\": \"11231231231\",\n    \"name\": \"Contact Name\",\n    \"pushname\": \"Pushname\",\n    \"shortName\": \"Shortname\",\n    \"isMe\": true,\n    \"isGroup\": false,\n    \"isWAContact\": true,\n    \"isMyContact\": true,\n    \"isBlocked\": false\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Stopping a Session in WAHA\nDESCRIPTION: HTTP POST request to stop a session. This operation doesn't log out or delete any data and is idempotent.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_11\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sessions/{session}/stop\n```\n\n----------------------------------------\n\nTITLE: Retrieving Group Participants (HTTP GET)\nDESCRIPTION: Fetches the list of participants in a WhatsApp group.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/groups/{groupId}/participants\n```\n\n----------------------------------------\n\nTITLE: Voice Message API Endpoint\nDESCRIPTION: API endpoint for sending voice messages\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_11\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendVoice\n```\n\n----------------------------------------\n\nTITLE: Deleting a Label via DELETE Request in HTTP\nDESCRIPTION: This snippet demonstrates how to delete an existing label using an HTTP DELETE request to the API endpoint.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/{session}/labels/{labelId}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy for a Session in WAHA\nDESCRIPTION: JSON configurations for setting up a proxy for a session, with examples for both authenticated and non-authenticated proxies.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"proxy\": {\n      \"server\": \"localhost:3128\"\n    }\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"proxy\": {\n      \"server\": \"localhost:3128\",\n      \"username\": \"username\",\n      \"password\": \"P@ssw0rd\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Send Text Message Request Body\nDESCRIPTION: JSON request body structure for sending a text message, including session name, recipient chat ID, and message text.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Channel.SendText.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"12132132130@newsletter\",\n  \"text\": \"Hi there!\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Test Message via WhatsApp API\nDESCRIPTION: JSON payload example for sending a test text message using the WhatsApp API. It demonstrates the structure required for the API call, including the chat ID and message content.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+python/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"chatId\": \"12132132130@c.us\",\n  \"text\": \"Hi there!\",\n  \"session\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: Getting All Channels via API Request in HTTP\nDESCRIPTION: HTTP GET request to retrieve all channels that the user owns or subscribes to. Optional 'role' parameter can filter channels by the user's role.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/channels\n```\n\n----------------------------------------\n\nTITLE: Adding Participants to a Group (HTTP POST)\nDESCRIPTION: Adds new participants to a WhatsApp group. Requires a list of participant IDs in the request body.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_9\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/groups/{groupId}/participants/add\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"participants\": [\n    {\n      \"id\": \"123123123123@c.us\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Contact vCard via API (Fields Format)\nDESCRIPTION: API endpoint for sending contact information using a structured fields format. This allows you to send contact details by specifying individual fields like fullName, organization, phoneNumber, and whatsappId.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_29\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendContactVcard\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"79111111@c.us\",\n  \"contacts\": [\n    {\n      \"fullName\": \"John Doe\",\n      \"organization\": \"Company Name\",\n      \"phoneNumber\": \"+91 11111 11111\",\n      \"whatsappId\": \"911111111111\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Forwarding Messages in WhatsApp API\nDESCRIPTION: This API endpoint allows forwarding a message to another chat. The target chat must be one that you have previously chatted with.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_23\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/forwardMessage\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"chatId\": \"11111111111@c.us\",\n  \"messageId\": \"false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA\",\n  \"session\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing and Running WAHA Docker Container\nDESCRIPTION: Commands to download and run the WAHA Docker container for accessing the WhatsApp API. It sets up webhook URL and events for notification integration.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+kotlin/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Download the image\ndocker pull devlikeapro/waha\n# Run the docker container\ndocker run -it --rm --network=host -e WHATSAPP_HOOK_URL=http://localhost:5000/bot -e \"WHATSAPP_HOOK_EVENTS=*\" --name waha devlikeapro/waha\n\n# It prints logs and the last line must be\n# WhatsApp API is running on: http://[::1]:3000\n```\n\n----------------------------------------\n\nTITLE: Message Webhook Payload with S3 Media Configuration\nDESCRIPTION: Example JSON payload showing the message webhook structure when S3 storage is enabled, including media file information and S3 bucket details.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/storages/index.md#2025-04-20_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"engine\": \"WEBJS\",\n  \"payload\": {\n    \"id\": \"true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"hasMedia\": true,\n    \"media\": {\n        \"url\": \"http://localhost:3000/api/files/true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.jpg\",\n        \"mimetype\": \"image/jpeg\",\n        \"filename\": null,\n        \"s3\": {\n            \"Bucket\": \"bucket-name\",\n            \"Key\": \"/default/true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.jpg\"\n        },\n        \"error\": null\n    }\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Session Status Updates in JSON\nDESCRIPTION: Illustrates the payload structure for session status changes. This event is crucial for tracking the lifecycle of a WhatsApp session, including QR code scanning and operational status.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"event\": \"session.status\",\n    \"session\": \"default\",\n    \"me\": {\n        \"id\": \"7911111@c.us\",\n        \"pushName\": \"~\"\n    },\n    \"payload\": {\n        \"status\": \"WORKING\"\n    },\n    \"engine\": \"WEBJS\",\n    \"environment\": {\n        \"version\": \"2023.10.12\",\n        \"engine\": \"WEBJS\",\n        \"tier\": \"PLUS\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Text Status with HTTP Request\nDESCRIPTION: HTTP POST request for sending a text status message to WhatsApp contacts with customizable options like mentions and quoted messages.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_11\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/status\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"text\": \"Have a look! https://waha.devlike.pro/\"\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Group Security Settings for Message Sending (HTTP PUT)\nDESCRIPTION: Updates the group settings to allow only admins to send messages. Returns true if successful, false if user lacks permissions.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{session}/groups/{groupId}/settings/security/messages-admin-only\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"adminsOnly\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Label Creation Request Body with Color in JSON\nDESCRIPTION: This snippet shows the JSON body structure for creating a new label, specifying the label name and color using the numeric color code.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"New Client\",\n  \"color\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Location via WhatsApp API\nDESCRIPTION: API endpoint for sending location coordinates with a title. This allows sharing a specific geographical position by providing latitude, longitude, and a descriptive title for the location.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_32\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendLocation\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"chatId\": \"11111111111@c.us\",\n  \"latitude\": 38.8937255,\n  \"longitude\": -77.0969763,\n  \"title\": \"Our office\",\n  \"session\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: Replying to Interactive Buttons via WhatsApp API\nDESCRIPTION: API endpoint for programmatically responding to interactive buttons sent via the Official Business API. This is useful for testing or automating responses to button messages.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_33\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/send/buttons/reply\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"chatId\": \"11111111111@c.us\",\n  \"replyTo\": \"false_11111111111@c.us_AAAAAAAAAAAAAAAAA\",\n  \"selectedDisplayText\": \"No\",\n  \"selectedButtonID\": \"button:id\",\n  \"session\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Status Message to Contacts\nDESCRIPTION: Endpoint to send a status message to a specified list of contacts. Supports sending to contact chunks of 256-512 contacts for better error handling, with a default chunk size of 5,000 if contacts parameter is null.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_20\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/status/text\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"AAAAAAAAA\",\n  \"contacts\": [\"11111111111@c.us\", \"88888888888@c.us\", \"...\"],\n  \"text\": \"Check this out!\"\n}\n```\n\n----------------------------------------\n\nTITLE: Quick Reply Button Configuration for WhatsApp\nDESCRIPTION: JSON configuration for creating a quick reply button in interactive messages. Quick reply buttons allow users to send predefined text responses with a single tap.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_35\n\nLANGUAGE: json\nCODE:\n```\n{\n  // Optional id\n  // \"id\": \"123\",\n  \"type\": \"reply\",\n  \"text\": \"I am good!\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Group Invite Code (HTTP GET)\nDESCRIPTION: Fetches the invite code for a WhatsApp group. The code can be used to create an invite link in the format 'https://chat.whatsapp.com/{inviteCode}'.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_13\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/groups/{groupId}/invite-code\n```\n\n----------------------------------------\n\nTITLE: Sending Image Status with HTTP Request\nDESCRIPTION: HTTP POST request for sending an image status to WhatsApp contacts with optional caption text.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_12\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/status\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"image\": \"https://picsum.photos/300/200\",\n  \"text\": \"My caption\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Channel Reaction API Endpoint\nDESCRIPTION: HTTP endpoint and payload structure for sending reactions to channel messages. Supports two message ID formats based on channel subscription status.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_26\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/reaction\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"messageId\": \"false_11111111111@newsletter_AAAAAAAAAAAAAAAAAAAA\",\n  \"reaction\": \"👍\",\n  \"session\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: Label Creation Request Body with Color Hex in JSON\nDESCRIPTION: This snippet shows an alternative JSON body structure for creating a new label, specifying the label name and color using the hex color code.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"New Client\",\n  \"colorHex\" : \"#64c4ff\"\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Incoming Messages in JSON Format\nDESCRIPTION: Details the structure of incoming message events, including text, audio, and file messages. This payload contains essential information about the message, sender, and any attached media.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"engine\": \"WEBJS\",\n  \"payload\": {\n    \"id\": \"true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"timestamp\": 1667561485,\n    \"from\": \"11111111111@c.us\",\n    \"fromMe\": true,\n    \"source\": \"app\",\n    \"to\": \"11111111111@c.us\",\n    \"body\": \"Hi there!\",\n    \"hasMedia\": false,\n    \"ack\": 1,\n    \"vCards\": [],\n    \"_data\": {\n        ...\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Call Button Configuration for WhatsApp\nDESCRIPTION: JSON configuration for creating a call button in interactive messages. Call buttons initiate a phone call to the specified number when tapped, facilitating direct voice communication.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_37\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"call\",\n  \"text\": \"Call us\",\n  \"phoneNumber\": \"+1234567890\"\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Media Message Structure in WAHA Core\nDESCRIPTION: JSON structure for receiving media messages in WAHA Core, showing the message event payload including media file information with URL, mimetype, and filename properties.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-10/index.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"timestamp\": 1667561485,\n    \"body\": \"Check this out (caption for the media)!\",\n    \"from\": \"11111111111@c.us\",\n    \"hasMedia\": true,\n    \"media\": {\n      \"url\": \"http://localhost:3000/api/files/true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.jpg\",\n      \"mimetype\": \"image/jpeg\",\n      \"filename\": null\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Text Message to WhatsApp Channel via cURL\nDESCRIPTION: Command to send a text message to a WhatsApp Channel using the WAHA API. The chatId must be replaced with the actual channel ID obtained in the previous step.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/how-to-send-messages-to-channels/index.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X 'POST' \\\n  'http://localhost:3000/api/sendText' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"chatId\": \"123123123123@newsletter\",\n  \"text\": \"Hi there!\",\n  \"session\": \"default\"\n}'\n```\n\n----------------------------------------\n\nTITLE: Running WAHA Docker Container with Environment Variables\nDESCRIPTION: Example command showing how to run the WAHA docker container with custom environment variables. Sets worker ID and QR code printing configuration.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/config/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -e \"WAHA_WORKER_ID=waha\" -e WAHA_PRINT_QR=False devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: Configuring WhatsApp Session with Authenticated Proxy\nDESCRIPTION: JSON configuration for setting up a WhatsApp session with a proxy server that requires username and password authentication.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/proxy/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"proxy\": {\n      \"server\": \"localhost:3128\",\n      \"username\": \"username\",\n      \"password\": \"P@ssw0rd\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Profile Details in WAHA 2025.2\nDESCRIPTION: HTTP GET request to retrieve profile details using the new Profile API in WAHA 2025.2.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2025-2/index.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{SESSION}/profile\n```\n\n----------------------------------------\n\nTITLE: Pinning a Message in WAHA API\nDESCRIPTION: HTTP request and JSON payload for pinning a message in WhatsApp via WAHA API. The duration parameter specifies how long the message should remain pinned (in seconds), with common options for 24 hours, 7 days, or 30 days.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-11/index.md#2025-04-20_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/chats/{chatId}/messages/{messageId}/pin\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"duration\": 86400\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"success\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Unpinning a Message in WAHA API\nDESCRIPTION: HTTP request and response for unpinning a previously pinned message in WhatsApp via WAHA API. The endpoint requires the session, chat ID, and message ID to identify the specific message to unpin.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-11/index.md#2025-04-20_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/chats/{chatId}/messages/{messageId}/unpin\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"success\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Labels for a Chat via PUT Request in HTTP\nDESCRIPTION: This snippet demonstrates how to update the labels associated with a specific chat using an HTTP PUT request to the API endpoint.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_12\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{session}/labels/chats/{chatId}/\n```\n\n----------------------------------------\n\nTITLE: Using Python Requests with API Key Authentication\nDESCRIPTION: This Python snippet demonstrates how to make authenticated requests to the WAHA API by including the required X-Api-Key header with the secret key value.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/security/index.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nimport requests\n\nheaders = {\n  'Content-type': 'application/json',\n  'X-Api-Key': 'yoursecretkey',\n}\nrequests.get(\"http://localhost:3000/api/sessions\", headers=headers)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Group Security Settings for Info Editing (HTTP GET)\nDESCRIPTION: Gets the group settings to check if only admins are allowed to edit group info (title, description, photo).\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/groups/{groupId}/settings/security/info-admin-only\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"adminsOnly\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Send Image Status Base64 - JSON Request\nDESCRIPTION: JSON structure for sending image status using base64 encoded image data.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": {\n    \"mimetype\": \"image/jpeg\",\n    \"data\": \"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\"\n  },\n  \"caption\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Chat Overview\nDESCRIPTION: Endpoint for retrieving chat overview information including chat ID, name, picture and last message. Used by Chat UI clients.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/chats/index.md#2025-04-20_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/chats/overview?limit=20&offset=0\n```\n\n----------------------------------------\n\nTITLE: Updating WhatsApp Profile Name via PUT Request\nDESCRIPTION: This API endpoint allows you to set a new name for your WhatsApp profile. It requires a JSON body with the new name and returns a success status.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/profile/index.md#2025-04-20_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{SESSION}/profile/name\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"New Name\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"success\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Channels by Role via API Request in HTTP\nDESCRIPTION: HTTP GET request to filter channels by the user's role, which can be OWNER, ADMIN, or SUBSCRIBER.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/channels?role=OWNER\n```\n\n----------------------------------------\n\nTITLE: Message Pin Request\nDESCRIPTION: Request body format for pinning messages with customizable duration.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/chats/index.md#2025-04-20_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"duration\": 86400\n}\n```\n\n----------------------------------------\n\nTITLE: Upsert Label Request Body in JSON\nDESCRIPTION: This snippet shows the JSON body structure for updating labels associated with a chat, providing a full list of labels to be set.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"labels\": [\n    {\n      \"id\": \"1\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Presence via HTTP POST (JSON)\nDESCRIPTION: Demonstrates how to set global or chat-related presence using a POST request to the API. Includes examples for setting typing status, clearing typing state, and setting global online/offline status.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/presence/index.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/presence\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"chatId\": \"111111111@c.us\",\n  \"presence\": \"typing\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"chatId\": \"111111111@c.us\",\n  \"presence\": \"paused\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"presence\": \"online\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"presence\": \"offline\"\n}\n```\n\n----------------------------------------\n\nTITLE: Removing Participants from a Group (HTTP POST)\nDESCRIPTION: Removes participants from a WhatsApp group. Requires a list of participant IDs in the request body.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_10\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/groups/{groupId}/participants/remove\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"participants\": [\n    {\n      \"id\": \"123123123123@c.us\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Generating QR Code for Session Authentication via HTTP GET Request\nDESCRIPTION: Retrieves a QR code for authenticating a new session. Supports multiple formats including binary image, base64, and raw data.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_20\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/auth/qr\n```\n\n----------------------------------------\n\nTITLE: Send Status to Specific Contacts - JSON Request\nDESCRIPTION: JSON structure for sending a status update to specific WhatsApp contacts, including text content, background color, font selection and target contacts.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"text\": \"Have a look! https://waha.devlike.pro/\",\n  \"contacts\": [\"123123@c.us\", \"3333@c.us\"],\n  \"backgroundColor\": \"#38b42f\",\n  \"font\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Updating WhatsApp Profile Status via PUT Request\nDESCRIPTION: This API endpoint allows you to set a new status (About) message for your WhatsApp profile. It requires a JSON body with the new status and returns a success status.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/profile/index.md#2025-04-20_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{SESSION}/profile/status\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"New Status\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"success\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Label List Response Structure in JSON\nDESCRIPTION: This snippet shows the structure of the JSON response when retrieving a list of labels, including label ID, name, color, and color hex code.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"1\",\n    \"name\": \"New Client\",\n    \"color\": 1,\n    \"colorHex\": \"#64c4ff\"\n  },\n  ...\n]\n```\n\n----------------------------------------\n\nTITLE: Starring and Unstarring Messages in WhatsApp API\nDESCRIPTION: This API endpoint allows starring or unstarring messages. Set the 'star' field to true for starring and false for unstarring.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_28\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/star\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"messageId\": \"false_71111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n  \"chatId\": \"71111111111@c.us\",\n  \"star\": true,\n  \"session\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: Label Added to Chat Event Structure in JSON\nDESCRIPTION: This snippet demonstrates the structure of a label.chat.added event payload, including the label ID, chat ID, and associated metadata.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"label.chat.added\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"labelId\": \"6\",\n    \"chatId\": \"11111111111@c.us\",\n    \"label\": null <=== right after scanning QR it can be null. \n  },\n  \"engine\": \"NOWEB\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Restarting a Session in WAHA\nDESCRIPTION: HTTP POST request to restart a session. If the session is already running, it will be stopped and then started again.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_12\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sessions/{session}/restart\n```\n\n----------------------------------------\n\nTITLE: WhatsApp Group Creation - Request Body\nDESCRIPTION: JSON payload structure for creating a WhatsApp group. Requires the group name and an array of participant phone numbers in the format number@c.us.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Groups.Create.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"Group name\",\n  \"participants\": [\n    {\"id\": \"123123123123@c.us\"}\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Revoking and Regenerating Group Invite Code (HTTP POST)\nDESCRIPTION: Invalidates the current group invite code and generates a new one for the WhatsApp group.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_14\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/groups/{groupId}/invite-code/revoke\n```\n\n----------------------------------------\n\nTITLE: Requesting Pairing Code for Session Authentication via HTTP POST Request\nDESCRIPTION: Generates a pairing code for linking a session with a phone number. Requires the phone number in the request body.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_21\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/auth/request-code\n```\n\n----------------------------------------\n\nTITLE: Editing Messages in WhatsApp API\nDESCRIPTION: This API endpoint allows editing text messages or captions in media messages. It supports disabling link preview generation.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_24\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{session}/chats/{chatId}/messages/{messageId}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"text\": \"Hello, world!\",\n  \"linkPreview\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Group Participant Changes with group.v2.participants Event in JSON\nDESCRIPTION: This event is triggered when someone joins, leaves, or has a role change in a WhatsApp group. It contains information about the type of change (join, leave, promote, demote), the group ID, and details about the affected participants including their IDs and roles.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/events-group.v2.participants.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"group.v2.participants\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"type\": \"join\",\n    \"timestamp\": 1666943582,\n    \"group\": {\n      \"id\": \"123456789@g.us\"\n    },\n    \"participants\": [\n      {\n        \"id\": \"123456789@c.us\",\n        \"role\": \"participant\"\n      }\n    ],\n    \"_data\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Label via PUT Request in HTTP\nDESCRIPTION: This snippet demonstrates how to update an existing label using an HTTP PUT request to the API endpoint.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{session}/labels/{labelId}\n```\n\n----------------------------------------\n\nTITLE: Searching Channels by View in WAHA 2025.2\nDESCRIPTION: HTTP POST request to search public channels by view using the new Search Channels API in WAHA 2025.2 Plus version.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2025-2/index.md#2025-04-20_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/channels/search/by-view\n```\n\n----------------------------------------\n\nTITLE: Capturing WhatsApp Session Screenshot via HTTP GET Request\nDESCRIPTION: Retrieves a screenshot of the session's screen. Can return binary image or base64 encoded data based on the Accept header.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_18\n\nLANGUAGE: http\nCODE:\n```\nGET /api/screenshot?session=default\n```\n\n----------------------------------------\n\nTITLE: Sending Text Message via WhatsApp API (curl)\nDESCRIPTION: curl command to send a text message using the WAHA API. Replace '123123' with the recipient's phone number.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/quick-start/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X 'POST' \\\n  'http://localhost:3000/api/sendText' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"chatId\": \"123123@c.us\",\n  \"text\": \"Hi there!\",\n  \"session\": \"default\"\n}'\n```\n\n----------------------------------------\n\nTITLE: Creating WhatsApp Group - HTTP Request\nDESCRIPTION: HTTP POST request endpoint for creating a new WhatsApp group. The {session} parameter in the URL should be replaced with the actual session identifier.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Groups.Create.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/groups\n```\n\n----------------------------------------\n\nTITLE: Sending Video Status with URL in Request Body\nDESCRIPTION: JSON request body format for sending a video status using a URL. Includes the file MIME type, URL to the video file, and an optional backgroundColor parameter.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": {\n    \"mimetype\": \"video/mp4\",\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/video.mp4\"\n  },\n  \"backgroundColor\": \"#38b42f\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring NOWEB Engine Settings\nDESCRIPTION: JSON configuration for NOWEB engine settings, including the option to mark the session as online and store configuration. This configuration can be used when creating a new session.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/engines/noweb/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"noweb\": {\n      \"markOnline\": false,\n      \"store\": {\n        ...\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running NOWEB Engine with Docker\nDESCRIPTION: Commands to run the NOWEB engine using Docker for both Plus and Core versions of WAHA. These commands set the WhatsApp default engine to NOWEB and mount a volume for session storage in the Plus version.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/engines/noweb/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Plus\ndocker run -v `pwd`/.sessions:/app/.sessions -e \"WHATSAPP_DEFAULT_ENGINE=NOWEB\" devlikeapro/waha-plus\n\n# Core\ndocker run -it -e \"WHATSAPP_DEFAULT_ENGINE=NOWEB\" devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: Handling Group Update Event in JSON\nDESCRIPTION: This snippet demonstrates the structure of a group.v2.update event payload. It includes the event type, session identifier, and details about the updated group information such as ID, subject, timestamp, and engine-specific data.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/events-group.v2.update.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"group.v2.update\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"group\": {\n      \"id\": \"1231231232@g.us\",\n      \"subject\": \"New Work Group Name\"\n    },\n    \"timestamp\": 789456123,\n    \"_data\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Status Messages from Chat\nDESCRIPTION: HTTP GET request for fetching status messages using the regular chat messages endpoint with status@broadcast as the chatId.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_16\n\nLANGUAGE: http\nCODE:\n```\nGET /api/default/chats/status%40broadcast/messages?downloadMedia=true&limit=100\n```\n\n----------------------------------------\n\nTITLE: Upserting Label in WhatsApp Integration (JSON)\nDESCRIPTION: This snippet demonstrates the JSON structure for a label.upsert event. It includes the event type, session, payload with label details, and engine information.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"label.upsert\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"10\",\n    \"name\": \"Label Name\",\n    \"color\": 14,\n    \"colorHex\": \"#00a0f2\"\n  },\n  \"engine\": \"NOWEB\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Label to Chat in WhatsApp Integration (JSON)\nDESCRIPTION: This snippet illustrates the JSON structure for a label.chat.added event. It includes the event type, session, payload with label and chat details, and engine information. Note that the label can be null right after scanning a QR code.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"label.chat.added\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"labelId\": \"6\",\n    \"chatId\": \"11111111111@c.us\",\n    \"label\": null <=== right after scanning QR it can be null. \n  },\n  \"engine\": \"NOWEB\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Text to a Channel Request Body in JSON\nDESCRIPTION: JSON body for sending a text message to a channel using the regular sendText endpoint. User must be OWNER or ADMIN of the channel.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_23\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"12132132130@newsletter\",\n  \"text\": \"Hi there!\"\n}\n```\n\n----------------------------------------\n\nTITLE: Joining WhatsApp Group\nDESCRIPTION: API endpoint to join a WhatsApp group using invite code or URL.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/groups/join\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"code\": \"invitecode\"\n}\n```\n\n----------------------------------------\n\nTITLE: Handling group.v2.join Event in WhatsApp Integration\nDESCRIPTION: JSON structure for the group.v2.join event that occurs when a user joins a WhatsApp group. The payload contains detailed group information including ID, subject, description, invite link, permission settings, and participant data.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/events-group.v2.join.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"group.v2.join\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"group\": {\n      \"id\": \"1231231232@g.us\",\n      \"subject\": \"Work Group\",\n      \"description\": \"Group description\",\n      \"invite\": \"https://chat.whatsapp.com/invitecode\",\n      \"membersCanAddNewMember\": true,\n      \"membersCanSendMessages\": true,\n      \"newMembersApprovalRequired\": true,\n      \"participants\": [\n        {\n          \"id\": \"99999@c.us\",\n          \"role\": \"participant\"\n        }\n      ]\n    },\n    \"timestamp\": 789456123,\n    \"_data\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Video Status with HTTP Request\nDESCRIPTION: HTTP POST request for sending a video status to WhatsApp contacts with optional caption text.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_13\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/status\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"video\": \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\",\n  \"text\": \"My caption\"\n}\n```\n\n----------------------------------------\n\nTITLE: Video Send Request - BASE64 Method\nDESCRIPTION: JSON request body for sending video using BASE64 encoded data. Includes chat ID, caption, and file metadata configuration.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"chatId\": \"11111111111@c.us\",\n  \"caption\": \"Watch this video!\",\n  \"asNote\": false,\n  \"file\": {\n    \"mimetype\": \"video/mp4\",\n    \"filename\": \"video.mp4\",\n    \"data\": \"AAAAGGZ0eXBtcDQyAAAAAGlzb21tcDQyAAAHEW1vb3...[truncated]\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Message Reaction Event Payload in WAHA\nDESCRIPTION: JSON structure for a message reaction event, showing who reacted to a message, the emoji used, and which message received the reaction. Empty reaction text indicates removal of a reaction.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/receive-messages/index.md#2025-04-20_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"event\": \"message.reaction\",\n    \"session\": \"default\",\n    \"me\": {\n        \"id\": \"79222222222@c.us\",\n        \"pushName\": \"WAHA\"\n    },\n    \"payload\": {\n        \"id\": \"false_79111111@c.us_11111111111111111111111111111111\",\n        \"from\": \"79111111@c.us\",\n        \"fromMe\": false,\n        \"participant\": \"79111111@c.us\",\n        \"to\": \"79111111@c.us\",\n        \"timestamp\": 1710481111.853,\n        \"reaction\": {\n            \"text\": \"🙏\",\n            \"messageId\": \"true_79111111@c.us_11111111111111111111111111111111\"\n        }\n    },\n    \"engine\": \"WEBJS\",\n    \"environment\": {\n        \"version\": \"2024.3.3\",\n        \"engine\": \"WEBJS\",\n        \"tier\": \"PLUS\",\n        \"browser\": \"/usr/bin/google-chrome-stable\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Contact's 'About' Information Response in JSON\nDESCRIPTION: The response format for the get contact's 'about' information endpoint. It returns the 'about' text set by the contact.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/index.md#2025-04-20_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"about\": \"Hi, I use WhatsApp!\"\n}\n```\n\n----------------------------------------\n\nTITLE: Making Video Status POST Request in WhatsApp API\nDESCRIPTION: HTTP POST endpoint for sending video status updates to a WhatsApp session. Requires a session identifier in the URL path.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/status/video\n```\n\n----------------------------------------\n\nTITLE: Send Image Status - HTTP Request\nDESCRIPTION: HTTP POST endpoint for sending image status updates.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/status/image\n```\n\n----------------------------------------\n\nTITLE: Retrieving Channel Messages API Endpoint\nDESCRIPTION: HTTP endpoint for fetching messages from a channel with media download option and limit parameter.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_29\n\nLANGUAGE: http\nCODE:\n```\nGET /api/default/chats/123%40newsletter/messages?downloadMedia=true&limit=100\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"true_111111111111111111@newsletter_1111111111111111111111\",\n    \"timestamp\": 1720775833,\n    \"from\": \"111111111111111111@newsletter\",\n    \"fromMe\": true,\n    \"body\": \"Caption\",\n    \"hasMedia\": true,\n    \"media\": {\n      \"mimetype\": \"image/jpeg\",\n      \"filename\": null,\n      \"url\": \"http://localhost:3000/api/files/1111111111111111111111.jpeg\",\n      \"error\": null\n    },\n    \"mediaUrl\": \"http://localhost:3000/api/files/1111111111111111111111.jpeg\",\n    \"ack\": 0,\n    \"ackName\": \"PENDING\",\n    \"_data\": {}\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Session Webhook in JSON\nDESCRIPTION: A simple example of defining webhook configuration for a session when starting it with a POST request to /api/sessions/. This configuration specifies the webhook URL and subscribes to message events.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"webhooks\": [\n      {\n        \"url\": \"https://webhook.site/11111111-1111-1111-1111-11111111\",\n        \"events\": [\n          \"message\"\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Labels via GET Request in HTTP\nDESCRIPTION: This snippet demonstrates how to get a list of labels for a session using an HTTP GET request to the API endpoint.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/labels\n```\n\n----------------------------------------\n\nTITLE: Video Status Request Body\nDESCRIPTION: JSON request body structure for uploading a video status. Includes file information with MIME type and URL, plus optional backgroundColor parameter.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Status.SendVideo.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": {\n    \"mimetype\": \"video/mp4\",\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/video.mp4\"\n  },\n  \"backgroundColor\": \"#38b42f\"\n}\n```\n\n----------------------------------------\n\nTITLE: Starting a Session in WAHA\nDESCRIPTION: HTTP POST request to start a session. This is an idempotent operation that only starts the session if it's not already running.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_10\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sessions/{session}/start\n```\n\n----------------------------------------\n\nTITLE: Checking Docker and Docker Compose Versions\nDESCRIPTION: Commands to verify Docker and Docker Compose versions are up to date before installation. Recommended versions are Docker 26.1.3 or higher and Docker Compose v2.27.0 or higher.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ docker --version\nDocker version 26.1.3, build b72abbb\n$ docker compose version\nDocker Compose version v2.27.0\n```\n\n----------------------------------------\n\nTITLE: Demoting Admins to Regular Users (HTTP POST)\nDESCRIPTION: Demotes selected admin participants to regular user status in a WhatsApp group. Requires a list of participant IDs in the request body.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_12\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/groups/{groupId}/admin/demote\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"participants\": [\n    {\n      \"id\": \"123123123123@c.us\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Health Check Request in WAHA Plus\nDESCRIPTION: HTTP request to verify the health of the WAHA Plus service, checking various system components and dependencies.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_13\n\nLANGUAGE: http\nCODE:\n```\nGET /health\n```\n\n----------------------------------------\n\nTITLE: Send Image Status URL - JSON Request\nDESCRIPTION: JSON structure for sending image status using a URL source.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": {\n    \"mimetype\": \"image/jpeg\",\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/dev.likeapro.jpg\"\n  },\n  \"caption\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Send Text Status to Specific Contacts - JSON Request\nDESCRIPTION: JSON structure for sending text status to specific contacts with styling options.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"text\": \"Have a look! https://waha.devlike.pro/\",\n  \"backgroundColor\": \"#38b42f\",\n  \"font\": 1,\n  \"contacts\": [\n    \"55xxxxxxxxxxx@c.us\",\n    \"55xxxxxxxxxxx@c.us\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Standard Message Event Payload in WAHA\nDESCRIPTION: JSON structure of a standard incoming message event, containing message ID, timestamp, sender information, message content, and metadata such as media status and acknowledgment level.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/receive-messages/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"timestamp\": 1667561485,\n    \"from\": \"11111111111@c.us\",\n    \"fromMe\": true,\n    \"to\": \"11111111111@c.us\",\n    \"body\": \"Hi there!\",\n    \"hasMedia\": false,\n    \"ack\": 1,\n    \"vCards\": [],\n    \"_data\": {\n      ...\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Messages from WAHA API with cURL\nDESCRIPTION: cURL command to retrieve messages from a specific chat using the WAHA API, with parameters for chat ID, message limit, and session name.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/receive-messages/index.md#2025-04-20_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X 'GET' \\\n  'http://localhost:3000/api/messages?chatId=11111111111%40c.us&limit=1000&session=default' \\\n  -H 'accept: application/json'\n```\n\n----------------------------------------\n\nTITLE: Creating a Label with Color via POST Request in HTTP\nDESCRIPTION: This snippet demonstrates how to create a new label using an HTTP POST request, specifying the label name and color.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/labels\n```\n\n----------------------------------------\n\nTITLE: Channel Creation Request Body in JSON\nDESCRIPTION: JSON body for creating a new channel, including name, description, and picture details with mimetype, filename, and URL for the channel profile image.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"Channel Name\",\n  \"description\": \"Channel Description\",\n  \"picture\": {\n    \"mimetype\": \"image/jpeg\",\n    \"filename\": \"filename.jpg\",\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/dev.likeapro.jpg\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Multiple Contacts via API (Combined Format)\nDESCRIPTION: API endpoint for sending multiple contacts using both vCard and fields formats in a single request. This combined approach allows for flexibility in how contact information is formatted and sent.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_31\n\nLANGUAGE: json\nCODE:\n```\n  {\n  \"chatId\": \"79111111@c.us\",\n  \"contacts\": [\n    {\n      \"vcard\": \"BEGIN:VCARD\\nVERSION:3.0\\nFN:Jane Doe\\nORG:Company Name;\\nTEL;type=CELL;type=VOICE;waid=911111111111:+91 11111 11111\\nEND:VCARD\"\n    },\n    {\n      \"fullName\": \"John Doe\",\n      \"organization\": \"Company Name\",\n      \"phoneNumber\": \"+91 11111 11111\",\n      \"whatsappId\": \"911111111111\"\n    }\n  ],\n  \"session\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: Voice Message Request Body with URL\nDESCRIPTION: JSON request body format for sending voice messages using a URL source\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"11111111111@c.us\",\n  \"file\": {\n    \"mimetype\": \"audio/ogg; codecs=opus\",\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/dev.likeapro.opus\"\n  },\n  \"caption\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Full Session Configuration in WAHA\nDESCRIPTION: Comprehensive JSON configuration for a session, including debug mode, NOWEB engine settings, metadata, webhooks, and proxy configuration.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"debug\": true,\n    \"noweb\": {\n      \"store\": {\n        \"enabled\": true,\n        \"fullSync\": false\n      }\n    },\n    \"metadata\": {\n      \"user.id\": \"123\",\n      \"user.email\": \"email@example.com\"\n    },\n    \"webhooks\": [\n      {\n        \"url\": \"https://webhook.site/11111111-1111-1111-1111-11111111\",\n        \"events\": [\n          \"message\"\n        ],\n        \"hmac\": {\n          \"key\": \"your-secret-key\"\n        },\n        \"customHeaders\": [\n          {\n            \"name\": \"X-My-Custom-Header\",\n            \"value\": \"Value\"\n          }\n        ],\n        \"retries\": {\n          \"policy\": \"constant\",\n          \"delaySeconds\": 2,\n          \"attempts\": 15\n        }\n      }\n    ],\n    \"proxy\": {\n      \"server\": \"localhost:3128\",\n      \"username\": \"username\",\n      \"password\": \"P@ssw0rd\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Label in WAHA API\nDESCRIPTION: HTTP request and JSON payloads for updating an existing label in WhatsApp via WAHA API. Demonstrates both color code and hexadecimal color specification options.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-11/index.md#2025-04-20_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{session}/labels/{labelId}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"New Client\",\n  \"color\": 1\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"New Client\",\n  \"colorHex\" : \"#64c4ff\"\n}\n```\n\n----------------------------------------\n\nTITLE: Message Acknowledgment Event Payload in WAHA\nDESCRIPTION: JSON structure for a message.ack event triggered when the server or recipient receives, reads, or plays a message.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/receive-messages/index.md#2025-04-20_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message.ack\",\n  \"session\": \"default\",\n  \"payload\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Message.any Event Payload Structure in WAHA\nDESCRIPTION: JSON example of the message.any event fired for all message creations including the user's own messages. The payload structure is the same as the standard message event.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/receive-messages/index.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message.any\",\n  \"session\": \"default\",\n  \"payload\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: JSON response for WhatsApp Labels API\nDESCRIPTION: Example JSON response returned by the Labels API endpoint. It contains an array of label objects, each with an ID, name, color code, and color hex value.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-8/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"1\",\n    \"name\": \"New Client\",\n    \"color\": 1,\n    \"colorHex\": \"#64c4ff\"\n  },\n  ...\n]\n```\n\n----------------------------------------\n\nTITLE: Message Waiting Event Payload in WAHA\nDESCRIPTION: JSON structure for a message.waiting event that occurs when the 'Waiting for this message' status appears in WhatsApp, including message details and engine information.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/receive-messages/index.md#2025-04-20_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message.waiting\",\n  \"session\": \"default\",\n  \"engine\": \"WEBJS\",\n  \"payload\": {\n    \"id\": \"true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"timestamp\": 1667561485,\n    \"from\": \"11111111111@c.us\",\n    \"fromMe\": true,\n    \"to\": \"11111111111@c.us\",\n    ...\n    \"_data\": {\n      ...\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running VENOM Docker Containers\nDESCRIPTION: Docker commands to run VENOM engine in both Core and Plus versions. The commands include environment variable configuration for the WhatsApp engine and volume mounting for session persistence.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/engines/venom.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Core\ndocker run -it -e \"WHATSAPP_DEFAULT_ENGINE=VENOM\" devlikeapro/waha\n\n# Plus\ndocker run -v `pwd`/.sessions:/app/.sessions -e \"WHATSAPP_DEFAULT_ENGINE=VENOM\" devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Updating Session Configuration in WAHA\nDESCRIPTION: HTTP PUT request and JSON body to update an existing session's configuration. This operation may restart the session if it's not in STOPPED status.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_9\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/sessions/{session}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"webhooks\": [\n      {\n        \"url\": \"https://webhook.site/11111111-1111-1111-1111-11111111\",\n        \"events\": [\n          \"message\"\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Voice Message Request Body with BASE64\nDESCRIPTION: JSON request body format for sending voice messages using BASE64 encoded file data\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"chatId\": \"11111111111@c.us\",\n  \"file\": {\n    \"mimetype\": \"audio/ogg; codecs=opus\",\n    \"filename\": \"voice-message.mp3\",\n    \"data\": \"T2dnUwACAAAAAAAAAAAAX3UXAAAAAJiLB2IBE09wdXNIZWFkAQE4AcBdAAAAAABPZ2dTAAAAAAAAAAAAAABfdRcBAAAAVVl7zwE+T3B1c1RhZ3MNAAAATGF2ZjYwLjE2LjEwMAEAAAAdAAAAZW5jb2Rlcj1MYXZjNjAuMzEuMTAyIGxpYm9wdXNPZ2dTAACAuwAAAAAAAABfdRcCAAAAL42/Ojb...\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving and Processing WhatsApp Messages with Go and Fiber\nDESCRIPTION: This snippet creates a Fiber web server that listens for POST requests on the '/bot' endpoint. It parses the request body as JSON, checks for a 'message' event, and prints the payload. The server runs on port 3000.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/go/receive-message.md#2025-04-20_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"fmt\"\n    \"github.com/gofiber/fiber/v2\"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    app.Post(\"/bot\", func(c *fiber.Ctx) error {\n        var data map[string]interface{}\n        if err := c.BodyParser(&data); err != nil {\n            return err\n        }\n\n        if event, ok := data[\"event\"].(string); ok && event == \"message\" {\n            fmt.Println(\"Received message:\", data[\"payload\"])\n            // Process message...\n        }\n        return c.SendString(\"OK\")\n    })\n\n    app.Listen(\":3000\")\n}\n```\n\n----------------------------------------\n\nTITLE: Label Upsert Event Structure in JSON\nDESCRIPTION: This snippet demonstrates the structure of a label.upsert event payload, including label details and associated metadata.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"label.upsert\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"10\",\n    \"name\": \"Label Name\",\n    \"color\": 14,\n    \"colorHex\": \"#00a0f2\"\n  },\n  \"engine\": \"NOWEB\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Presence Update Event (JSON)\nDESCRIPTION: Demonstrates the structure of a presence.update webhook event, which provides real-time presence information updates for subscribed chats.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/presence/index.md#2025-04-20_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"event\": \"presence.update\",\n    \"session\": \"default\",\n    \"payload\": {\n        \"id\": \"111111111111111111@g.us\",\n        \"presences\": [\n            {\n                \"participant\": \"11111111111@c.us\",\n                \"lastKnownPresence\": \"typing\",\n                \"lastSeen\": null\n            }\n        ]\n    },\n    \"engine\": \"NOWEB\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Messages in WhatsApp API\nDESCRIPTION: This API endpoint allows deleting messages from a chat. The chatId and messageId in the URL must have @ escaped as %40.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_25\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/{session}/chats/{chatId}/messages/{messageId}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Label in WAHA API\nDESCRIPTION: HTTP request for deleting an existing WhatsApp label using the WAHA API. This endpoint removes the label specified by its ID from the given session.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-11/index.md#2025-04-20_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/{session}/labels/{labelId}\n```\n\n----------------------------------------\n\nTITLE: Updating Profile Picture in WAHA 2025.2\nDESCRIPTION: HTTP PUT request to update the profile picture using the new Profile API in WAHA 2025.2.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2025-2/index.md#2025-04-20_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{session}/profile/picture\n```\n\n----------------------------------------\n\nTITLE: Sending Image to a Channel Request Body in JSON\nDESCRIPTION: JSON body for sending an image to a channel using the regular sendImage endpoint, specifying file details and optional caption.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_24\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"11111111111@newsletter\",\n  \"file\": {\n    \"mimetype\": \"image/jpeg\",\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/dev.likeapro.jpg\",\n    \"filename\": \"filename.jpeg\"\n  },\n  \"caption\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Send Text Status - HTTP Request\nDESCRIPTION: HTTP POST endpoint for sending text status updates, with optional contact targeting.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/status/text\n```\n\n----------------------------------------\n\nTITLE: Checking Phone Number Existence Response in JSON\nDESCRIPTION: The response format for the check phone number existence endpoint. It indicates whether the number exists and provides the chat ID if available.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/index.md#2025-04-20_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"numberExists\": true,\n  \"chatId\": \"123123123@c.us\"\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying WhatsApp API Label Endpoints Table in Markdown\nDESCRIPTION: This markdown snippet presents a table of WhatsApp API endpoints related to label management. It shows the API paths, their descriptions, and compatibility with different platforms (WEBJS, NOWEB, GOWS).\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/features.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **API**                                                                  | WEBJS | NOWEB | GOWS |\n|--------------------------------------------------------------------------|-------|-------|:-----|\n| **Get labels**<br>`GET /api/{session}/labels`                            | ✔️    | ✔️    |      |\n| **Create label**<br>`POST /api/{session}/labels`                         | ✔️    | ✔️    |      |\n| **Update label**<br>`PUT /api/{session}/labels/{labelId}`                | ✔️    | ✔️    |      |\n| **Delete label**<br>`DELETE /api/{session}/labels/{labelId}`             | ✔️    | ✔️    |      |\n| **Get chats by label id**<br>`GET /api/{session}/labels/{labelId}/chats` | ✔️    | ✔️    |      |\n| **Get labels by chat id**<br>`GET /api/{session}/labels/chats/{chatId}/` | ✔️    | ✔️    |      |\n| **PUT labels to chat**<br>`PUT /api/{session}/labels/chats/{chatId}/`    | ✔️    | ✔️    |      |\n```\n\n----------------------------------------\n\nTITLE: Channel Message Event Structure\nDESCRIPTION: JSON structure for incoming channel message events, including message metadata and environment information.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_30\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"me\": {\n    \"id\": \"111111111111@c.us\",\n    \"pushName\": \"Slovakia WAHA\"\n  },\n  \"payload\": {\n    \"id\": \"false_123123@newsletter_11111111111111111111111111111111\",\n    \"timestamp\": 1720776511,\n    \"from\": \"111111111111111111@newsletter\",\n    \"fromMe\": false,\n    \"body\": \"How are you all?! ❤️\",\n    \"hasMedia\": false,\n    \"ack\": null,\n    \"ackName\": \"UNKNOWN\",\n    \"_data\": {}\n  },\n  \"engine\": \"NOWEB\",\n  \"environment\": {\n    \"version\": \"2024.7.4\",\n    \"engine\": \"NOWEB\",\n    \"tier\": \"PLUS\",\n    \"browser\": \"/usr/bin/google-chrome-stable\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Phone Number Existence with HTTP GET Request\nDESCRIPTION: This endpoint allows checking if a phone number is registered on WhatsApp, even if it's not in the user's contact list.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/index.md#2025-04-20_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nGET /api/contacts/check-exists?phone=11231231231&session=default\n```\n\n----------------------------------------\n\nTITLE: Getting a Channel by Invite Code via API Request in HTTP\nDESCRIPTION: HTTP GET request to retrieve channel information using the invite code from the channel's invite URL.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/channels/{inviteCode}\n```\n\n----------------------------------------\n\nTITLE: Deleting Profile Picture in WAHA 2025.2\nDESCRIPTION: HTTP DELETE request to remove the profile picture using the new Profile API in WAHA 2025.2.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2025-2/index.md#2025-04-20_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/{session}/profile/picture\n```\n\n----------------------------------------\n\nTITLE: Configuring PostgreSQL Media Storage in Docker\nDESCRIPTION: This command demonstrates how to set up PostgreSQL for media storage in WAHA. It requires setting two environment variables: WAHA_MEDIA_STORAGE to specify PostgreSQL and WAHA_MEDIA_POSTGRESQL_URL with the connection details.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2025-1/index.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 3000:3000/tcp -it -e WAHA_MEDIA_STORAGE=POSTGRESQL WAHA_MEDIA_POSTGRESQL_URL=postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Unhealthy Response Example in WAHA Plus\nDESCRIPTION: Example of a failed health check response with a MongoDB connection timeout error, showing healthy disk space but database connectivity issue.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"error\",\n  \"info\": {\n    \"mediaFiles.space\": {\n      \"status\": \"up\",\n      \"path\": \"/tmp/whatsapp-files\",\n      \"diskPath\": \"/\",\n      \"free\": 132976623616,\n      \"threshold\": 104857600\n    }\n  },\n  \"error\": {\n    \"mongodb\": {\n      \"status\": \"down\",\n      \"error\": \"Timeout\"\n    }\n  },\n  \"details\": {\n    \"mediaFiles.space\": {\n      \"status\": \"up\",\n      \"path\": \"/tmp/whatsapp-files\",\n      \"diskPath\": \"/\",\n      \"free\": 132976623616,\n      \"threshold\": 104857600\n    },\n    \"mongodb\": {\n      \"status\": \"down\",\n      \"error\": \"Timeout\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Searching Channels by Text via API Request in HTTP\nDESCRIPTION: HTTP POST request to search for public channels by text query, with options to filter by categories.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_13\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/channels/search/by-text\n```\n\n----------------------------------------\n\nTITLE: Channel Search Response in JSON\nDESCRIPTION: JSON response from a channel search, containing pagination information and a list of channel results with their details.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"page\": {\n    \"startCursor\": null,\n    \"endCursor\": \"base64encodedstring\",\n    \"hasNextPage\": true,\n    \"hasPreviousPage\": false\n  },\n  \"channels\": [\n    {\n      \"id\": \"123123123123@newsletter\",\n      \"name\": \"Channel Name\",\n      \"invite\": \"https://www.whatsapp.com/channel/111111111111111111111111\",\n      \"preview\": \"https://mmg.whatsapp.net/m1/v/t24/An&_nc_cat=10\",\n      \"picture\": \"https://mmg.whatsapp.net/m1/v/t24/An&_nc_cat=10\",\n      \"description\": \"string\",\n      \"verified\": true,\n      \"subscribersCount\": 0\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Channel by Invite Code Response in JSON\nDESCRIPTION: JSON response for a channel retrieved by invite code, providing basic channel information without subscriber count.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"111111111111111111@newsletter\",\n  \"name\": \"Channel - Owner - Picture\",\n  \"description\": \"Hi there, I'm new here\",\n  \"invite\": \"https://whatsapp.com/channel/111111111111111111GdZ60l\",\n  \"preview\": \"https://mmg.whatsapp.net/m1/v/t24/123\",\n  \"picture\": \"https://mmg.whatsapp.net/m1/v/t24/123\",\n  \"verified\": false,\n  \"role\": \"OWNER\"\n}\n```\n\n----------------------------------------\n\nTITLE: Channel by ID Response in JSON\nDESCRIPTION: JSON response for a channel retrieved by ID, including additional subscriber count information compared to the channels list response.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"111111111111111111@newsletter\",\n  \"name\": \"Channel - Owner - Picture\",\n  \"description\": \"Hi there, I'm new here\",\n  \"invite\": \"https://whatsapp.com/channel/111111111111111111GdZ60l\",\n  \"preview\": \"https://mmg.whatsapp.net/m1/v/t24/123\",\n  \"picture\": \"https://mmg.whatsapp.net/m1/v/t24/123\",\n  \"verified\": false,\n  \"role\": \"OWNER\",\n  \"subscribersCount\": 12323\n}\n```\n\n----------------------------------------\n\nTITLE: Labels by Chat ID Response Structure in JSON\nDESCRIPTION: This snippet shows the structure of the JSON response when retrieving labels associated with a specific chat, including label details.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"1\",\n    \"name\": \"New Client\",\n    \"color\": 1,\n    \"colorHex\": \"#64c4ff\"\n  },\n  ...\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Contact's 'About' Information with HTTP GET Request\nDESCRIPTION: This endpoint allows fetching the 'about' information of a specific contact using their phone number or chat ID.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/index.md#2025-04-20_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nGET /api/contacts/about?contactId={ID}&session={SESSION}\n```\n\n----------------------------------------\n\nTITLE: Channel Search by Text Request Body in JSON\nDESCRIPTION: JSON body for searching channels by text, specifying search text, categories, limit, and pagination cursor.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"text\": \"Donald Trump\",\n  \"categories\": [],\n  \"limit\": 50,\n  \"startCursor\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Searching Channels by Text in WAHA 2025.2\nDESCRIPTION: HTTP POST request to search public channels by text using the new Search Channels API in WAHA 2025.2 Plus version.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2025-2/index.md#2025-04-20_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/channels/search/by-text\n```\n\n----------------------------------------\n\nTITLE: Replying to a Message using API\nDESCRIPTION: HTTP request example showing how to reply to a specific message by including the reply_to parameter in a sendText request to the WAHA API.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-9/index.md#2025-04-20_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendText\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"11111111111@c.us\",\n  \"reply_to\": \"false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA\",\n  \"text\": \"Reply text\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Channel via API Request in HTTP\nDESCRIPTION: HTTP DELETE request to delete a channel where the user is the OWNER. The @ symbol in the channel ID must be escaped as %40.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/{session}/channels/{ID}\n```\n\n----------------------------------------\n\nTITLE: Health Check Response Format in WAHA Plus\nDESCRIPTION: JSON structure for health check responses showing status, metrics information, error details, and additional metric details.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"ok\",\n  \"info\": {\n    \"metric1\": {\n      \"field\": \"value\"\n    },\n    \"metric2\": {\n      \"field\": \"value\"\n    }\n  },\n  \"error\": {},\n  \"details\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Channel Information JSON Response Structure\nDESCRIPTION: This JSON structure represents the response body for the channels API endpoint. It contains an array of channel objects, each including properties such as id, name, description, invite link, picture URL, and the user's role in the channel.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Channels.List.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"123@newsletter\",\n    \"name\": \"Local News\",\n    \"description\": \"...\",\n    \"invite\": \"...\",\n    \"picture\": \"...\",\n    \"role\": \"ADMIN\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Label Deleted Event Structure in JSON\nDESCRIPTION: This snippet shows the structure of a label.deleted event payload, including the deleted label's ID and associated metadata.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"label.deleted\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"10\",\n    \"name\": \"\",\n    \"color\": 14,\n    \"colorHex\": \"#00a0f2\"\n  },\n  \"engine\": \"NOWEB\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a WhatsApp Session via HTTP DELETE Request\nDESCRIPTION: Sends a DELETE request to remove a specific session. This operation logs out the session and stops it if running.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_14\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/sessions/{session}\n```\n\n----------------------------------------\n\nTITLE: Search Countries Response in JSON\nDESCRIPTION: JSON response with the list of available countries for channel search filtering, each with a code and name.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"code\": \"US\",\n    \"name\": \"United States\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Setting WhatsApp Status Text via API (HTTP)\nDESCRIPTION: This HTTP POST request sets the WhatsApp status text for a specific session. The endpoint requires a session identifier in the URL path.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Status.SendText.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/status/text\n```\n\n----------------------------------------\n\nTITLE: Running WAHA with Self-signed Certificates\nDESCRIPTION: Docker command to run WAHA with HTTPS enabled using self-signed certificates. This command mounts the necessary certificate files and sets the required environment variables.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-https/index.md#2025-04-20_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it \\\n  -p 3000:3000 \\\n  -v $(pwd)/.sessions:/app/.sessions \\\n  -v $(pwd)/.secrets:/app/.secrets \\\n  -e WAHA_HTTPS_ENABLED=true \\\n  -e WAHA_HTTPS_PATH_KEY=.secrets/privkey.pem \\\n  -e WAHA_HTTPS_PATH_CERT=.secrets/cert.pem \\\n  -e WAHA_HTTPS_PATH_CA=.secrets/chain.pem \\\n  devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Sending Video Status with BASE64 in Request Body\nDESCRIPTION: JSON request body format for sending a video status using BASE64 encoded data. Includes the file MIME type, filename, and the video data encoded as BASE64.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": {\n    \"mimetype\": \"video/mp4\",\n    \"filename\": \"video.mp4\",\n    \"data\": \"\"\n  },\n  \"backgroundColor\": \"#38b42f\"\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Search Countries via API Request in HTTP\nDESCRIPTION: HTTP GET request to retrieve the list of available countries for filtering channel searches.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_17\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/channels/search/countries\n```\n\n----------------------------------------\n\nTITLE: Tracking Message Acknowledgements in JSON\nDESCRIPTION: Shows the structure for message acknowledgement events. This payload includes information about the message status, such as whether it has been delivered, read, or played.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message.ack\",\n  \"session\": \"default\",\n  \"engine\": \"WEBJS\",\n  \"payload\": {\n    \"id\":\"true_11111111111@c.us_4CC5EDD64BC22EBA6D639F2AF571346C\",\n    \"from\":\"11111111111@c.us\",\n    \"participant\": null,\n    \"fromMe\":true,\n    \"ack\":3,\n    \"ackName\":\"READ\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Webhook Payload Structure in JSON\nDESCRIPTION: Describes the general structure of the webhook payload, including event details, session information, and metadata. This structure is used across various event types.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"evt_1111111111111111111111111111\",\n  \"timestamp\": 1741249702485,\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"metadata\": {\n    \"user.id\": \"123\",\n    \"user.email\": \"email@example.com\"\n  },\n  \"me\": {\n    \"id\": \"71111111111@c.us\",\n    \"pushName\": \"~\"\n  },\n  \"payload\": {\n    ... // event specific data\n  },\n  \"environment\": {\n    \"tier\": \"PLUS\",\n    \"version\": \"2023.10.12\"\n  },\n  \"engine\": \"WEBJS\"\n}\n```\n\n----------------------------------------\n\nTITLE: Label Removed from Chat Event Structure in JSON\nDESCRIPTION: This snippet shows the structure of a label.chat.deleted event payload, including the label ID, chat ID, and associated metadata.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"label.chat.deleted\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"labelId\": \"6\",\n    \"chatId\": \"11111111111@c.us\",\n    \"label\": null\n  },\n  \"engine\": \"NOWEB\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Message Reactions in JSON\nDESCRIPTION: Demonstrates the payload structure for message reaction events. This includes information about the reaction emoji, the message reacted to, and the user who made the reaction.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"event\": \"message.reaction\",\n    \"session\": \"default\",\n    \"me\": {\n        \"id\": \"79222222222@c.us\",\n        \"pushName\": \"WAHA\"\n    },\n    \"payload\": {\n        \"id\": \"false_79111111@c.us_11111111111111111111111111111111\",\n        \"from\": \"79111111@c.us\",\n        \"fromMe\": false,\n        \"participant\": \"79111111@c.us\",\n        \"to\": \"79111111@c.us\",\n        \"timestamp\": 1710481111.853,\n        \"reaction\": {\n            \"text\": \"🙏\",\n            \"messageId\": \"true_79111111@c.us_11111111111111111111111111111111\"\n        }\n    },\n    \"engine\": \"WEBJS\",\n    \"environment\": {\n        \"version\": \"2024.3.3\",\n        \"engine\": \"WEBJS\",\n        \"tier\": \"PLUS\",\n        \"browser\": \"/usr/bin/google-chrome-stable\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Video to a Channel Request Body in JSON\nDESCRIPTION: JSON body for sending a video to a channel using the regular sendVideo endpoint, specifying video file details and optional caption.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_25\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"chatId\": \"111111111111111111@newsletter\",\n  \"file\": {\n    \"mimetype\": \"video/mp4\",\n    \"filename\": \"video.mp4\",\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/video.mp4\"\n  },\n  \"caption\": \"Just watch at this!\",\n  \"session\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Channels via WhatsApp API HTTP Request\nDESCRIPTION: This HTTP GET request retrieves channel information for a specific session. The session identifier is included as a path parameter in the URL.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Channels.List.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/channels\n```\n\n----------------------------------------\n\nTITLE: Label Update Request Body with Color in JSON\nDESCRIPTION: This snippet shows the JSON body structure for updating a label, allowing changes to the label name and color using the numeric color code.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"New Client\",\n  \"color\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Labels by Chat ID via GET Request in HTTP\nDESCRIPTION: This snippet demonstrates how to get a list of labels associated with a specific chat using an HTTP GET request to the API endpoint.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_10\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/labels/chats/{chatId}/\n```\n\n----------------------------------------\n\nTITLE: Poll Vote Event JSON for Direct Messages\nDESCRIPTION: Example of a poll.vote webhook event payload when a user votes on a poll in direct messages. Contains information about the vote, including the selected options and timestamp.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/polls/index.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"poll.vote\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"vote\": {\n      \"id\": \"false_1111111111@c.us_83ACBE602A05C79B234B54415E95EE8A\",\n      \"to\": \"me\",\n      \"from\": \"1111111@c.us\",\n      \"fromMe\": false,\n      \"selectedOptions\": [\n        \"Awesome!\"\n      ],\n      \"timestamp\": 1692861427\n    },\n    \"poll\": {\n      \"id\": \"true_1111111111@c.us_BAE5F2EF5C69001E\",\n      \"to\": \"1111111111@c.us\",\n      \"from\": \"me\",\n      \"fromMe\": true\n    }\n  },\n  \"engine\": \"NOWEB\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining WhatsApp Call Rejection Event Structure in JSON\nDESCRIPTION: Demonstrates the JSON structure emitted when a WhatsApp call is rejected. Contains the event type, session identifier, and payload with call details including the call ID, sender's number, timestamp, and call type flags.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/calls/webhooks-call-rejected.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"call.rejected\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"from\": \"22222222222@c.us\",\n    \"timestamp\": 1721374000,\n    \"isVideo\": false,\n    \"isGroup\": false\n  },\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Generating New Status Message ID\nDESCRIPTION: HTTP GET request for generating a new message ID used for status messages, especially when manually sending to large contact lists.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_15\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/status/new-message-id\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"AAAAAAAAAAAAAAAAAAAAAA\"\n}\n```\n\n----------------------------------------\n\nTITLE: Response JSON from WhatsApp Poll Creation\nDESCRIPTION: The JSON response after successfully creating a poll. Contains the poll ID which should be saved for identifying future votes on this poll.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/polls/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"true_321321321@c.us_83ACBAAAAAAAAAAAAAAAAAAAA\",\n  \"other-fields-here\": \"value\"\n}\n```\n\n----------------------------------------\n\nTITLE: Request Body JSON for Sending a WhatsApp Poll\nDESCRIPTION: JSON structure for the request body when sending a poll. It includes the session name, chat ID, and poll configuration with a question, options, and a setting for allowing multiple answers.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/polls/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"123123123@c.us\",\n  \"poll\": {\n    \"name\": \"How are you?\",\n    \"options\": [\n      \"Awesome!\",\n      \"Good!\",\n      \"Not bad!\"\n    ],\n    \"multipleAnswers\": false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: GET Group List Request\nDESCRIPTION: HTTP GET request endpoint to retrieve a list of WhatsApp groups for a given session\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Groups.List.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/groups\n```\n\n----------------------------------------\n\nTITLE: Running Docker Container with White Label Swagger Configuration for WAHA\nDESCRIPTION: Example Docker command that demonstrates how to run the WAHA Plus container with custom Swagger UI branding settings including custom title, description, and external documentation URL.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/swagger/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 3000:3000 -e WHATSAPP_SWAGGER_TITLE=\"AwesomeCRM\" -e 'WHATSAPP_SWAGGER_DESCRIPTION=<p>FantasticFindz - Discover unique treasures from around the world at unbelievable prices!<br/> <a href=\\'https://google.com\\'>Read more about us!</a></p>' -e \"WHATSAPP_SWAGGER_EXTERNAL_DOC_URL=https://google.com\" devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Mention Contact in Group\nDESCRIPTION: Structure for mentioning contacts in group messages using the mentions field.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"12132132130@c.us\",\n  \"text\": \"Hi there! @2132132130\",\n  \"mentions\": [\n    \"2132132130@c.us\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Label from Chat in WhatsApp Integration (JSON)\nDESCRIPTION: This snippet demonstrates the JSON structure for a label.chat.deleted event. It includes the event type, session, payload with label and chat details, and engine information.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"label.chat.deleted\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"labelId\": \"6\",\n    \"chatId\": \"11111111111@c.us\",\n    \"label\": null\n  },\n  \"engine\": \"NOWEB\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Channel Messages Preview Response in JSON\nDESCRIPTION: JSON response with preview messages from a channel, including reactions, view counts, and message content.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"reactions\": {\n      \"👍\": 10,\n      \"❤️\": 5\n    },\n    \"viewCount\": 0,\n    \"message\": {\n      \"id\": \"false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA\",\n      \"timestamp\": 1666943582,\n      \"body\": \"string\",\n      \"media\": {\n        ...\n      }\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Starting WAHA Session with Geonode Proxy Configuration\nDESCRIPTION: This JSON payload is used to start a WAHA session with Geonode proxy settings. It includes the proxy server, username, and password obtained from the Geonode dashboard.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-geonode/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"name\": \"default\",\n   \"start\": true,\n   \"config\": {\n      \"proxy\": {\n         \"server\": \"premium-residential.geonode.com:10000\",\n         \"username\": \"geonode_1111111111\",\n         \"password\": \"11111111-1111-1111-1111-111111111111\"\n      }\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving All WhatsApp Contacts\nDESCRIPTION: Endpoint to fetch the complete list of WhatsApp contacts. Returns an array of contact objects, each containing the contact's WhatsApp ID and additional information.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_19\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{SESSION}/contacts/all\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"88888888888@c.us\",\n    ...\n  },\n  {\n    \"id\": \"99999999999@c.us\",\n    ...\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Blocking or Unblocking Contact with HTTP POST Request\nDESCRIPTION: These endpoints allow blocking or unblocking a specific contact using their contact ID.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/index.md#2025-04-20_snippet_10\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/contacts/block\n```\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/contacts/unblock\n```\n\n----------------------------------------\n\nTITLE: Poll Vote Event JSON for Group Messages\nDESCRIPTION: Example of a poll.vote webhook event payload when a user votes on a poll in a group. Shows differences in the 'to' and 'from' fields compared to direct messages.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/polls/index.md#2025-04-20_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"poll.vote\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"vote\": {\n      \"id\": \"false_3333333333333@g.us_1C18A7EAADD2A8D0324755D241C4238A\",\n      \"to\": \"3333333333333@g.us\",\n      \"from\": \"1111111111@c.us\",\n      \"fromMe\": false,\n      \"selectedOptions\": [\n        \"Awesome!\"\n      ],\n      \"timestamp\": 1692861427\n    },\n    \"poll\": {\n      \"id\": \"true_3333333333333@g.us_BAE5304BA1ECF704\",\n      \"to\": \"33333333333333@g.us\",\n      \"from\": \"222222222@c.us\",\n      \"fromMe\": true\n    }\n  },\n  \"engine\": \"NOWEB\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Session Debugging in WAHA\nDESCRIPTION: JSON configuration to enable debug mode for a specific session in WAHA. Setting 'debug' to true activates detailed logging for troubleshooting purposes.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"debug\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Failed Poll Vote Event JSON\nDESCRIPTION: Example of a poll.vote.failed webhook event payload when WAHA fails to decrypt a vote. Contains the same structure as poll.vote but with an empty selectedOptions array.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/polls/index.md#2025-04-20_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"poll.vote.failed\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"vote\": {\n      \"id\": \"false_11111111111@c.us_2E8C4CDA89EDE3BC0BC7F605364B8451\",\n      \"to\": \"me\",\n      \"from\": \"111111111@c.us\",\n      \"fromMe\": false,\n      \"selectedOptions\": [],\n      \"timestamp\": 1692956972\n    },\n    \"poll\": {\n      \"id\": \"true_1111111111@c.us_BAE595F4E0A2042C\",\n      \"to\": \"111111111@c.us\",\n      \"from\": \"me\",\n      \"fromMe\": true\n    }\n  },\n  \"engine\": \"NOWEB\"\n}\n```\n\n----------------------------------------\n\nTITLE: Running WAHA Docker Container for WhatsApp API\nDESCRIPTION: Commands to download and run the WAHA Docker container, setting up the WhatsApp API for local use. It includes environment variables for webhook configuration.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+python/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Download the image\ndocker pull devlikeapro/waha\n# Run the docker container\ndocker run -it --rm --network=host -e WHATSAPP_HOOK_URL=http://localhost:5000/bot -e \"WHATSAPP_HOOK_EVENTS=*\" --name waha devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: Handling WhatsApp Group Leave Event in JSON\nDESCRIPTION: Example JSON payload for the group.v2.leave event that occurs when a user leaves or is removed from a WhatsApp group. Contains group identification, timestamp, and engine-specific data.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/events-group.v2.leave.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"group.v2.leave\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"group\": {\n      \"id\": \"1231231232@g.us\"\n    },\n    \"timestamp\": 789456123,\n    \"_data\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Channel ID Response Format\nDESCRIPTION: Example JSON response from the channels API showing the format of channel information. The important field to extract is the channel ID which has the format of numbers followed by '@newsletter'.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/how-to-send-messages-to-channels/index.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"111111111111111111@newsletter\", // <========= copy that\n    \"name\": \"Channel Name\",\n    \"role\": \"OWNER\",\n    ...\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Get Server Version Request in WAHA\nDESCRIPTION: HTTP request to retrieve the version information of the installed WAHA docker image.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nGET /api/server/version\n```\n\n----------------------------------------\n\nTITLE: WhatsApp Status Text Request Body (JSON)\nDESCRIPTION: This JSON object represents the request body for setting a WhatsApp status text. It includes the text content, background color, and font style. The 'text' field can contain URLs, and custom styling is applied using 'backgroundColor' and 'font' properties.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Status.SendText.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"text\": \"Have a look! https://waha.devlike.pro/\",\n  \"backgroundColor\": \"#38b42f\",\n  \"font\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Poll Votes in JSON Format\nDESCRIPTION: Shows the structure of poll vote events. This payload contains information about the poll, the voter, and the selected options, allowing for tracking of poll responses.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"poll.vote\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"vote\": {\n      \"id\": \"false_1111111111@c.us_83ACBE602A05C79B234B54415E95EE8A\",\n      \"to\": \"me\",\n      \"from\": \"1111111@c.us\",\n      \"fromMe\": false,\n      \"selectedOptions\": [\"Awesome!\"],\n      \"timestamp\": 1692861427\n    },\n    \"poll\": {\n      \"id\": \"true_1111111111@c.us_BAE5F2EF5C69001E\",\n      \"to\": \"1111111111@c.us\",\n      \"from\": \"me\",\n      \"fromMe\": true\n    }\n  },\n  \"engine\": \"NOWEB\"\n}\n```\n\n----------------------------------------\n\nTITLE: Get WAHA Server Environment Variables Response\nDESCRIPTION: JSON response showing WAHA-specific environment variables set on the server.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"DEBUG\": \"1\",\n  \"WAHA_HTTP_LOG_LEVEL\": \"debug\",\n  \"WAHA_LOG_FORMAT\": \"PRETTY\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Channel by ID via API Request in HTTP\nDESCRIPTION: HTTP GET request to retrieve channel details by ID. The @ symbol in the channel ID must be escaped as %40.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{SESSION}/channels/{ID}\n```\n\n----------------------------------------\n\nTITLE: Deleting Label in WhatsApp Integration (JSON)\nDESCRIPTION: This snippet shows the JSON structure for a label.deleted event. It includes the event type, session, payload with label details, and engine information.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"label.deleted\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"10\",\n    \"name\": \"\",\n    \"color\": 14,\n    \"colorHex\": \"#00a0f2\"\n  },\n  \"engine\": \"NOWEB\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Running WAHA Plus with Swagger Authentication\nDESCRIPTION: This command sets up WAHA Plus docker container with basic authentication for the Swagger UI using admin/admin credentials, protecting the API documentation from unauthorized access.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/security/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -e WHATSAPP_SWAGGER_USERNAME=admin -eWHATSAPP_SWAGGER_PASSWORD=admin devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Defining WhatsApp API Call Accepted Event Schema in JSON\nDESCRIPTION: This JSON schema outlines the structure of the call.accepted event in the WhatsApp API. It includes properties such as the event type, session, and payload details like call ID, sender's number, timestamp, and call type flags.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/calls/webhooks-call-accepted.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"call.accepted\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"from\": \"22222222222@c.us\",\n    \"timestamp\": 1721374000,\n    \"isVideo\": false,\n    \"isGroup\": false\n  },\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Group Picture in WAHA 2025.2\nDESCRIPTION: HTTP PUT request to set a group picture using the new Group Picture API in WAHA 2025.2 Plus version. Requires session name and encoded group ID.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2025-2/index.md#2025-04-20_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{SESSION}/groups/{ID}/picture\n```\n\n----------------------------------------\n\nTITLE: Get Server Version Response in WAHA\nDESCRIPTION: JSON response containing version details including version number, engine type, tier, and browser path.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": \"2024.2.3\",\n  \"engine\": \"NOWEB\",\n  \"tier\": \"PLUS\",\n  \"browser\": \"/usr/bin/google-chrome-stable\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Contact vCard via API (vCard Format)\nDESCRIPTION: API endpoint for sending contact information using the standard vCard format. This option allows sending a pre-formatted vCard string containing all contact details in a standardized format.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_30\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"79111111@c.us\",\n  \"contacts\": [\n    {\n      \"vcard\": \"BEGIN:VCARD\\nVERSION:3.0\\nFN:Jane Doe\\nORG:Company Name;\\nTEL;type=CELL;type=VOICE;waid=911111111111:+91 11111 11111\\nEND:VCARD\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Failed Poll Votes in JSON\nDESCRIPTION: Illustrates the payload structure for failed poll vote events. This event is triggered when a poll vote fails to be recorded, providing information about the attempted vote and the associated poll.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"poll.vote.failed\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"vote\": {\n      \"id\": \"false_11111111111@c.us_2E8C4CDA89EDE3BC0BC7F605364B8451\",\n      \"to\": \"me\",\n      \"from\": \"111111111@c.us\",\n      \"fromMe\": false,\n      \"selectedOptions\": [],\n      \"timestamp\": 1692956972\n    },\n    \"poll\": {\n      \"id\": \"true_1111111111@c.us_BAE595F4E0A2042C\",\n      \"to\": \"111111111@c.us\",\n      \"from\": \"me\",\n      \"fromMe\": true\n    }\n  },\n  \"engine\": \"NOWEB\"\n}\n```\n\n----------------------------------------\n\nTITLE: Get All Server Environment Variables Response\nDESCRIPTION: JSON response showing all environment variables including system paths and WAHA-specific configurations.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"DEBUG\": \"1\",\n  \"WAHA_HTTP_LOG_LEVEL\": \"debug\",\n  \"WAHA_LOG_FORMAT\": \"PRETTY\",\n  \"PATH\": \"/home/...\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Contact Response in JSON\nDESCRIPTION: The response format for the get specific contact endpoint. It includes detailed information about the requested contact.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/index.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"11231231231@c.us\",\n  \"number\": \"11231231231\",\n  \"name\": \"Contact Name\",\n  \"pushname\": \"Pushname\",\n  \"shortName\": \"Shortname\",\n  \"isMe\": true,\n  \"isGroup\": false,\n  \"isWAContact\": true,\n  \"isMyContact\": true,\n  \"isBlocked\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring WAHA Dashboard Environment Variables\nDESCRIPTION: Environment variables for configuring the WAHA dashboard authentication and enablement settings. These variables control dashboard access and credentials.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-4/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nWAHA_DASHBOARD_ENABLED=true\nWAHA_DASHBOARD_USERNAME=waha\nWAHA_DASHBOARD_PASSWORD=waha\n```\n\n----------------------------------------\n\nTITLE: Call received webhook event JSON\nDESCRIPTION: JSON structure for the call.received webhook event. This event is triggered when the WhatsApp account receives a call, providing details like call ID, caller's number, timestamp, and call type information.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-8/index.md#2025-04-20_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"call.received\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"from\": \"22222222222@c.us\",\n    \"timestamp\": 1721374000,\n    \"isVideo\": false,\n    \"isGroup\": false\n  },\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Contacts API Endpoints Table in Markdown\nDESCRIPTION: A markdown table showing various contact-related API endpoints, their HTTP methods, and availability across different implementations (WEBJS, NOWEB, GOWS). It includes notes on specific requirements for certain implementations.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/features.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **API**                                                             | WEBJS |      NOWEB       | GOWS |\n|---------------------------------------------------------------------|:-----:|:----------------:|:----:|\n| **Get all contacts** <br> `GET /api/contacts/all`                   |  ✔️   | ✔️[*1](#heading) |  ✔️  |\n| **Get contact** <br> `GET /api/contacts`                            |  ✔️   | ✔️[*1](#heading) |  ✔️  |\n| **Check phone number exists** <br> `GET /api/contacts/check-exists` |  ✔️   |        ✔️        |  ✔️  |\n| **Get \"about\" contact** <br> `GET /api/contacts/about`              |  ✔️   |                  |      |\n| **Get profile picture** <br> `GET /api/contacts/profile-picture`    |  ✔️   |        ✔️        |  ✔️  |\n| **Block contact** <br> `POST /api/contacts/block`                   |  ✔️   |                  |      |\n| **Unblock contact** <br> `POST /api/contacts/unblock`               |  ✔️   |                  |      |\n\n1. **NOWEB** - you need to [**Enable Store**]({{< relref \"/docs/engines/noweb#store\" >}}) to get **chats, contacts and messages**\n\n_If you see the feature is not available in the above list, please [create a feature request](https://github.com/devlikeapro/waha/issues/new/choose) or **leave \"+1\" comment** on the existing one._\n```\n\n----------------------------------------\n\nTITLE: Get WAHA Server Environment Variables Request\nDESCRIPTION: HTTP request to retrieve only WAHA-related environment variables from the server.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nGET /api/server/environment?all=false\n```\n\n----------------------------------------\n\nTITLE: Send Seen Direct Message\nDESCRIPTION: HTTP POST request for marking direct messages as seen with required fields.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendSeen\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"11111111111@c.us\",\n  \"messageId\": \"false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Headers for Webhooks in JSON\nDESCRIPTION: Configuration example showing how to add custom headers to webhook requests. This allows for passing additional metadata or authentication information to the webhook endpoint.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"webhooks\": [\n      {\n        \"url\": \"https://webhook.site/11111111-1111-1111-1111-11111111\",\n        \"events\": [\n          \"message\"\n        ],\n        \"customHeaders\": [\n          {\n            \"name\": \"X-My-Custom-Header\",\n            \"value\": \"Value\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Get Server Status Request in WAHA\nDESCRIPTION: HTTP request to check the current status of the WAHA server including uptime information.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_9\n\nLANGUAGE: http\nCODE:\n```\nGET /api/server/status\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Presence Updates via HTTP POST\nDESCRIPTION: Shows how to subscribe to presence information updates for a specific chat using a POST request. This allows receiving presence updates through webhooks or subsequent GET requests.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/presence/index.md#2025-04-20_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/presence/{chatId}/subscribe\n```\n\n----------------------------------------\n\nTITLE: Label upsert webhook event JSON\nDESCRIPTION: JSON structure for the label.upsert webhook event. This event is triggered when a label is created or updated in WhatsApp Business, providing the label's ID, name, color, and hex color code.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-8/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"label.upsert\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"10\",\n    \"name\": \"Label Name\",\n    \"color\": 14,\n    \"colorHex\": \"#00a0f2\"\n  },\n  \"engine\": \"NOWEB\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Downloading WAHA Configuration Files\nDESCRIPTION: Commands to download the environment file template and Docker Compose configuration template from the WAHA GitHub repository.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Download the env file template\nwget -O .env https://raw.githubusercontent.com/devlikeapro/waha/refs/heads/core/.env.example\n# Download the Docker compose template\nwget -O docker-compose.yaml https://raw.githubusercontent.com/devlikeapro/waha/refs/heads/core/docker-compose.yaml\n```\n\n----------------------------------------\n\nTITLE: Message Data Structure with Poll Votes\nDESCRIPTION: Example of the JSON structure for a message with poll votes when using the NOWEB engine with store enabled. This shows the additional '_data' field containing encrypted poll vote information.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/engines/noweb/index.md#2025-04-20_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"true_111111@c.us_AAAAAAAAAAAAAA\",\n    \"_data\": {\n      \"key\": {\n        \"remoteJid\": \"111111@s.whatsapp.net\",\n        \"fromMe\": true,\n        \"id\": \"AAAAAAAAAAAAAA\"\n      },\n      \"messageTimestamp\": 1718265764,\n      \"pushName\": \"Sim2\",\n      \"broadcast\": false,\n      \"status\": 2,\n      \"pollUpdates\": [\n        {\n          /// Encrypted poll votes\n        }\n      ]\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Nginx as Reverse Proxy for WAHA\nDESCRIPTION: Nginx configuration to set up a reverse proxy for WAHA. This configuration handles WebSocket connections, sets appropriate headers, and includes a location for Let's Encrypt verification.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_7\n\nLANGUAGE: nginx\nCODE:\n```\nserver {\n  server_name <YOURDOMAIN.COM>;\n\n  # Point upstream to WAHA Server\n  set $upstream 127.0.0.1:3000;\n\n  location /.well-known {\n    alias /var/www/ssl-proof/waha/.well-known;\n  }\n\n  location / {\n    proxy_pass_header Authorization;\n    proxy_pass http://$upstream;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"Upgrade\";\n    proxy_set_header Host $host;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header X-Forwarded-Ssl on; # Optional\n\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n    proxy_http_version 1.1;\n    proxy_buffering off;\n\n    client_max_body_size 0;\n    proxy_read_timeout 36000s;\n    proxy_redirect off;\n  }\n  listen 80;\n}\n```\n\n----------------------------------------\n\nTITLE: Get Server Status Response in WAHA\nDESCRIPTION: JSON response providing the server start timestamp and uptime in milliseconds.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"startTimestamp\": 1723788847247,\n  \"uptime\": 3600000\n}\n```\n\n----------------------------------------\n\nTITLE: Copy Button Configuration for WhatsApp\nDESCRIPTION: JSON configuration for creating a copy button in interactive messages. Copy buttons allow users to easily copy text (such as codes, numbers, or references) to their clipboard with a single tap.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_38\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"copy\",\n  \"text\": \"Copy code\",\n  \"copyCode\": \"4321\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Chats Presence via HTTP GET (JSON)\nDESCRIPTION: Shows how to retrieve presence information for all chats using a GET request. The response includes both group and personal chat presence information, with details on chat IDs, last seen timestamps, and presence statuses.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/presence/index.md#2025-04-20_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/presence\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"2132132130@c.us\",\n    \"presences\": [\n      {\n        \"participant\": \"2132132130@c.us\",\n        \"lastKnownPresence\": \"offline\",\n        \"lastSeen\": 1686719326\n      }\n    ]\n  },\n  {\n    \"id\": \"11111111111111111111111@g.us\",\n    \"presences\": [\n      {\n        \"participant\": \"11111111111111111111111@g.us\",\n        \"lastKnownPresence\": \"online\",\n        \"lastSeen\": null\n      },\n      {\n        \"participant\": \"2132132130@c.us\",\n        \"lastKnownPresence\": \"offline\",\n        \"lastSeen\": 1686719326\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring WhatsApp Session with Basic Proxy\nDESCRIPTION: JSON configuration for setting up a WhatsApp session with a basic proxy server without authentication. Requires proxy server address in host:port format.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/proxy/index.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"proxy\": {\n      \"server\": \"localhost:3128\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: GET request for WhatsApp Labels API\nDESCRIPTION: HTTP GET request to retrieve WhatsApp Business Labels via the API. This endpoint returns all labels with their IDs, names, colors, and color hex codes.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-8/index.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/labels\n```\n\n----------------------------------------\n\nTITLE: Setting Group Picture Request Body in WAHA 2025.2\nDESCRIPTION: JSON body for the HTTP PUT request to set a group picture, specifying the URL of the image file.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2025-2/index.md#2025-04-20_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"file\": {\n    \"url\": \"https://github.com/devlikeapro/waha/raw/core/examples/waha.jpg\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Search Views Response in JSON\nDESCRIPTION: JSON response with the list of available views for channel search, each with a value and display name.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"value\": \"RECOMMENDED\",\n    \"name\": \"Explore\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Running WAHA with WEBJS Engine using Docker\nDESCRIPTION: Docker commands to run WAHA with the WEBJS engine for both Plus and Core versions. It demonstrates how to set the WHATSAPP_DEFAULT_ENGINE environment variable and mount a volume for sessions.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/engines/webjs.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Plus\ndocker run -v `pwd`/.sessions:/app/.sessions -e \"WHATSAPP_DEFAULT_ENGINE=WEBJS\" devlikeapro/waha-plus\n\n# Core\ndocker run -it -e \"WHATSAPP_DEFAULT_ENGINE=WEBJS\" devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: Server Status API Request and Response\nDESCRIPTION: Example of how to retrieve server status information via the API. Returns the server start timestamp and uptime in milliseconds.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-9/index.md#2025-04-20_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nGET /api/server/status\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"startTimestamp\": 1723788847247,\n  \"uptime\": 3600000\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Group Security Settings for Info Editing (HTTP PUT)\nDESCRIPTION: Updates the group settings to allow only admins to edit group info (title, description, photo). Returns true if successful, false if user lacks permissions.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{session}/groups/{groupId}/settings/security/info-admin-only\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"adminsOnly\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Status Messages Event Payload\nDESCRIPTION: JSON payload structure received when subscribing to status message events through the message event.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"false_status@broadcast_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA_123123@c.us\",\n    \"timestamp\": 1667561485,\n    \"body\": \"Check this out!\",\n    \"hasMedia\": true,\n    \"media\": {\n      \"url\": \"http://localhost:3000/api/files/false_status@broadcast_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA_123123@c.us.jpg\",\n      \"mimetype\": \"image/jpeg\",\n      \"filename\": null\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running WAHA Plus Docker Container with Custom Dashboard Credentials\nDESCRIPTION: This command runs the WAHA Plus Docker container with custom environment variables to set specific username and password for dashboard authentication. This provides better security than using the default credentials.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/dashboard/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 3000:3000/tcp -e WAHA_DASHBOARD_USERNAME=waha -e WAHA_DASHBOARD_PASSWORD=waha devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Retrieving Chats by Label ID via GET Request in HTTP\nDESCRIPTION: This snippet shows how to get a list of chats associated with a specific label using an HTTP GET request to the API endpoint.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_9\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/labels/{labelId}/chats\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Status in WAHA 2025.2\nDESCRIPTION: HTTP PUT request to set a custom status (\"About\") using the new Profile API in WAHA 2025.2.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2025-2/index.md#2025-04-20_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{session}/profile/status\n```\n\n----------------------------------------\n\nTITLE: JSON Event Payload for Engine Events\nDESCRIPTION: Example of the engine.event payload, triggered when the engine emits an internal event.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_24\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"evt_11111111111111111111111111\",\n  \"session\": \"default\",\n  \"event\": \"engine.event\",\n  \"payload\": {\n    \"session\": \"default\",\n    \"event\": \"{{engine.EventName}}\",\n    \"data\": {\n      \"field\": \"value\"\n    }\n  },\n  \"timestamp\": 1742102571277,\n  \"metadata\": {},\n  \"me\": {\n    \"\": null\n  },\n  \"environment\": {\n    \"\": null\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Label in WAHA API\nDESCRIPTION: HTTP request and JSON payloads for creating a new label in WhatsApp via WAHA API. Shows two methods - specifying a numeric color code or using a hexadecimal color value.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-11/index.md#2025-04-20_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/labels\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"New Client\",\n  \"color\": 1\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"New Client\",\n  \"colorHex\" : \"#64c4ff\"\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting Local Session Storage with Docker\nDESCRIPTION: Command to mount a local volume for session storage to persist WhatsApp authentication data between container restarts.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/storages/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n-v /path/to/on/host/.sessions:/app/.sessions\n```\n\n----------------------------------------\n\nTITLE: Ping Endpoint Response in WAHA\nDESCRIPTION: JSON response from the ping endpoint confirming that the WAHA service is operational.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"pong\"\n}\n```\n\n----------------------------------------\n\nTITLE: Message Revoked Event Payload in WAHA\nDESCRIPTION: JSON structure for a message.revoked event that occurs when a message is deleted, showing the content before and after deletion.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/receive-messages/index.md#2025-04-20_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message.revoked\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"before\": {\n      \"id\": \"some-id-here\",\n      \"timestamp\": \"some-timestamp-here\",\n      \"body\": \"Hi there!\"\n    },\n    \"after\": {\n      \"id\": \"some-id-here\",\n      \"timestamp\": \"some-timestamp-here\",\n      \"body\": \"\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Session with Postponed Start in WAHA\nDESCRIPTION: JSON body for creating a session with postponed start by setting the 'start' field to false. This creates a session in 'STOPPED' status that can be started later.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"start\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Running WAHA in Docker for Testing\nDESCRIPTION: Basic Docker command to run WAHA for testing and development purposes. This creates a temporary container with port 3000 exposed.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: Setting Profile Name in WAHA 2025.2\nDESCRIPTION: HTTP PUT request to set the profile name using the new Profile API in WAHA 2025.2.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2025-2/index.md#2025-04-20_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/{session}/profile/name\n```\n\n----------------------------------------\n\nTITLE: Verifying and Reloading Nginx Configuration\nDESCRIPTION: Commands to verify the Nginx configuration syntax and reload the service to apply the new configuration.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnginx -t\nsystemctl reload nginx\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Mode for a Session in WAHA\nDESCRIPTION: JSON configuration to enable debug mode for a session, which provides more detailed logs in the console for troubleshooting.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"debug\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running WAHA with MongoDB Session Storage\nDESCRIPTION: Docker command to run WAHA connected to a MongoDB instance for storing session data using host networking.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/storages/index.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -e WHATSAPP_SESSIONS_MONGO_URL=mongodb://localhost:27017/ --network host devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: GOWS Engine Environment Variable\nDESCRIPTION: Environment variable setting for using the GOWS engine, a Golang-based WebSocket implementation without browser requirement.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/engines/index.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nWHATSAPP_DEFAULT_ENGINE=GOWS\n```\n\n----------------------------------------\n\nTITLE: Sample Channels Response in JSON\nDESCRIPTION: JSON response format for channels listing, showing channel properties including id, name, description, invite URL, images, verification status, and user role.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"111111111111111111@newsletter\",\n    \"name\": \"Channel - Owner - Picture\",\n    \"description\": \"Hi there, I'm new here\",\n    \"invite\": \"https://whatsapp.com/channel/111111111111111111GdZ60l\",\n    \"preview\": \"https://mmg.whatsapp.net/m1/v/t24/123\",\n    \"picture\": \"https://mmg.whatsapp.net/m1/v/t24/123\",\n    \"verified\": false,\n    \"role\": \"OWNER\"\n  },\n  {\n    \"id\": \"111111111111111111@newsletter\",\n    \"name\": \"Channel - Subscriber - No Picture\",\n    \"description\": \"\",\n    \"invite\": \"https://whatsapp.com/channel/111111111111111111111111\",\n    \"preview\": null,\n    \"picture\": null,\n    \"verified\": false,\n    \"role\": \"SUBSCRIBER\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Listing WhatsApp Sessions\nDESCRIPTION: Example JSON response when listing sessions, showing session details including name, status, configuration, and user information.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"name\": \"default\",\n    \"status\": \"WORKING\",\n    \"config\": {\n      \"proxy\": null,\n      \"webhooks\": [\n        {\n          \"url\": \"https://webhook.site/11111111-1111-1111-1111-11111111\",\n          \"events\": [\n            \"message\",\n            \"session.status\"\n          ],\n          \"hmac\": null,\n          \"retries\": null,\n          \"customHeaders\": null\n        }\n      ],\n      \"debug\": false\n    },\n    \"me\": {\n      \"id\": \"79111111@c.us\",\n      \"pushName\": \"WAHA\"\n    },\n    \"engine\": {\n      \"engine\": \"NOWEB\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Updating WAHA Base URL and Restarting\nDESCRIPTION: Commands to update the WAHA_BASE_URL in the .env file and restart the WAHA service to apply the changes after SSL setup.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n# Change the WAHA_BASE_URL in .env\nnano .env\n# Restart the WAHA service\ndocker compose up -d\ndocker compose restart\n```\n\n----------------------------------------\n\nTITLE: Retrieving Session Account Information via HTTP GET Request\nDESCRIPTION: Fetches information about the associated account for a specific session.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_19\n\nLANGUAGE: http\nCODE:\n```\nGET /api/sessions/{session}/me\n```\n\n----------------------------------------\n\nTITLE: Channel Search by View Request Body in JSON\nDESCRIPTION: JSON body for searching channels by view, specifying view type, countries, categories, limit, and pagination cursor.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"view\": \"RECOMMENDED\",\n  \"countries\": [\n    \"US\"\n  ],\n  \"categories\": [],\n  \"limit\": 50,\n  \"startCursor\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Healthy Response with MongoDB Storage in WAHA Plus\nDESCRIPTION: Example of a successful health check response when using MongoDB Storage for session authentication, showing database connectivity and disk space.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"ok\",\n  \"info\": {\n    \"mediaFiles.space\": {\n      \"status\": \"up\",\n      \"path\": \"/tmp/whatsapp-files\",\n      \"diskPath\": \"/\",\n      \"free\": 132977496064,\n      \"threshold\": 104857600\n    },\n    \"mongodb\": {\n      \"status\": \"up\",\n      \"message\": \"Up and running\"\n    }\n  },\n  \"error\": {},\n  \"details\": {\n    \"mediaFiles.space\": {\n      \"status\": \"up\",\n      \"path\": \"/tmp/whatsapp-files\",\n      \"diskPath\": \"/\",\n      \"free\": 132977496064,\n      \"threshold\": 104857600\n    },\n    \"mongodb\": {\n      \"status\": \"up\",\n      \"message\": \"Up and running\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting WEBJS Engine in Docker\nDESCRIPTION: Docker command to run WAHA with the WEBJS engine, which uses a browser-based WhatsApp Web connection.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/engines/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -e \"WHATSAPP_DEFAULT_ENGINE=WEBJS\" devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: Starting WAHA Session without Proxy\nDESCRIPTION: This JSON payload is used to start a WAHA session without proxy settings after successfully establishing a connection with the proxy. It's recommended to disable the proxy after the initial connection to save resources.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-geonode/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: Editing Configuration Files\nDESCRIPTION: Commands to edit the .env and docker-compose.yaml files to customize WAHA configuration with your own values, especially security-related settings like API keys and credentials.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# update .env file with your values\nnano .env\n# update docker-compose.yaml - like image\n# Remove \"mongodb\" and \"minio\" services if you don't need them\n# Leave \"waha\" service as it is\nnano docker-compose.yaml\n```\n\n----------------------------------------\n\nTITLE: Getting Search Views via API Request in HTTP\nDESCRIPTION: HTTP GET request to retrieve the list of available views for channel search.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_15\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/channels/search/views\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific WhatsApp Session Details via HTTP GET Request\nDESCRIPTION: Fetches information about a specific session by its name.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_17\n\nLANGUAGE: http\nCODE:\n```\nGET /api/sessions/{session}\n```\n\n----------------------------------------\n\nTITLE: Managing WAHA Docker Containers\nDESCRIPTION: Commands for common Docker Compose operations such as stopping containers, starting them, restarting, and viewing logs, which are useful for maintenance and troubleshooting.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n# Stop all containers\ndocker compose down\n# Start all containers, apply new configuration\ndocker compose up -d\n# Restart all containers\ndocker compose restart\n# Show logs in real time\ndocker compose logs -f\n# Show logs - since interval\ndocker compose logs --since 1h  \n```\n\n----------------------------------------\n\nTITLE: Getting Search Categories via API Request in HTTP\nDESCRIPTION: HTTP GET request to retrieve the list of available categories for filtering channel searches.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_19\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/channels/search/categories\n```\n\n----------------------------------------\n\nTITLE: Group Join API Response in JSON\nDESCRIPTION: This snippet shows the JSON response structure when successfully joining a group through the API. It includes the group's ID.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-12/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"123123123@g.us\"\n}\n```\n\n----------------------------------------\n\nTITLE: Search Categories Response in JSON\nDESCRIPTION: JSON response with the list of available categories for channel search filtering, each with a value and display name.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"value\": \"BUSINESS\",\n    \"name\": \"Business\"\n  },\n  {\n    \"value\": \"ENTERTAINMENT\",\n    \"name\": \"Entertainment\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Enabling NOWEB Store Feature\nDESCRIPTION: JSON configuration to enable the store feature in NOWEB engine. This allows storing contacts, chats, and messages. The 'fullSync' option determines the amount of message history to retrieve.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/engines/noweb/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"noweb\": {\n      \"store\": {\n        \"enabled\": true,\n        \"fullSync\": false\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Nginx for WAHA\nDESCRIPTION: Commands to install Nginx and create a site configuration file for proxying requests to the WAHA service.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install nginx\ncd /etc/nginx/sites-enabled\n\nnano <YOURDOMAIN.COM>.conf\n```\n\n----------------------------------------\n\nTITLE: Retrieving Contact's Profile Picture Response in JSON\nDESCRIPTION: The response format for the get contact's profile picture endpoint. It returns the URL of the profile picture.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/index.md#2025-04-20_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"profilePictureURL\": \"https://example.com/profile.jpg\"\n}\n```\n\n----------------------------------------\n\nTITLE: Profile API Endpoints in WAHA\nDESCRIPTION: Table documenting the available profile API endpoints in WAHA, showing compatibility across different implementations (WEBJS, NOWEB, GOWS). Includes endpoints for retrieving profiles, setting profile names, updating status, and managing profile pictures, with some features available only in WAHA Plus.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/profile/features.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **API**                                                                                                                      | WEBJS | NOWEB | GOWS |\n|------------------------------------------------------------------------------------------------------------------------------|:-----:|:-----:|:-----|\n| **Get Profile** <br> `GET /api/{SESSION}/profile`                                                                            |  ✔️   |  ✔️   | ✔️   |\n| **Set Profile Name** <br> `PUT /api/{SESSION}/profile/name`                                                                  |  ✔️   |  ✔️   | ✔️   |\n| **Set Profile Status (About)** <br> `PUT /api/{SESSION}/profile/status`                                                      |  ✔️   |  ✔️   | ✔️   |\n| **Set/Delete Profile Status Picture** <br> `PUT /api/{SESSION}/profile/picture` <br> `DELETE /api/{SESSION}/profile/picture` |   ➕   |   ➕   | ➕    |\n\n➕ - Available in [**➕ WAHA Plus**]({{< relref \"/docs/how-to/waha-plus\" >}})\n```\n\n----------------------------------------\n\nTITLE: Running WAHA with Persistent Media Storage\nDESCRIPTION: Docker command to run WAHA with persistent local media storage by mounting a volume and disabling automatic cleanup.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/storages/index.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -v /path/to/on/host/.media:/app/.media -e WHATSAPP_FILES_FOLDER=/app/.media -e WHATSAPP_FILES_LIFETIME=0 -p 3000:3000/tcp devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Message Data Structure with User Receipt\nDESCRIPTION: Example of the JSON structure for a group or broadcast message with user receipt information when using the NOWEB engine with store enabled. This shows the additional '_data' field containing user receipt details.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/engines/noweb/index.md#2025-04-20_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"true_111111111111111111111@g.us_AAAAAAAAAAAAAAAAA\",\n    \"timestamp\": 1718266155,\n    \"from\": \"111111111111111111111@g.us\",\n    \"fromMe\": true,\n    \"body\": \"Hdhf\",\n    \"to\": \"111111111111111111111@g.us\",\n    \"participant\": \"33333@c.us\",\n    \"hasMedia\": false,\n    \"ack\": 1,\n    \"ackName\": \"SERVER\",\n    \"_data\": {\n      \"key\": {\n        \"remoteJid\": \"111111111111111111111@g.us\",\n        \"fromMe\": true,\n        \"id\": \"AAAAAAAAAAAAAAAAA\",\n        \"participant\": \"33333@s.whatsapp.net\"\n      },\n      \"messageTimestamp\": 1718266155,\n      \"pushName\": \"Sim2\",\n      \"broadcast\": false,\n      \"status\": 2,\n      \"message\": {\n        \"conversation\": \"Test\"\n      },\n      \"userReceipt\": [\n        {\n          \"userJid\": \"1111111@s.whatsapp.net\",\n          \"readTimestamp\": 1718266160\n        },\n        {\n          \"userJid\": \"22222@s.whatsapp.net\",\n          \"receiptTimestamp\": 1718266162\n        }\n      ]\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Channel Message Server ID Structure (GOWS)\nDESCRIPTION: JSON structure showing ServerID location in GOWS engine message format for channel reactions.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_28\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message.any\",\n  \"payload\": {\n    \"_data\": {\n      \"Info\": {\n        \"Chat\": \"111111111111111111@newsletter\",\n        \"ServerID\": 105\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Downloading WAHA Core Docker Image\nDESCRIPTION: Command to pull the WAHA Core Docker image from the Docker repository.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/download-image.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: Configuring GOWS Engine in Docker\nDESCRIPTION: This command demonstrates how to run WAHA with the new GOWS engine. GOWS is a browser-less engine written in Golang that connects to WhatsApp Web directly using WebSockets.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2025-1/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -e \"WHATSAPP_DEFAULT_ENGINE=GOWS\" devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: WEBJS Engine Environment Variable\nDESCRIPTION: Environment variable setting for using the WEBJS engine which connects through WhatsApp Web browser app.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/engines/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nWHATSAPP_DEFAULT_ENGINE=WEBJS\n```\n\n----------------------------------------\n\nTITLE: Setting Up Let's Encrypt SSL for WAHA\nDESCRIPTION: Commands to install Certbot, create the necessary directories for Let's Encrypt verification, and obtain an SSL certificate for the domain.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\napt install certbot\napt-get install python3-certbot-nginx\nmkdir -p /var/www/ssl-proof/waha/.well-known\n\ncertbot --webroot -w /var/www/ssl-proof/waha/ -d <YOURDOMAIN.COM> -i nginx\n```\n\n----------------------------------------\n\nTITLE: Restart Server Request in WAHA\nDESCRIPTION: HTTP request to stop (and restart if using Docker) the WAHA server. Can be configured to force stop or gracefully shut down.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_11\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/server/stop\n```\n\n----------------------------------------\n\nTITLE: Setting Up and Running WhatsApp Download Files Bot\nDESCRIPTION: Bash commands to set up and run the WhatsApp Download Files Bot, which downloads all files sent to your WhatsApp. This bot requires the WAHA Plus version.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+python/index.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Download the image\ndocker pull devlikeapro/waha-plus\n# Run the docker container\ndocker run -it --rm --network=host -e WHATSAPP_HOOK_URL=http://localhost:5000/bot -e \"WHATSAPP_HOOK_EVENTS=*\" --name waha devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Blocking or Unblocking Contact Request Body in JSON\nDESCRIPTION: The request body format for the block/unblock contact endpoints. It requires the contact ID and session name.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/contacts/index.md#2025-04-20_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"contactId\": \"11231231231\",\n  \"session\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Text Message via WhatsApp HTTP API\nDESCRIPTION: This snippet demonstrates how to send a text message using the WhatsApp HTTP API. It includes the HTTP POST request endpoint and the required JSON body structure with session, chat ID, and message text.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Groups.SendText.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sendText\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"12132132130@g.us\",\n  \"text\": \"Hi there!\"\n}\n```\n\n----------------------------------------\n\nTITLE: Group Events Support Matrix\nDESCRIPTION: Compatibility matrix showing supported group events across different WhatsApp API implementations. Includes both current v2 events and deprecated legacy events.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/features-events.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **Events**              | WEBJS | NOWEB | GOWS |\n|-------------------------|:-----:|:-----:|:----:|\n| `group.v2.join`         |  ✔️   |  ✔️   |  ✔️  |\n| `group.v2.leave`        |  ✔️   |  ✔️   |  ✔️  |\n| `group.v2.participants` |  ✔️   |  ✔️   |  ✔️  |\n| `group.v2.update`       |  ✔️   |  ✔️   |  ✔️  |\n| ~~group.join~~          |  ✔️   |  ✔️   |      |\n| ~~group.leave~~         |  ✔️   |       |      |\n```\n\n----------------------------------------\n\nTITLE: Docker Image Naming Convention\nDESCRIPTION: Template showing the naming convention for WAHA Docker images, including image type, browser support, CPU architecture, and version.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/engines/index.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndevlikeapro/{image}:{browser}[-cpu][-version]\n```\n\n----------------------------------------\n\nTITLE: Updating WAHA Plus Version\nDESCRIPTION: Commands to update WAHA Plus to the latest version, including Docker login with credentials, pulling the latest image, and restarting the service.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n# Login if you're using WAHA Plus\ndocker login -u devlikeapro -p {KEY}\ndocker compose pull\ndocker logout\n\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: NOWEB Engine Environment Variable\nDESCRIPTION: Environment variable setting for using the NOWEB engine which connects directly via WebSocket without requiring a browser.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/engines/index.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nWHATSAPP_DEFAULT_ENGINE=NOWEB\n```\n\n----------------------------------------\n\nTITLE: Running WAHA on ARM Processors\nDESCRIPTION: Special commands for running WAHA on ARM processors like Apple M1/M2 or Raspberry Pi. This involves pulling the ARM-specific image and tagging it appropriately.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/how-to-send-messages-to-channels/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Download the image\ndocker pull devlikeapro/waha:arm\n# Rename it, so you can use devlikeapro/waha image in other place\ndocker tag devlikeapro/waha:arm devlikeapro/waha\n# Run the same command!\ndocker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha\n\n# It prints logs and the last line must be\n# WhatsApp API is running on: http://[::1]:3000\n```\n\n----------------------------------------\n\nTITLE: Getting WhatsApp Channel IDs via cURL\nDESCRIPTION: Command to retrieve a list of WhatsApp Channels where the user is an owner. This is necessary to obtain the channel ID required for sending messages.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/how-to-send-messages-to-channels/index.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X 'GET' \\\n  'http://localhost:3000/api/default/channels?role=OWNER' \\\n  -H 'accept: application/json'\n```\n\n----------------------------------------\n\nTITLE: Chat Archive Event Structure in JSON\nDESCRIPTION: The JSON payload for the chat.archive event that is triggered when a chat is archived or unarchived. It includes the event name, session identifier, and payload containing the chat ID, timestamp of the action, and a boolean indicating whether the chat was archived (true) or unarchived (false).\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/chats/webhooks-chat-archive.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"chat.archive\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"123123123@c.us\",\n    \"timestamp\": 1667561485,\n    \"archived\": true <== or false\n  },\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Group Security Settings for Message Sending (HTTP GET)\nDESCRIPTION: Gets the group settings to check if only admins are allowed to send messages.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/index.md#2025-04-20_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/groups/{groupId}/settings/security/messages-admin-only\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"adminsOnly\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Running GOWS with Docker for WhatsApp Web Interaction\nDESCRIPTION: This snippet demonstrates how to run GOWS using Docker for both Plus and Core versions. It shows how to mount a local directory for sessions and set the WhatsApp engine to GOWS.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/engines/gows.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Plus\ndocker run -v `pwd`/.sessions:/app/.sessions -e \"WHATSAPP_DEFAULT_ENGINE=GOWS\" devlikeapro/waha-plus\n\n# Core\ndocker run -it -e \"WHATSAPP_DEFAULT_ENGINE=GOWS\" devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: Running WAHA Plus with Customized Swagger Documentation\nDESCRIPTION: This Docker command demonstrates how to run WAHA Plus with environment variables set to customize the Swagger documentation. It includes settings for the title, description, and external documentation URL.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-5/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 3000:3000 -e WHATSAPP_SWAGGER_TITLE=\"AwesomeCRM\" -e 'WHATSAPP_SWAGGER_DESCRIPTION=<p>FantasticFindz - Discover unique treasures from around the world at unbelievable prices!<br/> <a href='https://google.com'>Read more about us!</a></p>' -e \"WHATSAPP_SWAGGER_EXTERNAL_DOC_URL=https://google.com\" devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Running WAHA with Let's Encrypt Certificates\nDESCRIPTION: Docker command to run WAHA with HTTPS enabled using Let's Encrypt certificates. This command mounts the necessary certificate files and sets the required environment variables.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-https/index.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nDOMAIN=waha.example.pro # Change it to your domain!\n\ndocker run -it \\\n  -p 3000:3000/tcp \\\n  -v $(pwd)/.sessions:/app/.sessions \\\n  -v /etc/letsencrypt:/etc/letsencrypt \\\n  --env WAHA_HTTPS_ENABLED=true \\\n  --env WAHA_HTTPS_PATH_KEY=/etc/letsencrypt/live/$DOMAIN/privkey.pem \\\n  --env WAHA_HTTPS_PATH_CERT=/etc/letsencrypt/live/$DOMAIN/cert.pem \\\n  --env WAHA_HTTPS_PATH_CA=/etc/letsencrypt/live/$DOMAIN/chain.pem \\\n  --env WHATSAPP_API_SCHEMA=https, \\\n  --env WHATSAPP_API_PORT=3000, \\\n  --env WHATSAPP_API_HOSTNAME=$DOMAIN \\\n  --restart always \\\n  devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Displaying Call Events Comparison Table in Markdown\nDESCRIPTION: This snippet shows a markdown table that compares the availability of call-related events across different WhatsApp API implementations. It uses checkmarks to indicate which events are supported by each implementation.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/calls/features-events.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **Events**      | WEBJS | NOWEB | GOWS |\n|-----------------|:-----:|:-----:|:-----|\n| `call.received` |  ✔️   |  ✔️   |      |\n| `call.accepted` |       |  ✔️   |      |\n| `call.rejected` |       |  ✔️   |      |\n```\n\n----------------------------------------\n\nTITLE: Message Data Structure with Reactions\nDESCRIPTION: Example of the JSON structure for a message with reactions when using the NOWEB engine with store enabled. This shows the additional '_data' field containing reaction information.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/engines/noweb/index.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"true_111111@c.us_AAAAAAAAAAAAAA\",\n    \"_data\": {\n      \"key\": {\n        \"remoteJid\": \"111111@s.whatsapp.net\",\n        \"fromMe\": true,\n        \"id\": \"AAAAAAAAAAAAAA\"\n      },\n      \"messageTimestamp\": 1718265764,\n      \"pushName\": \"Sim2\",\n      \"broadcast\": false,\n      \"status\": 2,\n      \"reactions\": [\n        {\n          \"key\": {\n            \"remoteJid\": \"111111@s.whatsapp.net\",\n            \"fromMe\": true,\n            \"id\": \"11111111111111111111111111111111\"\n          },\n          \"text\": \"❤️\",\n          \"senderTimestampMs\": 1718265740788\n        }\n      ]\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Implementing WhatsApp Message Webhook Handler in ASP.NET Core\nDESCRIPTION: Sets up an ASP.NET Core minimal API endpoint that receives WhatsApp messages via POST requests. The code deserializes incoming JSON messages, checks for message events, and processes them. Uses System.Text.Json for JSON handling and provides a basic webhook response.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/csharp/receive-message.md#2025-04-20_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.AspNetCore.Http;\nusing System.Text.Json;\n\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\napp.MapPost(\"/bot\", async (HttpContext context) =>\n{\n    var data = await JsonSerializer.DeserializeAsync<JsonElement>(context.Request.Body);\n    if (data.GetProperty(\"event\").GetString() != \"message\")\n    {\n        // Process message, save it, respond, etc.\n        ProcessMessage(data.GetProperty(\"payload\"));\n    }\n    await context.Response.WriteAsync(\"OK\");\n});\n\napp.Run();\n```\n\n----------------------------------------\n\nTITLE: Restart Server Request Body in WAHA\nDESCRIPTION: JSON payload for server restart request. The 'force' parameter determines whether sessions are gracefully closed or immediately terminated.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  // By default, it gracefully stop all sessions and connections\n  // but you can force it to stop immediately\n  \"force\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Healthy Response with Local Storage in WAHA Plus\nDESCRIPTION: Example of a successful health check response when using Local Storage for session authentication, showing disk space availability.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"ok\",\n  \"info\": {\n    \"mediaFiles.space\": {\n      \"status\": \"up\",\n      \"path\": \"/tmp/whatsapp-files\",\n      \"diskPath\": \"/\",\n      \"free\": 132979355648,\n      \"threshold\": 104857600\n    },\n    \"sessionsFiles.space\": {\n      \"status\": \"up\",\n      \"path\": \"/app/.sessions\",\n      \"diskPath\": \"/\",\n      \"free\": 132979355648,\n      \"threshold\": 104857600\n    }\n  },\n  \"error\": {},\n  \"details\": {\n    \"mediaFiles.space\": {\n      \"status\": \"up\",\n      \"path\": \"/tmp/whatsapp-files\",\n      \"diskPath\": \"/\",\n      \"free\": 132979355648,\n      \"threshold\": 104857600\n    },\n    \"sessionsFiles.space\": {\n      \"status\": \"up\",\n      \"path\": \"/app/.sessions\",\n      \"diskPath\": \"/\",\n      \"free\": 132979355648,\n      \"threshold\": 104857600\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Channel Message Server ID Structure (NOWEB)\nDESCRIPTION: JSON structure showing server_id location in NOWEB engine message format for channel reactions.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_27\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message.any\",\n  \"payload\": {\n    \"_data\": {\n      \"key\": {\n        \"remoteJid\": \"120363417343416222@newsletter\",\n        \"server_id\": \"101\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Issuing Let's Encrypt Certificate with Certbot\nDESCRIPTION: Commands to issue a Let's Encrypt certificate using Certbot. Two options are provided: one for servers not currently running a web server, and another for servers with an active web server.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-https/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl stop nginx\nsudo certbot certonly --standalone -d waha.example.com # <=== change to your domain\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo certbot certonly --webroot\n# sudo certbot certonly --webroot /var/www/html\n```\n\n----------------------------------------\n\nTITLE: Running WAHA with Local Session Storage\nDESCRIPTION: Full Docker command to run the WAHA with local session storage mounted to the current directory.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/storages/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -v `pwd`/.sessions:/app/.sessions -p 3000:3000/tcp devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Defining WhatsApp Call Received Event Structure in JSON\nDESCRIPTION: This JSON object outlines the structure of a call.received event in the WAHA system. It includes the event type, session identifier, and a payload containing call details such as the call ID, sender's number, timestamp, and call type flags.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/calls/webhooks-call-received.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"call.received\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"from\": \"22222222222@c.us\",\n    \"timestamp\": 1721374000,\n    \"isVideo\": false,\n    \"isGroup\": false\n  },\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Running WAHA Plus Docker Container with Default Dashboard Settings\nDESCRIPTION: This command runs the WAHA Plus Docker container exposing port 3000 for accessing the dashboard UI. Default credentials (admin/admin or waha/waha) will be used for dashboard authentication.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/dashboard/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 3000:3000/tcp devlikeapro/waha-plus #waha-plus\n```\n\n----------------------------------------\n\nTITLE: PHP Documentation Template Structure\nDESCRIPTION: Hugo template includes for PHP code examples showing installation, message sending and receiving\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+php/index.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< include file=\"/layouts/code/language/php/install-dependencies.md\" >}}\n{{< include file=\"/layouts/code/language/php/send-message.md\" >}}\n{{< include file=\"/layouts/code/language/php/receive-message.md\" >}}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Message Structure with Media in WAHA\nDESCRIPTION: This JSON snippet shows the structure of a message event in WAHA when media is present but not downloaded due to configuration settings. It includes fields for media presence, URL, mimetype, and potential download errors.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/config/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"hasMedia\": true,\n    \"media\": {\n      \"url\": null,\n      \"mimetype\": \"video/mp4\",\n      \"filename\": null,\n      \"error\": null // if there was an error during file download\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Ping Endpoint Request in WAHA\nDESCRIPTION: HTTP request to check if the WAHA service is running. Returns a simple ping-pong response to verify service availability.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nGET /ping\n```\n\n----------------------------------------\n\nTITLE: Setting Up and Running WhatsApp Echo Bot\nDESCRIPTION: Bash commands to clone the repository, install dependencies, and run the WhatsApp Echo Bot. This bot echoes back any message it receives.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+python/index.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Clone the git repository with example\ngit clone https://github.com/devlikeapro/waha.git\n# Open python example folder\ncd waha/examples/python\n# Install requirements\npython -mpip install -r requirements.txt\n# Run the bot\nFLASK_APP=whatsapp_echo_bot.py flask run\n```\n\n----------------------------------------\n\nTITLE: Structuring Deprecated Group Join Event in JSON\nDESCRIPTION: This code snippet demonstrates the structure of a deprecated 'group.join' event. It includes fields for the event type, session, engine, and a payload object. Users are advised to use 'group.v2.leave' instead of this deprecated format.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/events-group.join.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"group.join\",\n  \"session\": \"default\",\n  \"engine\": \"WEBJS\",\n  \"payload\": {\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Let's Encrypt Certificate Auto-renewal\nDESCRIPTION: Command to test the automatic renewal of Let's Encrypt certificates using Certbot's dry-run option.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-https/index.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo certbot renew --dry-run\n```\n\n----------------------------------------\n\nTITLE: Configuring PostgreSQL Session Storage in Docker\nDESCRIPTION: This command shows how to connect WAHA to a PostgreSQL database for session storage. It requires setting the WHATSAPP_SESSIONS_POSTGRESQL_URL environment variable with database credentials.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2025-1/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 3000:3000/tcp -it -e WHATSAPP_SESSIONS_POSTGRESQL_URL=postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Group List Response Structure\nDESCRIPTION: JSON response structure showing group details including ID, name, description, invite link and participant list\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Groups.List.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[{\n  \"id\": \"123@g.us\",\n  \"name\": \"Work Group\",\n  \"description\": \"...\",\n  \"invite\": \"...\",\n  \"participants\": [{\"id\":  \"123\"}]\n}]\n```\n\n----------------------------------------\n\nTITLE: Installing WAHA Plus Docker Image\nDESCRIPTION: These commands log into Docker Hub, pull the WAHA Plus image, and then log out. Replace {KEY} with the password obtained from the Patron Portal.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/waha-plus/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker login -u devlikeapro -p {KEY}\ndocker pull devlikeapro/waha-plus\ndocker logout\n```\n\n----------------------------------------\n\nTITLE: Configuring Webhook Retry Policy in JSON\nDESCRIPTION: Configuration example for webhook retry policies. Shows how to set up constant retry intervals when webhooks fail to deliver, specifying the policy type, delay between attempts, and maximum number of retry attempts.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"webhooks\": [\n      {\n        \"url\": \"https://webhook.site/11111111-1111-1111-1111-11111111\",\n        \"events\": [\n          \"message\"\n        ],\n        \"retries\": {\n          \"policy\": \"constant\",\n          \"delaySeconds\": 2,\n          \"attempts\": 15\n        }\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Webhook Message Payload - JSON Structure\nDESCRIPTION: Example of a basic webhook message payload structure showing event, session and engine fields.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/changelog.md#2025-04-20_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"engine\": \"WEBJS\",\n  \"payload\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Server Restart API Request and Configuration\nDESCRIPTION: Example of how to restart the server via API endpoint. Includes option to force immediate restart without graceful shutdown of sessions.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-9/index.md#2025-04-20_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/server/stop\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  // By default, it gracefully stop all sessions and connections\n  // but you can force it to stop immediately\n  \"force\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Running WAHA Docker Container on Local Network\nDESCRIPTION: This command runs the WAHA Docker container on the local network, mapping the sessions directory and exposing port 3000. It includes an alternative command for running WAHA Core.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-ngrok/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d --name waha -v `pwd`/.sessions:/app/.sessions -p 3000:3000/tcp devlikeapro/waha-plus\n# Or WAHA Core\n# docker run -p 3000:3000/tcp devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: Running WhatsApp Download Files Bot\nDESCRIPTION: Commands to clone the repository, install dependencies, and run the WhatsApp Download Files Bot, which processes and logs received files.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+python/index.md#2025-04-20_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# Clone the git repository with example\ngit clone https://github.com/devlikeapro/waha.git\n# Open python example folder\ncd waha/examples/python\n# Install requirements\npython -mpip install -r requirements.txt\n# Run the bot\nFLASK_APP=whatsapp_download_files_bot.py flask run\n```\n\n----------------------------------------\n\nTITLE: Downloading WAHA Plus Docker Image\nDESCRIPTION: Commands to authenticate, pull the WAHA Plus Docker image, and then logout. Requires a valid authentication key.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/download-image.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker login -u devlikeapro -p {KEY}\ndocker pull devlikeapro/waha-plus\ndocker logout\n```\n\n----------------------------------------\n\nTITLE: NOWEB Engine Configuration in WAHA\nDESCRIPTION: JSON configuration specific to the NOWEB engine, enabling the store functionality for saving session data.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"noweb\": {\n      \"store\": {\n        \"enabled\": true,\n        \"fullSync\": false\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Exposing WAHA with Ngrok\nDESCRIPTION: This command uses Ngrok to expose the WAHA port (3000) to the internet, allowing access from external networks.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-ngrok/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nngrok http 3000\n```\n\n----------------------------------------\n\nTITLE: Deprecated State Change Event in WhatsApp Integration (JSON)\nDESCRIPTION: This snippet illustrates the deprecated state.change event JSON structure. It is recommended to use the session.status event instead. This event represents an internal engine state, not a session status.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"state.change\",\n  \"session\": \"default\",\n  \"engine\": \"WEBJS\",\n  \"payload\": {\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Searching Channels by View via API Request in HTTP\nDESCRIPTION: HTTP POST request to search for public channels by view category, with options to filter by countries and categories.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/channels/index.md#2025-04-20_snippet_10\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/channels/search/by-view\n```\n\n----------------------------------------\n\nTITLE: Webhook Message with Media Payload - JSON Structure\nDESCRIPTION: Example webhook payload structure for messages containing media attachments, showing the media field with URL, mimetype and filename.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/changelog.md#2025-04-20_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"hasMedia\": true,\n    \"media\": {\n      \"url\": \"http://localhost:3000/api/files/true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.pdf\",\n      \"mimetype\": \"application/pdf\",\n      \"filename\": \"file.pdf\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Starting MongoDB Container for Session Storage\nDESCRIPTION: Docker command to run a MongoDB container for storing session data with volume persistence.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/storages/index.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 27017:27017 --name mongodb -v mongo-data:/data/db mongo\n```\n\n----------------------------------------\n\nTITLE: Installing WAHA n8n Community Node\nDESCRIPTION: Command to install the WAHA community node in n8n through the Community nodes section in Settings. This node enables integration between n8n and WAHA for WhatsApp automation.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/n8n/index.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n@devlikeapro/n8n-nodes-waha\n```\n\n----------------------------------------\n\nTITLE: Installing WAHA n8n Node in n8n\nDESCRIPTION: Command to install the WAHA community node in n8n, which provides integration between n8n and WAHA services.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-n8n/index.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n@devlikeapro/n8n-nodes-waha\n```\n\n----------------------------------------\n\nTITLE: Using Websocat to Listen to WAHA Websockets\nDESCRIPTION: Command to use websocat tool for listening to all sessions and events from WAHA's websocket endpoint. The -E flag ends the connection when the server closes it.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-11/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Listen all sessions and events\n# -E to end the connection when the server closes it\nwebsocat -E ws://localhost:3000/ws\n```\n\n----------------------------------------\n\nTITLE: Adding Metadata to Session in WAHA\nDESCRIPTION: JSON configuration for adding metadata to a session, allowing storage of additional information as key-value pairs.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"metadata\": {\n      \"user.id\": \"123\",\n      \"user.email\": \"email@example.com\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Starting WAHA and n8n with Docker Compose\nDESCRIPTION: Commands to start both WAHA and n8n services using Docker Compose, with an option to run in the background.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-n8n/index.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up \n# to run in background:\n# docker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Webhook Message.Any Event - JSON Structure\nDESCRIPTION: Example webhook payload structure for generic message events showing the event type and payload wrapper.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/changelog.md#2025-04-20_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message.any\",\n  \"payload\": {\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: POST request to archive WhatsApp chat\nDESCRIPTION: HTTP POST request to archive a specific WhatsApp chat. The endpoint requires the session identifier and the chat ID to be included in the URL path.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-8/index.md#2025-04-20_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/chats/{chatId}/archive\n```\n\n----------------------------------------\n\nTITLE: POST request to unarchive WhatsApp chat\nDESCRIPTION: HTTP POST request to unarchive a previously archived WhatsApp chat. The endpoint requires the session identifier and the chat ID to be included in the URL path.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-8/index.md#2025-04-20_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/chats/{chatId}/unarchive\n```\n\n----------------------------------------\n\nTITLE: Setting up WAHA Plus (Donation Version) with Docker\nDESCRIPTION: Docker commands to authenticate, pull the WAHA Plus image using your credentials from the portal, and log out after pulling.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-n8n/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker login -u devlikeapro -p <dckr_pat_1111111111>\ndocker pull devlikeapro/waha-plus\ndocker logout\n```\n\n----------------------------------------\n\nTITLE: Installing WAHA n8n Integration Node\nDESCRIPTION: Command to install the WAHA integration node package for n8n to enable WhatsApp automation workflows.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-10/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n@devlikeapro/n8n-nodes-waha\n```\n\n----------------------------------------\n\nTITLE: Adding Metadata to a Session Configuration in JSON\nDESCRIPTION: Example of how to add metadata to a session configuration as key-value pairs. This allows storing additional information like user IDs and email for reference and lookups.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-9/index.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"metadata\": {\n      \"user.id\": \"123\",\n      \"user.email\": \"email@example.com\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Metadata Usage in JSON Payload\nDESCRIPTION: Shows how metadata provided during session creation is included in the webhook payload. This metadata can be used for user identification or other custom data.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"metadata\": {\n    \"user.id\": \"123\",\n    \"user.email\": \"email@example.com\"\n  },\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Excluding Endpoints from API Key Requirement\nDESCRIPTION: This command configures WAHA Plus to exclude specific endpoints (health and ping) from API key authentication while maintaining protection for all other endpoints.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/security/index.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it \\\n -e WHATSAPP_API_KEY_EXCLUDE_PATH=\"health,ping\" \\\n -e WHATSAPP_API_KEY=yoursecretkey \\\n devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Version Badge Display - HTML/Markdown\nDESCRIPTION: HTML code snippet showing the GitHub release version badge for WAHA using shields.io\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/changelog.md#2025-04-20_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://github.com/devlikeapro/waha/releases\" target=\"_blank\">\n<img alt=\"GitHub Release\" src=\"https://img.shields.io/github/v/release/devlikeapro/waha\">\n</a>\n```\n\n----------------------------------------\n\nTITLE: Remove Labels Request Body in JSON\nDESCRIPTION: This snippet shows the JSON body structure for removing all labels from a chat by providing an empty labels array.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"labels\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Webhook Payload Example with S3 Storage Information\nDESCRIPTION: Example of a message webhook payload that includes S3 storage information for media files. Shows how the payload structure includes both the direct URL and S3 bucket details.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-9/index.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"engine\": \"WEBJS\",\n  \"payload\": {\n    \"id\": \"true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"hasMedia\": true,\n    \"media\": {\n        \"url\": \"http://localhost:3000/api/files/true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.jpg\",\n        \"mimetype\": \"image/jpeg\",\n        \"filename\": null,\n        \"s3\": {\n            \"Bucket\": \"bucket-name\",\n            \"Key\": \"/default/true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.jpg\"\n        },\n        \"error\": null // if there was an error during file download\n    }\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Python Dependencies with pip for WAHA Project\nDESCRIPTION: This code snippet shows how to install the 'requests' and 'flask' packages using pip, which are required dependencies for the WAHA project. These packages are essential for making HTTP requests and creating web applications in Python.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/python/install-dependencies.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install requests\npip install flask\n```\n\n----------------------------------------\n\nTITLE: Converting Audio File Format using FFmpeg\nDESCRIPTION: Command to convert audio files to OPUS format in OGG container using FFmpeg with specific parameters for WhatsApp compatibility\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nffmpeg -i input.mp3 -c:a libopus -b:a 32k -ar 48000 -ac 1 output.opus\n```\n\n----------------------------------------\n\nTITLE: Setting Session Presence in NOWEB Engine\nDESCRIPTION: This code snippet describes how to set the session presence (online or offline) at the start of a session in the NOWEB engine, which affects notifications on the user's phone.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/changelog.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- **NOWEB** - set session presence (`online|offline`) at the start - [#412](https://github.com/devlikeapro/waha/issues/412)\n  - Affects notifications on your phone (if it's `online` - you won't get in-app notifications on your device)\n```\n\n----------------------------------------\n\nTITLE: Defining Environment Variable for HTTP Schema in WAHA\nDESCRIPTION: This snippet shows how to set an environment variable to specify the HTTP schema used by the WhatsApp API, allowing for correct media URL links.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/changelog.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- Add `WHATSAPP_API_SCHEMA=http` environment variable so you can get the right `media.url` link\n```\n\n----------------------------------------\n\nTITLE: Tracking User Presence Updates in JSON\nDESCRIPTION: Details the payload structure for presence update events. This includes information about user status changes in individual or group chats, such as when a user is typing.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"event\": \"presence.update\",\n    \"session\": \"default\",\n    \"engine\": \"NOWEB\",\n    \"payload\": {\n        \"id\": \"111111111111111111@g.us\",\n        \"presences\": [\n            {\n                \"participant\": \"11111111111@c.us\",\n                \"lastKnownPresence\": \"typing\",\n                \"lastSeen\": null\n            }\n        ]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: JavaScript Implementation for WAHA Websocket Connection\nDESCRIPTION: Complete JavaScript example showing how to establish a websocket connection to WAHA, including configuration, connection handling, and event processing. The code demonstrates how to listen to specific events across sessions.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-11/index.md#2025-04-20_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n// Configuration\nconst apiKey = '123'; // Replace with your API key\nconst baseUrl = 'ws://localhost:3000/ws';\nconst session = '*'; // Use '*' to listen to all sessions\nconst events = ['session.status', 'message']; // List of events to listen to\n\n// Construct the WebSocket URL with query parameters\nconst queryParams = new URLSearchParams({\n    'x-api-key': apiKey,\n    session,\n    ...events.reduce((acc, event) => ({ ...acc, events: event }), {}) // Add multiple 'events' params\n});\nconst wsUrl = `${baseUrl}?${queryParams.toString()}`;\n\n// Initialize WebSocket connection\nconst socket = new WebSocket(wsUrl);\n\n// Handle incoming messages\nsocket.onmessage = (event) => {\n    console.log('Received:', event.data);\n};\n\n// Handle errors\nsocket.onerror = (error) => {\n    console.error('WebSocket Error:', error);\n};\n\n// Handle connection open\nsocket.onopen = () => {\n    console.log('WebSocket connection established:', wsUrl);\n};\n\n// Handle connection close\nsocket.onclose = () => {\n    console.log('WebSocket connection closed');\n};\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Versions Page\nDESCRIPTION: YAML frontmatter block that configures metadata and settings for a Hugo documentation versions listing page. Includes title, description, dates, layout and URL path configuration.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/versions.md#2025-04-20_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Versions\"\ndescription: \"\"\nlead: \"An appendix of hosted documentation for nearly every release of Doks, from v0 through v3.\"\ndate: 2021-09-24T08:50:23+02:00\nlastmod: 2021-09-24T08:50:23+02:00\ndraft: true\n\nlayout: versions\nurl: \"/docs/versions/\"\n---\n```\n\n----------------------------------------\n\nTITLE: JSON Request Body for Starting a Session (Deprecated)\nDESCRIPTION: Example JSON body for the deprecated session start endpoint, including session name and webhook configuration.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_26\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"config\": {\n    \"webhooks\": [\n      {\n        \"url\": \"https://webhook.site/11111111-1111-1111-1111-11111111\",\n        \"events\": [\n          \"message\"\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Label Events Table in Markdown\nDESCRIPTION: This snippet shows a markdown table that lists label-related events and their support in different implementations. It uses checkmarks to indicate support in the NOWEB implementation.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/features-events.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **Events**           | WEBJS | NOWEB | GOWS |\n|----------------------|-------|-------|:-----|\n| `label.upsert`       |       | ✔️    |      |\n| `label.deleted`      |       | ✔️    |      |\n| `label.chat.added`   |       | ✔️    |      |\n| `label.chat.deleted` |       | ✔️    |      |\n```\n\n----------------------------------------\n\nTITLE: Installing Docker on Ubuntu\nDESCRIPTION: Commands to install Docker and Docker Compose plugin on an Ubuntu server. This updates the system, downloads the Docker installation script, and sets up the required components.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# example in ubuntu\napt-get update\napt-get upgrade\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\napt install docker-compose-plugin\n```\n\n----------------------------------------\n\nTITLE: JSON Request Body for Logging Out of a Session (Deprecated)\nDESCRIPTION: Example JSON body for the deprecated session logout endpoint, specifying the session name.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_30\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Log Level in WAHA\nDESCRIPTION: This snippet shows how to control the log level for HTTP request completion messages using an environment variable.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/changelog.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n- Add `WAHA_HTTP_LOG_LEVEL=info` variable to control `request completed` log level - [#466](https://github.com/devlikeapro/waha/issues/466) - [**🔍 Observability**]({{< relref \"/docs/how-to/observability\" >}})\n```\n\n----------------------------------------\n\nTITLE: Chat archive webhook event JSON\nDESCRIPTION: JSON structure for the chat.archive webhook event. This event is triggered when a chat is archived or unarchived in WhatsApp, providing the chat ID, timestamp, and archive status.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-8/index.md#2025-04-20_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"chat.archive\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"123123123@c.us\",\n    \"timestamp\": 1667561485,\n    \"archived\": true <== or false\n  },\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Chat Overview API in HTTP\nDESCRIPTION: This snippet demonstrates how to make a GET request to the new Chat Overview API. It retrieves an overview of chats with pagination options for limit and offset.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-12/index.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/chats/overview?limit=20&offset=0\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Contact Page\nDESCRIPTION: YAML frontmatter defining metadata for a contact page. It includes title, description, creation date, modification date, and a draft status flag.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/contact/_index.md#2025-04-20_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Contact\"\ndescription: \"Drop us an email.\"\ndate: 2020-08-27T19:25:12+02:00\nlastmod: 2020-08-27T19:25:12+02:00\ndraft: false\n\n---\n```\n\n----------------------------------------\n\nTITLE: Label Update Request Body with Color Hex in JSON\nDESCRIPTION: This snippet shows an alternative JSON body structure for updating a label, allowing changes to the label name and color using the hex color code.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/labels/index.md#2025-04-20_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"New Client\",\n  \"colorHex\" : \"#64c4ff\"\n}\n```\n\n----------------------------------------\n\nTITLE: Downloading and Renaming ARM-compatible WAHA Docker Image\nDESCRIPTION: Commands to pull the ARM-compatible WAHA Docker image and rename it for consistency with other versions.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/download-image.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Download the image\ndocker pull devlikeapro/waha:arm\n# Rename it, so you can use devlikeapro/waha image in other place\ndocker tag devlikeapro/waha:arm devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: Checking PHP Extensions via Command Line\nDESCRIPTION: Bash commands to verify if curl and json PHP extensions are installed by using the php -m command and grep to filter results. Both extensions are common requirements for web applications.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/php/install-dependencies.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nphp -m | grep curl\nphp -m | grep json\n```\n\n----------------------------------------\n\nTITLE: Downloading and Renaming ARM-compatible WAHA Plus Docker Image\nDESCRIPTION: Commands to authenticate, pull the ARM-compatible WAHA Plus Docker image, logout, and rename the image for consistency.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/download-image.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker login -u devlikeapro -p {KEY}\ndocker pull devlikeapro/waha-plus:arm\ndocker logout\n\n# Rename it, so you can use devlikeapro/waha image in other place\ndocker tag devlikeapro/waha-plus:arm devlikeapro/waha-plus\n```\n\n----------------------------------------\n\nTITLE: Stopping a WhatsApp Session via HTTP POST Request (Deprecated)\nDESCRIPTION: Deprecated method to stop a session. Can also logout and delete the session if 'logout' is set to true.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_27\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sessions/stop\n```\n\n----------------------------------------\n\nTITLE: Adding Ktor Dependencies in Gradle Kotlin DSL\nDESCRIPTION: This snippet shows how to include Ktor dependencies in a Gradle build file using Kotlin DSL. It adds core server dependencies, Netty engine, and client dependencies including an optional HTTP client.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/kotlin/install-dependencies.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\ndependencies {\n    implementation(\"io.ktor:ktor-server-core:2.3.5\")\n    implementation(\"io.ktor:ktor-server-netty:2.3.5\")\n    implementation(\"io.ktor:ktor-client-core:2.3.5\")\n    implementation(\"io.ktor:ktor-client-cio:2.3.5\") // Optional HTTP client\n}\n```\n\n----------------------------------------\n\nTITLE: HTML Empty Container Element\nDESCRIPTION: An empty div element used as a container placeholder.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/quick-start/links.md#2025-04-20_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div></div>\n```\n\n----------------------------------------\n\nTITLE: Installing System.Net.Http.Json Package with .NET CLI\nDESCRIPTION: This command uses the dotnet CLI to add the System.Net.Http.Json package to the project. This package provides functionality for working with JSON in HTTP requests and responses in .NET applications.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/csharp/install-dependencies.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndotnet add package System.Net.Http.Json\n```\n\n----------------------------------------\n\nTITLE: Testing Geonode Proxy Connection with cURL\nDESCRIPTION: This command tests the Geonode proxy connection using cURL. It sends a request to ip-api.com through the configured proxy to verify its functionality.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-geonode/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -x premium-residential.geonode.com:10000 -U geonode_1111111111:11111111-1111-1111-1111-111111111111 http://ip-api.com\n```\n\n----------------------------------------\n\nTITLE: Logging Out of a WhatsApp Session via HTTP POST Request (Deprecated)\nDESCRIPTION: Deprecated method to logout and delete a session.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_29\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sessions/logout\n```\n\n----------------------------------------\n\nTITLE: Presence Event Support Matrix in Markdown Table\nDESCRIPTION: A markdown table showing presence.update event support across different WhatsApp client implementations. NOWEB and GOWS support presence updates while WEBJS does not.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/presence/features-events.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **Events**        | WEBJS | NOWEB | GOWS |\n|-------------------|:-----:|:-----:|:-----|\n| `presence.update` |       |  ✔️   | ✔️   |\n```\n\n----------------------------------------\n\nTITLE: Proxy6 Promotion Code\nDESCRIPTION: Promotion code for getting a 5% discount on Proxy6 service.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/proxy/index.md#2025-04-20_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n9W9oVxx3UX\n```\n\n----------------------------------------\n\nTITLE: HTTP POST Request for Image Status\nDESCRIPTION: Endpoint definition for posting an image status. Requires session parameter in the URL path.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/requests/Status.SendImage.md#2025-04-20_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/status/image\n```\n\n----------------------------------------\n\nTITLE: Installing Certbot on Ubuntu\nDESCRIPTION: Commands to install Certbot, a tool for obtaining SSL/TLS certificates from Let's Encrypt, on Ubuntu using snap.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-https/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\n```\n\n----------------------------------------\n\nTITLE: Hugo Card Grid Layout with Navigation Links\nDESCRIPTION: A structured layout using Hugo shortcodes to create a grid of navigation cards with categorized links to different sections of the documentation.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/quick-start/links.md#2025-04-20_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{< card-grid >}}\n{{< card title=\"Learn WAHA\" icon=\"outline/book\" color=\"yellow\" >}}\n\n- [📤 Send messages]({{<relref \"/docs/how-to/send-messages\" >}})\n- [📥 Receive messages]({{<relref \"/docs/how-to/receive-messages\" >}})\n- [📊 Dashboard]({{< relref \"/docs/how-to/dashboard\" >}})\n- [🔍 Other How-to guides]({{<relref \"/docs/how-to\" >}})\n\n{{< /card >}}\n{{< card title=\"Get Ready for Production\" icon=\"outline/server\" color=\"purple\" >}}\n\n- [🔧 Installation Guide]({{< relref \"/docs/how-to/install\" >}})\n- [🔒 Security]({{< relref \"/docs/how-to/security\" >}})\n- [🗄️ Storages]({{< relref \"/docs/how-to/sessions\" >}})\n- [➕ WAHA Plus]({{< relref \"/docs/how-to/waha-plus\" >}})\n\n{{< /card >}}\n{{< /card-grid >}}\n```\n\n----------------------------------------\n\nTITLE: Get Node.js Heapsnapshot Request in WAHA\nDESCRIPTION: HTTP request to generate and download a heap dump for Node.js for troubleshooting. Requires debug mode to be enabled via WAHA_DEBUG_MODE environment variable.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_18\n\nLANGUAGE: http\nCODE:\n```\nGET /api/server/debug/heapsnapshot\n```\n\n----------------------------------------\n\nTITLE: Updating WAHA Core Version\nDESCRIPTION: Commands to update WAHA Core to the latest version by pulling the latest image and restarting the service.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/install/index.md#2025-04-20_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose pull\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Running WAHA Docker Container\nDESCRIPTION: Command to start the WAHA Docker container on port 3000. This creates a WhatsApp API instance that's accessible on your local machine.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/how-to-send-messages-to-channels/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha\n\n# It prints logs and the last line must be\n# WhatsApp API is running on: http://[::1]:3000\n```\n\n----------------------------------------\n\nTITLE: Running WAHA Docker Container for ARM Architecture\nDESCRIPTION: Commands specific to ARM architecture (e.g., Apple Silicon) for downloading and running the WAHA Docker container. It includes steps to rename the image for consistency.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+python/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Download the image\ndocker pull devlikeapro/waha:arm\n# Rename it, so you can use devlikeapro/waha image in other place\ndocker tag devlikeapro/waha:arm devlikeapro/waha\n# Run the docker container\ndocker run -it --rm --network=host -e WHATSAPP_HOOK_URL=http://localhost:5000/bot -e \"WHATSAPP_HOOK_EVENTS=*\" --name waha devlikeapro/waha\n```\n\n----------------------------------------\n\nTITLE: JSON Event Payload for Session Status Change\nDESCRIPTION: Example of the session.status event payload, triggered when a session's status changes.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_23\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"session.status\",\n  \"session\": \"default\",\n  \"me\": {\n    \"id\": \"7911111@c.us\",\n    \"pushName\": \"~\"\n  },\n  \"payload\": {\n    \"status\": \"WORKING\"\n  },\n  \"engine\": \"WEBJS\",\n  \"environment\": {\n    \"version\": \"2023.10.12\",\n    \"engine\": \"WEBJS\",\n    \"tier\": \"PLUS\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing WAHA Docker Container for ARM Processors\nDESCRIPTION: Commands for downloading and setting up the WAHA Docker container on ARM-based systems like Apple Silicon/M1. It pulls the ARM-specific image and tags it for standard use.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+kotlin/index.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Download the image\ndocker pull devlikeapro/waha:arm\n# Rename it, so you can use devlikeapro/waha image in other place\ndocker tag devlikeapro/waha:arm devlikeapro/waha\n# Run the docker container\ndocker run -it --rm --network=host -e WHATSAPP_HOOK_URL=http://localhost:5000/bot -e \"WHATSAPP_HOOK_EVENTS=*\" --name waha devlikeapro/waha\n\n# It prints logs and the last line must be\n# WhatsApp API is running on: http://[::1]:3000\n```\n\n----------------------------------------\n\nTITLE: Generating Self-signed Certificates\nDESCRIPTION: Bash commands to generate self-signed SSL/TLS certificates for HTTPS. This creates a private key, a certificate signing request, and a self-signed certificate.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-https/index.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmkdir .secrets\nopenssl genpkey -algorithm RSA -out .secrets/privkey.pem -pkeyopt rsa_keygen_bits:2048\nopenssl req -new -key .secrets/privkey.pem -out .secrets/cert.csr -subj \"/\"\nopenssl req -x509 -days 3650 -key .secrets/privkey.pem -in .secrets/cert.csr -out .secrets/cert.pem\ncp .secrets/cert.pem .secrets/chain.pem\necho \"DONE!\"\n```\n\n----------------------------------------\n\nTITLE: Setting Security Admin Messages Body Schema - JSON\nDESCRIPTION: JSON schema for the required request body when configuring group security settings for admin-only messages.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/changelog.md#2025-04-20_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"adminsOnly\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Video Format Conversion Command\nDESCRIPTION: FFmpeg command to convert video files to the required format (MP4 with libx264 codec) with thumbnail generation support\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nffmpeg -i input_video.mp4 -c:v libx264 -map 0 -movflags +faststart output_video.mp4\n```\n\n----------------------------------------\n\nTITLE: Downloading WAHA with n8n Docker Compose Configuration\nDESCRIPTION: Commands to download the prepared docker-compose file for setting up WAHA and n8n together.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-n8n/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/devlikeapro/waha/core/docker-compose/n8n/docker-compose.yaml\n```\n\n----------------------------------------\n\nTITLE: Switching to WAHA Core (Free Version) in Docker Compose\nDESCRIPTION: Command to modify the docker-compose.yaml file to use the free version (WAHA Core) instead of the donation version (WAHA Plus).\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-n8n/index.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsed -i 's/devlikeapro\\/waha-plus/devlikeapro\\/waha/g' docker-compose.yaml\n```\n\n----------------------------------------\n\nTITLE: Handling Engine Events in WhatsApp Integration (JSON)\nDESCRIPTION: This snippet shows the JSON structure for an engine.event, which is a low-level event used for debug and troubleshooting purposes. It includes the event type, session, engine, and payload with additional event details.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/events/index.md#2025-04-20_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"engine.event\",\n  \"session\": \"default\",\n  \"engine\": \"NOWEB\",\n  \"payload\": {\n    \"event\": \"messages.upsert\",\n    \"data\": {\"\":  \"\"}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Joining a Group via API in HTTP and JSON\nDESCRIPTION: This code shows how to make a POST request to join a WhatsApp group using either an invite code or a full invite link. The response includes the group ID.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/blog/waha-2024-12/index.md#2025-04-20_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/groups/join\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"code\": \"invitecode\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"code\": \"https://chat.whatsapp.com/invitecode\"\n}\n```\n\n----------------------------------------\n\nTITLE: Get All Server Environment Variables Request\nDESCRIPTION: HTTP request to retrieve all environment variables from the WAHA server, not limited to WAHA-specific ones.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/observability/index.md#2025-04-20_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nGET /api/server/environment?all=true\n```\n\n----------------------------------------\n\nTITLE: Converting Video to Compatible Format using FFmpeg\nDESCRIPTION: Command to convert a video file to MP4 format with libx264 codec, which is required for sending video status. The '-map 0 -movflags +faststart' options are necessary for thumbnail generation.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nffmpeg -i input_video.mp4 -c:v libx264 -map 0 -movflags +faststart output_video.mp4\n```\n\n----------------------------------------\n\nTITLE: Docker Image Version Tag Format - Bash\nDESCRIPTION: Example of the new Docker image versioning format introduced in version 2026.6.1 for pinning specific versions.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/changelog.md#2025-04-20_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndevlikeapro/waha-plus:chrome-{version} => devlikeapro/waha-plus:chrome-2024.6.1\n```\n\n----------------------------------------\n\nTITLE: Deprecated Group Leave Event Structure in JSON\nDESCRIPTION: JSON structure for the deprecated group.leave event. This event format is marked as deprecated and users should use the group.v2.leave endpoint instead. The payload contains engine-specific data that varies depending on the implementation.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/groups/events-group.leave.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"group.leave\",\n  \"session\": \"default\",\n  \"engine\": \"WEBJS\",\n  \"payload\": {\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Excluding Paths from API Key Authentication\nDESCRIPTION: This code snippet describes how to exclude certain URI paths from API key authentication in WAHA using an environment variable.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/changelog.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n- Add `WHATSAPP_API_KEY_EXCLUDE_PATH` to exclude URI from key auth [#451](https://github.com/devlikeapro/waha/issues/451) - [**🔒 Security**]({{< relref \"/docs/how-to/security\" >}})\n```\n\n----------------------------------------\n\nTITLE: Building and Running WhatsApp Echo Bot in Kotlin\nDESCRIPTION: Commands to clone, build, and run a sample WhatsApp Echo Bot application written in Kotlin. This bot demonstrates webhook functionality by echoing back any received messages.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+kotlin/index.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Clone the git repository with example\ngit clone https://github.com/devlikeapro/waha-kotlin.git\n\n# Build and run the app\n./gradlew build\n./gradlew run\n```\n\n----------------------------------------\n\nTITLE: JSON Request Body for Pairing Code Generation\nDESCRIPTION: Example JSON body for requesting a pairing code, containing the phone number to link.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"phoneNumber\": \"12132132130\"\n}\n```\n\n----------------------------------------\n\nTITLE: Starting a WhatsApp Session via HTTP POST Request (Deprecated)\nDESCRIPTION: Deprecated method to create, update, and start a new session. Accepts session configuration in the request body.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_25\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sessions/start\n```\n\n----------------------------------------\n\nTITLE: Message with Document Attachment Payload in WAHA\nDESCRIPTION: JSON structure for a message with a document file attachment, showing the URL to download the file, its original filename, MIME type, and potential error information.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/receive-messages/index.md#2025-04-20_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"message\",\n  \"session\": \"default\",\n  \"payload\": {\n    \"id\": \"true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n    \"timestamp\": 1667561485,\n    \"from\": \"11111111111@c.us\",\n    \"media\": {\n      \"url\": \"http://localhost:3000/api/files/true_11111111111@c.us_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.pdf\",\n      \"filename\": \"some-file.pdf\",\n      \"mimetype\": \"application/pdf\",\n      \"error\": null\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Request Body for Stopping a Session (Deprecated)\nDESCRIPTION: Example JSON body for the deprecated session stop endpoint, specifying the session name and logout option.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_28\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"default\",\n  \"logout\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Hugo Additional Information Cards\nDESCRIPTION: Additional navigation cards using Hugo shortcodes to display links to changelog, GitHub repository, integrations, swagger documentation, and engines.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/overview/quick-start/links.md#2025-04-20_snippet_2\n\nLANGUAGE: hugo\nCODE:\n```\n{{< card-grid >}}\n{{< card title=\"What's going on?\" icon=\"outline/info-circle\" color=\"green\" >}}\n\n- [🆕 Changelog]({{< relref \"/docs/overview/changelog\" >}})\n- [🐙 GitHub](https://github.com/devlikeapro/waha)\n\n{{< /card >}}\n{{< card title=\"Other docs\" icon=\"outline/books\" color=\"red\" >}}\n\n- [🧩 Integrations]({{< relref \"/docs/integrations\" >}})\n- [📚 Swagger]({{< relref \"/docs/how-to/swagger\" >}})\n- [🏭 Engines]({{< relref \"/docs/how-to/engines\" >}})\n\n{{< /card >}}\n{{< /card-grid >}}\n```\n\n----------------------------------------\n\nTITLE: Checking Java Version\nDESCRIPTION: Command to verify Java installation by checking the installed version. No additional dependencies are required for this check.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/java/install-dependencies.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\njava --version\n# No additional dependencies required\n```\n\n----------------------------------------\n\nTITLE: Installing Node Dependencies with NPM\nDESCRIPTION: Command to install the axios HTTP client and express web framework using NPM package manager. These are core dependencies required for the Waha documentation project.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/javascript/install-dependencies.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install axios express\n```\n\n----------------------------------------\n\nTITLE: Installing Fiber Web Framework for Go\nDESCRIPTION: This command installs the Fiber web framework, a popular Express-inspired web framework for Go. It uses the -u flag to update existing packages and their dependencies.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/layouts/code/language/go/install-dependencies.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get -u github.com/gofiber/fiber/v2\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for WAHA in Go\nDESCRIPTION: This snippet demonstrates how to install the necessary dependencies for using WAHA with Go. It uses the 'go get' command to fetch the required packages.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+go/index.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/go-resty/resty/v2\n```\n\n----------------------------------------\n\nTITLE: Deleting WhatsApp Status\nDESCRIPTION: HTTP POST request for deleting a previously sent status message using its message ID.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_14\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/{session}/status/delete\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"AAAAAAAAAAAAAAAAAAAAAA\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up PHP WAHA Integration\nDESCRIPTION: Front matter and page setup for WhatsApp API PHP documentation\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+php/index.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"WAHA + PHP\"\ndescription: \"WhatsApp API + PHP examples.\"\nlead: \"WhatsApp API + PHP examples.\"\ndate: 2020-10-06T08:49:31+00:00\nlastmod: 2020-10-06T08:49:31+00:00\ndraft: false\nimages: []\nmenu:\ndocs:\nparent: \"help\"\nweight: 990\ntoc: true\nslug: PHP\n---\n```\n\n----------------------------------------\n\nTITLE: Listing WhatsApp Sessions via HTTP GET Request\nDESCRIPTION: Retrieves a list of all active sessions. Can include stopped sessions with the 'all=true' parameter.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_15\n\nLANGUAGE: http\nCODE:\n```\nGET /api/sessions\n```\n\n----------------------------------------\n\nTITLE: Send Seen Group Message\nDESCRIPTION: HTTP POST request for marking group messages as seen with participant field.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/send-messages/index.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session\": \"default\",\n  \"chatId\": \"11111111111@g.us\",\n  \"messageId\": \"false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA\",\n  \"participant\": \"33333333333@c.us\"\n}\n```\n\n----------------------------------------\n\nTITLE: Getting User ID from WhatsApp API\nDESCRIPTION: Endpoint to retrieve the current user's WhatsApp ID and associated information. Returns a JSON object containing the user's WhatsApp ID in the format 'number@c.us'.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/status/index.md#2025-04-20_snippet_18\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{SESSION}/me\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"11111111111@c.us\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Logging Out a Session in WAHA\nDESCRIPTION: HTTP POST request to log out a session. This removes session information but keeps the configuration, allowing for a fresh start with the same settings.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/sessions/index.md#2025-04-20_snippet_13\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/sessions/{session}/logout\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Chat Presence via HTTP GET (JSON)\nDESCRIPTION: Illustrates how to get presence information for a single chat using a GET request with a specific chat ID. The response includes presence details for the chat or group participants.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/how-to/presence/index.md#2025-04-20_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nGET /api/{session}/presence/{chatId}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"2132132130@c.us\",\n  \"presences\": [\n    {\n      \"participant\": \"2132132130@c.us\",\n      \"lastKnownPresence\": \"online\",\n      \"lastSeen\": null\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Test WhatsApp Message via API\nDESCRIPTION: JSON payload example for sending a text message through the WAHA API. This shows the format for the chatId using a phone number and the session parameter.\nSOURCE: https://github.com/devlikeapro/waha-docs/blob/main/content/docs/integrations/waha+kotlin/index.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"chatId\": \"12132132130@c.us\",\n  \"text\": \"Hi there!\",\n  \"session\": \"default\"\n}\n```"
  }
]
[
  {
    "owner": "rive-app",
    "repo": "rive-react",
    "content": "TITLE: Controlling Rive Animation Playback on Hover using React (JavaScript/JSX)\nDESCRIPTION: This snippet demonstrates how to create a Rive animation in React that does not autoplay initially but plays when the user hovers the cursor over the canvas. It uses the useRive hook to obtain the rive instance and triggers play and pause methods on mouse enter and leave events respectively. Dependencies include React hooks and useRive. Input is controlled via mouse events, and output is the animation playback state changing accordingly. It requires the animation file 'poison-loader.riv'. Care is taken to guard against calling play or pause before the rive instance is fully loaded.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/examples/stories/AnimationPlayback.stories.mdx#_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst { rive, RiveComponent } = useRive({\n  src: 'poison-loader.riv',\n  autoplay: false,\n});\nfunction onMouseEnter() {\n  if (rive) {\n    rive.play();\n  }\n}\nfunction onMouseLeave() {\n  if (rive) {\n    rive.pause();\n  }\n}\nreturn (\n  <div className=\"center\">\n    <RiveComponent\n      className=\"base-canvas-size\"\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    />\n  </div>\n);\n```\n\n----------------------------------------\n\nTITLE: Importing and Using the Rive React Canvas Component (React & TypeScript)\nDESCRIPTION: This snippet demonstrates how to import the default RiveComponent from '@rive-app/react-canvas' and render a Rive animation within a React component using JSX. The component automatically handles animation playback and sizing, suitable for simple use cases where control over the animation state is not required.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/examples/stories/RiveOverview.stories.mdx#_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport RiveComponent from '@rive-app/react-canvas';\n```\n\n----------------------------------------\n\nTITLE: Using the useRive Hook for Interactive Control of Rive Animations (React & TypeScript)\nDESCRIPTION: This snippet illustrates the use of the `useRive` hook from '@rive-app/react-canvas' to gain imperative control over Rive animations, such as playback management and state machine interactions. It initializes Rive with specific parameters like source, state machine, and artboard, and demonstrates toggling play and pause with React state management and callbacks for animation events.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/examples/stories/RiveOverview.stories.mdx#_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\n<Canvas withSource=\"open\">\n  <Story name=\"useRive Hook\">\n    {() => {\n      const [isPlaying, setIsPlaying] = useState(true);\n      const [animationText, setAnimationText] = useState('');\n      const { rive, RiveComponent: RiveComponentPlayback } = useRive({\n        src: 'truck.riv',\n        stateMachines: 'drive',\n        artboard: 'Truck',\n        autoplay: true,\n        onPause: () => {\n          setAnimationText('Animation paused!');\n        },\n        onPlay: () => {\n          setAnimationText('Animation is playing..');\n        },\n      });\n      const togglePlaying = () => {\n        if (isPlaying) {\n          rive.pause();\n          setIsPlaying(false);\n        } else {\n          rive.play();\n          setIsPlaying(true);\n        }\n      };\n      return (\n        <> \n          <div className=\"center\">\n            <RiveComponentPlayback className=\"base-canvas-size\">\n              <p>Animation that can be paused and played by clicking on it</p>\n            </RiveComponentPlayback>\n            <p>{animationText}</p>\n            <Button onClick={togglePlaying}>\n              {isPlaying ? 'Pause' : 'Play'}\n            </Button>\n          </div>\n        </>\n      );\n    }}\n  </Story>\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Handling State Machine Boolean Input with Rive React\nDESCRIPTION: Demonstrates how to obtain references to boolean state machine inputs using the `useStateMachineInput` hook and update their values via the `.value` property. Shows integration with mouse events (`onMouseEnter`, `onMouseLeave`, etc.) and how to use a React state variable to trigger component re-renders based on input value changes.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/examples/stories/StateMachineDocs.stories.mdx#_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n() => {\n      const STATE_MACHINE_NAME = 'State Machine 1';\n      const ON_HOVER_INPUT_NAME = 'Hover';\n      const ON_PRESSED_INPUT_NAME = 'Pressed';\n      const { rive, RiveComponent: RiveComponentTouch } = useRive({\n        src: 'like.riv',\n        stateMachines: STATE_MACHINE_NAME,\n        artboard: 'New Artboard',\n        autoplay: true,\n      });\n      const [isHovered, setIsHovered] = useState(false);\n      // Both onHoverInput and onPressedInput are boolean inputs. To transition\n      // states we need to set the value property to true or false.\n      const onPressedInput = useStateMachineInput(\n        rive,\n        STATE_MACHINE_NAME,\n        ON_PRESSED_INPUT_NAME\n      );\n      const onHoverInput = useStateMachineInput(\n        rive,\n        STATE_MACHINE_NAME,\n        ON_HOVER_INPUT_NAME\n      );\n      function onMouseDown() {\n        onPressedInput.value = true;\n      }\n      function onMouseUp() {\n        onPressedInput.value = false;\n      }\n      function onMouseEnter() {\n        onHoverInput.value = true;\n        setIsHovered(true);\n      }\n      function onMouseLeave() {\n        onHoverInput.value = false;\n        setIsHovered(false);\n      }\n      return (\n        <>\n          <div className=\"center\">\n            <RiveComponentTouch\n              className=\"base-canvas-size\"\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n              onMouseDown={onMouseDown}\n              onMouseUp={onMouseUp}\n            />\n            <p>Hover and click on the canvas</p>\n            <p>Is cursor hovering? {isHovered ? 'Yes' : 'No'}</p>\n          </div>\n        </>\n      );\n    }\n```\n\n----------------------------------------\n\nTITLE: Rendering Rive Animation with the RiveComponent in React\nDESCRIPTION: This code exemplifies embedding a Rive animation file into a React component using the RiveComponent. It renders a `<canvas>` element to display the animation, wrapped in a `<div>` for layout styling. The `src` prop specifies the '.riv' animation file, and styling props are passed down for layout control.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/examples/stories/RiveOverview.stories.mdx#_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n<Canvas withSource=\"open\">\n  <Story name=\"Rive Component\">\n    {() => (\n      <div className=\"center\">\n        <RiveComponent src=\"poison-loader.riv\" className=\"base-canvas-size\" />\n      </div>\n    )}\n  </Story>\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Setting State Machine Number Input with Rive React\nDESCRIPTION: Illustrates how to retrieve a reference to a number state machine input using `useStateMachineInput` and update its numeric value by setting the `.value` property. Shows how this can be controlled by external UI elements like buttons to drive animation state based on number inputs.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/examples/stories/StateMachineDocs.stories.mdx#_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n() => {\n      const STATE_MACHINE_NAME = 'skill-controller';\n      const INPUT_NAME = 'level';\n      const { rive, RiveComponent: RiveComponentTouch } = useRive({\n        src: 'skills.riv',\n        stateMachines: STATE_MACHINE_NAME,\n        artboard: 'New Artboard',\n        autoplay: true,\n      });\n      // levelInput is a number state machine input. To transition the state machine,\n      // we need to set the value to a number. For this state machine input, we need\n      // to set to 0, 1 or 2 for a state transition to occur.\n      const levelInput = useStateMachineInput(\n        rive,\n        STATE_MACHINE_NAME,\n        INPUT_NAME\n      );\n      return (\n        // The animation will fit to the parent element, so we set a large height\n        // and width for this example.\n        <div className=\"center\">\n          <RiveComponentTouch className=\"large-canvas-size\" />\n          <div className=\"btn-group\">\n            Choose a level:\n            <Button onClick={() => (levelInput.value = 0)}>0</Button>\n            <Button onClick={() => (levelInput.value = 1)}>1</Button>\n            <Button onClick={() => (levelInput.value = 2)}>2</Button>\n          </div>\n        </div>\n      );\n    }\n```\n\n----------------------------------------\n\nTITLE: Firing State Machine Trigger Input with Rive React\nDESCRIPTION: Explains how to get a reference to a trigger state machine input using `useStateMachineInput`. Unlike boolean or number inputs, triggers are activated by calling the `.fire()` method. The example shows how to link a click event on the Rive canvas to fire the trigger.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/examples/stories/StateMachineDocs.stories.mdx#_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n() => {\n      const STATE_MACHINE_NAME = 'State Machine 1';\n      const INPUT_NAME = 'Pressed';\n      const { rive, RiveComponent: RiveComponentTouch } = useRive({\n        src: 'piggy-bank.riv',\n        stateMachines: STATE_MACHINE_NAME,\n        artboard: 'New Artboard',\n        autoplay: true,\n      });\n      // pressedInput in a trigger state machine input. To transition the state\n      // we need to call the `fire()` method on the input.\n      const pressedInput = useStateMachineInput(\n        rive,\n        STATE_MACHINE_NAME,\n        INPUT_NAME\n      );\n      // The animation will fit to the parent element, so we set a large height\n      // and width for this example.\n      return (\n        <div className=\"center\">\n          <RiveComponentTouch\n            className=\"base-canvas-size\"\n            onClick={() => pressedInput.fire()}\n          />\n          <p>Click on the canvas</p>\n        </div>\n      );\n    }\n```\n\n----------------------------------------\n\nTITLE: Listening for Rive Events with Rive React\nDESCRIPTION: Shows how to subscribe to Rive events emitted from a state machine using the `rive.on()` method within a React `useEffect` hook. The example demonstrates listening for the `EventType.RiveEvent` and provides a callback function (`onRiveEventReceived`) to process the event data when fired.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/examples/stories/StateMachineDocs.stories.mdx#_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n() => {\n      const STATE_MACHINE_NAME = 'State Machine 1';\n      const { rive, RiveComponent } = useRive({\n        src: 'rating_animation.riv',\n        stateMachines: STATE_MACHINE_NAME,\n        autoplay: true,\n        automaticallyHandleEvents: true,\n      });\n      useEffect(() => {\n        if (rive) {\n          rive.on(EventType.RiveEvent, onRiveEventReceived);\n        }\n      }, [rive]);\n      const onRiveEventReceived = (riveEvent) => {\n        console.log('Rive Event Fired', riveEvent);\n      };\n      return (\n        <div className=\"center\">\n          <RiveComponent className=\"base-canvas-size\" />\n          <p>Click on the 5 star!</p>\n        </div>\n      );\n    }\n```\n\n----------------------------------------\n\nTITLE: Play/Pause Rive Animation with External Button Controls in React (JavaScript/JSX)\nDESCRIPTION: This example illustrates controlling a Rive animation's playback state through external UI buttons in React, using React state and the useRive hook. The animation auto-plays initially, and a button toggles play/pause states by invoking the rive instance's play or pause methods. It requires the 'truck.riv' file and the 'drive' state machine on the 'Truck' artboard. The togglePlaying function updates both the rive playback and internal React state to reflect the current state. Inputs are button click events, outputs are toggled animation playback states.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/examples/stories/AnimationPlayback.stories.mdx#_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst [isPlaying, setIsPlaying] = useState(true);\nconst { rive, RiveComponent } = useRive({\n  src: 'truck.riv',\n  stateMachines: \"drive\",\n  artboard: 'Truck',\n  autoplay: true,\n});\nconst togglePlaying = () => {\n  if (isPlaying) {\n    rive.pause();\n    setIsPlaying(false);\n  } else {\n    rive.play();\n    setIsPlaying(true);\n  }\n};\nreturn (\n  <>\n    <div className=\"center\">\n      <RiveComponent className=\"base-canvas-size\" />\n      <Button onClick={togglePlaying}>{isPlaying ? 'Pause' : 'Play'}</Button>\n    </div>\n  </>\n);\n```\n\n----------------------------------------\n\nTITLE: Using IntersectionObserver to Play/Pause Rive Animation in React (JavaScript/JSX)\nDESCRIPTION: This snippet shows how to control Rive animation playback based on the visibility of the animation canvas in the viewport using IntersectionObserver. The animation does not autoplay initially but plays the named animation 'Hover' when the canvas intersects with at least 10% visibility, and pauses when out of view. It uses useRef to reference the DOM element and useEffect to set up the observer. Requirements include React hooks, useRive hook, and 'baseball.riv' animation file. Inputs are the viewport intersection events, outputs are play/pause states triggered accordingly.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/examples/stories/AnimationPlayback.stories.mdx#_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst ref = useRef(null);\nconst { rive, RiveComponent } = useRive({\n  src: 'baseball.riv',\n  autoplay: false,\n  animations: \"Hover\"\n});\nuseEffect(() => {\n  const observer = new IntersectionObserver(\n    ([entry]) => {\n      if (rive) {\n        if (entry.isIntersecting) {\n          rive.play(\"Hover\");\n        } else {\n          rive.pause(\"Hover\");\n        }\n      }\n    },\n    {\n      rootMargin: '0px',\n      threshold: 0.1,\n    }\n  );\n  if (ref && ref.current) {\n    observer.observe(ref.current);\n  }\n}, [rive]);\nreturn (\n  <div ref={ref} className=\"center\">\n    <RiveComponent className=\"base-canvas-size\" />\n  </div>\n);\n```\n\n----------------------------------------\n\nTITLE: Rendering Rive Text with Rive React\nDESCRIPTION: A simple example demonstrating the rendering of Rive animations that contain text elements. It shows the basic usage of the `useRive` hook to load a `.riv` file with a state machine and autoplay enabled. It includes a note about potential limitations with certain Rive React packages regarding text rendering.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/examples/stories/StateMachineDocs.stories.mdx#_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n() => {\n      const STATE_MACHINE_NAME = 'State Machine 1';\n      const { rive, RiveComponent } = useRive({\n        src: 'text_test.riv',\n        stateMachines: STATE_MACHINE_NAME,\n        autoplay: true,\n        automaticallyHandleEvents: true,\n      });\n      return (\n        <div className=\"center\">\n          <RiveComponent className=\"base-canvas-size\" />\n        </div>\n      );\n    }\n```\n\n----------------------------------------\n\nTITLE: Adding react-canvas-lite package\nDESCRIPTION: This commit introduces the `react-canvas-lite` package to the build setup, which probably makes it possible to use alternative canvas based rendering or offers improved performance and features. The specific implementation details can be found by inspecting the committed changes of the package.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_16\n\n\n\n----------------------------------------\n\nTITLE: Starting the local development server with npm\nDESCRIPTION: This command starts the local development server, enabling live updates to the core source files located in the `src/` directory. This allows developers to preview changes in real-time as they are made, facilitating rapid iteration and debugging.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Bump WASM dependency to support Rive Events\nDESCRIPTION: This commit updates the WASM dependency to support Rive Events. This commit focuses on adding support for Rive events within the `rive-react` package.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_32\n\n\n\n----------------------------------------\n\nTITLE: Running Storybook for Example Deployment with npm\nDESCRIPTION: This command launches Storybook, a tool for developing and showcasing UI components in isolation. It displays example suites located in `examples/**.stories.mdx` files, which support both React components and Markdown documentation. Changes to source and example files are automatically reflected in the Storybook environment.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run storybook\n```\n\n----------------------------------------\n\nTITLE: Bump rive-wasm to 2.1.5 for follow path fix\nDESCRIPTION: This commit bumps the `rive-wasm` dependency to version 2.1.5 to address a follow path fix, focusing on fixing the issues related to the path constraints on solos.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_43\n\n\n\n----------------------------------------\n\nTITLE: Adding WebGL to 2.8.0\nDESCRIPTION: This commit adds support for WebGL in `rive-wasm` version 2.8.0. This likely involves updates to how the WebGL rendering is handled or integrated within the React component.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.3.1\nDESCRIPTION: This commit marks the release of the `rive-react` package version 4.3.1. This commit is only for release management and doesn't have code snippets.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_30\n\n\n\n----------------------------------------\n\nTITLE: Bumping rive-wasm to 2.8.0\nDESCRIPTION: This commit updates the `rive-wasm` dependency to version 2.8.0.  This is a proxy solution to check for lost context, most likely related to WebGL rendering. The update ensures compatibility and potentially enhances rendering performance.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Bumping rive-wasm to 2.7.4\nDESCRIPTION: This commit updates the `rive-wasm` dependency to version 2.7.4. The update includes bone fixes which are important for correct animation.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_12\n\n\n\n----------------------------------------\n\nTITLE: Patching wasm to 2.7.5\nDESCRIPTION: This commit patches the `rive-wasm` dependency to version 2.7.5.  The patch probably incorporates bug fixes or minor enhancements to the WASM runtime, contributing to better rendering and animation performance.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_10\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.0.0\nDESCRIPTION: This commit represents the release of version 4.0.0 of the `rive-react` package.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_53\n\n\n\n----------------------------------------\n\nTITLE: Patching rive-wasm to 2.7.3\nDESCRIPTION: This commit updates the `rive-wasm` dependency to version 2.7.3.  This likely incorporates bug fixes or performance improvements related to WASM runtime.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_14\n\n\n\n----------------------------------------\n\nTITLE: Bump WASM dependency to 2.7.2\nDESCRIPTION: This commit updates the `rive-wasm` dependency to version 2.7.2. This version specifically addresses a nested input patch. The nested input probably refers to input elements within the rendered Rive animation.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_19\n\n\n\n----------------------------------------\n\nTITLE: Bump rive-wasm to 2.4.1\nDESCRIPTION: This commit bumps the `rive-wasm` dependency to version 2.4.1. This version includes event updates, so it probably includes changes related to event handling within Rive animations.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_31\n\n\n\n----------------------------------------\n\nTITLE: Bump rive-wasm for follow path constraints on solos\nDESCRIPTION: This commit updates the `rive-wasm` dependency to address follow path constraints on solos. This enhances how animations are rendered.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_41\n\n\n\n----------------------------------------\n\nTITLE: Bump rive-wasm for follow up solo fix\nDESCRIPTION: This commit bumps the `rive-wasm` dependency for a follow-up solo fix. This suggests that there were problems related to solos and its follow up fixes.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_39\n\n\n\n----------------------------------------\n\nTITLE: Bump rive-wasm to 2.3.1\nDESCRIPTION: This commit updates the `rive-wasm` dependency to version 2.3.1, which includes a mesh fix. The mesh fix addresses rendering problems with the Rive animations.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_35\n\n\n\n----------------------------------------\n\nTITLE: Bump wasm to 2.4.3\nDESCRIPTION: This commit bumps `rive-wasm` to version 2.4.3. The update includes URL sanitization.  URL sanitization is important to maintain the security and integrity of the animations.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_27\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.1.3\nDESCRIPTION: This commit marks the release of version 4.1.3 of the `rive-react` package.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_44\n\n\n\n----------------------------------------\n\nTITLE: Patching rive-wasm to 2.4.4\nDESCRIPTION: This commit bumps the `rive-wasm` dependency to version 2.4.4.  It likely includes specific bug fixes or performance updates.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_25\n\n\n\n----------------------------------------\n\nTITLE: Bump rive-wasm to 2.4.2\nDESCRIPTION: This commit updates the `rive-wasm` dependency to version 2.4.2. This indicates the release of new features, bug fixes or performance improvements in the WASM runtime, or potentially new functionalities, depending on what was done.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_29\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.1.5\nDESCRIPTION: This commit marks the release of version 4.1.5 of the `rive-react` package.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_40\n\n\n\n----------------------------------------\n\nTITLE: Bump to rive wasm 2.0.0\nDESCRIPTION: This commit updates the `rive-wasm` dependency to version 2.0.0. This version bump likely includes a set of performance improvements and bug fixes that contribute to a better Rive animation rendering experience.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_54\n\n\n\n----------------------------------------\n\nTITLE: Committing Major Changes with Git\nDESCRIPTION: This git command demonstrates how to commit major changes with a descriptive message. The 'Major:' prefix helps categorize the commit in the changelog.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CONTRIBUTING.md#_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ngit commit -m \"Major: Restructuring the useRive API with new parameters\"\n```\n\n----------------------------------------\n\nTITLE: Bump react to 4.5.0\nDESCRIPTION: This commit is for bumping react to version 4.5.0. It should include the code that has been changed, but without the code context, it's difficult to say for sure.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_21\n\n\n\n----------------------------------------\n\nTITLE: Updating rive wasm\nDESCRIPTION: This commit updates the `rive-wasm` dependency. The specific changes depend on the context and commit message.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_37\n\n\n\n----------------------------------------\n\nTITLE: Bump wasm to 2.1.3\nDESCRIPTION: This commit updates the `rive-wasm` dependency to version 2.1.3. It includes bug fixes, or improvements regarding rendering, or animation performance, depending on the actual change.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_45\n\n\n\n----------------------------------------\n\nTITLE: Bump rive-wasm to 2.1.2\nDESCRIPTION: This commit bumps the `rive-wasm` dependency to version 2.1.2. This could be about fixes, or performance improvements.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_47\n\n\n\n----------------------------------------\n\nTITLE: Defining Prism Syntax Highlighter in JavaScript\nDESCRIPTION: Header documentation for the Prism syntax highlighting library. It specifies the MIT license, attributes the author Lea Verou, and indicates that Prism is exposed as a namespace and is publicly accessible.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/docs/0.f3c14cfa225a4c40c8ba.manager.bundle.js.LICENSE.txt#_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n```\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.2.0\nDESCRIPTION: This commit marks the release of the `rive-react` package version 4.2.0 and has no included code snippets.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_36\n\n\n\n----------------------------------------\n\nTITLE: Patch rive-wasm to 2.1.1\nDESCRIPTION: This commit patches the `rive-wasm` dependency to version 2.1.1. It probably implements minor bug fixes or improvements.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_49\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.5.3\nDESCRIPTION: This commit indicates the release of version 4.5.3 of the `rive-react` package. It is a metadata-only commit, containing no code snippets.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_13\n\n\n\n----------------------------------------\n\nTITLE: Add ability to get and set text\nDESCRIPTION: This commit adds the ability to get and set text via wasm runtime. The added functionality lets applications dynamically read and modify text elements within Rive animations.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_52\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.5.0\nDESCRIPTION: This commit is for the release of the `rive-react` package version 4.5.0. No code snippets included.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_20\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.4.0\nDESCRIPTION: This commit represents the release of version 4.4.0 of the `rive-react` package, without specific code snippets in this commit.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_22\n\n\n\n----------------------------------------\n\nTITLE: Bumping rive-wasm to 2.7.6\nDESCRIPTION: This commit updates the `rive-wasm` dependency to version 2.7.6.  This likely encompasses fixes or performance improvements within the WASM runtime for Rive animations.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_8\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.3.0\nDESCRIPTION: This commit signifies the release of version 4.3.0 of the `rive-react` package and doesn't include any code snippets.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_33\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.5.2\nDESCRIPTION: This commit marks the release of the `rive-react` package version 4.5.2. No code snippets are included, simply the release metadata.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_15\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.5.1\nDESCRIPTION: This commit marks the release of version 4.5.1 of the `rive-react` package. No code snippets are present; this is a metadata commit.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_18\n\n\n\n----------------------------------------\n\nTITLE: Bumping rive-wasm to 2.7.8\nDESCRIPTION: This commit updates `rive-wasm` to version 2.7.8. The update includes a texture deletion check, likely addressing a memory or rendering issue related to textures within Rive animations.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_6\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.5.8\nDESCRIPTION: This commit indicates the release of version 4.5.8 of the `rive-react` package. No specific code snippets are included; the commit represents the release itself.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.5.7\nDESCRIPTION: This commit tags the release of version 4.5.7 of the `rive-react` package. No code snippets are present, the commit describes the release process.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_5\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.5.6\nDESCRIPTION: This commit marks the release of version 4.5.6 of the `rive-react` package. No code snippets are directly present.  This is a general release commit.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_7\n\n\n\n----------------------------------------\n\nTITLE: Bump rive-app versions to 2.5.0\nDESCRIPTION: This commit updates Rive app versions to version 2.5.0.  It probably includes a variety of updates depending on the changes in the app.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_23\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.5.5\nDESCRIPTION: This commit is for releasing version 4.5.5 of the `rive-react` package.  It is a metadata commit and contains no code snippets.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_9\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.5.4\nDESCRIPTION: This commit is for the release of version 4.5.4 of the `rive-react` package. It is a tag for the release and contains no code snippets.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_11\n\n\n\n----------------------------------------\n\nTITLE: Expose RiveProps type from package\nDESCRIPTION: This commit exposes `RiveProps` type from the package, allowing users to use the `RiveProps` type in their own component definitions, enabling more flexible usage of the package.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_51\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.3.3\nDESCRIPTION: This commit is for the release of the `rive-react` package version 4.3.3. No code snippets are included in this commit.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_26\n\n\n\n----------------------------------------\n\nTITLE: Committing Documentation Changes with Git\nDESCRIPTION: This git command demonstrates how to commit documentation changes with a descriptive message. The 'Docs:' prefix helps categorize the commit in the changelog.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ngit commit -m \"Docs: Adding a new link for another example page\"\n```\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.3.2\nDESCRIPTION: This commit is for the release of the `rive-react` package version 4.3.2, which is a release commit without code snippets.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_28\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.3.4\nDESCRIPTION: This commit tags the release of the `rive-react` package version 4.3.4, without code snippets.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_24\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.2.1\nDESCRIPTION: This commit represents the release of the `rive-react` package version 4.2.1. This is a standard release commit, and no code snippets are directly present.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_34\n\n\n\n----------------------------------------\n\nTITLE: Committing Bug Fixes with Git\nDESCRIPTION: This git command demonstrates how to commit bug fixes with a descriptive message. The 'Fix:' prefix helps categorize the commit in the changelog.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngit commit -m \"Fix: Fixing a return type from useRive\"\n```\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.1.4\nDESCRIPTION: This commit signifies the release of version 4.1.4 of the `rive-react` package.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_42\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.1.2\nDESCRIPTION: This commit represents the release of version 4.1.2 of the `rive-react` package.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_46\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.1.1\nDESCRIPTION: This commit denotes the release of version 4.1.1 of the `rive-react` package.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_48\n\n\n\n----------------------------------------\n\nTITLE: Executing Unit Tests with npm\nDESCRIPTION: This command executes the suite of unit tests located in the `test/` directory. These tests are designed to validate the functionality of the high-level components and hooks exported by the library. Adding or modifying tests is crucial when introducing new components, altering the API, or modifying underlying functionality to ensure code quality and prevent regressions.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.1.0\nDESCRIPTION: This commit signifies the release of version 4.1.0 of the `rive-react` package.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_50\n\n\n\n----------------------------------------\n\nTITLE: Tweak copy\nDESCRIPTION: This commit made a small text adjustment (tweak copy) related to the project or release notes. The commit itself doesn't contain any code snippets.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_17\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.6.0\nDESCRIPTION: This commit tags the release of version 4.6.0 of the `rive-react` package. No specific code snippets are present, this commit reflects the version update.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Reverting WASM build to 2.7.7\nDESCRIPTION: This commit reverts the `rive-wasm` build to version 2.7.7.  This was done to test intermediate changes before 2.7.8, which suggests a rollback for testing.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Releasing Rive React v4.1.6\nDESCRIPTION: This commit signifies the release of version 4.1.6 of the `rive-react` package.\nSOURCE: https://github.com/rive-app/rive-react/blob/main/CHANGELOG.md#_snippet_38\n\n"
  }
]
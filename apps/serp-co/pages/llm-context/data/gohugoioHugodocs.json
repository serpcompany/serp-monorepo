[
  {
    "owner": "gohugoio",
    "repo": "hugodocs",
    "content": "TITLE: Example Hugo Site Configuration\nDESCRIPTION: Sample content of a Hugo site configuration file (hugo.toml) with basic settings like baseURL, languageCode, title, and theme.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/quick-start.md#2025-04-08_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nbaseURL = 'https://example.org/'\nlanguageCode = 'en-us'\ntitle = 'My New Hugo Site'\ntheme = 'ananke'\n```\n\n----------------------------------------\n\nTITLE: Building Hugo Site for Deployment\nDESCRIPTION: Shows the command to build a Hugo site for deployment, which publishes files to the 'public' directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/usage.md#2025-04-08_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nhugo\n```\n\n----------------------------------------\n\nTITLE: Example Hugo Content Front Matter and Markdown\nDESCRIPTION: Sample content of a Hugo post, including front matter with title, date, and draft status, followed by Markdown content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/quick-start.md#2025-04-08_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n+++\ntitle = 'My First Post'\ndate = 2024-01-14T07:07:07+01:00\ndraft = true\n+++\n## Introduction\n\nThis is **bold** text, and this is *emphasized* text.\n\nVisit the [Hugo](https://gohugo.io) website!\n```\n\n----------------------------------------\n\nTITLE: Single Page Path Structure\nDESCRIPTION: Shows the file path components for a single content page within a section.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/organization/index.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n                   path (\"posts/my-first-hugo-post.md\")\n.       ⊢-----------^------------⊣\n.      section        slug\n.       ⊢-^-⊣⊢--------^----------⊣\ncontent/posts/my-first-hugo-post.md\n```\n\n----------------------------------------\n\nTITLE: Hugo Content File Path Example\nDESCRIPTION: Example showing a specific content file path to demonstrate ancestor relationships in Hugo's section hierarchy.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/sections.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/products/product-1/benefits/benefit-1.md\n```\n\n----------------------------------------\n\nTITLE: Branch Bundle Directory Structure Example\nDESCRIPTION: Illustrates the structure of branch bundles in Hugo, showing how they can contain resources and other bundles.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/page-bundles.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── branch-bundle-1/\n│   ├── _index.md\n│   ├── content-1.md\n│   ├── content-2.md\n│   ├── image-1.jpg\n│   └── image-2.png\n├── branch-bundle-2/\n│   ├── a-leaf-bundle/\n│   │   └── index.md\n│   └── _index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Audio Player Shortcode in Hugo\nDESCRIPTION: Template for a custom shortcode that generates an audio player using a global resource. The shortcode accepts a 'src' parameter to specify the audio file path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/shortcodes.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get (.Get \"src\") }}\n  <audio controls preload=\"auto\" src=\"{{ .RelPermalink }}\"></audio>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Page Parameters in Hugo Front Matter\nDESCRIPTION: Example showing how to define custom page parameters under the params key in front matter, including title, date, draft status, weight, and a custom author parameter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/front-matter.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Example'\ndate = 2024-02-02T04:14:54-08:00\ndraft = false\nweight = 10\n[params]\nauthor = 'John Smith'\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of collections.Querify with Different Input Formats\nDESCRIPTION: Demonstrates three equivalent ways to pass key-value pairs to the collections.Querify function: using a dictionary, a slice, or directly as scalar values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Querify.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ collections.Querify (dict \"a\" 1 \"b\" 2) }}\n{{ collections.Querify (slice \"a\" 1 \"b\" 2) }}\n{{ collections.Querify \"a\" 1 \"b\" 2 }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Project Structure After Build\nDESCRIPTION: The Hugo project structure after building the site, showing the additional 'public' and 'resources' directories created during the build process.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/directory-structure.md#2025-04-08_snippet_3\n\nLANGUAGE: txt\nCODE:\n```\nmy-site/\n├── archetypes/\n│   └── default.md\n├── assets/\n├── config/       \n│   └── _default/\n│       └── hugo.toml\n├── content/\n├── data/\n├── i18n/\n├── layouts/\n├── public/       <-- created when you build your site\n├── resources/    <-- created when you build your site\n├── static/\n└── themes/\n```\n\n----------------------------------------\n\nTITLE: Looping Through Collections in Hugo Templates\nDESCRIPTION: Example of iterating through a slice in Hugo templates using the range function with an else fallback for empty collections. Shows how to generate HTML from collection data.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_24\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"foo\" \"bar\" \"baz\" }}\n{{ range $s }}\n  <p>{{ . }}</p>\n{{ else }}\n  <p>The collection is empty</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Basic Hugo Content Structure Example\nDESCRIPTION: Shows how content files are organized in Hugo and their corresponding URL outputs with pretty URLs enabled.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/organization/index.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n.\n└── content\n    └── about\n    |   └── index.md  // <- https://example.org/about/\n    ├── posts\n    |   ├── firstpost.md   // <- https://example.org/posts/firstpost/\n    |   ├── happy\n    |   |   └── ness.md  // <- https://example.org/posts/happy/ness/\n    |   └── secondpost.md  // <- https://example.org/posts/secondpost/\n    └── quote\n        ├── first.md       // <- https://example.org/quote/first/\n        └── second.md      // <- https://example.org/quote/second/\n```\n\n----------------------------------------\n\nTITLE: Creating Base Template in Hugo\nDESCRIPTION: Demonstrates a base template that includes partial templates for head, header, and footer, and uses block functions for main content. This template reduces duplicate code by wrapping other templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/types.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"{{ or site.Language.LanguageCode }}\" dir=\"{{ or site.Language.LanguageDirection `ltr` }}\">\n<head>\n  {{ partial \"head.html\" . }}\n</head>\n<body>\n  <header>\n    {{ partial \"header.html\" . }}\n  </header>\n  <main>\n    {{ block \"main\" . }}{{ end }}\n  </main>\n  <footer>\n    {{ partial \"footer.html\" . }}\n  </footer>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Creating an Image Shortcode with Error Handling in Hugo\nDESCRIPTION: Implements a robust image shortcode that includes error handling for missing required arguments and resources, providing helpful error messages during build.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{- with .Get \"path\" }}\n  {{- with $r := $.Page.Resources.Get ($.Get \"path\") }}\n    {{- with $.Get \"width\" }}\n      {{- with $r.Process (printf \"resize %dx wepb\" ($.Get \"width\" )) }}\n        {{- $alt := or ($.Get \"alt\") \"\" -}}\n        <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"{{ $alt }}\">\n      {{- end }}\n    {{- else }}\n      {{- errorf \"The %q shortcode requires a 'width' argument: see %s\" $.Name $.Position }}\n    {{- end }}\n  {{- else }}\n    {{- warnf \"The %q shortcode was unable to find %s: see %s\" $.Name ($.Get \"path\") $.Position }}\n  {{- end }}\n{{- else }}\n  {{- errorf \"The %q shortcode requires a 'path' argument: see %s\" .Name .Position }}\n{{- end -}}\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Workflow for Hugo\nDESCRIPTION: Complete GitHub Actions workflow configuration for building and deploying a Hugo site to GitHub Pages. Includes caching, Hugo installation, and deployment steps.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-github-pages/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Sample workflow for building and deploying a Hugo site to GitHub Pages\nname: Deploy Hugo site to Pages\n\non:\n  # Runs on pushes targeting the default branch\n  push:\n    branches:\n      - main\n\n  # Allows you to run this workflow manually from the Actions tab\n  workflow_dispatch:\n\n# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages\npermissions:\n  contents: read\n  pages: write\n  id-token: write\n\n# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.\n# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.\nconcurrency:\n  group: \"pages\"\n  cancel-in-progress: false\n\n# Default to bash\ndefaults:\n  run:\n    shell: bash\n\njobs:\n  # Build job\n  build:\n    runs-on: ubuntu-latest\n    env:\n      HUGO_VERSION: 0.145.0\n      HUGO_ENVIRONMENT: production\n      TZ: America/Los_Angeles\n    steps:\n      - name: Install Hugo CLI\n        run: |\n          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\\n          && sudo dpkg -i ${{ runner.temp }}/hugo.deb\n      - name: Install Dart Sass\n        run: sudo snap install dart-sass\n      - name: Checkout\n        uses: actions/checkout@v4\n        with:\n          submodules: recursive\n          fetch-depth: 0\n      - name: Setup Pages\n        id: pages\n        uses: actions/configure-pages@v5\n      - name: Install Node.js dependencies\n        run: \"[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true\"\n      - name: Cache Restore\n        id: cache-restore\n        uses: actions/cache/restore@v4\n        with:\n          path: |\n            ${{ runner.temp }}/hugo_cache\n          key: hugo-${{ github.run_id }}\n          restore-keys:\n            hugo-\n      - name: Build with Hugo\n        run: |\n          hugo \\\n            --gc \\\n            --minify \\\n            --baseURL \"${{ steps.pages.outputs.base_url }}/\" \\\n            --cacheDir \"${{ runner.temp }}/hugo_cache\"\n      - name: Cache Save\n        id: cache-save\n        uses: actions/cache/save@v4\n        with:\n          path: |\n            ${{ runner.temp }}/hugo_cache\n          key: ${{ steps.cache-restore.outputs.cache-primary-key }}\n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./public\n\n  # Deployment job\n  deploy:\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    needs: build\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n\n----------------------------------------\n\nTITLE: Accessing Parent Context Inside With Blocks in Hugo Templates\nDESCRIPTION: Demonstrates how to access the parent/template context from within a with block using the $ prefix. This allows accessing the Page object's properties while inside nested context blocks.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with \"foo\" }}\n  <p>{{ $.Title }} - {{ . }}</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating and Initializing a Hugo Site with Ananke Theme\nDESCRIPTION: Series of commands to create a new Hugo site, initialize a Git repository, add the Ananke theme as a submodule, configure the theme, and start the Hugo development server.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/quick-start.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nhugo new site quickstart\ncd quickstart\ngit init\ngit submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke\necho \"theme = 'ananke'\" >> hugo.toml\nhugo server\n```\n\n----------------------------------------\n\nTITLE: Setting up a Content Adapter for Sanity in Hugo\nDESCRIPTION: This snippet demonstrates how to create a Content Adapter in Hugo that fetches data from Sanity's API, processes Portable Text content using transform.PortableText, and creates pages from the converted Markdown.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/PortableText.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $projectID := \"mysanityprojectid\" }}\n{{ $useCached := true }}\n{{ $api := \"api\" }}\n{{ if $useCached }}\n  {{/* See https://www.sanity.io/docs/api-cdn */}}\n  {{ $api = \"apicdn\" }}\n{{ end }}\n{{ $url := printf \"https://%s.%s.sanity.io/v2021-06-07/data/query/production\"  $projectID $api }}\n\n{{/* prettier-ignore-start */ -}}\n{{ $q :=  `*[_type == 'post']{\n  title, publishedAt, summary, slug, body[]{\n    ...,\n    _type == \"image\" => {\n      ...,\n      asset->{\n        _id,\n        path,\n        url,\n        altText,\n        title,\n        description,\n        metadata {\n          dimensions {\n            aspectRatio,\n            width,\n            height\n          }\n        }\n      }\n    }\n  },\n  }`\n}}\n{{/* prettier-ignore-end */ -}}\n{{ $body := dict \"query\" $q | jsonify }}\n{{ $opts := dict \"method\" \"post\" \"body\" $body }}\n{{ $r := resources.GetRemote $url $opts }}\n{{ $m := $r | transform.Unmarshal }}\n{{ $result := $m.result }}\n{{ range $result }}\n  {{ if not .slug }}\n    {{ continue }}\n  {{ end }}\n  {{ $markdown := transform.PortableText .body }}\n  {{ $content := dict\n    \"mediaType\" \"text/markdown\"\n    \"value\" $markdown\n  }}\n  {{ $params := dict\n    \"portabletext\" (.body | jsonify (dict \"indent\" \" \"))\n  }}\n  {{ $page := dict\n    \"content\" $content\n    \"kind\" \"page\"\n    \"path\" .slug.current\n    \"title\" .title\n    \"date\" (.publishedAt | time )\n    \"summary\" .summary\n    \"params\" $params\n  }}\n  {{ $.AddPage $page }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Site and Page Methods in Hugo Templates\nDESCRIPTION: Shows how to access methods on the Site and Page objects using the current context in Hugo templates. This example demonstrates both explicit and implicit context access for page information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_14\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Title }} → My Site Title\n{{ .Page.Title }} → My Page Title\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Home Page Template in Hugo\nDESCRIPTION: A basic home page template that inherits from the site's base template, renders the page content, and lists all regular pages on the site with links to each page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/home.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  {{ .Content }}\n  {{ range site.RegularPages }}\n    <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Specifying Array Elements on Single Line in Org Mode\nDESCRIPTION: Shows a more compact way to specify array elements like tags on a single line in Emacs Org Mode.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/front-matter.md#2025-04-08_snippet_9\n\nLANGUAGE: text\nCODE:\n```\n#+TAGS[]: red blue\n```\n\n----------------------------------------\n\nTITLE: Using the Average Partial with a Number Slice in Hugo\nDESCRIPTION: Demonstrates passing a slice of numbers to a partial template that calculates their average. The $numbers variable is created and passed as context to the 'average.html' partial.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/partials/Include.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $numbers := slice 1 6 7 42 }}\n{{ $average := partial \"average.html\" $numbers }}\n```\n\n----------------------------------------\n\nTITLE: Using Emacs Org Mode for Hugo Front Matter\nDESCRIPTION: Demonstrates how to provide front matter using Emacs Org Mode keywords, including title, date, tags, and other metadata.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/front-matter.md#2025-04-08_snippet_8\n\nLANGUAGE: text\nCODE:\n```\n#+TITLE: Example\n#+DATE: 2024-02-02T04:14:54-08:00\n#+DRAFT: false\n#+AUTHOR: John Smith\n#+GENRES: mystery\n#+GENRES: romance\n#+TAGS: red\n#+TAGS: blue\n#+WEIGHT: 10\n```\n\n----------------------------------------\n\nTITLE: Using Hugo with Custom Configuration File\nDESCRIPTION: Shows how to use a different configuration file when building a Hugo site using the --config flag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/introduction.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nhugo --config other.toml\n```\n\n----------------------------------------\n\nTITLE: Accessing Resource Content in Hugo Templates\nDESCRIPTION: Demonstrates how to retrieve the content of a text file using the Content method with resources.Get.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Content.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"quotations/kipling.txt\" }}\n  {{ .Content }} → He travels the fastest who travels alone.\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Numeric Looping in Hugo Templates\nDESCRIPTION: Example of looping a specific number of times using the seq function. Demonstrates accumulating a sum by iterating through a sequence of numbers.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_25\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $total := 0 }}\n{{ range seq 4 }}\n  {{ $total = add $total . }}\n{{ end }}\n{{ $total }} → 10\n```\n\n----------------------------------------\n\nTITLE: Index Page Path Structure\nDESCRIPTION: Illustrates the file path structure for _index.md files and their URL components.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/organization/index.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n.         url\n.       ⊢--^-⊣\n.        path    slug\n.       ⊢--^-⊣⊢---^---⊣\n.           file path\n.       ⊢------^------⊣\ncontent/posts/_index.md\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Amplify for Hugo Deployment (YAML)\nDESCRIPTION: Defines the Amplify configuration for deploying a Hugo site. It specifies environment variables, installation of required tools (Dart Sass, Go, Hugo), and build commands. The configuration also sets up caching for improved build performance.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-aws-amplify/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: 1\nenv:\n  variables:\n    # Application versions\n    DART_SASS_VERSION: 1.85.0\n    GO_VERSION: 1.23.3\n    HUGO_VERSION: 0.144.2\n    # Time zone\n    TZ: America/Los_Angeles\n    # Cache\n    HUGO_CACHEDIR: ${PWD}/.hugo\n    NPM_CONFIG_CACHE: ${PWD}/.npm\nfrontend:\n  phases:\n    preBuild:\n      commands:\n        # Install Dart Sass\n        - curl -LJO https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz\n        - sudo tar -C /usr/local/bin -xf dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz\n        - rm dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz\n        - export PATH=/usr/local/bin/dart-sass:$PATH\n\n        # Install Go\n        - curl -LJO https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz\n        - sudo tar -C /usr/local -xf go${GO_VERSION}.linux-amd64.tar.gz\n        - rm go${GO_VERSION}.linux-amd64.tar.gz\n        - export PATH=/usr/local/go/bin:$PATH\n\n        # Install Hugo\n        - curl -LJO https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz\n        - sudo tar -C /usr/local/bin -xf hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz\n        - rm hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz\n        - export PATH=/usr/local/bin:$PATH\n\n        # Check installed versions\n        - go version\n        - hugo version\n        - node -v\n        - npm -v\n        - sass --embedded --version\n\n        # Install Node.JS dependencies\n        - \"[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci --prefer-offline || true\"\n\n        # https://github.com/gohugoio/hugo/issues/9810\n        - git config --add core.quotepath false\n    build:\n      commands:\n        - hugo --gc --minify\n  artifacts:\n    baseDirectory: public\n    files:\n      - '**/*'\n  cache:\n    paths:\n      - ${HUGO_CACHEDIR}/**/*\n      - ${NPM_CONFIG_CACHE}/**/*\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Parameters in Hugo Templates\nDESCRIPTION: Example of accessing custom page parameters defined in front matter. Shows how to retrieve both standard and nested user-defined parameters for content pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_29\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Params.display_related }} → true\n{{ .Params.author.email }} → jsmith@example.org\n{{ .Params.author.name }} → John Smith\n```\n\n----------------------------------------\n\nTITLE: Accessing Map and Object Properties in Hugo Templates\nDESCRIPTION: Demonstrates accessing map values using dot notation and accessing object methods using chained identifiers in Hugo templates. Shows how to work with both custom maps and built-in Hugo objects.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_12\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $map := dict \"a\" \"foo\" \"b\" \"bar\" \"c\" \"baz\" }}\n{{ $map.c }} → baz\n\n{{ $homePage := .Site.Home }}\n{{ $homePage.Title }} → My Homepage\n```\n\n----------------------------------------\n\nTITLE: Rendering Multiple Resized Images in Hugo\nDESCRIPTION: Template code to iterate through all image resources and resize them to 300px width.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/page-resources.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Resources.ByType \"image\" }}\n  {{ with .Resize \"300x\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Basic Equality Comparison Examples\nDESCRIPTION: Demonstrates how to use collections.Where for simple equality testing without specifying an operator, filtering pages by section and filtering data collections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where .Site.RegularPages \"Section\" \"books\" }}\n{{ $books := where .Site.Data.books \"genres\" \"suspense\" }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Recursive Menu Template in Hugo\nDESCRIPTION: This snippet demonstrates a partial template that recursively renders a localized, accessible nested list menu structure. It handles various menu configurations and uses menu methods to determine the current and ancestor pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/menu.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{- $page := .page }}\n{{- $menuID := .menuID }}\n\n{{- with index site.Menus $menuID }}\n  <nav>\n    <ul>\n      {{- partial \"inline/menu/walk.html\" (dict \"page\" $page \"menuEntries\" .) }}\n    </ul>\n  </nav>\n{{- end }}\n\n{{- define \"partials/inline/menu/walk.html\" }}\n  {{- $page := .page }}\n  {{- range .menuEntries }}\n    {{- $attrs := dict \"href\" .URL }}\n    {{- if $page.IsMenuCurrent .Menu . }}\n      {{- $attrs = merge $attrs (dict \"class\" \"active\" \"aria-current\" \"page\") }}\n    {{- else if $page.HasMenuCurrent .Menu .}}\n      {{- $attrs = merge $attrs (dict \"class\" \"ancestor\" \"aria-current\" \"true\") }}\n    {{- end }}\n    {{- $name := .Name }}\n    {{- with .Identifier }}\n      {{- with T . }}\n        {{- $name = . }}\n      {{- end }}\n    {{- end }}\n    <li>\n      <a\n        {{- range $k, $v := $attrs }}\n          {{- with $v }}\n            {{- printf \" %s=%q\" $k $v | safeHTMLAttr }}\n          {{- end }}\n        {{- end -}}\n      >{{ $name }}</a>\n      {{- with .Children }}\n        <ul>\n          {{- partial \"inline/menu/walk.html\" (dict \"page\" $page \"menuEntries\" .) }}\n        </ul>\n      {{- end }}\n    </li>\n  {{- end }}\n{{- end }}\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Default CLI Flags in Hugo\nDESCRIPTION: Default command line flags passed to rst2html executable when rendering reStructuredText content in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/formats.md#2025-04-08_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n--leave-comments --initial-header-level=2\n```\n\n----------------------------------------\n\nTITLE: Single Page URL Structure\nDESCRIPTION: Demonstrates how a single content page's file path is transformed into its final URL structure.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/organization/index.md#2025-04-08_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n\n                               url (\"/posts/my-first-hugo-post/\")\n                   ⊢------------^----------⊣\n       baseurl     section     slug\n⊢--------^--------⊣⊢-^--⊣⊢-------^---------⊣\n                 permalink\n⊢--------------------^---------------------⊣\nhttps://example.org/posts/my-first-hugo-post/index.html\n```\n\n----------------------------------------\n\nTITLE: Setting Hugo Configuration via Environment Variables\nDESCRIPTION: Demonstrates how to configure Hugo settings using operating system environment variables for baseURL, enableGitInfo, and environment.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/introduction.md#2025-04-08_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nexport HUGO_BASEURL=https://example.org/\nexport HUGO_ENABLEGITINFO=true\nexport HUGO_ENVIRONMENT=staging\nhugo\n```\n\n----------------------------------------\n\nTITLE: Matching Resources with Glob Patterns in Hugo Templates\nDESCRIPTION: This snippet demonstrates the use of GetMatch to find the first resource matching a glob pattern and display it as an image.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Resources.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Resources.GetMatch \"images/*.jpg\" }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Page Bundle Directory Structure Example\nDESCRIPTION: Demonstrates a typical Hugo page bundle structure with blog posts, images, and content files organized hierarchically.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/organization/index.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── blog/\n│   ├── hugo-is-cool/\n│   │   ├── images/\n│   │   │   ├── funnier-cat.jpg\n│   │   │   └── funny-cat.jpg\n│   │   ├── cats-info.md\n│   │   └── index.md\n│   ├── posts/\n│   │   ├── post1.md\n│   │   └── post2.md\n│   ├── 1-landscape.jpg\n│   ├── 2-sunset.jpg\n│   ├── _index.md\n│   ├── content-1.md\n│   └── content-2.md\n├── 1-logo.png\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Using the Image Shortcode in Hugo Content\nDESCRIPTION: Demonstrates how to call the image shortcode with named parameters to display and process an image from a page bundle.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n{{</* image path=a.jpg width=300 alt=\"A white kitten\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Variable Scoping and Accumulation in Hugo Templates\nDESCRIPTION: Demonstrates variable initialization, scoping, and modification within a range block. The example initializes a total variable and adds values from a slice to accumulate a sum.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_10\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $total := 3 }}\n{{ range slice 7 11 21 }}\n  {{ $total = add $total . }}\n{{ end }}\n{{ $total }} → 42\n```\n\n----------------------------------------\n\nTITLE: Adding Taxonomy Terms to Front Matter in Hugo\nDESCRIPTION: Demonstrates how to add taxonomy terms to a content file's front matter, including tags, genres, and custom parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/front-matter.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Example'\ndate = 2024-02-02T04:14:54-08:00\ndraft = false\nweight = 10\ntags = ['red','blue']\ngenres = ['mystery','romance']\n[params]\nauthor = 'John Smith'\n```\n\n----------------------------------------\n\nTITLE: Error Handling for Remote Resources in Hugo Templates\nDESCRIPTION: This advanced example shows how to use the try function with resources.GetRemote to handle potential errors when fetching remote images without failing the build.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/try.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://broken-example.org/images/a.jpg\" }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ warnf \"%s\" . }}\n  {{ else with .Value }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ else }}\n    {{ warnf \"Unable to get remote resource %q\" $url }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: JavaScript Processing Pipeline in Hugo\nDESCRIPTION: Demonstrates a JavaScript processing pipeline using Hugo Pipes that builds, minifies, and fingerprints a JS file. The chain retrieves a JS file, builds it with js.Build, applies minification, and generates a fingerprint.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-pipes/introduction.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $mainJs := resources.Get \"js/main.js\" | js.Build \"main.js\" | minify | fingerprint }}\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output with Whitespace Control\nDESCRIPTION: Shows the clean HTML output when using hyphenated delimiters for whitespace control, demonstrating how whitespace is eliminated from the final result.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<h2>my page title</h2>\n```\n\n----------------------------------------\n\nTITLE: Creating an Advanced Single Template with Date and Taxonomy Terms in Hugo\nDESCRIPTION: A more comprehensive single template that displays the page title, formatted date (both machine and human-readable), content, and associated taxonomy terms from the 'tags' taxonomy. It structures the content with semantic HTML elements.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/single.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <section>\n    <h1>{{ .Title }}</h1>\n    {{ with .Date }}\n      {{ $dateMachine := . | time.Format \"2006-01-02T15:04:05-07:00\" }}\n      {{ $dateHuman := . | time.Format \":date_long\" }}\n      <time datetime=\"{{ $dateMachine }}\">{{ $dateHuman }}</time>\n    {{ end }}\n    <article>\n      {{ .Content }}\n    </article>\n    <aside>\n      {{ with .GetTerms \"tags\" }}\n        <div>{{ (index . 0).Parent.LinkTitle }}</div>\n        <ul>\n          {{ range . }}\n            <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n          {{ end }}\n        </ul>\n      {{ end }}\n    </aside>\n  </section>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring GitLab CI for Hugo Deployment to KeyCDN\nDESCRIPTION: This YAML configuration sets up a GitLab CI pipeline to build a Hugo site and deploy it to KeyCDN. It includes steps for installing Hugo, building the site, and purging the KeyCDN cache. The script uses Alpine Linux as the base image and requires KeyCDN API credentials to be set as secret variables.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-keycdn/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nimage: alpine:latest\n\nvariables:\n    BASEURL: \"https://cipull-7bb7.kxcdn.com/\"\n    HUGO_VERSION: \"0.26\"\n    HUGO_CHECKSUM: \"67e4ba5ec2a02c8164b6846e30a17cc765b0165a5b183d5e480149baf54e1a50\"\n    KEYCDN_ZONE_ID: \"75544\"\n\nbefore_script:\n    - apk update\n    - apk add curl\n\npages:\n    stage: deploy\n    script:\n    - apk add git\n    - git submodule update --init\n    - curl -sSL https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_Linux-64bit.tar.gz -o /tmp/hugo.tar.gz\n    - echo \"${HUGO_CHECKSUM}  /tmp/hugo.tar.gz\" | sha256sum -c\n    - tar xf /tmp/hugo.tar.gz hugo -C /tmp/ && cp /tmp/hugo /usr/bin\n    - hugo --baseURL ${BASEURL}\n    - curl \"https://api.keycdn.com/zones/purge/${KEYCDN_ZONE_ID}.json\" -u \"${KEYCDN_API_KEY}:\"\n    artifacts:\n    paths:\n    - public\n    only:\n    - master\n```\n\n----------------------------------------\n\nTITLE: Defining Base Template Structure in Hugo\nDESCRIPTION: Creates a base template file that serves as the master layout for all pages. Defines blocks for title, main content, and footer that can be overridden by child templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/base.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>{{ block \"title\" . }}\n      <!-- Blocks may include default content. -->\n      {{ .Site.Title }}\n    {{ end }}</title>\n  </head>\n  <body>\n    <!-- Code that all your templates share, like a header -->\n    {{ block \"main\" . }}\n      <!-- The part of the page that begins to differ between templates -->\n    {{ end }}\n    {{ block \"footer\" . }}\n    <!-- More shared code, perhaps a footer but that can be overridden if need be in  -->\n    {{ end }}\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Resource Image in Hugo\nDESCRIPTION: Demonstrates how to access an image file as a page resource within a Hugo template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image := .Resources.Get \"sunset.jpg\" }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Layout Directory Structure\nDESCRIPTION: Shows the typical layout structure for Hugo templates, including default templates and content type specific templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Render.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nlayouts/\n├── _default/\n│   ├── baseof.html\n│   ├── home.html\n│   ├── li.html      <-- used for other content types\n│   ├── list.html\n│   ├── single.html\n│   └── summary.html\n└── books/\n    ├── li.html      <-- used when content type is \"books\"\n    └── summary.html\n```\n\n----------------------------------------\n\nTITLE: Creating Hugo Shortcodes with Inner Content\nDESCRIPTION: Implements a shortcode that accepts both parameters and inner content, rendering the content within a custom HTML structure with a title.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_10\n\nLANGUAGE: text\nCODE:\n```\n{{</* contrived title=\"A Contrived Example\" */>}}\nThis is a **bold** word, and this is an _emphasized_ word.\n{{</* /contrived  */>}}\n```\n\n----------------------------------------\n\nTITLE: Processing Inner Content in Hugo Shortcodes\nDESCRIPTION: Shows how to access and render inner content passed to a shortcode, including processing Markdown content into HTML using the RenderString method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_11\n\nLANGUAGE: go-html-template\nCODE:\n```\n<div class=\"contrived\">\n  <h2>{{ .Get \"title\" }}</h2>\n  {{ .Inner | .Page.RenderString }}\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing List Template in Hugo\nDESCRIPTION: Demonstrates how to override the main block in a list template to display a collection of posts with their titles and content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/base.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>Posts</h1>\n  {{ range .Pages }}\n    <article>\n      <h2>{{ .Title }}</h2>\n      {{ .Content }}\n    </article>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Related Content with Filtered Headings in Hugo\nDESCRIPTION: This snippet demonstrates how to display related content along with filtered headings. It uses the .HeadingsFiltered attribute to show relevant headings for each related page, including links to specific sections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/related-content.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $related := .Site.RegularPages.Related . | first 5 }}\n{{ with $related }}\n  <h2>See Also</h2>\n  <ul>\n    {{ range $i, $p := . }}\n      <li>\n        <a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a>\n        {{ with .HeadingsFiltered }}\n          <ul>\n            {{ range . }}\n              {{ $link := printf \"%s#%s\" $p.RelPermalink .ID | safeURL }}\n              <li>\n                <a href=\"{{ $link }}\">{{ .Title }}</a>\n              </li>\n            {{ end }}\n          </ul>\n        {{ end }}\n      </li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Term Data in Hugo Templates\nDESCRIPTION: Shows how to use the .Data object within a term template to access singular and plural names of the taxonomy, as well as the specific term name.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Data.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Data.Singular }} → genre\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Data.Plural }} → genres\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Data.Term }} → suspense\n```\n\n----------------------------------------\n\nTITLE: Accessing Custom Parameters with Different Naming Conventions\nDESCRIPTION: This snippet demonstrates how to access custom parameters using camelCase and snake_case naming conventions in Hugo templates. It also shows an invalid example using kebab-case.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/params.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.params.camelCase.foo }}\n{{ .Site.params.snake_case.foo }}\n```\n\n----------------------------------------\n\nTITLE: Working with XML Data in Hugo\nDESCRIPTION: Examples showing how to unmarshal and process XML data, including handling attributes and namespaces.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Unmarshal.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with $data.channel.item }}\n  <ul>\n    {{ range . }}\n      {{ $title := index .title \"#text\" }}\n      {{ $lang := index .title \"-lang\" }}\n      {{ $ISBN := .number }}\n      <li>{{ $title }} ({{ $lang }}) {{ $ISBN }}</li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Directory Structure Example for Hugo Page Resources\nDESCRIPTION: Shows the hierarchical structure of page bundles and their associated resources including images, documents and media files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/page-resources.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent\n└── post\n    ├── first-post\n    │   ├── images\n    │   │   ├── a.jpg\n    │   │   ├── b.jpg\n    │   │   └── c.jpg\n    │   ├── index.md (root of page bundle)\n    │   ├── latest.html\n    │   ├── manual.json\n    │   ├── notice.md\n    │   ├── office.mp3\n    │   ├── pocket.mp4\n    │   ├── rating.pdf\n    │   └── safety.txt\n    └── second-post\n        └── index.md (root of page bundle)\n```\n\n----------------------------------------\n\nTITLE: Calling Partial Templates in Hugo\nDESCRIPTION: Demonstrates the syntax for calling partial templates within Hugo templates, including passing context and referencing nested partials.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/partial.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partial \"<PATH>/<PARTIAL>.html\" . }}\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partial \"header/site-header.html\" . }}\n{{ partial \"footer/scripts.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Defining Inline Partials in Hugo Templates\nDESCRIPTION: Shows how to define and use inline partials within Hugo templates, emphasizing the need for unique naming to avoid conflicts.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/partial.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\nValue: {{ partial \"my-inline-partial.html\" . }}\n\n{{ define \"partials/my-inline-partial.html\" }}\n{{ $value := 32 }}\n{{ return $value }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Error Handling with try Function in Hugo Templates\nDESCRIPTION: This snippet shows how to use the try function to catch a division by zero error and emit a warning instead of failing the build.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/try.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $x := 1 }}\n{{ $y := 0 }}\n{{ with try (div $x $y) }}\n  {{ with .Err }}\n    {{ warnf \"%s\" . }}\n  {{ else }}\n    {{ printf \"%v divided by %v equals %v\" $x $y .Value }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating a CSV-to-HTML table shortcode in Hugo\nDESCRIPTION: A Go HTML template that defines a shortcode to convert CSV data into an HTML table. It gets the CSV file as a resource, unmarshals it, and renders it with proper error handling.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/data-sources.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with $file := .Get 0 }}\n  {{ with resources.Get $file }}\n    {{ with . | transform.Unmarshal }}\n      <table>\n        <thead>\n          <tr>\n            {{ range index . 0 }}\n              <th>{{ . }}</th>\n            {{ end }}\n          </tr>\n        </thead>\n        <tbody>\n          {{ range after 1 . }}\n            <tr>\n              {{ range . }}\n                <td>{{ . }}</td>\n              {{ end }}\n            </tr>\n          {{ end }}\n        </tbody>\n      </table>\n    {{ end }}\n  {{ else }}\n    {{ errorf \"The %q shortcode was unable to find %s. See %s\" $.Name $file $.Position }}\n  {{ end }}\n{{ else }}\n  {{ errorf \"The %q shortcode requires one positional argument, the path to the CSV file relative to the assets directory. See %s\" .Name .Position }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Content View Template in Hugo\nDESCRIPTION: Demonstrates a content view template that renders a card component for articles, and how it's used in a home template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/types.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  {{ .Content }}\n  <ul>\n    {{ range where site.RegularPages \"Section\" \"articles\" }}\n      {{ .Render \"card\" }}\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n<div class=\"card\">\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ .Summary }}\n</div>\n```\n\n----------------------------------------\n\nTITLE: Advanced Home Page Template with Custom Parameters in Hugo\nDESCRIPTION: A home page template that displays custom parameters from front matter, renders the content, and lists all regular pages with links to each page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/home.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h3>{{ .Params.Subtitle }}</h3>\n  {{ .Content }}\n  {{ range site.RegularPages }}\n    <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using HasShortcode for Conditional JavaScript Loading\nDESCRIPTION: Demonstration of using the HasShortcode function in a Hugo template to conditionally load the Plotly JavaScript library only on pages that use the plotly shortcode, improving page performance.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/HasShortcode.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<head>\n  ...\n  {{ if .HasShortcode \"plotly\" }}\n    <script src=\"https://cdn.plot.ly/plotly-2.28.0.min.js\"></script>\n  {{ end }}\n  ...\n</head>\n```\n\n----------------------------------------\n\nTITLE: Creating a Year Shortcode in Hugo\nDESCRIPTION: Implements a simple shortcode that inserts the current year, useful for copyright notices or date references that should always be current.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{- now.Format \"2006\" -}}\n```\n\n----------------------------------------\n\nTITLE: Generating Multilingual Content with Hugo CLI (Shell)\nDESCRIPTION: These commands demonstrate how to generate multilingual content using the Hugo CLI for different content organization strategies.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_13\n\nLANGUAGE: sh\nCODE:\n```\nhugo new content post/test.en.md\nhugo new content post/test.de.md\n```\n\nLANGUAGE: sh\nCODE:\n```\nhugo new content content/en/post/test.md\nhugo new content content/de/post/test.md\n```\n\n----------------------------------------\n\nTITLE: Configuring Related Content Options in Hugo\nDESCRIPTION: This snippet shows how to create an options map for the Related method, including specifying indices, document, named slices, and fragments. It demonstrates advanced usage of the related content feature.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/related-content.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $page := . }}\n{{ $opts := dict\n  \"indices\" (slice \"tags\" \"keywords\")\n  \"document\" $page\n  \"namedSlices\" (slice (keyVals \"tags\" \"hugo\" \"rocks\") (keyVals \"date\" $page.Date))\n  \"fragments\" (slice \"heading-1\" \"heading-2\")\n}}\n```\n\n----------------------------------------\n\nTITLE: Creating an Image Processing Shortcode in Hugo\nDESCRIPTION: Implements a shortcode that retrieves an image as a page resource, resizes it to a specified width, converts it to WebP format, and adds an alt attribute.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{- with .Page.Resources.Get (.Get \"path\") }}\n  {{- with .Process (printf \"resize %dx wepb\" ($.Get \"width\")) -}}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"{{ $.Get \"alt\" }}\">\n  {{- end }}\n{{- end -}}\n```\n\n----------------------------------------\n\nTITLE: Rendering Translated Menu Text in Go HTML Template\nDESCRIPTION: This snippet demonstrates how to render translated menu text using the 'T' function. It falls back to the menu entry's name if no translation is found.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_9\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ or (T .Identifier) .Name | safeHTML }}\n```\n\n----------------------------------------\n\nTITLE: Querying Pages by Type in Hugo Templates\nDESCRIPTION: Demonstrates how to use the Type method in a Hugo template to list all pages of type 'books', regardless of their section.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Type.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range where .Site.RegularPages.ByTitle \"Type\" \"books\" }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Custom Parameters in Hugo Templates\nDESCRIPTION: This snippet shows how to access custom parameters defined in the Hugo configuration file from within Hugo templates using the 'Params' method on a 'Site' object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/params.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Params.subtitle }} → Reference, Tutorials, and Explanations\n{{ .Site.Params.contact.email }} → info@example.org\n```\n\n----------------------------------------\n\nTITLE: Installing Required Sanity Plugins for Hugo Integration\nDESCRIPTION: This snippet shows the npm install command needed to add the required Sanity plugins for media handling and code input support.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/PortableText.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm i sanity-plugin-media @sanity/code-input\n```\n\n----------------------------------------\n\nTITLE: Creating a Default Section Template in Hugo\nDESCRIPTION: A basic section template that displays section content followed by a paginated list of posts. This template retrieves regular pages of type 'posts', paginates them, and displays each post's title as a link.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/section.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <main>\n    {{ .Content }}\n\n    {{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n    {{ $paginator := .Paginate $pages }}\n\n    {{ range $paginator.Pages }}\n      <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n    {{ end }}\n\n    {{ template \"_internal/pagination.html\" . }}\n  </main>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Paginating a List Page with Paginator Method in Hugo Templates\nDESCRIPTION: Simplified pagination example using the Paginator method, which automatically paginates the page collection passed to the template using the default number of pages per pager.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/pagination.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ template \"_internal/pagination.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Sorting Slice Elements in Hugo Templates - Descending Order\nDESCRIPTION: Shows how to sort slice elements in descending order using the collections.Sort function with explicit value key and desc parameter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Sort.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ sort site.Params.grades \"value\" \"desc\" }} → [c b a]\n```\n\n----------------------------------------\n\nTITLE: Generating Syntax Highlighting CSS with Rouge\nDESCRIPTION: Command line example showing how to generate a CSS file for Rouge syntax highlighting and save it to the assets directory for use with AsciiDoc.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/markup.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nrougify style monokai.sublime > assets/css/syntax.css\n```\n\n----------------------------------------\n\nTITLE: Implementing Conditional Blocks in Hugo Templates\nDESCRIPTION: Example of conditional logic in Hugo templates using if, else if, and else statements. Shows how to check variable values and execute different template code based on conditions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_22\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := 42 }}\n{{ if eq $var 6 }}\n  {{ print \"var is 6\" }}\n{{ else if eq $var 7 }}\n  {{ print \"var is 7\" }}\n{{ else if eq $var 42 }}\n  {{ print \"var is 42\" }}\n{{ else }}\n  {{ print \"var is something else\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Nested Menu with Advanced Properties in Hugo Configuration\nDESCRIPTION: This snippet demonstrates creating a nested menu structure with various properties including parent-child relationships, external links, and custom parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/menus.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nname = 'Products'\npageRef = '/products'\nweight = 10\n\n[[menus.main]]\nname = 'Hardware'\npageRef = '/products/hardware'\nparent = 'Products'\nweight = 1\n\n[[menus.main]]\nname = 'Software'\npageRef = '/products/software'\nparent = 'Products'\nweight = 2\n\n[[menus.main]]\nname = 'Services'\npageRef = '/services'\nweight = 20\n\n[[menus.main]]\nname = 'Hugo'\npre = '<i class=\"fa fa-heart\"></i>'\nurl = 'https://gohugo.io/'\nweight = 30\n[menus.main.params]\nrel = 'external'\n```\n\n----------------------------------------\n\nTITLE: Count-Sorted Taxonomy Template in Hugo\nDESCRIPTION: A taxonomy template that sorts terms by count (number of associated pages) and displays this count for each term. Uses the ByCount method on the Terms object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/taxonomy.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n  {{ range .Data.Terms.ByCount }}\n    <h2><a href=\"{{ .Page.RelPermalink }}\">{{ .Page.LinkTitle }}</a> ({{ .Count }})</h2>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing EXIF Data in Hugo\nDESCRIPTION: Demonstrates how to access EXIF metadata from images in Hugo, including date, location, and other tags.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_14\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with $image.Exif }}\n  Date: {{ .Date }}\n  Lat/Long: {{ .Lat }}/{{ .Long }}\n  Tags:\n  {{ range $k, $v := .Tags }}\n    TAG: {{ $k }}: {{ $v }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Section Template in Hugo\nDESCRIPTION: Demonstrates a section template that inherits from the base template and renders a list of pages within the current section.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/types.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n  {{ range .Pages }}\n    <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Generated Leaf Bundle Structure\nDESCRIPTION: Example of the directory structure created when using a leaf bundle archetype, showing how Hugo preserves the complex structure in the content directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_9\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── galleries/\n│   └── bryce-canyon/\n│       ├── images/\n│       │   └── .gitkeep\n│       └── index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Content-Populated Function Archetype\nDESCRIPTION: A comprehensive archetype for function documentation that includes not just front matter but also pre-populated content structure to standardize documentation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n---\ndate: '{{ .Date }}'\ndraft: true\ntitle: '{{ replace .File.ContentBaseName `-` ` ` | title }}'\n---\n\nA brief description of what the function does, using simple present tense in the third person singular form. For example:\n\n`someFunction` returns the string `s` repeated `n` times.\n\n## Signature\n\n```text\nfunc someFunction(s string, n int) string\n```\n\n## Examples\n\nOne or more practical examples, each within a fenced code block.\n\n## Notes\n\nAdditional information to clarify as needed.\n```\n\n----------------------------------------\n\nTITLE: Advanced Image Resizing with Format Conversion and Quality Settings\nDESCRIPTION: Shows a more complex example of image resizing that includes format conversion to WebP, quality reduction to 85%, and the Lanczos resampling filter. This demonstrates the full capability of the Resize method's processing specification.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Resize.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Resize \"300x webp q85 lanczos\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Implementing Header Partial in Hugo\nDESCRIPTION: Example of a header partial template used on spf13.com, demonstrating the structure and inclusion of other partials within the header.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/partial.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n<!DOCTYPE html>\n<html class=\"no-js\" lang=\"en-US\" prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb#\">\n<head>\n    <meta charset=\"utf-8\">\n\n    {{ partial \"meta.html\" . }}\n\n    <base href=\"{{ .Site.BaseURL }}\">\n    <title> {{ .Title }} : spf13.com </title>\n    <link rel=\"canonical\" href=\"{{ .Permalink }}\">\n    {{ if .RSSLink }}<link href=\"{{ .RSSLink }}\" rel=\"alternate\" type=\"application/rss+xml\" title=\"{{ .Title }}\" />{{ end }}\n\n    {{ partial \"head_includes.html\" . }}\n</head>\n```\n\n----------------------------------------\n\nTITLE: Implementing Table Render Hook in Hugo\nDESCRIPTION: This Go HTML template demonstrates how to create a table render hook that mimics the GitHub Flavored Markdown table rendering. It handles table headers, body rows, and cell alignments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/tables.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<table\n  {{- range $k, $v := .Attributes }}\n    {{- if $v }}\n      {{- printf \" %s=%q\" $k $v | safeHTMLAttr }}\n    {{- end }}\n  {{- end }}>\n  <thead>\n    {{- range .THead }}\n      <tr>\n        {{- range . }}\n          <th\n            {{- with .Alignment }}\n              {{- printf \" style=%q\" (printf \"text-align: %s\" .) | safeHTMLAttr }}\n            {{- end -}}\n          >\n            {{- .Text -}}\n          </th>\n        {{- end }}\n      </tr>\n    {{- end }}\n  </thead>\n  <tbody>\n    {{- range .TBody }}\n      <tr>\n        {{- range . }}\n          <td\n            {{- with .Alignment }}\n              {{- printf \" style=%q\" (printf \"text-align: %s\" .) | safeHTMLAttr }}\n            {{- end -}}\n          >\n            {{- .Text -}}\n          </td>\n        {{- end }}\n      </tr>\n    {{- end }}\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Configuring GitLab CI/CD for Hugo Deployment\nDESCRIPTION: This YAML configuration sets up a GitLab CI/CD pipeline for building and deploying a Hugo site. It installs necessary dependencies like Dart Sass, Hugo, and Node.js, builds the site, and compresses the output files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-gitlab-pages.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  DART_SASS_VERSION: 1.85.0\n  GIT_DEPTH: 0\n  GIT_STRATEGY: clone\n  GIT_SUBMODULE_STRATEGY: recursive\n  HUGO_VERSION: 0.144.2\n  NODE_VERSION: 23.x\n  TZ: America/Los_Angeles\nimage:\n  name: golang:1.23.4-bookworm\n\npages:\n  script:\n    # Install brotli\n    - apt-get update\n    - apt-get install -y brotli\n    # Install Dart Sass\n    - curl -LJO https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz\n    - tar -xf dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz\n    - cp -r dart-sass/ /usr/local/bin\n    - rm -rf dart-sass*\n    - export PATH=/usr/local/bin/dart-sass:$PATH\n    # Install Hugo\n    - curl -LJO https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb\n    - apt-get install -y ./hugo_extended_${HUGO_VERSION}_linux-amd64.deb\n    - rm hugo_extended_${HUGO_VERSION}_linux-amd64.deb\n    # Install Node.js\n    - curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION} | bash -\n    - apt-get install -y nodejs\n    # Install Node.js dependencies\n    - \"[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true\"\n    # Build\n    - hugo --gc --minify --baseURL ${CI_PAGES_URL}\n    # Compress\n    - find public -type f -regex '.*\\.(css|html|js|txt|xml)$' -exec gzip -f -k {} \\;\n    - find public -type f -regex '.*\\.(css|html|js|txt|xml)$' -exec brotli -f -k {} \\;\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n```\n\n----------------------------------------\n\nTITLE: Creating a New Gallery with Leaf Bundle Archetype\nDESCRIPTION: Command to create a new gallery content using Hugo's leaf bundle structure, which will create a directory with an index.md file and support files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nhugo new galleries/bryce-canyon\n```\n\n----------------------------------------\n\nTITLE: Correct Context Usage with IsDescendant Function in Hugo\nDESCRIPTION: This snippet illustrates the correct way to use the IsDescendant function while maintaining the proper context. It emphasizes the importance of using '$' to refer to the context passed into the template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsDescendant.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.GetPage \"/auctions\" }}\n  {{ $.IsDescendant . }} → true\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Initializing Variables and Using Multiplication in Hugo Templates\nDESCRIPTION: Demonstrates how to initialize variables and use the multiplication function in a Hugo HTML template. The snippet creates two variables and calculates their product within an HTML paragraph.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $v1 := 6 }}\n{{ $v2 := 7 }}\n<p>The product of {{ $v1 }} and {{ $v2 }} is {{ mul $v1 $v2 }}.</p>\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Settings in Hugo\nDESCRIPTION: This example demonstrates a comprehensive deployment configuration in Hugo, including matchers for different file types and multiple deployment targets for production and staging environments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/deployment.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[deployment]\n  order = ['.jpg$', '.gif$']\n  [[deployment.matchers]]\n    cacheControl = 'max-age=31536000, no-transform, public'\n    gzip = true\n    pattern = '^.+\\.(js|css|svg|ttf)$'\n  [[deployment.matchers]]\n    cacheControl = 'max-age=31536000, no-transform, public'\n    gzip = false\n    pattern = '^.+\\.(png|jpg)$'\n  [[deployment.matchers]]\n    contentType = 'application/xml'\n    gzip = true\n    pattern = '^sitemap\\.xml$'\n  [[deployment.matchers]]\n    gzip = true\n    pattern = '^.+\\.(html|xml|json)$'\n  [[deployment.targets]]\n    url = 's3://my_production_bucket?region=us-west-1'\n    cloudFrontDistributionID = 'E1234567890ABCDEF0'\n    exclude = '**.(heic,psd)'\n    name = 'production'\n  [[deployment.targets]]\n    url = 's3://my_staging_bucket?region=us-west-1'\n    exclude = '**.(heic,psd)'\n    name = 'staging'\n```\n\n----------------------------------------\n\nTITLE: Basic Image Render Hook Template\nDESCRIPTION: A Go HTML template that renders Markdown images according to the CommonMark specification.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/images.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<img src=\"{{ .Destination | safeURL }}\"\n  {{- with .PlainText }} alt=\"{{ . }}\"{{ end -}}\n  {{- with .Title }} title=\"{{ . }}\"{{ end -}}\n>\n{{- /* chomp trailing newline */ -}}\n```\n\n----------------------------------------\n\nTITLE: Content Structure Example for Monolingual Site\nDESCRIPTION: Illustrates a typical content structure for a monolingual Hugo site with posts and tutorials.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/permalinks.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── posts/\n│   ├── bash-in-slow-motion.md\n│   └── tls-in-a-nutshell.md\n├── tutorials/\n│   ├── git-for-beginners.md\n│   └── javascript-bundling-with-hugo.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Rendering Page Content Without Summary in Hugo Templates\nDESCRIPTION: Demonstrates how to use the ContentWithoutSummary method to render a page's content excluding the summary section. This method returns template.HTML and behaves similarly to the Content method when the summary is defined in front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/ContentWithoutSummary.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .ContentWithoutSummary }}\n```\n\n----------------------------------------\n\nTITLE: Creating New Content with Hugo CLI\nDESCRIPTION: Command to create a new content file using Hugo's command line interface. This uses an archetype as a template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nhugo new content posts/my-first-post.md\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Sitemap Template in Hugo\nDESCRIPTION: Provides an example of a custom sitemap template in Hugo, demonstrating how to generate an XML sitemap with page-specific configurations.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sitemap.md#2025-04-08_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n{{ printf \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" standalone=\\\"yes\\\"?>\" | safeHTML }}\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"\n  xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n  {{ range .Pages }}\n    <url>\n      <loc>{{ .Permalink }}</loc>\n      {{ if not .Lastmod.IsZero }}\n        <lastmod>{{ .Lastmod.Format \"2006-01-02T15:04:05-07:00\" | safeHTML }}</lastmod>\n      {{ end }}\n      {{ with .Sitemap.ChangeFreq }}\n        <changefreq>{{ . }}</changefreq>\n      {{ end }}\n    </url>\n  {{ end }}\n</urlset>\n```\n\n----------------------------------------\n\nTITLE: Listing Related Content in Hugo Template\nDESCRIPTION: This snippet demonstrates how to list up to 5 related pages that share the same date or keyword parameters in a Hugo template. It uses the site.RegularPages.Related method to find related content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/related-content.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with site.RegularPages.Related . | first 5 }}\n  <p>Related content:</p>\n  <ul>\n    {{ range . }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Index Page URL Structure\nDESCRIPTION: Shows how the _index.md file path is transformed into the final URL structure.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/organization/index.md#2025-04-08_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n\n                     url (\"/posts/\")\n                    ⊢-^-⊣\n       baseurl      section (\"posts\")\n⊢--------^---------⊣⊢-^-⊣\n        permalink\n⊢----------^-------------⊣\nhttps://example.org/posts/index.html\n```\n\n----------------------------------------\n\nTITLE: Correct Context Access in 'with' Block in Hugo Templates\nDESCRIPTION: Shows the correct way to access the original context (Page object) within a 'with' block using the '$' symbol.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/with.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with 42 }}\n  {{ $.Title }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Language-Specific Settings in Hugo\nDESCRIPTION: Demonstrates how to configure settings for individual languages in a Hugo site, including language code, direction, name, title, and weight.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/languages.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[languages.en]\nlanguageCode = 'en-US'\nlanguageName = 'English'\nweight = 1\ntitle = 'Project Documentation'\ntimeZone = 'America/New_York'\n[languages.en.pagination]\npath = 'page'\n[languages.en.params]\nsubtitle = 'Reference, Tutorials, and Explanations'\n```\n\n----------------------------------------\n\nTITLE: Creating a Parent Gallery Shortcode in Hugo\nDESCRIPTION: A basic gallery shortcode that accepts a 'class' parameter and renders inner content. This serves as a parent container for nested shortcodes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_12\n\nLANGUAGE: go-html-template\nCODE:\n```\n<div class=\"{{ .Get \"class\" }}\">\n  {{ .Inner }}\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Single Page Template in Hugo\nDESCRIPTION: Illustrates a single page template that inherits from the base template and renders the title and content of each page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/types.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Building Pagination Navigation with URL Method in Hugo\nDESCRIPTION: Demonstrates how to create a paginated navigation system using Hugo's pagination methods. The code first creates a paginator for regular pages of type 'posts', then displays page titles and builds navigation links using the URL method to generate proper page URLs.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/URL.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  <ul>\n    {{ with .First }}\n      <li><a href=\"{{ .URL }}\">First</a></li>\n    {{ end }}\n    {{ with .Prev }}\n      <li><a href=\"{{ .URL }}\">Previous</a></li>\n    {{ end }}\n    {{ with .Next }}\n      <li><a href=\"{{ .URL }}\">Next</a></li>\n    {{ end }}\n    {{ with .Last }}\n      <li><a href=\"{{ .URL }}\">Last</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendering a Nested Menu with the Children Method in Hugo Templates\nDESCRIPTION: A Hugo template that iterates through main menu entries and displays child items when available using the .Children method. It checks for child entries using .HasChildren and renders them in a nested unordered list.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Children.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    <li>\n      <a href=\"{{ .URL }}\">{{ .Name }}</a>\n      {{ if .HasChildren }}\n        <ul>\n          {{ range .Children }}\n            <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n          {{ end }}\n        </ul>\n      {{ end }}\n    </li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Using .Site.GetPage in Hugo Templates\nDESCRIPTION: Examples of using the .Site.GetPage function in Hugo templates to retrieve section information. These snippets demonstrate how Hugo handles sections with and without _index.md files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/section.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<h1>{{ with .Site.GetPage \"/blog\" }}{{ .Title }}{{ end }}</h1>\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n<h1>{{ with .Site.GetPage \"/events\" }}{{ .Title }}{{ end }}</h1>\n```\n\n----------------------------------------\n\nTITLE: Organizing Partial Templates in Hugo Project Structure\nDESCRIPTION: Shows the recommended directory structure for organizing partial templates in a Hugo project, with subdirectories for better organization.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/partial.md#2025-04-08_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\nlayouts/\n└── partials/\n    ├── footer/\n    │   ├── scripts.html\n    │   └── site-footer.html\n    ├── head/\n    │   ├── favicons.html\n    │   ├── metadata.html\n    │   └── prerender.html\n    └── header/\n        ├── site-header.html\n        └── site-nav.html\n```\n\n----------------------------------------\n\nTITLE: Configuring Multilingual Permalinks\nDESCRIPTION: Demonstrates how to configure permalinks for a multilingual site, including language-specific settings for English and Spanish.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/permalinks.md#2025-04-08_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'en'\ndefaultContentLanguageInSubdir = true\n\n[languages.en]\ncontentDir = 'content/en'\nlanguageCode = 'en-US'\nlanguageDirection = 'ltr'\nlanguageName = 'English'\nweight = 1\n\n[languages.en.permalinks.page]\nbooks = \"/books/:slug/\"\n\n[languages.en.permalinks.section]\nbooks = \"/books/\"\n\n[languages.es]\ncontentDir = 'content/es'\nlanguageCode = 'es-ES'\nlanguageDirection = 'ltr'\nlanguageName = 'Español'\nweight = 2\n\n[languages.es.permalinks.page]\nbooks = \"/libros/:slug/\"\n\n[languages.es.permalinks.section]\nbooks = \"/libros/\"\n```\n\n----------------------------------------\n\nTITLE: Using reflect.IsSlice in Hugo Templates\nDESCRIPTION: Examples demonstrating how to use the reflect.IsSlice function to check if values are slices. The function returns true for slice values and false for non-slice values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/reflect/IsSlice.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ reflect.IsSlice (slice 1 2 3) }} → true\n{{ reflect.IsSlice \"yo\" }} → false\n```\n\n----------------------------------------\n\nTITLE: Implementing 'include' Shortcode in Hugo\nDESCRIPTION: This Go HTML template defines an 'include' shortcode that allows composing a page from multiple content files while preserving global context. It uses .GetPage to fetch the content and .RenderShortcodes to process it.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/render-hooks/pageinner.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Get 0 }}\n  {{ with $.Page.GetPage . }}\n    {{- .RenderShortcodes }}\n  {{ else }}\n    {{ errorf \"The %q shortcode was unable to find %q. See %s\" $.Name . $.Position }}\n  {{ end }}\n{{ else }}\n  {{ errorf \"The %q shortcode requires a positional parameter indicating the logical path of the file to include. See %s\" .Name .Position }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Front Matter Example in Hugo\nDESCRIPTION: An example of front matter in multiple formats (TOML shown by default) that defines basic page properties including title, date, draft status, weight, and author parameter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/front-matter.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Example'\ndate = 2024-02-02T04:14:54-08:00\ndraft = false\nweight = 10\n[params]\nauthor = 'John Smith'\n```\n\n----------------------------------------\n\nTITLE: Advanced Render Hooks Template Lookup Structure\nDESCRIPTION: Example of how render hooks can be organized by content type, kind, and output format to provide different rendering behavior across a Hugo site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/introduction.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nlayouts/\n├── _default/\n│   └── _markup/\n│       ├── render-link.html\n│       └── render-link.rss.xml\n├── books/\n│   └── _markup/\n│       ├── render-link.html\n│       └── render-link.rss.xml\n└── films/\n    └── _markup/\n        ├── render-link.html\n        └── render-link.rss.xml\n```\n\n----------------------------------------\n\nTITLE: Paginating Grouped Content by Date in Hugo Templates\nDESCRIPTION: Example showing how to combine pagination with grouping functionality, paginating content that has been grouped by date format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/pagination.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate ($pages.GroupByDate \"Jan 2006\") }}\n\n{{ range $paginator.PageGroups }}\n  <h2>{{ .Key }}</h2>\n  {{ range .Pages }}\n    <h3><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h3>\n  {{ end }}\n{{ end }}\n\n{{ template \"_internal/pagination.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Title Using Current Context in Hugo Templates\nDESCRIPTION: Shows how to access the Title method of a Page object using the current context (dot) in Hugo templates. The dot represents the current context which is typically a Page object at the top level of the template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<h2>{{ .Title }}</h2>\n```\n\n----------------------------------------\n\nTITLE: Targeted Front Matter Cascade Configuration in Hugo\nDESCRIPTION: Example showing how to cascade a color parameter specifically to pages within the articles section using path targeting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/cascade.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[cascade.params]\ncolor = 'red'\n[cascade.target]\npath = '{/articles,/articles/**}'\n```\n\n----------------------------------------\n\nTITLE: Reversing Collection Order with collections.Reverse in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use collections.Reverse to reverse the order of elements in a slice. The function takes a collection as input and returns a new collection with elements in reverse order.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Reverse.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ slice 2 1 3 | collections.Reverse }} → [3 1 2]\n```\n\n----------------------------------------\n\nTITLE: Sorting Page Collections in Hugo Templates\nDESCRIPTION: Example of sorting site's regular pages by Type in descending order using the collections.Sort function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Sort.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range sort site.RegularPages \"Type\" \"desc\" }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Converting Hexadecimal Input to Float in Hugo Templates\nDESCRIPTION: Demonstrates the use of the float function to convert a hexadecimal (base 16) number to its float64 representation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToFloat.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ float 0x11 }} → 17 (float64)\n```\n\n----------------------------------------\n\nTITLE: Returning a Value from a Partial Template in Hugo\nDESCRIPTION: Demonstrates how to return a value from a partial template using the return statement. The partial checks if a number is even or odd, sets a result variable, and returns it at the end of the template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/partials/Include.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $result := \"\" }}\n{{ if math.ModBool . 2 }}\n  {{ $result = \"even\" }}\n{{ else }}\n  {{ $result = \"odd\" }}\n{{ end }}\n{{ return $result }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Image with Skip on Error in Hugo\nDESCRIPTION: Shows how to render an image in a Hugo template, skipping the rendering if the resource is not found.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image := .Resources.GetMatch \"sunset.jpg\" }}\n{{ with $image }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining a Custom 404 Page Template in Hugo\nDESCRIPTION: This snippet demonstrates how to create a basic 404 error page template in Hugo. It defines the main block of the template, including an error message and a link to return to the home page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/404.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>404 Not Found</h1>\n  <p>The page you requested cannot be found.</p>\n  <p>\n    <a href=\"{{ .Site.Home.RelPermalink }}\">\n      Return to the home page\n    </a>\n  </p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Default and Custom Taxonomies in Hugo\nDESCRIPTION: Example showing how to explicitly define both default taxonomies (category, tag) and a custom one (author) in the Hugo configuration. This is necessary to maintain the default taxonomies when adding new ones.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/taxonomies.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ntaxonomies:\n  author: author\n  category: categories\n  tag: tags\n```\n\n----------------------------------------\n\nTITLE: Mermaid JavaScript Integration in Base Template\nDESCRIPTION: A template snippet to include Mermaid JavaScript library conditionally when a page contains Mermaid diagrams, using the flag set by the render hook.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/code-blocks.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if .Store.Get \"hasMermaid\" }}\n  <script type=\"module\">\n    import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.esm.min.mjs';\n    mermaid.initialize({ startOnLoad: true });\n  </script>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Adding String Values in Hugo Scratch Pad\nDESCRIPTION: Demonstrates concatenating strings using the Add method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/NewScratch.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := newScratch }}\n{{ $s.Set \"greeting\" \"Hello\" }}\n{{ $s.Add \"greeting\" \"Welcome\" }}\n{{ $s.Get \"greeting\" }} → HelloWelcome\n```\n\n----------------------------------------\n\nTITLE: Including Mermaid JavaScript in Hugo Base Template\nDESCRIPTION: Conditionally loads the Mermaid JavaScript library from a CDN when a page contains Mermaid diagrams. The script is added at the bottom of the base template before the closing body tag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/diagrams.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if .Store.Get \"hasMermaid\" }}\n  <script type=\"module\">\n    import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.esm.min.mjs';\n    mermaid.initialize({ startOnLoad: true });\n  </script>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Complete Book Review Content Adapter Example\nDESCRIPTION: A comprehensive example showing how to create a content adapter that fetches book data from a remote JSON source and creates pages with resources.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/content-adapters.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{/* Get remote data. */}}\n{{ $data := dict }}\n{{ $url := \"https://gohugo.io/shared/examples/data/books.json\" }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ errorf \"Unable to get remote resource %s: %s\" $url . }}\n  {{ else with .Value }}\n    {{ $data = . | transform.Unmarshal }}\n  {{ else }}\n    {{ errorf \"Unable to get remote resource %s\" $url }}\n  {{ end }}\n{{ end }}\n\n{{/* Add pages and page resources. */}}\n{{ range $data }}\n\n  {{/* Add page. */}}\n  {{ $content := dict \"mediaType\" \"text/markdown\" \"value\" .summary }}\n  {{ $dates := dict \"date\" (time.AsTime .date) }}\n  {{ $params := dict \"author\" .author \"isbn\" .isbn \"rating\" .rating \"tags\" .tags }}\n  {{ $page := dict\n    \"content\" $content\n    \"dates\" $dates\n    \"kind\" \"page\"\n    \"params\" $params\n    \"path\" .title\n    \"title\" .title\n  }}\n  {{ $.AddPage $page }}\n\n  {{/* Add page resource. */}}\n  {{ $item := . }}\n  {{ with $url := $item.cover }}\n    {{ with try (resources.GetRemote $url) }}\n      {{ with .Err }}\n        {{ errorf \"Unable to get remote resource %s: %s\" $url . }}\n      {{ else with .Value }}\n        {{ $content := dict \"mediaType\" .MediaType.Type \"value\" .Content }}\n        {{ $params := dict \"alt\" $item.title }}\n        {{ $resource := dict\n          \"content\" $content\n          \"params\" $params\n          \"path\" (printf \"%s/cover.%s\" $item.title .MediaType.SubType)\n        }}\n        {{ $.AddResource $resource }}\n      {{ else }}\n        {{ errorf \"Unable to get remote resource %s\" $url }}\n      {{ end }}\n    {{ end }}\n  {{ end }}\n\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using the Year Shortcode in Content\nDESCRIPTION: Shows how to call the year shortcode from within Markdown content to insert the current year.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nThis is {{</* year */>}}, and look at how far we've come.\n```\n\n----------------------------------------\n\nTITLE: Creating Partial Template in Hugo\nDESCRIPTION: Shows a partial template that renders copyright information, typically used as a component of the site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/types.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n<p>Copyright {{ now.Year }}. All rights reserved.</p>\n```\n\n----------------------------------------\n\nTITLE: Go Code Example with Syntax Highlighting Options\nDESCRIPTION: Demonstrates a Go code example with inline line numbers, highlighted lines (3 and 6-8), and emacs styling.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/syntax-highlighting.md#2025-04-08_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    for i := 0; i < 3; i++ {\n        fmt.Println(\"Value of i:\", i)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Compiling JavaScript with Babel in Hugo Templates\nDESCRIPTION: A template example showing how to compile JavaScript using js.Babel with conditional logic for production vs development environments. The production build includes minification, fingerprinting, and SRI integrity attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Babel.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"js/main.js\" }}\n  {{ $opts := dict\n    \"minified\" hugo.IsProduction\n    \"noComments\" hugo.IsProduction\n    \"sourceMap\" (cond hugo.IsProduction \"none\" \"external\")\n  }}\n  {{ with . | js.Babel $opts }}\n    {{ if hugo.IsProduction }}\n      {{ with . | fingerprint }}\n        <script src=\"{{ .RelPermalink }}\" integrity=\"{{ .Data.Integrity }}\" crossorigin=\"anonymous\"></script>\n      {{ end }}\n    {{ else }}\n      <script src=\"{{ .RelPermalink }}\"></script>\n    {{ end }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable to Disable Remote URL Access in Hugo\nDESCRIPTION: This example shows how to use an environment variable to completely block the resources.GetRemote function from accessing any URL by setting the HUGO_SECURITY_HTTP_URLS variable to 'none'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/security.md#2025-04-08_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\nexport HUGO_SECURITY_HTTP_URLS=none\n```\n\n----------------------------------------\n\nTITLE: Breadcrumb Navigation CSS Styling\nDESCRIPTION: CSS styles for formatting the breadcrumb navigation with proper spacing and separators between elements.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/sections.md#2025-04-08_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.breadcrumb ol {\n  padding-left: 0;\n}\n\n.breadcrumb li {\n  display: inline;\n}\n\n.breadcrumb li:not(:last-child)::after {\n  content: \"»\";\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Child Image Shortcode with Parent Context Awareness in Hugo\nDESCRIPTION: An image shortcode that checks for a parent context using .Parent. When used inside a parent shortcode, it inherits the parent's 'class' value and applies it to the image's class attribute.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_13\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $src := .Get \"src\" }}\n{{ with .Parent }}\n  <img src=\"{{ $src }}\" class=\"{{ .Get \"class\" }}-image\">\n{{ else }}\n  <img src=\"{{ $src }}\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: TOML Custom Date Front Matter Example\nDESCRIPTION: Shows a TOML front matter example with an unquoted custom date field, which becomes a time.Time value in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_11\n\nLANGUAGE: text\nCODE:\n```\n+++\ntitle = '2024 User Conference\"\neventDate = 2024-04-01\n+++\n```\n\n----------------------------------------\n\nTITLE: Starting Hugo Server Command\nDESCRIPTION: Basic command syntax for starting the Hugo development server with optional commands and flags\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_server.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo server [command] [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating a Summary View Template in Hugo\nDESCRIPTION: This snippet shows how to create a summary view template in Hugo. It displays the article title, date, word count, and a summary with a link to read more.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/content-view.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<article class=\"post\">\n  <header>\n    <h2><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></h2>\n    <div class=\"post-meta\">{{ .Date.Format \"Mon, Jan 2, 2006\" }} - {{ .FuzzyWordCount }} Words </div>\n  </header>\n  {{ .Summary }}\n  <footer>\n  <a href='{{ .RelPermalink }}'>Read&nbsp;more&nbsp;&raquo;</a>\n  </footer>\n</article>\n```\n\n----------------------------------------\n\nTITLE: Sorting Fiction Books Template\nDESCRIPTION: Hugo template showing how to sort and display fiction books by title\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Data.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range sort .Site.Data.books.fiction \"title\" }}\n    <li>{{ .title }} ({{ .author }})</li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Merging Maps in Order $m3, $m2, $m1\nDESCRIPTION: Shows how merging maps in reverse order ($m3, $m2, $m1) affects the final result, with $m1's values taking precedence for shared keys.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Merge.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $merged := merge $m3 $m2 $m1 }}\n\n{{ $merged.x }}   → foo\n{{ $merged.y }}   → wibble\n{{ $merged.z.a }} → huey\n```\n\n----------------------------------------\n\nTITLE: Defining Menu Entries in Hugo Configuration\nDESCRIPTION: This snippet shows how to define menu entries in Hugo's configuration file. It demonstrates setting the name, pageRef, and weight for each menu item.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/ByName.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nname = 'Services'\npageRef = '/services'\nweight = 10\n\n[[menus.main]]\nname = 'About'\npageRef = '/about'\nweight = 20\n\n[[menus.main]]\nname = 'Contact'\npageRef = '/contact'\nweight = 30\n```\n\n----------------------------------------\n\nTITLE: Defining Taxonomy in Front Matter with Multiple Terms\nDESCRIPTION: Example showing how to define categories and tags taxonomies in a content file's front matter. Multiple terms are assigned to each taxonomy using an array structure.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/taxonomies.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Example\ncategories:\n  - vegetarian\n  - gluten-free\ntags:\n  - appetizer\n  - main course\n```\n\n----------------------------------------\n\nTITLE: Implementing Content Summary with Read More Link in Hugo Template\nDESCRIPTION: A template snippet that demonstrates how to display page summaries with conditional read more links using the .Truncated method. The code iterates through pages, showing each page's title, summary, and a read more link if the content is truncated.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Truncated.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ .Summary }}\n  {{ if .Truncated }}\n    <a href=\"{{ .RelPermalink }}\">Read more...</a>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using a shortcode to include CSV data in Hugo\nDESCRIPTION: Example of content markup showing how to invoke a shortcode that will render a CSV file as an HTML table.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/data-sources.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n{{</* csv-to-table \"pets.csv\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Using GetPage Method in Hugo Templates\nDESCRIPTION: Demonstrates various ways to use the GetPage method in Hugo templates, showing different path formats including relative and absolute paths to access page content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GetPage.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .GetPage \"starry-night\" }}\n  {{ .Title }} → Starry Night\n{{ end }}\n\n{{ with .GetPage \"./starry-night\" }}\n  {{ .Title }} → Starry Night\n{{ end }}\n\n{{ with .GetPage \"../paintings/starry-night\" }}\n  {{ .Title }} → Starry Night\n{{ end }}\n\n{{ with .GetPage \"/works/paintings/starry-night\" }}\n  {{ .Title }} → Starry Night\n{{ end }}\n\n{{ with .GetPage \"../sculptures/david\" }}\n  {{ .Title }} → David\n{{ end }}\n\n{{ with .GetPage \"/works/sculptures/david\" }}\n  {{ .Title }} → David\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Module Mounts in TOML\nDESCRIPTION: Example of custom module mounts that override the default virtual filesystem layout, including source exclusions and custom asset paths.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/module.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[module]\n[[module.mounts]]\n    source=\"content\"\n    target=\"content\"\n    excludeFiles=\"docs/*\"\n[[module.mounts]]\n    source=\"node_modules\"\n    target=\"assets\"\n[[module.mounts]]\n    source=\"assets\"\n    target=\"assets\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Languages with Content Directories\nDESCRIPTION: Configuration example showing how to set up multiple languages in Hugo with different content directories and language settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\nlanguages:\n  en:\n    weight: 10\n    languageName: \"English\"\n    contentDir: \"content/english\"\n  fr:\n    weight: 20\n    languageName: \"Français\"\n    contentDir: \"content/french\"\n```\n\n----------------------------------------\n\nTITLE: Creating Gaussian Blur Filter in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to create a Gaussian blur filter using the images.GaussianBlur function in Hugo. The sigma value of 5 determines the intensity of the blur effect.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/GaussianBlur.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.GaussianBlur 5 }}\n```\n\n----------------------------------------\n\nTITLE: Including Hugo's Built-in Templates\nDESCRIPTION: Examples of including Hugo's embedded templates using the template function. Shows how to include common functionality like Google Analytics and social media tags.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_20\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ template \"_internal/google_analytics.html\" . }}\n{{ template \"_internal/opengraph\" . }}\n{{ template \"_internal/pagination.html\" . }}\n{{ template \"_internal/schema.html\" . }}\n{{ template \"_internal/twitter_cards.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Structuring Hugo Shortcodes Directory Layout\nDESCRIPTION: Shows the recommended directory structure for organizing shortcode templates in Hugo, with shortcodes grouped into subdirectories by function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nlayouts/\n└── shortcodes/\n    ├── diagrams/\n    │   ├── kroki.html\n    │   └── plotly.html\n    ├── media/\n    │   ├── audio.html\n    │   ├── gallery.html\n    │   └── video.html\n    ├── capture.html\n    ├── column.html\n    ├── include.html\n    └── row.html\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Title in Ascending Order with Hugo\nDESCRIPTION: This snippet demonstrates how to use the ByTitle method to sort a collection of pages by their titles in ascending order. It iterates through the sorted pages and creates a list of linked titles.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByTitle.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByTitle }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Page Summaries in Hugo Templates\nDESCRIPTION: Template code showing how to render page summaries with optional 'More...' link when content is truncated.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/summaries.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range site.RegularPages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  <div class=\"summary\">\n    {{ .Summary }}\n    {{ if .Truncated }}\n      <a href=\"{{ .RelPermalink }}\">More ...</a>\n    {{ end }}\n  </div>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using resources.PostProcess in Hugo Templates\nDESCRIPTION: Demonstrates how to use resources.PostProcess in Hugo templates to apply PostCSS, minification, and fingerprinting to CSS files in production environments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/PostProcess.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"css/main.css\" }}\n  {{ if hugo.IsDevelopment }}\n    <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\">\n  {{ else }}\n    {{ with . | postCSS | minify | fingerprint | resources.PostProcess }}\n      <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\" integrity=\"{{ .Data.Integrity }}\" crossorigin=\"anonymous\">\n    {{ end }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Translations in Hugo Template\nDESCRIPTION: This Go HTML template demonstrates how to use the Translations method to render a list of available translations for a page. It includes links to translated versions with proper language attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Translations.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Translations }}\n  <ul>\n    {{ range . }}\n      <li>\n        <a href=\"{{ .RelPermalink }}\" hreflang=\"{{ .Language.LanguageCode }}\">{{ .LinkTitle }} ({{ or .Language.LanguageName .Language.Lang }})</a>\n      </li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Verifying Hugo Version in Command Line\nDESCRIPTION: Command to check the installed version of Hugo, ensuring it meets the minimum required version for this tutorial.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/quick-start.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhugo version\n```\n\n----------------------------------------\n\nTITLE: Hugo Project Structure with Configuration Subdirectory\nDESCRIPTION: An alternative Hugo project structure with the site configuration organized into subdirectories.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/directory-structure.md#2025-04-08_snippet_2\n\nLANGUAGE: txt\nCODE:\n```\nmy-site/\n├── archetypes/\n│   └── default.md\n├── assets/\n├── config/           <-- site configuration\n│   └── _default/\n│       └── hugo.toml\n├── content/\n├── data/\n├── i18n/\n├── layouts/\n├── static/\n└── themes/\n```\n\n----------------------------------------\n\nTITLE: Implementing the Plotly Shortcode in Hugo\nDESCRIPTION: Implementation of the plotly shortcode that generates a unique ID for each chart and initializes Plotly with the provided JSON data. The shortcode uses .Inner to access the content between the opening and closing tags.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/HasShortcode.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $id := printf \"plotly-%02d\" .Ordinal }}\n<div id=\"{{ $id }}\"></div>\n<script>\n  Plotly.newPlot(document.getElementById({{ $id }}), {{ .Inner | safeJS }});\n</script>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Commit Body using GitInfo\nDESCRIPTION: Template code to access the body of the commit message for the last Git commit of a page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GitInfo.md#2025-04-08_snippet_9\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .GitInfo }}\n  {{ .Body }} → - Two new pages added.\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Unsafe HTML in Hugo Templates\nDESCRIPTION: Example showing how Hugo escapes HTML content by default when not declared as safe.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/HTML.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $html := \"<em>emphasized</em>\" }}\n{{ $html }}\n```\n\nLANGUAGE: html\nCODE:\n```\n&lt;em&gt;emphasized&lt;/em&gt;\n```\n\n----------------------------------------\n\nTITLE: Using templates.Defer with TailwindCSS Processing in Hugo\nDESCRIPTION: This snippet demonstrates how to defer the execution of TailwindCSS processing until after all sites have been rendered. This allows TailwindCSS to access the complete hugo_stats.json output for determining which classes are used in the final HTML.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/templates/Defer.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with (templates.Defer (dict \"key\" \"global\")) }}\n  {{ $t := debug.Timer \"tailwindcss\" }}\n  {{ with resources.Get \"css/styles.css\" }}\n    {{ $opts := dict\n      \"inlineImports\" true\n      \"optimize\" hugo.IsProduction\n    }}\n    {{ with . | css.TailwindCSS $opts }}\n      {{ if hugo.IsDevelopment }}\n        <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\" />\n      {{ else }}\n        {{ with . | minify | fingerprint }}\n          <link\n            rel=\"stylesheet\"\n            href=\"{{ .RelPermalink }}\"\n            integrity=\"{{ .Data.Integrity }}\"\n            crossorigin=\"anonymous\" />\n        {{ end }}\n      {{ end }}\n    {{ end }}\n  {{ end }}\n  {{ $t.Stop }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Calling Hugo Shortcodes from Subdirectories\nDESCRIPTION: Demonstrates how to call a shortcode that's located in a subdirectory by specifying its path relative to the shortcode directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{</* media/audio path=/audio/podcast/episode-42.mp3 */>}}\n```\n\n----------------------------------------\n\nTITLE: Grouping Pages by Last Modified Date in Hugo Templates\nDESCRIPTION: Groups pages by year and month using the GroupByLastmod function. The pages are sorted by last modification date in descending order by default.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByLastmod.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByLastmod \"January 2006\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Size in Hugo Pager (Go)\nDESCRIPTION: This snippet demonstrates how to retrieve the number of pages per pager using the deprecated PageSize method. It returns an integer value representing the page size.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/PageSize.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nPAGER.PageSize\n```\n\n----------------------------------------\n\nTITLE: Configuring Language-Specific Menus for English in Hugo\nDESCRIPTION: A configuration file example for English menu entries when using the configuration directory approach for multilingual menus.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[[main]]\nname = 'Products'\npageRef = '/products'\nweight = 10\n[[main]]\nname = 'Services'\npageRef = '/services'\nweight = 20\n```\n\n----------------------------------------\n\nTITLE: Using path.Dir Function in Hugo Templates\nDESCRIPTION: Demonstrates various examples of the path.Dir function which replaces path separators with slashes (/) and returns all but the last element of the given path. The examples show behavior with different path formats including relative paths, files in root directory, nested directories, absolute paths, and empty strings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/path/Dir.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ path.Dir \"a/news.html\" }} → a\n{{ path.Dir \"news.html\" }} → .\n{{ path.Dir \"a/b/c\" }} → a/b\n{{ path.Dir \"/a/b/c\" }} → /a/b\n{{ path.Dir \"/a/b/c/\" }} → /a/b/c\n{{ path.Dir \"\" }} → .\n```\n\n----------------------------------------\n\nTITLE: Sorting Groups in Ascending Order with GroupByPublishDate in Hugo Templates\nDESCRIPTION: This example shows how to group pages by publish date and sort the groups in ascending order using the 'asc' parameter. The output maintains the same format with date headings and lists of page links.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByPublishDate.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByPublishDate \"January 2006\" \"asc\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Basic Netlify Configuration for Hugo Sites\nDESCRIPTION: A simple Netlify configuration file (netlify.toml) for Hugo sites. It specifies the Hugo version, Node.js version, timezone, and build commands.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-netlify/index.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[build.environment]\nHUGO_VERSION = \"0.144.2\"\nNODE_VERSION = \"22\"\nTZ = \"America/Los_Angeles\"\n\n[build]\npublish = \"public\"\ncommand = \"hugo --gc --minify\"\n```\n\n----------------------------------------\n\nTITLE: Calling Partial from Shortcode in Hugo Templates\nDESCRIPTION: Demonstrates how to call a partial template from within a shortcode, passing the current context containing Page, Params, Inner, and Name identifiers.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Page.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partial \"my-partial.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Creating Atom Output Format in Hugo\nDESCRIPTION: Configuration for defining a new Atom output format with specific media type settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/output-formats.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[outputFormats.atom]\nmediaType = 'application/atom+xml'\nnoUgly = true\n```\n\n----------------------------------------\n\nTITLE: Intersection Comparison Example\nDESCRIPTION: Shows how to use the 'intersect' operator to find pages that have any common values between their parameter (as a slice) and a given slice, useful for taxonomy filtering.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $books := where site.RegularPages \"Section\" \"eq\" \"books\" }}\n\n{{ $genres := slice \"suspense\" \"romance\" }}\n{{ $pages := where $books \"Params.genres\" \"intersect\" $genres }}\n```\n\n----------------------------------------\n\nTITLE: Basic Section Template with Pagination in Hugo\nDESCRIPTION: A simple section template that paginates the pages collection and renders navigation links, used to demonstrate the resulting site structure.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/pagination.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range (.Paginate .Pages).Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ template \"_internal/pagination.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Context Manipulation with Range and With Blocks in Hugo Templates\nDESCRIPTION: Demonstrates how context changes within range and with blocks in Hugo templates. The example shows how to iterate through a slice and temporarily change context while still displaying page information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<h2>{{ .Title }}</h2>\n\n{{ range slice \"foo\" \"bar\" }}\n  <p>{{ . }}</p>\n{{ end }}\n\n{{ with \"baz\" }}\n  <p>{{ . }}</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Applying images.Dither Filter with Best Practices in Hugo\nDESCRIPTION: Example of applying the images.Dither filter with recommended practices, including scaling before dithering and outputting to a lossless format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Dither.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"original.jpg\" }}\n  {{ $opts := dict\n    \"method\" \"ClusteredDotSpiral5x5\"\n    \"colors\" (first 3 .Colors)\n  }}\n  {{ $filters := slice\n    (images.Process \"resize 800x\")\n    (images.Dither $opts)\n    (images.Process \"png\")\n  }}\n  {{ with . | images.Filter $filters }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Single Template in Hugo\nDESCRIPTION: A minimal single template that inherits from the site's base template and renders the page title and content. This template defines the 'main' block which will be inserted into the appropriate section of the base template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/single.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Paginating a List Page with Paginate Method in Hugo Templates\nDESCRIPTION: Example of paginating a filtered list of pages by title with 7 pages per pager, then ranging through the paginated collection and adding navigation links.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/pagination.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages.ByTitle 7 }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ template \"_internal/pagination.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Creating a List Item View Template in Hugo\nDESCRIPTION: This snippet demonstrates how to create a list item (li) view template in Hugo. It displays a simple list item with a link to the content and the publication date.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/content-view.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<li>\n  <a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a>\n  <div class=\"meta\">{{ .Date.Format \"Mon, Jan 2, 2006\" }}</div>\n</li>\n```\n\n----------------------------------------\n\nTITLE: Iterating Through All Site Pages in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to loop through all pages in a Hugo site using the .Site.Pages method. It creates an HTML heading with a link to each page using its relative permalink and link title.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Pages.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Site.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Logging Warnings Instead of Errors with resources.GetRemote\nDESCRIPTION: Example demonstrating how to log an error as a warning instead of an error when using resources.GetRemote, which allows the build to continue despite failures.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/GetRemote.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://broken-example.org/images/a.jpg\" }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ warnf \"%s\" . }}\n  {{ else with .Value }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ else }}\n    {{ warnf \"Unable to get remote resource %q\" $url }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Template CSS File Definition\nDESCRIPTION: CSS template file that uses site configuration parameters to define background and text colors using Go template syntax.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/ExecuteAsTemplate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\nbody {\n  background-color: {{ site.Params.style.bg_color }};\n  color: {{ site.Params.style.text_color }};\n}\n```\n\n----------------------------------------\n\nTITLE: Extracting Response Headers with resources.GetRemote\nDESCRIPTION: Example showing how to extract specific headers from a server's response using the responseHeaders option, which makes them accessible through the resource's Data.Headers method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/GetRemote.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://example.org/images/a.jpg\" }}\n{{ $opts := dict\n  \"method\" \"HEAD\"\n  \"responseHeaders\" (slice \"X-Frame-Options\" \"Server\")\n}}\n{{ $resource := resources.GetRemote $url $opts }}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Content Structure for FirstSection Method in Hugo\nDESCRIPTION: This text snippet illustrates a typical Hugo content directory structure to help understand how the FirstSection method identifies the top-level section of any page within the hierarchy.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/FirstSection.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── auctions/\n│   ├── 2023-11/\n│   │   ├── _index.md     <-- first section: auctions\n│   │   ├── auction-1.md\n│   │   └── auction-2.md  <-- first section: auctions\n│   ├── 2023-12/\n│   │   ├── _index.md     \n│   │   ├── auction-3.md\n│   │   └── auction-4.md\n│   ├── _index.md         <-- first section: auctions\n│   ├── bidding.md\n│   └── payment.md        <-- first section: auctions\n├── books/\n│   ├── _index.md         <-- first section: books\n│   ├── book-1.md\n│   └── book-2.md         <-- first section: books\n├── films/\n│   ├── _index.md         <-- first section: films\n│   ├── film-1.md\n│   └── film-2.md         <-- first section: films\n└── _index.md             <-- first section: home\n```\n\n----------------------------------------\n\nTITLE: Filtering Pages with Intersect and Where in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use collections.Intersect in combination with 'where' to filter pages in a Hugo site. It excludes certain page types, includes pinned pages, and ensures pages have images set in their parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Intersect.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where .Site.RegularPages \"Type\" \"not in\" (slice \"page\" \"about\") }}\n{{ $pages := $pages | union (where .Site.RegularPages \"Params.pinned\" true) }}\n{{ $pages := $pages | intersect (where .Site.RegularPages \"Params.images\" \"!=\" nil) }}\n```\n\n----------------------------------------\n\nTITLE: Ranging Through RegularPages in Hugo Template\nDESCRIPTION: Demonstrates how to iterate through regular pages sorted by title and create links with titles. Uses the RegularPages method on the current page context.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RegularPages.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .RegularPages.ByTitle }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Checking Float Membership in a Float Slice with collections.In\nDESCRIPTION: This example illustrates how to check if a floating point value exists within a slice of floats using the collections.In function. It returns true when 2.22 is found in the slice.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/In.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice 1.11 2.22 3.33 }}\n{{ in $s 2.22 }} → true\n```\n\n----------------------------------------\n\nTITLE: Rendering Menu Items with Name Property in Hugo Template\nDESCRIPTION: This snippet demonstrates how to create an unordered list of menu items using Hugo's template syntax. It iterates over the main menu items, creating a list item for each entry with a link to the URL and displaying the Name of the menu item.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Name.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Detecting Shortcode Usage in Hugo Templates\nDESCRIPTION: Template example showing how to use the .HasShortcode method to conditionally load CSS only when a specific shortcode (audio) is used on the current page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_17\n\nLANGUAGE: go-html-template\nCODE:\n```\n<head>\n  ...\n  {{ if .HasShortcode \"audio\" }}\n    <link rel=\"stylesheet\" src=\"/css/audio.css\">\n  {{ end }}\n  ...\n</head>\n```\n\n----------------------------------------\n\nTITLE: Creating Caution Callouts in Markdown\nDESCRIPTION: Demonstrates how to create a caution callout to advise about risks or negative outcomes of certain actions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n> [!caution]\n> Advises about risks or negative outcomes of certain actions.\n```\n\n----------------------------------------\n\nTITLE: Filtering Menu Entries by Weight in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to limit the number of menu entries displayed based on their weight. It iterates through the main menu entries and only includes those with a weight less than or equal to 42.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Weight.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    {{ if le .Weight 42 }}\n      <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n    {{ end }}\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Reversing the Sort Order of a ByCount Taxonomy in Hugo\nDESCRIPTION: Reverses the sort order of the taxonomy after it has been ordered by count, displaying terms with fewer associated pages first.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/ByCount.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $taxonomyObject.ByCount.Reverse }}\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended on openSUSE and Derivatives\nDESCRIPTION: Command to install the extended edition of Hugo on openSUSE-based distributions using the zypper package manager.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\nsudo zypper install hugo\n```\n\n----------------------------------------\n\nTITLE: Creating Paginated Navigation with HasPrev in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to create pagination navigation in Hugo using the HasPrev method to check if there is a previous page. It sets up a paginator for posts and creates navigation links for first, previous, next, and last pages based on the current page position.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/HasPrev.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  <ul>\n    {{ with .First }}\n      <li><a href=\"{{ .URL }}\">First</a></li>\n    {{ end }}\n    {{ if .HasPrev }}\n      <li><a href=\"{{ .Prev.URL }}\">Previous</a></li>\n    {{ end }}\n    {{ if .HasNext }}\n      <li><a href=\"{{ .Next.URL }}\">Next</a></li>\n    {{ end }}\n    {{ with .Last }}\n      <li><a href=\"{{ .URL }}\">Last</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Firebase Authentication\nDESCRIPTION: Command to log in to Firebase through the CLI, which opens a browser for account selection\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-firebase.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nfirebase login\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination in Hugo List Template\nDESCRIPTION: This snippet demonstrates how to paginate a collection of pages in a Hugo list template. It filters regular pages, sorts them by title, paginates the collection with 7 items per page, and renders links to each page along with navigation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Paginate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where .Site.RegularPages \"Section\" \"articles\" }}\n{{ $pages = $pages.ByTitle }}\n{{ range (.Paginate $pages 7).Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></h2>\n{{ end }}\n{{ template \"_internal/pagination.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Alternative Output Formats Template in Hugo\nDESCRIPTION: Go HTML template for generating alternative output format links in the site header.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/output-formats.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .AlternativeOutputFormats }}\n  <link rel=\"{{ .Rel }}\" type=\"{{ .MediaType.Type }}\" href=\"{{ .Permalink | safeURL }}\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Inline Base64-Encoded Images in Hugo Templates\nDESCRIPTION: Demonstrates how to create an inline image by encoding the content of an image resource as base64 and using it in an img tag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Content.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  <img src=\"data:{{ .MediaType.Type }};base64,{{ .Content | base64Encode }}\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Content Summary View in Hugo List Template\nDESCRIPTION: This snippet demonstrates how to use the .Render function in a list template to render content summaries. It iterates through pages and renders each using the \"summary\" view.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/content-view.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<main id=\"main\">\n  <div>\n    <h1 id=\"title\">{{ .Title }}</h1>\n    {{ range .Pages }}\n      {{ .Render \"summary\" }}\n    {{ end }}\n  </div>\n</main>\n```\n\n----------------------------------------\n\nTITLE: Updating All Hugo Modules\nDESCRIPTION: Command to update all modules in a Hugo project to their latest versions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-modules/use-modules.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nhugo mod get -u\n```\n\n----------------------------------------\n\nTITLE: Grouping Pages with collections.Group in Hugo Templates\nDESCRIPTION: Demonstrates how to use collections.Group to organize pages into groups labeled 'New' and 'Old', then render them in an HTML template with titles and dates. The example shows grouping the first and last 10 regular pages from the site and displaying them in separate lists.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Group.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $new := .Site.RegularPages | first 10 | group \"New\" }}\n{{ $old := .Site.RegularPages | last 10 | group \"Old\" }}\n{{ $groups := slice $new $old }}\n{{ range $groups }}\n  <h3>{{ .Key }}{{/* Prints \"New\", \"Old\" */}}</h3>\n  <ul>\n    {{ range .Pages }}\n      <li>\n        <a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a>\n        <div class=\"meta\">{{ .Date.Format \"Mon, Jan 2, 2006\" }}</div>\n      </li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Taxonomy Template in Hugo\nDESCRIPTION: Shows a taxonomy template that inherits from the base template and renders a list of terms in the current taxonomy.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/types.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n  {{ range .Pages }}\n    <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Taxonomy Template with Content Links in Hugo\nDESCRIPTION: An enhanced taxonomy template that sorts terms by count and lists the content to which each term is assigned. Demonstrates using WeightedPages to access associated content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/taxonomy.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n  {{ range .Data.Terms.ByCount }}\n    <h2><a href=\"{{ .Page.RelPermalink }}\">{{ .Page.LinkTitle }}</a> ({{ .Count }})</h2>\n    <ul>\n      {{ range .WeightedPages }}\n        <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n      {{ end }}\n    </ul>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages Within Groups Using ByTitle Method in Hugo Templates\nDESCRIPTION: This snippet demonstrates grouping pages by publish date and then sorting the pages within each group by title using the ByTitle method. This allows for two levels of organization - first by date, then alphabetically.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByPublishDate.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByPublishDate \"January 2006\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages.ByTitle }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages Within Groups Using ByTitle Method in Hugo Templates\nDESCRIPTION: This snippet demonstrates grouping pages by publish date and then sorting the pages within each group by title using the ByTitle method. This allows for two levels of organization - first by date, then alphabetically.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByPublishDate.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByPublishDate \"January 2006\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages.ByTitle }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Overriding Cache Key in resources.GetRemote\nDESCRIPTION: Example showing how to override the default cache key when fetching a remote resource, which gives more control over how often Hugo fetches a remote resource.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/GetRemote.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://example.org/images/a.jpg\" }}\n{{ $opts := dict \n  \"key\" (print $url (now.Format \"2006-01-02\"))\n}}\n{{ $resource := resources.GetRemote $url $opts }}\n```\n\n----------------------------------------\n\nTITLE: Basic Sass Transpilation with Hugo Templates\nDESCRIPTION: Example of transpiling Sass to CSS with conditional source mapping and production optimization. Includes fingerprinting for production builds.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/Sass.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"sass/main.scss\" }}\n  {{ $opts := dict\n    \"enableSourceMap\" (not hugo.IsProduction)\n    \"outputStyle\" (cond hugo.IsProduction \"compressed\" \"expanded\")\n    \"targetPath\" \"css/main.css\"\n    \"transpiler\" \"libsass\"\n  }}\n  {{ with . | toCSS $opts }}\n    {{ if hugo.IsProduction }}\n      {{ with . | fingerprint }}\n        <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\" integrity=\"{{ .Data.Integrity }}\" crossorigin=\"anonymous\">\n      {{ end }}\n    {{ else }}\n      <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\">\n    {{ end }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Implementing Page Pagination in Hugo Templates\nDESCRIPTION: This snippet shows how to create a paginated list of posts in Hugo. It filters regular pages by type 'posts', creates a paginator, iterates through paginated pages to display titles with links, and includes Hugo's built-in pagination template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/Pages.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ template \"_internal/pagination.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Inline Date Shortcode Example\nDESCRIPTION: Demonstration of an inline shortcode that formats dates using Hugo's time functions. Shows both definition and usage patterns.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/shortcodes.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nToday is\n{{</* date.inline \":date_medium\" */>}}\n  {{- now | time.Format (.Get 0) -}}\n{{</* /date.inline */>}}.\n\nToday is {{</* date.inline \":date_full\" /*/>}}.\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Installation Documentation Frontmatter in YAML\nDESCRIPTION: YAML frontmatter for a Hugo documentation page that defines metadata for content about installing Hugo on various operating systems. It includes title, description, weight for ordering, and URL aliases.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Installation\ndescription: Install Hugo on macOS, Linux, Windows, BSD, and on any machine that can run the Go compiler tool chain.\ncategories: []\nkeywords: []\nweight: 10\naliases: [/getting-started/installing/]\n---\n```\n\n----------------------------------------\n\nTITLE: Using TotalNumberOfElements with a Paginator in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to create a paginator for blog posts and display the total number of elements in the collection. It first filters regular pages by type, creates a paginator, renders links to each page in the current paginator page, and finally outputs the total count of pages in the entire paginated collection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/TotalNumberOfElements.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  {{ .TotalNumberOfElements }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Expiry Date in Ascending Order (Hugo)\nDESCRIPTION: This snippet demonstrates how to use the ByExpiryDate function to sort pages by their expiration date in ascending order. It iterates through the sorted pages and displays each page's link title.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByExpiryDate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByExpiryDate }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using else with if Statement in Hugo Templates\nDESCRIPTION: Demonstrates basic if-else conditional logic in Hugo templates using a variable check. Shows how to provide an alternate execution path when the condition is false.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/else.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := \"foo\" }}\n{{ if $var }}\n  {{ $var }} → foo\n{{ else }}\n  {{ print \"var is falsy\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Menu Entries with Custom Parameters in Hugo Configuration\nDESCRIPTION: Example configuration showing how to define menu entries with custom parameters using the params key. This demonstrates setting up main menu items with different weights and a custom 'rel' parameter for external links.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Params.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nname = 'About'\npageRef = '/about'\nweight = 10\n\n[[menus.main]]\nname = 'Contact'\npageRef = '/contact'\nweight = 20\n\n[[menus.main]]\nname = 'Hugo'\nurl = 'https://gohugo.io'\nweight = 30\n[menus.main.params]\n  rel = 'external'\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of 'with' Function in Hugo Templates\nDESCRIPTION: Demonstrates the basic usage of the 'with' function to bind a variable to the context and execute a block if the expression is truthy.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/with.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := \"foo\" }}\n{{ with $var }}\n  {{ . }} → foo\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Combining Multiple Hugo Configuration Files\nDESCRIPTION: Demonstrates how to combine two or more configuration files when building a Hugo site, with left-to-right precedence.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/introduction.md#2025-04-08_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nhugo --config a.toml,b.yaml,c.json\n```\n\n----------------------------------------\n\nTITLE: Creating JSON Resource with resources.FromString in Hugo\nDESCRIPTION: This snippet demonstrates how to create a JSON resource containing build information using resources.FromString and publish it to the site's root directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/FromString.md#2025-04-08_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"build_date\": \"2025-01-16T19:14:41-08:00\",\n  \"hugo_version\": \"0.141.0\",\n  \"last_modified\": \"2025-01-16T19:14:46-08:00\"\n}\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if .IsHome }}\n  {{ $rfc3339 := \"2006-01-02T15:04:05Z07:00\" }}\n  {{ $m := dict\n    \"hugo_version\" hugo.Version\n    \"build_date\" (now.Format $rfc3339)\n    \"last_modified\" (site.Lastmod.Format $rfc3339)\n  }}\n  {{ $json := jsonify $m }}\n  {{ $r := resources.FromString \"site.json\" $json }}\n  {{ $r.Publish }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Metadata to a Taxonomy Term in Hugo\nDESCRIPTION: This code snippet illustrates how to add custom metadata to a taxonomy term by creating a page for that term. It shows an example of adding a Wikipedia link to an actor's term page using front matter in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/taxonomies.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\ntitle: \"Bruce Willis\"\nwikipedia: \"https://en.wikipedia.org/wiki/Bruce_Willis\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Resource Media Type in Hugo Templates\nDESCRIPTION: Demonstrates how to get the full media type (MIME type) of a resource using the MediaType.Type method. Returns the complete media type string (e.g., 'image/jpeg').\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/MediaType.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ .MediaType.Type }} → image/jpeg\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Server Command Options\nDESCRIPTION: Comprehensive list of available command-line options for configuring the Hugo server, including server settings, build options, and debugging features\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_server.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --appendPort               append port to baseURL (default true)\n  -b, --baseURL string           hostname (and path) to the root, e.g. https://spf13.com/\n      --bind string              interface to which the server will bind (default \"127.0.0.1\")\n  -D, --buildDrafts              include content marked as draft\n  -E, --buildExpired             include expired content\n  -F, --buildFuture              include content with publishdate in the future\n      --cacheDir string          filesystem path to cache directory\n      --cleanDestinationDir      remove files from destination not found in static directories\n  -c, --contentDir string        filesystem path to content directory\n      --disableBrowserError      do not show build errors in the browser\n      --disableFastRender        enables full re-renders on changes\n      --disableKinds strings     disable different kind of pages (home, RSS etc.)\n      --disableLiveReload        watch without enabling live browser reload on rebuild\n      --enableGitInfo            add Git revision, date, author, and CODEOWNERS info to the pages\n      --forceSyncStatic          copy all files when static is changed.\n      --gc                       enable to run some cleanup tasks (remove unused cache files) after the build\n  -h, --help                     help for server\n      --ignoreCache              ignores the cache directory\n  -l, --layoutDir string         filesystem path to layout directory\n      --liveReloadPort int       port for live reloading (i.e. 443 in HTTPS proxy situations) (default -1)\n      --minify                   minify any supported output format (HTML, XML etc.)\n  -N, --navigateToChanged        navigate to changed content file on live browser reload\n      --noChmod                  don't sync permission mode of files\n      --noHTTPCache              prevent HTTP caching\n      --noTimes                  don't sync modification time of files\n  -O, --openBrowser              open the site in a browser after server startup\n      --panicOnWarning           panic on first WARNING log\n      --poll string              set this to a poll interval, e.g --poll 700ms, to use a poll based approach to watch for file system changes\n  -p, --port int                 port on which the server will listen (default 1313)\n      --pprof                    enable the pprof server (port 8080)\n      --printI18nWarnings        print missing translations\n      --printMemoryUsage         print memory usage to screen at intervals\n      --printPathWarnings        print warnings on duplicate target paths etc.\n      --printUnusedTemplates     print warnings on unused templates.\n      --renderSegments strings   named segments to render (configured in the segments config)\n      --renderStaticToDisk       serve static files from disk and dynamic files from memory\n      --templateMetrics          display metrics about template executions\n      --templateMetricsHints     calculate some improvement hints when combined with --templateMetrics\n  -t, --theme strings            themes to use (located in /themes/THEMENAME/)\n      --tlsAuto                  generate and use locally-trusted certificates.\n      --tlsCertFile string       path to TLS certificate file\n      --tlsKeyFile string        path to TLS key file\n      --trace file               write trace to file (not useful in general)\n  -w, --watch                    watch filesystem for changes and recreate as needed (default true)\n```\n\n----------------------------------------\n\nTITLE: Creating a Branch in Git for Documentation Changes\nDESCRIPTION: Shows how to create a new branch with a descriptive name that includes the corresponding issue number when making documentation changes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_16\n\nLANGUAGE: sh\nCODE:\n```\ngit checkout -b restructure-foo-page-99999\n```\n\n----------------------------------------\n\nTITLE: AbsLangURL Usage Without Leading Slash - Subdirectory\nDESCRIPTION: Examples of using absLangURL function with baseURL set to a subdirectory, showing URL generation for paths without leading slashes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/AbsLangURL.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ absLangURL \"\" }}           → https://example.org/docs/en/\n{{ absLangURL \"articles\" }}   → https://example.org/docs/en/articles\n{{ absLangURL \"style.css\" }}  → https://example.org/docs/en/style.css\n```\n\n----------------------------------------\n\nTITLE: Sorting Regular Pages by Title in Hugo Templates\nDESCRIPTION: This snippet shows how to use the RegularPages method combined with the ByTitle sorting method to iterate through regular pages sorted alphabetically by title.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/RegularPages.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Site.RegularPages.ByTitle }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Automated Deployment Configuration for SourceHut Pages\nDESCRIPTION: A SourceHut build manifest (.build.yml) configuration that automates Hugo site deployment. This approach requires a paid account and uses the SourceHut build system to automatically build and deploy whenever changes are pushed to the repository.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-sourcehut-pages.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nimage: alpine/edge\npackages:\n  - hugo\n  - hut\noauth: pages.sr.ht/PAGES:RW\nenvironment:\n  site: <YourUsername>.srht.site\ntasks:\n- package: |\n    cd $site\n    hugo\n    tar -C public -cvz . > ../site.tar.gz\n- upload: |\n    hut pages publish -d $site site.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Hugo Template for Iterating Through Sections\nDESCRIPTION: Template code that demonstrates how to loop through top-level sections and create links with their titles using the Site.Sections method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Sections.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Site.Sections }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Content Directory Structure Example\nDESCRIPTION: Shows an example content directory structure with books and films sections, where the films section contains more pages than books. This structure is used to demonstrate the automatic determination of MainSections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/MainSections.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── books/\n│   ├── book-1.md\n│   └── book-2.md\n├── films/\n│   ├── film-1.md\n│   ├── film-2.md\n│   └── film-3.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Basic Hugo Build Command\nDESCRIPTION: The basic command syntax for building a Hugo site. Used without flags, it performs a default build of the site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo [flags]\n```\n\n----------------------------------------\n\nTITLE: Defining a Template Block in Hugo\nDESCRIPTION: Example of how to define a template block in Hugo. This is a shorthand for creating a named template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/block.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"name\" }} T1 {{ end }}\n```\n\n----------------------------------------\n\nTITLE: Image Resizing in Hugo\nDESCRIPTION: Demonstrates different ways to resize an image in Hugo, including preserving aspect ratio and specifying both dimensions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{/* Resize to a width of 600px and preserve aspect ratio */}}\n{{ $image := $image.Resize \"600x\" }}\n\n{{/* Resize to a height of 400px and preserve aspect ratio */}}\n{{ $image := $image.Resize \"x400\" }}\n\n{{/* Resize to a width of 600px and a height of 400px */}}\n{{ $image := $image.Resize \"600x400\" }}\n```\n\n----------------------------------------\n\nTITLE: Creating New Hugo Site\nDESCRIPTION: This command creates a new Hugo site skeleton in the specified directory. It sets up the correct structure but doesn't include any content or theme.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_new_site.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhugo new site [path] [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating QR Code for Current Page Permalink\nDESCRIPTION: Generates a QR code that links to the current page's permalink and renders it with appropriate accessibility attributes and lazy loading.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/QR.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with images.QR .Permalink }}\n  <img\n    src=\"{{ .RelPermalink }}\"\n    width=\"{{ .Width }}\"\n    height=\"{{ .Height }}\"\n    alt=\"QR code linking to {{ $.Permalink }}\"\n    class=\"qr-code\"\n    loading=\"lazy\"\n  >\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Shortcode Template in Hugo\nDESCRIPTION: Illustrates a shortcode template that renders an audio element from a global resource, and how to call it from within markup.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/types.md#2025-04-08_snippet_10\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get (.Get \"src\") }}\n  <audio controls preload=\"auto\" src=\"{{ .RelPermalink }}\"></audio>\n{{ end }}\n```\n\nLANGUAGE: text\nCODE:\n```\n{{</* audio src=/audio/test.mp3 */>}}\n```\n\n----------------------------------------\n\nTITLE: Alphabetically Sorted Taxonomy Template in Hugo\nDESCRIPTION: A taxonomy template that sorts terms alphabetically and displays the number of pages associated with each term. Uses the Alphabetical method on the Terms object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/taxonomy.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n  {{ range .Data.Terms.Alphabetical }}\n    <h2><a href=\"{{ .Page.RelPermalink }}\">{{ .Page.LinkTitle }}</a> ({{ .Count }})</h2>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Base Language Settings in Hugo\nDESCRIPTION: Sets up the base language configuration for a Hugo site, including default language, subdirectory settings, and language disabling options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/languages.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'en'\ndefaultContentLanguageInSubdir = false\ndisableDefaultLanguageRedirect = false\ndisableLanguages = []\n```\n\n----------------------------------------\n\nTITLE: Default Archetype Structure in Hugo\nDESCRIPTION: The default archetype template used by Hugo when creating new content files. It sets title, date, and draft status as front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\ntitle = '{{ replace .File.ContentBaseName `-` ` ` | title }}'\ndate = '{{ .Date }}'\ndraft = true\n```\n\n----------------------------------------\n\nTITLE: Basic AddDate Usage in Hugo Templates\nDESCRIPTION: Demonstrates basic usage of AddDate function to add or subtract years, months, and days from a time.Time value. Shows how to format the result using time.Format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/AddDate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $d := \"2022-01-01\" | time.AsTime }}\n\n{{ $d.AddDate 0 0 1 | time.Format \"2006-01-02\" }} → 2022-01-02\n{{ $d.AddDate 0 1 1 | time.Format \"2006-01-02\" }} → 2022-02-02\n{{ $d.AddDate 1 1 1 | time.Format \"2006-01-02\" }} → 2023-02-02\n\n{{ $d.AddDate -1 -1 -1 | time.Format \"2006-01-02\" }} → 2020-11-30\n```\n\n----------------------------------------\n\nTITLE: Building and Rendering js.Batch Resources in Hugo\nDESCRIPTION: This snippet shows how to build js.Batch resources and render them in a template, handling both JavaScript and CSS outputs within a templates.Defer block.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Batch.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $group := .group }}\n{{ with (templates.Defer (dict \"key\" $group \"data\" $group )) }}\n  {{ with (js.Batch \"js/mybatch\") }}\n    {{ with .Build }}\n      {{ with index .Groups $ }}\n        {{ range . }}\n          {{ $s := . }}\n          {{ if eq $s.MediaType.SubType \"css\" }}\n            <link href=\"{{ $s.RelPermalink }}\" rel=\"stylesheet\" />\n          {{ else }}\n            <script src=\"{{ $s.RelPermalink }}\" type=\"module\"></script>\n          {{ end }}\n        {{ end }}\n      {{ end }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using ReadingTime Function in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the built-in ReadingTime function to display the estimated reading time of a page in minutes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/ReadingTime.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ printf \"Estimated reading time: %d minutes\" .ReadingTime }}\n```\n\n----------------------------------------\n\nTITLE: Creating a Two-Column Layout with CSS Columns and Break-After Property\nDESCRIPTION: Using CSS Columns with break-after: always on the H1 element to create a clean two-column layout without requiring multiple wrapper divs or complex clearing techniques.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/showcase/hartwell-insurance/index.md#2025-04-08_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<h1>Heading with break-after: always;</h1>\n<!-- The rest of the content flows into columns -->\n```\n\n----------------------------------------\n\nTITLE: Basic Hugo Content Directory Structure Example\nDESCRIPTION: Demonstrates a simple Hugo content directory structure showing an 'about' page bundle and a standalone privacy page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/page-bundles.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── about/\n│   ├── index.md\n│   └── welcome.jpg\n└── privacy.md\n```\n\n----------------------------------------\n\nTITLE: Default Template Path Resolution\nDESCRIPTION: Shows the default template path used when rendering content for non-specific content types.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Render.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nlayouts/_default/li.html\n```\n\n----------------------------------------\n\nTITLE: Using 'define' with 'partial' Function in Hugo Templates\nDESCRIPTION: This example demonstrates how to use the 'define' function to create an inline partial template. The partial is then called using the 'partial' function with a dictionary of parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/define.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partial \"inline/foo.html\" (dict \"answer\" 42) }}\n\n{{ define \"partials/inline/foo.html\" }}\n  {{ printf \"The answer is %v.\" .answer }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Adding a Module Replacement for Local Development\nDESCRIPTION: Syntax for adding a replace directive in go.mod to use a local directory for module development.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-modules/use-modules.md#2025-04-08_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nreplace github.com/bep/hugotestmods/mypartials => /Users/bep/hugotestmods/mypartials\n```\n\n----------------------------------------\n\nTITLE: Hugo Theme Skeleton Structure\nDESCRIPTION: The directory structure created when initializing a new Hugo theme, showing the main subdirectories and configuration files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/directory-structure.md#2025-04-08_snippet_6\n\nLANGUAGE: txt\nCODE:\n```\nmy-theme/\n├── archetypes/\n├── assets/\n├── content/\n├── data/\n├── i18n/\n├── layouts/\n├── static/\n├── LICENSE\n├── README.md\n├── hugo.toml\n└── theme.toml\n```\n\n----------------------------------------\n\nTITLE: Iterating Through Site Languages in Hugo Templates\nDESCRIPTION: This snippet shows how to iterate through all available site languages and access their properties. It creates an unordered list of language titles and names from the language configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Languages.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Languages }}\n    <li>{{ .Title }} ({{ .LanguageName }})</li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Using resources.FromString with ExecuteAsTemplate in Hugo\nDESCRIPTION: This snippet shows how to combine resources.FromString with resources.ExecuteAsTemplate to create a resource from a string containing template actions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/FromString.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if .IsHome }}\n  {{ $string := `\n    {{ $rfc3339 := \"2006-01-02T15:04:05Z07:00\" }}\n    {{ $m := dict\n      \"hugo_version\" hugo.Version\n      \"build_date\" (now.Format $rfc3339)\n      \"last_modified\" (site.Lastmod.Format $rfc3339)\n    }}\n    {{ $json := jsonify $m }}\n    `\n  }}\n  {{ $r := resources.FromString \"\" $string }}\n  {{ $r = $r | resources.ExecuteAsTemplate \"site.json\" . }}\n  {{ $r.Publish }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Conditional Summary Display with Read More Link\nDESCRIPTION: Shows how to display page summaries with a conditional read more link using the Truncated method. The read more link appears only when the content length exceeds the summary length.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Summary.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ .Summary }}\n  {{ if .Truncated }}\n    <a href=\"{{ .RelPermalink }}\">Read more...</a>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Brightness Image Filter in Hugo Templates\nDESCRIPTION: Creates an image filter that adjusts brightness by a specified percentage. The percentage must be between -100 and 100, where -100 produces black, 0 has no effect, and 100 produces white.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Brightness.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Brightness 12 }}\n```\n\n----------------------------------------\n\nTITLE: Hugo New Command Basic Options\nDESCRIPTION: Lists the basic command-line options available for the 'hugo new' command, including help flag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_new.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for new\n```\n\n----------------------------------------\n\nTITLE: Applying Opacity Filter with Format Conversion\nDESCRIPTION: Example of combining opacity filter with format conversion for JPG images. Creates a PNG with 65% opacity from a JPG source image, demonstrating how to handle formats that don't support transparency.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Opacity.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ $filters := slice\n    (images.Opacity 0.65)\n    (images.Process \"png\")\n  }}\n  {{ with . | images.Filter $filters }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Practical Example: Combining Page Collections in Hugo Template\nDESCRIPTION: Practical example showing how to combine different types of content pages using append function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Append.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $p := where site.RegularPages \"Type\" \"press-releases\" | first 2 }}\n{{ $p = $p | append (where site.RegularPages \"Type\" \"articles\" | first 4) }}\n\n{{ with $p }}\n  <ul>\n    {{ range . }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Server Settings in Hugo (TOML)\nDESCRIPTION: This snippet shows the default configuration options for Hugo's development server. It includes settings for force redirects, URL patterns, headers, and status codes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/server.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nforce = false\nfrom = \"\"\nfromHeaders = {}\nfromRe = \"\"\nstatus = \"\"\nto = \"\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Footer Partial in Hugo\nDESCRIPTION: Example of a footer partial template used on spf13.com, showing a simple footer structure with copyright information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/partial.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n<footer>\n  <div>\n    <p>\n    &copy; 2013-14 Steve Francia.\n    <a href=\"https://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons Attribution\">Some rights reserved</a>;\n    please attribute properly and link back.\n    </p>\n  </div>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Displaying Hugo Content Structure\nDESCRIPTION: Shows the folder structure for Hugo content, illustrating how content types are organized.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Type.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── auction/\n│   ├── _index.md\n│   ├── item-1.md\n│   └── item-2.md  <-- front matter: type = books\n├── books/\n│   ├── _index.md\n│   ├── book-1.md\n│   └── book-2.md\n├── films/\n│   ├── _index.md\n│   ├── film-1.md \n│   └── film-2.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Creating Home Page Template in Hugo\nDESCRIPTION: Shows a home page template that inherits from the base template and renders the home page content, including a list of regular pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/types.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  {{ .Content }}\n  {{ range site.RegularPages }}\n    <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Parameters in Hugo Front Matter\nDESCRIPTION: Example of defining custom parameters in Hugo page front matter including nested structures and hyphenated keys.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Params.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Annual conference'\ndate = 2023-10-17T15:11:37-07:00\n[params]\ndisplay_related = true\nkey-with-hyphens = 'must use index function'\n[params.author]\n  email = 'jsmith@example.org'\n  name = 'John Smith'\n```\n\n----------------------------------------\n\nTITLE: Calling Menu Partial in Hugo Template\nDESCRIPTION: This snippet shows how to call the menu partial template, passing a menu ID and the current page context. It demonstrates rendering multiple menus (main and footer) on a single page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/menu.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partial \"menu.html\" (dict \"menuID\" \"main\" \"page\" .) }}\n{{ partial \"menu.html\" (dict \"menuID\" \"footer\" \"page\" .) }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Data Object Methods in Term Templates\nDESCRIPTION: Examples of accessing taxonomy data methods within term templates, showing how to retrieve singular, plural, and term names.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/term.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Data.Singular }} → tag\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Data.Plural }} → tags\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Data.Term }} → fiction\n```\n\n----------------------------------------\n\nTITLE: Grouping Pages by Expiration Date with Year and Month Format in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to group pages by their expiration date using the 'January 2006' date format. It creates a hierarchical structure with date groups and lists page titles with links within each group.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByExpiryDate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByExpiryDate \"January 2006\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using Localization Tokens with time.Format in Hugo\nDESCRIPTION: Demonstrates how to use predefined localization tokens with the time.Format function to format dates according to the current language and region settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/time/Format.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Date | time.Format \":date_medium\" }} → Jan 27, 2023\n```\n\n----------------------------------------\n\nTITLE: Using resources.Match with Image Files in Hugo Templates\nDESCRIPTION: Demonstrates how to use resources.Match to iterate over matched image resources and create img tags with their properties. The example shows matching all JPG files in an images directory and accessing their RelPermalink, Width, and Height attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/Match.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range resources.Match \"images/*.jpg\" }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Basic Image Cropping in Hugo Templates\nDESCRIPTION: A basic example of cropping an image to 200x200 pixels without resizing. Gets an image resource and applies the Crop method before rendering an img tag with the appropriate dimensions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Crop.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Crop \"200x200\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Image Cropping in Hugo\nDESCRIPTION: Shows how to crop an image to match given dimensions without resizing in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_11\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image := $image.Crop \"600x400\" }}\n```\n\n----------------------------------------\n\nTITLE: Default Hugo Module Configuration in TOML\nDESCRIPTION: The default configuration for Hugo modules specifying proxy settings, vendor behavior, and workspace configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/module.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[module]\nnoProxy = 'none'\nnoVendor = ''\nprivate = '*.*'\nproxy = 'direct'\nvendorClosest = false\nworkspace = 'off'\n```\n\n----------------------------------------\n\nTITLE: Creating Inline JavaScript in Hugo Templates\nDESCRIPTION: Demonstrates how to include JavaScript directly in a page by using the Content method with a JS resource and the safeJS function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Content.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"js/script.js\" }}\n  <script>{{ .Content | safeJS }}</script>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Division by Zero Error Example in Hugo Templates\nDESCRIPTION: This snippet demonstrates a division operation that throws an error when attempting to divide by zero, causing the build to fail.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/try.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $x := 1 }}\n{{ $y := 0 }}\n{{ $result := div $x $y }}\n{{ printf \"%v divided by %v equals %v\" $x $y .Value }}\n```\n\n----------------------------------------\n\nTITLE: Listing Series Content Template\nDESCRIPTION: Template for listing pages within a specific series taxonomy term.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Taxonomies.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Taxonomies.series.golang }}\n    <li><a href=\"{{ .Page.RelPermalink }}\">{{ .Page.Title }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Accessing Remote CSV Resource with transform.Unmarshal in Hugo\nDESCRIPTION: Demonstrates an alternative approach to access a remote CSV resource using resources.GetRemote and transform.Unmarshal functions in Hugo, with improved error handling and cache control.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetCSV.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := dict }}\n{{ $url := \"https://example.org/pets.csv\" }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ errorf \"%s\" . }}\n  {{ else with .Value }}\n    {{ $opts := dict \"delimiter\" \",\" }}\n    {{ $data = . | transform.Unmarshal $opts }}\n  {{ else }}\n    {{ errorf \"Unable to get remote resource %q\" $url }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Implementing Flexible Argument Handling in Hugo Shortcodes\nDESCRIPTION: This snippet demonstrates how to use the IsNamedParams method in a Hugo shortcode template to handle both named and positional arguments. It checks the argument style and uses the appropriate method to retrieve values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/IsNamedParams.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if .IsNamedParams }}\n  {{ printf \"%s %s.\" (.Get \"greeting\") (.Get \"firstName\") }}\n{{ else }}\n  {{ printf \"%s %s.\" (.Get 0) (.Get 1) }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Iterating Through Book Categories Template\nDESCRIPTION: Hugo template demonstrating how to iterate through book categories and display book information\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Data.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range $category, $books := .Site.Data.books }}\n  <p>{{ $category | title }}</p>\n  <ul>\n    {{ range $books }}\n      <li>{{ .title }} ({{ .isbn }})</li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Original Context in Range Block\nDESCRIPTION: Shows how to access the original template context using $ within a range block. This is useful when you need to access page properties while iterating over a collection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/range.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range seq 3 }}\n  {{ $.Title }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Basic Markdown to HTML with RenderString in Hugo\nDESCRIPTION: Demonstrates the basic usage of RenderString to convert Markdown-style emphasis to HTML. The method is called on the current context (.) and takes a string as input.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RenderString.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := \"An *emphasized* word\" }}\n{{ $s | .RenderString }} → An <em>emphasized</em> word\n```\n\n----------------------------------------\n\nTITLE: Implementing RenderShortcodes in a Hugo Shortcode Template\nDESCRIPTION: This snippet demonstrates how to use the RenderShortcodes method in a Hugo shortcode template to include content from other files while preserving the global context. It includes error handling for missing files or parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RenderShortcodes.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Get 0 }}\n  {{ with $.Page.GetPage . }}\n    {{- .RenderShortcodes }}\n  {{ else }}\n    {{ errorf \"The %q shortcode was unable to find %q. See %s\" $.Name . $.Position }}\n  {{ end }}\n{{ else }}\n  {{ errorf \"The %q shortcode requires a positional parameter indicating the logical path of the file to include. See %s\" .Name .Position }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Packages for PostCSS in Hugo\nDESCRIPTION: Installs the required Node.js packages for using PostCSS with Hugo, including postcss-cli, autoprefixer, and postcss-purgecss.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/PostProcess.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm i -D postcss postcss-cli autoprefixer @fullhuman/postcss-purgecss\n```\n\n----------------------------------------\n\nTITLE: Hugo Config Mounts Inherited Options\nDESCRIPTION: These options are inherited from parent commands and can be used with the 'hugo config mounts' command. They include various configuration and build settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_config_mounts.md#2025-04-08_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Converting Weekday to String in Hugo Templates\nDESCRIPTION: Shows how to convert a time.Time value to its weekday name as a string using the Weekday.String method. Takes an ISO formatted datetime string and outputs the full weekday name.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Weekday.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.Weekday.String }} → Friday\n```\n\n----------------------------------------\n\nTITLE: Getting Language Name in Hugo Templates\nDESCRIPTION: Accesses the configured language name from the site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Language.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Language.LanguageName }} → Deutsch\n```\n\n----------------------------------------\n\nTITLE: Using Ancestors Function in Hugo Template\nDESCRIPTION: This Go HTML template demonstrates how to use the Ancestors function to create a simple navigation structure. It iterates through the ancestors of the current page and creates links to each.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Ancestors.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Ancestors }}\n  <a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multilingual Parameters in Hugo\nDESCRIPTION: This snippet illustrates how to set up custom parameters for multilingual sites in Hugo, defining separate 'params' keys for different languages with their respective configurations.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/params.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\nbaseURL = 'https://example.org/'\ndefaultContentLanguage = 'en'\n\n[languages.de]\nlanguageCode = 'de-DE'\nlanguageDirection = 'ltr'\nlanguageName = 'Deutsch'\ntitle = 'Projekt Dokumentation'\nweight = 1\n\n[languages.de.params]\nsubtitle = 'Referenz, Tutorials und Erklärungen'\n\n[languages.de.params.contact]\nemail = 'info@de.example.org'\nphone = '+49 30 1234567'\n\n[languages.en]\nlanguageCode = 'en-US'\nlanguageDirection = 'ltr'\nlanguageName = 'English'\ntitle = 'Project Documentation'\nweight = 2\n\n[languages.en.params]\nsubtitle = 'Reference, Tutorials, and Explanations'\n\n[languages.en.params.contact]\nemail = 'info@example.org'\nphone = '+1 206-555-1212'\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Last Modified Date in Ascending Order\nDESCRIPTION: This snippet demonstrates how to sort pages by their last modification date in ascending order using the ByLastmod function in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByLastmod.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByLastmod }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-language Sites in Hugo\nDESCRIPTION: This snippet shows how to configure a multi-language Hugo site with German and English languages, including language-specific settings like language code, direction, name, title, and weight.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sites.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'de'\ndefaultContentLanguageInSubdir = false\n\n[languages.de]\nlanguageCode = 'de-DE'\nlanguageDirection = 'ltr'\nlanguageName = 'Deutsch'\ntitle = 'Projekt Dokumentation'\nweight = 1\n\n[languages.en]\nlanguageCode = 'en-US'\nlanguageDirection = 'ltr'\nlanguageName = 'English'\ntitle = 'Project Documentation'\nweight = 2\n```\n\n----------------------------------------\n\nTITLE: Image Filling in Hugo\nDESCRIPTION: Demonstrates how to crop and resize an image to match given dimensions in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_10\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image := $image.Fill \"600x400\" }}\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended with Scoop\nDESCRIPTION: Command to install the extended edition of Hugo using the Scoop package manager on Windows.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/windows.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nscoop install hugo-extended\n```\n\n----------------------------------------\n\nTITLE: Using fmt.Erroridf Function in Hugo Templates\nDESCRIPTION: Demonstrates how to use the fmt.Erroridf function to log a suppressible error with a unique ID. When executed, this will print an error message to the console and fail the build unless the error ID is suppressed in configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Erroridf.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ erroridf \"error-42\" \"You should consider fixing this.\" }}\n```\n\n----------------------------------------\n\nTITLE: Heading Render Hook with Anchor Links in Hugo\nDESCRIPTION: An enhanced heading render hook that adds clickable anchor links next to each heading, improving document navigation while maintaining the standard heading structure.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/headings.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<h{{ .Level }} id=\"{{ .Anchor }}\" {{- with .Attributes.class }} class=\"{{ . }}\" {{- end }}>\n  {{ .Text }}\n  <a href=\"#{{ .Anchor }}\">#</a>\n</h{{ .Level }}>\n```\n\n----------------------------------------\n\nTITLE: Assigning Taxonomy Terms in Hugo Front Matter\nDESCRIPTION: This code snippet demonstrates how to assign one or more terms to a page using the front matter in Hugo. It shows how to use the plural name of the taxonomy to create an array of terms for tags and categories.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/taxonomies.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Example'\ntags = ['Tag A','Tag B']\ncategories = ['Category A','Category B']\n```\n\n----------------------------------------\n\nTITLE: Default robots.txt Content in Hugo\nDESCRIPTION: Shows the default content generated by Hugo's embedded robots.txt template. This default configuration allows search engines to crawl all pages on the site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/robots.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nUser-agent: *\n```\n\n----------------------------------------\n\nTITLE: Basic Term Template Structure in Hugo\nDESCRIPTION: Basic template structure for rendering a list of pages associated with a taxonomy term. Defines the main block with term title, content, and a range loop over associated pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/term.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n  {{ range .Pages }}\n    <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Setting HTML Language Attributes with Hugo Language Properties\nDESCRIPTION: Example of using language properties in a base template to set the 'lang' and 'dir' attributes of the HTML element. This ensures proper language handling for accessibility and internationalization.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Language.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n<html\n  lang=\"{{ .Site.Language.LanguageCode }}\" \n  dir=\"{{ or .Site.Language.LanguageDirection `ltr` }}\n>\n```\n\n----------------------------------------\n\nTITLE: Remote Resource Implementation\nDESCRIPTION: Shows how to fetch remote JSON data using resources.GetRemote and transform.Unmarshal with error handling.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetJSON.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := dict }}\n{{ $url := \"https://example.org/books.json\" }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ errorf \"%s\" . }}\n  {{ else with .Value }}\n    {{ $data = . | transform.Unmarshal }}\n  {{ else }}\n    {{ errorf \"Unable to get remote resource %q\" $url }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Formatting Predefined Front Matter Dates in Hugo Templates\nDESCRIPTION: Shows how to format the four predefined front matter dates (Date, PublishDate, ExpiryDate, Lastmod) using the Format method in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Format.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $format := \"2 Jan 2006\" }}\n\n{{ .Date.Format $format }}\n{{ .PublishDate.Format $format }}\n{{ .ExpiryDate.Format $format }}\n{{ .Lastmod.Format $format }}\n```\n\n----------------------------------------\n\nTITLE: Passing Data to Deferred Templates with templates.Defer in Hugo\nDESCRIPTION: This snippet shows how to pass data to a deferred template using the data option. It demonstrates accessing site language, page data, and i18n functions both inside and outside the deferred template context.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/templates/Defer.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\nLanguage Outside: {{ site.Language.Lang }}\nPage Outside: {{ .RelPermalink }}\nI18n Outside: {{ i18n \"hello\" }}\n{{ $data := (dict \"page\" . )}}\n{{ with (templates.Defer (dict \"data\" $data )) }}\n     Language Inside: {{ site.Language.Lang }}\n     Page Inside: {{ .page.RelPermalink }}\n     I18n Inside: {{ i18n \"hello\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Sorting Menu Entries by Name in Hugo Templates\nDESCRIPTION: This code demonstrates how to use the ByName function to sort menu entries alphabetically by name in a Hugo template. It iterates over the sorted menu items and creates an unordered list of links.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/ByName.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main.ByName }}\n    <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Configuring Multilingual Site in Hugo\nDESCRIPTION: Example configuration for a multilingual Hugo site with English, German, and French languages. Defines the default language, content directories, language codes, display names, and weights for each language.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/AllTranslations.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndefaultContentLanguage = 'en'\n\n[languages.en]\ncontentDir = 'content/en'\nlanguageCode = 'en-US'\nlanguageName = 'English'\nweight = 1\n\n[languages.de]\ncontentDir = 'content/de'\nlanguageCode = 'de-DE'\nlanguageName = 'Deutsch'\nweight = 2\n\n[languages.fr]\ncontentDir = 'content/fr'\nlanguageCode = 'fr-FR'\nlanguageName = 'Français'\nweight = 3\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended on Void Linux\nDESCRIPTION: Command to install the extended edition of Hugo on Void Linux using the xbps package manager.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\nsudo xbps-install -S hugo\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo on DragonFly BSD\nDESCRIPTION: Command to install the extended edition of Hugo using DragonFly BSD's package manager.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/bsd.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nsudo pkg install gohugo\n```\n\n----------------------------------------\n\nTITLE: Using the IsHome Method in Hugo Templates\nDESCRIPTION: A Go HTML template example showing how to use the IsHome method on a Page object. This method returns true if the current page is the home page (has kind = home).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsHome.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .IsHome }}\n```\n\n----------------------------------------\n\nTITLE: Comparing Numbers with Lt Function in Hugo Templates\nDESCRIPTION: Examples of using the Lt function to compare numeric values in Hugo templates. Shows both binary and ternary comparisons returning boolean results.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Lt.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ lt 1 1 }} → false\n{{ lt 1 2 }} → true\n{{ lt 2 1 }} → false\n\n{{ lt 1 1 1 }} → false\n{{ lt 1 1 2 }} → false\n{{ lt 1 2 1 }} → false\n{{ lt 1 2 2 }} → true\n\n{{ lt 2 1 1 }} → false\n{{ lt 2 1 2 }} → false\n{{ lt 2 2 1 }} → false\n```\n\n----------------------------------------\n\nTITLE: Advanced Menu Entry Configuration with Properties in Front Matter\nDESCRIPTION: Demonstrates a more complex menu entry with various properties including parent relationship, weight for ordering, HTML prefix, and custom parameters. This example shows how to create a nested menu structure and add styling.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/menus.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Software'\n[menus.main]\nparent = 'Products'\nweight = 20\npre = '<i class=\"fa-solid fa-code\"></i>'\n[menus.main.params]\nclass = 'center'\n```\n\n----------------------------------------\n\nTITLE: Basic First N Elements Selection in Hugo Templates\nDESCRIPTION: Demonstrates how to select and render the first 5 pages from a collection using the collections.First function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/First.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range first 5 .Pages }}\n  {{ .Render \"summary\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using Len Function with Pages Collection in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the Len function to count the number of pages in a collection. The function returns an integer representing the total count of pages in the collection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/Len.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Pages.Len }} → 42\n```\n\n----------------------------------------\n\nTITLE: Rendering Hugo Menu Using URL Method\nDESCRIPTION: Demonstrates a Hugo template that renders a menu using the URL method for each menu entry. This approach is recommended for most scenarios.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/PageRef.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Hugo Config Inherited Options in Shell\nDESCRIPTION: Lists the options inherited from parent commands. These options provide additional configuration capabilities such as setting the clock, specifying config files, and controlling the build environment.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_config.md#2025-04-08_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Accessing Resource Media SubType in Hugo\nDESCRIPTION: Demonstrates how to get the subtype portion of a resource's media type using MediaType.SubType. Returns the specific format identifier (e.g., 'jpeg').\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/MediaType.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ .MediaType.SubType }} → jpeg\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Deployment Target\nDESCRIPTION: TOML configuration block that defines a deployment target for Hugo. Specifies the required name and URL parameters for cloud storage deployment.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/deploy-with-hugo-deploy.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[deployment]\n  [[deployment.targets]]\n    name = 'production'\n    url = 's3://my_bucket?region=us-west-1'\n```\n\n----------------------------------------\n\nTITLE: Custom Page Sorting within GroupByLastmod Groups\nDESCRIPTION: Shows how to sort pages within each last modification date group by title using the ByTitle method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByLastmod.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByLastmod \"January 2006\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages.ByTitle }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Namespaced Module Parameters in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to access namespaced custom parameters for modules and themes in Hugo templates, using the example of retrieving color settings for a specific module.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/params.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $cfg := .Site.Params.module.mymodule }}\n\n{{ $cfg.colors.background }} → #efefef\n{{ $cfg.colors.font }} → #222222\n```\n\n----------------------------------------\n\nTITLE: Linking to the Top-Level Section in Hugo Templates\nDESCRIPTION: This code snippet demonstrates how to create a link to the top-level section of the current page using the FirstSection method in Hugo templates. It retrieves both the permalink and link title of the section.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/FirstSection.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<a href=\"{{ .FirstSection.RelPermalink }}\">{{ .FirstSection.LinkTitle }}</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Site Languages\nDESCRIPTION: This snippet shows how to configure multiple languages in a Hugo site, setting the default language, content directories, and language properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/TranslationKey.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'en'\n\n[languages.en]\ncontentDir = 'content/en'\nlanguageCode = 'en-US'\nlanguageName = 'English'\nweight = 1\n\n[languages.de]\ncontentDir = 'content/de'\nlanguageCode = 'de-DE'\nlanguageName = 'Deutsch'\nweight = 2\n```\n\n----------------------------------------\n\nTITLE: Filling Missing Translations from All Available Languages in Hugo\nDESCRIPTION: This snippet iterates through all available translations of the home page and merges their regular pages with the current site's pages. This creates a comprehensive collection that includes content from all language versions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/Merge.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n{{ $pages := .Site.RegularPages }}\n{{ range .Site.Home.Translations }}\n{{ $pages = $pages | lang.Merge .Site.RegularPages }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Site Parameters in Hugo\nDESCRIPTION: Example of setting site-level parameters in Hugo configuration file to enable table of contents display globally.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Param.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[params]\ndisplay_toc = true\n```\n\n----------------------------------------\n\nTITLE: Processing Positional Arguments in Hugo Shortcodes\nDESCRIPTION: Demonstrates how to access positional arguments in a shortcode template using the Get method with numeric indices.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $path := .Get 0 }}\n{{ $width := .Get 1 }}\n{{ $alt := .Get 2 }}\n```\n\n----------------------------------------\n\nTITLE: Using Jsonify Function with Different Formatting Options in Hugo Templates\nDESCRIPTION: Demonstrates three ways to use the jsonify function in Hugo templates: basic usage, with indentation, and with both prefix and indentation. The function converts a dictionary containing title and content fields into JSON format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/encoding/Jsonify.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ dict \"title\" .Title \"content\" .Plain | jsonify }}\n{{ dict \"title\" .Title \"content\" .Plain | jsonify (dict \"indent\" \"  \") }}\n{{ dict \"title\" .Title \"content\" .Plain | jsonify (dict \"prefix\" \" \" \"indent\" \"  \") }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Sitemap Parameters in Front Matter (TOML)\nDESCRIPTION: Example of overriding default sitemap values in a page's front matter, including changefreq, priority, and disable options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/sitemap.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'News'\n[sitemap]\n  changefreq = 'weekly'\n  disable = true\n  priority = 0.8\n```\n\n----------------------------------------\n\nTITLE: Including Schema Microdata Template in Hugo\nDESCRIPTION: Demonstrates how to include Hugo's embedded Schema microdata template in a page. This template adds structured data to improve search engine understanding of the content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/embedded.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ template \"_internal/schema.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Page Bundle Type in Hugo Templates\nDESCRIPTION: Demonstrates how to access the bundle type of a page within a Hugo template using the .BundleType method, which returns branch, leaf, or empty string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/BundleType.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .BundleType }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Local CSV Data with data.GetCSV in Hugo\nDESCRIPTION: Demonstrates how to use the data.GetCSV function to access local CSV files in a Hugo project. The file path is relative to the working directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetCSV.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := getCSV \",\" \"other-files/pets.csv\" }}\n{{ $data := getCSV \",\" \"other-files/\" \"pets.csv\" }}\n```\n\n----------------------------------------\n\nTITLE: Using RenderString to Process Markdown in Inner Content\nDESCRIPTION: Modified shortcode template that uses the Page.RenderString method to process Markdown syntax within the Inner content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Inner.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n<div class=\"card\">\n  {{ with .Get \"title\" }}\n    <div class=\"card-title\">{{ . }}</div>\n  {{ end }}\n  <div class=\"card-content\">\n    {{ .Inner | strings.TrimSpace | .Page.RenderString }}\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering Menu Entries with Page References in Hugo\nDESCRIPTION: This example demonstrates how to access and render page-specific information (like a 'version' parameter) alongside menu entries. It includes defensive coding to handle entries without associated pages or missing parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/menu.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{- range site.Menus.main }}\n  <a href=\"{{ .URL }}\">\n    {{ .Name }}\n    {{- with .Page }}\n      {{- with .Params.version -}}\n        ({{ . }})\n      {{- end }}\n    {{- end }}\n  </a>\n{{- end }}\n```\n\n----------------------------------------\n\nTITLE: Implementing Single Page Template in Hugo\nDESCRIPTION: Shows how to override both title and main blocks in a single page template, customizing the page title format and content layout.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/base.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"title\" }}\n  <!-- This will override the default value set in baseof.html; i.e., \"{{ .Site.Title }}\" in the original example-->\n  {{ .Title }} &ndash; {{ .Site.Title }}\n{{ end }}\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Building Hugo Site\nDESCRIPTION: Shows the command to build a Hugo site, which publishes files to the 'public' directory by default.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/usage.md#2025-04-08_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nhugo\n```\n\n----------------------------------------\n\nTITLE: Deleting Map Keys with Site.Store\nDESCRIPTION: Shows how to remove a specific key from a map using the DeleteInMap method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Store.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ site.Store.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ site.Store.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n{{ site.Store.DeleteInMap \"greetings\" \"english\" }}\n{{ site.Store.Get \"greetings\" }} → map[french:Bonjour]\n```\n\n----------------------------------------\n\nTITLE: Applying Multiple Image Filters in Hugo\nDESCRIPTION: Shows how to apply multiple filters (grayscale and gaussian blur) to an image resource, executing from left to right.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Filter.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filters := slice\n  images.Grayscale\n  (images.GaussianBlur 8)\n}}\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Filter $filters }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Theme Module Imports in Hugo\nDESCRIPTION: Configuration example for importing a theme as a Hugo module in the site configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-modules/use-modules.md#2025-04-08_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n[module]\n  [[module.imports]]\n    path = \"github.com/spf13/hyde\"\n```\n\n----------------------------------------\n\nTITLE: Conditional Section Hide Configuration\nDESCRIPTION: Configuration for hiding internal documentation sections in production builds using environment targeting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/build-options.md#2025-04-08_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Internal'\n[[cascade]]\n[cascade.build]\nrender = 'never'\nlist = 'never'\n[cascade.target]\nenvironment = 'production'\n```\n\n----------------------------------------\n\nTITLE: Configuring Artificial Languages in Hugo\nDESCRIPTION: Demonstrates how to configure artificial languages with private use subtags in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/languages.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'en'\n[languages.en]\nweight = 1\n[languages.hugolang]\nweight = 2\n```\n\n----------------------------------------\n\nTITLE: Remote JSON Data Access\nDESCRIPTION: Shows how to fetch remote JSON data using getJSON function with different URL formats.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetJSON.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := getJSON \"https://example.org/books.json\" }}\n{{ $data := getJSON \"https://example.org/\" \"books.json\" }}\n```\n\n----------------------------------------\n\nTITLE: PostCSS with Custom Options in Hugo\nDESCRIPTION: Example of using the postCSS function with custom options including configuration directory and source map settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/PostCSS.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict \"config\" \"config-directory\" \"noMap\" true }}\n{{ with resources.Get \"css/main.css\" | postCSS $opts }}\n  <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Go Version in Hugo Template\nDESCRIPTION: This snippet demonstrates how to use the hugo.GoVersion function in a Hugo template to display the Go version used to compile the Hugo binary. The function returns a string representation of the Go version.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/GoVersion.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.GoVersion }} → go1.21.1\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended on Fedora and Derivatives\nDESCRIPTION: Command to install the extended edition of Hugo on Fedora-based distributions (CentOS, Red Hat Enterprise Linux, etc.) using dnf package manager.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsudo dnf install hugo\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of resources.GetRemote with Error Handling in Hugo\nDESCRIPTION: Example of using resources.GetRemote to fetch a remote image with error handling using the try statement. This shows how to handle errors, process successful responses, and handle nil resources.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/GetRemote.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://example.org/images/a.jpg\" }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ errorf \"%s\" . }}\n  {{ else with .Value }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ else }}\n    {{ errorf \"Unable to get remote resource %q\" $url }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Menu Entries in Hugo Configuration\nDESCRIPTION: This snippet shows how to define menu entries in Hugo's configuration file. It demonstrates entries with and without an 'identifier' property, which affects the behavior of the KeyName method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/KeyName.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nidentifier = 'about'\nname = 'About'\npageRef = '/about'\nweight = 10\n\n[[menus.main]]\nname = 'Contact'\npageRef = '/contact'\nweight = 20\n```\n\n----------------------------------------\n\nTITLE: Using 'else with' for Multiple Conditions in Hugo Templates\nDESCRIPTION: Demonstrates the use of 'else with' to check multiple conditions sequentially in a 'with' block.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/with.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $v1 := 0 }}\n{{ $v2 := 42 }}\n{{ with $v1 }}\n  {{ . }}\n{{ else with $v2 }}\n  {{ . }} → 42\n{{ else }}\n  {{ print \"v1 and v2 are falsy\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Example Hugo Page Bundle Structure\nDESCRIPTION: Demonstrates the directory structure of a Hugo page bundle showing different content types and their resource classifications.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/content-types.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n└── example/\n    ├── index.md  <-- content\n    ├── a.adoc    <-- resource (resource type: page)\n    ├── b.html    <-- resource (resource type: page)\n    ├── c.md      <-- resource (resource type: page)\n    ├── d.org     <-- resource (resource type: page)\n    ├── e.pdc     <-- resource (resource type: page)\n    ├── f.rst     <-- resource (resource type: page)\n    ├── g.jpg     <-- resource (resource type: image)\n    └── h.png     <-- resource (resource type: image)\n```\n\n----------------------------------------\n\nTITLE: Adding Pagination Navigation with Default Format in Hugo\nDESCRIPTION: Using Hugo's embedded pagination template with the default format to create navigation links between pagers.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/pagination.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ template \"_internal/pagination.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Directory Structure for Hugo Resource Example\nDESCRIPTION: Shows the content directory structure used in the example, with posts, images, and index files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Params.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── posts/\n│   ├── cats/\n│   │   ├── images/\n│   │   │   └── a.jpg\n│   │   └── index.md\n│   └── _index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination Navigation with TotalPages in Hugo Templates\nDESCRIPTION: This code demonstrates how to implement pagination in Hugo templates, including displaying the current page number, total pages, and navigation links (First, Previous, Next, Last). It uses the TotalPages method to display the total number of pages in the paginated collection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/TotalPages.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  <p>Pager {{ .PageNumber }} of {{ .TotalPages }}</p>\n  <ul>\n    {{ with .First }}\n      <li><a href=\"{{ .URL }}\">First</a></li>\n    {{ end }}\n    {{ with .Prev }}\n      <li><a href=\"{{ .URL }}\">Previous</a></li>\n    {{ end }}\n    {{ with .Next }}\n      <li><a href=\"{{ .URL }}\">Next</a></li>\n    {{ end }}\n    {{ with .Last }}\n      <li><a href=\"{{ .URL }}\">Last</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Output Formats for Netlify\nDESCRIPTION: Configuration for creating custom output formats for Netlify _redirects and _headers files using the custom media type.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/media-types.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[outputFormats.redir]\nbaseName    = \"_redirects\"\nisPlainText = true\nmediatype   = \"text/netlify\"\n[outputFormats.headers]\nbaseName       = \"_headers\"\nisPlainText    = true\nmediatype      = \"text/netlify\"\nnotAlternative = true\n```\n\n----------------------------------------\n\nTITLE: Basic Image Fit Operation in Hugo Templates\nDESCRIPTION: Demonstrates how to downscale an image to fit within 200x200 dimensions while maintaining the original aspect ratio. The example gets an image resource and applies the Fit method, then displays it with appropriate width and height attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Fit.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Fit \"200x200\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Language Weight in Hugo Templates\nDESCRIPTION: Gets the language weight from the site configuration, which determines the language's order in the slice of languages returned by the Languages method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Language.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Language.Weight }} → 2\n```\n\n----------------------------------------\n\nTITLE: Generating Table of Contents using Hugo Template\nDESCRIPTION: Basic usage of the TableOfContents method in a Hugo template to generate a navigation structure from page headings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/TableOfContents.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .TableOfContents }}\n```\n\n----------------------------------------\n\nTITLE: Defining Content Structure in Hugo\nDESCRIPTION: Example of a basic content directory structure in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/lookup-order.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── about.md\n└── contact.md\n```\n\n----------------------------------------\n\nTITLE: Shortcode Template for Markdown-Processing Notation\nDESCRIPTION: Modified shortcode template required for use with the Markdown-processing shortcode notation, featuring proper indentation and blank lines for HTML blocks within Markdown.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Inner.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n<div class=\"card\">\n  {{ with .Get \"title\" }}\n  <div class=\"card-title\">{{ . }}</div>\n  {{ end }}\n  <div class=\"card-content\">\n\n  {{ .Inner | strings.TrimSpace }}\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using IsSection Method in Hugo Templates\nDESCRIPTION: Shows how to use the IsSection method in a Hugo template to check if the current page is a section page. Returns true for pages with kind=section.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsSection.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .IsSection }}\n```\n\n----------------------------------------\n\nTITLE: Portable Section Comparison Example\nDESCRIPTION: Demonstrates how to create theme-friendly templates by using the Site.MainSections method instead of hardcoding section names.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_18\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where .Site.RegularPages \"Section\" \"in\" .Site.MainSections }}\n```\n\n----------------------------------------\n\nTITLE: Creating a Shortcode Template with Inner Content Access\nDESCRIPTION: A Go HTML template that defines a card shortcode which accesses the Inner content between shortcode tags and optional title parameter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Inner.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<div class=\"card\">\n  {{ with .Get \"title\" }}\n    <div class=\"card-title\">{{ . }}</div>\n  {{ end }}\n  <div class=\"card-content\">\n    {{ .Inner | strings.TrimSpace }}\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Complex Translation with Context\nDESCRIPTION: Shows how to use translations with context maps for dynamic content\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/Translate.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ T \"age\" (dict \"name\" \"Will\" \"count\" 1) }} → Will is 1 year old.\n{{ T \"age\" (dict \"name\" \"John\" \"count\" 3) }} → John is 3 years old.\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output for Taxonomy Page Link\nDESCRIPTION: Shows the HTML output generated from the Hugo template example. The rendered result is a link to the tags taxonomy page with 'Tags' as the link text.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Page.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/tags/\">Tags</a>\n```\n\n----------------------------------------\n\nTITLE: Comparing Time Values with Equal Method in Hugo Go Templates\nDESCRIPTION: This snippet demonstrates how to use the Equal method to compare two time values in different time zones. The example shows that time values representing the same moment but in different time zones are considered equal.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Equal.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t1 := time.AsTime \"2023-01-01T17:00:00-08:00\" }}\n{{ $t2 := time.AsTime \"2023-01-01T20:00:00-05:00\" }}\n\n{{ $t1.Equal $t2 }} → true\n```\n\n----------------------------------------\n\nTITLE: Implementing Canvas Animation for Ripple Effects\nDESCRIPTION: Adding ripple effects to section headings by using JavaScript to prepend a canvas element and animating it with RequestAnimationFrame.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/showcase/hartwell-insurance/index.md#2025-04-08_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Prepend canvas element\nelement.prepend(document.createElement('canvas'));\n// Animate with RequestAnimationFrame\n```\n\n----------------------------------------\n\nTITLE: Demonstrating IsDescendant Function in Hugo Templates\nDESCRIPTION: This snippet shows how to use the IsDescendant function with different page hierarchies. It uses the 'with' statement for defensive coding and demonstrates the function's behavior with various page paths.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsDescendant.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.GetPage \"/\" }}\n  {{ $.IsDescendant . }} → true\n{{ end }}\n\n{{ with .Site.GetPage \"/auctions\" }}\n  {{ $.IsDescendant . }} → false\n{{ end }}\n\n{{ with .Site.GetPage \"/auctions/2023-11\" }}\n  {{ $.IsDescendant . }} → false\n{{ end }}\n\n{{ with .Site.GetPage \"/auctions/2023-11/auction-2\" }}\n  {{ $.IsDescendant . }} → false\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Reversing a Page Collection in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to reverse a page collection that has been sorted by date. It iterates through the reversed collection and displays each page's title as a link.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/Reverse.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByDate.Reverse }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Content Structure in Hugo\nDESCRIPTION: Shows the directory structure of a Hugo content folder, including works, paintings, and sculptures sections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/GetPage.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── works/\n│   ├── paintings/\n│   │   ├── _index.md\n│   │   ├── starry-night.md\n│   │   └── the-mona-lisa.md\n│   ├── sculptures/\n│   │   ├── _index.md\n│   │   ├── david.md\n│   │   └── the-thinker.md\n│   └── _index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Using strings.FirstUpper to Capitalize First Character in Go HTML Template\nDESCRIPTION: Demonstrates how to use the strings.FirstUpper function to capitalize the first letter of a string. The function takes a single STRING parameter and returns the same string with the first character converted to uppercase.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/FirstUpper.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.FirstUpper \"foo\" }} → Foo\n```\n\n----------------------------------------\n\nTITLE: Configuring Taxonomies in Hugo Site Configuration\nDESCRIPTION: Shows how to set up taxonomies in Hugo's site configuration file, defining 'tag' and 'genre' taxonomies.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/front-matter.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[taxonomies]\ntag = 'tags'\ngenre = 'genres'\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Displaying Image Resource with Hugo\nDESCRIPTION: Demonstrates how to fetch an image resource using resources.Get and display it with its dimensions. The code checks if the resource exists using 'with' and outputs an img tag with the resource's relative permalink, width, and height.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/Get.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: HTML Output of Menu Using URL Method\nDESCRIPTION: Shows the resulting HTML output when using the URL method to render the menu. Note that the 'Services' link has an empty href attribute due to the missing page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/PageRef.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/products/\">Products</a></li>\n  <li><a href=\"\">Services</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Using TranslationKey in Hugo Templates\nDESCRIPTION: These snippets demonstrate how to use the TranslationKey function in Hugo templates, showing the output for pages with and without custom translation keys.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/TranslationKey.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .TranslationKey }} → page/foo\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .TranslationKey }} → page/books/book-2\n```\n\n----------------------------------------\n\nTITLE: Setting Title Case Style in Hugo Configuration (TOML)\nDESCRIPTION: Demonstrates how to set the capitalization style for titles in Hugo's configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Title.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ntitleCaseStyle = \"firstupper\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Layout in Hugo Templates (Go HTML Template)\nDESCRIPTION: This snippet demonstrates how to access the layout value within a Hugo template. The Layout method returns the layout specified in the front matter, or an empty string if none was defined.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Layout.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Layout }}\n```\n\n----------------------------------------\n\nTITLE: Counting Runes in String using strings.RuneCount in Hugo\nDESCRIPTION: Demonstrates using strings.RuneCount to count all runes in a string including spaces. The example shows counting runes in a mixed ASCII and Unicode string 'Hello, 世界', which returns 9 runes total.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/RuneCount.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"Hello, 世界\" | strings.RuneCount }} → 9\n```\n\n----------------------------------------\n\nTITLE: Multiple Conditions with Else-If in Hugo Go Templates\nDESCRIPTION: Illustrates how to check multiple conditions using 'else if' clauses for more complex conditional logic, with a final 'else' clause as a catch-all.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/if.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := 12 }}\n{{ if eq $var 6 }}\n  {{ print \"var is 6\" }}\n{{ else if eq $var 7 }}\n  {{ print \"var is 7\" }}\n{{ else if eq $var 42 }}\n  {{ print \"var is 42\" }}\n{{ else }}\n  {{ print \"var is something else\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using a Single-Term Taxonomy in Front Matter\nDESCRIPTION: Example showing how to assign an author in front matter using the single-term taxonomy configuration. Note that even with a single term, the value is still provided as an array.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/taxonomies.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Example\nauthor:\n  - Robert Smith\n```\n\n----------------------------------------\n\nTITLE: Using a Custom Pagination Template in Hugo\nDESCRIPTION: How to call a custom pagination template after overriding Hugo's embedded template with your own version in the layouts/partials directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/pagination.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partial \"pagination.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Creating Pagination Navigation with PageNumber in Hugo\nDESCRIPTION: This snippet demonstrates how to implement pagination in Hugo templates. It first creates a paginator from regular pages of type 'posts', renders the current page's content, and then builds numbered navigation links using the PageNumber method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/PageNumber.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  <ul>\n    {{ range .Pagers }}\n      <li><a href=\"{{ .URL }}\">{{ .PageNumber }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Filtering Page Collections with collections.Complement in Hugo\nDESCRIPTION: This example demonstrates how to use collections.Complement to filter out specific content types from a site's regular pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Complement.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $blog := where site.RegularPages \"Type\" \"blog\" }}\n{{ $faqs := where site.RegularPages \"Type\" \"faqs\" }}\n{{ range site.RegularPages | complement $blog $faqs }}\n  <a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Taxonomy Data Properties in Hugo\nDESCRIPTION: Examples of how to access taxonomy data properties within a taxonomy template, including the singular and plural names of the taxonomy and the taxonomy object itself.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/taxonomy.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Data.Singular }} → tag\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Data.Plural }} → tags\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $taxonomyObject := .Data.Terms }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Menu Entries with Custom Parameters in Hugo\nDESCRIPTION: This snippet shows how to access and use custom parameters defined in menu entries, such as adding a CSS class to menu items. It includes defensive coding to handle entries without the custom parameter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/menu.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{- range site.Menus.main }}\n  <a {{ with .Params.class -}} class=\"{{ . }}\" {{ end -}} href=\"{{ .URL }}\">\n    {{ .Name }}\n  </a>\n{{- end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Site Parameters Using Global Site Function in Hugo Templates\nDESCRIPTION: Demonstrates how to access site parameters using the global 'site' function, which works regardless of the current context.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/global/site.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ site.Params.foo }}\n```\n\n----------------------------------------\n\nTITLE: Base Template with Conditional KaTeX CSS\nDESCRIPTION: HTML template that conditionally includes KaTeX CSS based on the presence of mathematical content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/passthrough.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n<head>\n  {{ $noop := .WordCount }}\n  {{ if .Page.Store.Get \"hasMath\" }}\n    <link href=\"https://cdn.jsdelivr.net/npm/katex@0.16.21/dist/katex.min.css\" rel=\"stylesheet\">\n  {{ end }}\n</head>\n```\n\n----------------------------------------\n\nTITLE: Return Values from Cached Partials in Hugo\nDESCRIPTION: Demonstrates how to return values from a cached partial template using a single return statement at the end.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/partials/IncludeCached.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $result := \"\" }}\n{{ if math.ModBool . 2 }}\n  {{ $result = \"even\" }}\n{{ else }}\n  {{ $result = \"odd\" }}\n{{ end }}\n{{ return $result }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Remote Image with Error Handling in Hugo\nDESCRIPTION: Demonstrates how to render a remote image in a Hugo template, with error handling for resource access issues.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://gohugo.io/img/hugo-logo.png\" }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ errorf \"%s\" . }}\n  {{ else with .Value }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\">\n  {{ else }}\n    {{ errorf \"Unable to get remote resource %q\" $url }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Nil Comparison Examples\nDESCRIPTION: Demonstrates how to filter pages based on whether a parameter exists (not nil) or doesn't exist (is nil) in the front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_14\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where .Site.RegularPages \"Params.color\" \"ne\" nil }}\n\n```\n\n----------------------------------------\n\nTITLE: Defining Shortcode Content in Markdown\nDESCRIPTION: Example showing how to place content between shortcode tags in a Markdown file, using the non-processing shortcode delimiter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Inner.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{{</* card title=\"Product Design\" */>}}\nWe design the **best** widgets in the world.\n{{</* /card */>}}\n```\n\n----------------------------------------\n\nTITLE: Using else with with Statement in Hugo Templates\nDESCRIPTION: Shows how to use else within a with statement block for handling undefined or empty values. The with statement creates a new scope with the specified value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/else.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := \"foo\" }}\n{{ with $var }}\n  {{ . }} → foo\n{{ else }}\n  {{ print \"var is falsy\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Reading File Content with os.ReadFile in Hugo Templates\nDESCRIPTION: Example of using the readFile function (alias of os.ReadFile) in a Hugo template to read the contents of README.md from the project root.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/ReadFile.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ readFile \"README.md\" }}\n```\n\n----------------------------------------\n\nTITLE: Updating All Hugo Modules Recursively\nDESCRIPTION: Command to recursively update all modules and their dependencies in a Hugo project.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-modules/use-modules.md#2025-04-08_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nhugo mod get -u ./...\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output of param Shortcode\nDESCRIPTION: Shows how Hugo renders the param shortcode example into HTML. The shortcode is replaced with the actual parameter value from the front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/param.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p>We found a red shirt.</p>\n```\n\n----------------------------------------\n\nTITLE: Format for Git Commit Messages in Hugo Documentation\nDESCRIPTION: Provides an example of the preferred format for Git commit messages when contributing to Hugo documentation, including summary, detailed description, and issue references.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_17\n\nLANGUAGE: text\nCODE:\n```\ngit commit -m \"content: Restructure the taxonomy page\n\nThis restructures the taxonomy page by splitting topics into logical\nsections, each with one or more examples.\n\nFixes #9999\nCloses #9998\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Date Formatting with Parent Context\nDESCRIPTION: Hugo template for a date formatting shortcode that inherits dateFormat parameter from parent shortcode, with fallback to default format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Parent.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{- $dateFormat := \"January 2, 2006 15:04:05\" }}\n\n{{- with .Params }}\n  {{- with .dateFormat }}\n    {{- $dateFormat = . }}\n  {{- end }}\n{{- else }}\n  {{- with .Parent.Params }}\n    {{- with .dateFormat }}\n      {{- $dateFormat = . }}\n    {{- end }}\n  {{- end }}\n{{- end }}\n\n{{- now | time.Format $dateFormat -}}\n```\n\n----------------------------------------\n\nTITLE: Grouping Pages by Section in Descending Order\nDESCRIPTION: Template code that groups pages by section field and displays them in descending order. Similar to the ascending order example but adds the 'desc' parameter to reverse the sort order.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupBy.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupBy \"Section\" \"desc\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Converting TOML String to JSON using transform.Remarshal in Hugo\nDESCRIPTION: This snippet demonstrates how to convert a TOML configuration string to JSON format using the transform.Remarshal function. It takes a multiline TOML string with baseURL, languageCode, and title properties and converts it to formatted JSON.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Remarshal.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := `\n  baseURL = 'https://example.org/'\n  languageCode = 'en-US'\n  title = 'ABC Widgets'\n`}}\n<pre>{{ transform.Remarshal \"json\" $s }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Formatting Page Date in Hugo Template\nDESCRIPTION: Example of formatting a page's date in a Hugo template using the time.Format function. Shows how to display the date in medium format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Date.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Date | time.Format \":date_medium\" }}\n```\n\n----------------------------------------\n\nTITLE: Defining Fenced Code Block Structure in Hugo\nDESCRIPTION: Shows the basic structure for creating fenced code blocks in Hugo markdown files, including language specification and options configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/syntax-highlighting.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n```LANG [OPTIONS]\nCODE\n```\n```\n\n----------------------------------------\n\nTITLE: Markdown Example with Passthrough Elements\nDESCRIPTION: Example showing both block and inline passthrough elements usage in Markdown content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/passthrough.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nThis is a\n\n\\[block\\]\n\npassthrough element with opening and closing block delimiters.\n\nThis is an \\(inline\\) passthrough element with opening and closing inline delimiters.\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Front Matter in YAML\nDESCRIPTION: YAML front matter for a Hugo documentation page that defines metadata for a 'Getting started' page. The front matter includes title, description, empty categories and keywords arrays, a weight of 10 for ordering, and a URL alias for backwards compatibility.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Getting started\ndescription: How to get started with Hugo.\ncategories: []\nkeywords: []\nweight: 10\naliases: [/overview/introduction/]\n---\n```\n\n----------------------------------------\n\nTITLE: Iterating Over a Map in Hugo Templates\nDESCRIPTION: Shows how to iterate over a map (dictionary) to access both keys and values. Note that Hugo automatically sorts by key when ranging over a map, unlike arrays or slices which maintain their order.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/range.md#2025-04-08_snippet_9\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $m :=  dict \"name\" \"John\" \"age\" 30 }}\n{{ range $k, $v := $m }}\n  <p>key = {{ $k }} value = {{ $v }}</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Generating Complex QR Code with vCard Format in Hugo\nDESCRIPTION: This example demonstrates how to create a QR code containing contact information in vCard format using the QR shortcode in Hugo, with additional attributes like error correction level and scale.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/qr.md#2025-04-08_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n{{</* qr level=\"low\" scale=2 alt=\"QR code of vCard for John Smith\" */>}}\nBEGIN:VCARD\nVERSION:2.1\nN;CHARSET=UTF-8:Smith;John;R.;Dr.;PhD\nFN;CHARSET=UTF-8:Dr. John R. Smith, PhD.\nORG;CHARSET=UTF-8:ABC Widgets\nTITLE;CHARSET=UTF-8:Vice President Engineering\nTEL;TYPE=WORK:+12065550101\nEMAIL;TYPE=WORK:jsmith@example.org\nEND:VCARD\n{{</* /qr */>}}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Menu Entry Weight in Hugo Templates\nDESCRIPTION: This snippet shows how to access the weight of a menu entry in Hugo. The .Weight method returns the numerical weight assigned to the menu entry, which is used for ordering menu items.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/_index.md#2025-04-08_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n{{ .Weight }}\n```\n\n----------------------------------------\n\nTITLE: Converting Binary Input to Float in Hugo Templates\nDESCRIPTION: Shows how to use the float function to convert a binary (base 2) number to its float64 representation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToFloat.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ float 0b11 }} → 3 (float64)\n```\n\n----------------------------------------\n\nTITLE: Adding Numeric Values in Hugo Store\nDESCRIPTION: Shows numeric addition using the Add method with existing values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/store-methods.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Store.Set \"total\" 3 }}\n{{ .Store.Add \"total\" 7 }}\n{{ .Store.Get \"total\" }} → 10\n```\n\n----------------------------------------\n\nTITLE: Using Break Statement in Hugo Templates with Range Loop\nDESCRIPTION: This snippet demonstrates how to use the 'break' statement to exit a range loop prematurely when a condition is met. In this example, iteration stops when the current item equals 'bar', preventing subsequent items from being processed.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/break.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"foo\" \"bar\" \"baz\" }}\n{{ range $s }}\n  {{ if eq . \"bar\" }}\n    {{ break }}\n  {{ end }}\n  <p>{{ . }}</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multilingual Site in Hugo\nDESCRIPTION: This snippet shows how to configure a multilingual Hugo site with English, German, and French languages. It sets the default content language, content directories, language codes, names, and weights for each language.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Translations.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndefaultContentLanguage = 'en'\n\n[languages.en]\ncontentDir = 'content/en'\nlanguageCode = 'en-US'\nlanguageName = 'English'\nweight = 1\n\n[languages.de]\ncontentDir = 'content/de'\nlanguageCode = 'de-DE'\nlanguageName = 'Deutsch'\nweight = 2\n\n[languages.fr]\ncontentDir = 'content/fr'\nlanguageCode = 'fr-FR'\nlanguageName = 'Français'\nweight = 3\n```\n\n----------------------------------------\n\nTITLE: Project Directory Structure Example for Hugo Sections\nDESCRIPTION: An example directory structure showing how content sections are organized in Hugo, with blog and events sections. The blog section includes an _index.md file which provides section-level metadata.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/section.md#2025-04-08_snippet_1\n\nLANGUAGE: txt\nCODE:\n```\n.\n└── content\n    ├── blog\n    │   ├── _index.md   <-- title: My Hugo Blog\n    │   ├── post-1.md\n    │   ├── post-2.md\n    │   └── post-3.md\n    └── events\n        ├── event-1.md\n        └── event-2.md\n```\n\n----------------------------------------\n\nTITLE: Accessing Taxonomy Data in Hugo Templates\nDESCRIPTION: Demonstrates how to use the .Data object within a taxonomy template to retrieve singular and plural names of the taxonomy, as well as the Taxonomy object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Data.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Data.Singular }} → genre\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Data.Plural }} → genres\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $taxonomyObject := .Data.Terms }}\n```\n\n----------------------------------------\n\nTITLE: Using os.FileExists Function in Hugo Templates\nDESCRIPTION: Demonstrates various usage examples of the os.FileExists function with different paths and expected return values. Shows both absolute and relative path checking scenarios.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/FileExists.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ fileExists \"content\" }} → true\n{{ fileExists \"content/news\" }} → true\n{{ fileExists \"content/news/article-1\" }} → false\n{{ fileExists \"content/news/article-1.md\" }} → true\n{{ fileExists \"news\" }} → true\n{{ fileExists \"news/article-1\" }} → false\n{{ fileExists \"news/article-1.md\" }} → true\n```\n\n----------------------------------------\n\nTITLE: Rendered RSS Feed Reference in HTML\nDESCRIPTION: This HTML snippet shows the rendered output of the RSS feed reference in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/rss.md#2025-04-08_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"alternate\" type=\"application/rss+xml\" href=\"https://example.org/index.xml\" title=\"ABC Widgets\">\n```\n\n----------------------------------------\n\nTITLE: Organizing theme data files in Hugo\nDESCRIPTION: Shows the recommended directory structure for theme authors to namespace their data files in order to prevent collisions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/data-sources.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nproject/\n└── data/\n    └── mytheme/\n        └── foo.json\n```\n\n----------------------------------------\n\nTITLE: Figure-style Blockquote with Citation\nDESCRIPTION: Advanced blockquote render hook that creates a figure element with optional citation and caption support using Markdown attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/blockquotes.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<figure>\n  <blockquote {{ with .Attributes.cite }}cite=\"{{ . }}\"{{ end }}>\n    {{ .Text }}\n  </blockquote>\n  {{ with .Attributes.caption }}\n    <figcaption class=\"blockquote-caption\">\n      {{ . | safeHTML }}\n    </figcaption>\n  {{ end }}\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Complete Taxonomy Listing Template\nDESCRIPTION: Comprehensive template for displaying all taxonomies, terms, and their associated content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Taxonomies.md#2025-04-08_snippet_9\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.Taxonomies }}\n  {{ $numberOfTerms := 0 }}\n  {{ range $taxonomy, $terms := . }}\n    {{ $numberOfTerms = len . | add $numberOfTerms }}\n  {{ end }}\n\n  {{ if gt $numberOfTerms 0 }}\n    <ul>\n      {{ range $taxonomy, $terms := . }}\n        {{ with $terms }}\n          <li>\n            <a href=\"{{ .Page.RelPermalink }}\">{{ .Page.LinkTitle }}</a>\n            <ul>\n              {{ range $term, $weightedPages := . }}\n                <li>\n                  <a href=\"{{ .Page.RelPermalink }}\">{{ .Page.LinkTitle }}</a>\n                  <ul>\n                    {{ range $weightedPages }}\n                      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n                    {{ end }}\n                  </ul>\n                </li>\n              {{ end }}\n            </ul>\n          </li>\n        {{ end }}\n      {{ end }}\n    </ul>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: External Link Render Hook Implementation\nDESCRIPTION: Enhanced link render hook that adds a 'rel=external' attribute for absolute URLs while maintaining standard link functionality\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/links.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{- $u := urls.Parse .Destination -}}\n<a href=\"{{ .Destination | safeURL }}\"\n  {{- with .Title }} title=\"{{ . }}\"{{ end -}}\n  {{- if $u.IsAbs }} rel=\"external\"{{ end -}}\n>\n  {{- with .Text }}{{ . }}{{ end -}}\n</a>\n{{- /* chomp trailing newline */ -}}\n```\n\n----------------------------------------\n\nTITLE: Using 'define' with 'block' Statement in Hugo Templates\nDESCRIPTION: This snippet shows how to use the 'define' function with a 'block' statement in Hugo templates. It defines a 'main' template that can be overridden or used as a default.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/define.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ block \"main\" . }}\n  {{ print \"default value if 'main' template is empty\" }}\n{{ end }}\n\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Deprecation Notice for IsMultiLingual Function in Hugo\nDESCRIPTION: This code snippet shows the deprecation notice for the IsMultiLingual function. It indicates that the function has been deprecated in Hugo version 0.124.0 and suggests using the hugo.IsMultilingual function instead.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/IsMultiLingual.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< deprecated-in 0.124.0 >}}\nUse [`hugo.IsMultilingual`] instead.\n\n[`hugo.IsMultilingual`]: /functions/hugo/ismultilingual/\n{{< /deprecated-in >}}\n```\n\n----------------------------------------\n\nTITLE: Applying Text Filter Using images.Filter Function in Hugo\nDESCRIPTION: This snippet demonstrates how to apply the text filter to an image using the images.Filter function. It creates an img tag with the filtered image, including its dimensions and alt text.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Text.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with $r }}\n  {{ with . | images.Filter $filter }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Hugo's Layered Caching System with Goat Diagram\nDESCRIPTION: A diagram illustrating Hugo's three-layer caching system: dynacache (in-memory LRU cache), HTTP cache (for remote resources), and file cache (for storage and retrieval).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/http-cache.md#2025-04-08_snippet_0\n\nLANGUAGE: goat\nCODE:\n```\n .-----------.\\n|  dynacache  |\\n '-----+-----'\\n       |\\n       v\\n .----------.\\n| HTTP cache |\\n '-----+----'\\n       |\\n       v\\n .----------.\\n| file cache |\\n '-----+----'\n```\n\n----------------------------------------\n\nTITLE: Calling Hugo Shortcodes with Named and Positional Arguments\nDESCRIPTION: This snippet shows two equivalent ways to call a Hugo shortcode, one using named arguments and the other using positional arguments. Both calls will produce the same output when used with the shortcode template that implements IsNamedParams.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/IsNamedParams.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{</* myshortcode greeting=\"Hello\" firstName=\"world\" */>}}\n{{</* myshortcode \"Hello\" \"world\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Date in Ascending Order with Hugo Templates\nDESCRIPTION: Example of using the ByDate method to sort a collection of pages by date in ascending order. The date value is determined by the site configuration, defaulting to the 'date' field in front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByDate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByDate }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Hugo Project Structure\nDESCRIPTION: Shows the typical directory structure for a Hugo project of medium complexity, including various template types and their locations.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/types.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nlayouts/\n├── _default/\n│   ├── _markup/\n│   │   ├── render-image.html   <-- render hook\n│   │   └── render-link.html    <-- render hook\n│   ├── baseof.html\n│   ├── home.html\n│   ├── section.html\n│   ├── single.html\n│   ├── taxonomy.html\n│   └── term.html\n├── articles/\n│   └── card.html               <-- content view\n├── partials/\n│   ├── footer.html\n│   └── header.html\n└── shortcodes/\n    ├── audio.html\n    └── video.html\n```\n\n----------------------------------------\n\nTITLE: Custom robots.txt Template Example for Hugo\nDESCRIPTION: A custom robots.txt template that creates disallow directives for each page on the site. This template uses Hugo's templating language to iterate through all pages and disallow search engines from crawling them.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/robots.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nUser-agent: *\n{{ range .Pages }}\nDisallow: {{ .RelPermalink }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Base URL\nDESCRIPTION: Basic Hugo configuration showing how to set the site title and base URL in the config file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Permalink.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Documentation'\nbaseURL = 'https://example.org/docs/'\n```\n\n----------------------------------------\n\nTITLE: Ranging Through All Site Pages in Hugo Template\nDESCRIPTION: This snippet shows how to iterate through all pages in a Hugo site, sorted by title. It creates a list of linked page titles using the Site object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Pages.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Site.Pages.ByTitle }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating a Link to Current Section Page in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the CurrentSection function in a Hugo template to create a hyperlink to the current section page, displaying the section's link title.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/CurrentSection.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<a href=\"{{ .CurrentSection.RelPermalink }}\">{{ .CurrentSection.LinkTitle }}</a>\n```\n\n----------------------------------------\n\nTITLE: Rendering Page Content with Hugo Templates\nDESCRIPTION: The .Content method renders Markdown and shortcodes to HTML. This is used in Hugo templates to output the processed content of a page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Content.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Content }}\n```\n\n----------------------------------------\n\nTITLE: Sorting Grouped Pages in Ascending Order in Hugo Templates\nDESCRIPTION: This code snippet shows how to use the GroupByParamDate function with an additional 'asc' parameter to sort the grouped pages in ascending order based on the eventDate.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByParamDate.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByParamDate \"eventDate\" \"January 2006\" \"asc\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: GoAT ASCII Basic Graphics Diagram Example\nDESCRIPTION: Demonstrates GoAT's capability for creating basic graphics diagrams with points, lines, and simple 3D objects, including representations of reflection and refraction.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/diagrams.md#2025-04-08_snippet_4\n\nLANGUAGE: goat\nCODE:\n```\n                                                                             .\n    0       3                          P *              Eye /         ^     /\n     *-------*      +y                    \\                +)          \\   /  Reflection\n  1 /|    2 /|       ^                     \\                \\           \\ v\n   *-------* |       |                v0    \\       v3           --------*--------\n   | |4    | |7      |                  *----\\-----*\n   | *-----|-*       +-----> +x        /      v X   \\          .-.<--------        o\n   |/      |/       /                 /        o     \\        | / | Refraction    / \\\n   *-------*       v                 /                \\        +-'               /   \\\n  5       6      +z              v1 *------------------* v2    |                o-----o\n                                                               v\n```\n\n----------------------------------------\n\nTITLE: Illustrating Hugo Page Kinds with Directory Structure\nDESCRIPTION: This snippet shows a typical Hugo project directory structure, annotating different files with their corresponding page kinds. It demonstrates how Hugo categorizes pages as home, page, section, taxonomy, or term based on their location and naming.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Kind.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── books/\n│   ├── book-1/\n│   │   └── index.md    <-- kind = page\n│   ├── book-2.md       <-- kind = page\n│   └── _index.md       <-- kind = section\n├── tags/\n│   ├── fiction/\n│   │   └── _index.md   <-- kind = term\n│   └── _index.md       <-- kind = taxonomy\n└── _index.md           <-- kind = home\n```\n\n----------------------------------------\n\nTITLE: Retrieving Auto-Determined MainSections in Hugo Template\nDESCRIPTION: Shows how MainSections returns the section with the most pages when not explicitly configured. In this example, 'films' is returned as it has more pages than other sections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/MainSections.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.MainSections }} → [films]\n```\n\n----------------------------------------\n\nTITLE: Basic After Function Output Result\nDESCRIPTION: Shows the rendered HTML output of the after function example, displaying only the elements after index 2.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/After.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li>three</li>\n  <li>four</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Using collections.SymDiff with slice in Hugo Templates\nDESCRIPTION: This example demonstrates how to use the symdiff function (alias of collections.SymDiff) to get the symmetric difference between two slices. It returns elements that are in either of the sets but not in their intersection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/SymDiff.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ slice 1 2 3 | symdiff (slice 3 4) }} → [1 2 4]\n```\n\n----------------------------------------\n\nTITLE: JSON Representation of Nested Dictionary in Hugo\nDESCRIPTION: This snippet shows the JSON representation of the nested dictionary created in the previous example. It illustrates the deeply nested structure produced when using a slice of strings as a key.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Dictionary.md#2025-04-08_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"a\": {\n    \"b\": {\n      \"c\": \"value\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Internal Templates with template Function in Hugo\nDESCRIPTION: Demonstrates how to paginate content pages and then execute Hugo's internal pagination template using the template function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/template.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range (.Paginate .Pages).Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n{{ template \"_internal/pagination.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Image Rotation Filters\nDESCRIPTION: Examples of creating filters for image rotation, including both standalone rotation and combined with other operations.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Process.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Process \"r90\" }}\n{{ $filter := images.Process \"crop 200x200 center r90\" }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Module Tidy Command Options\nDESCRIPTION: Available command-line options specific to the hugo mod tidy command, including baseURL, cacheDir, contentDir, and theme settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_tidy.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -b, --baseURL string           hostname (and path) to the root, e.g. https://spf13.com/\n      --cacheDir string          filesystem path to cache directory\n  -c, --contentDir string        filesystem path to content directory\n  -h, --help                     help for tidy\n      --renderSegments strings   named segments to render (configured in the segments config)\n  -t, --theme strings            themes to use (located in /themes/THEMENAME/)\n```\n\n----------------------------------------\n\nTITLE: Linking to Default Language Home Page in Hugo\nDESCRIPTION: This Go HTML template demonstrates how to create a link to the home page of the site's default content language using the .Sites.Default method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sites.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Sites.Default }}\n  <a href=\"{{ .Home.Permalink }}\">{{ .Title }}</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Home Page Section Navigation Output\nDESCRIPTION: Generated HTML output showing the section navigation links on the home page, sorted by weight.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sections.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<h2><a href=\"/films/\">Films</a></h2>\n<h2><a href=\"/books/\">Books</a></h2>\n<h2><a href=\"/auctions/\">Auctions</a></h2>\n```\n\n----------------------------------------\n\nTITLE: Configuring RSS Feed Metadata in Hugo\nDESCRIPTION: This configuration snippet shows how to set copyright and author information for RSS feeds in Hugo's configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/rss.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ncopyright = '© 2023 ABC Widgets, Inc.'\n[params.author]\nname = 'John Doe'\nemail = 'jdoe@example.org'\n```\n\n----------------------------------------\n\nTITLE: Configuring GitInfo in Hugo Configuration File\nDESCRIPTION: How to enable Git integration in Hugo's configuration file to access Git information for your content pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GitInfo.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nenableGitInfo = true\n```\n\n----------------------------------------\n\nTITLE: Advanced Image Processing with Multiple Operations in Hugo\nDESCRIPTION: Demonstrates a more complex example of image processing that combines cropping, positioning, format conversion, quality setting, and resampling filter in a single Process call.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Process.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Process \"crop 200x200 topright webp q85 lanczos\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Applying Multiple Image Filters Including AutoOrient in Hugo\nDESCRIPTION: This example shows how to combine the AutoOrient filter with other image processing operations. It creates a slice of filters, including AutoOrient and a resize operation, then applies them to an image resource.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/AutoOrient.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filters := slice\n  images.AutoOrient\n  (images.Process \"resize 200x\")\n}}\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with images.Filter $filters . }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Parsing and Accessing URL Components with urls.Parse in Hugo\nDESCRIPTION: Demonstrates how to parse a URL string into a structured URL object and access its various components. Shows extraction of scheme, host, path, query parameters, and fragment using the urls.Parse function in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/Parse.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://example.org:123/foo?a=6&b=7#bar\" }}\n{{ $u := urls.Parse $url }}\n\n{{ $u.String }} → https://example.org:123/foo?a=6&b=7#bar\n{{ $u.IsAbs }} → true\n{{ $u.Scheme }} → https\n{{ $u.Host }} → example.org:123\n{{ $u.Hostname }} → example.org\n{{ $u.RequestURI }} → /foo?a=6&b=7\n{{ $u.Path }} → /foo\n{{ $u.RawQuery }} → a=6&b=7\n{{ $u.Query }} → map[a:[6] b:[7]]\n{{ $u.Query.a }} → [6]\n{{ $u.Query.Get \"a\" }} → 6\n{{ $u.Query.Has \"b\" }} → true\n{{ $u.Fragment }} → bar\n```\n\n----------------------------------------\n\nTITLE: Basic Render Hooks Template Structure\nDESCRIPTION: The folder structure for implementing various render hooks templates in a Hugo project.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/introduction.md#2025-04-08_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nlayouts/\n└── _default/\n    └── _markup/\n        ├── render-blockquote.html\n        ├── render-codeblock.html\n        ├── render-heading.html\n        ├── render-image.html\n        ├── render-link.html\n        ├── render-passthrough.html\n        └── render-table.html\n```\n\n----------------------------------------\n\nTITLE: Directory Structure Example for Local JSON Access\nDESCRIPTION: Shows the basic directory structure for storing local JSON files in a Hugo project.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetJSON.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nmy-project/\n└── other-files/\n    └── books.json\n```\n\n----------------------------------------\n\nTITLE: Complete Taxonomy Term Template Example\nDESCRIPTION: A complete example showing how to iterate over weighted pages and create links to each page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Get.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $weightedPages := $taxonomyObject.Get \"suspense\" }}\n{{ range $weightedPages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Default Hugo Project Structure\nDESCRIPTION: The directory structure created when initializing a new Hugo project, showing the main subdirectories and configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/directory-structure.md#2025-04-08_snippet_1\n\nLANGUAGE: txt\nCODE:\n```\nmy-site/\n├── archetypes/\n│   └── default.md\n├── assets/\n├── content/\n├── data/\n├── i18n/\n├── layouts/\n├── static/\n├── themes/\n└── hugo.toml         <-- site configuration\n```\n\n----------------------------------------\n\nTITLE: Creating a Link to Parent Section in Hugo Templates\nDESCRIPTION: This Go HTML template snippet demonstrates how to create a link to the parent section page of the current page using the Parent method. It includes a check for the existence of the parent section before calling methods on its Page object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Parent.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Parent }}\n  <a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Setting Values in Hugo Scratch Pad\nDESCRIPTION: Demonstrates how to create a new scratch pad and set a value using the Set method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/NewScratch.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := newScratch }}\n{{ $s.Set \"greeting\" \"Hello\" }}\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Expiry Date in Descending Order (Hugo)\nDESCRIPTION: This snippet shows how to sort pages by their expiration date in descending order using the ByExpiryDate function followed by Reverse. It iterates through the sorted pages and displays each page's link title.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByExpiryDate.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByExpiryDate.Reverse }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Parameter in Ascending Order (Hugo)\nDESCRIPTION: This snippet demonstrates how to sort a collection of pages by a specified parameter (in this case, 'author') in ascending order using the ByParam function in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByParam.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByParam \"author\" }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Page Frontmatter in YAML\nDESCRIPTION: This YAML frontmatter block defines metadata for a Hugo documentation page about Hugo. It specifies the title, link title, description, categories, keywords, weight, and aliases for the page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/about/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: About Hugo\nlinkTitle: About\ndescription: Learn about Hugo and its features, privacy protections, and security model.\ncategories: []\nkeywords: []\nweight: 10\naliases: [/about-hugo/,/docs/]\n---\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output\nDESCRIPTION: The resulting HTML output from the taxonomy listing template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Taxonomies.md#2025-04-08_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/books/and-then-there-were-none/\">And Then There Were None</a></li>\n  <li><a href=\"/books/death-on-the-nile/\">Death on the Nile</a></li>\n  <li><a href=\"/books/jamaica-inn/\">Jamaica Inn</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Detecting Existence of Boolean Values with if and with in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to detect the existence of a boolean parameter with value 'true' using both 'if' and 'with' conditionals in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/IsSet.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if site.Params.showHeroImage }}\n  {{ site.Params.showHeroImage }} → true\n{{ end }}\n\n{{ with site.Params.showHeroImage }}\n  {{ . }} → true\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Non-fiction Books Data Structure\nDESCRIPTION: YAML data structure containing non-fiction books with title, author, and ISBN information\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Data.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- title: The Ancien Régime and the Revolution\n  author: Alexis de Tocqueville\n  isbn: 978-0141441641\n- title: Interpreting the French Revolution\n  author: François Furet\n  isbn: 978-0521280495\n```\n\n----------------------------------------\n\nTITLE: Example of Incorrect Template Implementation\nDESCRIPTION: Shows an incorrect template implementation where content is placed outside block definitions, which would cause rendering issues.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/base.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<div>This div element broke your template.</div>\n{{ define \"main\" }}\n  <h2>{{ .Title }}</h2>\n  {{ .Content }}\n{{ end }}\n<!-- An HTML comment will break your template too. -->\n```\n\n----------------------------------------\n\nTITLE: Custom Author Term Template with Metadata\nDESCRIPTION: Advanced term template example specifically for author taxonomy, displaying author metadata, portrait image, and associated content list.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/term.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  <p>Affiliation: {{ .Params.affiliation }}</p>\n  {{ with .Resources.Get \"portrait.jpg\" }}\n    {{ with .Fill \"100x100\" }}\n      <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"portrait\">\n    {{ end }}\n  {{ end }}\n  {{ .Content }}\n  {{ range .Pages }}\n    <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Nested Properties in Hugo Templates\nDESCRIPTION: Demonstrates how to use dot notation to chain multiple identifiers together to access nested properties and methods in Hugo templates. Examples include accessing site parameters and date functions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/chain.md#2025-04-08_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n.Site.Params.author.name\n```\n\nLANGUAGE: hugo\nCODE:\n```\n.Date.UTC.Hour\n```\n\n----------------------------------------\n\nTITLE: Sorting Map Objects in Hugo Templates - Ascending Order\nDESCRIPTION: Examples of sorting map objects by firstname in ascending order, showing both implicit and explicit ascending sort syntax.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Sort.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range sort site.Params.authors \"firstname\" }}\n  {{ .firstName }}\n{{ end }}\n\n{{ range sort site.Params.authors \"firstname\" \"asc\" }}\n  {{ .firstName }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Main Menu Entries in Hugo Configuration\nDESCRIPTION: This snippet shows how to define entries for a 'main' menu in Hugo's configuration file. It includes three menu items with name, pageRef, and weight properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/menus.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nname = 'Home'\npageRef = '/'\nweight = 10\n\n[[menus.main]]\nname = 'Products'\npageRef = '/products'\nweight = 20\n\n[[menus.main]]\nname = 'Services'\npageRef = '/services'\nweight = 30\n```\n\n----------------------------------------\n\nTITLE: Accessing German Language Prefix with Subdirectory Enabled\nDESCRIPTION: Shows the language prefix output when defaultContentLanguageInSubdir is set to true for the German language site. Returns '/de' as all languages are now in subdirectories.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/LanguagePrefix.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.LanguagePrefix }} → /de\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output From Language Iteration\nDESCRIPTION: This shows the HTML output generated by the previous template when using the example site configuration. It displays the language title and name in parentheses for each configured language.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Languages.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li>Projekt Dokumentation (Deutsch)</li>\n  <li>Project Documentation (English)</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Using strings.HasSuffix in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the strings.HasSuffix function in Hugo templates. It checks if the string 'Hugo' ends with the suffix 'go', which returns true in this case.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/HasSuffix.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hasSuffix \"Hugo\" \"go\" }} → true\n```\n\n----------------------------------------\n\nTITLE: Terminating 'if' Statement in Hugo Templates\nDESCRIPTION: Demonstrates how to use 'end' to terminate an 'if' statement in Hugo templates. The example checks a variable and prints its value if it exists.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/end.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := \"foo\" }}\n{{ if $var }}\n  {{ $var }} → foo\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using urls.AbsURL with inputs without leading slashes (baseURL = https://example.org/docs/)\nDESCRIPTION: Demonstrates the urls.AbsURL function with inputs that don't begin with a slash, where the path in the resulting URL is relative to the baseURL configuration. Here the baseURL is set to 'https://example.org/docs/'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/AbsURL.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ absURL \"\" }}          → https://example.org/docs/\n{{ absURL \"articles\" }}  → https://example.org/docs/articles\n{{ absURL \"style.css\" }} → https://example.org/docs/style.css\n```\n\n----------------------------------------\n\nTITLE: Creating a Slice with Values using collections.Slice in Hugo\nDESCRIPTION: This snippet demonstrates how to create a slice with multiple string values using the collections.Slice function in Hugo templates. It assigns the resulting slice to a variable and displays its contents.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Slice.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"a\" \"b\" \"c\" }}\n{{ $s }} → [a b c]\n```\n\n----------------------------------------\n\nTITLE: Using RenderShortcodes in Hugo Template\nDESCRIPTION: This Go HTML template snippet demonstrates how to use the RenderShortcodes method on a specific page in Hugo. It retrieves the 'about' page and renders its shortcodes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RenderShortcodes.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $p := site.GetPage \"/about\" }}\n{{ $p.RenderShortcodes }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Nested Values with collections.Index in Hugo\nDESCRIPTION: Shows how to use collections.Index with multiple keys to access nested values in complex data structures like nested maps and slices.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/IndexFunction.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $m := dict \"a\" 100 \"b\" 200 \"c\" (slice 10 20 30) }}\n{{ index $m \"c\" 1 }} → 20\n\n{{ $m := dict \"a\" 100 \"b\" 200 \"c\" (dict \"d\" 10 \"e\" 20) }}\n{{ index $m \"c\" \"e\" }} → 20\n```\n\n----------------------------------------\n\nTITLE: Retrieving Author Email from GitInfo\nDESCRIPTION: Template code to access the email address of the author of the last Git commit for a page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GitInfo.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .GitInfo }}\n  {{ .AuthorEmail }} → jsmith@example.org\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Stripping HTML Tags with transform.Plainify in Hugo Go HTML Template\nDESCRIPTION: This snippet demonstrates the usage of the transform.Plainify function (aliased as 'plainify') to remove HTML tags from a string. It takes an HTML-formatted string as input and returns the plain text content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Plainify.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"<b>BatMan</b>\" | plainify }} → BatMan\n```\n\n----------------------------------------\n\nTITLE: Creating Paginated Navigation Without HasPrev in Hugo Templates\nDESCRIPTION: This snippet shows an alternative approach to pagination navigation without using HasPrev or HasNext. Instead, it uses the 'with' statement to conditionally render navigation elements when the previous or next page exists, achieving the same result with more concise code.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/HasPrev.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  <ul>\n    {{ with .First }}\n      <li><a href=\"{{ .URL }}\">First</a></li>\n    {{ end }}\n    {{ with .Prev }}\n      <li><a href=\"{{ .URL }}\">Previous</a></li>\n    {{ end }}\n    {{ with .Next }}\n      <li><a href=\"{{ .URL }}\">Next</a></li>\n    {{ end }}\n    {{ with .Last }}\n      <li><a href=\"{{ .URL }}\">Last</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output of Figure Shortcode in Hugo\nDESCRIPTION: The HTML output generated by Hugo when using the figure shortcode with the given attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/figure.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<figure class=\"ma0 w-75\">\n  <a href=\"https://www.nps.gov/zion/index.htm\">\n    <img \n      src=\"/images/examples/zion-national-park.jpg\" \n      alt=\"A photograph of Zion National Park\"\n    >\n  </a>\n  <figcaption>\n    <p>Zion National Park</p>\n  </figcaption>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Building Pagination Navigation with Pagers Method in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to implement pagination in Hugo templates. It creates a paginator object from regular pages, ranges through the paginated content, and builds a numbered navigation interface using the Pagers method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/Pagers.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  <ul>\n    {{ range .Pagers }}\n      <li><a href=\"{{ .URL }}\">{{ .PageNumber }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Extras Extension with Subscript and Deleted Text\nDESCRIPTION: TOML configuration showing how to resolve conflicts between subscript and strikethrough markup by disabling the Strikethrough extension and enabling features from the Extras extension.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/markup.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[markup.goldmark.extensions]\nstrikethrough = false\n\n[markup.goldmark.extensions.extras.delete]\nenable = true\n\n[markup.goldmark.extensions.extras.subscript]\nenable = true\n```\n\n----------------------------------------\n\nTITLE: Accessing Values with Variable Keys using collections.Index in Hugo\nDESCRIPTION: Shows how to use collections.Index with variable keys, comparing it to direct access. This is useful when the key is not known at template writing time.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/IndexFunction.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Params.foo }}\n\n{{ $k := \"foo\" }}\n{{ index .Site.Params $k }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Template - Get Absolute Filename\nDESCRIPTION: Template code to safely access the Filename property of a File object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .File }}\n  {{ .Filename }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: JSON Data Structure Example\nDESCRIPTION: Example of the JSON data structure returned by getJSON function, showing a book list with authors and ratings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetJSON.md#2025-04-08_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"author\": \"Victor Hugo\",\n    \"rating\": 5,\n    \"title\": \"Les Misérables\"\n  },\n  {\n    \"author\": \"Victor Hugo\",\n    \"rating\": 4,\n    \"title\": \"The Hunchback of Notre Dame\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Creating a New Hugo Site\nDESCRIPTION: This command creates a new Hugo site with a default directory structure.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/directory-structure.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nhugo new site my-site\n```\n\n----------------------------------------\n\nTITLE: Accessing RSS Output Format in Hugo Templates\nDESCRIPTION: Demonstrates how to create a link to the RSS feed for the current page using the OutputFormats.Get method. The code checks for the RSS format and generates a permalink.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/OutputFormats.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .OutputFormats.Get \"rss\" }}\n  <a href=\"{{ .RelPermalink }}\">RSS Feed</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Basic collections.Where Syntax\nDESCRIPTION: Shows the basic syntax format for the collections.Where function, indicating how the comparison condition is composed of KEY, OPERATOR, and VALUE arguments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncollections.Where COLLECTION KEY [OPERATOR] VALUE\n                         --------------------\n                         comparison condition\n```\n\n----------------------------------------\n\nTITLE: Defining a Page Description in Front Matter\nDESCRIPTION: Example of defining a page description in Hugo front matter. The description field is separate from content summaries and is typically used in metadata about the page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Description.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle = 'How to make spicy tuna hand rolls'\ndescription = 'Instructions for making spicy tuna hand rolls.'\n```\n\n----------------------------------------\n\nTITLE: Repeating Strings with strings.Repeat in Hugo Templates\nDESCRIPTION: This example demonstrates how to use the strings.Repeat function to create a new string by repeating 'yo' three times. The function takes the count parameter first (3) followed by the string to repeat ('yo').\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Repeat.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.Repeat 3 \"yo\" }} → yoyoyo\n```\n\n----------------------------------------\n\nTITLE: Grouping Content by Year and Month Using GroupByPublishDate in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to group pages by publish date using the 'January 2006' date format template. It outputs each date as a heading followed by an unordered list of page links within that group.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByPublishDate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByPublishDate \"January 2006\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Basic Alphabetical Taxonomy Sorting in Hugo\nDESCRIPTION: Demonstrates how to get an alphabetically sorted taxonomy using the Alphabetical method on a taxonomy object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Alphabetical.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $taxonomyObject.Alphabetical }}\n```\n\n----------------------------------------\n\nTITLE: Generating Custom Table of Contents in Hugo Templates\nDESCRIPTION: Illustrates how to use the Fragments.ToHTML method to generate a custom table of contents with specified start level, end level, and list type.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Fragments.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $startLevel := 2 }}\n{{ $endLevel := 3 }}\n{{ $ordered := true }}\n{{ .Fragments.ToHTML $startLevel $endLevel $ordered }}\n```\n\n----------------------------------------\n\nTITLE: Accessing LanguageDirection in Hugo Templates\nDESCRIPTION: Retrieves the language direction (either 'ltr' or 'rtl') from the site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Language.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Language.LanguageDirection }} → ltr\n```\n\n----------------------------------------\n\nTITLE: Basic Taxonomy Template in Hugo\nDESCRIPTION: A basic taxonomy template that inherits from the base template and renders a list of terms in the current taxonomy. This template displays each term as a link to its respective page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/taxonomy.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n  {{ range .Pages }}\n    <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Date in Descending Order with Hugo Templates\nDESCRIPTION: Example of using the ByDate method combined with Reverse to sort a collection of pages by date in descending order. This provides the newest content first in the rendered output.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByDate.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByDate.Reverse }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Global Command Options\nDESCRIPTION: Inherited global command options available for ZSH completion command.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_zsh.md#2025-04-08_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Adding Values with hugo.Store in Hugo Templates\nDESCRIPTION: Illustrates the use of the Add method to append values to existing keys in hugo.Store. Examples show adding strings, numbers, and slices.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/Store.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.Store.Set \"greeting\" \"Hello\" }}\n{{ hugo.Store.Add \"greeting\" \"Welcome\" }}\n{{ hugo.Store.Get \"greeting\" }} → HelloWelcome\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.Store.Set \"total\" 3 }}\n{{ hugo.Store.Add \"total\" 7 }}\n{{ hugo.Store.Get \"total\" }} → 10\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.Store.Set \"greetings\" (slice \"Hello\") }}\n{{ hugo.Store.Add \"greetings\" (slice \"Welcome\" \"Cheers\") }}\n{{ hugo.Store.Get \"greetings\" }} → [Hello Welcome Cheers]\n```\n\n----------------------------------------\n\nTITLE: Checking Draft Status in Hugo Templates\nDESCRIPTION: Shows how to access the Draft property of a page in Hugo templates. This snippet returns a boolean value indicating whether the current page is a draft.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Draft.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Draft }} → true\n```\n\n----------------------------------------\n\nTITLE: Inline Code Highlighting Example\nDESCRIPTION: Shows how to use the highlight shortcode for inline code snippets with highlighting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/highlight.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nThis is some {{</* highlight go \"hl_inline=true\" */>}}fmt.Println(\"inline\"){{</* /highlight */>}} code.\n```\n\n----------------------------------------\n\nTITLE: Advanced Sass Configuration with Bootstrap Integration\nDESCRIPTION: Example showing Dart Sass configuration with Bootstrap integration, source mapping, and fingerprinting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/Sass.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict\n  \"transpiler\" \"dartsass\"\n  \"targetPath\" \"css/style.css\"\n  \"vars\" site.Params.styles\n  \"enableSourceMap\" (not hugo.IsProduction)\n  \"includePaths\" (slice \"node_modules/bootstrap/scss\")\n}}\n{{ with resources.Get \"sass/main.scss\" | toCSS $opts | minify | fingerprint }}\n  <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\" integrity=\"{{ .Data.Integrity }}\" crossorigin=\"anonymous\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Gamma Correction Filter in Hugo Templates\nDESCRIPTION: Creates an image filter that performs gamma correction. The gamma value must be positive - values greater than 1 lighten the image while values less than 1 darken it. A value of 1 has no effect.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Gamma.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Gamma 1.667 }}\n```\n\n----------------------------------------\n\nTITLE: Implementing a Shortcode Template with Ordinal Method\nDESCRIPTION: A Hugo shortcode template that uses the Ordinal method to generate unique ID attributes for image elements. The template also includes error checking for required parameters and resource existence.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Ordinal.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $src := \"\" }}\n{{ with .Get \"src\" }}\n  {{ $src = . }}\n  {{ with resources.Get $src }}\n    {{ $id := printf \"img-%03d\" $.Ordinal }}\n    <img id=\"{{ $id }}\" src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ else }}\n    {{ errorf \"The %q shortcode was unable to find %s. See %s\" $.Name $src $.Position }}\n  {{ end }}\n{{ else }}\n  {{ errorf \"The %q shortcode requires a 'src' argument. See %s\" .Name .Position }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Example Implementation of Image Filter\nDESCRIPTION: A practical example showing how to apply a grayscale filter to an image and display it with proper dimensions and attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Filter.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with images.Filter images.Grayscale . }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using compare.Eq Function in Hugo Templates\nDESCRIPTION: Demonstrates how to use the compare.Eq function to compare values for equality in Hugo templates. The function returns true if any pair of consecutive arguments are equal. It supports comparing multiple arguments in a single expression.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Eq.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ eq 1 1 }} → true\n{{ eq 1 2 }} → false\n\n{{ eq 1 1 1 }} → true\n{{ eq 1 1 2 }} → true\n{{ eq 1 2 1 }} → true\n{{ eq 1 2 2 }} → false\n```\n\n----------------------------------------\n\nTITLE: Using the Include Shortcode in Hugo Markdown Content\nDESCRIPTION: This example shows how to use the 'include' shortcode in a Hugo Markdown file to compose content from multiple files. It demonstrates the correct shortcode notation for including Markdown content that needs further processing.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RenderShortcodes.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{%/* include \"/snippets/services\" */%}}\n{{%/* include \"/snippets/values\" */%}}\n{{%/* include \"/snippets/leadership\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Sorting Map Objects in Hugo Templates - Descending Order\nDESCRIPTION: Demonstrates sorting map objects by firstname in descending order using the collections.Sort function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Sort.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range sort site.Params.authors \"firstname\" \"desc\" }}\n  {{ .firstName }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: CODEOWNERS File Configuration\nDESCRIPTION: Example CODEOWNERS file showing pattern matching and user assignments for different paths\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/CodeOwners.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n* @jdoe\n/content/books/ @tjones\n/content/films/ @mrichards @rsmith\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Basic Usage of 'not' Operator in Hugo Templates\nDESCRIPTION: This snippet shows how the 'not' operator negates boolean, numeric, and string values in Hugo templates. It always returns a boolean result.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/not.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ not true }} → false\n{{ not false }} → true\n\n{{ not 1 }} → false\n{{ not 0 }} → true\n\n{{ not \"x\" }} → false\n{{ not \"\" }} → true\n```\n\n----------------------------------------\n\nTITLE: Limited String Replacement in Hugo Templates\nDESCRIPTION: Shows how to use the LIMIT parameter in strings.Replace to control the number of replacements performed on a string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Replace.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ replace \"aabbaabb\" \"a\" \"z\" 2 }} → zzbbaabb\n```\n\n----------------------------------------\n\nTITLE: Returning Values from Hugo Partials\nDESCRIPTION: Illustrates how to return values from partial templates in Hugo, including examples of returning featured pages and image data.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/partial.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{/* layouts/partials/GetFeatured.html */}}\n{{ return first . (where site.RegularPages \"Params.featured\" true) }}\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{/* layouts/index.html */}}\n{{ range partial \"GetFeatured.html\" 5 }}\n  [...]\n{{ end }}\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{/* layouts/partials/GetImage.html */}}\n{{ $image := false }}\n{{ with .Params.gallery }}\n  {{ $image = index . 0 }}\n{{ end }}\n{{ with .Params.image }}\n  {{ $image = . }}\n{{ end }}\n{{ return $image }}\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{/* layouts/_default/single.html */}}\n{{ with partial \"GetImage.html\" . }}\n  [...]\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Parameters in Hugo Configuration\nDESCRIPTION: This snippet demonstrates how to define custom parameters in the Hugo configuration file using the 'params' key. It includes examples of nested parameters and contact information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/params.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nbaseURL = 'https://example.org/'\ntitle = 'Project Documentation'\nlanguageCode = 'en-US'\n[params]\nsubtitle = 'Reference, Tutorials, and Explanations'\n[params.contact]\nemail = 'info@example.org'\nphone = '+1 206-555-1212'\n```\n\n----------------------------------------\n\nTITLE: Inequality Test Not Equal to False\nDESCRIPTION: Template code to filter pages where exclude parameter is not equal to false\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_22\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range where .Site.RegularPages \"Params.exclude\" \"ne\" false }}\n    <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n  {{ end }}\n</ul>\n```\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/posts/post-2/\">Post 2</a></li>\n  <li><a href=\"/posts/post-3/\">Post 3</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Concatenating JavaScript Resources in Hugo\nDESCRIPTION: This snippet demonstrates how to use the resources.Concat function to combine multiple JavaScript files into a single bundle. It retrieves two JavaScript resources, creates a slice, and then concatenates them into a single file named 'js/bundle.js'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/Concat.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $plugins := resources.Get \"js/plugins.js\" }}\n{{ $global := resources.Get \"js/global.js\" }}\n{{ $js := slice $plugins $global | resources.Concat \"js/bundle.js\" }}\n```\n\n----------------------------------------\n\nTITLE: Multilingual Content Structure in Hugo\nDESCRIPTION: Directory structure showing how content is organized for a multilingual Hugo site with English, German, and French translations of books. Includes index files and book content files for each language.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/AllTranslations.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── de/\n│   ├── books/\n│   │   ├── book-1.md\n│   │   └── book-2.md\n│   └── _index.md\n├── en/\n│   ├── books/\n│   │   ├── book-1.md\n│   │   └── book-2.md\n│   └── _index.md\n├── fr/\n│   ├── books/\n│   │   └── book-1.md\n│   └── _index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Calling Partial from Page Template in Hugo\nDESCRIPTION: Shows how to call a partial template from a single page template, where the context passed is the Page object itself.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Page.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partial \"my-partial.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Implementing Book Details Shortcode Call\nDESCRIPTION: Shows how to call the book-details shortcode in Hugo content files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Page.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{</* book-details */>}}\n```\n\n----------------------------------------\n\nTITLE: Setting Import Context for js.Batch in Hugo\nDESCRIPTION: This snippet demonstrates how to set an import context for resolving imports in js.Batch, using resources.Match and Resources.Mount.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Batch.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $common := resources.Match \"/js/headlessui/*.*\" }}\n{{ $importContext := (slice $.Page ($common.Mount \"/js/headlessui\" \".\")) }}\n```\n\n----------------------------------------\n\nTITLE: Including Headers with resources.GetRemote in Hugo\nDESCRIPTION: Example showing how to include authorization headers when making a request with resources.GetRemote. This is useful for accessing API endpoints that require authentication.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/GetRemote.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://example.org/api\" }}\n{{ $opts := dict\n  \"headers\" (dict \"Authorization\" \"Bearer abcd\")\n}}\n{{ $resource := resources.GetRemote $url $opts }}\n```\n\n----------------------------------------\n\nTITLE: Using debug.Dump in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the debug.Dump function in a Hugo template to display the contents of site.Data.books. The function returns a string representation of the object, which is then wrapped in a <pre> tag for formatting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/debug/Dump.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre>{{ debug.Dump site.Data.books }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Using hugo.IsProduction to Check Production Environment in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the hugo.IsProduction function to check if the current Hugo environment is set to production. The function returns a boolean value (true or false) which can be used in conditional statements.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/IsProduction.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.IsProduction }} → true/false\n```\n\n----------------------------------------\n\nTITLE: Basic String Contains Check in Hugo Templates\nDESCRIPTION: Demonstrates checking if a string contains a substring using strings.Contains. Returns true when 'go' is found in 'Hugo'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Contains.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.Contains \"Hugo\" \"go\" }} → true\n```\n\n----------------------------------------\n\nTITLE: Checking DST Status with Hugo's Time Functions\nDESCRIPTION: Shows how to determine if specific timestamps are in Daylight Savings Time using the IsDST method. Creates two time objects, one in winter and one in summer, to demonstrate the difference in DST status.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/IsDST.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t1 := time.AsTime \"2023-01-01T00:00:00-08:00\" }}\n{{ $t2 := time.AsTime \"2023-07-01T00:00:00-07:00\" }}\n\n{{ $t1.IsDST }} → false\n{{ $t2.IsDST }} → true\n```\n\n----------------------------------------\n\nTITLE: Displaying GitHub Gist URL in Hugo Markdown\nDESCRIPTION: Example of a GitHub Gist URL that can be embedded in Hugo content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/gist.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://gist.github.com/user/50a7482715eac222e230d1e64dd9a89b\n```\n\n----------------------------------------\n\nTITLE: Including RSS Feed Reference in Hugo Templates\nDESCRIPTION: This Go HTML template snippet demonstrates how to include an RSS feed reference in the head element of rendered pages in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/rss.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .OutputFormats.Get \"rss\" }}\n  {{ printf `<link rel=%q type=%q href=%q title=%q>` .Rel .MediaType.Type .Permalink site.Title | safeHTML }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Calculating String Length with len Function in Hugo\nDESCRIPTION: Demonstrates how to use the 'len' function to get the length of strings in Hugo templates. It shows examples with a non-empty string and an empty string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/len.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"ab\" | len }} → 2\n{{ \"\" | len }} → 0\n```\n\n----------------------------------------\n\nTITLE: Triggering Content Rendering with Page Methods\nDESCRIPTION: Shows alternative methods to trigger content rendering before accessing scratch pad values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Store.md#2025-04-08_snippet_10\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $noop := .WordCount }}\n{{ site.Store.Get \"mykey\" }}\n```\n\n----------------------------------------\n\nTITLE: Debugging Taxonomy Object\nDESCRIPTION: Template code to inspect the taxonomy data structure by dumping its contents to the page for debugging purposes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/taxonomy/get-a-taxonomy-object.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre>{{ debug.Dump $taxonomyObject }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Using Relref Shortcode in Markdown Links\nDESCRIPTION: Examples of using the relref shortcode with different arguments to create links in Markdown, showing various options including language and output format specification.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/relref.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[Link A]({{%/* ref \"/books/book-1\" */%}})\n\n[Link B]({{%/* ref path=\"/books/book-1\" */%}})\n\n[Link C]({{%/* ref path=\"/books/book-1\" lang=\"de\" */%}})\n\n[Link D]({{%/* ref path=\"/books/book-1\" lang=\"de\" outputFormat=\"json\" */%}})\n```\n\n----------------------------------------\n\nTITLE: Using Go Pipes for CSS Processing in Hugo\nDESCRIPTION: Example showing how to process a SASS file using Hugo Pipes with minification and fingerprinting. The pipeline retrieves a SASS file, processes it with css.Sass, minifies the result, and adds a fingerprint for cache busting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-pipes/introduction.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $style := resources.Get \"sass/main.scss\" | css.Sass | resources.Minify | resources.Fingerprint }}\n<link rel=\"stylesheet\" href=\"{{ $style.Permalink }}\">\n```\n\n----------------------------------------\n\nTITLE: Listing All Site Languages with Hugo Sites Method\nDESCRIPTION: This Go HTML template demonstrates how to use the .Sites method to iterate over all available site languages and create a list of links to each language's home page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sites.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Sites }}\n    <li><a href=\"{{ .Home.Permalink }}\">{{ .Title }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Deleting Map Values in Hugo Scratch Pad\nDESCRIPTION: Demonstrates removing values from a map using DeleteInMap method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/NewScratch.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := newScratch }}\n{{ $s.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ $s.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n{{ $s.DeleteInMap \"greetings\" \"english\" }}\n{{ $s.Get \"greetings\" }} → map[french:Bonjour]\n```\n\n----------------------------------------\n\nTITLE: Using Default Function with Set Values in Hugo Templates\nDESCRIPTION: Examples showing the default function returning the second argument when it is set. This includes various types like numbers, strings, dictionaries, slices, and boolean values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Default.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ default 42 1 }} → 1\n{{ default 42 \"foo\" }} → foo\n{{ default 42 (dict \"k\" \"v\") }} → map[k:v]\n{{ default 42 (slice \"a\" \"b\") }} → [a b]\n{{ default 42 true }} → true\n\n<!-- As noted above, the boolean \"false\" is considered set -->\n{{ default 42 false }} → false\n```\n\n----------------------------------------\n\nTITLE: Listing Taxonomy Terms Template\nDESCRIPTION: Go HTML template for listing books in the 'suspense' genre taxonomy.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Taxonomies.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Taxonomies.genres.suspense }}\n    <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Formatting Time with Ordinal Day Representation in Hugo Templates\nDESCRIPTION: Shows how to format a time.Time value with an ordinal day representation using the humanize function in combination with the Format method in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Format.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := \"2023-01-27T23:44:58-08:00\" }}\n{{ $t = time.AsTime $t }}\n\n{{ humanize $t.Day }} of {{ $t.Format \"January 2006\" }} → 27th of January 2023\n```\n\n----------------------------------------\n\nTITLE: Rendering Code Owners in Hugo Template\nDESCRIPTION: Hugo template code to iterate and display code owners for a page\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/CodeOwners.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .CodeOwners }}\n  {{ . }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Determining Slice Length with len Function in Hugo\nDESCRIPTION: Shows how to use the 'len' function to get the length of slices in Hugo templates. It includes examples with a non-empty slice and an empty slice.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/len.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ slice \"a\" \"b\" | len }} → 2\n{{ slice | len }} → 0\n```\n\n----------------------------------------\n\nTITLE: Converting Degrees to Radians Using math.ToRadians in Hugo Templates\nDESCRIPTION: This snippet demonstrates the usage of the math.ToRadians function in Hugo templates. It converts 90 degrees to radians, resulting in approximately 1.5708 radians (π/2).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/ToRadians.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.ToRadians 90 }} → 1.5707963267948966\n```\n\n----------------------------------------\n\nTITLE: Directory Structure Example for Content Adapters\nDESCRIPTION: Shows the typical directory structure for content adapters in a Hugo project, demonstrating where content adapters should be placed relative to other content files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/content-adapters.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── articles/\n│   ├── _index.md\n│   ├── article-1.md\n│   └── article-2.md\n├── books/\n│   ├── _content.gotmpl  <-- content adapter\n│   └── _index.md\n└── films/\n    ├── _content.gotmpl  <-- content adapter\n    └── _index.md\n```\n\n----------------------------------------\n\nTITLE: Adding a Page to a Single Menu in Front Matter\nDESCRIPTION: Demonstrates how to add a page to the 'main' menu using front matter configuration. This creates a simple menu entry accessible via site.Menus.main in templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/menus.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'About'\nmenus = 'main'\n```\n\n----------------------------------------\n\nTITLE: Sorting Hugo Pages by Content Length in Descending Order\nDESCRIPTION: This snippet shows how to sort Hugo pages by content length in descending order using the ByLength function followed by Reverse. It iterates through the sorted pages and displays each page's title as a link.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByLength.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByLength.Reverse }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Abbreviated Commit Hash using GitInfo\nDESCRIPTION: Template code to access the abbreviated hash of the last Git commit for a page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GitInfo.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .GitInfo }}\n  {{ .AbbreviatedHash }} → aab9ec0b3\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Home Page Outputs in Hugo\nDESCRIPTION: Configuration snippet showing how to enable HTML, RSS and JSON output formats for the home page kind in Hugo. The order of formats is significant as the first format becomes the primary output format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/outputs.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[outputs]\nhome = ['html','rss','json']\n```\n\n----------------------------------------\n\nTITLE: Equality Test for True Value\nDESCRIPTION: Template code to filter pages where exclude parameter equals true\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_21\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range where .Site.RegularPages \"Params.exclude\" \"eq\" true }}\n    <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n  {{ end }}\n</ul>\n```\n\nLANGUAGE: html\nCODE:\n```\n<ul>  \n  <li><a href=\"/posts/post-2/\">Post 2</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Correct Return Pattern in Hugo Partial\nDESCRIPTION: Demonstrates the correct way to use a single return statement at the end of a partial template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/return.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $result := false }}\n{{ if math.ModBool . 2 }}\n  {{ $result = \"even\" }}\n{{ else }}\n  {{ $result = \"odd\" }}\n{{ end }}\n{{ return $result }}\n```\n\n----------------------------------------\n\nTITLE: Automatic Summary Generation in Hugo Content\nDESCRIPTION: Example of content where Hugo will automatically generate a summary based on the summaryLength configuration setting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/summaries.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n+++\ntitle: 'Example'\ndate: 2024-05-26T09:10:33-07:00\n+++\n\nThis is the first paragraph.\n\nThis is the second paragraph.\n\nThis is the third paragraph.\n```\n\n----------------------------------------\n\nTITLE: Building Page Collections with Section Method and where Function\nDESCRIPTION: Example of using the Section method with the where function to create a collection of pages from a specific section. This code ranges through all regular pages in the 'lessons' section.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Section.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range where .Site.RegularPages \"Section\" \"lessons\" }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Site Title in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to access the site title property from the Site object in Hugo templates. The Site object provides access to site-level configuration and data.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Site.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Title }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Extended Installation on Gentoo\nDESCRIPTION: Configuration and installation steps for the extended edition of Hugo on Gentoo Linux and its derivatives using USE flags and the Portage package manager.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_8\n\nLANGUAGE: text\nCODE:\n```\nwww-apps/hugo extended\n```\n\nLANGUAGE: sh\nCODE:\n```\nsudo emerge www-apps/hugo\n```\n\n----------------------------------------\n\nTITLE: HTML Output from Rendered Shortcode\nDESCRIPTION: The resulting HTML output after Hugo processes the shortcode, showing how the Inner content is placed within the card structure.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Inner.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-title\">Product Design</div>\n  <div class=\"card-content\">\n    We design the **best** widgets in the world.\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using MD5 Hash for Gravatar Integration in HTML\nDESCRIPTION: Shows how to use the md5 function to generate a Gravatar URL. The example hashes an email address and uses it to construct a Gravatar image URL with size and default image parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/crypto/MD5.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://www.gravatar.com/avatar/{{ md5 \"your@email.com\" }}?s=100&d=identicon\">\n```\n\n----------------------------------------\n\nTITLE: Author Taxonomy Template with Metadata in Hugo\nDESCRIPTION: A specialized taxonomy template for authors that displays custom metadata like affiliation and portrait images. Demonstrates accessing page parameters and resources from branch bundles.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/taxonomy.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n  {{ range .Data.Terms.Alphabetical }}\n    <h2><a href=\"{{ .Page.RelPermalink }}\">{{ .Page.LinkTitle }}</a></h2>\n    <p>Affiliation: {{ .Page.Params.Affiliation }}</p>\n    {{ with .Page.Resources.Get \"portrait.jpg\" }}\n      {{ with .Fill \"100x100\" }}\n        <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"portrait\">\n      {{ end }}\n    {{ end }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using else if for Multiple Conditions in Hugo Templates\nDESCRIPTION: Shows how to chain multiple conditions using else if statements for more complex conditional logic. Demonstrates equality comparison with multiple possible values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/else.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := 12 }}\n{{ if eq $var 6 }}\n  {{ print \"var is 6\" }}\n{{ else if eq $var 7 }}\n  {{ print \"var is 7\" }}\n{{ else if eq $var 42 }}\n  {{ print \"var is 42\" }}\n{{ else }}\n  {{ print \"var is something else\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo CLI Options and Flags\nDESCRIPTION: Comprehensive list of all available command line flags and options for the Hugo build command. Includes options for configuring build behavior, paths, debugging, and site generation settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -b, --baseURL string             hostname (and path) to the root, e.g. https://spf13.com/\n  -D, --buildDrafts                include content marked as draft\n  -E, --buildExpired               include expired content\n  -F, --buildFuture                include content with publishdate in the future\n      --cacheDir string            filesystem path to cache directory\n      --cleanDestinationDir        remove files from destination not found in static directories\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -c, --contentDir string          filesystem path to content directory\n  -d, --destination string         filesystem path to write files to\n      --disableKinds strings       disable different kind of pages (home, RSS etc.)\n      --enableGitInfo              add Git revision, date, author, and CODEOWNERS info to the pages\n  -e, --environment string         build environment\n      --forceSyncStatic           copy all files when static is changed.\n      --gc                         enable to run some cleanup tasks (remove unused cache files) after the build\n  -h, --help                       help for hugo\n      --ignoreCache                ignores the cache directory\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n  -l, --layoutDir string           filesystem path to layout directory\n      --logLevel string            log level (debug|info|warn|error)\n      --minify                     minify any supported output format (HTML, XML etc.)\n      --noBuildLock                don't create .hugo_build.lock file\n      --noChmod                    don't sync permission mode of files\n      --noTimes                    don't sync modification time of files\n      --panicOnWarning             panic on first WARNING log\n      --poll string                set this to a poll interval, e.g --poll 700ms, to use a poll based approach to watch for file system changes\n      --printI18nWarnings          print missing translations\n      --printMemoryUsage           print memory usage to screen at intervals\n      --printPathWarnings          print warnings on duplicate target paths etc.\n      --printUnusedTemplates       print warnings on unused templates.\n      --quiet                      build in quiet mode\n      --renderSegments strings     named segments to render (configured in the segments config)\n  -M, --renderToMemory            render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --templateMetrics            display metrics about template executions\n      --templateMetricsHints       calculate some improvement hints when combined with --templateMetrics\n  -t, --theme strings              themes to use (located in /themes/THEMENAME/)\n      --themesDir string           filesystem path to themes directory\n      --trace file                 write trace to file (not useful in general)\n  -w, --watch                      watch filesystem for changes and recreate as needed\n```\n\n----------------------------------------\n\nTITLE: Rendering Image with Error Handling in Hugo\nDESCRIPTION: Demonstrates how to render an image in a Hugo template, throwing an error if the resource is not found.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image := .Resources.GetMatch \"sunset.jpg\" }}\n<img src=\"{{ $image.RelPermalink }}\" width=\"{{ $image.Width }}\" height=\"{{ $image.Height }}\">\n```\n\n----------------------------------------\n\nTITLE: Fish Completion Command Options\nDESCRIPTION: Available flags specific to the fish completion command.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_fish.md#2025-04-08_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n  -h, --help              help for fish\n      --no-descriptions   disable completion descriptions\n```\n\n----------------------------------------\n\nTITLE: Defining Footer Menu Entries in Hugo Configuration\nDESCRIPTION: This snippet illustrates how to define entries for a 'footer' menu in Hugo's configuration file, including two menu items with name, pageRef, and weight properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/menus.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.footer]]\nname = 'Terms'\npageRef = '/terms'\nweight = 10\n\n[[menus.footer]]\nname = 'Privacy'\npageRef = '/privacy'\nweight = 20\n```\n\n----------------------------------------\n\nTITLE: Formatting Author Date from GitInfo\nDESCRIPTION: Template code to retrieve and format the author date of the last Git commit for a page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GitInfo.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .GitInfo }}\n  {{ .AuthorDate.Format \"2006-01-02\" }} → 2023-10-09\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Unsafe URL in Hugo Templates\nDESCRIPTION: This example demonstrates what happens when trying to render a potentially unsafe URL without declaring it as safe. Hugo replaces the URL with a special 'ZgotmplZ' value to indicate unsafe content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/URL.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $href := \"irc://irc.freenode.net/#golang\" }}\n<a href=\"{{ $href }}\">IRC</a>\n```\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#ZgotmplZ\">IRC</a>\n```\n\n----------------------------------------\n\nTITLE: Unsafe CSS Usage in Hugo Template\nDESCRIPTION: Demonstrates how Hugo handles unsafe CSS content in templates. Without using safe.CSS, Hugo replaces potentially unsafe content with 'ZgotmplZ'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/CSS.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $style := \"color: red;\" }}\n<p style=\"{{ $style }}\">foo</p>\n```\n\nLANGUAGE: html\nCODE:\n```\n<p style=\"ZgotmplZ\">foo</p>\n```\n\n----------------------------------------\n\nTITLE: Using AllTranslations Method in Hugo Templates\nDESCRIPTION: Template code demonstrating how to use the AllTranslations method to create a language switcher menu. The template loops through all translations of the current page and creates links with appropriate language attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/AllTranslations.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .AllTranslations }}\n  <ul>\n    {{ range . }}\n      <li>\n        <a href=\"{{ .RelPermalink }}\" hreflang=\"{{ .Language.LanguageCode }}\">{{ .LinkTitle }} ({{ or .Language.LanguageName .Language.Lang }})</a>\n      </li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Displaying Term Pages Using GetTerms in Hugo Templates\nDESCRIPTION: This code demonstrates how to use the GetTerms function to retrieve taxonomy terms (tags) from a page and display them as a linked list. The function retrieves term pages for the specified taxonomy (\"tags\") and renders them as list items with links to each tag's page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GetTerms.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .GetTerms \"tags\" }}\n  <p>Tags</p>\n  <ul>\n    {{ range . }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Finding Single H2 Element with FindRE in Hugo Templates\nDESCRIPTION: Demonstrates using strings.FindRE with a limit parameter to find only the first h2 element in the rendered Content. The pattern matches h2 tags including those containing newlines.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/FindRe.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ findRE `(?s)<h2.*?>.*?</h2>` .Content 1 }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Nested Menus with Parent References in Hugo Templates\nDESCRIPTION: This Hugo template renders a nested menu structure, displaying each parent menu item and its children. For each child entry, it also shows the parent property value in parentheses, demonstrating how to access the parent property of menu entries.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Parent.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    <li>\n      <a href=\"{{ .URL }}\">{{ .Name }}</a>\n      {{ if .HasChildren }}\n        <ul>\n          {{ range .Children }}\n            <li><a href=\"{{ .URL }}\">{{ .Name }}</a> ({{ .Parent }})</li>\n          {{ end }}\n        </ul>\n      {{ end }}\n    </li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Using Default Function with Unset Values in Hugo Templates\nDESCRIPTION: Examples demonstrating the default function returning the first argument when the second argument is not set (has a falsy value). This shows behavior with zero values, empty strings, and nil values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Default.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ default 42 0 }} → 42\n{{ default 42 \"\" }} → 42\n{{ default 42 dict }} → 42\n{{ default 42 slice }} → 42\n{{ default 42 <nil> }} → 42\n```\n\n----------------------------------------\n\nTITLE: Accessing Default Language Site\nDESCRIPTION: Hugo template code demonstrating how to access and link to the default language site using Sites.Default.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Sites.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.Sites.Default }}\n  <a href=\"{{ .Home.Permalink }}\">{{ .Title }}</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Triggering Content Rendering with Noop Variable\nDESCRIPTION: Demonstrates how to force content rendering to ensure scratch pad values are available in parent templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Store.md#2025-04-08_snippet_9\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $noop := .Content }}\n{{ site.Store.Get \"mykey\" }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Hugo Site Parameters Using Dot Notation\nDESCRIPTION: Demonstrates how to access site parameters using dot notation for valid identifiers, including nested parameters and date formatting\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Params.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Params.subtitle }} → The Best Widgets on Earth\n{{ .Site.Params.author.name }} → John Smith\n\n{{ $layout := .Site.Params.layouts.rfc_1123 }}\n{{ .Site.Lastmod.Format $layout }} → Tue, 17 Oct 2023 13:21:02 PDT\n```\n\n----------------------------------------\n\nTITLE: Advanced Image Cropping with Additional Processing Options\nDESCRIPTION: An advanced example that crops an image to 200x200 pixels from the top right corner, converts it to WebP format, sets quality to 85%, and uses the Lanczos resampling filter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Crop.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Crop \"200x200 topright webp q85 lanczos\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Comparison Example\nDESCRIPTION: Demonstrates how to use the 'like' operator to match string values against a regular expression pattern, returning pages where the parameter matches the pattern.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_9\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where .Site.RegularPages \"Params.author\" \"like\" `(?i)^victor` }}\n```\n\n----------------------------------------\n\nTITLE: Extracting Image Colors in Hugo\nDESCRIPTION: Shows how to extract dominant colors from an image in Hugo using a simple histogram method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_13\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $colors := $image.Colors }}\n```\n\n----------------------------------------\n\nTITLE: Accessing RSS Feed Limit in Hugo Template\nDESCRIPTION: Shows how to access the configured RSS feed item limit from within a Hugo template using the Site.Config.Services path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/services.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Config.Services.RSS.Limit }}\n```\n\n----------------------------------------\n\nTITLE: Equality Test for False Value\nDESCRIPTION: Template code to filter pages where exclude parameter equals false\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_20\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range where .Site.RegularPages \"Params.exclude\" \"eq\" false }}\n    <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n  {{ end }}\n</ul>\n```\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/posts/post-1/\">Post 1</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Sorting Hugo Pages by Weight in Ascending Order\nDESCRIPTION: Demonstrates how to sort Hugo pages by their weight value in ascending order. Pages are sorted based on their front matter weight field, with lighter items appearing first. Unweighted or zero-weighted pages appear at the end.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByWeight.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByWeight }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Time Components with Time.Now Methods\nDESCRIPTION: Demonstrates how to access various components of the current time using time.Now's methods like Year, Weekday, Month, and Unix timestamp.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/time/Now.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ time.Now.Year }}\n{{ time.Now.Weekday.String }}\n{{ time.Now.Month.String }}\n{{ time.Now.Unix }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Page Permalink in Hugo Template\nDESCRIPTION: Template code that demonstrates how to get a page reference using .Site.GetPage and access its permalink. Shows how the baseURL is combined with the page path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Permalink.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $page := .Site.GetPage \"/about\" }}\n{{ $page.Permalink }} → https://example.org/docs/about/\n```\n\n----------------------------------------\n\nTITLE: Comparing Values with compare.Ne Function in Hugo Templates\nDESCRIPTION: Demonstrates the usage of the compare.Ne function in Hugo templates to compare multiple values for inequality. The function returns true if all arguments are not equal to each other, and false otherwise. It can be used with various data types.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Ne.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ ne 1 1 }} → false\n{{ ne 1 2 }} → true\n\n{{ ne 1 1 1 }} → false\n{{ ne 1 1 2 }} → false\n{{ ne 1 2 1 }} → false\n{{ ne 1 2 2 }} → true\n```\n\n----------------------------------------\n\nTITLE: Using Capturing Groups with strings.ReplaceRE in Hugo Templates\nDESCRIPTION: Illustrates how to use capturing groups in the regular expression and reference them in the replacement string using $1, $2, etc.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/ReplaceRE.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := \"http://gohugo.io/docs\" }}\n{{ replaceRE \"^https?://([^/]+).*\" \"$1\" $s }} → gohugo.io\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Site Parameters Configuration\nDESCRIPTION: Example configuration showing how to define custom parameters in Hugo's configuration file, including nested parameters for author details and date layout formats\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Params.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n[params]\n  subtitle = 'The Best Widgets on Earth'\n  copyright-year = '2023'\n  [params.author]\n    email = 'jsmith@example.org'\n    name = 'John Smith'\n  [params.layouts]\n    rfc_1123 = 'Mon, 02 Jan 2006 15:04:05 MST'\n    rfc_3339 = '2006-01-02T15:04:05-07:00'\n```\n\n----------------------------------------\n\nTITLE: Request Headers Configuration\nDESCRIPTION: Examples of adding single and multiple headers to getJSON requests using options map.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetJSON.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict \"Authorization\" \"Bearer abcd\" }}\n{{ $data := getJSON \"https://example.org/books.json\" $opts }}\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict \"X-List\" (slice \"a\" \"b\" \"c\") }}\n{{ $data := getJSON \"https://example.org/books.json\" $opts }}\n```\n\n----------------------------------------\n\nTITLE: Formatting Time Using Hugo Template\nDESCRIPTION: Demonstrates how to parse a time string, convert it to a time.Time object, and format it using a custom layout in a Hugo template. It also shows the output of the formatted time.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/time-layout-string.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := \"2023-01-27T23:44:58-08:00\" }}\n{{ $t = time.AsTime $t }}\n{{ $t = $t.Format \"Jan 02, 2006 3:04 PM Z07:00\" }}\n\n{{ $t }} → Jan 27, 2023 11:44 PM -08:00 \n```\n\n----------------------------------------\n\nTITLE: Installing Babel Dependencies with npm\nDESCRIPTION: Shell commands for installing the required Node.js packages for Babel compilation in Hugo. This installs the Babel core and CLI packages in the project's root directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Babel.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install --save-dev @babel/core @babel/cli\n```\n\n----------------------------------------\n\nTITLE: Converting Octal Values to Integers in Hugo Templates\nDESCRIPTION: Demonstrates converting octal (base 8) values to integers using the int function. Both traditional (leading 0) and modern (0o prefix) notations are supported.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToInt.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ int 011 }} → 9 (int)\n{{ int \"011\" }} → 9 (int)\n\n{{ int 0o11 }} → 9 (int)\n{{ int \"0o11\" }} → 9 (int)\n```\n\n----------------------------------------\n\nTITLE: Hugo Convert to YAML Basic Options\nDESCRIPTION: Available command-specific options for the toYAML conversion command.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_convert_toYAML.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for toYAML\n```\n\n----------------------------------------\n\nTITLE: Using HasMenuCurrent in Hugo Menu Templates\nDESCRIPTION: This snippet demonstrates how to use HasMenuCurrent in a Hugo template to create navigation with active state indicators. It iterates through the main menu and applies different CSS classes based on the current page's relationship to menu items.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/HasMenuCurrent.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $currentPage := . }}\n{{ range site.Menus.main }}\n  {{ if $currentPage.IsMenuCurrent .Menu . }}\n    <a class=\"active\" aria-current=\"page\" href=\"{{ .URL }}\">{{ .Name }}</a>\n  {{ else if $currentPage.HasMenuCurrent .Menu . }}\n    <a class=\"ancestor\" aria-current=\"true\" href=\"{{ .URL }}\">{{ .Name }}</a>\n  {{ else }}\n    <a href=\"{{ .URL }}\">{{ .Name }}</a>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Copyright Notice in Hugo Template\nDESCRIPTION: Demonstrates how to use the .Site.Copyright function in a Hugo template to display the copyright notice defined in the site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Copyright.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Copyright }} → © 2023 ABC Widgets, Inc.\n```\n\n----------------------------------------\n\nTITLE: Importing JSON Parameters in Hugo JavaScript Build\nDESCRIPTION: Demonstrates how to pass parameters from Hugo templates to JavaScript files using js.Build\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/functions/js/options.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $js := resources.Get \"js/main.js\" | js.Build (dict \"params\" (dict \"api\" \"https://example.org/api\")) }}\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as params from '@params';\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Menu Entries with Page References\nDESCRIPTION: Example configuration showing how to define menu entries in Hugo, with both page-associated entries using pageRef and standalone entries using direct URL/name properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Page.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n[[menus.main]]\npageRef = '/about'\nweight = 10\n\n[[menus.main]]\npageRef = '/contact'\nweight = 20\n\n[[menus.main]]\nname = 'Hugo'\nurl = 'https://gohugo.io'\nweight = 30\n```\n\n----------------------------------------\n\nTITLE: Simple Image Transformations with Process Method in Hugo\nDESCRIPTION: Shows how to apply rotation (90 degrees counter-clockwise) and format conversion (to WebP) to an image using the Process method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Process.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{/* Rotate 90 degrees counter-clockwise. */}}\n{{ $image := $image.Process \"r90\" }}\n\n{{/* Convert to WebP. */}}\n{{ $image := $image.Process \"webp\" }}\n```\n\n----------------------------------------\n\nTITLE: Displaying a YouTube Video URL in Hugo\nDESCRIPTION: Example of a YouTube video URL that can be embedded in Hugo content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/youtube.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://www.youtube.com/watch?v=0RKpf3rK57I\n```\n\n----------------------------------------\n\nTITLE: Setting Page-Specific Outputs in Hugo Front Matter\nDESCRIPTION: Front matter configuration demonstrating how to specify JSON as an additional output format for an individual page. This appends to rather than replaces the site's configured outputs.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/outputs.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Example'\noutputs = ['json']\n```\n\n----------------------------------------\n\nTITLE: Hugo Configuration for Multilingual Sites\nDESCRIPTION: Example configuration for a multilingual Hugo site with English as the default language and Spanish as a secondary language, with content organized in language subdirectories.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/RelLangURL.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'en'\ndefaultContentLanguageInSubdir = true\n[languages.en]\nweight = 1\n[languages.es]\nweight = 2\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo on FreeBSD\nDESCRIPTION: Command to install the extended edition of Hugo using FreeBSD's package manager.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/bsd.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nsudo pkg install gohugo\n```\n\n----------------------------------------\n\nTITLE: Creating an Empty Slice using collections.Slice in Hugo\nDESCRIPTION: This snippet shows how to create an empty slice using the collections.Slice function without providing any arguments. The resulting empty slice is assigned to a variable.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Slice.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice }}\n```\n\n----------------------------------------\n\nTITLE: Basic Numeric Comparison with compare.Gt in Hugo Templates\nDESCRIPTION: Examples of using compare.Gt (gt) function to perform greater than comparison on numbers. The function returns true only when the first argument is greater than all subsequent arguments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Gt.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ gt 1 1 }} → false\n{{ gt 1 2 }} → false\n{{ gt 2 1 }} → true\n\n{{ gt 1 1 1 }} → false\n{{ gt 1 1 2 }} → false\n{{ gt 1 2 1 }} → false\n{{ gt 1 2 2 }} → false\n\n{{ gt 2 1 1 }} → true\n{{ gt 2 1 2 }} → false\n{{ gt 2 2 1 }} → false\n```\n\n----------------------------------------\n\nTITLE: Checking Menu Entry Children in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to check if a menu entry has children in Hugo. The .Children method returns a slice of child menu entries, which is useful for creating nested or dropdown menus.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/_index.md#2025-04-08_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n{{ .Children }}\n```\n\n----------------------------------------\n\nTITLE: Getting Sorted Map Values with Site.Store\nDESCRIPTION: Demonstrates retrieving values from a map in sorted order by key.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Store.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ site.Store.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ site.Store.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n{{ site.Store.GetSortedMapValues \"greetings\" }} → [Hello Bonjour]\n```\n\n----------------------------------------\n\nTITLE: Accessing Home Page URL in Hugo Templates\nDESCRIPTION: Demonstrates how to use the Site.Home method to retrieve the full and relative permalinks of the home page in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Home.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Home.Permalink }} → https://example.org/docs/ \n{{ .Site.Home.RelPermalink }} → /docs/\n```\n\n----------------------------------------\n\nTITLE: Using template Function with Defined Templates in Hugo\nDESCRIPTION: Shows how to define a template named 'foo' and execute it with the template function, passing a dictionary with an answer value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/template.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ template \"foo\" (dict \"answer\" 42) }}\n\n{{ define \"foo\" }}\n  {{ printf \"The answer is %v.\" .answer }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating a Grayscale Image Filter in Hugo\nDESCRIPTION: Creates a filter that can be applied to images to convert them to grayscale. The filter is stored in the $filter variable for later use with image processing functions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Grayscale.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Grayscale }}\n```\n\n----------------------------------------\n\nTITLE: Redefining HTML Output Format in Hugo\nDESCRIPTION: Configuration to redefine the HTML output format after modifying its media type settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/media-types.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[outputFormats.html]\nmediaType = 'text/html'\n```\n\n----------------------------------------\n\nTITLE: Configuring Output Format Types in Hugo\nDESCRIPTION: Configuration specifying which output formats to generate for different page kinds.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/output-formats.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[outputs]\nhome = ['html', 'rss', 'atom']\nsection = ['html', 'rss', 'atom']\ntaxonomy = ['html', 'rss', 'atom']\nterm = ['html', 'rss', 'atom']\n```\n\n----------------------------------------\n\nTITLE: Setting Log Level to Display Timer Results in Hugo\nDESCRIPTION: Command line flag to set the log level to 'info' which is required to see the timer results in the console output when building the site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/debug/Timer.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nhugo --logLevel info\n```\n\n----------------------------------------\n\nTITLE: Setting Module Replacements in TOML\nDESCRIPTION: Example of configuring module path replacements for local development, mapping module paths to directories.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/module.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[module]\nreplacements = 'github.com/bep/my-theme -> ../..,github.com/bep/shortcodes -> /some/path'\n```\n\n----------------------------------------\n\nTITLE: Member Comparison with 'in' Operator\nDESCRIPTION: Shows how to use the 'in' operator to check if a value is a member of a slice, returning pages where a parameter matches any value in the provided slice.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $fruit := where site.RegularPages \"Section\" \"eq\" \"fruit\" }}\n\n{{ $colors := slice \"red\" \"yellow\" }}\n{{ $pages := where $fruit \"Params.color\" \"in\" $colors }}\n```\n\n----------------------------------------\n\nTITLE: Using Emoji Shortcodes in Markdown\nDESCRIPTION: Example showing how to include emoji shortcodes in Markdown content. When processed, the shortcode is converted to its HTML entity representation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nHello! :wave:\n```\n\n----------------------------------------\n\nTITLE: Configuring Taxonomies in Hugo\nDESCRIPTION: Example of setting up a 'category' taxonomy in Hugo's configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/lookup-order.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n[taxonomies]\ncategory = 'categories'\n```\n\n----------------------------------------\n\nTITLE: Formatting Time.Now with time.Format\nDESCRIPTION: Shows how to format the current time using the time.Format function with a specific date format string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/time/Now.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ time.Now | time.Format \"Jan 2006\" }}\n```\n\n----------------------------------------\n\nTITLE: Using Path Method in Hugo Templates\nDESCRIPTION: Example of using the Path method on a Page object to obtain the logical path of a page. The method returns the path regardless of content format, language, or URL modifiers.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Path.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Path }} → /posts/post-1\n```\n\n----------------------------------------\n\nTITLE: Casting Values to Boolean Using Double Negation in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the 'not' operator twice in succession to cast any value to its boolean equivalent in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/not.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ 42 | not | not }} → true\n{{ \"\" | not | not }} → false\n```\n\n----------------------------------------\n\nTITLE: Appending Single Element to Slice in Hugo Template\nDESCRIPTION: Demonstrates how to append a single element to an existing slice using the append function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Append.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"a\" \"b\" }}\n{{ $s }} → [a b]\n\n{{ $s = $s | append \"c\" }}\n{{ $s }} → [a b c]\n```\n\n----------------------------------------\n\nTITLE: Rewriting template Function Using Inline Partial Templates in Hugo\nDESCRIPTION: Demonstrates how to rewrite the previous template function example using an inline partial template, which is an alternative approach in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/template.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partial \"inline/foo.html\" (dict \"answer\" 42) }}\n\n{{ define \"partials/inline/foo.html\" }}\n  {{ printf \"The answer is %v.\" .answer }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Slice and Map Values in Hugo Templates\nDESCRIPTION: Shows how to access values from slices and maps using the index function in Hugo templates. This example demonstrates accessing elements by position in a slice and by key in a map.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_11\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $slice := slice \"foo\" \"bar\" \"baz\" }}\n{{ index $slice 2 }} → baz\n\n{{ $map := dict \"a\" \"foo\" \"b\" \"bar\" \"c\" \"baz\" }}\n{{ index $map \"c\" }} → baz\n```\n\n----------------------------------------\n\nTITLE: Using RegularPagesRecursive Method in Hugo Templates\nDESCRIPTION: Example of how to range through page collection retrieved by RegularPagesRecursive and display page titles with their permalinks. This method returns regular pages from the current section and all descendant sections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RegularPagesRecursive.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .RegularPagesRecursive.ByTitle }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing the Pi Constant in Hugo Templates\nDESCRIPTION: Shows how to access the mathematical constant pi (π) in Hugo templates. The math.Pi function returns the value of pi as a float64 (3.141592653589793).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Pi.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Pi }} → 3.141592653589793\n```\n\n----------------------------------------\n\nTITLE: Sorting Hugo Pages by Weight in Descending Order\nDESCRIPTION: Shows how to sort Hugo pages by their weight value in descending order using the Reverse modifier. Heavier items appear first in the sorted collection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByWeight.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByWeight.Reverse }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Implementing 'continue' in Hugo Go HTML Template\nDESCRIPTION: This snippet demonstrates how to use the 'continue' keyword within a range loop in Hugo templates. It iterates over a slice, skipping the element 'bar' and rendering paragraphs for the other elements.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/continue.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"foo\" \"bar\" \"baz\" }}\n{{ range $s }}\n  {{ if eq . \"bar\" }}\n    {{ continue }}\n  {{ end }}\n  <p>{{ . }}</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Matched Data Structure\nDESCRIPTION: JSON representation of the matched data structure showing captured groups.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/FindRESubmatch.md#2025-04-08_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[\n  [\n    \"<a href=\\\"https://example.org\\\"></a>Example</a>\",\n    \"https://example.org\",\n    \"Example\"\n  ],\n  [\n    \"<a href=\\\"https://gohugo.io\\\">Hugo</a>\",\n    \"https://gohugo.io\",\n    \"Hugo\"\n  ]\n]\n```\n\n----------------------------------------\n\nTITLE: Adding Markdown Attributes to Paragraphs in Hugo\nDESCRIPTION: Demonstrates how to add class and id attributes to a paragraph using Markdown attributes in Hugo. Shows both full and shorthand notation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/markdown-attributes.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nThis is a paragraph.\n{class=\"foo bar\" id=\"baz\"}\n```\n\nLANGUAGE: text\nCODE:\n```\nThis is a paragraph.\n{.foo .bar #baz}\n```\n\n----------------------------------------\n\nTITLE: Creating GitHub Workflow Directories\nDESCRIPTION: Commands to create the necessary directory structure and workflow file for GitHub Actions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-github-pages/index.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nmkdir -p .github/workflows\ntouch .github/workflows/hugo.yaml\n```\n\n----------------------------------------\n\nTITLE: Extracting File Extension Using path.Ext in Hugo\nDESCRIPTION: Demonstrates using the path.Ext function to extract the file extension from a path string. The function returns the extension including the dot, or an empty string if no extension exists.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/path/Ext.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ path.Ext \"a/b/c/news.html\" }} → .html\n```\n\n----------------------------------------\n\nTITLE: Using Name Method for Error Reporting in Hugo Shortcodes\nDESCRIPTION: This snippet demonstrates how to use the Name method to provide a helpful error message when a shortcode is missing required arguments. It checks for a 'greeting' parameter and throws an error with the shortcode name if not found.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Name.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $greeting := \"\" }}\n{{ with .Get \"greeting\" }}\n  {{ $greeting = . }}\n{{ else }}\n  {{ errorf \"The %q shortcode requires a 'greeting' argument. See %s\" .Name .Position }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using math.Floor in Hugo Templates\nDESCRIPTION: Demonstrates using the math.Floor function to round down a decimal number to the nearest integer. The function takes a float value and returns the largest integer less than or equal to that value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Floor.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Floor 1.9 }} → 1\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Integer Sequence with Multiplication\nDESCRIPTION: Shows how to use the seq function in a practical example where a sequence is generated and used in a range loop to calculate the product of the numbers.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Seq.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $product := 1 }}\n{{ range seq 4 }}\n  {{ $product = mul $product . }}\n{{ end }}\n{{ $product }} → 24\n```\n\n----------------------------------------\n\nTITLE: Using RelRef Method in Hugo Templates with Different Options\nDESCRIPTION: Examples demonstrating how to use the RelRef method to generate relative URLs in Hugo templates with various options including path, language, and output format specifications.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/RelRef.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict \"path\" \"/books/book-1\" }}\n{{ .RelRef $opts }} → /en/books/book-1/\n\n{{ $opts := dict \"path\" \"/books/book-1\" \"lang\" \"de\" }}\n{{ .RelRef $opts }} → /de/books/book-1/\n\n{{ $opts := dict \"path\" \"/books/book-1\" \"lang\" \"de\" \"outputFormat\" \"json\" }}\n{{ .RelRef $opts }} → /de/books/book-1/index.json\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Languages in Hugo\nDESCRIPTION: Example site configuration demonstrating how to set up multiple languages in Hugo with German as the default language and English as an additional language. The configuration sets language codes, names, titles, and weights for each language.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/IsMultilingual.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'de'\ndefaultContentLanguageInSubdir = true\n[languages]\n  [languages.de]\n    languageCode = 'de-DE'\n    languageName = 'Deutsch'\n    title = 'Projekt Dokumentation'\n    weight = 1\n  [languages.en]\n    languageCode = 'en-US'\n    languageName = 'English'\n    title = 'Project Documentation'\n    weight = 2\n```\n\n----------------------------------------\n\nTITLE: Using strings.Chomp (chomp) to Remove Trailing Newlines in Hugo Templates\nDESCRIPTION: Demonstrates how the chomp function removes trailing newline characters (\\n) and carriage returns (\\r\\n) from strings in Hugo templates. The function processes both single and multiple trailing newlines.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Chomp.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ chomp \"foo\\n\" }} → foo\n{{ chomp \"foo\\n\\n\" }} → foo\n\n{{ chomp \"foo\\r\\n\" }} → foo\n{{ chomp \"foo\\r\\n\\r\\n\" }} → foo\n```\n\n----------------------------------------\n\nTITLE: Accessing Menu Entry Name in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to access the name of a menu entry in Hugo templates. The .Name method returns the name of the menu entry as defined in the site configuration or front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{ .Name }}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Key with Site.Store\nDESCRIPTION: Shows how to completely remove a key from the scratch pad.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Store.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ site.Store.Set \"greeting\" \"Hello\" }}\n{{ site.Store.Delete \"greeting\" }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Image with Width and Height in Hugo\nDESCRIPTION: Shows how to create an HTML img element with explicit width and height attributes using resource dimensions. Combines both Width and Height methods for proper image sizing.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Height.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Image Dimensions with images.Config in Hugo Templates\nDESCRIPTION: Demonstrates how to use the images.Config function to get the width and height of an image file. The function takes a path parameter relative to the working directory and returns an image.Config structure with Width and Height properties as integers.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Config.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $ic := images.Config \"/static/images/a.jpg\" }}\n\n{{ $ic.Width }} → 600 (int)\n{{ $ic.Height }} → 400 (int)\n```\n\n----------------------------------------\n\nTITLE: Creating Light Text on Dark Background\nDESCRIPTION: Shows how to create a text box using the lightest and darkest dominant colors from an image for contrast.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Colors.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ $darkest := index (sort .Colors \"Luminance\") 0 }}\n  {{ $lightest := index (sort .Colors \"Luminance\" \"desc\") 0 }}\n  <div style=\"background: {{ $darkest }};\">\n    <div style=\"color: {{ $lightest }};\">\n      <p>This is light text on a dark background.</p>\n    </div>\n  </div>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring MainSections in Hugo Configuration\nDESCRIPTION: Defines the main sections of a Hugo site in the configuration file. This sets 'books' and 'films' as the primary sections that can be accessed via .Site.MainSections in templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/MainSections.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmainSections = ['books','films']\n```\n\n----------------------------------------\n\nTITLE: Publishing a Hugo Site\nDESCRIPTION: Command to publish a Hugo site, generating the static site files without including draft, future, or expired content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/quick-start.md#2025-04-08_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nhugo\n```\n\n----------------------------------------\n\nTITLE: String Comparison Examples\nDESCRIPTION: Demonstrates how to compare string values using equality (eq) and inequality (ne) operators with collections.Where.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where .Site.RegularPages \"Section\" \"eq\" \"books\" }}\n{{ $pages := where .Site.RegularPages \"Section\" \"ne\" \"books\" }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Site Menus\nDESCRIPTION: Configuration example showing how to define multiple menus (main and footer) with page references, names, and weights for ordering in Hugo's configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Menus.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nname = 'Home'\npageRef = '/'\nweight = 10\n\n[[menus.main]]\nname = 'Books'\npageRef = '/books'\nweight = 20\n\n[[menus.main]]\nname = 'Films'\npageRef = '/films'\nweight = 30\n\n[[menus.footer]]\nname = 'Legal'\npageRef = '/legal'\nweight = 10\n\n[[menus.footer]]\nname = 'Privacy'\npageRef = '/privacy'\nweight = 20\n```\n\n----------------------------------------\n\nTITLE: Checking if Menu Entry is Current Page in Hugo\nDESCRIPTION: This snippet illustrates how to determine if a menu entry corresponds to the current page in Hugo. The .IsMenuCurrent method returns a boolean indicating whether the entry matches the current page in the specified menu.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/_index.md#2025-04-08_snippet_8\n\nLANGUAGE: go\nCODE:\n```\n{{ .IsMenuCurrent \"main\" . }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Logical Path Tree Representation\nDESCRIPTION: Shows how the same content structure is represented as a logical tree in Hugo, which is what the Path method and related functions operate on.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Path.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n└── s1/\n    ├── p1\n    └── p2 \n```\n\n----------------------------------------\n\nTITLE: Correct Context Usage Example\nDESCRIPTION: Shows the correct way to reference the original context using $ when using InSection within a with block.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/InSection.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.GetPage \"/auctions\" }}\n  {{ $.InSection . }} → true\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Inspecting Fragments.Headings Data Structure in Hugo Templates\nDESCRIPTION: Demonstrates how to use the debug.Dump function to inspect the Fragments.Headings data structure, which contains a slice of maps for all headings on the page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Fragments.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre>{{ debug.Dump .Fragments.Headings }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Formatting Commit Date from GitInfo\nDESCRIPTION: Template code to retrieve and format the commit date of the last Git commit for a page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GitInfo.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .GitInfo }}\n  {{ .CommitDate.Format \"2006-01-02\" }} → 2023-10-09\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Applying Multiple Image Filters in Hugo\nDESCRIPTION: Shows how to apply multiple filters (grayscale and gaussian blur) to an image resource using a slice of filters. The filters are executed sequentially from left to right.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Filter.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filters := slice\n  images.Grayscale\n  (images.GaussianBlur 8)\n}}\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with images.Filter $filters . }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Raw Map Values in Hugo Scratch Pad\nDESCRIPTION: Shows how to access the raw backing map using the Values method. Not recommended with Store methods on Page objects due to concurrency issues.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/NewScratch.md#2025-04-08_snippet_9\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := newScratch }}\n{{ $s.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ $s.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n\n{{ $map := $s.Values }}\n```\n\n----------------------------------------\n\nTITLE: Output of os.ReadDir in Hugo\nDESCRIPTION: Shows the HTML output produced by the os.ReadDir function when used in a Hugo template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/ReadDir.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nabout.md → false\ncontact.md → false\nnews → true\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output with Fingerprinted Resource\nDESCRIPTION: Shows the rendered HTML output after Hugo processes the fingerprint template. Demonstrates the final script tag with the hashed filename and SRI integrity attribute.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/Fingerprint.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"/js/main.62e...df1.js\" integrity=\"sha256-Yuh...rfE=\" crossorigin=\"anonymous\"></script>\n```\n\n----------------------------------------\n\nTITLE: Minifying CSS Resource with Hugo Template\nDESCRIPTION: Example showing how to get a CSS resource and minify it using Hugo's resource manipulation pipeline. The code first retrieves a CSS file using resources.Get and then pipes it through the minify function to create a compressed version.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/Minify.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $css := resources.Get \"css/main.css\" }}\n{{ $style := $css | minify }}\n```\n\n----------------------------------------\n\nTITLE: Trimming Characters with strings.Trim in Hugo Templates\nDESCRIPTION: Example showing how to use strings.Trim to remove specified leading and trailing characters from a string. The function takes two parameters: the input string and a cutset of characters to remove from both ends.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Trim.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ trim \"++foo--\" \"+-\" }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Analytics in Hugo\nDESCRIPTION: Shows how to configure the Google Analytics service in Hugo's configuration file. This snippet sets up the Google tag ID needed for Google Analytics integration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Config.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[services.googleAnalytics]\nid = 'G-XXXXXXXXX'\n```\n\n----------------------------------------\n\nTITLE: Hugo Module Get Inherited Options\nDESCRIPTION: Options inherited from parent commands that can be used with 'hugo mod get', including configuration, build environment, and logging options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_get.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Hugo Template - Get BaseFileName\nDESCRIPTION: Template code to safely access the BaseFileName property of a File object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .File }}\n  {{ .BaseFileName }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Terminating 'define' Statement in Hugo Templates\nDESCRIPTION: Shows how to use 'end' to terminate a 'define' statement in Hugo templates. This example defines a section named 'main' with a print statement.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/end.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  {{ print \"this is the main section\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Basic Highlight Shortcode Usage\nDESCRIPTION: Shows the basic syntax and arguments for using the highlight shortcode in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/highlight.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{{</* highlight LANG OPTIONS */>}}\nCODE\n{{</* /highlight */>}}\n```\n\n----------------------------------------\n\nTITLE: Applying Image Filters in Hugo\nDESCRIPTION: Demonstrates how to apply one or more filters to an image in Hugo, including a functional style using pipes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_12\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image := $image.Filter (images.GaussianBlur 6) (images.Pixelate 8) }}\n\n{{ $image := $image | images.Filter (images.GaussianBlur 6) (images.Pixelate 8) }}\n\n{{ $filters := slice  (images.GaussianBlur 6) (images.Pixelate 8) }}\n{{ $image1 := $image1.Filter $filters }}\n{{ $image2 := $image2.Filter $filters }}\n```\n\n----------------------------------------\n\nTITLE: Iterating Through All Pages with Hugo's Site.AllPages Method\nDESCRIPTION: This snippet demonstrates how to use the Site.AllPages method to loop through all pages in a Hugo site across all languages, creating a link to each page using its relative permalink and link title.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/AllPages.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Site.AllPages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Calculating Resource Content Size in Hugo Templates\nDESCRIPTION: Shows how to get the size of a resource's content in bytes by piping the Content method result to the len function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Content.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"quotations/kipling.txt\" }}\n  {{ .Content | len }} → 42\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Escaping Special Characters with transform.HTMLEscape in Hugo Templates\nDESCRIPTION: Demonstrates the usage of the transform.HTMLEscape function (aliased as htmlEscape) to escape special characters in strings. The function replaces characters like &, <, >, ', and \" with their corresponding HTML entities.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/HTMLEscape.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ htmlEscape \"Lilo & Stitch\" }} → Lilo &amp; Stitch\n{{ htmlEscape \"7 > 6\" }} → 7 &gt; 6\n```\n\n----------------------------------------\n\nTITLE: Rendering Menu Entries Sorted by Weight in Hugo Templates\nDESCRIPTION: Hugo template code that renders menu entries sorted by weight, name, and identifier using the ByWeight method. This is the default sort order for Hugo menus.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/ByWeight.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main.ByWeight }}\n    <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Defining Site Parameters in Hugo Configuration\nDESCRIPTION: Demonstrates how to define a user parameter 'display_toc' in the Hugo configuration file. This parameter can then be accessed in templates using the Site.Param method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Param.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[params]\ndisplay_toc = true\n```\n\n----------------------------------------\n\nTITLE: Generating Resource Permalink in Hugo Templates\nDESCRIPTION: Demonstrates how to use the Permalink method on a resource object to publish it and get its public URL. The example shows retrieving an image resource and accessing its permalink which returns the full public URL.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Permalink.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ .Permalink }} → https://example.org/images/a.jpg\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring YouTube Privacy Settings in Hugo\nDESCRIPTION: Shows how to disable the built-in YouTube shortcode in Hugo's privacy configuration. This can be used to enhance privacy by preventing YouTube content from loading.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Config.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[privacy.youtube]\ndisable = true\n```\n\n----------------------------------------\n\nTITLE: Creating an Image Contrast Filter in Hugo Templates\nDESCRIPTION: Creates an image filter that reduces the contrast of an image by 20%. The percentage parameter must be in the range [-100, 100], where 0 has no effect.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Contrast.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Contrast -20 }}\n```\n\n----------------------------------------\n\nTITLE: Using path.BaseName Function in Hugo Templates\nDESCRIPTION: Examples of using the path.BaseName function to extract the basename from different path formats. This function replaces path separators with slashes and returns the last element of the path without its extension.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/path/BaseName.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ path.BaseName \"a/news.html\" }} → news\n{{ path.BaseName \"news.html\" }} → news\n{{ path.BaseName \"a/b/c\" }} → c\n{{ path.BaseName \"/x/y/z/\" }} → z\n{{ path.BaseName \"\" }} → .\n```\n\n----------------------------------------\n\nTITLE: Building Hugo Site with Draft and Future Content\nDESCRIPTION: Demonstrates how to build a Hugo site including draft, expired, and future content using command line flags.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/usage.md#2025-04-08_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nhugo --buildDrafts    # or -D\nhugo --buildExpired   # or -E\nhugo --buildFuture    # or -F\n```\n\n----------------------------------------\n\nTITLE: Merging Maps in Order $m1, $m2, $m3\nDESCRIPTION: Demonstrates merging three maps in sequence from $m1 to $m3, showing how later maps' values override earlier ones for the same keys.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Merge.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $merged := merge $m1 $m2 $m3 }}\n\n{{ $merged.x }}   → baz\n{{ $merged.y }}   → wobble\n{{ $merged.z.a }} → huey\n```\n\n----------------------------------------\n\nTITLE: Custom Reading Time Calculation in Hugo Templates\nDESCRIPTION: This snippet shows how to calculate a custom reading time by dividing the word count by a language-specific reading speed parameter, then rounding up to the nearest minute.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/ReadingTime.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $readingTime := div (float .WordCount) .Site.Params.reading_speed }}\n{{ $readingTime = math.Ceil $readingTime }}\n```\n\n----------------------------------------\n\nTITLE: Running Hugo Development Server\nDESCRIPTION: Shows how to start Hugo's development server for viewing and testing the site locally.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/usage.md#2025-04-08_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nhugo server\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Parameters in Hugo Templates\nDESCRIPTION: Demonstrates equivalent ways to access page parameters at the top level of a template when a Page object is in context.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/global/page.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Params.foo }}\n{{ .Page.Params.foo }}\n{{ page.Params.foo }}\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo from Master Branch\nDESCRIPTION: Command to build and install Hugo extended edition from the latest commit on master branch.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/development.md#2025-04-08_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nCGO_ENABLED=1 go install -tags extended github.com/gohugoio/hugo@master\n```\n\n----------------------------------------\n\nTITLE: Setting Translation Key in Hugo Front Matter\nDESCRIPTION: Front matter example showing how to set a translation key that links related content across different languages regardless of filenames.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ntranslationKey: \"about\"\n```\n\n----------------------------------------\n\nTITLE: Headless Page Configuration\nDESCRIPTION: Configuration for creating an unpublished headless page with controlled resource publishing.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/build-options.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Headless page'\n[build]\n  list = 'never'\n  publishResources = false\n  render = 'never'\n```\n\n----------------------------------------\n\nTITLE: Using Kind Function in Hugo Template\nDESCRIPTION: This snippet demonstrates how to use the Kind function within a Hugo template to retrieve the kind of the current page. It's a simple one-line code that outputs the page kind as a string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Kind.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Kind }}\n```\n\n----------------------------------------\n\nTITLE: Generated HTML Structure for Table of Contents in Hugo\nDESCRIPTION: Shows the HTML structure generated by Hugo for a table of contents using the Fragments.ToHTML method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Fragments.md#2025-04-08_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<nav id=\"TableOfContents\">\n  <ol>\n    <li><a href=\"#section-1\">Section 1</a>\n      <ol>\n        <li><a href=\"#section-11\">Section 1.1</a></li>\n        <li><a href=\"#section-12\">Section 1.2</a></li>\n      </ol>\n    </li>\n    <li><a href=\"#section-2\">Section 2</a></li>\n  </ol>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Title in Hugo Partial Template\nDESCRIPTION: Demonstrates how to consistently access the page title within a partial template using .Page.Title notation, which works regardless of whether the partial is called from a shortcode or page template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Page.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\nThe page title is: {{ .Page.Title }}\n```\n\n----------------------------------------\n\nTITLE: Checking Sitemap Disable Status in Hugo Templates\nDESCRIPTION: Shows how to check if a page is disabled in the sitemap using the Disable property in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sitemap.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Sitemap.Disable }}\n```\n\n----------------------------------------\n\nTITLE: Modified Content Types Configuration\nDESCRIPTION: Example of customizing Hugo's content types configuration to change resource type assignments and publication behavior.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/content-types.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncontentTypes:\n  text/asciidoc: {}\n  text/markdown: {}\n  text/org: {}\n  text/pandoc: {}\n  text/rst: {}\n```\n\n----------------------------------------\n\nTITLE: Specifying Regular Expressions with Raw String Literals in Go\nDESCRIPTION: This snippet demonstrates the use of raw string literals (backticks) for specifying regular expressions in Go. Raw string literals simplify the syntax by avoiding the need to escape backslashes, which is necessary when using interpreted string literals (double quotes).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/functions/regular-expressions.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n`regular expression here`\n```\n\n----------------------------------------\n\nTITLE: Unmarshaling Global Resource in Hugo\nDESCRIPTION: Demonstrates how to unmarshal JSON data from a global resource file located in the assets directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Unmarshal.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := dict }}\n{{ $path := \"data/books.json\" }}\n{{ with resources.Get $path }}\n  {{ with . | transform.Unmarshal }}\n    {{ $data = . }}\n  {{ end }}\n{{ else }}\n  {{ errorf \"Unable to get global resource %q\" $path }}\n{{ end }}\n\n{{ range where $data \"author\" \"Victor Hugo\" }}\n  {{ .title }} → Les Misérables\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Content Directory Structure\nDESCRIPTION: Shows a typical Hugo content directory structure with different resource types including pages and images.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/ResourceType.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── lessons/\n│   ├── lesson-1/\n│   │   ├── _objectives.md  <-- resource type = page\n│   │   ├── _topics.md      <-- resource type = page\n│   │   ├── _example.jpg    <-- resource type = image\n│   │   └── index.md\n│   └── _index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Example README.md Content for os.ReadFile\nDESCRIPTION: Sample content of a README.md file that will be read by the os.ReadFile function. This markdown file contains bold text formatting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/ReadFile.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nThis is **bold** text.\n```\n\n----------------------------------------\n\nTITLE: Displaying the Last 10 Pages with collections.Last in Hugo\nDESCRIPTION: This snippet demonstrates how to render the last 10 pages from a collection using collections.Last in a Hugo template. It iterates through the resulting subset and renders each page using the 'summary' template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Last.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range last 10 .Pages }}\n  {{ .Render \"summary\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Directory Structure Example\nDESCRIPTION: Shows the content directory structure with different front matter configurations for exclude parameter\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_19\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── posts/\n│   ├── _index.md\n│   ├── post-1.md  <-- front matter: exclude = false\n│   ├── post-2.md  <-- front matter: exclude = true\n│   └── post-3.md  <-- front matter: exclude not defined\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Using path.Split in Hugo Templates\nDESCRIPTION: Demonstrates the usage of path.Split function to separate paths into directory and file components. The function returns a DirFile object containing Dir and File properties. When there's no slash in the path, Dir returns empty string while File contains the entire path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/path/Split.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $dirFile := path.Split \"a/news.html\" }}\n{{ $dirFile.Dir }} → a/\n{{ $dirFile.File }} → news.html\n\n{{ $dirFile := path.Split \"news.html\" }}\n{{ $dirFile.Dir }} → \"\" (empty string)\n{{ $dirFile.File }} → news.html\n\n{{ $dirFile := path.Split \"a/b/c\" }}\n{{ $dirFile.Dir }} → a/b/\n{{ $dirFile.File }} → c\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Animal Bird Emoji Shortcodes\nDESCRIPTION: Markdown table listing emoji shortcodes for various birds\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | ico | shortcode | |\n| - | :-: | - | :-: | - | - |\n| [top](#animals--nature) | :turkey: | `:turkey:` | :chicken: | `:chicken:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: YouTube Shortcode with Multiple Parameters\nDESCRIPTION: Advanced example of the youtube shortcode with start and end time parameters, video ID, and lazy loading option.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/youtube.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n{{</* youtube id=0RKpf3rK57I start=30 end=60 loading=lazy */>}}\n```\n\n----------------------------------------\n\nTITLE: Converting Duration to Milliseconds in Hugo Templates\nDESCRIPTION: Demonstrates how to parse a duration string and convert it to milliseconds using the Milliseconds method. The example parses '3.5h2.5m1.5s' which equals 12,751,500 milliseconds.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/duration/Milliseconds.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $d = time.ParseDuration \"3.5h2.5m1.5s\" }}\n{{ $d.Milliseconds }} → 12751500\n```\n\n----------------------------------------\n\nTITLE: Hugo Page Template with Go Template Functions\nDESCRIPTION: YAML frontmatter template that uses Go templating to generate page titles by replacing hyphens with spaces in the content base name. Includes empty fields for description, categories, keywords and function/method specifications.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/archetypes/methods.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: {{ replace .File.ContentBaseName \"-\" \" \" | title }}\ndescription:\ncategories: []\nkeywords: []\nparams:\n  functions_and_methods:\n    returnType:\n    signatures: []\n---\n```\n\n----------------------------------------\n\nTITLE: Grouping Pages by Event Date in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the GroupByParamDate function to group pages by their eventDate parameter, formatting the output by year and month.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByParamDate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByParamDate \"eventDate\" \"January 2006\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Rendering GitHub README Content in Hugo\nDESCRIPTION: Demonstrates how to fetch a GitHub repository's README using the API, decode the base64-encoded content, and render it as markdown. This snippet includes error handling and uses the resources.GetRemote, transform.Unmarshal, base64Decode, and markdownify functions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/encoding/Base64Decode.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://api.github.com/repos/gohugoio/hugo/readme\" }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ errorf \"%s\" . }}\n  {{ else with .Value }}\n    {{ with . | transform.Unmarshal }}\n      {{ .content | base64Decode | markdownify }}\n    {{ end }}\n  {{ else }}\n    {{ errorf \"Unable to get remote resource %q\" $url }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Implementing Error Reporting with Position Method in Hugo Shortcode\nDESCRIPTION: This snippet demonstrates how to use the Position method in a Hugo shortcode to generate an error message when a required 'greeting' argument is missing. It checks for the presence of the argument and uses errorf to display the error message along with the shortcode's position.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Position.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $greeting := \"\" }}\n{{ with .Get \"greeting\" }}\n  {{ $greeting = . }}\n{{ else }}\n  {{ errorf \"The %q shortcode requires a 'greeting' argument. See %s\" .Name .Position }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Content Directory Structure Example\nDESCRIPTION: Illustrates a sample Hugo content directory structure showing posts and index files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/global/page.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── posts/\n│   ├── post-1.md\n│   ├── post-2.md\n│   └── post-3.md\n└── _index.md      <-- title is \"My Home Page\"\n```\n\n----------------------------------------\n\nTITLE: Color Sorting Examples in Hugo\nDESCRIPTION: Shows different ways to sort colors by dominance and luminance using Hugo template functions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Colors.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Colors | collections.Reverse }}\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range sort .Colors \"Luminance\" }}\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range sort .Colors \"Luminance\" | collections.Reverse }}\n{{ range sort .Colors \"Luminance\" \"desc\" }}\n```\n\n----------------------------------------\n\nTITLE: Creating Comments in Hugo Templates\nDESCRIPTION: Examples of inline and block comments in Hugo templates. Comments are not parsed, executed, or displayed in the final output.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_17\n\nLANGUAGE: text\nCODE:\n```\n{{/* This is an inline comment. */}}\n{{- /* This is an inline comment with adjacent whitespace removed. */ -}}\n```\n\n----------------------------------------\n\nTITLE: Limiting and Iterating Over Pages in Hugo Go HTML Template\nDESCRIPTION: This snippet demonstrates how to use the Limit function to retrieve the first 3 pages from a collection and iterate over them to display their titles and links. It's commonly used in Hugo templates to create limited lists of content, such as recent posts or featured articles.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/Limit.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.Limit 3 }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Debug Output for Weighted Pages\nDESCRIPTION: Shows how to inspect the weighted pages data structure using the debug.Dump function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Get.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre>{{ debug.Dump $weightedPages }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Hugo Site Directory Structure\nDESCRIPTION: Illustrates the typical directory structure of a built Hugo site in the 'public' directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/usage.md#2025-04-08_snippet_10\n\nLANGUAGE: text\nCODE:\n```\npublic/\n├── categories/\n│   ├── index.html\n│   └── index.xml  <-- RSS feed for this section\n├── posts/\n│   ├── my-first-post/\n│   │   └── index.html\n│   ├── index.html\n│   └── index.xml  <-- RSS feed for this section\n├── tags/\n│   ├── index.html\n│   └── index.xml  <-- RSS feed for this section\n├── index.html\n├── index.xml      <-- RSS feed for the site\n└── sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Printing Arguments with fmt.Print in Hugo Templates\nDESCRIPTION: Demonstrates the usage of fmt.Print function in Hugo templates to print various types of arguments. It shows examples of printing single strings, multiple strings, and a slice of integers.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Print.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ print \"foo\" }} → foo\n{{ print \"foo\" \"bar\" }} → foobar\n{{ print (slice 1 2 3) }} → [1 2 3]\n```\n\n----------------------------------------\n\nTITLE: Generating Multi-language Navigation Links\nDESCRIPTION: Hugo template code that generates an unordered list of links to home pages for all configured language sites.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Sites.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Sites }}\n    <li><a href=\"{{ .Home.Permalink }}\">{{ .Title }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Generating xxHash Using Hugo Template\nDESCRIPTION: Demonstrates how to use the hash.XxHash function to generate a 64-bit xxHash value from a string input. The function returns a hexadecimal string representation of the hash.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hash/XxHash.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hash.XxHash \"Hello world\" }} → c500b0c912b376d8\n```\n\n----------------------------------------\n\nTITLE: Accessing LinkTitle in Hugo Template\nDESCRIPTION: Demonstrates how to access the LinkTitle of a page in a Hugo template. This will return 'Dessert recipes' based on the previous front matter example.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/LinkTitle.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .LinkTitle }} → Dessert recipes\n```\n\n----------------------------------------\n\nTITLE: Creating an Invert Filter in Hugo Templates\nDESCRIPTION: Creates an image filter that negates all colors in an image. This filter inverts each color channel, turning dark areas light and light areas dark.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Invert.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Invert }}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Hugo Content Structure and Page Kinds\nDESCRIPTION: A text representation of a typical Hugo content directory structure showing different page kinds, where only the root _index.md file has a 'home' kind.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsHome.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── books/\n│   ├── book-1/\n│   │   └── index.md  <-- kind = page\n│   ├── book-2.md     <-- kind = page\n│   └── _index.md     <-- kind = section\n└── _index.md         <-- kind = home\n```\n\n----------------------------------------\n\nTITLE: Configuring Title Transformations in Hugo (TOML)\nDESCRIPTION: Shows how to disable automatic capitalization and pluralization of list titles in Hugo's configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Title.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\ncapitalizeListTitles = false\npluralizeListTitles = false\n```\n\n----------------------------------------\n\nTITLE: Accessing Language Property in Hugo Templates\nDESCRIPTION: Retrieves the language tag ('Lang') from the site's language object. This returns the language tag as defined by RFC 5646.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Language.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Language.Lang }} → de\n```\n\n----------------------------------------\n\nTITLE: Output of math.Counter with warnf in Hugo\nDESCRIPTION: Shows the console output when using math.Counter with warnf. Each call to the counter produces an incremented value (1, 2, 3), demonstrating its auto-incrementing behavior.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Counter.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nWARN  single.html called 1 times\nWARN  single.html called 2 times\nWARN  single.html called 3 times\n```\n\n----------------------------------------\n\nTITLE: Example Hugo Content Structure\nDESCRIPTION: Shows a sample content directory structure demonstrating the organization of content files and sections in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GetPage.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── works/\n│   ├── paintings/\n│   │   ├── _index.md\n│   │   ├── starry-night.md\n│   │   └── the-mona-lisa.md\n│   ├── sculptures/\n│   │   ├── _index.md\n│   │   ├── david.md\n│   │   └── the-thinker.md\n│   └── _index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Hugo Variable Syntax\nDESCRIPTION: Shows the basic syntax for declaring variables in Hugo templates using the $ symbol prefix. Variables can represent any data type and must be initialized within template actions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/variable.md#2025-04-08_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n$foo\n```\n\nLANGUAGE: hugo\nCODE:\n```\n$bar\n```\n\n----------------------------------------\n\nTITLE: Calculating Absolute Value with math.Abs in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the math.Abs function to get the absolute value of a number in Hugo templates. The function takes a numeric value as input and returns its absolute value as a float64.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Abs.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Abs -2.1 }} → 2.1\n```\n\n----------------------------------------\n\nTITLE: Custom Date Comparison with TOML Dates\nDESCRIPTION: Demonstrates how to compare custom front matter dates from TOML (as time.Time values) with now to filter future events.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_12\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $events := where .Site.RegularPages \"Type\" \"events\" }}\n{{ $futureEvents := where $events \"Params.eventDate\" \"gt\" now }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving MainSections in Hugo Template\nDESCRIPTION: Demonstrates how to access the main sections defined in site configuration using .Site.MainSections, which returns an array of section names.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/MainSections.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.MainSections }} → [books films]\n```\n\n----------------------------------------\n\nTITLE: Using Nested Shortcodes in Hugo Content Files\nDESCRIPTION: Example of how to use nested shortcodes in a markdown content file. The gallery shortcode contains two img shortcodes, demonstrating parent-child relationship, followed by a standalone img shortcode.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_14\n\nLANGUAGE: text\nCODE:\n```\n{{</* gallery class=\"content-gallery\" */>}}\n  {{</* img src=\"/images/one.jpg\" */>}}\n  {{</* img src=\"/images/two.jpg\" */>}}\n{{</* /gallery */>}}\n{{</* img src=\"/images/three.jpg\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Goldmark Parser for Anchorize Function in Hugo\nDESCRIPTION: This snippet shows how to configure the Goldmark Markdown parser in Hugo to control the sanitizing logic used by the urls.Anchorize function and for generating heading IDs. The 'autoHeadingIDType' setting determines the sanitization method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/Anchorize.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[markup.goldmark.parser]\nautoHeadingIDType = 'github'\n```\n\n----------------------------------------\n\nTITLE: Example Hugo Content File with Shortcode and Markdown\nDESCRIPTION: This snippet shows a sample Hugo content file that includes both a shortcode and Markdown content. It's used to demonstrate how RenderShortcodes processes the content, rendering the shortcode while preserving the surrounding Markdown.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RenderShortcodes.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n+++\ntitle = 'About'\ndate = 2023-10-07T12:28:33-07:00\n+++\n\n{{</* ref \"privacy\" */>}}\n\nAn *emphasized* word.\n```\n\n----------------------------------------\n\nTITLE: Configuring X Privacy Settings in Hugo\nDESCRIPTION: Shows the configuration options for X privacy settings in Hugo's configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/x.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nprivacy:\n  x:\n    disable: false\n    enableDNT: false\n    simple: false\n```\n\n----------------------------------------\n\nTITLE: Defining Keywords in Hugo Front Matter\nDESCRIPTION: Example of how to define keywords in a content file's front matter using TOML format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Keywords.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'How to make spicy tuna hand rolls'\nkeywords = ['tuna','sriracha','nori','rice']\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Title in Descending Order with Hugo\nDESCRIPTION: This snippet shows how to sort pages by title in descending order using the ByTitle method followed by Reverse. It creates a list of linked titles sorted from Z to A.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByTitle.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByTitle.Reverse }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Deleting Map Values with hugo.Store in Hugo Templates\nDESCRIPTION: Shows how to remove a specific key-value pair from a map in hugo.Store using the DeleteInMap method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/Store.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.Store.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ hugo.Store.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n{{ hugo.Store.DeleteInMap \"greetings\" \"english\" }}\n{{ hugo.Store.Get \"greetings\" }} → map[french:Bonjour]\n```\n\n----------------------------------------\n\nTITLE: Sass Variables from Hugo Templates\nDESCRIPTION: Examples of importing Hugo variables into Sass files for both LibSass and Dart Sass transpilers.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/Sass.md#2025-04-08_snippet_1\n\nLANGUAGE: scss\nCODE:\n```\n// LibSass\n@import \"hugo:vars\";\n\n// Dart Sass\n@use \"hugo:vars\" as v;\n```\n\n----------------------------------------\n\nTITLE: Quality Adjustment Filter\nDESCRIPTION: Examples of creating filters with quality adjustments for JPEG and WebP images.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Process.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Process \"q50\" }}\n{{ $filter := images.Process \"crop 200x200 center r90 webp q50\" }}\n```\n\n----------------------------------------\n\nTITLE: Logging an Error with fmt.Errorf in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the fmt.Errorf function in Hugo templates to log an error and fail the build. It formats an error message with dynamic values and logs it to the ERROR log.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Errorf.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ errorf \"The %q shortcode requires a src argument. See %s\" .Name .Position }}\n```\n\n----------------------------------------\n\nTITLE: Applying Single Image Filter in Hugo\nDESCRIPTION: Demonstrates how to apply a single grayscale filter to an image resource using the Filter method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Filter.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Filter images.Grayscale }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using an Audio Shortcode in Hugo Content\nDESCRIPTION: Example of using a custom audio shortcode in a Hugo content file, providing a source path as an argument.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_16\n\nLANGUAGE: text\nCODE:\n```\n{{</* audio src=/audio/test.mp3 */>}}\n```\n\n----------------------------------------\n\nTITLE: English Template Usage\nDESCRIPTION: Shows how to use translations in Go HTML templates for English content\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/Translate.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ T \"privacy\" }} → privacy\n{{ T \"security\" }} → security\n```\n\n----------------------------------------\n\nTITLE: Setting Text and Paths for Image Text Overlay in Hugo\nDESCRIPTION: This snippet initializes variables for the text to be overlaid, the font file path, and the image path. It sets up the necessary resources for the text overlay operation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Text.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $text := \"Zion National Park\" }}\n{{ $fontPath := \"https://github.com/google/fonts/raw/main/ofl/lato/Lato-Regular.ttf\" }}\n{{ $imagePath := \"images/original.jpg\" }}\n```\n\n----------------------------------------\n\nTITLE: Checking Syntax Highlighting Support in Hugo Templates\nDESCRIPTION: Demonstrates using transform.CanHighlight to check if syntax highlighting is available for specific languages. The function returns true for supported languages like 'go' and false for unsupported languages like 'klingon'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/CanHighlight.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ transform.CanHighlight \"go\" }} → true\n{{ transform.CanHighlight \"klingon\" }} → false\n```\n\n----------------------------------------\n\nTITLE: Running Hugo Tests\nDESCRIPTION: Command to run all Hugo tests.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/development.md#2025-04-08_snippet_5\n\nLANGUAGE: text\nCODE:\n```\ngo test ./...\n```\n\n----------------------------------------\n\nTITLE: Finding All H2 Elements with FindRE in Hugo Templates\nDESCRIPTION: Uses the strings.FindRE function to find all second level headings (h2 elements) in the rendered Content. The (?s) flag enables dot-all mode where dot matches newlines.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/FindRe.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ findRE `(?s)<h2.*?>.*?</h2>` .Content }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Template - Get File Extension\nDESCRIPTION: Template code to safely access the Ext property of a File object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .File }}\n  {{ .Ext }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Page Method\nDESCRIPTION: Returns the Page object for a taxonomy term, useful for creating links to term pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/taxonomy/ordered-taxonomy-element-methods.md#2025-04-08_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nPage() page.Page\n```\n\n----------------------------------------\n\nTITLE: Localizing Permalinks in Hugo with Custom Slugs\nDESCRIPTION: Front matter example showing how to create language-specific URLs by setting a localized slug for a French translation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\ntitle: A Propos\nslug: \"a-propos\"\n```\n\n----------------------------------------\n\nTITLE: Using LinkTitle in Hugo Anchor Element\nDESCRIPTION: Shows how to use the LinkTitle method when generating anchor elements in Hugo templates. This is useful for creating navigation links with shorter, more concise text.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/LinkTitle.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a>\n```\n\n----------------------------------------\n\nTITLE: Enabling Default Image Render Hook\nDESCRIPTION: TOML configuration to enable Hugo's embedded image render hook for resolving Markdown image destinations.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/images.md#2025-04-08_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[markup.goldmark.renderHooks.image]\nenableDefault = true\n```\n\n----------------------------------------\n\nTITLE: Generating QR Code with Enclosed Text in Hugo\nDESCRIPTION: This example shows how to use the QR shortcode in Hugo with text enclosed between opening and closing tags to generate a QR code.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/qr.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{</* qr */>}}\nhttps://gohugo.io\n{{</* /qr */>}}\n```\n\n----------------------------------------\n\nTITLE: Using the hugo convert toTOML Command\nDESCRIPTION: The basic syntax for running the hugo convert toTOML command, which converts all front matter in the content directory to use TOML format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_convert_toTOML.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo convert toTOML [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Using urls.Ref to Generate Absolute URLs in Hugo Templates\nDESCRIPTION: Examples of using the urls.Ref function to generate absolute URLs to pages with different options including language and output format specifications. The examples show both basic path usage and options map approach.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/Ref.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ ref . \"/books/book-1\" }} → https://example.org/en/books/book-1/\n\n{{ $opts := dict \"path\" \"/books/book-1\" }}\n{{ ref . $opts }} → https://example.org/en/books/book-1/\n\n{{ $opts := dict \"path\" \"/books/book-1\" \"lang\" \"de\" }}\n{{ ref . $opts }} → https://example.org/en/books/book-1/\n\n{{ $opts := dict \"path\" \"/books/book-1\" \"lang\" \"de\" \"outputFormat\" \"json\" }}\n{{ ref . $opts }} → https://example.org/de/books/book-1/index.json\n```\n\n----------------------------------------\n\nTITLE: Checking Draft Build Status in Hugo Templates\nDESCRIPTION: Using the BuildDrafts method on a Site object to determine if the current build configuration includes draft pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/BuildDrafts.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.BuildDrafts }} → true\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended on Arch Linux and Derivatives\nDESCRIPTION: Command to install the extended edition of Hugo on Arch Linux and its derivatives (EndeavourOS, Garuda Linux, Manjaro, etc.) using pacman.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nsudo pacman -S hugo\n```\n\n----------------------------------------\n\nTITLE: Hugo Config Mounts Command Options\nDESCRIPTION: These are the specific options available for the 'hugo config mounts' command. They include settings for baseURL, cache directory, content directory, help, render segments, and themes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_config_mounts.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n  -b, --baseURL string           hostname (and path) to the root, e.g. https://spf13.com/\n      --cacheDir string          filesystem path to cache directory\n  -c, --contentDir string        filesystem path to content directory\n  -h, --help                     help for mounts\n      --renderSegments strings   named segments to render (configured in the segments config)\n  -t, --theme strings            themes to use (located in /themes/THEMENAME/)\n```\n\n----------------------------------------\n\nTITLE: Merging Regular Pages from Multiple Language Sites in Hugo\nDESCRIPTION: This example demonstrates merging content from the current site with content from French and English sites, prioritizing content from left to right. It fills in missing translations by taking content from other language sites.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/Merge.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n{{ $pages := .Site.RegularPages | lang.Merge $frSite.RegularPages | lang.Merge $enSite.RegularPages }}\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output for Book Listings\nDESCRIPTION: Shows the HTML output generated by Hugo after processing the template that queries pages by type.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Type.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<h2><a href=\"/books/book-1/\">Book 1</a></h2>\n<h2><a href=\"/books/book-2/\">Book 2</a></h2>\n<h2><a href=\"/auction/item-2/\">Item 2</a></h2>\n```\n\n----------------------------------------\n\nTITLE: Checking Divisibility with math.ModBool in Hugo Templates\nDESCRIPTION: Demonstrates using the math.ModBool function to check if one number is divisible by another. The function returns true when the modulus equals zero, indicating perfect divisibility.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/ModBool.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ modBool 15 3 }} → true\n```\n\n----------------------------------------\n\nTITLE: Accessing Sitemap ChangeFreq in Hugo Templates\nDESCRIPTION: Demonstrates how to access the ChangeFreq property of a page's Sitemap configuration in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sitemap.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Sitemap.ChangeFreq }}\n```\n\n----------------------------------------\n\nTITLE: Unmarshaling CSV with Options in Hugo\nDESCRIPTION: Shows how to unmarshal CSV data with custom delimiter options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Unmarshal.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $csv := \"a;b;c\" | transform.Unmarshal (dict \"delimiter\" \";\") }}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of MD5 Hash Function in Hugo Templates\nDESCRIPTION: Demonstrates how to use the md5 function in Hugo templates to generate an MD5 hash of a string. The function takes any input and returns a hexadecimal encoded MD5 checksum.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/crypto/MD5.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ md5 \"Hello world\" }} → 3e25960a79dbc69b674cd4ec67a72c62\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Hugo Content Directory Structure\nDESCRIPTION: Shows a typical Hugo content directory structure highlighting different page kinds including regular pages, section pages, and the home page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsSection.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── books/\n│   ├── book-1/\n│   │   └── index.md  <-- kind = page\n│   ├── book-2.md     <-- kind = page\n│   └── _index.md     <-- kind = section\n└── _index.md         <-- kind = home\n```\n\n----------------------------------------\n\nTITLE: Defining Page Title in Front Matter (TOML)\nDESCRIPTION: Shows how to set the title of a page in the front matter of a Markdown file using TOML syntax.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Title.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'About us'\n```\n\n----------------------------------------\n\nTITLE: Reversing Next/Previous Navigation Order in Hugo\nDESCRIPTION: A go-html-template that reverses the meaning of next and previous by adding the Reverse method to the page collection. This changes the navigation direction between pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/pages/next-and-prev.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := .CurrentSection.Pages.ByWeight.Reverse }}\n\n{{ with $pages.Prev . }}\n  <a href=\"{{ .RelPermalink }}\">Previous</a>\n{{ end }}\n\n{{ with $pages.Next . }}\n  <a href=\"{{ .RelPermalink }}\">Next</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Calculating Natural Logarithm using math.Log in Hugo\nDESCRIPTION: Demonstrates how to calculate the natural logarithm (base e) of a number using the math.Log function. The example shows calculating the natural logarithm of 42, which returns approximately 3.737.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Log.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Log 42 }} → 3.737\n```\n\n----------------------------------------\n\nTITLE: Comparing Nested Parameters\nDESCRIPTION: Shows how to compare with a member of the page Params map by chaining the subkey in the collections.Where function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $result := where .Site.RegularPages \"Params.foo\" \"bar\" }}\n```\n\n----------------------------------------\n\nTITLE: Console Output from fmt.Erroridf Function\nDESCRIPTION: Shows the error message produced in the console when the fmt.Erroridf function is executed, including instructions on how to suppress the error.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Erroridf.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nERROR You should consider fixing this.\nYou can suppress this error by adding the following to your site configuration:\nignoreLogs = ['error-42']\n```\n\n----------------------------------------\n\nTITLE: Displaying Complete EXIF Data in Hugo Templates\nDESCRIPTION: This code snippet demonstrates how to display an image's creation date, GPS coordinates, and all available EXIF tags in a Hugo template. It uses nested conditionals to check for the existence of the resource and its EXIF data before rendering the values in HTML.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Exif.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ with .Exif }}\n    <p>Date: {{ .Date }}</p>\n    <p>Lat/Long: {{ .Lat }}/{{ .Long }}</p>\n    {{ with .Tags }}\n      <p>Tags</p>\n      <table>\n        <thead>\n          <tr><th>Tag</th><th>Value</th></tr>\n        </thead>\n        <tbody>\n          {{ range $k, $v := . }}\n          <tr><td>{{ $k }}</td><td>{{ $v }}</td></tr>\n          {{ end }}\n        </tbody>\n      </table>\n    {{ end }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Unsafe String in JavaScript (Go HTML Template)\nDESCRIPTION: This snippet demonstrates how Hugo renders an unsafe string in a JavaScript context. Without using safe.JSStr, special characters are escaped.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/JSStr.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $title := \"Lilo & Stitch\" }}\n<script>\n  const a = \"Title: \" + {{ $title }};\n</script>\n```\n\n----------------------------------------\n\nTITLE: Accessing Elements in Maps and Slices with collections.Index in Hugo\nDESCRIPTION: Demonstrates how to use collections.Index to access elements in maps and slices. It shows examples of accessing single elements and nested values using multiple keys.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/IndexFunction.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"a\" \"b\" \"c\" }}\n{{ index $s 0 }} → a\n{{ index $s 1 }} → b\n\n{{ $m := dict \"a\" 100 \"b\" 200 }}\n{{ index $m \"b\" }} → 200\n```\n\n----------------------------------------\n\nTITLE: HTML Output of ByCount Taxonomy Rendering in Hugo\nDESCRIPTION: Shows the HTML output generated by Hugo when rendering a taxonomy ordered by count. The example displays two genres (suspense and romance) with their respective counts and lists of associated books.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/ByCount.md#2025-04-08_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<h2><a href=\"/genres/suspense/\">suspense</a> (3)</h2>\n<ul>\n  <li><a href=\"/books/and-then-there-were-none/\">And then there were none</a></li>\n  <li><a href=\"/books/death-on-the-nile/\">Death on the nile</a></li>\n  <li><a href=\"/books/jamaica-inn/\">Jamaica inn</a></li>\n</ul>\n<h2><a href=\"/genres/romance/\">romance</a> (2)</h2>\n<ul>\n  <li><a href=\"/books/jamaica-inn/\">Jamaica inn</a></li>\n  <li><a href=\"/books/pride-and-prejudice/\">Pride and prejudice</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Example Git Commit Message\nDESCRIPTION: Example of a properly formatted Git commit message following Hugo's commit message guidelines.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/development.md#2025-04-08_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\ngit commit -m \"tpl/strings: Create wrap function\\n\\nThe strings.Wrap function wraps a string into one or more lines,\\nsplitting the string after the given number of characters, but not\\nsplitting in the middle of a word.\\n\\nFixes #99998\\nCloses #99999\"\n```\n\n----------------------------------------\n\nTITLE: Limiting Replacements with strings.ReplaceRE in Hugo Templates\nDESCRIPTION: Shows how to limit the number of replacements made by strings.ReplaceRE using the LIMIT argument.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/ReplaceRE.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := \"a-b--c---d\" }}\n{{ replaceRE `(-{2,})` \"-\" $s 1 }} → a-b-c---d\n```\n\n----------------------------------------\n\nTITLE: Custom Sorting Pages Within Expiration Date Groups in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to group pages by expiration date while applying a secondary sort by title to the pages within each group. It uses the ByTitle method to sort the inner collection of pages alphabetically.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByExpiryDate.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByExpiryDate \"January 2006\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages.ByTitle }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Appending to Slices with Site.Store\nDESCRIPTION: Shows how to append values to a slice using the Add method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Store.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ site.Store.Set \"greetings\" (slice \"Hello\") }}\n{{ site.Store.Add \"greetings\" (slice \"Welcome\" \"Cheers\") }}\n{{ site.Store.Get \"greetings\" }} → [Hello Welcome Cheers]\n```\n\n----------------------------------------\n\nTITLE: Basic InSection Usage Examples\nDESCRIPTION: Demonstrates how to use InSection method with different section paths, showing comparison results from the perspective of 'auction-1' page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/InSection.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.GetPage \"/\" }}\n  {{ $.InSection . }} → false\n{{ end }}\n\n{{ with .Site.GetPage \"/auctions\" }}\n  {{ $.InSection . }} → false\n{{ end }}\n\n{{ with .Site.GetPage \"/auctions/2023-11\" }}\n  {{ $.InSection . }} → true\n{{ end }}\n\n{{ with .Site.GetPage \"/auctions/2023-11/auction-2\" }}\n  {{ $.InSection . }} → true\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Adding Numeric Values with Site.Store\nDESCRIPTION: Demonstrates adding numeric values together using the Add method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Store.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ site.Store.Set \"total\" 3 }}\n{{ site.Store.Add \"total\" 7 }}\n{{ site.Store.Get \"total\" }} → 10\n```\n\n----------------------------------------\n\nTITLE: Generated HTML Output for GoAT Diagram\nDESCRIPTION: The HTML structure generated by Hugo when rendering a GoAT diagram, showing the SVG container wrapper.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/diagrams/Goat.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"goat svg-container\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" font-family=\"Menlo,Lucida Console,monospace\" viewBox=\"0 0 352 57\">\n    ...\n  </svg>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Advanced Usage of collections.Union in Hugo Page Filtering\nDESCRIPTION: Shows how to use collections.Union in combination with 'where' functions to create complex OR filters for page collections. This example filters pages based on type, pinned status, and the presence of images.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Union.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where .Site.RegularPages \"Type\" \"not in\" (slice \"page\" \"about\") }}\n{{ $pages = $pages | union (where .Site.RegularPages \"Params.pinned\" true) }}\n{{ $pages = $pages | intersect (where .Site.RegularPages \"Params.images\" \"!=\" nil) }}\n```\n\n----------------------------------------\n\nTITLE: Removing Duplicates from a Slice Using collections.Uniq in Go HTML Template\nDESCRIPTION: This snippet demonstrates how to use the collections.Uniq function (aliased as 'uniq') to remove duplicate elements from a slice. It takes a slice of integers as input and returns a new slice with unique elements.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Uniq.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ slice 1 3 2 1 | uniq }} → [1 3 2]\n```\n\n----------------------------------------\n\nTITLE: Hugo List Expired Command Options in Bash\nDESCRIPTION: This snippet shows the available options specific to the 'hugo list expired' command. It only includes the help flag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_expired.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for expired\n```\n\n----------------------------------------\n\nTITLE: Retrieving Full Commit Hash using GitInfo\nDESCRIPTION: Template code to access the full hash of the last Git commit for a page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GitInfo.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .GitInfo }}\n  {{ .Hash }} → aab9ec0b31ebac916a1468c4c9c305f2bebf78d4\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Command Options Configuration\nDESCRIPTION: Available command-specific options for the bash completion command\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_bash.md#2025-04-08_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n  -h, --help              help for bash\n      --no-descriptions   disable completion descriptions\n```\n\n----------------------------------------\n\nTITLE: Formatting Currency Values with Hugo's lang.FormatCurrency Function\nDESCRIPTION: Demonstrates how to format a numeric value as a currency string using the lang.FormatCurrency function. The function takes three parameters: the number to format, decimal precision, and the currency code.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/FormatCurrency.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ 512.5032 | lang.FormatCurrency 2 \"USD\" }} → $512.50\n```\n\n----------------------------------------\n\nTITLE: Adding a Page to Multiple Menus in Front Matter\nDESCRIPTION: Shows how to add a page to both the 'main' and 'footer' menus simultaneously using front matter configuration. This creates menu entries accessible via site.Menus.main and site.Menus.footer.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/menus.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Contact'\nmenus = ['main','footer']\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Resource Name in Hugo\nDESCRIPTION: Demonstrates how to use the Name method on a global resource, which returns the path relative to the assets directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Name.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/Sunrise in Bryce Canyon.jpg\" }}\n  {{ .Name }} → /images/Sunrise in Bryce Canyon.jpg\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Mod Base Command Options\nDESCRIPTION: Basic command line options for the hugo mod base command, showing help flag option.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for mod\n```\n\n----------------------------------------\n\nTITLE: Displaying Hugo List Command Options\nDESCRIPTION: Shows the available options for the 'hugo list' command. It includes a help option for displaying command usage information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for list\n```\n\n----------------------------------------\n\nTITLE: HTML Output of Hugo TableOfContents\nDESCRIPTION: Example HTML output generated by the TableOfContents method, showing a nested navigation structure with section links.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/TableOfContents.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<nav id=\"TableOfContents\">\n  <ul>\n    <li><a href=\"#section-1\">Section 1</a>\n      <ul>\n        <li><a href=\"#section-11\">Section 1.1</a></li>\n        <li><a href=\"#section-12\">Section 1.2</a></li>\n      </ul>\n    </li>\n    <li><a href=\"#section-2\">Section 2</a></li>\n  </ul>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Counting Non-Whitespace Runes Using strings.CountRunes in Hugo\nDESCRIPTION: Demonstrates using the strings.CountRunes function to count the number of runes in a string while excluding whitespace characters. The example shows counting runes in a mixed ASCII and Unicode string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/CountRunes.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"Hello, 世界\" | strings.CountRunes }} → 8\n```\n\n----------------------------------------\n\nTITLE: Resampling Filter\nDESCRIPTION: Examples of creating filters with specific resampling algorithms.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Process.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Process \"resize 300x lanczos\" }}\n{{ $filter := images.Process \"resize 300x r90 q50 jpeg #000 lanczos\" }}\n```\n\n----------------------------------------\n\nTITLE: Automated Deployment Setup for Hugo Site on Codeberg CI\nDESCRIPTION: This snippet shows how to prepare a Hugo project for automated deployment using Codeberg's CI system. It demonstrates initializing a Git repository, adding the output directory to .gitignore, and pushing the project code to a Codeberg repository for CI-based deployment.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-codeberg-pages.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n# initialize new git repository\ngit init\n\n# add /public directory to our .gitignore file\necho \"/public\" >> .gitignore\n\n# commit and push code to main branch\ngit add .\ngit commit -m \"Initial commit\"\ngit remote add origin https://codeberg.org/<YourUsername>/<YourWebsite>.git\ngit push -u origin main\n```\n\n----------------------------------------\n\nTITLE: Using math.Min with Mixed Input Types in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the math.Min function in Hugo templates. It takes a combination of scalar values and a slice as input, returning the smallest number among all inputs.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Min.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Min 1 (slice 2 3) 4 }} → 1\n```\n\n----------------------------------------\n\nTITLE: Merging Maps in Order $m1, $m3, $m2\nDESCRIPTION: Shows the fourth variation of merging the same three maps, with $m1, $m3, then $m2, highlighting how the rightmost map's values take precedence for duplicate keys.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Merge.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $merged := merge $m1 $m3 $m2 }}\n\n{{ $merged.x }}   → bar\n{{ $merged.y }}   → wibble\n{{ $merged.z.a }} → huey\n```\n\n----------------------------------------\n\nTITLE: GitHub API URL for README Retrieval\nDESCRIPTION: Shows the GitHub API URL used to retrieve a repository's README file, which is base64-encoded in the response.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/encoding/Base64Decode.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nhttps://api.github.com/repos/gohugoio/hugo/readme\n```\n\n----------------------------------------\n\nTITLE: Error Output from Hugo Shortcode Missing Required Argument\nDESCRIPTION: This snippet shows the error message that Hugo generates when the shortcode is used without providing the required 'greeting' argument. It includes the shortcode name and position information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Name.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nERROR The \"myshortcode\" shortcode requires a 'greeting' argument. See \"/home/user/project/content/about.md:11:1\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Invalid Identifiers Template\nDESCRIPTION: Hugo template showing how to access data keys that contain invalid characters using the index function\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Data.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ index .Site.Data.books \"historical-fiction\" }}\n```\n\n----------------------------------------\n\nTITLE: Installing Specific Hugo Version\nDESCRIPTION: Command to build and install a specific version of Hugo extended edition.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/development.md#2025-04-08_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nCGO_ENABLED=1 go install -tags extended github.com/gohugoio/hugo@v0.144.2\n```\n\n----------------------------------------\n\nTITLE: Format Conversion Filter\nDESCRIPTION: Examples of creating filters for image format conversion, including standalone and combined with other operations.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Process.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Process \"webp\" }}\n{{ $filter := images.Process \"crop 200x200 center r90 webp\" }}\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination Navigation Using HasNext/HasPrev Methods\nDESCRIPTION: Creates a pagination navigation system using HasNext and HasPrev conditional checks to determine navigation link visibility. Includes links for First, Previous, Next, and Last pages with proper URL handling.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/HasNext.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  <ul>\n    {{ with .First }}\n      <li><a href=\"{{ .URL }}\">First</a></li>\n    {{ end }}\n    {{ if .HasPrev }}\n      <li><a href=\"{{ .Prev.URL }}\">Previous</a></li>\n    {{ end }}\n    {{ if .HasNext }}\n      <li><a href=\"{{ .Next.URL }}\">Next</a></li>\n    {{ end }}\n    {{ with .Last }}\n      <li><a href=\"{{ .URL }}\">Last</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Menu Entry Parameters in Hugo Templates\nDESCRIPTION: A Hugo template example that iterates through the main menu entries and accesses custom parameters. It demonstrates using the .Params method to retrieve the 'rel' parameter for adding attributes to link elements.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Params.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    <li>\n      <a href=\"{{ .URL }}\" {{ with .Params.rel }}rel=\"{{ . }}\"{{ end }}>\n        {{ .Name }}\n      </a>\n    </li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variable Access in Hugo\nDESCRIPTION: Configuration example showing how to allow access to specific environment variables using regex patterns in Hugo's security settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/Getenv.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[security.funcs]\ngetenv = ['^HUGO_', '^CI$', '^USER$', '^HOME$']\n```\n\n----------------------------------------\n\nTITLE: Template Code Block with File Header\nDESCRIPTION: Shows how to include a filename header and copy button in a code block using Hugo's code block attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if eq $foo \"bar\" }}\n  {{ print \"foo is bar\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Checking for Non-Space Characters using strings.ContainsNonSpace in Hugo\nDESCRIPTION: This snippet demonstrates the usage of the strings.ContainsNonSpace function in Hugo. It checks whether the given string contains any non-space characters, returning a boolean value. The function considers various whitespace characters including tabs, newlines, and Unicode space separators.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/ContainsNonSpace.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.ContainsNonSpace \"\\n\" }} → false\n{{ strings.ContainsNonSpace \" \" }} → false\n{{ strings.ContainsNonSpace \"\\n abc\" }} → true\n```\n\n----------------------------------------\n\nTITLE: Applying images.Padding Filter with Dynamic Color in Hugo\nDESCRIPTION: Demonstrates how to apply the Padding filter using one of the image's dominant colors for the padding. It uses the Colors method to select a color from the image.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Padding.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ $filter := images.Padding 20 40 (index .Colors 2) }}\n  {{ with . | images.Filter $filter }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Boolean Return in Hugo Partial Template\nDESCRIPTION: A simplified partial template that returns a boolean value indicating if a number is even.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/return.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ return math.ModBool . 2 }}\n```\n\n----------------------------------------\n\nTITLE: Counting Pages in a Collection with len Function in Hugo\nDESCRIPTION: Demonstrates how to use the 'len' function to count the number of pages in a collection (e.g., RegularPages) in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/len.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ site.RegularPages | len }} → 42\n```\n\n----------------------------------------\n\nTITLE: Incorrect Context Usage Example\nDESCRIPTION: Demonstrates incorrect usage of context within a with block when using InSection method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/InSection.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.GetPage \"/auctions\" }}\n  {{ .InSection . }} → true\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Falsy Values in Go\nDESCRIPTION: Lists the specific values considered falsy in Go. These include false, 0, nil pointers or interfaces, empty collections, and zero time.Time values. All other values are implicitly defined as truthy.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/functions/truthy-falsy.md#2025-04-08_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nfalse, 0, any nil pointer or interface value, any array, slice, map, or string of length zero, and zero time.Time values\n```\n\n----------------------------------------\n\nTITLE: Creating Hue Rotation Filter in Hugo\nDESCRIPTION: This snippet demonstrates how to create an image filter using the images.Hue function in Hugo. The filter rotates the hue of an image by a specified angle shift, typically in the range [-180, 180] where 0 has no effect.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Hue.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Hue -15 }}\n```\n\n----------------------------------------\n\nTITLE: Setting Multiple Values for Same Header in resources.GetRemote\nDESCRIPTION: Example demonstrating how to specify multiple values for the same header key using a slice when making a request with resources.GetRemote.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/GetRemote.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://example.org/api\" }}\n{{ $opts := dict\n  \"headers\" (dict \"X-List\" (slice \"a\" \"b\" \"c\"))\n}}\n{{ $resource := resources.GetRemote $url $opts }}\n```\n\n----------------------------------------\n\nTITLE: Invalid Taxonomy Term Access Example\nDESCRIPTION: Demonstrates an invalid approach that will throw an error when trying to use chaining syntax with hyphenated terms.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Get.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $weightedPages := $taxonomyObject.my-genre }}\n```\n\n----------------------------------------\n\nTITLE: Listing Page Aliases in Hugo Templates\nDESCRIPTION: Demonstrates how to iterate over and display all aliases defined for a page using Hugo's template syntax. Uses the .Aliases method to access the alias list.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Aliases.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Aliases }}\n  {{ . }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating a ColorBalance filter in Hugo templates\nDESCRIPTION: Creates an image filter that adjusts the color balance by specifying percentage changes for red, green, and blue channels. The percentages must be in the range [-100, 500].\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/ColorBalance.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.ColorBalance -10 10 50 }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Taxonomy Relationships for Actors in Plain Text\nDESCRIPTION: This snippet shows how taxonomy relationships are organized from the perspective of the taxonomy, using actors in a movie website as an example. It demonstrates the hierarchy of Taxonomy, Term, and Value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/taxonomies.md#2025-04-08_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\nActor                    <- Taxonomy\n    Bruce Willis         <- Term\n        The Sixth Sense  <- Value\n        Unbreakable      <- Value\n        Moonrise Kingdom <- Value\n    Samuel L. Jackson    <- Term\n        Unbreakable      <- Value\n        The Avengers     <- Value\n        xXx              <- Value\n```\n\n----------------------------------------\n\nTITLE: Terminating 'with' Statement in Hugo Templates\nDESCRIPTION: Shows the usage of 'end' to terminate a 'with' statement in Hugo templates. The example sets a variable scope and prints its value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/end.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := \"foo\" }}\n{{ with $var }}\n  {{ . }} → foo\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Converting Plural to Singular with inflect.Singularize\nDESCRIPTION: Demonstrates using the singularize filter in Hugo templates to convert a plural English word to its singular form. The example shows converting 'cats' to 'cat'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/inflect/Singularize.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"cats\" | singularize }} → cat\n```\n\n----------------------------------------\n\nTITLE: File Structure for Multilingual 404 Pages in Hugo\nDESCRIPTION: This snippet shows the file structure for creating language-specific 404 pages in a multilingual Hugo site. It demonstrates naming conventions for German, English, and French 404 templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/404.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nlayouts/\n├── 404.de.html\n├── 404.en.html\n└── 404.fr.html\n```\n\n----------------------------------------\n\nTITLE: Using isset Function to Detect Existence of Parameters in Hugo Templates\nDESCRIPTION: This snippet shows how to detect the existence of a parameter using the isset function, which works even when the parameter value is 'false'. Note that the key must be referenced in lowercase.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/IsSet.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if isset site.Params \"showheroimage\" }}\n  <p>The showHeroImage parameter is set to {{ site.Params.showHeroImage }}.<p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Mod Inherited Command Options\nDESCRIPTION: Command line options inherited from parent commands, including configuration, build environment, file paths, and logging settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock               don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Shuffling Arrays and Slices with collections.Shuffle in Hugo Templates\nDESCRIPTION: Demonstrates the usage of collections.Shuffle function to randomly permute numeric sequences and string slices. The function takes a collection as input and returns a shuffled version of it. Note that the result will vary between builds.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Shuffle.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ shuffle (seq 1 2 3) }} → [3 1 2] \n{{ shuffle (slice \"a\" \"b\" \"c\") }} → [b a c] \n```\n\n----------------------------------------\n\nTITLE: String Concatenation with math.Add in Hugo Templates\nDESCRIPTION: Shows how the math.Add function can be used to concatenate string values. When used with strings, it joins them together into a single string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Add.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ add \"hu\" \"go\" }} → hugo\n```\n\n----------------------------------------\n\nTITLE: Encoding String to Base64 in Hugo Template\nDESCRIPTION: Demonstrates using the base64Encode pipe function to convert the string 'Hugo' to its base64 encoded equivalent. The function takes a string input and returns the base64 encoded string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/encoding/Base64Encode.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"Hugo\" | base64Encode }} → SHVnbw==\n```\n\n----------------------------------------\n\nTITLE: Sample JSON Output from debug.Dump\nDESCRIPTION: This JSON snippet represents a possible output from the debug.Dump function when applied to site.Data.books. It shows an array of book objects, each containing author, rating, and title properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/debug/Dump.md#2025-04-08_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"author\": \"Victor Hugo\",\n    \"rating\": 4,\n    \"title\": \"The Hunchback of Notre Dame\"\n  },\n  {\n    \"author\": \"Victor Hugo\",\n    \"rating\": 5,\n    \"title\": \"Les Misérables\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Adding and Subtracting Durations from Time Objects in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the Add method on a time object in Hugo templates. It shows creating a time object, parsing both positive and negative durations, and then adding these durations to the time object to calculate new times.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Add.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n\n{{ $d1 = time.ParseDuration \"3h20m10s\" }}\n{{ $d2 = time.ParseDuration \"-3h20m10s\" }}\n\n{{ $t.Add $d1 }} → 2023-01-28 03:05:08 -0800 PST\n{{ $t.Add $d2 }} → 2023-01-27 20:24:48 -0800 PST\n```\n\n----------------------------------------\n\nTITLE: Centered Crop Filter\nDESCRIPTION: Creates a filter to crop an image to 200x200 pixels with center anchor point.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Process.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Process \"crop 200x200 center\" }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Sanity Studio for Hugo Integration\nDESCRIPTION: This snippet shows the Sanity configuration setup needed to support the Hugo content adapter, including necessary plugins for code input and media.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/PortableText.md#2025-04-08_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\nimport {defineConfig} from 'sanity'\nimport {structureTool} from 'sanity/structure'\nimport {visionTool} from '@sanity/vision'\nimport {schemaTypes} from './schemaTypes'\nimport {media} from 'sanity-plugin-media'\nimport {codeInput} from '@sanity/code-input'\n\nexport default defineConfig({\n  name: 'default',\n  title: 'my-sanity-project',\n\n  projectId: 'mysanityprojectid',\n  dataset: 'production',\n\n  plugins: [structureTool(), visionTool(), media(),codeInput()],\n\n  schema: {\n    types: schemaTypes,\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Basic Hugo CLI Usage\nDESCRIPTION: Demonstrates the basic usage of the Hugo CLI command, including options for specifying the configuration file, setting the environment, and building for production.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo --config=myconfig.toml\nhugo --environment production --minify\n```\n\n----------------------------------------\n\nTITLE: Bypassing HTML Escaping with safeHTML in Go HTML Template\nDESCRIPTION: Shows how to use the safeHTML function in conjunction with htmlUnescape to prevent Go's html/template package from re-escaping the unescaped string in certain contexts.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/HTMLUnescape.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ htmlUnescape \"Lilo &amp; Stitch\" | safeHTML }}\n```\n\n----------------------------------------\n\nTITLE: Nested Where Comparison (Method 2)\nDESCRIPTION: Shows an alternative way to chain multiple where functions by nesting them within each other for filtering by multiple criteria.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_17\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where (where .Site.RegularPages \"Type\" \"tutorials\") \"Params.level\" \"eq\" \"beginner\" }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Image with Width and Height in Hugo Templates\nDESCRIPTION: This snippet shows how to use both Width and Height methods when rendering an img element in Hugo templates. It sets the width and height attributes of the img tag using the dimensions of the image resource.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Width.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using KeyName for Multilingual Menu Rendering in Hugo Templates\nDESCRIPTION: This Go HTML template demonstrates how to use the KeyName method when rendering a menu in a multilingual site. It queries the translation table, falling back to the 'name' property if a matching key doesn't exist.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/KeyName.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    <li><a href=\"{{ .URL }}\">{{ or (T (.KeyName | lower)) .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Converting Binary Values to Strings in Hugo Templates\nDESCRIPTION: Examples showing how the string function handles binary (base 2) values. When given a binary number, it converts to a decimal string; when given a string of binary notation, it preserves the original format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToString.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ string 0b11 }} → 3 (string)\n{{ string \"0b11\" }} → 0b11 (string)\n```\n\n----------------------------------------\n\nTITLE: Using IsTranslated Method with Untranslated Content\nDESCRIPTION: Example showing IsTranslated method returning false when rendering a page that has no translations in other languages. Here, book-2.md only exists in the English content directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsTranslated.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .IsTranslated }} → false\n```\n\n----------------------------------------\n\nTITLE: Building Slice from Empty Start in Hugo Template\nDESCRIPTION: Shows the process of building a slice starting from an empty slice and adding elements progressively.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Append.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice }}\n{{ $s }} → []\n\n{{ $s = $s | append \"a\" }}\n{{ $s }} → [a]\n\n{{ $s = $s | append \"b\" \"c\" }}\n{{ $s }} → [a b c]\n\n{{ $s = $s | append (slice \"d\" \"e\") }}\n{{ $s }} → [a b c d e]\n```\n\n----------------------------------------\n\nTITLE: Creating Sepia Filter in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to create a sepia filter using the images.Sepia function in Hugo. The function takes a percentage argument that determines the intensity of the sepia effect, which must be between 0 and 100.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Sepia.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Sepia 75 }}\n```\n\n----------------------------------------\n\nTITLE: Using crypto.HMAC with SHA-256 Hashing in Go HTML Templates\nDESCRIPTION: Examples of using the crypto.HMAC function with SHA-256 hash algorithm. The examples demonstrate default hex encoding, explicit hex encoding, and binary encoding with base64 conversion.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/crypto/HMAC.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hmac \"sha256\" \"Secret key\" \"Secret message\" }}\n5cceb491f45f8b154e20f3b0a30ed3a6ff3027d373f85c78ffe8983180b03c84\n\n{{ hmac \"sha256\" \"Secret key\" \"Secret message\" \"hex\" }}\n5cceb491f45f8b154e20f3b0a30ed3a6ff3027d373f85c78ffe8983180b03c84\n\n{{ hmac \"sha256\" \"Secret key\" \"Secret message\" \"binary\" | base64Encode }}\nXM60kfRfixVOIPOwow7Tpv8wJ9Nz+Fx4/+iYMYCwPIQ=\n```\n\n----------------------------------------\n\nTITLE: Alternative Methods for Accessing Site Parameters in Hugo\nDESCRIPTION: Presents two alternative ways to access the same site parameter ('display_toc') in Hugo templates. These methods directly access the Params object of the Site, either using dot notation or the index function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Param.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Params.display_toc }}\n{{ index .Site.Params \"display_toc\" }}\n```\n\n----------------------------------------\n\nTITLE: Installing Extended Hugo Edition\nDESCRIPTION: Command to compile and install the extended edition of Hugo with CGO enabled.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/development.md#2025-04-08_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nCGO_ENABLED=1 go install -tags extended\n```\n\n----------------------------------------\n\nTITLE: Using IsTranslated Method with Translated Content\nDESCRIPTION: Example showing IsTranslated method returning true when rendering a page that has translations in other languages. In this case, book-1.md exists in both English and German content directories.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsTranslated.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .IsTranslated }} → true\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Link Title in Ascending Order with Hugo\nDESCRIPTION: This snippet demonstrates how to sort a collection of pages by their link title in ascending order. It iterates through the sorted pages and renders each page's link title as a clickable heading.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByLinkTitle.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByLinkTitle }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using fmt.Warnf with math.Counter for Unique Debug Messages\nDESCRIPTION: This example shows how to use the warnf function in combination with the math.Counter function to generate unique warning messages for debugging purposes, preventing suppression of duplicate messages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Warnf.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range site.RegularPages }}\n  {{ .Section | warnf \"%#[2]v [%[1]d]\" math.Counter }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Image Crop Filter\nDESCRIPTION: Creates a filter to crop an image to exact dimensions of 200x200 pixels.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Process.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Process \"crop 200x200\" }}\n```\n\n----------------------------------------\n\nTITLE: Using IsNode Method in Hugo Templates\nDESCRIPTION: This snippet shows how to use the IsNode method in a Hugo template. It returns a boolean value indicating whether the current page is a node or not.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsNode.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .IsNode }}\n```\n\n----------------------------------------\n\nTITLE: Illustrating Content Structure for Section Hierarchy in Hugo\nDESCRIPTION: This code block shows a typical Hugo content directory structure with nested sections, illustrating how the CurrentSection function would identify the parent section for different content pages in the hierarchy.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/CurrentSection.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── auctions/\n│   ├── 2023-11/\n│   │   ├── _index.md     <-- current section: 2023-11\n│   │   ├── auction-1.md\n│   │   └── auction-2.md  <-- current section: 2023-11\n│   ├── 2023-12/\n│   │   ├── _index.md     \n│   │   ├── auction-3.md\n│   │   └── auction-4.md\n│   ├── _index.md         <-- current section: auctions\n│   ├── bidding.md\n│   └── payment.md        <-- current section: auctions\n├── books/\n│   ├── _index.md         <-- current section: books\n│   ├── book-1.md\n│   └── book-2.md         <-- current section: books\n├── films/\n│   ├── _index.md         <-- current section: films \n│   ├── film-1.md\n│   └── film-2.md         <-- current section: films\n└── _index.md             <-- current section: home\n```\n\n----------------------------------------\n\nTITLE: Cleaning File Paths with path.Clean in Go Templates\nDESCRIPTION: Shows various examples of using path.Clean to normalize file paths by replacing separators with forward slashes, removing redundant separators, and resolving relative path components like '.' and '..'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/path/Clean.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ path.Clean \"foo/bar\" }} → foo/bar\n{{ path.Clean \"/foo/bar\" }} → /foo/bar\n{{ path.Clean \"/foo/bar/\" }} → /foo/bar\n{{ path.Clean \"/foo//bar/\" }} → /foo/bar\n{{ path.Clean \"/foo/./bar/\" }} → /foo/bar\n{{ path.Clean \"/foo/../bar/\" }} → /bar\n{{ path.Clean \"/../foo/../bar/\" }} → /bar\n{{ path.Clean \"\" }} → .\n```\n\n----------------------------------------\n\nTITLE: Custom GoAT Render Hook Template\nDESCRIPTION: Hugo template for customizing GoAT diagram rendering, creating figure elements with optional captions and custom classes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/diagrams/Goat.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $caption := or .Attributes.caption \"\" }}\n{{ $class := or .Attributes.class \"diagram\" }}\n{{ $id := or .Attributes.id (printf \"diagram-%d\" (add 1 .Ordinal)) }}\n\n<figure id=\"{{ $id }}\">\n  {{ with diagrams.Goat (trim .Inner \"\\n\\r\") }}\n    <svg class=\"{{ $class }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\"  xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n      {{ .Inner }}\n    </svg>\n  {{ end }}\n  <figcaption>{{ $caption }}</figcaption>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Converting Time to Unix Microseconds in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the UnixMicro function in Hugo templates to convert a time.Time value into microseconds elapsed since January 1, 1970 UTC. It first creates a time.Time object using time.AsTime, then applies the UnixMicro method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/UnixMicro.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.UnixMicro }} → 1674891898000000\n```\n\n----------------------------------------\n\nTITLE: Setting Taxonomic Weight in Hugo Front Matter\nDESCRIPTION: This snippet shows how to assign weight to taxonomies in a content file's front matter. It demonstrates setting weights for tags and categories, which can be used for sorting or ordering content in taxonomy templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/taxonomies.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ntitle = \"foo\"\ntags = [ \"a\", \"b\", \"c\" ]\ntags_weight = 22\ncategories = [\"d\"]\ncategories_weight = 44\n```\n\n----------------------------------------\n\nTITLE: Getting Sorted Map Values in Hugo Scratch Pad\nDESCRIPTION: Shows how to retrieve sorted values from a map using GetSortedMapValues method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/NewScratch.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := newScratch }}\n{{ $s.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ $s.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n{{ $s.GetSortedMapValues \"greetings\" }} → [Hello Bonjour]\n```\n\n----------------------------------------\n\nTITLE: Sorting Date Groups in Ascending Order in Hugo Templates\nDESCRIPTION: This snippet shows how to sort date groups in ascending order by adding the 'asc' parameter to the GroupByDate function. By default, groups are sorted in descending order.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByDate.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByDate \"January 2006\" \"asc\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Iterating Over a Slice of Strings in Hugo\nDESCRIPTION: Basic example of iterating over a slice of strings and outputting each value in a paragraph tag. The context (dot) is bound to each successive element in the slice.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/range.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"foo\" \"bar\" \"baz\" }}\n{{ range $s }}\n  <p>{{ . }}</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using PageGroups with Pagination in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to paginate through content grouped by date. It first filters regular pages by type, groups them by date format, and then iterates through the page groups to display content with pagination controls.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/PageGroups.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate ($pages.GroupByDate \"Jan 2006\") }}\n\n{{ range $paginator.PageGroups }}\n  <h2>{{ .Key }}</h2>\n  {{ range .Pages }}\n    <h3><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h3>\n  {{ end }}\n{{ end }}\n\n{{ template \"_internal/pagination.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Parent Command Options\nDESCRIPTION: Options inherited from parent commands that can be used with the 'hugo deploy' command. These include configuration settings, build environment options, filesystem paths, logging controls, and theme directory specifications.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_deploy.md#2025-04-08_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Using transform.Markdownify in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the markdownify function to render a title as HTML from Markdown. The function is applied using the pipe (|) operator in a Hugo template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Markdownify.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<h2>{{ .Title | markdownify }}</h2>\n```\n\n----------------------------------------\n\nTITLE: Converting String to time.Time in Hugo Templates\nDESCRIPTION: Demonstrates the basic usage of time.AsTime function to convert a string representation of a date/time value to a time.Time object in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/time/AsTime.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := \"2023-10-15T13:18:50-07:00\" }}\n{{ time.AsTime $t }} → 2023-10-15 13:18:50 -0700 PDT (time.Time)\n```\n\n----------------------------------------\n\nTITLE: Accessing Hugo Site Parameters with Index Function\nDESCRIPTION: Shows how to access site parameters that contain hyphens or other special characters using the index function\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Params.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ index .Site.Params \"copyright-year\" }} → 2023\n```\n\n----------------------------------------\n\nTITLE: Running Hugo Module Get Command\nDESCRIPTION: Syntax for running the 'hugo mod get' command with optional flags and arguments. This command is used to resolve dependencies in a Hugo project.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_get.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo mod get [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Sorting Menu Entries with the sort Function in Descending Order\nDESCRIPTION: Alternative approach to sort menu entries using the sort function in Hugo templates. This example sorts the entries by weight in descending order instead of the default ascending order.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/ByWeight.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range sort .Site.Menus.main \"Weight\" \"desc\" }}\n    <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Merging Maps in Order $m2, $m3, $m1\nDESCRIPTION: Demonstrates another merge order variation with $m2, $m3, then $m1, showing how the position in the merge sequence affects the final map's values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Merge.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $merged := merge $m2 $m3 $m1 }}\n\n{{ $merged.x }}   → foo\n{{ $merged.y }}   → wobble\n{{ $merged.z.a }} → huey\n```\n\n----------------------------------------\n\nTITLE: Using YearDay Function on Time.Time Object in Hugo Template\nDESCRIPTION: This snippet demonstrates how to use the YearDay function on a Time.Time object in a Hugo template. It first creates a Time.Time object from a string representation of a date and time, then calls the YearDay method to get the day of the year.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/YearDay.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.YearDay }} → 27\n```\n\n----------------------------------------\n\nTITLE: Hugo Taxonomy Configuration\nDESCRIPTION: Site configuration example for defining custom taxonomies like genres and authors.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Taxonomies.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n[taxonomies]\ngenre = 'genres'\nauthor = 'authors'\n```\n\n----------------------------------------\n\nTITLE: Options for hugo new content Command\nDESCRIPTION: These are the available options for the 'hugo new content' command. They include settings for baseURL, cache directory, content directory, editor, force overwrite, help, content type, render segments, and themes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_new_content.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -b, --baseURL string           hostname (and path) to the root, e.g. https://spf13.com/\n      --cacheDir string          filesystem path to cache directory\n  -c, --contentDir string        filesystem path to content directory\n      --editor string            edit new content with this editor, if provided\n  -f, --force                    overwrite file if it already exists\n  -h, --help                     help for content\n  -k, --kind string              content type to create\n      --renderSegments strings   named segments to render (configured in the segments config)\n  -t, --theme strings            themes to use (located in /themes/THEMENAME/)\n```\n\n----------------------------------------\n\nTITLE: Basic Array Slicing with Hugo After Function\nDESCRIPTION: Demonstrates basic usage of the after function with a slice of strings, showing how to skip the first N elements of a collection in a range loop.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/After.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := slice \"one\" \"two\" \"three\" \"four\" }}\n<ul>\n  {{ range after 2 $data }}\n    <li>{{ . }}</li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Error Handling with InSection\nDESCRIPTION: Shows how to implement error handling when using InSection by adding an else clause to the with statement.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/InSection.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $path := \"/auctions/2023-11\" }}\n{{ with .Site.GetPage $path }}\n  {{ $.InSection . }} → true\n{{ else }}\n  {{ errorf \"Unable to find the section with path %s\" $path }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Global CSV Resource with transform.Unmarshal in Hugo\nDESCRIPTION: Demonstrates an alternative approach to access a global CSV resource using resources.Get and transform.Unmarshal functions in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetCSV.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := dict }}\n{{ $p := \"data/pets.csv\" }}\n{{ with resources.Get $p }}\n  {{ $opts := dict \"delimiter\" \",\" }}\n  {{ $data = . | transform.Unmarshal $opts }}\n{{ else }}\n  {{ errorf \"Unable to get resource %q\" $p }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Footer Menu in Hugo Templates\nDESCRIPTION: This Go HTML template snippet shows how to access and iterate over the 'footer' menu structure defined in the site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/menus.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Site.Menus.footer }}\n  ...\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Template - Get LogicalName\nDESCRIPTION: Template code to safely access the LogicalName property of a File object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .File }}\n  {{ .LogicalName }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Image Processing Functions in Hugo\nDESCRIPTION: This snippet demonstrates the structure of documenting image processing functions in Hugo. It includes the title, link title, and description of the image functions page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Image functions\nlinkTitle: images\ndescription: Use these functions to create an image filter, apply an image filter to an image, and to retrieve image information.\ncategories: []\nkeywords: []\n---\n```\n\n----------------------------------------\n\nTITLE: Creating a Saturation Filter in Hugo\nDESCRIPTION: Creates an image filter that changes the saturation of an image by specifying a percentage value. The percentage must be in the range [-100, 500] where 0 has no effect.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Saturation.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Saturation 65 }}\n```\n\n----------------------------------------\n\nTITLE: Default Permalink Configuration in Hugo\nDESCRIPTION: The default configuration for permalinks in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/permalinks.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n{{< code-toggle config=permalinks />}}\n```\n\n----------------------------------------\n\nTITLE: Using urls.AbsURL with inputs without leading slashes (baseURL = https://example.org/)\nDESCRIPTION: Demonstrates the urls.AbsURL function with inputs that don't begin with a slash, where the path in the resulting URL is relative to the baseURL configuration. Here the baseURL is set to 'https://example.org/'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/AbsURL.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ absURL \"\" }}          → https://example.org/\n{{ absURL \"articles\" }}  → https://example.org/articles\n{{ absURL \"style.css\" }} → https://example.org/style.css\n```\n\n----------------------------------------\n\nTITLE: Rendered Output of Unsafe String (HTML)\nDESCRIPTION: This snippet shows the HTML output when rendering an unsafe string in a JavaScript context. The ampersand is escaped to its Unicode representation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/JSStr.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  const a = \"Title: \" + \"Lilo \\u0026 Stitch\";\n</script>\n```\n\n----------------------------------------\n\nTITLE: Disabling Taxonomies in Hugo Configuration\nDESCRIPTION: Example showing how to disable specific taxonomies using the disableKinds setting in the Hugo configuration. This example disables the categories and tags taxonomies.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/taxonomies.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\ndisableKinds = ['categories','tags']\n```\n\n----------------------------------------\n\nTITLE: Converting Weekday to Integer in Hugo Templates\nDESCRIPTION: Demonstrates converting a time.Time value's weekday to its integer representation (0-6) using the int function. Takes an ISO formatted datetime string and outputs the weekday number.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Weekday.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.Weekday | int }} → 5\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Resource Name Without Custom Definition in Hugo\nDESCRIPTION: Demonstrates how the Name method returns the file path relative to the page bundle when no custom name is defined.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Name.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Resources.Get \"images/Sunrise in Bryce Canyon.jpg\" }}\n  {{ .Name }} → images/Sunrise in Bryce Canyon.jpg\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Grouping Pages by Year and Month in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to group content by year and month using Hugo's GroupByDate function with the 'January 2006' layout format. It creates a hierarchical list where each date group displays its pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByDate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByDate \"January 2006\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Hugo Convert Command Options\nDESCRIPTION: This snippet shows the available options for the 'hugo convert' command. It includes options specific to the convert command as well as those inherited from parent commands.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_convert.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n  -h, --help            help for convert\n  -o, --output string   filesystem path to write files to\n      --unsafe          enable less safe operations, please backup first\n```\n\n----------------------------------------\n\nTITLE: Basic Code Block Highlighting in Hugo Templates\nDESCRIPTION: Demonstrates the basic usage of transform.HighlightCodeBlock to highlight code within a render hook. Returns wrapped HTML output with default highlighting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/HighlightCodeBlock.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $result := transform.HighlightCodeBlock . }}\n{{ $result.Wrapped }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Hugo Menu Using PageRef Fallback\nDESCRIPTION: Illustrates a Hugo template that uses the PageRef method as a fallback when the URL is not available. This approach can be useful in specific scenarios where you want to preserve the pageRef value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/PageRef.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    <li><a href=\"{{ or .URL .PageRef }}\">{{ .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: HTML Output of Sites Method in Hugo\nDESCRIPTION: This HTML snippet shows the expected output from the previous Go HTML template, listing links to the home pages of both German and English versions of the site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sites.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"https://example.org/de/\">Projekt Dokumentation</a></li>\n  <li><a href=\"https://example.org/en/\">Project Documentation</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Language in Descending Order in Hugo Templates\nDESCRIPTION: This snippet shows how to iterate through all site pages sorted by language in descending order by chaining the Reverse method to ByLanguage.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByLanguage.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Site.AllPages.ByLanguage.Reverse }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Menu Entries in Hugo Configuration\nDESCRIPTION: Example of how to define menu entries in Hugo's configuration file, setting up the main menu with Services, About, and Contact entries, each with a specified name, page reference, and weight for default sorting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/Reverse.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nname = 'Services'\npageRef = '/services'\nweight = 10\n\n[[menus.main]]\nname = 'About'\npageRef = '/about'\nweight = 20\n\n[[menus.main]]\nname = 'Contact'\npageRef = '/contact'\nweight = 30\n```\n\n----------------------------------------\n\nTITLE: Formatting Site's Last Modified Date in Hugo Templates\nDESCRIPTION: Demonstrates how to retrieve and format the site's last modification date using the Site.Lastmod method combined with Hugo's time.Format function. The example shows formatting the date in long format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Lastmod.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Lastmod | time.Format \":date_long\" }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Gen Chromastyles Command Options\nDESCRIPTION: These are the available options for customizing the generated CSS stylesheet, including highlight style and line number formatting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_gen_chromastyles.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                            help for chromastyles\n      --highlightStyle string           foreground and background colors for highlighted lines, e.g. --highlightStyle \"#fff000 bg:#000fff\"\n      --lineNumbersInlineStyle string   foreground and background colors for inline line numbers, e.g. --lineNumbersInlineStyle \"#fff000 bg:#000fff\"\n      --lineNumbersTableStyle string    foreground and background colors for table line numbers, e.g. --lineNumbersTableStyle \"#fff000 bg:#000fff\"\n      --style string                    highlighter style (see https://xyproto.github.io/splash/docs/) (default \"friendly\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-language Hugo Sites\nDESCRIPTION: TOML configuration for setting up multiple language sites in Hugo, defining German as default and English as secondary language with their respective properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Sites.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'de'\ndefaultContentLanguageInSubdir = false\n\n[languages.de]\nlanguageCode = 'de-DE'\nlanguageDirection = 'ltr'\nlanguageName = 'Deutsch'\ntitle = 'Projekt Dokumentation'\nweight = 1\n\n[languages.en]\nlanguageCode = 'en-US'\nlanguageDirection = 'ltr'\nlanguageName = 'English'\ntitle = 'Project Documentation'\nweight = 2\n```\n\n----------------------------------------\n\nTITLE: Example Error Output from Hugo Shortcode Position Method\nDESCRIPTION: This snippet shows the error message output when the 'greeting' argument is missing from the shortcode. It includes the shortcode name and the exact file path and position where the shortcode was called, demonstrating the utility of the Position method for debugging.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Position.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nERROR The \"myshortcode\" shortcode requires a 'greeting' argument. See \"/home/user/project/content/about.md:11:1\"\n```\n\n----------------------------------------\n\nTITLE: Rendered Translation List for Book 1 in English\nDESCRIPTION: This HTML snippet shows the rendered output of the translation list for the 'Book 1' page on the English site. It includes links to German and French translations.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Translations.md#2025-04-08_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/de/books/book-1/\" hreflang=\"de-DE\">Book 1 (Deutsch)</a></li>\n  <li><a href=\"/fr/books/book-1/\" hreflang=\"fr-FR\">Book 1 (Français)</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Using IsAncestor Function with Different Page Paths\nDESCRIPTION: Demonstrates how to check ancestor relationships between different pages using the IsAncestor function with the with statement for defensive coding.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsAncestor.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.GetPage \"/\" }}\n  {{ $.IsAncestor . }} → false\n{{ end }}\n\n{{ with .Site.GetPage \"/auctions\" }}\n  {{ $.IsAncestor . }} → false\n{{ end }}\n\n{{ with .Site.GetPage \"/auctions/2023-11\" }}\n  {{ $.IsAncestor . }} → true\n{{ end }}\n\n{{ with .Site.GetPage \"/auctions/2023-11/auction-2\" }}\n  {{ $.IsAncestor . }} → true\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Formatting Percentages using lang.FormatPercent in Hugo\nDESCRIPTION: Shows how to convert a decimal number into a percentage string with specified decimal precision using Hugo's language-aware formatting function. Takes a number and precision value as parameters and returns a localized percentage string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/FormatPercent.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ 512.5032 | lang.FormatPercent 2 }} → 512.50%\n```\n\n----------------------------------------\n\nTITLE: Formatting ExpiryDate with Hugo Templates\nDESCRIPTION: Example of using the ExpiryDate method with time.Format to display a formatted date in Hugo templates. This demonstrates how to convert the time.Time value to a human-readable date format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/ExpiryDate.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .ExpiryDate | time.Format \":date_medium\" }} → Oct 19, 2024\n```\n\n----------------------------------------\n\nTITLE: Unmarshaling Page Resource in Hugo\nDESCRIPTION: Shows how to unmarshal JSON data from a page resource within a page bundle.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Unmarshal.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := dict }}\n{{ $path := \"books.json\" }}\n{{ with .Resources.Get $path }}\n  {{ with . | transform.Unmarshal }}\n    {{ $data = . }}\n  {{ end }}\n{{ else }}\n  {{ errorf \"Unable to get page resource %q\" $path }}\n{{ end }}\n\n{{ range where $data \"author\" \"Victor Hugo\" }}\n  {{ .title }} → Les Misérables\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Named Arguments in Hugo Shortcode Template\nDESCRIPTION: Shows how to access named arguments using the Params method in a Hugo shortcode template file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Params.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Params.greeting }} → Hello\n{{ .Params.name }} → world\n```\n\n----------------------------------------\n\nTITLE: Hugo Relative URL Examples\nDESCRIPTION: Demonstrates how Hugo transforms site-relative URLs to page-relative URLs when relativeURLs is enabled\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/urls.md#2025-04-08_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/about\"> → <a href=\"../../about\">\n<img src=\"/a.gif\"> → <img src=\"../../a.gif\">\n```\n\n----------------------------------------\n\nTITLE: Hugo Mod Graph Command Options\nDESCRIPTION: The specific options available for the 'hugo mod graph' command, including settings for baseURL, cache directory, content directory, and themes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_graph.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -b, --baseURL string           hostname (and path) to the root, e.g. https://spf13.com/\n      --cacheDir string          filesystem path to cache directory\n      --clean                    delete module cache for dependencies that fail verification\n  -c, --contentDir string        filesystem path to content directory\n  -h, --help                     help for graph\n      --renderSegments strings   named segments to render (configured in the segments config)\n  -t, --theme strings            themes to use (located in /themes/THEMENAME/)\n```\n\n----------------------------------------\n\nTITLE: HTML Output of Map to YAML Conversion\nDESCRIPTION: This shows the HTML output generated by the previous map to YAML conversion example. The YAML is formatted with proper indentation and structure reflecting the original map hierarchy.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Remarshal.md#2025-04-08_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<pre>a: Hugo rocks!\nb:\n  answer: 42\n  question: What is 6x7?\nc:\n- foo\n- bar\n</pre>\n```\n\n----------------------------------------\n\nTITLE: AbsLangURL Usage With Leading Slash - Subdirectory\nDESCRIPTION: Examples of using absLangURL function with baseURL set to a subdirectory, showing URL generation for paths with leading slashes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/AbsLangURL.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ absLangURL \"/\" }}          → https://example.org/en/\n{{ absLangURL \"/articles\" }}  → https://example.org/en/articles\n{{ absLangURL \"/style.css\" }} → https://example.org/en/style.css\n```\n\n----------------------------------------\n\nTITLE: Rendering Safe HTML in Hugo Templates\nDESCRIPTION: Example demonstrating how to use the safeHTML function to render HTML content without escaping.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/HTML.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $html := \"<em>emphasized</em>\" }}\n{{ $html | safeHTML }}\n```\n\nLANGUAGE: html\nCODE:\n```\n<em>emphasized</em>\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Headers for Hugo Server (TOML)\nDESCRIPTION: This snippet demonstrates how to set custom HTTP headers for every server response in Hugo. It includes security-related headers like Content Security Policy and X-Frame-Options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/server.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[[headers]]\nfor = \"/**\"\n\n[headers.values]\nX-Frame-Options = \"DENY\"\nX-XSS-Protection = \"1; mode=block\"\nX-Content-Type-Options = \"nosniff\"\nReferrer-Policy = \"strict-origin-when-cross-origin\"\nContent-Security-Policy = \"script-src localhost:1313\"\n```\n\n----------------------------------------\n\nTITLE: Reverse Alphabetical Taxonomy Sorting in Hugo\nDESCRIPTION: Shows how to reverse the alphabetical sort order of taxonomy terms.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Alphabetical.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $taxonomyObject.Alphabetical.Reverse }}\n```\n\n----------------------------------------\n\nTITLE: English Pluralization Example\nDESCRIPTION: Demonstrates English pluralization rules in TOML format\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/Translate.md#2025-04-08_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[day]\none = 'day'\nother = 'days'\n\n[day_with_count]\none = '{{ . }} day'\nother = '{{ . }} days'\n```\n\n----------------------------------------\n\nTITLE: Using RenderString with Options in Hugo Templates\nDESCRIPTION: Shows how to use RenderString with options to control the display format. The 'display' option is set to 'block', which wraps the output in paragraph tags.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RenderString.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := \"An *emphasized* word\" }}\n{{ $s | .RenderString }} → An <em>emphasized</em> word\n\n{{ $opts := dict \"display\" \"block\" }}\n{{ $s | .RenderString $opts }} → <p>An <em>emphasized</em> word</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Menu Items with Titles in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to iterate through the main menu items in a Hugo site and display them as list items, using the Title method to set the title attribute of each link.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Title.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    <li><a href=\"{{ .URL }}\" title=\"{{ .Title }}>{{ .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination Navigation in Hugo Templates\nDESCRIPTION: Creates a paginated navigation system for regular pages with First, Previous, Next, and Last controls. The code first filters regular pages of type 'posts', creates a paginator, displays the paginated content, and builds navigation links between pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/Prev.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  <ul>\n    {{ with .First }}\n      <li><a href=\"{{ .URL }}\">First</a></li>\n    {{ end }}\n    {{ with .Prev }}\n      <li><a href=\"{{ .URL }}\">Previous</a></li>\n    {{ end }}\n    {{ with .Next }}\n      <li><a href=\"{{ .URL }}\">Next</a></li>\n    {{ end }}\n    {{ with .Last }}\n      <li><a href=\"{{ .URL }}\">Last</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Options for hugo convert toTOML Command\nDESCRIPTION: Shows the help flag available specifically for the toTOML conversion command.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_convert_toTOML.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for toTOML\n```\n\n----------------------------------------\n\nTITLE: Basic JavaScript Build Configuration in Hugo Templates\nDESCRIPTION: Example of configuring js.Build with conditional production settings, including minification, source maps, and integrity checks for the built JavaScript.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Build.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"js/main.js\" }}\n  {{ $opts := dict\n    \"minify\" hugo.IsProduction\n    \"sourceMap\" (cond hugo.IsProduction \"\" \"external\")\n    \"targetPath\" \"js/main.js\"\n  }}\n  {{ with . | js.Build $opts }}\n    {{ if hugo.IsProduction }}\n      {{ with . | fingerprint }}\n        <script src=\"{{ .RelPermalink }}\" integrity=\"{{ .Data.Integrity }}\" crossorigin=\"anonymous\"></script>\n      {{ end }}\n    {{ else }}\n      <script src=\"{{ .RelPermalink }}\"></script>\n    {{ end }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Basic Hugo Doc Generation Command\nDESCRIPTION: The basic syntax for generating Hugo CLI documentation. This command creates Markdown files for each command with appropriate front matter for Hugo documentation site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_gen_doc.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo gen doc [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Formatting Lastmod Using time.Format in Hugo Templates\nDESCRIPTION: Example of using the time.Format function to format and display the last modification date of a page in a Hugo template. This converts the time.Time value to a human-readable medium date format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Lastmod.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Lastmod | time.Format \":date_medium\" }} → Oct 19, 2023\n```\n\n----------------------------------------\n\nTITLE: Gallery Shortcode Using InnerDeindent Method\nDESCRIPTION: Improved Hugo shortcode implementation using InnerDeindent method to remove indentation before rendering the content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/InnerDeindent.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n<div class=\"gallery\">\n  {{ .InnerDeindent | strings.TrimSpace | .Page.RenderString }}\n</div>\n```\n\n----------------------------------------\n\nTITLE: Sorting Hugo Pages by Publish Date (Ascending)\nDESCRIPTION: Iterates through pages sorted by publish date in ascending order. For each page, renders a heading with a link using RelPermalink and LinkTitle.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByPublishDate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByPublishDate }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Calculating Power Using math.Pow in Hugo Templates\nDESCRIPTION: Example showing how to use the math.Pow function to calculate 2 raised to the power of 3, resulting in 8. The function takes two parameters: the base number (VALUE1) and the exponent (VALUE2), returning a float64 result.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Pow.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Pow 2 3 }} → 8\n```\n\n----------------------------------------\n\nTITLE: Counting Unique Words on a Page in Hugo\nDESCRIPTION: This example shows how to use the PlainWords method in combination with the uniq function to determine the approximate number of unique words on a page in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/PlainWords.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .PlainWords | uniq }} → 42\n```\n\n----------------------------------------\n\nTITLE: Basic PostCSS Usage in Hugo Templates\nDESCRIPTION: Example of using the postCSS function in Hugo templates to process a CSS resource from the assets directory and include it in your page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/PostCSS.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"css/main.css\" | postCSS }}\n  <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination and Navigation in Hugo Templates\nDESCRIPTION: This code snippet demonstrates how to create a paginated list of posts and build navigation links between pagers using Hugo's templating language. It includes creating a paginator, iterating through pages, and generating links for first, previous, next, and last pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/First.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  <ul>\n    {{ with .First }}\n      <li><a href=\"{{ .URL }}\">First</a></li>\n    {{ end }}\n    {{ with .Prev }}\n      <li><a href=\"{{ .URL }}\">Previous</a></li>\n    {{ end }}\n    {{ with .Next }}\n      <li><a href=\"{{ .URL }}\">Next</a></li>\n    {{ end }}\n    {{ with .Last }}\n      <li><a href=\"{{ .URL }}\">Last</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Default Hugo Page Frontmatter with Go Template\nDESCRIPTION: YAML frontmatter template that uses Hugo's built-in string manipulation functions to generate a page title from the content file name. It replaces hyphens with spaces and capitalizes the first letter of each word.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/archetypes/default.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: {{ replace .File.ContentBaseName \"-\" \" \" | strings.FirstUpper }}\ndescription:\ncategories: []\nkeywords: []\n---\n```\n\n----------------------------------------\n\nTITLE: Hugo Content Directory Structure Example\nDESCRIPTION: Shows a typical Hugo content directory structure with nested sections, regular pages, and resource directories.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RegularPages.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── lessons/\n│   ├── lesson-1/\n│   │   ├── _index.md\n│   │   ├── part-1.md\n│   │   └── part-2.md\n│   ├── lesson-2/\n│   │   ├── resources/\n│   │   │   ├── task-list.md\n│   │   │   └── worksheet.md\n│   │   ├── _index.md\n│   │   ├── part-1.md\n│   │   └── part-2.md\n│   ├── _index.md\n│   ├── grading-policy.md\n│   └── lesson-plan.md\n├── _index.md\n├── contact.md\n└── legal.md\n```\n\n----------------------------------------\n\nTITLE: Git Commands for Deployment\nDESCRIPTION: Git commands to commit and push the workflow configuration to GitHub repository.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-github-pages/index.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngit add -A\ngit commit -m \"Create hugo.yaml\"\ngit push\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Weight in Hugo Templates\nDESCRIPTION: Demonstrates how to access a page's weight value within Hugo templates using the .Weight method. Returns the integer weight value defined in the page's front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Weight.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Weight }} → 42\n```\n\n----------------------------------------\n\nTITLE: Creating UnsharpMask Image Filter in Hugo Templates\nDESCRIPTION: Creates an unsharp mask filter with specified sigma (10), amount (0.4), and threshold (0.03) parameters. The sigma controls the effect radius, amount determines edge border intensity, and threshold sets minimum brightness change for sharpening.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/UnsharpMask.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.UnsharpMask 10 0.4 0.03 }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Hugo Menu with Emoji Shortcodes\nDESCRIPTION: Go HTML template for rendering Hugo menu items with their pre and post emoji shortcodes. The template loops through main menu items and applies markdownify to render the emoji shortcodes correctly.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/menu-entries/pre-and-post.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    <li>\n      {{ .Pre | markdownify }}\n      <a href=\"{{ .URL }}\">{{ .Name }}</a>\n      {{ .Post | markdownify }}\n    </li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Busters for Tailwind Development in Hugo\nDESCRIPTION: Example configuration for Hugo's build section with cache busters set up to support Tailwind 3.x's JIT compiler. This configuration enables build stats and defines file patterns to trigger cache invalidation when specific files change.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/build.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[build]\n  [build.buildStats]\n    enable = true\n  [[build.cachebusters]]\n    source = \"assets/watching/hugo_stats\\\\.json\"\n    target = \"styles\\\\.css\"\n  [[build.cachebusters]]\n    source = \"(postcss|tailwind)\\\\.config\\\\.js\"\n    target = \"css\"\n  [[build.cachebusters]]\n    source = \"assets/.*\\\\.(js|ts|jsx|tsx)\"\n    target = \"js\"\n  [[build.cachebusters]]\n    source = \"assets/.*\\\\.(.*)$\"\n    target = \"$1\"\n```\n\n----------------------------------------\n\nTITLE: Block Comments in Hugo Templates\nDESCRIPTION: Examples of block comments in Hugo templates, with options for whitespace removal. Block comments span multiple lines and are not processed or displayed.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_18\n\nLANGUAGE: text\nCODE:\n```\n{{/*\nThis is a block comment.\n*/}}\n\n{{- /*\nThis is a block comment with\nadjacent whitespace removed.\n*/ -}}\n```\n\n----------------------------------------\n\nTITLE: Using RelLangURL with Inputs Without Leading Slashes\nDESCRIPTION: Examples of using the relLangURL function with various inputs that don't begin with a slash, showing how the function behaves when the site's baseURL is set to 'https://example.org/'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/RelLangURL.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ relLangURL \"\" }}                         → /en/\n{{ relLangURL \"articles\" }}                 → /en/articles\n{{ relLangURL \"style.css\" }}                → /en/style.css\n{{ relLangURL \"https://example.org\" }}      → https://example.org\n{{ relLangURL \"https://example.org/\" }}     → /en\n{{ relLangURL \"https://www.example.org\" }}  → https://www.example.org\n{{ relLangURL \"https://www.example.org/\" }} → https://www.example.org/\n```\n\n----------------------------------------\n\nTITLE: Including a Breadcrumbs Partial with Current Page Context in Hugo\nDESCRIPTION: Shows how to include a breadcrumbs partial template while passing the current page context (represented by the dot). This provides the partial with access to the current page's properties for navigation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/partials/Include.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partial \"breadcrumbs.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Privacy Settings in Hugo\nDESCRIPTION: This YAML configuration block sets the default privacy settings for Hugo's embedded templates. It includes options for various services like Disqus, Google Analytics, Instagram, Twitter, Vimeo, and YouTube.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/privacy.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nprivacy:\n  disqus:\n    disable: false\n  googleAnalytics:\n    anonymizeIP: false\n    disable: false\n    respectDoNotTrack: false\n    useSessionStorage: false\n  instagram:\n    disable: false\n    simple: false\n  twitter:\n    disable: false\n    enableDNT: false\n    simple: false\n    disableInlineCSS: false\n  vimeo:\n    disable: false\n    enableDNT: false\n    simple: false\n  youtube:\n    disable: false\n    privacyEnhanced: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Menu Entries with Identifiers in Hugo\nDESCRIPTION: TOML configuration showing how to define menu entries with unique identifiers, names, page references and weights in Hugo's menu system.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Identifier.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nidentifier = 'about'\nname = 'About'\npageRef = '/about'\nweight = 10\n\n[[menus.main]]\nidentifier = 'contact'\nname = 'Contact'\npageRef = '/contact'\nweight = 20\n```\n\n----------------------------------------\n\nTITLE: Using XMLEscape in RSS Templates with safeHTML\nDESCRIPTION: Shows how to use transform.XMLEscape in an RSS template rendered by Go's html/template package. The safeHTML function is used to prevent double escaping of the content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/XMLEscape.md#2025-04-08_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<description>{{ .Summary | transform.XMLEscape | safeHTML }}</description>\n```\n\n----------------------------------------\n\nTITLE: Using Truncate Method with Time Objects in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to truncate a time to the nearest hour using the Truncate method. It first creates a time object, defines a duration of 1 hour, and then applies the Truncate method to round down to the nearest hour boundary.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Truncate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $d := time.ParseDuration \"1h\"}}\n\n{{ ($t.Truncate $d).Format \"2006-01-02T15:04:05-00:00\" }} → 2023-01-27T23:00:00-00:00\n```\n\n----------------------------------------\n\nTITLE: Multiple Cascade Array Configuration in Hugo\nDESCRIPTION: Advanced example demonstrating how to define multiple cascade configurations with different targets and parameters based on path, kind, language and environment.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/cascade.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[[cascade]]\n[cascade.params]\ncolor = 'red'\n[cascade.target]\npath = '{/books/**}'\nkind = 'page'\nlang = '{en,de}'\n[[cascade]]\n[cascade.params]\ncolor = 'blue'\n[cascade.target]\npath = '{/films/**}'\nkind = 'page'\nenvironment = 'production'\n```\n\n----------------------------------------\n\nTITLE: Executing Hugo List Drafts Command\nDESCRIPTION: The basic syntax for running the 'hugo list drafts' command. This command lists all draft content in the Hugo project.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_drafts.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhugo list drafts [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Example Runner Script Using React in js.Batch\nDESCRIPTION: This JavaScript snippet demonstrates a runner script that uses React to render elements based on the group data structure received.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Batch.md#2025-04-08_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nimport * as ReactDOM from 'react-dom/client';\nimport * as React from 'react';\n\nexport default function Run(group) {\n  console.log('Running react-create-elements.js', group);\n  const scripts = group.scripts;\n  for (const script of scripts) {\n    for (const instance of script.instances) {\n      /* This is a convention in this project. */\n      let elId = `${script.id}-${instance.id}`;\n      let el = document.getElementById(elId);\n      if (!el) {\n        console.warn(`Element with id ${elId} not found`);\n        continue;\n      }\n      const root = ReactDOM.createRoot(el);\n      const reactEl = React.createElement(script.binding, instance.params);\n      root.render(reactEl);\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing URL Components in Go\nDESCRIPTION: Demonstrates how to use the urls.Parse function to extract components from a URL string. This function returns a struct with various URL parts.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/_index.md#2025-04-08_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ $url := \"https://example.org:123/foo?a=1&b=2\" }}\n{{ $parsed := urls.Parse $url }}\n\n{{ $parsed.Scheme }}   <!-- https -->\n{{ $parsed.Host }}     <!-- example.org:123 -->\n{{ $parsed.Path }}     <!-- /foo -->\n{{ $parsed.RawQuery }} <!-- a=1&b=2 -->\n```\n\n----------------------------------------\n\nTITLE: Example Content Structure in Hugo Sites\nDESCRIPTION: A sample directory structure showing content organization with weighted pages. Pages have different weight values assigned in their front matter which affects navigation order.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/page/next-and-prev.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── pages/\n│   ├── _index.md\n│   ├── page-1.md   <-- front matter: weight = 10\n│   ├── page-2.md   <-- front matter: weight = 20\n│   └── page-3.md   <-- front matter: weight = 30\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Displaying Dominant Colors Table in Hugo\nDESCRIPTION: Creates an HTML table showing dominant colors extracted from an image with their hexadecimal values and relative luminance.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Colors.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  <table>\n    <thead>\n      <tr>\n        <th>Color</th>\n        <th>Relative luminance</th>\n      </tr>\n    </thead>\n    <tbody>\n      {{ range .Colors }}\n        <tr>\n          <td>{{ .ColorHex }}</td>\n          <td>{{ .Luminance | lang.FormatNumber 4 }}</td>\n        </tr>\n      {{ end }}\n    </tbody>\n  </table>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Template Action Syntax in Hugo\nDESCRIPTION: Shows the basic syntax for template actions in Hugo, which are delimited by double curly braces {{ and }}\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/template-action.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{  }}\n```\n\n----------------------------------------\n\nTITLE: Using RelLangURL with Leading Slash and Subdirectory BaseURL\nDESCRIPTION: Examples demonstrating how relLangURL handles inputs with leading slashes when the baseURL includes a subdirectory ('https://example.org/docs/'), highlighting potential unexpected behavior.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/RelLangURL.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ relLangURL \"/\" }}          → /en/\n{{ relLangURL \"/articles\" }}  → /en/articles\n{{ relLangURL \"/style.css\" }} → /en/style.css\n```\n\n----------------------------------------\n\nTITLE: Hugo Convert to YAML Inherited Options\nDESCRIPTION: Options inherited from parent commands that can be used with the toYAML conversion command, including configuration, build, and output settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_convert_toYAML.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n  -o, --output string              filesystem path to write files to\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n      --unsafe                     enable less safe operations, please backup first\n```\n\n----------------------------------------\n\nTITLE: Displaying Hugo Dependencies Table Template\nDESCRIPTION: A Go HTML template that creates a styled table showing project dependencies including owner, path, version, timestamp, and vendor status. The template iterates through hugo.Deps to display each dependency's details in a formatted table row.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/Deps.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<h2>Dependencies</h2>\n<table class=\"table table-dark\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">Owner</th>\n      <th scope=\"col\">Path</th>\n      <th scope=\"col\">Version</th>\n      <th scope=\"col\">Time</th>\n      <th scope=\"col\">Vendor</th>\n    </tr>\n  </thead>\n  <tbody>\n    {{ range $index, $element := hugo.Deps }}\n    <tr>\n      <th scope=\"row\">{{ add $index 1 }}</th>\n      <td>{{ with $element.Owner }}{{ .Path }}{{ end }}</td>\n      <td>\n        {{ $element.Path }}\n        {{ with $element.Replace }}\n        => {{ .Path }}\n        {{ end }}\n      </td>\n      <td>{{ $element.Version }}</td>\n      <td>{{ with $element.Time }}{{ . }}{{ end }}</td>\n      <td>{{ $element.Vendor }}</td>\n    </tr>\n    {{ end }}\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Image Resources in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the ByType method to iterate over image resources and display them with their dimensions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Resources.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Resources.ByType \"image\" }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Comparing Time Objects with After Function in Hugo\nDESCRIPTION: This snippet illustrates how to use the 'After' function to compare two time objects in Hugo templates. It creates two time objects using the time.AsTime function and then compares them using the After method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/After.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t1 := time.AsTime \"2023-01-01T17:00:00-08:00\" }}\n{{ $t2 := time.AsTime \"2010-01-01T17:00:00-08:00\" }}\n\n{{ $t1.After $t2 }} → true\n```\n\n----------------------------------------\n\nTITLE: Creating Options Map for images.Dither in Hugo\nDESCRIPTION: Demonstrates how to create an options map for the images.Dither filter, specifying colors, method, and strength.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Dither.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict\n  \"colors\" (slice \"222222\" \"808080\" \"dddddd\")\n  \"method\" \"ClusteredDot4x4\"\n  \"strength\" 0.85\n}}\n```\n\n----------------------------------------\n\nTITLE: Using compare.Le with Numbers in Hugo Templates\nDESCRIPTION: Examples of using the compare.Le function to compare numbers in Hugo templates, returning true when the first argument is less than or equal to the second argument.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Le.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ le 1 1 }} → true\n{{ le 1 2 }} → true\n{{ le 2 1 }} → false\n\n{{ le 1 1 1 }} → true\n{{ le 1 1 2 }} → true\n{{ le 1 2 1 }} → true\n{{ le 1 2 2 }} → true\n\n{{ le 2 1 1 }} → false\n{{ le 2 1 2 }} → false\n{{ le 2 2 1 }} → false\n```\n\n----------------------------------------\n\nTITLE: Displaying Content Structure for Page Bundles in Hugo\nDESCRIPTION: Shows the directory structure of a Hugo content folder with a headless page bundle.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/GetPage.md#2025-04-08_snippet_5\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── headless/    \n│   ├── a.jpg\n│   ├── b.jpg\n│   ├── c.jpg\n│   └── index.md  <-- front matter: headless = true\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Comparing Various Data Types with compare.Ge in Hugo Templates\nDESCRIPTION: This snippet shows how to use the compare.Ge function to compare different data types including strings, dates, and booleans. It demonstrates the versatility of the function beyond numeric comparisons.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Ge.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ ge \"ab\" \"a\" }} → true\n{{ ge time.Now (time.AsTime \"1964-12-30\") }} → true\n{{ ge true false }} → true\n```\n\n----------------------------------------\n\nTITLE: Hugo Import Inherited Options\nDESCRIPTION: Command-line options inherited from parent commands that can be used with the import command. These include configuration, build, and filesystem options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_import.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Adding Numeric Values in Hugo Scratch Pad\nDESCRIPTION: Shows how to add numeric values using the Add method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/NewScratch.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := newScratch }}\n{{ $s.Set \"total\" 3 }}\n{{ $s.Add \"total\" 7 }}\n{{ $s.Get \"total\" }} → 10\n```\n\n----------------------------------------\n\nTITLE: Accessing LanguageName in Hugo Templates\nDESCRIPTION: Retrieves the human-readable language name from the site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Language.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Language.LanguageName }} → Deutsch\n```\n\n----------------------------------------\n\nTITLE: Applying Single Image Filter in Hugo\nDESCRIPTION: Demonstrates how to apply a single grayscale filter to an image resource using images.Filter function. The code gets an image resource and applies the grayscale filter, then renders an img tag with the filtered image's properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Filter.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with images.Filter images.Grayscale . }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating images.AutoOrient Filter in Hugo\nDESCRIPTION: This snippet demonstrates how to create an AutoOrient filter using the images.AutoOrient function in Hugo. The filter rotates and flips an image as needed based on its EXIF orientation tag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/AutoOrient.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.AutoOrient }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Permalinks for Taxonomy Terms\nDESCRIPTION: Demonstrates how to configure permalinks for taxonomy terms, omitting the taxonomy segment from the URL.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/permalinks.md#2025-04-08_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[permalinks.term]\n'tags' = '/:slug/'\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Specific Resource in Hugo Templates\nDESCRIPTION: This snippet shows how to use the Get method to retrieve a specific resource by its path and display it as an image with dimensions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Resources.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Resources.Get \"images/a.jpg\" }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating images.Dither Filter with Default Settings in Hugo\nDESCRIPTION: Demonstrates creating an images.Dither filter using default settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Dither.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Dither }}\n```\n\n----------------------------------------\n\nTITLE: Using RelPermalink in Go HTML Template\nDESCRIPTION: Demonstrates how to use the RelPermalink function in a Hugo template. It retrieves a page and outputs its relative permalink, which is based on the configured base URL.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RelPermalink.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $page := .Site.GetPage \"/about\" }}\n{{ $page.RelPermalink }} → /docs/about/\n```\n\n----------------------------------------\n\nTITLE: Filtering Resources by Type in Hugo Templates\nDESCRIPTION: Shows how to range through page resources filtered by type 'page' to build content in a Hugo template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/ResourceType.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Resources.ByType \"page\" }}\n  {{ .Content }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Taxonomy Terms in Hugo Templates\nDESCRIPTION: Shows how to access and display taxonomy terms from a template using the GetTerms method on a Page object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/front-matter.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .GetTerms \"tags\" }}\n  <p>Tags</p>\n  <ul>\n    {{ range . }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using RelLangURL with Subdirectory BaseURL\nDESCRIPTION: Examples of using the relLangURL function with a baseURL that includes a subdirectory ('https://example.org/docs/'), showing how paths are constructed relative to this base.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/RelLangURL.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ relLangURL \"\" }}                           → /docs/en/\n{{ relLangURL \"articles\" }}                   → /docs/en/articles\n{{ relLangURL \"style.css\" }}                  → /docs/en/style.css\n{{ relLangURL \"https://example.org\" }}        → https://example.org\n{{ relLangURL \"https://example.org/\" }}       → https://example.org/\n{{ relLangURL \"https://example.org/docs\" }}   → https://example.org/docs\n{{ relLangURL \"https://example.org/docs/\" }}  → /docs/en\n{{ relLangURL \"https://www.example.org\" }}    → https://www.example.org\n{{ relLangURL \"https://www.example.org/\" }}   → https://www.example.org/\n```\n\n----------------------------------------\n\nTITLE: Math Functions YAML Frontmatter\nDESCRIPTION: YAML frontmatter metadata defining the documentation page for math functions in Hugo. Specifies the title, link title, and description for the documentation section.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Math functions\nlinkTitle: math\ndescription: Use these functions to perform mathematical operations.\ncategories: []\n---\n```\n\n----------------------------------------\n\nTITLE: Checking Menu Entry Page Existence in Hugo\nDESCRIPTION: This code demonstrates how to check if a menu entry corresponds to an actual page in Hugo. The .Page method returns the associated page object if it exists, or nil if there's no corresponding page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/_index.md#2025-04-08_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{ .Page }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Hugo Menu Entries with Page Properties\nDESCRIPTION: Template code demonstrating how to render menu entries differently based on whether they are associated with a page, using RelPermalink and Title for page-associated entries, and URL/Name for standalone entries.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Page.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    {{ with .Page }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></li>\n    {{ else }}\n      <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n    {{ end }}\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Accessing LanguageCode in Hugo Templates\nDESCRIPTION: Retrieves the language code from the site configuration. If not defined, it falls back to the 'Lang' value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Language.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Language.LanguageCode }} → de-DE\n```\n\n----------------------------------------\n\nTITLE: Retrieving Image Width in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the Width method on an image resource retrieved with resources.Get. It returns the width of the image as an integer.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Width.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ .Width }} → 600\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Comparing Different Data Types with Lt Function in Hugo Templates\nDESCRIPTION: Demonstrates using the Lt function to compare strings, dates, and boolean values in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Lt.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ lt \"ab\" \"a\" }} → false\n{{ lt time.Now (time.AsTime \"1964-12-30\") }} → false\n{{ lt true false }} → false\n```\n\n----------------------------------------\n\nTITLE: Using Len Function in Hugo Templates\nDESCRIPTION: Demonstrates how to use the Len function to get the length in bytes of rendered page content. Returns an integer value representing the content length.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Len.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Len }} → 42\n```\n\n----------------------------------------\n\nTITLE: Basic Integer Sequence Generation in Hugo Templates\nDESCRIPTION: Demonstrates various ways to generate integer sequences using collections.Seq function, including single parameter (end), two parameters (start, end), and three parameters (start, end, increment).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Seq.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ seq 2 }} → [1 2]\n{{ seq 0 2 }} → [0 1 2]\n{{ seq -2 2 }} → [-2 -1 0 1 2]\n{{ seq -2 2 2 }} → [-2 0 2]\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo using MacPorts on macOS\nDESCRIPTION: This command installs the extended edition of Hugo using MacPorts, a free and open-source package manager for macOS. Sudo privileges are required for installation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/macos.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nsudo port install hugo\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Hugo Documentation Server\nDESCRIPTION: Commands to install dependencies and start the Hugo documentation server locally. Note that the need for 'npm i' may be removed in future updates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/README.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm i\nhugo server\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Layout in Front Matter (Markdown)\nDESCRIPTION: This example shows how to specify a custom 'layout' field in the front matter of a Markdown content file. Setting layout to 'contact' will cause Hugo to render the page using the contact.html template instead of the default single.html template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Layout.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\ntitle = 'Contact'\nlayout = 'contact'\n```\n\n----------------------------------------\n\nTITLE: Configuring Taxonomies in Hugo\nDESCRIPTION: A configuration example showing how to define a custom 'author' taxonomy in Hugo's site configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/URLize.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n[taxonomies]\nauthor = 'authors'\n```\n\n----------------------------------------\n\nTITLE: Calculating Arcsine using math.Asin in Go HTML Template\nDESCRIPTION: This snippet demonstrates how to use the math.Asin function to calculate the arcsine of 1 in radians. The function takes a single numeric value as input and returns the result as a float64.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Asin.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Asin 1 }} → 1.5707963267948966\n```\n\n----------------------------------------\n\nTITLE: Complex Article Layout with After and First Functions\nDESCRIPTION: Shows how to combine after and first functions to create a featured article section with the most recent post and a recent articles section with the 2nd to 4th most recent posts, sorted by publish date.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/After.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <section class=\"row featured-article\">\n    <h2>Featured Article</h2>\n    {{ range first 1 .Pages.ByPublishDate.Reverse }}\n    <header>\n      <h3><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></h3>\n    </header>\n    <p>{{ .Description }}</p>\n  {{ end }}\n  </section>\n  <div class=\"row recent-articles\">\n    <h2>Recent Articles</h2>\n    {{ range first 3 (after 1 .Pages.ByPublishDate.Reverse) }}\n      <section class=\"recent-article\">\n        <header>\n          <h3><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></h3>\n        </header>\n        <p>{{ .Description }}</p>\n      </section>\n    {{ end }}\n  </div>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using urls.JoinPath Function in Hugo Templates\nDESCRIPTION: Demonstrates various use cases of the urls.JoinPath function in Hugo. It shows how the function handles different inputs, including empty arguments, single elements, multiple elements, and slices. The function joins URL path elements and cleans the result, retaining consecutive leading slashes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/JoinPath.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ urls.JoinPath }} → \"\" (empty string)\n{{ urls.JoinPath \"\" }} → /\n{{ urls.JoinPath \"a\" }} → a\n{{ urls.JoinPath \"a\" \"b\" }} → a/b\n{{ urls.JoinPath \"/a\" \"b\" }} → /a/b\n{{ urls.JoinPath \"https://example.org\" \"b\" }} → https://example.org/b\n\n{{ urls.JoinPath (slice \"a\" \"b\") }} → a/b\n```\n\n----------------------------------------\n\nTITLE: Default File Cache Configuration in Hugo\nDESCRIPTION: This snippet shows the default configuration for file caches in Hugo. It includes settings for various cache types such as getjson, getcsv, images, and assets.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/caches.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n{{< code-toggle config=caches />}}\n```\n\n----------------------------------------\n\nTITLE: Inequality Test Not Equal to True\nDESCRIPTION: Template code to filter pages where exclude parameter is not equal to true\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_23\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range where .Site.RegularPages \"Params.exclude\" \"ne\" true }}\n    <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n  {{ end }}\n</ul>\n```\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/posts/post-1/\">Post 1</a></li>\n  <li><a href=\"/posts/post-3/\">Post 3</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Directory Structure Example in Hugo\nDESCRIPTION: Example content directory structure showing hierarchy of sections including auctions, books, and films with their respective index and content files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sections.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── auctions/\n│   ├── 2023-11/\n│   │   ├── _index.md     <-- front matter: weight = 202311\n│   │   ├── auction-1.md\n│   │   └── auction-2.md\n│   ├── 2023-12/\n│   │   ├── _index.md     <-- front matter: weight = 202312\n│   │   ├── auction-3.md\n│   │   └── auction-4.md\n│   ├── _index.md         <-- front matter: weight = 30\n│   ├── bidding.md\n│   └── payment.md\n├── books/\n│   ├── _index.md         <-- front matter: weight = 20\n│   ├── book-1.md\n│   └── book-2.md\n├── films/\n│   ├── _index.md         <-- front matter: weight = 10\n│   ├── film-1.md\n│   └── film-2.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Creating Opacity Filter in Hugo Templates\nDESCRIPTION: Creates an image filter that sets opacity to 65% transparency. The opacity value must be between 0 (fully transparent) and 1 (fully opaque).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Opacity.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Opacity 0.65 }}\n```\n\n----------------------------------------\n\nTITLE: Including CSS Partial in Base Template\nDESCRIPTION: Base template code showing how to include the Tailwind CSS processing partial\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/TailwindCSS.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n<head>\n  ...\n  {{ partialCached \"css.html\" . }}\n  ...\n<head>\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Processing Options in Hugo (TOML)\nDESCRIPTION: This snippet shows the default configuration for image processing in Hugo. It includes settings for anchor placement, background color, WebP hint, quality, and resampling filter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/imaging.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[imaging]\nanchor = 'Smart'\nbgColor = '#ffffff'\nhint = 'photo'\nquality = 75\nresampleFilter = 'box'\n```\n\n----------------------------------------\n\nTITLE: Using IsPage Method in Hugo Templates\nDESCRIPTION: Example of how to use the IsPage method in Hugo templates to check if a page object is a regular page. This returns true for pages and false for sections, home pages, etc.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsPage.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .IsPage }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Raw Content in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the RawContent method on a Page object to retrieve the raw content of a page without its front matter. This is particularly useful when rendering a page in plain text output formats.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RawContent.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .RawContent }}\n```\n\n----------------------------------------\n\nTITLE: Using NumberOfElements with Hugo Pagination\nDESCRIPTION: Shows how to create a paginated list of posts and display the total number of elements in the current page. The code filters regular pages by type, creates a paginator, loops through paginated pages, and outputs the count using NumberOfElements.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/NumberOfElements.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  {{ .NumberOfElements }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Generating Relative URLs with urls.RelRef in Hugo Templates\nDESCRIPTION: These examples demonstrate various uses of the relref function to generate relative URLs. They show basic usage, using options maps, specifying language, and setting output format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/RelRef.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ relref . \"/books/book-1\" }} → /en/books/book-1/\n\n{{ $opts := dict \"path\" \"/books/book-1\" }}\n{{ relref . $opts }} → /en/books/book-1/\n\n{{ $opts := dict \"path\" \"/books/book-1\" \"lang\" \"de\" }}\n{{ relref . $opts }} → /de/books/book-1/\n\n{{ $opts := dict \"path\" \"/books/book-1\" \"lang\" \"de\" \"outputFormat\" \"json\" }}\n{{ relref . $opts }} → /de/books/book-1/index.json\n```\n\n----------------------------------------\n\nTITLE: Calculating Tangent in Hugo Templates\nDESCRIPTION: Demonstrates how to calculate the tangent of a radian value using the math.Tan function. Takes a number in radians as input and returns the tangent as a float64 value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Tan.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Tan 1 }} → 1.557407724654902\n```\n\n----------------------------------------\n\nTITLE: Image Fitting in Hugo\nDESCRIPTION: Shows how to downscale an image to fit given dimensions while maintaining aspect ratio in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_9\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image := $image.Fit \"600x400\" }}\n```\n\n----------------------------------------\n\nTITLE: Basic Alert Syntax Example\nDESCRIPTION: Examples of basic alert-style blockquotes using GitHub-compatible syntax.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/blockquotes.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n> [!NOTE]\n> Useful information that users should know, even when skimming content.\n\n> [!TIP]\n> Helpful advice for doing things better or more easily.\n\n> [!IMPORTANT]\n> Key information users need to know to achieve their goal.\n\n> [!WARNING]\n> Urgent info that needs immediate user attention to avoid problems.\n\n> [!CAUTION]\n> Advises about risks or negative outcomes of certain actions.\n```\n\n----------------------------------------\n\nTITLE: Logging HTTP Request Errors as Warnings in Hugo Templates\nDESCRIPTION: This snippet shows how to log remote resource errors as warnings instead of errors using the warnf function, which allows the build to continue even when HTTP requests fail.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Err.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://broken-example.org/images/a.jpg\" }}\n{{ with resources.GetRemote $url }}\n  {{ with .Err }}\n    {{ warnf \"%s\" . }}\n  {{ else }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ else }}\n  {{ errorf \"Unable to get remote resource %q\" $url }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using math.Acos Function in Hugo Templates\nDESCRIPTION: Demonstrates how to use the math.Acos function to calculate the arccosine of a value in radians. In this example, the arccosine of 1 is computed, which equals 0 radians.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Acos.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Acos 1 }} → 0\n```\n\n----------------------------------------\n\nTITLE: Hugo Template - Get Dir Path\nDESCRIPTION: Template code to safely access the Dir property of a File object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .File }}\n  {{ .Dir }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Module NPM Pack Command Options\nDESCRIPTION: Available command-specific options for the hugo mod npm pack command including baseURL, cacheDir, contentDir, and theme settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_npm_pack.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -b, --baseURL string           hostname (and path) to the root, e.g. https://spf13.com/\n      --cacheDir string          filesystem path to cache directory\n  -c, --contentDir string        filesystem path to content directory\n  -h, --help                     help for pack\n      --renderSegments strings   named segments to render (configured in the segments config)\n  -t, --theme strings            themes to use (located in /themes/THEMENAME/)\n```\n\n----------------------------------------\n\nTITLE: Delimiting a Slice in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the delimit function to join elements of a slice with a comma separator, and optionally specifying a different separator for the last element.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Delimit.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"b\" \"a\" \"c\" }}\n{{ delimit $s \", \" }} → b, a, c\n{{ delimit $s \", \" \" and \"}} → b, a and c\n```\n\n----------------------------------------\n\nTITLE: Basic Partial Caching in Hugo Templates\nDESCRIPTION: Demonstrates the simplest usage of partialCached function to cache a footer partial template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/partials/IncludeCached.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partialCached \"footer.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Language Direction in Hugo Templates\nDESCRIPTION: Retrieves the language direction ('ltr' or 'rtl') from the site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Language.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Language.LanguageDirection }} → ltr\n```\n\n----------------------------------------\n\nTITLE: Rounding Duration Objects in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the Round method to round a duration to the nearest multiple of another duration. It shows rounding to the nearest 2 hours, 3 minutes, and 4 seconds using time.ParseDuration to create the duration objects.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/duration/Round.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $d = time.ParseDuration \"3.5h2.5m1.5s\" }}\n\n{{ $d.Round (time.ParseDuration \"2h\") }} → 4h0m0s\n{{ $d.Round (time.ParseDuration \"3m\") }} → 3h33m0s\n{{ $d.Round (time.ParseDuration \"4s\") }} → 3h32m32s\n```\n\n----------------------------------------\n\nTITLE: Namespacing Custom Parameters for Modules and Themes\nDESCRIPTION: This snippet shows how to namespace custom parameters for modules and themes in Hugo to prevent naming conflicts. It includes an example of defining colors for a specific module.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/params.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[params.modules.myModule.colors]\nbackground = '#efefef'\nfont = '#222222'\n```\n\n----------------------------------------\n\nTITLE: Formatting Float Numbers with fmt.Printf in Hugo\nDESCRIPTION: This example shows how to use fmt.Printf to format a float number in a Hugo template. It demonstrates limiting the number of decimal places displayed.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Printf.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pi := 3.14159265 }}\n{{ printf \"Pi is approximately %.2f.\" $pi }} → 3.14\n```\n\n----------------------------------------\n\nTITLE: RelURL Usage With Leading Slash - Base URL Example 1\nDESCRIPTION: Shows RelURL function behavior with baseURL='https://example.org/' when input begins with a slash. Demonstrates how URLs are relative to the protocol+host.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/RelURL.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ relURL \"/\" }}          → /\n{{ relURL \"/articles\" }}  → /articles\n{{ relURL \"/style.css\" }} → /style.css\n```\n\n----------------------------------------\n\nTITLE: Configuring X Services in Hugo\nDESCRIPTION: Demonstrates the configuration for X services in Hugo's configuration file, including the option to disable inline CSS.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/x.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  x:\n    disableInlineCSS: false\n```\n\n----------------------------------------\n\nTITLE: Random Float Generation (0.1-5.0) in Hugo\nDESCRIPTION: Generates a random float with one decimal place in the interval [0.1, 5.0] using multiplication, ceiling, and division\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Rand.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ div (math.Rand | mul 50 | math.Ceil) 10 }}\n```\n\n----------------------------------------\n\nTITLE: Example Content Structure for Hugo Site\nDESCRIPTION: Sample directory structure for a Hugo site showing how content is organized with sections, subsections, and regular pages. This structure is used to demonstrate the behavior of RegularPagesRecursive method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RegularPagesRecursive.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── lessons/\n│   ├── lesson-1/\n│   │   ├── _index.md\n│   │   ├── part-1.md\n│   │   └── part-2.md\n│   ├── lesson-2/\n│   │   ├── resources/\n│   │   │   ├── task-list.md\n│   │   │   └── worksheet.md\n│   │   ├── _index.md\n│   │   ├── part-1.md\n│   │   └── part-2.md\n│   ├── _index.md\n│   ├── grading-policy.md\n│   └── lesson-plan.md\n├── _index.md\n├── contact.md\n└── legal.md\n```\n\n----------------------------------------\n\nTITLE: Hugo Theme Creation Basic Options\nDESCRIPTION: Available command-specific options for the 'hugo new theme' command, showing the help flag option.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_new_theme.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for theme\n```\n\n----------------------------------------\n\nTITLE: Using Deprecated crypto.FNV32a Function in Hugo\nDESCRIPTION: Example usage of the deprecated crypto.FNV32a function in Hugo. This function takes a string as input and returns a 32-bit integer hash. It has been deprecated in Hugo v0.129.0 and will expire on 2026-07-31.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/crypto/FNV32a.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\ncrypto.FNV32a STRING\n```\n\n----------------------------------------\n\nTITLE: Basic String Trimming with strings.TrimLeft\nDESCRIPTION: Demonstrates removing leading 'a' characters from a string using strings.TrimLeft function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/TrimLeft.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.TrimLeft \"a\" \"abba\" }} → bba\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Cache Behavior in Hugo\nDESCRIPTION: TOML configuration for HTTP cache behavior in Hugo. The default configuration disables caching for all resources by excluding everything (**) and including nothing.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/http-cache.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[HTTPCache.cache.for]\\nexcludes = ['**']\\nincludes = []\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages Within Date Groups in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to sort pages within each date group using the ByTitle method. This allows for customizing the order of pages within groups independently of the group sorting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByDate.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByDate \"January 2006\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages.ByTitle }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Modifying HTML Media Type Configuration in Hugo\nDESCRIPTION: Example showing how to modify the primary suffix for text/html media type from 'html' to 'htm' in Hugo configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/media-types.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[mediaTypes.'text/html']\nsuffixes = ['htm','html']\n```\n\n----------------------------------------\n\nTITLE: Using FuzzyWordCount Method in Hugo Templates\nDESCRIPTION: Demonstrates how to use the FuzzyWordCount method on a Page object in Hugo templates. This method returns the number of words in the page's content, rounded up to the nearest multiple of 100.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/FuzzyWordCount.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .FuzzyWordCount }} → 200\n```\n\n----------------------------------------\n\nTITLE: Project Structure Example\nDESCRIPTION: Example directory structure showing content organization and CODEOWNERS file placement\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/CodeOwners.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nmy-project/\n├── content/\n│   ├── books/\n│   │   └── les-miserables.md\n│   └── films/\n│       └── the-hunchback-of-notre-dame.md\n└── CODEOWNERS\n```\n\n----------------------------------------\n\nTITLE: Adding Syntax CSS to Base Template in Hugo\nDESCRIPTION: This snippet shows how to link a syntax highlighting CSS file in the base template of a Hugo site. It uses the resources.Get function to retrieve the CSS file and includes integrity and crossorigin attributes for security.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/markup.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n<head>\n  ...\n  {{ with resources.Get \"css/syntax.css\" }}\n    <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\" integrity=\"{{ .Data.Integrity }}\" crossorigin=\"anonymous\">\n  {{ end }}\n  ...\n</head>\n```\n\n----------------------------------------\n\nTITLE: Front Matter for a Hugo Content Page\nDESCRIPTION: Example front matter for a book content page that includes a title and an author taxonomy value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/URLize.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntitle = 'Les Misérables'\nauthors = ['Victor Hugo']\n```\n\n----------------------------------------\n\nTITLE: Basic Random Number Generation in Hugo\nDESCRIPTION: Generates a basic pseudo-random number between 0.0 and 1.0 (exclusive)\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Rand.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Rand }} → 0.6312770459590062\n```\n\n----------------------------------------\n\nTITLE: Counting Words using strings.CountWords in Hugo Template\nDESCRIPTION: Demonstrates how to use the strings.CountWords function (or its alias 'countwords') to count the number of words in a string. Returns an integer representing the word count.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/CountWords.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"Hugo is a static site generator.\" | countwords }} → 6\n```\n\n----------------------------------------\n\nTITLE: Appending Slice to Slice in Hugo Template\nDESCRIPTION: Illustrates appending one slice to another using the append function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Append.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"a\" \"b\" }}\n{{ $s }} → [a b]\n\n{{ $s = $s | append (slice \"c\" \"d\") }}\n{{ $s }} → [a b c d]\n```\n\n----------------------------------------\n\nTITLE: Generated HTML Output for Sections\nDESCRIPTION: The resulting HTML output showing the rendered section links with their respective titles and URLs.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Sections.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<h2><a href=\"/books/\">Books</a></h2>\n<h2><a href=\"/films/\">Films</a></h2>\n```\n\n----------------------------------------\n\nTITLE: Configuring Module Imports in TOML\nDESCRIPTION: Example of configuring module imports, including paths and options to control how imported modules behave.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/module.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[[module.imports]]\ndisable = false\nignoreConfig = false\nignoreImports = false\npath = \"github.com/gohugoio/hugoTestModules1_linux/modh1_2_1v\"\n[[module.imports]]\npath = \"my-shortcodes\"\n```\n\n----------------------------------------\n\nTITLE: Using math.Max Function in Hugo Templates\nDESCRIPTION: This example demonstrates how to use the math.Max function in Hugo templates to find the greatest value from a mixed input of scalars and slices. The function accepts multiple arguments of various types and returns the maximum value found.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Max.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Max 1 (slice 2 3) 4 }} → 4\n```\n\n----------------------------------------\n\nTITLE: Inserting Quick Reference Shortcode in Hugo Markdown\nDESCRIPTION: This snippet uses a Hugo shortcode to insert a quick reference section for functions. The shortcode takes a 'section' parameter set to 'functions'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/functions.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% quick-reference section=\"functions\" %}}\n```\n\n----------------------------------------\n\nTITLE: Hugo TableOfContents Configuration\nDESCRIPTION: Configuration options for customizing the TableOfContents output, including start/end levels and ordered/unordered list settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/TableOfContents.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[markup.tableOfContents]\nendLevel = 3\nordered = false\nstartLevel = 2\n```\n\n----------------------------------------\n\nTITLE: Converting String to Title Case with strings.Title in Hugo\nDESCRIPTION: This snippet demonstrates the use of the strings.Title function in Hugo to convert a string to title case. It takes a lowercase string as input and returns it with proper title capitalization.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Title.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ title \"table of contents (TOC)\" }} → Table of Contents (TOC)\n```\n\n----------------------------------------\n\nTITLE: Hugo Template - Get Relative Path\nDESCRIPTION: Template code to safely access the Path property of a File object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .File }}\n  {{ .Path }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using else with range Statement in Hugo Templates\nDESCRIPTION: Illustrates using else within a range loop to handle empty collections. The else block executes when the range collection is empty or nil.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/else.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := slice 1 2 3 }}\n{{ range $var }}\n  {{ . }} → 1 2 3 \n{{ else }}\n  {{ print \"var is falsy\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Hugo Configuration\nDESCRIPTION: Shows commands to display the complete site configuration, specific configuration settings, and configured file mounts in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/introduction.md#2025-04-08_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nhugo config\nhugo config | grep [key]\nhugo config mounts\n```\n\n----------------------------------------\n\nTITLE: Retrieving Page from Different Language in Hugo\nDESCRIPTION: Demonstrates how to use GetPage to access a page from a specific language in a multilingual Hugo project.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/GetPage.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with where .Site.Sites \"Language.Lang\" \"eq\" \"de\" }}\n  {{ with index . 0 }}\n    {{ with .GetPage \"/works/paintings/starry-night\" }}\n      {{ .Title }} → Sternenklare Nacht\n    {{ end }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Posting Data with resources.GetRemote in Hugo\nDESCRIPTION: Example of posting JSON data to an API endpoint using resources.GetRemote with POST method, setting the appropriate content type header.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/GetRemote.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://example.org/api\" }}\n{{ $opts := dict\n  \"method\" \"post\"\n  \"body\" `{\"complete\": true}` \n  \"headers\" (dict  \"Content-Type\" \"application/json\")\n}}\n{{ $resource := resources.GetRemote $url $opts }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Safe String in JavaScript using safe.JSStr (Go HTML Template)\nDESCRIPTION: This snippet demonstrates how to use the safe.JSStr function to declare a string as safe for JavaScript. The function is used via the safeJSStr alias.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/JSStr.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $title := \"Lilo & Stitch\" }}\n<script>\n  const a = \"Title: \" + {{ $title | safeJSStr }};\n</script>\n```\n\n----------------------------------------\n\nTITLE: Custom Date Format in Archetypes\nDESCRIPTION: Example of customizing the date format in an archetype template using the time.Now function, providing more control over date presentation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\ntitle = '{{ replace .File.ContentBaseName `-` ` ` | title }}'\ndate = '{{ time.Now.Format \"2006-01-02\" }}'\ndraft = true\n```\n\n----------------------------------------\n\nTITLE: Retrieving Project Working Directory in Hugo\nDESCRIPTION: This snippet demonstrates how to use the hugo.WorkingDir function to get the absolute path of the current Hugo project's working directory. The function returns a string representing the full filesystem path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/WorkingDir.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.WorkingDir }} → /home/user/projects/my-hugo-site\n```\n\n----------------------------------------\n\nTITLE: If-Else Statement in Hugo Go Templates\nDESCRIPTION: Shows how to use 'if' with 'else' statement to provide alternative code execution when the condition is not met (falsy).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/if.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := \"foo\" }}\n{{ if $var }}\n  {{ $var }} → foo\n{{ else }}\n  {{ print \"var is falsy\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Module Init Command Options\nDESCRIPTION: Available options for the 'hugo mod init' command. These options allow customization of various aspects such as base URL, cache directory, content directory, and themes to use.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_init.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -b, --baseURL string           hostname (and path) to the root, e.g. https://spf13.com/\n      --cacheDir string          filesystem path to cache directory\n  -c, --contentDir string        filesystem path to content directory\n  -h, --help                     help for init\n      --renderSegments strings   named segments to render (configured in the segments config)\n  -t, --theme strings            themes to use (located in /themes/THEMENAME/)\n```\n\n----------------------------------------\n\nTITLE: Nested Where Comparison (Method 1)\nDESCRIPTION: Shows how to chain multiple where functions sequentially to filter pages by multiple criteria.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_16\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where .Site.RegularPages \"Type\" \"tutorials\" }}\n{{ $pages = where $pages \"Params.level\" \"eq\" \"beginner\" }}\n```\n\n----------------------------------------\n\nTITLE: Specifying Time Zone in time.AsTime Function\nDESCRIPTION: Shows how to override the default time zone by providing a second argument to the time.AsTime function in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/time/AsTime.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ time.AsTime \"15 Oct 2023\" \"America/Los_Angeles\" }}\n```\n\n----------------------------------------\n\nTITLE: Capturing Font as a Resource in Hugo\nDESCRIPTION: This snippet demonstrates how to fetch a remote font file as a resource. It includes error handling to ensure the font is properly loaded or to report any issues encountered during the process.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Text.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $font := \"\" }}\n{{ with try (resources.GetRemote $fontPath) }}\n  {{ with .Err }}\n    {{ errorf \"%s\" . }}\n  {{ else with .Value }}\n    {{ $font = . }}\n  {{ else }}\n    {{ errorf \"Unable to get resource %s\" $fontPath }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating a Nested Dictionary Structure in Hugo\nDESCRIPTION: This snippet demonstrates how to create a deeply nested dictionary structure in Hugo templates by using a slice of strings as a key. The slice elements represent nested levels in the resulting map.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Dictionary.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $m := dict (slice \"a\" \"b\" \"c\") \"value\" }}\n```\n\n----------------------------------------\n\nTITLE: Declaring JavaScript Content as Safe in Hugo Templates\nDESCRIPTION: This snippet illustrates how to use the safeJS function to mark a string as safe JavaScript content, allowing it to be used in script tags or event handlers without escaping in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/_index.md#2025-04-08_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ $js := \"alert('Hello');\" }}\n<script>{{ $js | safeJS }}</script>\n```\n\n----------------------------------------\n\nTITLE: Formatting time.Time Values in Hugo Templates\nDESCRIPTION: Demonstrates how to format a time.Time value created with time.AsTime using the time.Format function. This example converts an ISO 8601 date string to a custom format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/time/Format.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-10-15T13:18:50-07:00\" }}\n{{ time.Format \"2 Jan 2006\" $t }} → 15 Oct 2023\n```\n\n----------------------------------------\n\nTITLE: Checking Resource Type in Hugo Templates\nDESCRIPTION: Demonstrates how to get the resource type of an image file using the ResourceType method and MediaType.MainType property.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/ResourceType.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"image/a.jpg\" }}\n  {{ .ResourceType }} → image\n  {{ .MediaType.MainType }} → image\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Adding Attributes to Blockquotes in Hugo Markdown\nDESCRIPTION: Example of adding class and hidden attributes to a blockquote using Markdown attributes in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/markdown-attributes.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n> This is a blockquote.\n{class=\"foo bar\" hidden=hidden}\n```\n\n----------------------------------------\n\nTITLE: Accessing Taxonomy Page in Hugo Templates\nDESCRIPTION: Demonstrates how to safely access a taxonomy page using the Page method. The example includes defensive coding with the 'with' statement to handle cases where a taxonomy has no terms.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Page.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.Taxonomies.tags.Page }}\n  <a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: HTML Output with Inner Method\nDESCRIPTION: The resulting HTML output when using the Inner method, showing how indented content is incorrectly rendered as code blocks.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/InnerDeindent.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li>\n    <p>Gallery one</p>\n    <div class=\"gallery\">\n      <pre><code>![kitten a](images/a.jpg)\n      ![kitten b](images/b.jpg)\n      </code></pre>\n    </div>\n  </li>\n  <li>\n    <p>Gallery two</p>\n    <div class=\"gallery\">\n      <pre><code>![kitten c](images/c.jpg)\n      ![kitten d](images/d.jpg)\n      </code></pre>\n    </div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Hugo Showcase\nDESCRIPTION: Front matter configuration block defining metadata for a Hugo showcase submission, including title, description, site URL, source code link and author credit.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/showcase/_template/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Myshowcase\ndate: \ndraft: true\ndescription: A short description of this page.\n# The URL to the site on the internet.\nsiteURL: https://gohugo.io/\n# Link to the site's Hugo source code if public and you can/want to share.\n# Remove or leave blank if not needed/wanted.\nsiteSource: https://github.com/gohugoio/hugoDocs\n# Add credit to the article author. Leave blank or remove if not needed/wanted.\nbyline: '[bep](https://github.com/bep), Hugo Lead'\n---\n```\n\n----------------------------------------\n\nTITLE: Loading Hugo ZSH Completion Script\nDESCRIPTION: Command to load Hugo completion scripts in current shell session.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_zsh.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsource <(hugo completion zsh)\n```\n\n----------------------------------------\n\nTITLE: Defining Nested Menu Structure in Hugo Configuration\nDESCRIPTION: This code snippet shows how to define a hierarchical menu structure in Hugo configuration with parent-child relationships. The example creates a 'Products' parent menu item with two child items 'Product 1' and 'Product 2', using the 'parent' property to establish the relationship.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Parent.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nname = 'Products'\npageRef = '/product'\nweight = 10\n\n[[menus.main]]\nname = 'Product 1'\npageRef = '/products/product-1'\nparent = 'Products'\nweight = 1\n\n[[menus.main]]\nname = 'Product 2'\npageRef = '/products/product-2'\nparent = 'Products'\nweight = 2\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML in Hugo Partial Template\nDESCRIPTION: A partial template that renders HTML to describe whether a number is odd or even using conditional logic.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/return.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if math.ModBool . 2 }}\n  <p>{{ . }} is even</p>\n{{ else }}\n  <p>{{ . }} is odd</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Disqus Shortname in Hugo Template\nDESCRIPTION: Shows how to access the configured Disqus shortname value from within a Hugo template using the Site.Config.Services path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/services.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Config.Services.Disqus.Shortname }}\n```\n\n----------------------------------------\n\nTITLE: Enabling GitInfo via Command Line Flag\nDESCRIPTION: Command to enable Git information when building a Hugo site from the command line.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GitInfo.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nhugo --enableGitInfo\n```\n\n----------------------------------------\n\nTITLE: Calling Hugo Shortcode with Named Arguments\nDESCRIPTION: Demonstrates how to call a Hugo shortcode using named arguments in a Markdown file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Params.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n{{</* myshortcode greeting=\"Hello\" name=\"world\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended on Solus\nDESCRIPTION: Command to install the extended edition of Hugo on Solus Linux using the eopkg package manager.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\nsudo eopkg install hugo\n```\n\n----------------------------------------\n\nTITLE: Generating PowerShell Autocompletion Script in Hugo\nDESCRIPTION: This command generates the autocompletion script for PowerShell in Hugo. It can be used to load completions for the current shell session or for every new session by adding the output to the PowerShell profile.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_powershell.md#2025-04-08_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nhugo completion powershell [flags]\n```\n\nLANGUAGE: powershell\nCODE:\n```\nhugo completion powershell | Out-String | Invoke-Expression\n```\n\n----------------------------------------\n\nTITLE: Environment-Aware PostCSS Configuration\nDESCRIPTION: JavaScript configuration for PostCSS that conditionally applies plugins based on the current Hugo environment, useful for development versus production builds.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/PostCSS.md#2025-04-08_snippet_5\n\nLANGUAGE: js\nCODE:\n```\nconst autoprefixer = require('autoprefixer');\nmodule.exports = {\n  plugins: [\n    process.env.HUGO_ENVIRONMENT !== 'development' ? autoprefixer : null\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Leading Zeros When Converting Strings to Integers in Hugo\nDESCRIPTION: Demonstrates how to handle decimal string values with leading zeros, which would otherwise be interpreted as octal values. The strings.TrimLeft function is used to remove the leading zeros.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToInt.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.TrimLeft \"0\" \"0011\" | int }} → 11\n```\n\n----------------------------------------\n\nTITLE: Checking Hugo Extended Binary Status using hugo.IsExtended\nDESCRIPTION: Function that returns a boolean value indicating whether the current Hugo binary is an extended version. Used to determine if additional features only available in Hugo Extended are accessible.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/IsExtended.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.IsExtended }} → true/false\n```\n\n----------------------------------------\n\nTITLE: Declaring HTML Attributes as Safe in Hugo Templates\nDESCRIPTION: Example of using the safeHTMLAttr function to declare a datetime attribute as safe. This prevents Hugo from sanitizing the attribute value, maintaining special characters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/HTMLAttr.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Date }}\n  {{ $humanDate := time.Format \"2 Jan 2006\" . }}\n  {{ $machineDate := time.Format \"2006-01-02T15:04:05-07:00\" . }}\n  <time {{ printf \"datetime=%q\" $machineDate | safeHTMLAttr }}>{{ $humanDate }}</time>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: The options that the 'hugo mod graph' command inherits from its parent commands, including configuration paths, build environment settings, and logging options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_graph.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Sorting Slice Elements in Hugo Templates - Ascending Order\nDESCRIPTION: Demonstrates how to sort slice elements in ascending order using the collections.Sort function. Shows both implicit and explicit ascending sort syntax.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Sort.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ sort site.Params.grades }} → [a b c]\n{{ sort site.Params.grades \"value\" \"asc\" }} → [a b c]\n```\n\n----------------------------------------\n\nTITLE: Using Hugo's deprecated GoogleAnalytics site method\nDESCRIPTION: Example of the deprecated SITE.GoogleAnalytics method that returns the Google Analytics tracking ID as defined in the site configuration. This method has been deprecated in Hugo v0.120.0 in favor of Site.Config.Services.GoogleAnalytics.ID.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/GoogleAnalytics.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nSITE.GoogleAnalytics\n```\n\n----------------------------------------\n\nTITLE: Retrieving Menu Identifiers in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the Menu method to retrieve the identifier of the menu containing each entry in the main menu. It iterates over the main menu entries and prints the menu identifier, which will always be 'main' in this case.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Menu.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Site.Menus.main }}\n  {{ .Menu }} → main\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Store Values with Content Rendering\nDESCRIPTION: Demonstrates how to access scratch pad values from a parent template by triggering content rendering using the Content method assigned to a noop variable.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Store.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $noop := .Content }}\n{{ .Store.Get \"mykey\" }}\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output for Menu with Custom Parameters\nDESCRIPTION: The HTML output generated by Hugo after processing the menu template. Shows how the custom 'rel' parameter is applied only to the menu item that has it defined.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Params.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/about/\">About</a></li>\n  <li><a href=\"/contact/\">Contact</a></li>\n  <li><a href=\"https://gohugo.io\" rel=\"external\">Hugo</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended with Chocolatey\nDESCRIPTION: Command to install the extended edition of Hugo using the Chocolatey package manager on Windows.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/windows.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nchoco install hugo-extended\n```\n\n----------------------------------------\n\nTITLE: Demonstrating 'or' Function Usage in Hugo Templates\nDESCRIPTION: This code snippet shows various examples of using the 'or' function in Hugo templates. It demonstrates how the function returns the first truthy value or the last value if all are falsy.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/or.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ or 0 1 2 }} → 1\n{{ or false \"a\" 1 }} → a\n{{ or 0 true \"a\" }} → true\n\n{{ or false \"\" 0 }} → 0\n{{ or 0 \"\" false }} → false\n```\n\n----------------------------------------\n\nTITLE: Using urls.AbsURL with inputs that have leading slashes (baseURL = https://example.org/)\nDESCRIPTION: Demonstrates the urls.AbsURL function with inputs that begin with a slash, where the path in the resulting URL is relative to the protocol+host part of the baseURL. Here the baseURL is set to 'https://example.org/'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/AbsURL.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ absURL \"/\" }}          → https://example.org/\n{{ absURL \"/articles\" }}  → https://example.org/articles\n{{ absURL \"/style.css\" }} → https://example.org/style.css\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Site with Additional Parameters\nDESCRIPTION: Demonstrates a more complex Hugo configuration with additional parameters such as subtitle and contact information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/introduction.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nbaseURL = 'https://example.org/'\nlanguageCode = 'en-us'\ntitle = 'ABC Widgets, Inc.'\n[params]\nsubtitle = 'The Best Widgets on Earth'\n[params.contact]\nemail = 'info@example.org'\nphone = '+1 202-555-1212'\n```\n\n----------------------------------------\n\nTITLE: Using Identifier Method in Hugo Templates\nDESCRIPTION: Template code demonstrating how to use the Identifier method in a multilingual site to query translation tables, with fallback to the name property if no translation exists.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Identifier.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    <li><a href=\"{{ .URL }}\">{{ or (T .Identifier) .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Configuring Nested Menus in Hugo\nDESCRIPTION: Example site configuration that defines a nested menu structure with a parent 'Products' entry and two child entries 'Product 1' and 'Product 2'. Each menu entry specifies a name, page reference, and weight for ordering.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Children.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nname = 'Products'\npageRef = '/product'\nweight = 10\n\n[[menus.main]]\nname = 'Product 1'\npageRef = '/products/product-1'\nparent = 'Products'\nweight = 1\n\n[[menus.main]]\nname = 'Product 2'\npageRef = '/products/product-2'\nparent = 'Products'\nweight = 2\n```\n\n----------------------------------------\n\nTITLE: Converting Time.Month to Integer in Hugo Templates\nDESCRIPTION: This snippet shows how to extract the month from a time.Time value and convert it to its integer representation in Hugo templates. It uses the AsTime function to parse a timestamp, then pipes the Month value through the int function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Month.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.Month | int }} → 1\n```\n\n----------------------------------------\n\nTITLE: Page Resource Directory Structure Without Front Matter\nDESCRIPTION: Shows the directory structure for a page resource without front matter title definition.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Title.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── example/\n│   ├── images/\n│   │   └── Sunrise in Bryce Canyon.jpg\n│   └── index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Configuring 404 Redirects for Multilingual Hugo Sites with Subdirectories (TOML)\nDESCRIPTION: This snippet demonstrates 404 redirect configuration for multilingual Hugo sites where the default language is served from a subdirectory. It includes language-specific redirects and a default redirect.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/server.md#2025-04-08_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'en'\ndefaultContentLanguageInSubdir = true\n[[redirects]]\nfrom = '/fr/**'\nto = '/fr/404.html'\nstatus = 404\n\n[[redirects]] # Default language must be last.\nfrom = '/**'\nto = '/en/404.html'\nstatus = 404\n```\n\n----------------------------------------\n\nTITLE: Creating QR Code for Phone Number in Hugo\nDESCRIPTION: This snippet illustrates how to generate a QR code for a phone number using the QR shortcode in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/qr.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n{{</* qr text=\"tel:+12065550101\" /*/>}}\n```\n\n----------------------------------------\n\nTITLE: Applying Image Filters with Resource.Filter Method in Hugo\nDESCRIPTION: Shows how to use the Filter method directly on a Resource object to apply a set of image filters and display the processed image.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Mask.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Filter $filters }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring 404 Redirects for Multilingual Hugo Sites (TOML)\nDESCRIPTION: This snippet shows how to set up 404 redirects for multilingual Hugo sites. It includes separate redirects for different languages and ensures the default language redirect is defined last.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/server.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'en'\ndefaultContentLanguageInSubdir = false\n[[redirects]]\nfrom = '/fr/**'\nto = '/fr/404.html'\nstatus = 404\n\n[[redirects]] # Default language must be last.\nfrom = '/**'\nto = '/404.html'\nstatus = 404\n```\n\n----------------------------------------\n\nTITLE: Using Store Method in Hugo Shortcode\nDESCRIPTION: Example signature for the Store method in Hugo shortcodes that returns a maps.Scratch object for temporary data storage and manipulation. Available since Hugo version 0.139.0.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Store.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nSHORTCODE.Store\n```\n\n----------------------------------------\n\nTITLE: Hugo Template - Check IsContentAdapter\nDESCRIPTION: Template code to safely check if a file is a content adapter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .File }}\n  {{ .IsContentAdapter }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Word Count in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the WordCount method on a page object in Hugo templates. It returns the exact number of words in the content of the given page as an integer.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/WordCount.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .WordCount }} → 103\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Command-line options inherited from parent commands that can be used with the 'hugo mod vendor' command, including configuration, environment, and output options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_vendor.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Extracting Year from Time.Time in Hugo Go HTML Template\nDESCRIPTION: This snippet demonstrates how to use the Year method to extract the year from a time.Time value in Hugo templates. It first creates a time.Time object using the AsTime function, then calls the Year method to retrieve the year.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Year.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.Year }} → 2023\n```\n\n----------------------------------------\n\nTITLE: Getting Resource Main Media Type in Hugo\nDESCRIPTION: Shows how to extract the main type portion of a resource's media type using MediaType.MainType. Returns the primary media type category (e.g., 'image').\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/MediaType.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ .MediaType.MainType }} → image\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Site Parameters Through Context in Hugo Templates\nDESCRIPTION: Shows how to access site parameters when the Site object is in context, using either the current context or template context.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/global/site.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<!-- current context -->\n{{ .Site.Params.foo }}\n<!-- template context -->\n{{ $.Site.Params.foo }}\n```\n\n----------------------------------------\n\nTITLE: Comprehensive Alert Render Hook\nDESCRIPTION: Complete implementation of a multilingual alert system with emoji support and fallback to standard blockquotes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/blockquotes.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $emojis := dict\n  \"caution\" \":exclamation:\"\n  \"important\" \":information_source:\"\n  \"note\" \":information_source:\"\n  \"tip\" \":bulb:\"\n  \"warning\" \":information_source:\"\n}}\n\n{{ if eq .Type \"alert\" }}\n  <blockquote class=\"alert alert-{{ .AlertType }}\">\n    <p class=\"alert-heading\">\n      {{ transform.Emojify (index $emojis .AlertType) }}\n      {{ with .AlertTitle }}\n        {{ . }}\n      {{ else }}\n        {{ or (i18n .AlertType) (title .AlertType) }}\n      {{ end }}\n    </p>\n    {{ .Text }}\n  </blockquote>\n{{ else }}\n  <blockquote>\n    {{ .Text }}\n  </blockquote>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Available Options for hugo list all Command\nDESCRIPTION: Shows the command-specific options for the 'hugo list all' command, which currently only includes the help flag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_all.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for all\n```\n\n----------------------------------------\n\nTITLE: Appending Multiple Elements to Slice in Hugo Template\nDESCRIPTION: Shows how to append multiple individual elements to a slice in a single operation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Append.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"a\" \"b\" }}\n{{ $s }} → [a b]\n\n{{ $s = $s | append \"c\" \"d\" }}\n{{ $s }} → [a b c d]\n```\n\n----------------------------------------\n\nTITLE: Applying Text Filter Using Resource.Filter Method in Hugo\nDESCRIPTION: This snippet shows an alternative way to apply the text filter using the Filter method on a Resource object. It produces the same result as the previous snippet but uses a different syntax.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Text.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with $r }}\n  {{ with .Filter $filter }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Section-Based Variant Caching in Hugo Templates\nDESCRIPTION: Shows how to cache partial template variants based on the current section, ensuring unique caching per section.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/partials/IncludeCached.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partialCached \"footer.html\" . .Section }}\n```\n\n----------------------------------------\n\nTITLE: Using the 'and' Function in Hugo Templates\nDESCRIPTION: Examples of the 'and' function usage in Hugo templates. The function returns the first falsy value encountered or the last truthy value if all arguments are truthy. Demonstrates behavior with various data types including integers, booleans, and strings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/and.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ and 1 0 \"\" }} → 0 (int)\n{{ and 1 false 0 }} → false (bool)\n\n{{ and 1 2 3 }} → 3 (int)\n{{ and \"a\" \"b\" \"c\" }} → c (string)\n{{ and \"a\" 1 true }} → true (bool)\n```\n\n----------------------------------------\n\nTITLE: Basic Base64 Decoding in Hugo\nDESCRIPTION: Demonstrates the basic usage of the base64Decode function to decode a base64-encoded string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/encoding/Base64Decode.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"SHVnbw==\" | base64Decode }} → Hugo\n```\n\n----------------------------------------\n\nTITLE: Enabling robots.txt Generation in Hugo Configuration\nDESCRIPTION: Shows how to enable robots.txt generation in the Hugo site configuration file. When set to true, Hugo will generate a robots.txt file based on either the default embedded template or a custom template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/robots.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nenableRobotsTXT = true\n```\n\n----------------------------------------\n\nTITLE: Using 'define' with 'template' Function in Hugo Templates\nDESCRIPTION: This snippet illustrates how to use the 'define' function to create a named template, which is then invoked using the 'template' function. It passes a dictionary of parameters to the template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/define.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ template \"foo\" (dict \"answer\" 42) }}\n\n{{ define \"foo\" }}\n  {{ printf \"The answer is %v.\" .answer }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Nanosecond Component from time.Time Value in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to get the nanosecond component from a time.Time value in Hugo. It first creates a time.Time value using time.AsTime with an ISO 8601 timestamp, then extracts the nanosecond value using the Nanosecond method, which returns 0 in this example.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Nanosecond.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.Nanosecond }} → 0\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output for Date Shortcode\nDESCRIPTION: Example of how Hugo renders the inline date shortcode to HTML format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/shortcodes.md#2025-04-08_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<p>Today is Jan 30, 2025.</p>\n<p>Today is Thursday, January 30, 2025</p>\n```\n\n----------------------------------------\n\nTITLE: Comparing Time Values Using Before Method in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the Before method to compare two time values in Hugo. It uses the time.AsTime function to create time objects and then compares them using the Before method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Before.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t1 := time.AsTime \"2023-01-01T17:00:00-08:00\" }}\n{{ $t2 := time.AsTime \"2030-01-01T17:00:00-08:00\" }}\n\n{{ $t1.Before $t2 }} → true\n```\n\n----------------------------------------\n\nTITLE: Running Hugo Server with Auto-Navigation\nDESCRIPTION: Demonstrates how to run the Hugo server with automatic redirection to the last modified page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/usage.md#2025-04-08_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nhugo server --navigateToChanged\n```\n\n----------------------------------------\n\nTITLE: Counting Substring Occurrences with strings.Count in Hugo Templates\nDESCRIPTION: Examples demonstrating how to use the strings.Count function to count occurrences of substrings within a string. The function returns the number of non-overlapping instances of a substring, with a special case for empty strings which returns the string length plus 1.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Count.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"aaabaab\" | strings.Count \"a\" }} → 5\n{{ \"aaabaab\" | strings.Count \"aa\" }} → 2\n{{ \"aaabaab\" | strings.Count \"aaa\" }} → 1\n{{ \"aaabaab\" | strings.Count \"\" }} → 8\n```\n\n----------------------------------------\n\nTITLE: Running Hugo with Missing Translation Warnings (Shell)\nDESCRIPTION: This command runs Hugo with the --printI18nWarnings flag and filters the output to show missing translations.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\nhugo --printI18nWarnings | grep i18n\n```\n\n----------------------------------------\n\nTITLE: Handling 404 Errors in Hugo Server (TOML)\nDESCRIPTION: This snippet demonstrates how to explicitly define a 404 error redirect in Hugo's server configuration. It's necessary when other redirects are defined and shows how to redirect all non-existent URLs to a 404 page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/server.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[[redirects]]\nforce = false\nfrom   = \"/**\"\nto     = \"/404.html\"\nstatus = 404\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS CLI\nDESCRIPTION: Command to install Tailwind CSS CLI v4.0 or later using npm\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/TailwindCSS.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install --save-dev tailwindcss @tailwindcss/cli\n```\n\n----------------------------------------\n\nTITLE: Extended Alert Syntax Example\nDESCRIPTION: Example of extended alert syntax with sign and title, compatible with Obsidian.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/blockquotes.md#2025-04-08_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n> [!WARNING]+ Radiation hazard\n> Do not approach or handle without protective gear.\n```\n\n----------------------------------------\n\nTITLE: Comparing Numeric Values with compare.Ge in Hugo Templates\nDESCRIPTION: This snippet demonstrates the usage of compare.Ge function to compare numeric values. It shows examples of comparing two and three arguments, illustrating various scenarios of greater than or equal to comparisons.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Ge.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ ge 1 1 }} → true\n{{ ge 1 2 }} → false\n{{ ge 2 1 }} → true\n\n{{ ge 1 1 1 }} → true\n{{ ge 1 1 2 }} → false\n{{ ge 1 2 1 }} → false\n{{ ge 1 2 2 }} → false\n\n{{ ge 2 1 1 }} → true\n{{ ge 2 1 2 }} → true\n{{ ge 2 2 1 }} → true\n```\n\n----------------------------------------\n\nTITLE: Sorting Hugo Pages by Publish Date (Descending)\nDESCRIPTION: Iterates through pages sorted by publish date in descending order using the Reverse method. Renders linked headings for each page using RelPermalink and LinkTitle.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByPublishDate.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByPublishDate.Reverse }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Generating Bash Completion Script\nDESCRIPTION: Basic command to generate the bash autocompletion script for Hugo CLI\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_bash.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo completion bash\n```\n\n----------------------------------------\n\nTITLE: Inherited Global Hugo Options\nDESCRIPTION: Global Hugo command options that are also available for the fish completion command.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_fish.md#2025-04-08_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory            render to memory (mostly useful when running the server)\n  -s, --source string             filesystem path to read files relative from\n      --themesDir string          filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Configuring Cascade Parameters for Headless Bundle in YAML\nDESCRIPTION: This YAML front matter defines cascade parameters for a headless branch bundle in Hugo. It specifies build settings that prevent list pages from being created, resources from being published, and content from being rendered individually.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ncascade:\n  build:\n    list: never\n    publishResources: false\n    render: never\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring BaseURL in Hugo\nDESCRIPTION: Sets the base URL in the Hugo configuration file. This URL will be used as the root for all relative URLs in the site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/BaseURL.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nbaseURL = 'https://example.org/docs/'\n```\n\n----------------------------------------\n\nTITLE: Using templates.Exists for Dynamic Template Path Selection in Hugo\nDESCRIPTION: This example demonstrates using templates.Exists to check if a type-specific header partial exists before falling back to a default template. It builds a dynamic partial path based on content type and implements conditional template inclusion.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/templates/Exists.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $partialPath := printf \"headers/%s.html\" .Type }}\n{{ if templates.Exists ( printf \"partials/%s\" $partialPath ) }}\n  {{ partial $partialPath . }}\n{{ else }}\n  {{ partial \"headers/default.html\" . }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo for Markdown Attributes\nDESCRIPTION: TOML configuration to enable Markdown attributes for image render hooks.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/images.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[markup.goldmark.parser]\nwrapStandAloneImageWithinParagraph = false\n[markup.goldmark.parser.attribute]\nblock = true\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Hugo Import Jekyll Command\nDESCRIPTION: These options are inherited from parent commands and can be used with the 'hugo import jekyll' command. They include various configuration and build options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_import_jekyll.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Creating Slice of Slices from Empty Start in Hugo Template\nDESCRIPTION: Shows how to create a slice of slices starting from an empty slice.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Append.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice }}\n{{ $s }} → []\n\n{{ $s = $s | append (slice (slice \"a\" \"b\")) }}\n{{ $s }} → [[a b]]\n\n{{ $s = $s | append (slice \"c\" \"d\") }}\n{{ $s }} → [[a b] [c d]]\n```\n\n----------------------------------------\n\nTITLE: Configuring Segment Filters in Hugo TOML\nDESCRIPTION: Demonstrates how to define segment filters in Hugo's configuration file. It includes examples of exclude and include filters based on language, output format, kind, and path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/segments.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[segments.segment1]\n  [[segments.segment1.excludes]]\n    lang = \"n*\"\n  [[segments.segment1.excludes]]\n    lang   = \"en\"\n    output = \"rss\"\n  [[segments.segment1.includes]]\n    kind = \"{home,term,taxonomy}\"\n  [[segments.segment1.includes]]\n    path = \"{/docs,/docs/**}\"\n```\n\n----------------------------------------\n\nTITLE: Generating FNV32a Hash in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the hash.FNV32a function in Hugo templates to generate a 32-bit FNV hash of a string. The function takes a string as input and returns an integer hash value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hash/FNV32a.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hash.FNV32a \"Hello world\" }} → 1498229191\n```\n\n----------------------------------------\n\nTITLE: Checking for Heading ID Existence in Hugo Templates\nDESCRIPTION: Demonstrates how to use the Fragments.Identifiers.Contains method to check if a specific heading ID exists on the page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Fragments.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Fragments.Identifiers.Contains \"section-2\" }} → true\n```\n\n----------------------------------------\n\nTITLE: Using 'with' Function with 'else' Statement in Hugo Templates\nDESCRIPTION: Shows how to use the 'with' function in combination with an 'else' statement to handle falsy conditions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/with.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := \"foo\" }}\n{{ with $var }}\n  {{ . }} → foo\n{{ else }}\n  {{ print \"var is falsy\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: HTML Output with Sanitized Attributes\nDESCRIPTION: The rendered HTML output from Hugo when not using safe.HTMLAttr, showing how special characters like + are escaped to HTML entities.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/HTMLAttr.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<time datetime=\"2024-05-26T07:19:55&#43;02:00\">26 May 2024</time>\n```\n\n----------------------------------------\n\nTITLE: HTML Output with InnerDeindent Method\nDESCRIPTION: The correct HTML output when using InnerDeindent method, showing properly rendered images instead of code blocks.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/InnerDeindent.md#2025-04-08_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li>\n    <p>Gallery one</p>\n    <div class=\"gallery\">\n      <img src=\"images/a.jpg\" alt=\"kitten a\">\n      <img src=\"images/b.jpg\" alt=\"kitten b\">\n    </div>\n  </li>\n  <li>\n    <p>Gallery two</p>\n    <div class=\"gallery\">\n      <img src=\"images/c.jpg\" alt=\"kitten c\">\n      <img src=\"images/d.jpg\" alt=\"kitten d\">\n    </div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Home Page Content Front Matter Example in Hugo\nDESCRIPTION: An example of the front matter for a home page _index.md file, showing how to define title, date, draft status, and custom parameters like subtitle.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/home.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: The Home Page\ndate: 2025-01-30T03:36:57-08:00\ndraft: false\nparams:\n  subtitle: The Subtitle\n---\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Parameter in Descending Order (Hugo)\nDESCRIPTION: This snippet shows how to sort a collection of pages by a specified parameter (in this case, 'author') in descending order using the ByParam function and Reverse method in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByParam.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range (.Pages.ByParam \"author\").Reverse }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Converting Duration to Minutes in Hugo Templates\nDESCRIPTION: Shows how to parse a duration string and convert it to minutes using the Minutes method. The example parses a duration of '3.5h2.5m1.5s' and converts it to a floating point number representing total minutes (212.525).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/duration/Minutes.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $d = time.ParseDuration \"3.5h2.5m1.5s\" }}\n{{ $d.Minutes }} → 212.525\n```\n\n----------------------------------------\n\nTITLE: Hugo Template - Get Section Name\nDESCRIPTION: Template code to safely access the Section property of a File object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_9\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .File }}\n  {{ .Section }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Books Page Menu HTML Output\nDESCRIPTION: Example HTML output when viewing the books page, showing the active state for the books menu item.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Menus.md#2025-04-08_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"menu\">\n  <a href=\"/\">Home</a>\n  <a class=\"active\" aria-current=\"page\" href=\"/books/\">Books</a>\n  <a href=\"/films/\">Films</a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Converting Decimal Inputs to Float in Hugo Templates\nDESCRIPTION: Demonstrates the use of the float function to convert decimal numbers and strings to float64 values. This includes whole numbers and numbers with decimal places.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToFloat.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ float 11 }} → 11 (float64)\n{{ float \"11\" }} → 11 (float64)\n\n{{ float 11.1 }} → 11.1 (float64)\n{{ float \"11.1\" }} → 11.1 (float64)\n\n{{ float 11.9 }} → 11.9 (float64)\n{{ float \"11.9\" }} → 11.9 (float64)\n```\n\n----------------------------------------\n\nTITLE: Extracting Filename from Path Using path.Base in Hugo Templates\nDESCRIPTION: Demonstrates the usage of the path.Base function in Hugo templates to extract the last element of a file path. It handles various input formats including full paths, filenames, and directory paths.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/path/Base.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ path.Base \"a/news.html\" }} → news.html\n{{ path.Base \"news.html\" }} → news.html\n{{ path.Base \"a/b/c\" }} → c\n{{ path.Base \"/x/y/z/\" }} → z\n{{ path.Base \"\" }} → .\n```\n\n----------------------------------------\n\nTITLE: Configuring Multilingual Pagination in Hugo\nDESCRIPTION: This snippet demonstrates how to configure pagination settings for multiple languages in Hugo. It includes language-specific settings for content directory, language code, direction, name, and weight, as well as pagination-specific configurations.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/pagination.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[languages.en]\ncontentDir = 'content/en'\nlanguageCode = 'en-US'\nlanguageDirection = 'ltr'\nlanguageName = 'English'\nweight = 1\n[languages.en.pagination]\ndisableAliases = true\npagerSize = 10\npath = 'page'\n[languages.de]\ncontentDir = 'content/de'\nlanguageCode = 'de-DE'\nlanguageDirection = 'ltr'\nlanguageName = 'Deutsch'\nweight = 2\n[languages.de.pagination]\ndisableAliases = true\npagerSize = 20\npath = 'blatt'\n```\n\n----------------------------------------\n\nTITLE: HTML Representation of Rendered Emoji\nDESCRIPTION: The HTML output after Hugo processes an emoji shortcode in Markdown. The shortcode is converted to its Unicode HTML entity.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nHello! &#x1f44b;\n```\n\n----------------------------------------\n\nTITLE: OutputFormat Parameter for Hugo URL Functions\nDESCRIPTION: Defines the outputFormat parameter which specifies the output format of the target page. If not provided, the current output format is used.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/ref-and-relref-options.md#2025-04-08_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\noutputFormat\n: (`string`) The output format of the target page. Default is the current output format. Optional.\n```\n\n----------------------------------------\n\nTITLE: Using the Hugo Build Command\nDESCRIPTION: Basic usage of the Hugo build command used to generate static websites. This is the main command in Hugo, which processes content and templates to build a complete static site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_build.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo build [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating images.Dither Filter with Custom Options in Hugo\nDESCRIPTION: Shows how to create an images.Dither filter using custom options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Dither.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Dither $opts }}\n```\n\n----------------------------------------\n\nTITLE: Creating Image Filters for WebP Conversion and Mask Application in Hugo\nDESCRIPTION: Creates a slice of two filters: one to convert an image to WebP format and another to apply a mask from a resource file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Mask.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter1 := images.Process \"webp\" }}\n{{ $filter2 := images.Mask (resources.Get \"images/mask.png\") }}\n{{ $filters := slice $filter1 $filter2 }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Site Parameters with Site.Param in Hugo Templates\nDESCRIPTION: Shows how to use the Site.Param method to retrieve the value of a user-defined parameter ('display_toc') in a Hugo template. This method is a convenient way to access site configuration parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Param.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Param \"display_toc\" }} → true\n```\n\n----------------------------------------\n\nTITLE: Using strings.Truncate for Custom Summary Length\nDESCRIPTION: Alternative approach to generating summaries using the strings.Truncate function for more precise control over summary length.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/summaries.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range site.RegularPages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  <div class=\"summary\">\n    {{ .Content | strings.Truncate 42 }}\n  </div>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Hugo Gen Command Options\nDESCRIPTION: Shows the available options for the 'hugo gen' command, including the help flag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_gen.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help   help for gen\n```\n\n----------------------------------------\n\nTITLE: Transforming Collection Elements with collections.Apply in Hugo Templates\nDESCRIPTION: This snippet demonstrates the use of collections.Apply to transform elements in a slice. It shows two examples: converting the first letter of each word to uppercase, and replacing characters within the words.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Apply.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"hello\" \"world\" }}\n\n{{ $s = apply $s \"strings.FirstUpper\" \".\" }}\n{{ $s }} → [Hello World]\n\n{{ $s = apply $s \"strings.Replace\" \".\" \"l\" \"_\" }}\n{{ $s }} →  [He__o Wor_d]\n```\n\n----------------------------------------\n\nTITLE: Rendering Pandoc Markup with RenderString in Hugo\nDESCRIPTION: Illustrates using RenderString with Pandoc markup. The 'markup' option is set to 'pandoc' to specify the renderer. It also shows how to combine multiple options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RenderString.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := \"H~2~O\" }}\n\n{{ $opts := dict \"markup\" \"pandoc\" }}\n{{ $s | .RenderString $opts }} → H<sub>2</sub>O\n\n{{ $opts := dict \"display\" \"block\" \"markup\" \"pandoc\" }}\n{{ .RenderString $opts $s }} → <p>H<sub>2</sub>O</p>\n```\n\n----------------------------------------\n\nTITLE: Counting Weighted Pages for a Taxonomy Term in Hugo\nDESCRIPTION: This snippet demonstrates how to use the Count method on a Taxonomy object to count the number of weighted pages assigned to the 'suspense' term in the 'genres' taxonomy. It assumes that $taxonomyObject has been properly initialized with the 'genres' Taxonomy object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Count.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $taxonomyObject.Count \"suspense\" }} → 3\n```\n\n----------------------------------------\n\nTITLE: Browser-Rendered Output of Map to YAML Conversion\nDESCRIPTION: This shows how the HTML output from the map to YAML conversion appears when rendered in a browser, displaying a properly formatted YAML document with nested properties and a sequence.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Remarshal.md#2025-04-08_snippet_5\n\nLANGUAGE: text\nCODE:\n```\na: Hugo rocks!\nb:\n  answer: 42\n  question: What is 6x7?\nc:\n- foo\n- bar\n```\n\n----------------------------------------\n\nTITLE: Range Function with Else Condition in Hugo Templates\nDESCRIPTION: Shows how to use the range function with an else statement to handle empty collections. If the collection is empty, the else block will be executed.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/range.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"foo\" \"bar\" \"baz\" }}\n{{ range $s }}\n  <p>{{ . }}</p>\n{{ else }}\n  <p>The collection is empty</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Content Structure in Hugo\nDESCRIPTION: This snippet shows an example content structure for a Hugo site, illustrating the hierarchy of pages and sections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Ancestors.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── auctions/\n│   ├── 2023-11/\n│   │   ├── _index.md     <-- front matter: weight = 202311\n│   │   ├── auction-1.md\n│   │   └── auction-2.md\n│   ├── 2023-12/\n│   │   ├── _index.md     <-- front matter: weight = 202312\n│   │   ├── auction-3.md\n│   │   └── auction-4.md\n│   ├── _index.md         <-- front matter: weight = 30\n│   ├── bidding.md\n│   └── payment.md\n├── books/\n│   ├── _index.md         <-- front matter: weight = 10\n│   ├── book-1.md\n│   └── book-2.md\n├── films/\n│   ├── _index.md         <-- front matter: weight = 20\n│   ├── film-1.md\n│   └── film-2.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Accessing Site Parameters in Hugo Templates\nDESCRIPTION: Example of accessing custom site parameters defined in configuration. Shows how to retrieve nested parameters through dot notation and use them in template rendering.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_28\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Params.subtitle }} → The Best Widgets on Earth\n{{ .Site.Params.author.name }} → John Smith\n\n{{ $layout := .Site.Params.layouts.rfc_1123 }}\n{{ .Site.Lastmod.Format $layout }} → Tue, 17 Oct 2023 13:21:02 PDT\n```\n\n----------------------------------------\n\nTITLE: Using Conditional Logic with Functions in Hugo Templates\nDESCRIPTION: Demonstrates conditional template rendering and string manipulation using the if statement and strings.ToLower function in Hugo templates. This example conditionally transforms page title to lowercase.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $convertToLower := true }}\n{{ if $convertToLower }}\n  <h2>{{ strings.ToLower .Title }}</h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Alternative Page Filtering Using where Function in Hugo\nDESCRIPTION: This snippet shows an alternative approach to filtering page collections using the where function instead of collections.Complement.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Complement.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range where site.RegularPages \"Type\" \"not in\" (slice \"blog\" \"faqs\") }}\n  <a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Activity Emoji Shortcodes\nDESCRIPTION: Table showing emoji shortcodes for various human activities and positions including walking, standing, and various accessibility-related emojis.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | ico | shortcode | |\n| - | :-: | - | :-: | - | - |\n| [top](#people--body) | :massage: | `:massage:` | :massage_man: | `:massage_man:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: Context Handling Error Example in Hugo Range\nDESCRIPTION: Demonstrates a common error when attempting to access a Page method within a range block that's iterating over integers. This shows why understanding context is critical.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/range.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range seq 3 }}\n  {{ .Title }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Site Title in Hugo Templates\nDESCRIPTION: Demonstrates how to access and display the configured site title within Hugo templates using the .Site.Title variable.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Title.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Title }} → My Documentation Site\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Link Title in Descending Order with Hugo\nDESCRIPTION: This snippet shows how to sort a collection of pages by their link title in descending order using the Reverse method. It iterates through the sorted pages and renders each page's link title as a clickable heading.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByLinkTitle.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByLinkTitle.Reverse }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multihost Setup for Multilingual Hugo Sites\nDESCRIPTION: Shows how to set up a multihost configuration for a multilingual Hugo site, with separate base URLs for each language.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/languages.md#2025-04-08_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'fr'\n[languages]\n  [languages.en]\n    baseURL = 'https://en.example.org/'\n    languageName = 'English'\n    title = 'In English'\n    weight = 2\n  [languages.fr]\n    baseURL = 'https://fr.example.org'\n    languageName = 'Français'\n    title = 'En Français'\n    weight = 1\n```\n\n----------------------------------------\n\nTITLE: Type Conversion with strings.TrimRight in Hugo Templates\nDESCRIPTION: Shows how strings.TrimRight automatically converts arguments to strings, handling numeric and boolean inputs. It demonstrates removing '54' from '12345' and 'eu' from 'true'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/TrimRight.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.TrimRight 54 12345 }} → 123 (string)\n{{ strings.TrimRight \"eu\" true }} → tr\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Animal Mammal Emoji Shortcodes\nDESCRIPTION: Markdown table containing emoji shortcodes for mammal animals\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | ico | shortcode | |\n| - | :-: | - | :-: | - | - |\n| [top](#animals--nature) | :monkey_face: | `:monkey_face:` | :monkey: | `:monkey:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: Fetching and Unmarshaling Remote OpenAPI Document in Hugo Templates\nDESCRIPTION: Uses resources.GetRemote and openapi3.Unmarshal to fetch a remote OpenAPI specification file and convert it to a structured data object. Implements error handling with the try function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/openapi3/Unmarshal.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/examples/v3.0/petstore.json\" }}\n{{ $api := \"\" }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ errorf \"%s\" . }}\n  {{ else with .Value }}\n    {{ $api = . | openapi3.Unmarshal }}\n  {{ else }}\n    {{ errorf \"Unable to get remote resource %q\" $url }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Family Emoji Shortcodes\nDESCRIPTION: Markdown table containing emoji shortcodes for various family combinations and relationships\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | ico | shortcode | |\n| - | :-: | - | :-: | - | - |\n| [top](#people--body) | :people_holding_hands: | `:people_holding_hands:` | :two_women_holding_hands: | `:two_women_holding_hands:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Base URL in TOML\nDESCRIPTION: Sets the site title and base URL in Hugo's configuration file. This configuration is crucial for generating correct relative permalinks.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RelPermalink.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Documentation'\nbaseURL = 'https://example.org/docs/'\n```\n\n----------------------------------------\n\nTITLE: Setting Map Values with hugo.Store in Hugo Templates\nDESCRIPTION: Demonstrates how to use the SetInMap method to add key-value pairs to a map within hugo.Store.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/Store.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.Store.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ hugo.Store.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n{{ hugo.Store.Get \"greetings\" }} → map[english:Hello french:Bonjour]\n```\n\n----------------------------------------\n\nTITLE: Generated HTML Navigation Output\nDESCRIPTION: The resulting HTML output showing links to both German and English home pages after template processing.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Sites.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"https://example.org/de/\">Projekt Dokumentation</a></li>\n  <li><a href=\"https://example.org/en/\">Project Documentation</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Complete Filter Example\nDESCRIPTION: Example of creating and using a filter with multiple processing parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Process.md#2025-04-08_snippet_9\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Process \"resize 256x q40 webp\" }}\n```\n\n----------------------------------------\n\nTITLE: Getting a Value from Site.Store\nDESCRIPTION: Demonstrates setting and retrieving a value from the site-scoped scratch pad.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Store.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ site.Store.Set \"greeting\" \"Hello\" }}\n{{ site.Store.Get \"greeting\" }} → Hello\n```\n\n----------------------------------------\n\nTITLE: Rendering Disqus Comments Using Hugo's Internal Template\nDESCRIPTION: This snippet demonstrates how to include Hugo's built-in Disqus template in your templates. This will render the Disqus comment section where this code is placed.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/comments.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ template \"_internal/disqus.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Deploy Command Options\nDESCRIPTION: Available flags specific to the 'hugo deploy' command. These options control deployment behavior, including confirmation prompts, dry runs, forcing uploads, invalidating CDN caches, controlling file deletions, specifying targets, and setting worker counts.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_deploy.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n      --confirm          ask for confirmation before making changes to the target\n      --dryRun           dry run\n      --force            force upload of all files\n  -h, --help             help for deploy\n      --invalidateCDN    invalidate the CDN cache listed in the deployment target (default true)\n      --maxDeletes int   maximum # of files to delete, or -1 to disable (default 256)\n      --target string    target deployment from deployments section in config file; defaults to the first one\n      --workers int      number of workers to transfer files. defaults to 10 (default 10)\n```\n\n----------------------------------------\n\nTITLE: Adding Slices in Hugo Scratch Pad\nDESCRIPTION: Demonstrates appending slices using the Add method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/NewScratch.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := newScratch }}\n{{ $s.Set \"greetings\" (slice \"Hello\") }}\n{{ $s.Add \"greetings\" (slice \"Welcome\" \"Cheers\") }}\n{{ $s.Get \"greetings\" }} → [Hello Welcome Cheers]\n```\n\n----------------------------------------\n\nTITLE: Using code-toggle Shortcode in Hugo\nDESCRIPTION: Shows how to use the code-toggle shortcode to display examples of site configuration with file name and copy button.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_9\n\nLANGUAGE: text\nCODE:\n```\n{{</* code-toggle file=hugo copy=true */>}}\nbaseURL = 'https://example.org/'\nlanguageCode = 'en-US'\ntitle = 'My Site'\n{{</* /code-toggle */>}}\n```\n\n----------------------------------------\n\nTITLE: Creating New Hugo Theme Command\nDESCRIPTION: Basic command syntax for creating a new Hugo theme skeleton in the ./themes directory. The command requires a theme name parameter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_new_theme.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo new theme [name] [flags]\n```\n\n----------------------------------------\n\nTITLE: CSS Styling for SVG Diagrams\nDESCRIPTION: CSS example for customizing the font family of SVG diagrams with a specific class.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/diagrams/Goat.md#2025-04-08_snippet_5\n\nLANGUAGE: css\nCODE:\n```\nsvg.foo {\n  font-family: \"Segoe UI\",\"Noto Sans\",Helvetica,Arial,sans-serif\n}\n```\n\n----------------------------------------\n\nTITLE: Archetype Directory Structure\nDESCRIPTION: Example directory structure showing a default archetype and a content-type specific archetype for posts. Hugo will use the most specific archetype available.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_3\n\nLANGUAGE: text\nCODE:\n```\narchetypes/\n├── default.md\n└── posts.md\n```\n\n----------------------------------------\n\nTITLE: Conditional Template Using Returned Boolean\nDESCRIPTION: Template that uses the returned boolean value from the is-even partial to render appropriate HTML.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/return.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $number := 42 }}\n{{ if partial \"is-even.html\" $number }}\n  <p>{{ $number }} is even</p>\n{{ else }}\n  <p>{{ $number }} is odd</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Error Handling with IsAncestor Function\nDESCRIPTION: Shows how to implement error handling when using IsAncestor by adding an else clause to the with statement.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsAncestor.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $path := \"/auctions/2023-11\" }}\n{{ with .Site.GetPage $path }}\n  {{ $.IsAncestor . }} → true\n{{ else }}\n  {{ errorf \"Unable to find the section with path %s\" $path }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Specifying Type and Layout in Hugo Front Matter\nDESCRIPTION: Example of setting both type and layout in the front matter of Hugo content files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/lookup-order.md#2025-04-08_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'About'\ntype = 'miscellaneous'\n```\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Contact'\ntype = 'miscellaneous'\nlayout = 'contact'\n```\n\n----------------------------------------\n\nTITLE: Creating Text Filter for Image Overlay in Hugo\nDESCRIPTION: This snippet creates a text filter using the images.Text function. It sets various options including text alignment, color, font, line spacing, size, and position. The text is centered both horizontally and vertically on the image.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Text.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $r := \"\" }}\n{{ $filter := \"\" }}\n{{ with $r = resources.Get $imagePath }}\n  {{ $opts := dict\n    \"alignx\" \"center\"\n    \"color\" \"#fbfaf5\"\n    \"font\" $font\n    \"linespacing\" 8\n    \"size\" 60\n    \"x\" (mul .Width 0.5 | int)\n    \"y\" (mul .Height 0.5 | int)\n  }}\n  {{ $filter = images.Text $text $opts }}\n{{ else }}\n  {{ errorf \"Unable to get resource %s\" $imagePath }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Images from Headless Page Bundle in Hugo\nDESCRIPTION: Demonstrates how to use GetPage to access and render images from a headless page bundle in a Hugo template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/GetPage.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.GetPage \"/headless\" }}\n  {{ range .Resources.ByType \"image\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Collection in Hugo Templates\nDESCRIPTION: Shows how to create an empty page collection by setting N to 0 in the collections.First function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/First.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $emptyPageCollection := first 0 .Pages }}\n```\n\n----------------------------------------\n\nTITLE: Rounding Time to Nearest Hour in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to round a timestamp to the nearest hour. It creates a time object, defines a 1-hour duration, and then applies the Round method to round the time to the nearest hour, formatting the result in ISO format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Round.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $d := time.ParseDuration \"1h\"}}\n\n{{ ($t.Round $d).Format \"2006-01-02T15:04:05-00:00\" }} → 2023-01-28T00:00:00-00:00\n```\n\n----------------------------------------\n\nTITLE: Generating Chroma CSS Styles in Hugo\nDESCRIPTION: Command to generate an external CSS file for syntax highlighting styles using Hugo's Chroma highlighter with the monokai theme.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/syntax-highlighting-options.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhugo gen chromastyles --style=monokai > syntax.css\n```\n\n----------------------------------------\n\nTITLE: Calling Hugo Shortcode with Positional Arguments\nDESCRIPTION: Demonstrates how to call a Hugo shortcode using positional arguments in a Markdown file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Params.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{{</* myshortcode \"Hello\" \"world\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Grouping Pages by Section in Ascending Order\nDESCRIPTION: Template code that groups pages by section field and displays them in ascending order (default). Creates a nested structure with section names as headers followed by lists of page links.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupBy.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupBy \"Section\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Example of Group Data Structure in JSON\nDESCRIPTION: This JSON snippet shows an example of a group data structure that a runner script might receive, including script and instance information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Batch.md#2025-04-08_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"leaflet\",\n    \"scripts\": [\n        {\n            \"id\": \"mapjsx\",\n            \"binding\": \"JAVASCRIPT_BINDING\",\n            \"instances\": [\n                {\n                    \"id\": \"0\",\n                    \"params\": {\n                        \"c\": \"h-64\",\n                        \"lat\": 48.8533173846729,\n                        \"lon\": 2.3497416090232535,\n                        \"r\": \"map.jsx\",\n                        \"title\": \"Cathédrale Notre-Dame de Paris\",\n                        \"zoom\": 23\n                    }\n                },\n                {\n                    \"id\": \"1\",\n                    \"params\": {\n                        \"c\": \"h-64\",\n                        \"lat\": 59.96300872062237,\n                        \"lon\": 10.663529183196863,\n                        \"r\": \"map.jsx\",\n                        \"title\": \"Holmenkollen\",\n                        \"zoom\": 3\n                    }\n                }\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Hugo Module NPM Pack Inherited Options\nDESCRIPTION: Options inherited from parent commands including configuration, environment, logging, and filesystem settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_npm_pack.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Page Title Access in Hugo Range Loop\nDESCRIPTION: Demonstrates accessing page titles within a range loop, showing potential context issues with the global page function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/global/page.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range site.Sections }}\n  {{ range .Pages }}\n    {{ page.Title }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Assigning Variables in Range Block\nDESCRIPTION: Shows how to assign the current element to a variable while iterating over a slice. This approach makes the code more readable when referencing the current element multiple times.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/range.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"foo\" \"bar\" \"baz\" }}\n{{ range $v := $s }}\n  <p>{{ $v }}</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Module Init Inherited Options\nDESCRIPTION: Options inherited from parent commands for the 'hugo mod init' command. These include settings for clock, config file, build environment, logging, and various filesystem paths.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_init.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Using Page Description in HTML Template\nDESCRIPTION: Example of accessing a page's description in a Hugo template using the .Description method. This code shows how to add the description to the meta tags in the HTML head section.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Description.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<head>\n  ...\n  <meta name=\"description\" content=\"{{ .Description }}\">\n  ...\n</head>\n```\n\n----------------------------------------\n\nTITLE: GitLab Pages CI Configuration\nDESCRIPTION: GitLab CI configuration for installing Dart Sass and Hugo in a build pipeline.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/Sass.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  HUGO_VERSION: 0.144.2\n  DART_SASS_VERSION: 1.85.0\n  GIT_DEPTH: 0\n  GIT_STRATEGY: clone\n  GIT_SUBMODULE_STRATEGY: recursive\n  TZ: America/Los_Angeles\nimage:\n  name: golang:1.20-buster\npages:\n  script:\n    # Install Dart Sass\n    - curl -LJO https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz\n    - tar -xf dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz\n    - cp -r dart-sass/* /usr/local/bin\n    - rm -rf dart-sass*\n    # Install Hugo\n    - curl -LJO https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb\n    - apt install -y ./hugo_extended_${HUGO_VERSION}_linux-amd64.deb\n    - rm hugo_extended_${HUGO_VERSION}_linux-amd64.deb\n    # Build\n    - hugo --gc --minify\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n```\n\n----------------------------------------\n\nTITLE: Taxonomy Data Structure Example\nDESCRIPTION: Example showing how taxonomy data is organized in Hugo with genres and authors.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Taxonomies.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ngenres:\n  - suspense:\n    - And Then There Were None\n    - Death on the Nile\n    - Jamaica Inn\n  - romance:\n    - Jamaica Inn\n    - Pride and Prejudice\nauthors:\n  - achristie:\n    - And Then There Were None\n    - Death on the Nile\n  - ddmaurier:\n    - Jamaica Inn\n  - jausten:\n    - Pride and Prejudice\n```\n\n----------------------------------------\n\nTITLE: Appending Query String to URL with collections.Querify\nDESCRIPTION: Shows how to generate a query string using collections.Querify and append it to a URL using printf, then use the resulting URL in an HTML anchor tag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Querify.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $qs := collections.Querify (dict \"a\" 1 \"b\" 2) }}\n{{ $href := printf \"https://example.org?%s\" $qs }}\n\n<a href=\"{{ $href }}\">Link</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring Base URL in Hugo\nDESCRIPTION: Sets the base URL for the Hugo site in the configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Home.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nbaseURL = 'https://example.org/docs/'\n```\n\n----------------------------------------\n\nTITLE: Creating Important Callouts in Markdown\nDESCRIPTION: Demonstrates how to create an important callout to highlight key information users need to know to achieve their goal.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_8\n\nLANGUAGE: text\nCODE:\n```\n> [!important]\n> Key information users need to know to achieve their goal.\n```\n\n----------------------------------------\n\nTITLE: Hugo Convert to YAML Command Syntax\nDESCRIPTION: Basic command syntax for converting front matter to YAML format in Hugo content files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_convert_toYAML.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo convert toYAML [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Calculating Sum with math.Sum in Hugo Templates\nDESCRIPTION: Demonstrates using math.Sum to calculate the sum of mixed number inputs including both direct values and slices. The function accepts multiple arguments and returns their sum as float64.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Sum.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Sum 1 (slice 2 3) 4 }} → 10\n```\n\n----------------------------------------\n\nTITLE: Displaying the New Resource URL in Hugo\nDESCRIPTION: This snippet shows the relative URL of the newly published resource after using resources.Copy. It demonstrates the path structure for the copied resource.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/Copy.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n/img/new-image-name.jpg\n```\n\n----------------------------------------\n\nTITLE: Example Content Structure in Hugo\nDESCRIPTION: A text representation of a typical Hugo content structure with nested sections and markdown files. This structure is used to demonstrate how the Section method determines the top-level section.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Section.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── lessons/\n│   ├── math/\n│   │   ├── _index.md\n│   │   ├── lesson-1.md\n│   │   └── lesson-2.md\n│   └── _index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Numeric Comparison Examples\nDESCRIPTION: Shows how to compare numeric values using different operators (eq, ne, ge, gt, le, lt) with collections.Where.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $books := where site.RegularPages \"Section\" \"eq\" \"books\" }}\n\n{{ $pages := where $books \"Params.price\" \"eq\" 42 }}\n{{ $pages := where $books \"Params.price\" \"ne\" 42.67 }}\n{{ $pages := where $books \"Params.price\" \"ge\" 42 }}\n{{ $pages := where $books \"Params.price\" \"gt\" 42.67 }}\n{{ $pages := where $books \"Params.price\" \"le\" 42 }}\n{{ $pages := where $books \"Params.price\" \"lt\" 42.67 }}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Context Usage Example\nDESCRIPTION: Demonstrates incorrect usage of IsAncestor where context is not properly maintained, leading to self-comparison.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsAncestor.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.GetPage \"/auctions\" }}\n  {{ .IsAncestor . }} → true\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Implementing List Template for Hugo Pages by Weight\nDESCRIPTION: A Hugo template that displays pages sorted by weight. This template iterates through pages and creates links to each one.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/page/nextinsection-and-previnsection.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByWeight }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Netlify Build Configuration\nDESCRIPTION: Netlify configuration file showing environment setup and build commands for Dart Sass integration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/Sass.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[build.environment]\nHUGO_VERSION = \"0.144.2\"\nDART_SASS_VERSION = \"1.85.0\"\nNODE_VERSION = \"22\"\nTZ = \"America/Los_Angeles\"\n\n[build]\npublish = \"public\"\ncommand = \"\"\"\n  curl -LJO https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz && \\\n  tar -xf dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz && \\\n  rm dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz && \\\n  export PATH=/opt/build/repo/dart-sass:$PATH && \\\n  hugo --gc --minify \\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Combining First with Where Function in Hugo Templates\nDESCRIPTION: Illustrates how to combine the collections.First function with the where function to filter and limit page collections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/First.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range where .Pages \"Section\" \"articles\" | first 5 }}\n  {{ .Render \"summary\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Mod Vendor Command Options\nDESCRIPTION: Available command-line options specific to the 'hugo mod vendor' command, including baseURL, cacheDir, contentDir, help, renderSegments, and theme options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_vendor.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -b, --baseURL string           hostname (and path) to the root, e.g. https://spf13.com/\n      --cacheDir string          filesystem path to cache directory\n  -c, --contentDir string        filesystem path to content directory\n  -h, --help                     help for vendor\n      --renderSegments strings   named segments to render (configured in the segments config)\n  -t, --theme strings            themes to use (located in /themes/THEMENAME/)\n```\n\n----------------------------------------\n\nTITLE: Printing Values with Line Break in Hugo Templates\nDESCRIPTION: Demonstrates using the fmt.Println function in Hugo templates to print a string value followed by a line break. The function takes any value as input and prints its default representation followed by a newline character.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Println.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ println \"foo\" }} → foo\\n\n```\n\n----------------------------------------\n\nTITLE: Grouping Pages by Parameter in Ascending Order (Hugo)\nDESCRIPTION: This snippet demonstrates how to use the GroupByParam function to group pages by the 'color' parameter in ascending order. It iterates over the grouped pages, displaying the group key (color) and a list of pages within each group.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByParam.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByParam \"color\" }}\n  <p>{{ .Key | title }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Executing Hugo Module Verification Command\nDESCRIPTION: The command to verify module dependencies in Hugo. It checks if the locally cached dependencies have been modified since download.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_verify.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhugo mod verify [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Basic Hugo Server Trust Command\nDESCRIPTION: The basic command syntax for installing the local CA in the system trust store.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_server_trust.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo server trust [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Listing Inherited Hugo Command Options\nDESCRIPTION: Displays the options inherited from parent commands, including configuration, build environment, and output settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_gen.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output with Escaped URL\nDESCRIPTION: The resulting HTML output after Hugo processes the template, showing the properly escaped URL in the query parameter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/urlquery.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://example.org?url=https%3A%2F%2Fexample.com\">Link</a>\n```\n\n----------------------------------------\n\nTITLE: Hugo Fish Completion Command Syntax\nDESCRIPTION: Basic command syntax for generating Fish shell autocompletion script.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_fish.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhugo completion fish [flags]\n```\n\n----------------------------------------\n\nTITLE: Multilingual Content Structure Example\nDESCRIPTION: Directory structure showing how content is organized in a multilingual Hugo site with English and German translations. Shows which files have translations across languages and which are unique to one language.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsTranslated.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── de/\n│   ├── books/\n│   │   └── book-1.md\n│   └── _index.md\n├── en/\n│   ├── books/\n│   │   ├── book-1.md\n│   │   └── book-2.md\n│   └── _index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: String Example in Hugo\nDESCRIPTION: Simple demonstration of a string literal containing a question.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/string.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n\"What is 6 times 7?\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Specific File from GitHub Gist in Hugo\nDESCRIPTION: Shows how to use the gist shortcode to display a specific file from a GitHub Gist in Hugo content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/gist.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n{{</* gist user 23932424365401ffa5e9d9810102a477 list.html */>}}\n```\n\n----------------------------------------\n\nTITLE: Checking Hugo Cache Directory Location\nDESCRIPTION: Shell command to determine the current cache directory location used by Hugo by grepping the config output.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/all.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nhugo config | grep cachedir\n```\n\n----------------------------------------\n\nTITLE: Loading Fish Completions for Current Session\nDESCRIPTION: Command to load Hugo autocompletions in the current Fish shell session.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_fish.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhugo completion fish | source\n```\n\n----------------------------------------\n\nTITLE: Syntax Highlighting Examples in Hugo Templates\nDESCRIPTION: Demonstrates three different ways to use the transform.Highlight function in Hugo templates: basic usage with Go code, JavaScript with inline options, and Bash with options passed as a dictionary.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Highlight.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $input := `fmt.Println(\"Hello World!\")` }}\n{{ transform.Highlight $input \"go\" }}\n\n{{ $input := `console.log('Hello World!');` }}\n{{ $lang := \"js\" }}\n{{ transform.Highlight $input $lang \"lineNos=table, style=api\" }}\n\n{{ $input := `echo \"Hello World!\"` }}\n{{ $lang := \"bash\" }}\n{{ $opts := dict \"lineNos\" \"table\" \"style\" \"dracula\" }}\n{{ transform.Highlight $input $lang $opts }}\n```\n\n----------------------------------------\n\nTITLE: Building Hugo Site with Draft Pages via Command Line\nDESCRIPTION: Command line flag to include draft pages when building a Hugo site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/BuildDrafts.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhugo --buildDrafts\n```\n\n----------------------------------------\n\nTITLE: Installing Extended/Deploy Hugo Edition\nDESCRIPTION: Command to compile and install the extended edition of Hugo with deploy capabilities.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/development.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nCGO_ENABLED=1 go install -tags extended,withdeploy\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options\nDESCRIPTION: Global options inherited from parent commands that can be used with the bash completion command\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_bash.md#2025-04-08_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Rounding Numbers with math.Round in Hugo Templates\nDESCRIPTION: Demonstrates the usage of the math.Round function in Hugo templating. This function takes a floating-point number as input and returns the nearest integer, rounding half away from zero.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Round.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Round 1.5 }} → 2\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended with Winget\nDESCRIPTION: Command to install the extended edition of Hugo using Microsoft's Winget package manager on Windows.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/windows.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nwinget install Hugo.Hugo.Extended\n```\n\n----------------------------------------\n\nTITLE: Adding Attributes to Various Markdown Elements in Hugo\nDESCRIPTION: Demonstrates how to add attributes to headings, fenced code blocks, and paragraphs using Markdown attributes in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/markdown-attributes.md#2025-04-08_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n## Section 1 {class=foo}\n\n```bash {class=foo linenos=inline}\ndeclare a=1\necho \"${a}\"\n```\n\nThis is a paragraph.\n{class=foo}\n```\n\n----------------------------------------\n\nTITLE: Getting a Value with hugo.Store in Hugo Templates\nDESCRIPTION: Shows how to retrieve a previously set value using the Get method of hugo.Store.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/Store.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.Store.Set \"greeting\" \"Hello\" }}\n{{ hugo.Store.Get \"greeting\" }} → Hello\n```\n\n----------------------------------------\n\nTITLE: List Template Overriding Block in Hugo\nDESCRIPTION: A list template that redefines the 'main' block to display the list title, content, and iterate through pages with links to each, customizing the base template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/block.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n  {{ range .Pages }}\n    <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating an Empty Dictionary in Hugo\nDESCRIPTION: This snippet shows how to create an empty dictionary (map) in Hugo templates using the dict function without any arguments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Dictionary.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $m := dict }}\n```\n\n----------------------------------------\n\nTITLE: Correct Context Usage with $ Symbol\nDESCRIPTION: Shows the correct way to maintain context when using IsAncestor by using the $ symbol to reference the original context.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsAncestor.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.GetPage \"/auctions\" }}\n  {{ $.IsAncestor . }} → true\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for a Content Management Page in Hugo\nDESCRIPTION: This YAML frontmatter defines metadata for a Hugo page about content management. It includes title, description, weight for ordering, and aliases for URL redirection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Content management\ndescription: Hugo makes managing large static sites easy with support for archetypes, content types, menus, cross references, summaries, and more.\ncategories: []\nkeywords: []\nweight: 10\naliases: [/content/,/content/organization]\n---\n```\n\n----------------------------------------\n\nTITLE: Rebinding Context in Hugo Templates\nDESCRIPTION: Example of changing the scope context using the with function. Demonstrates conditionally executing template code based on whether a variable has a truthy value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_26\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := \"foo\" }}\n{{ with $var }}\n  {{ . }} → foo\n{{ else }}\n  {{ print \"var is falsy\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Checking String Membership in a String Slice with collections.In\nDESCRIPTION: This example demonstrates how to check if a string value exists within a slice of strings using the collections.In function. It returns true when 'b' is found in the slice.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/In.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"a\" \"b\" \"c\" }}\n{{ in $s \"b\" }} → true\n```\n\n----------------------------------------\n\nTITLE: Managing Removable Media Access for Hugo Snap Package\nDESCRIPTION: Commands to enable or revoke Hugo's access to removable media when installed as a strictly confined Snap package.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nsudo snap connect hugo:removable-media\nsudo snap disconnect hugo:removable-media\n```\n\n----------------------------------------\n\nTITLE: Applying images.Dither Filter with Grayscale Conversion in Hugo\nDESCRIPTION: Demonstrates applying the images.Dither filter with grayscale conversion for optimal results when using a grayscale palette.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Dither.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict \"colors\" (slice \"222\" \"808080\" \"ddd\") }}\n{{ $filters := slice\n  (images.Process \"resize 800x\")\n  (images.Grayscale)\n  (images.Dither $opts)\n  (images.Process \"png\")\n}}\n{{ with images.Filter $filters . }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using Hugo Shortcode with Positional Arguments\nDESCRIPTION: Shows how to call a shortcode using positional arguments instead of named arguments, which can be more concise for frequently used shortcodes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n{{</* image a.jpg 300 \"A white kitten\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Defining Menu Entries in Hugo Configuration\nDESCRIPTION: Configuration for defining menu entries in Hugo with weights, identifiers, names, and page references. This TOML configuration defines three menu entries for the main menu with different weights that will affect their sort order.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/ByWeight.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nidentifier = 'about'\nname = 'About'\npageRef = '/about'\nweight = 20\n\n[[menus.main]]\nidentifier = 'services'\nname = 'Services'\npageRef = '/services'\nweight = 10\n\n[[menus.main]]\nidentifier = 'contact'\nname = 'Contact'\npageRef = '/contact'\nweight = 30\n```\n\n----------------------------------------\n\nTITLE: Successful Division with try Function in Hugo Templates\nDESCRIPTION: This snippet demonstrates using the try function with valid division parameters that execute successfully and display the result.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/try.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $x := 42 }}\n{{ $y := 6 }}\n{{ with try (div $x $y) }}\n  {{ with .Err }}\n    {{ warnf \"%s\" . }}\n  {{ else }}\n    {{ printf \"%v divided by %v equals %v\" $x $y .Value }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Image Processing Using Process Method in Hugo\nDESCRIPTION: Shows various examples of using the Process method for image processing in Hugo, including format conversion and scaling actions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{/* Convert the image from JPG to PNG. */}}\n{{ $png := $jpg.Process \"png\" }}\n\n{{/* Rotate the image 90 degrees counter-clockwise. */}}\n{{ $image := $image.Process \"r90\" }}\n\n{{/* Scaling actions. */}}\n{{ $image := $image.Process \"resize 600x\" }}\n{{ $image := $image.Process \"crop 600x400\" }}\n{{ $image := $image.Process \"fit 600x400\" }}\n{{ $image := $image.Process \"fill 600x400\" }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Positional Arguments in Hugo Shortcode Template\nDESCRIPTION: Shows how to retrieve positional arguments using the Get function in a Hugo shortcode template. It uses the printf function to format the output.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Get.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ printf \"%s %s.\" (.Get 0) (.Get 1) }} → Hello world.\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo for Standalone Images\nDESCRIPTION: TOML configuration to disable wrapping standalone images within paragraph elements.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/images.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[markup.goldmark.parser]\nwrapStandAloneImageWithinParagraph = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Menu Entries in Hugo\nDESCRIPTION: Example of how to define menu entries in Hugo configuration file. The sample defines three menu items (Services, About, Contact) with their names, page references, and weight values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/Limit.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nname = 'Services'\npageRef = '/services'\nweight = 10\n\n[[menus.main]]\nname = 'About'\npageRef = '/about'\nweight = 20\n\n[[menus.main]]\nname = 'Contact'\npageRef = '/contact'\nweight = 30\n```\n\n----------------------------------------\n\nTITLE: Book Review Template Example\nDESCRIPTION: Template for rendering individual book review pages created by the content adapter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/content-adapters.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n\n  {{ with .Resources.GetMatch \"cover.*\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"{{ .Params.alt }}\">\n  {{ end }}\n\n  <p>Author: {{ .Params.author }}</p>\n\n  <p>\n    ISBN: {{ .Params.isbn }}<br>\n    Rating: {{ .Params.rating }}<br>\n    Review date: {{ .Date | time.Format \":date_long\" }}\n  </p>\n\n  {{ with .GetTerms \"tags\" }}\n    <p>Tags:</p>\n    <ul>\n      {{ range . }}\n        <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n      {{ end }}\n    </ul>\n  {{ end }}\n\n  {{ .Content }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Initializing Scoped Variables with 'with' in Hugo Templates\nDESCRIPTION: Shows how to initialize a variable scoped to the current block using the 'with' function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/with.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with $var := 42 }}\n  {{ . }} → 42\n  {{ $var }} → 42\n{{ end }}\n{{ $var }} → undefined\n```\n\n----------------------------------------\n\nTITLE: AsciiDoc Configuration with Extensions Example\nDESCRIPTION: TOML configuration example for the AsciiDoc renderer, showing how to enable extensions like asciidoctor-html5s and asciidoctor-diagram, set working directory settings, and define custom attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/markup.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[markup.asciidocExt]\n    extensions = [\"asciidoctor-html5s\", \"asciidoctor-diagram\"]\n    workingFolderCurrent = true\n    [markup.asciidocExt.attributes]\n        my-base-url = \"https://example.com/\"\n        my-attribute-name = \"my value\"\n```\n\n----------------------------------------\n\nTITLE: Setting Language-Specific Reading Speeds in Hugo Configuration\nDESCRIPTION: This configuration example shows how to set different reading speeds for different languages in a multilingual Hugo site using site parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/ReadingTime.md#2025-04-08_snippet_1\n\nLANGUAGE: toml/yaml\nCODE:\n```\n[languages]\n  [languages.de]\n    contentDir = 'content/de'\n    languageCode = 'de-DE'\n    languageName = 'Deutsch'\n    weight = 2\n    [languages.de.params]\n    reading_speed = 179\n  [languages.en]\n    contentDir = 'content/en'\n    languageCode = 'en-US'\n    languageName = 'English'\n    weight = 1\n    [languages.en.params]\n      reading_speed = 228\n```\n\n----------------------------------------\n\nTITLE: Creating Inline CSS in Hugo Templates\nDESCRIPTION: Shows how to include CSS directly in a page by using the Content method with a CSS resource and the safeCSS function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Content.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"css/style.css\" }}\n  <style>{{ .Content | safeCSS }}</style>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Adding Slice Values in Hugo Store\nDESCRIPTION: Demonstrates appending slices using the Add method with existing slice values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/store-methods.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Store.Set \"greetings\" (slice \"Hello\") }}\n{{ .Store.Add \"greetings\" (slice \"Welcome\" \"Cheers\") }}\n{{ .Store.Get \"greetings\" }} → [Hello Welcome Cheers]\n```\n\n----------------------------------------\n\nTITLE: Calculating Ceiling Value with math.Ceil in Hugo Go Templates\nDESCRIPTION: Demonstrates the usage of the math.Ceil function in Hugo Go templates. It takes a float64 value as input and returns the least integer value greater than or equal to the given number.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Ceil.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Ceil 2.1 }} → 3\n```\n\n----------------------------------------\n\nTITLE: Basic Blockquote Render Hook Implementation\nDESCRIPTION: Simple implementation of a blockquote render hook that follows the CommonMark specification.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/blockquotes.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<blockquote>\n  {{ .Text }}\n</blockquote>\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended on NixOS\nDESCRIPTION: Command to install the extended edition of Hugo on NixOS Linux using the nix-env package manager.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nnix-env -iA nixos.hugo\n```\n\n----------------------------------------\n\nTITLE: Splitting Strings Using strings.Split in Hugo Templates\nDESCRIPTION: Shows two examples of using strings.Split: splitting a comma-separated string into a slice and splitting a string into individual characters. The function takes two parameters: the input string and the delimiter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Split.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ split \"tag1,tag2,tag3\" \",\" }} → [\"tag1\", \"tag2\", \"tag3\"]\n{{ split \"abc\" \"\" }} → [\"a\", \"b\", \"c\"]\n```\n\n----------------------------------------\n\nTITLE: Comparing Pages with .Eq Method in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the .Eq method to compare the current page with other pages in the same section. It creates a loop that displays links to all pages in the current section except for the current page itself.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Eq.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $currentPage := . }}\n{{ range .CurrentSection.Pages }}\n  {{ if not (.Eq $currentPage) }}\n    <a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Date Comparison with Predefined Dates\nDESCRIPTION: Shows how to compare predefined front matter dates (which are time.Time values) with other date values for filtering pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_10\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $startOfYear := time.AsTime (printf \"%d-01-01\" now.Year) }}\n{{ $pages := where .Site.RegularPages \"Date\" \"lt\" $startOfYear }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Menu Entry URL in Hugo Templates\nDESCRIPTION: This snippet illustrates how to retrieve the URL of a menu entry in Hugo. The .URL method returns the full URL of the menu entry, which is used for linking to the corresponding page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/_index.md#2025-04-08_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ .URL }}\n```\n\n----------------------------------------\n\nTITLE: Checking Integer Membership in a Numeric Slice with collections.In\nDESCRIPTION: This example shows how to check if an integer value exists within a slice of integers using the collections.In function. It returns true when 2 is found in the slice.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/In.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice 1 2 3 }}\n{{ in $s 2 }} → true\n```\n\n----------------------------------------\n\nTITLE: Configuring Front Matter for Hugo News Page in YAML\nDESCRIPTION: This YAML front matter configuration defines settings for a Hugo news page, including title, description, multiple output formats (HTML and RSS), weight for menu ordering, and URL aliasing for backwards compatibility.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/news/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: News\ndescription: Stay up-to-date with the latest news and announcements.\noutputs:\n  - html\n  - rss\nweight: 10\naliases: [/release-notes/]\n---\n```\n\n----------------------------------------\n\nTITLE: Publishing Resource using Get and Publish Methods\nDESCRIPTION: Demonstrates how to retrieve an image resource and publish it to the public directory using Hugo's resource.Get and Publish methods.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Publish.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ .Publish }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Content Directory Structure Example in Hugo\nDESCRIPTION: Example directory structure showing different content file formats supported in Hugo posts directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/formats.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n└── posts/\n    ├── post-1.md\n    ├── post-2.adoc\n    ├── post-3.org\n    ├── post-4.pandoc\n    ├── post-5.rst\n    └── post-6.html\n```\n\n----------------------------------------\n\nTITLE: Index Function for Taxonomy Term Access\nDESCRIPTION: Shows how to use the index function to access taxonomy terms, which works with any term name including those with hyphens.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Get.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $weightedPages := index $taxonomyObject \"my-genre\" }}\n```\n\n----------------------------------------\n\nTITLE: Complete Example of Multilingual Configuration in Hugo\nDESCRIPTION: Provides a comprehensive example of multilingual configuration in Hugo, including settings for German and English languages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/languages.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'de'\ndefaultContentLanguageInSubdir = true\ndisableDefaultLanguageRedirect = false\n\n[languages.de]\ncontentDir = 'content/de'\ndisabled = false\nlanguageCode = 'de-DE'\nlanguageDirection = 'ltr'\nlanguageName = 'Deutsch'\ntitle = 'Projekt Dokumentation'\nweight = 1\n\n[languages.de.params]\nsubtitle = 'Referenz, Tutorials und Erklärungen'\n\n[languages.en]\ncontentDir = 'content/en'\ndisabled = false\nlanguageCode = 'en-US'\nlanguageDirection = 'ltr'\nlanguageName = 'English'\ntitle = 'Project Documentation'\nweight = 2\n\n[languages.en.params]\nsubtitle = 'Reference, Tutorials, and Explanations'\n```\n\n----------------------------------------\n\nTITLE: Declaring Safe URL with safeURL in Hugo Templates\nDESCRIPTION: This example shows how to properly declare a URL as safe using the safeURL function (alias for safe.URL). The function allows Hugo to render the URL without sanitizing it.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/URL.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $href := \"irc://irc.freenode.net/#golang\" }}\n<a href=\"{{ $href | safeURL }}\">IRC</a>\n```\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"irc://irc.freenode.net/#golang\">IRC</a>\n```\n\n----------------------------------------\n\nTITLE: Using IsMenuCurrent and HasMenuCurrent in Hugo Menu Templates\nDESCRIPTION: This snippet demonstrates how to build a navigation menu in Hugo templates that highlights the current page and ancestor pages. It applies different styling based on whether the current page matches the menu entry (IsMenuCurrent) or is a child of the menu entry (HasMenuCurrent).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsMenuCurrent.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $currentPage := . }}\n{{ range site.Menus.main }}\n  {{ if $currentPage.IsMenuCurrent .Menu . }}\n    <a class=\"active\" aria-current=\"page\" href=\"{{ .URL }}\">{{ .Name }}</a>\n  {{ else if $currentPage.HasMenuCurrent .Menu . }}\n    <a class=\"ancestor\" aria-current=\"true\" href=\"{{ .URL }}\">{{ .Name }}</a>\n  {{ else }}\n    <a href=\"{{ .URL }}\">{{ .Name }}</a>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Setting TranslationKey in Front Matter (English)\nDESCRIPTION: This snippet demonstrates how to set a custom translationKey in the front matter of an English content file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/TranslationKey.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Book 1'\ntranslationKey = 'foo'\n```\n\n----------------------------------------\n\nTITLE: Inspecting Fragments.HeadingsMap Data Structure in Hugo Templates\nDESCRIPTION: Shows how to use the debug.Dump function to inspect the Fragments.HeadingsMap data structure, which contains a nested map of all headings on the page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Fragments.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre>{{ debug.Dump .Fragments.HeadingsMap }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Defining Page Resource Name in Hugo Front Matter\nDESCRIPTION: Shows how to define a custom name for a page resource in the front matter of a Markdown file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Name.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntitle = 'Example'\n[[resources]]\nsrc = 'images/a.jpg'\nname = 'Sunrise in Bryce Canyon'\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of collections.Union Function in Hugo\nDESCRIPTION: Demonstrates how to use the collections.Union function to combine two slices, handle nil inputs, and create an empty result.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Union.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ union (slice 1 2 3) (slice 3 4 5) }} → [1 2 3 4 5]\n\n{{ union (slice 1 2 3) nil }} → [1 2 3]\n\n{{ union nil (slice 1 2 3) }} → [1 2 3]\n\n{{ union nil nil }} → []\n```\n\n----------------------------------------\n\nTITLE: Defining Page Weight in Hugo Front Matter\nDESCRIPTION: Example of setting a page weight in Hugo front matter using TOML format. Shows how to assign an integer weight value to control page positioning in sorted collections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Weight.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'How to make spicy tuna hand rolls'\nweight = 42\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output from Hugo Template\nDESCRIPTION: The final HTML output that Hugo generates after processing the template. It shows the figure with image and caption populated with parameters from the resource's front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Params.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<figure>\n  <img alt=\"Photograph of black cat\" src=\"/posts/post-1/images/a.jpg\" width=\"600\" height=\"400\">\n  <figcaption>Felix the cat is vicious</figcaption>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Configuring Reference Link Error Handling in Hugo Configuration\nDESCRIPTION: This snippet shows how to configure Hugo to display warnings instead of errors for unresolved reference links, and how to specify a fallback URL. These settings are placed in the Hugo configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/ref-and-relref-error-handling.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nrefLinksErrorLevel = 'warning'\nrefLinksNotFoundURL = '/some/other/url'\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of strings.ReplaceRE in Hugo Templates\nDESCRIPTION: Demonstrates how to use strings.ReplaceRE to replace multiple dashes with a single dash in a string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/ReplaceRE.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := \"a-b--c---d\" }}\n{{ replaceRE `(-{2,})` \"-\" $s }} → a-b-c-d\n```\n\n----------------------------------------\n\nTITLE: Rendering a Sorted Taxonomy with ByCount in Hugo\nDESCRIPTION: Loops through the ordered taxonomy to display each term with its count and associated pages. For each term, it shows a heading with the term name and count, followed by a list of pages associated with that term.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/ByCount.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range $taxonomyObject.ByCount }}\n  <h2><a href=\"{{ .Page.RelPermalink }}\">{{ .Page.LinkTitle }}</a> ({{ .Count }})</h2>\n  <ul>\n    {{ range .Pages.ByTitle }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output for Taxonomy Terms\nDESCRIPTION: Example of the rendered HTML output showing taxonomy terms with their associated pages organized alphabetically.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Alphabetical.md#2025-04-08_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<h2><a href=\"/genres/romance/\">romance</a> (2)</h2>\n<ul>\n  <li><a href=\"/books/jamaica-inn/\">Jamaica inn</a></li>\n  <li><a href=\"/books/pride-and-prejudice/\">Pride and prejudice</a></li>\n</ul>\n<h2><a href=\"/genres/suspense/\">suspense</a> (3)</h2>\n<ul>\n  <li><a href=\"/books/and-then-there-were-none/\">And then there were none</a></li>\n  <li><a href=\"/books/death-on-the-nile/\">Death on the nile</a></li>\n  <li><a href=\"/books/jamaica-inn/\">Jamaica inn</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Hugo Section Template with Range Loop\nDESCRIPTION: Shows a section template that iterates over pages to display titles and summaries.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/global/page.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ .Summary }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Content Directory Structure Example\nDESCRIPTION: Example directory structure showing the organization of content files with top-level sections for books and films.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Sections.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── books/\n│   ├── book-1.md\n│   └── book-2.md\n├── films/\n│   ├── film-1.md\n│   └── film-2.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Calculating Product Using math.Product in Hugo Templates\nDESCRIPTION: Demonstrates how to use the math.Product function to multiply numbers in Hugo templates. The function accepts both individual numbers and slices of numbers as arguments, multiplying all values together to produce a final result.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Product.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Product 1 (slice 2 3) 4 }} → 24\n```\n\n----------------------------------------\n\nTITLE: Hugo Template - Get Translation Base Name\nDESCRIPTION: Template code to safely access the TranslationBaseName property of a File object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_10\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .File }}\n  {{ .TranslationBaseName }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Hugo Deployment Script\nDESCRIPTION: This shell script automates the process of building the Hugo site and deploying it to the remote server using rsync. It includes variables for user, host, and directory customization.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/deploy-with-rsync.md#2025-04-08_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n#!/bin/sh\nUSER=my-user\nHOST=my-server.com\nDIR=my/directory/to/topologix.fr/   # the directory where your website files should go\n\nhugo && rsync -avz --delete public/ ${USER}@${HOST}:~/${DIR} # this will delete everything on the server that's not in the local public directory \n\nexit 0\n```\n\n----------------------------------------\n\nTITLE: Hugo Public Directory Structure with Path Values\nDESCRIPTION: Demonstrates the output directory structure after building a Hugo site, showing the Path value for each page including generated pages like tag listings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Path.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\npublic/\n├── posts/\n│   ├── post-1/\n│   │   └── index.html    .Page.Path = /posts/post-1\n│   └── index.html        .Page.Path = /posts\n├── tags/\n│   ├── hugo/\n│   │   └── index.html    .Page.Path = /tags/hugo\n│   └── index.html        .Page.Path = /tags\n└── index.html            .Page.Path = /\n```\n\n----------------------------------------\n\nTITLE: Simple English Translation Example\nDESCRIPTION: Demonstrates basic English translations using TOML format\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/Translate.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nprivacy = 'privacy'\nsecurity = 'security'\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Theme Components in Hugo\nDESCRIPTION: Configuration example showing how to define multiple theme components in Hugo's configuration file. Themes are processed from left to right in terms of precedence.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-modules/theme-components.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntheme = [\"my-shortcodes\", \"base-theme\", \"hyde\"]\n```\n\n----------------------------------------\n\nTITLE: Accessing KeyVals Properties in Hugo Templates\nDESCRIPTION: Shows how to access the Key and Values properties from a KeyVals structure in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/KeyVals.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $kv.Key }} → foo\n{{ $kv.Values }} → [a b c]\n```\n\n----------------------------------------\n\nTITLE: Installing Fish Completions Permanently\nDESCRIPTION: Command to install Hugo autocompletions for all future Fish shell sessions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_fish.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhugo completion fish > ~/.config/fish/completions/hugo.fish\n```\n\n----------------------------------------\n\nTITLE: Calculating Time Difference Using Sub Method in Hugo\nDESCRIPTION: This snippet shows how to create two time objects using time.AsTime and then calculate the duration between them using the Sub method. The result is a time.Duration value representing the difference between the two times.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Sub.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t1 := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t2 := time.AsTime \"2023-01-26T22:34:38-08:00\" }}\n\n{{ $t1.Sub $t2 }} → 25h10m20s\n```\n\n----------------------------------------\n\nTITLE: Multilingual Content Structure in Hugo\nDESCRIPTION: This snippet illustrates the directory structure for a multilingual Hugo site. It shows how content is organized for English, German, and French languages, including books and index pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Translations.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── de/\n│   ├── books/\n│   │   ├── book-1.md\n│   │   └── book-2.md\n│   └── _index.md\n├── en/\n│   ├── books/\n│   │   ├── book-1.md\n│   │   └── book-2.md\n│   └── _index.md\n├── fr/\n│   ├── books/\n│   │   └── book-1.md\n│   └── _index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Checking if Menu Entry is an Ancestor of Current Page in Hugo\nDESCRIPTION: This code demonstrates how to check if a menu entry is an ancestor of the current page in Hugo. The .HasMenuCurrent method returns a boolean indicating whether the entry is an ancestor of the current page in the specified menu.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/_index.md#2025-04-08_snippet_9\n\nLANGUAGE: go\nCODE:\n```\n{{ .HasMenuCurrent \"main\" . }}\n```\n\n----------------------------------------\n\nTITLE: Basic Image Fill Operation in Hugo\nDESCRIPTION: This snippet demonstrates how to use the Fill method to crop and resize an image to 200x200 pixels. It retrieves an image resource, applies the Fill operation, and generates an HTML img tag with the processed image.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Fill.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Fill \"200x200\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Checking String Prefix with strings.HasPrefix in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the strings.HasPrefix function in Hugo templates to check if a string begins with a specific prefix. It returns a boolean value indicating whether the prefix is present.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/HasPrefix.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hasPrefix \"Hugo\" \"Hu\" }} → true\n```\n\n----------------------------------------\n\nTITLE: Configuring Site Title in Hugo Config\nDESCRIPTION: Sets the main site title in Hugo's configuration file that will be used across the site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Title.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'My Documentation Site'\n```\n\n----------------------------------------\n\nTITLE: Global Resource Directory Structure Example\nDESCRIPTION: Shows the directory structure for a global resource example with an image file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Title.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nassets/\n└── images/\n    └── Sunrise in Bryce Canyon.jpg\n```\n\n----------------------------------------\n\nTITLE: Hugo Template - Defensive Coding Example\nDESCRIPTION: Template code demonstrating defensive coding practice when accessing File properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_13\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .File }}\n  {{ .ContentBaseName }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Image Height in Hugo\nDESCRIPTION: Demonstrates how to get the height of an image resource using the Height method. Returns an integer value representing the image height in pixels.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Height.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ .Height }} → 400\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Content Structure for Taxonomies\nDESCRIPTION: Example directory structure showing how content files are organized with taxonomy terms (genres) assigned to different book pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/taxonomy/get-a-taxonomy-object.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── books/\n│   ├── and-then-there-were-none.md --> genres: suspense\n│   ├── death-on-the-nile.md        --> genres: suspense\n│   └── jamaica-inn.md              --> genres: suspense, romance\n│   └── pride-and-prejudice.md      --> genres: romance\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Trimming Whitespace Using strings.TrimSpace in Hugo Templates\nDESCRIPTION: Demonstrates the use of strings.TrimSpace function to remove leading and trailing whitespace characters including tabs, newlines, vertical tabs, form feeds, carriage returns, and Unicode space separators from a string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/TrimSpace.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.TrimSpace \"\\n\\r\\t   foo   \\n\\r\\t\" }} → foo\n```\n\n----------------------------------------\n\nTITLE: Creating KeyVals Structure in Hugo Templates\nDESCRIPTION: Demonstrates how to create a KeyVals structure using the keyVals function with a key and multiple values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/KeyVals.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $kv := keyVals \"foo\" \"a\" \"b\" \"c\" }}\n```\n\n----------------------------------------\n\nTITLE: GoAT ASCII Tree Diagram Example\nDESCRIPTION: A sample GoAT diagram displaying a Linux distribution tree structure with various flavors. The diagram uses custom width and color attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/diagrams.md#2025-04-08_snippet_2\n\nLANGUAGE: goat\nCODE:\n```\n───Linux─┬─Android\n         ├─Debian─┬─Ubuntu─┬─Lubuntu\n         │        │        ├─Kubuntu\n         │        │        ├─Xubuntu\n         │        │        └─Xubuntu\n         │        └─Mint\n         ├─Centos\n         └─Fedora\n```\n\n----------------------------------------\n\nTITLE: Random Integer Generation (1-6) in Hugo\nDESCRIPTION: Generates a random integer in the closed interval [1, 6] using multiplication and ceiling function\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Rand.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Rand | mul 6 | math.Ceil }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Template - Get ContentBaseName\nDESCRIPTION: Template code to safely access the ContentBaseName property of a File object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .File }}\n  {{ .ContentBaseName }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Formatting Numbers with Custom Options using lang.FormatNumberCustom in Hugo\nDESCRIPTION: Examples of using lang.FormatNumberCustom to format numbers with various precisions and formatting options. The function takes a precision value, a number to format, and optional formatting characters for negative symbol, decimal point, and grouping.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/FormatNumberCustom.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ lang.FormatNumberCustom 2 12345.6789 }} → 12,345.68\n{{ lang.FormatNumberCustom 2 12345.6789 \"- , .\" }} → 12.345,68\n{{ lang.FormatNumberCustom 6 -12345.6789 \"- .\" }} → -12345.678900\n{{ lang.FormatNumberCustom 0 -12345.6789 \"- . ,\" }} → -12,346\n{{ lang.FormatNumberCustom 0 -12345.6789 \"-|.| \" \"|\" }} → -12 346\n```\n\n----------------------------------------\n\nTITLE: Setting Debug Logging Level in Hugo CLI\nDESCRIPTION: Command to run Hugo with debug-level logging, which displays debug, information, warning, and error messages when building a site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/logging.md#2025-04-08_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nhugo --logLevel debug\n```\n\n----------------------------------------\n\nTITLE: Adding Numbers with math.Add in Hugo Templates\nDESCRIPTION: Demonstrates numeric addition using the math.Add function with multiple integer values. The function takes two or more numbers and returns their sum.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Add.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ add 12 3 2 }} → 17\n```\n\n----------------------------------------\n\nTITLE: Simple Polish Translation Example\nDESCRIPTION: Demonstrates basic Polish translations using TOML format\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/Translate.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\nprivacy = 'prywatność'\nsecurity = 'bezpieczeństwo'\n```\n\n----------------------------------------\n\nTITLE: Hugo Canonical URL Examples\nDESCRIPTION: Shows how Hugo transforms relative URLs to absolute URLs when canonifyURLs is enabled\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/urls.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/about\"> → <a href=\"https://example.org/about/\">\n<img src=\"/a.gif\"> → <img src=\"https://example.org/a.gif\">\n```\n\n----------------------------------------\n\nTITLE: Using hugo.Environment Function in Templates\nDESCRIPTION: Demonstrates how to use the hugo.Environment function to retrieve the current running environment in Hugo templates. This function returns a string value such as 'production', 'development', or any custom environment specified via command line flags.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/Environment.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.Environment }} → production\n```\n\n----------------------------------------\n\nTITLE: Hugo Module Verification Command Options\nDESCRIPTION: Available options for the 'hugo mod verify' command, including base URL, cache directory, content directory, and theme selection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_verify.md#2025-04-08_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n  -b, --baseURL string           hostname (and path) to the root, e.g. https://spf13.com/\n      --cacheDir string          filesystem path to cache directory\n      --clean                    delete module cache for dependencies that fail verification\n  -c, --contentDir string        filesystem path to content directory\n  -h, --help                     help for verify\n      --renderSegments strings   named segments to render (configured in the segments config)\n  -t, --theme strings            themes to use (located in /themes/THEMENAME/)\n```\n\n----------------------------------------\n\nTITLE: Hugo Documentation Frontmatter Definition\nDESCRIPTION: YAML frontmatter block defining metadata for a Hugo documentation page about time methods. Includes title, linkTitle, description, and empty categories/keywords arrays.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Time methods\nlinkTitle: Time\ndescription: Use these methods with time.Time values.\ncategories: []\nkeywords: []\n---\n```\n\n----------------------------------------\n\nTITLE: File Structure Example for Hugo Node Types\nDESCRIPTION: This snippet illustrates the file structure in Hugo and shows which types of pages are considered nodes. It demonstrates how different file types and locations correspond to different page kinds and node statuses.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsNode.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── books/\n│   ├── book-1/\n│   │   └── index.md    <-- kind = page, node = false\n│   ├── book-2.md       <-- kind = page, node = false\n│   └── _index.md       <-- kind = section, node = true\n├── tags/\n│   ├── fiction/\n│   │   └── _index.md   <-- kind = term, node = true\n│   └── _index.md       <-- kind = taxonomy, node = true\n└── _index.md           <-- kind = home, node = true\n```\n\n----------------------------------------\n\nTITLE: Customized Code Block Highlighting in Hugo Templates\nDESCRIPTION: Shows how to override default highlighting options by merging custom options (enabling line numbers) with existing configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/HighlightCodeBlock.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := merge .Options (dict \"linenos\" true) }}\n{{ $result := transform.HighlightCodeBlock . $opts }}\n{{ $result.Wrapped }}\n```\n\n----------------------------------------\n\nTITLE: Calculating Arctangent Using math.Atan in Hugo Templates\nDESCRIPTION: Demonstrates how to use the math.Atan function to calculate the arctangent of a number. Returns the result in radians. In this example, calculating the arctangent of 1 returns approximately 0.7854 radians (45 degrees).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Atan.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Atan 1 }} → 0.7853981633974483\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Person Symbol Emoji Shortcodes\nDESCRIPTION: Markdown table listing emoji shortcodes for person-related symbols\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | ico | shortcode | |\n| - | :-: | - | :-: | - | - |\n| [top](#people--body) | :speaking_head: | `:speaking_head:` | :bust_in_silhouette: | `:bust_in_silhouette:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: Applying Image Filters with images.Filter Function in Hugo\nDESCRIPTION: Demonstrates how to use the images.Filter function to apply a set of filters to an image resource and then display the processed image.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Mask.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with . | images.Filter $filters }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Applying Image Filters with images.Filter Function in Hugo\nDESCRIPTION: Demonstrates how to use the images.Filter function to apply a set of filters to an image resource and then display the processed image.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Mask.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with . | images.Filter $filters }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendering Hugo Menu Template\nDESCRIPTION: Go HTML template that renders a navigation menu with active state handling using site.Menus.main. Includes conditional logic to highlight the current page in the navigation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Menus.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with site.Menus.main }}\n  <nav class=\"menu\">\n    {{ range . }}\n      {{ if $.IsMenuCurrent .Menu . }}\n        <a class=\"active\" aria-current=\"page\" href=\"{{ .URL }}\">{{ .Name }}</a>\n      {{ else }}\n        <a href=\"{{ .URL }}\">{{ .Name }}</a>\n      {{ end }}\n    {{ end }}\n  </nav>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Post Property of Menu Entry in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to access the 'post' property of a menu entry in Hugo templates. The 'post' method returns the content as template.HTML, which can be used for additional HTML content after the menu item.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Post.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\nMENUENTRY.Post\n```\n\n----------------------------------------\n\nTITLE: Displaying Content Structure in Hugo\nDESCRIPTION: This snippet shows an example content structure in Hugo, illustrating the hierarchy of pages and their respective parent sections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Parent.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── auctions/\n│   ├── 2023-11/\n│   │   ├── _index.md     <-- parent: auctions\n│   │   ├── auction-1.md\n│   │   └── auction-2.md  <-- parent: 2023-11\n│   ├── 2023-12/\n│   │   ├── _index.md     \n│   │   ├── auction-3.md\n│   │   └── auction-4.md\n│   ├── _index.md         <-- parent: home\n│   ├── bidding.md\n│   └── payment.md        <-- parent: auctions\n├── books/\n│   ├── _index.md         <-- parent: home\n│   ├── book-1.md\n│   └── book-2.md         <-- parent: books\n├── films/\n│   ├── _index.md         <-- parent: home \n│   ├── film-1.md\n│   └── film-2.md         <-- parent: films\n└── _index.md             <-- parent: nil\n```\n\n----------------------------------------\n\nTITLE: Advanced Image Fit with Quality and Algorithm Options in Hugo\nDESCRIPTION: Shows a more advanced usage of the Fit method with additional parameters including WebP format conversion, quality setting of 85%, and the Lanczos resampling algorithm. The image is fitted to 300x175 dimensions while maintaining aspect ratio.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Fit.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Fit \"300x175 webp q85 lanczos\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Single Page Template with Next/Previous Navigation\nDESCRIPTION: A Hugo template for single pages that implements previous and next page navigation. It uses the .Prev and .Next methods which follow Hugo's internal page sorting hierarchy.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/page/next-and-prev.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Prev }}\n  <a href=\"{{ .RelPermalink }}\">Previous</a>\n{{ end }}\n\n{{ with .Next }}\n  <a href=\"{{ .RelPermalink }}\">Next</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Converting String to Lowercase with strings.ToLower in Hugo Templates\nDESCRIPTION: This example demonstrates using the strings.ToLower function (or its alias 'lower') to convert all characters in a string to lowercase. The function takes a single string input and returns the lowercase version.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/ToLower.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ lower \"BatMan\" }} → batman\n```\n\n----------------------------------------\n\nTITLE: Debugging Site Languages in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to dump the complete Languages collection to inspect its structure. It uses Hugo's debug.Dump function to show all language objects and their properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Languages.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre>{{ debug.Dump .Site.Languages }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Converting Duration to Microseconds Count in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the Microseconds method on a time.Duration value to get the total duration expressed as microseconds. It parses a duration string and then converts it to an integer microsecond count.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/duration/Microseconds.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $d = time.ParseDuration \"3.5h2.5m1.5s\" }}\n{{ $d.Microseconds }} → 12751500000\n```\n\n----------------------------------------\n\nTITLE: Creating Book Details Shortcode Template\nDESCRIPTION: HTML template implementation of the book-details shortcode that accesses page front matter values using the .Page method to display book information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Page.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  <li>Title: {{ .Page.Title }}</li>\n  <li>Author: {{ .Page.Params.author }}</li>\n  <li>Published: {{ .Page.Params.publication_year }}</li>\n  <li>ISBN: {{ .Page.Params.isbn }}</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Random Integer Generation (0-5) in Hugo\nDESCRIPTION: Generates a random integer in the closed interval [0, 5] using multiplication and floor function\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Rand.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Rand | mul 6 | math.Floor }}\n```\n\n----------------------------------------\n\nTITLE: Formatting Keywords with Delimit Function\nDESCRIPTION: Demonstrates using Hugo's delimit function to format keywords into a comma-separated list with proper conjunction.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Keywords.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ delimit .Keywords \", \" \", and \" }} → tuna, sriracha, nori, and rice\n```\n\n----------------------------------------\n\nTITLE: Adding Pages with Hugo Content Adapter\nDESCRIPTION: Demonstrates how to use the AddPage method to create a new page with markdown content and metadata.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/content-adapters.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $content := dict\n  \"mediaType\" \"text/markdown\"\n  \"value\" \"The _Hunchback of Notre Dame_ was written by Victor Hugo.\"\n}}\n{{ $page := dict\n  \"content\" $content\n  \"kind\" \"page\"\n  \"path\" \"the-hunchback-of-notre-dame\"\n  \"title\" \"The Hunchback of Notre Dame\"\n}}\n{{ .AddPage $page }}\n```\n\n----------------------------------------\n\nTITLE: Including Google Analytics Template in Hugo\nDESCRIPTION: Demonstrates how to include Hugo's embedded Google Analytics template in a page. This template supports Google Analytics 4 integration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/embedded.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ template \"_internal/google_analytics.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Month Normalization Edge Cases with AddDate\nDESCRIPTION: Shows edge cases where adding months results in date normalization due to different month lengths and leap years. Demonstrates how AddDate handles dates like January 31st and February 29th.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/AddDate.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $d := \"2023-01-31\" | time.AsTime }}\n{{ $d.AddDate 0 1 0 | time.Format \"2006-01-02\" }} → 2023-03-03\n\n{{ $d := \"2024-01-31\" | time.AsTime }}\n{{ $d.AddDate 0 1 0 | time.Format \"2006-01-02\" }} → 2024-03-02\n\n{{ $d := \"2024-02-29\" | time.AsTime }}\n{{ $d.AddDate 1 0 0 | time.Format \"2006-01-02\" }} → 2025-03-01\n```\n\n----------------------------------------\n\nTITLE: Using math.Counter with warnf in Hugo Templates\nDESCRIPTION: This example demonstrates how to use math.Counter with the warnf function to create unique warning messages. The counter increments by 1 each time it's called.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Counter.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ warnf \"single.html called %d times\" math.Counter }}\n```\n\n----------------------------------------\n\nTITLE: Polish Template Usage\nDESCRIPTION: Shows how to use translations in Go HTML templates for Polish content\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/Translate.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ T \"privacy\" }} → prywatność\n{{ T \"security\" }} → bezpieczeństwo\n```\n\n----------------------------------------\n\nTITLE: Mermaid Sequence Diagram Example\nDESCRIPTION: Example of a Mermaid sequence diagram showing interaction between Alice, Bob, and John with loops and notes. This demonstrates the Mermaid diagram syntax that can be used with the custom render hook.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/diagrams.md#2025-04-08_snippet_8\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    loop Healthcheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail!\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Count Method\nDESCRIPTION: Returns the number of pages assigned to a taxonomy term as an integer.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/taxonomy/ordered-taxonomy-element-methods.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nCount() int\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended on Alpine Linux\nDESCRIPTION: Command to install the extended edition of Hugo on Alpine Linux using the apk package manager with the edge/community repository.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ndoas apk add --no-cache --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community hugo\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended on Alpine Linux\nDESCRIPTION: Command to install the extended edition of Hugo on Alpine Linux using the apk package manager with the edge/community repository.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ndoas apk add --no-cache --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community hugo\n```\n\n----------------------------------------\n\nTITLE: Accessing Google Analytics ID in Hugo Templates\nDESCRIPTION: Demonstrates how to access the configured Google Analytics ID from a Hugo template. Note that identifiers must be capitalized in the template syntax.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Config.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Config.Services.GoogleAnalytics.ID }} → G-XXXXXXXXX\n```\n\n----------------------------------------\n\nTITLE: Iterating Through Keywords in Hugo Template\nDESCRIPTION: Shows how to loop through and display keywords in a Hugo template using the range function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Keywords.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Keywords }}\n  {{ . }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Reading File Contents in Hugo\nDESCRIPTION: This snippet demonstrates how to use the os.ReadFile function in Hugo to read the contents of a file. It shows an example of reading the contents of 'README.md' and printing them.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/_index.md#2025-04-08_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{ $readme := os.ReadFile \"README.md\" }}\n{{ print $readme }}\n```\n\n----------------------------------------\n\nTITLE: Converting a Singular Word to Plural Form Using inflect.Pluralize in Hugo\nDESCRIPTION: This example demonstrates how to use the inflect.Pluralize function as a pipe in Hugo templates to convert the singular word 'cat' to its plural form 'cats'. The function applies standard English pluralization rules.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/inflect/Pluralize.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"cat\" | pluralize }} → cats\n```\n\n----------------------------------------\n\nTITLE: Accessing Language Weight in Hugo Templates\nDESCRIPTION: Retrieves the weight assigned to a language in the site configuration. This determines the language's order in the slice of languages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Language.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Language.Weight }} → 1\n```\n\n----------------------------------------\n\nTITLE: Advanced Related Content Configuration in Hugo Templates\nDESCRIPTION: This example demonstrates a more complex configuration of the Related method, using all available options including indices, document reference, namedSlices with keyVals function, and fragments for matching heading identifiers.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/Related.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $page := . }}\n{{ $opts := dict\n  \"indices\" (slice \"tags\" \"keywords\")\n  \"document\" $page\n  \"namedSlices\" (slice (keyVals \"tags\" \"hugo\" \"rocks\") (keyVals \"date\" $page.Date))\n  \"fragments\" (slice \"heading-1\" \"heading-2\")\n}}\n```\n\n----------------------------------------\n\nTITLE: Using PlainWords Method in Hugo Templates\nDESCRIPTION: This snippet demonstrates the basic usage of the PlainWords method on a Page object in Hugo. It returns a slice of strings, where each string is a word from the page's plain text content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/PlainWords.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .PlainWords }}\n```\n\n----------------------------------------\n\nTITLE: Using RelRef Method with Different Options in Hugo Templates\nDESCRIPTION: Demonstrates different ways to use the RelRef method to generate relative URLs. Examples include basic usage, specifying a different language, and requesting a specific output format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RelRef.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict \"path\" \"/books/book-1\" }}\n{{ .RelRef $opts }} → /en/books/book-1/\n\n{{ $opts := dict \"path\" \"/books/book-1\" \"lang\" \"de\" }}\n{{ .RelRef $opts }} → /de/books/book-1/\n\n{{ $opts := dict \"path\" \"/books/book-1\" \"lang\" \"de\" \"outputFormat\" \"json\" }}\n{{ .RelRef $opts }} → /de/books/book-1/index.json\n```\n\n----------------------------------------\n\nTITLE: Applying Image Filter Using Filter Method on Resource Object in Hugo\nDESCRIPTION: This snippet shows how to apply an image filter using the Filter method directly on a Resource object in Hugo. It retrieves an image resource, applies a filter, and renders an img tag with the filtered image's properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/functions/images/apply-image-filter.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Filter $filter }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Comparing Two HTML Snippets with strings.Diff in Hugo Templates\nDESCRIPTION: This example demonstrates how to use strings.Diff to compare two HTML snippets and visualize their differences. The function takes four parameters: a name for the old text, the old text content, a name for the new text, and the new text content. The resulting diff is then highlighted using transform.Highlight.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Diff/index.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $want := `\n<p>The product of 6 and 7 is 42.</p>\n<p>The product of 7 and 6 is 42.</p>\n`}}\n\n{{ $got := `\n<p>The product of 6 and 7 is 42.</p>\n<p>The product of 7 and 6 is 13.</p>\n`}}\n\n{{ $diff := strings.Diff \"want\" $want \"got\" $got }}\n{{ transform.Highlight $diff \"diff\" }}\n```\n\n----------------------------------------\n\nTITLE: Asciidoctor Code Block Example\nDESCRIPTION: This snippet demonstrates how to format a code block in Asciidoctor markup for syntax highlighting. It shows a Ruby example using Sinatra that will be highlighted according to the configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/markup.md#2025-04-08_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n[#hello,ruby]\n----\nrequire 'sinatra'\n\nget '/hi' do\n  \"Hello World!\"\nend\n----\n```\n\n----------------------------------------\n\nTITLE: Customized QR Code with Options in Hugo\nDESCRIPTION: Generates a QR code with customized error correction level, scale, and target directory settings using a dictionary of options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/QR.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $text := \"https://gohugo.io\" }}\n{{ $opts := dict \n  \"level\" \"high\" \n  \"scale\" 3\n  \"targetDir\" \"images/qr\"\n}}\n{{ with images.QR $text $opts }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Context Usage in 'with' Block in Hugo Templates\nDESCRIPTION: Demonstrates an incorrect usage of context within a 'with' block, attempting to access a Page method on an integer.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/with.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with 42 }}\n  {{ .Title }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using math.Cos Function in Hugo Templates\nDESCRIPTION: This example demonstrates how to use the math.Cos function to calculate the cosine of a radian value in Hugo templates. The function takes a single numeric parameter and returns the cosine as a float64.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Cos.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Cos 1 }} → 0.5403023058681398\n```\n\n----------------------------------------\n\nTITLE: Accessing Language Tag with Lang Method in Hugo\nDESCRIPTION: Retrieves the language tag (as defined by RFC 5646) from the Language object of a page in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Language.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Language.Lang }} → de\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Menu Entries in Site Configuration\nDESCRIPTION: Shows how to define menu entries in Hugo's site configuration file, specifying name, pageRef, and weight for each entry.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/PageRef.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nname = 'Products'\npageRef = '/products'\nweight = 10\n[[menus.main]]\nname = 'Services'\npageRef = '/services'\nweight = 20\n```\n\n----------------------------------------\n\nTITLE: Hugo Module Get Command Options\nDESCRIPTION: Available options for the 'hugo mod get' command, including the help flag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_get.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for get\n```\n\n----------------------------------------\n\nTITLE: Dividing Numbers Using math.Div in Hugo Go HTML Template\nDESCRIPTION: This snippet demonstrates the usage of the math.Div function in Hugo templates. It divides 12 by 3 and then by 2, resulting in 2. The function can handle multiple divisors and returns a float if any of the numbers is a float.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Div.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ div 12 3 2 }} → 2\n```\n\n----------------------------------------\n\nTITLE: Visualizing Hugo's Content Structure and Page Kinds\nDESCRIPTION: Illustration of different page kinds in Hugo's content structure, showing which ones are considered regular pages (page kind) versus other types like section or home pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsPage.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── books/\n│   ├── book-1/\n│   │   └── index.md  <-- kind = page\n│   ├── book-2.md     <-- kind = page\n│   └── _index.md     <-- kind = section\n└── _index.md         <-- kind = home\n```\n\n----------------------------------------\n\nTITLE: Accessing Determinate Values in Hugo Templates\nDESCRIPTION: Shows how to trigger content rendering to access determinate scratch pad values set by shortcodes or render hooks.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/Store.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $noop := .Content }}\n{{ hugo.Store.Get \"mykey\" }}\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $noop := .WordCount }}\n{{ hugo.Store.Get \"mykey\" }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving BaseURL in Hugo Template\nDESCRIPTION: Demonstrates how to access the base URL within a Hugo template using the .Site.BaseURL method. This will output the configured base URL.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/BaseURL.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.BaseURL }} → https://example.org/docs/\n```\n\n----------------------------------------\n\nTITLE: Converting Radians to Degrees using math.ToDegrees in Hugo Templates\nDESCRIPTION: Demonstrates converting π/2 radians (approximately 1.5707963267948966) to 90 degrees using Hugo's math.ToDegrees function. This function takes a single numeric value in radians and returns the equivalent angle in degrees as a float64.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/ToDegrees.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.ToDegrees 1.5707963267948966 }} → 90\n```\n\n----------------------------------------\n\nTITLE: Using the YouTube Shortcode in Hugo Markdown\nDESCRIPTION: Basic syntax for embedding a YouTube video in Hugo content using the youtube shortcode with a video ID.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/youtube.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{</* youtube 0RKpf3rK57I */>}}\n```\n\n----------------------------------------\n\nTITLE: Defining Language Keys in Hugo Configuration\nDESCRIPTION: Shows how to set up language keys in Hugo, including default content language and weight for different languages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/languages.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'de'\n[languages.de]\n  weight = 1\n[languages.en-US]\n  weight = 2\n[languages.pt-BR]\n  weight = 3\n```\n\n----------------------------------------\n\nTITLE: RelURL Usage Without Leading Slash - Base URL Example 1\nDESCRIPTION: Demonstrates RelURL function behavior with baseURL='https://example.org/' when input does not begin with a slash. Shows various input patterns and their resulting relative URLs.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/RelURL.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ relURL \"\" }}                         → /\n{{ relURL \"articles\" }}                 → /articles\n{{ relURL \"style.css\" }}                → /style.css\n{{ relURL \"https://example.org\" }}      → https://example.org\n{{ relURL \"https://example.org/\" }}     → /\n{{ relURL \"https://www.example.org\" }}  → https://www.example.org\n{{ relURL \"https://www.example.org/\" }} → https://www.example.org/\n```\n\n----------------------------------------\n\nTITLE: Template Resource Execution in Base Template\nDESCRIPTION: Hugo template code that retrieves a CSS resource, executes it as a template with the current context, and includes it in the page with proper caching.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/ExecuteAsTemplate.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"css/template.css\" }}\n  {{ with resources.ExecuteAsTemplate \"css/main.css\" $ . }}\n    <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Alternative Pagination Navigation Using With Statements\nDESCRIPTION: Implements the same pagination navigation system using 'with' statements instead of HasNext/HasPrev methods. Provides identical functionality with a different template syntax approach.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/HasNext.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  <ul>\n    {{ with .First }}\n      <li><a href=\"{{ .URL }}\">First</a></li>\n    {{ end }}\n    {{ with .Prev }}\n      <li><a href=\"{{ .URL }}\">Previous</a></li>\n    {{ end }}\n    {{ with .Next }}\n      <li><a href=\"{{ .URL }}\">Next</a></li>\n    {{ end }}\n    {{ with .Last }}\n      <li><a href=\"{{ .URL }}\">Last</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Template - Get Unique ID\nDESCRIPTION: Template code to safely access the UniqueID property of a File object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_11\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .File }}\n  {{ .UniqueID }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Git Repository Setup for Automated SourceHut Deployment\nDESCRIPTION: Shell commands to create and configure a Git repository for a Hugo site that will be automatically deployed to SourceHut Pages. These commands initialize the repository, ignore the public directory, and push the code to SourceHut.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-sourcehut-pages.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n# initialize new git repository\ngit init\n\n# add /public directory to our .gitignore file\necho \"/public\" >> .gitignore\n\n# commit and push code to main branch\ngit add .\ngit commit -m \"Initial commit\"\ngit remote add origin https://git.sr.ht/~<YourUsername>/<YourUsername>.srht.site\ngit push -u origin main\n```\n\n----------------------------------------\n\nTITLE: Using RelLangURL with Leading Slash Inputs\nDESCRIPTION: Examples showing how relLangURL handles inputs that begin with a slash when the baseURL is set to 'https://example.org/', which produces URLs relative to the protocol and host.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/RelLangURL.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ relLangURL \"/\" }}          → /en/\n{{ relLangURL \"/articles\" }}  → /en/articles\n{{ relLangURL \"/style.css\" }} → /en/style.css\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Front Matter in Markdown\nDESCRIPTION: This snippet defines the front matter for a Hugo content file, specifying the title of the page as 'i18n'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/i18n.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: i18n\n---\n```\n\n----------------------------------------\n\nTITLE: Using debug.Timer to Measure Performance in Hugo Templates\nDESCRIPTION: Creates a timer named 'TestSqrt' to measure the execution time of a loop that calculates square roots. The timer starts when instantiated and stops when the Stop method is called.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/debug/Timer.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := debug.Timer \"TestSqrt\" }}\n{{ range seq 2000 }}\n  {{ $f := math.Sqrt . }}\n{{ end }}\n{{ $t.Stop }}\n```\n\n----------------------------------------\n\nTITLE: Testing Hugo Installation\nDESCRIPTION: Verifies the Hugo installation by displaying the version information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/usage.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nhugo version\n```\n\n----------------------------------------\n\nTITLE: Formatting a Number with Precision Using lang.FormatNumber in Hugo Templates\nDESCRIPTION: This example demonstrates how to use the lang.FormatNumber function to format a floating-point number with a specified precision of 2 decimal places. The function takes the precision as the first parameter and the number to format as the second parameter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/FormatNumber.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ 512.5032 | lang.FormatNumber 2 }} → 512.50\n```\n\n----------------------------------------\n\nTITLE: Basic Pagination Implementation in Hugo Template\nDESCRIPTION: Demonstrates basic pagination implementation in a Hugo list template. The code ranges through paginated pages and includes navigation links using an internal pagination template. This snippet shows how to display paginated content and add navigation controls.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Paginator.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n{{ template \"_internal/pagination.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Using include Shortcode in Hugo\nDESCRIPTION: Demonstrates how to use the include shortcode to include content from another page in Hugo documentation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_13\n\nLANGUAGE: text\nCODE:\n```\n{{%/* include \"_common/glob-patterns.md\" */%}}\n```\n\n----------------------------------------\n\nTITLE: HTML Output with RenderString Processing\nDESCRIPTION: The resulting HTML output after Hugo processes the shortcode with RenderString, showing properly rendered Markdown bold syntax.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Inner.md#2025-04-08_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-title\">Product design</div>\n  <div class=\"card-content\">\n    We produce the <strong>best</strong> widgets in the world.\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Defining URL Aliases in Hugo Front Matter (TOML)\nDESCRIPTION: Shows how to define URL aliases in a page's front matter using TOML format. Aliases are used to maintain old URLs when content is moved or reorganized.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Aliases.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'About'\naliases = ['/old-url','/really-old-url']\n```\n\n----------------------------------------\n\nTITLE: Basic Environment Variable Access in Hugo Templates\nDESCRIPTION: Examples of accessing HOME and USER environment variables in Hugo templates using the getenv function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/Getenv.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ getenv \"HOME\" }} → /home/victor\n{{ getenv \"USER\" }} → victor\n```\n\n----------------------------------------\n\nTITLE: Defining Shortcode Calls in Markdown Content\nDESCRIPTION: Example of calling the 'img' shortcode twice in a Markdown content file, which will later demonstrate how the Ordinal method can generate unique IDs for each instance.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Ordinal.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{{</* img src=\"images/a.jpg\" */>}}\n\n{{</* img src=\"images/b.jpg\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Creating Render Hook Template in Hugo\nDESCRIPTION: Shows a render hook template that adds a 'rel' attribute to external links, overriding the default Markdown to HTML conversion.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/types.md#2025-04-08_snippet_9\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{- $u := urls.Parse .Destination -}}\n<a href=\"{{ .Destination | safeURL }}\"\n  {{- with .Title }} title=\"{{ . }}\"{{ end -}}\n  {{- if $u.IsAbs }} rel=\"external\"{{ end -}}\n>\n  {{- with .Text }}{{ . }}{{ end -}}\n</a>\n{{- /* chomp trailing newline */ -}}\n```\n\n----------------------------------------\n\nTITLE: HTML Output from ByWeight Menu Rendering\nDESCRIPTION: The resulting HTML output when rendering menu entries sorted by the ByWeight method, showing the entries in order of increasing weight: Services (10), About (20), and Contact (30).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/ByWeight.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/services/\">Services</a></li>\n  <li><a href=\"/about/\">About</a></li>\n  <li><a href=\"/contact\">Contact</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Defining Headless Bundle Front Matter in Hugo\nDESCRIPTION: YAML front matter configuration for a headless bundle documentation page, specifying the title and reference path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/headless-bundle.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: headless bundle\nreference: /content-management/build-options/\n---\n```\n\n----------------------------------------\n\nTITLE: Accessing Custom Environment Variables in Hugo Templates\nDESCRIPTION: Example of retrieving custom environment variables within Hugo templates using the getenv function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/Getenv.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ getenv \"MY_VAR1\" }} → foo\n{{ getenv \"MY_VAR2\" }} → bar\n```\n\n----------------------------------------\n\nTITLE: HTML Output of TOML to JSON Conversion\nDESCRIPTION: This shows the HTML output generated by the previous transform.Remarshal example. The JSON special characters are HTML-escaped in the output, with quotes represented as &#34;.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Remarshal.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<pre>{\n   &#34;baseURL&#34;: &#34;https://example.org/&#34;,\n   &#34;languageCode&#34;: &#34;en-US&#34;,\n   &#34;title&#34;: &#34;ABC Widgets&#34;\n}</pre>\n```\n\n----------------------------------------\n\nTITLE: Setting Source Highlighter for AsciiDoc\nDESCRIPTION: TOML configuration snippet showing how to enable syntax highlighting in AsciiDoc by setting the source-highlighter attribute to 'rouge'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/markup.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[markup.asciidocExt.attributes]\nsource-highlighter = 'rouge'\n```\n\n----------------------------------------\n\nTITLE: Configuring Permalinks for Posts and Tutorials\nDESCRIPTION: Shows how to configure permalinks for posts and tutorials sections, including date-based hierarchy for posts.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/permalinks.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[permalinks.page]\nposts = '/articles/:year/:month/:slug/'\ntutorials = '/training/:slug/'\n[permalinks.section]\nposts = '/articles/'\ntutorials = '/training/'\n```\n\n----------------------------------------\n\nTITLE: Listing Resource Media Type Suffixes in Hugo\nDESCRIPTION: Shows how to retrieve all possible file suffixes for a resource's media type using MediaType.Suffixes. Returns a slice of valid file extensions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/MediaType.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ .MediaType.Suffixes }} → [jpg jpeg jpe jif jfif]\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: RelURL Usage Without Leading Slash - Base URL Example 2\nDESCRIPTION: Demonstrates RelURL function behavior with baseURL='https://example.org/docs/' when input does not begin with a slash. Shows various input patterns and their resulting relative URLs.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/RelURL.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ relURL \"\" }}                           → /docs/\n{{ relURL \"articles\" }}                   → /docs/articles\n{{ relURL \"style.css\" }}                  → /docs/style.css\n{{ relURL \"https://example.org\" }}        → https://example.org\n{{ relURL \"https://example.org/\" }}       → https://example.org/\n{{ relURL \"https://example.org/docs\" }}   → https://example.org/docs\n{{ relURL \"https://example.org/docs/\" }}  → /docs\n{{ relURL \"https://www.example.org\" }}    → https://www.example.org\n{{ relURL \"https://www.example.org/\" }}   → https://www.example.org/\n```\n\n----------------------------------------\n\nTITLE: Joining URL Path Elements in Go\nDESCRIPTION: Shows how to use the path.Join function to combine multiple URL path elements. This function handles normalization of separators and relative path components.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/_index.md#2025-04-08_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{ $url := \"https://example.org\" }}\n{{ $path := \"blog/.././news\" }}\n{{ path.Join $url $path }}\n\n<!-- Result: https://example.org/news -->\n```\n\n----------------------------------------\n\nTITLE: Unescaping HTML Entities with transform.HTMLUnescape in Go HTML Template\nDESCRIPTION: Demonstrates the usage of transform.HTMLUnescape function to convert HTML entities to their corresponding characters. It shows examples of unescaping ampersand and greater-than symbols.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/HTMLUnescape.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ htmlUnescape \"Lilo &amp; Stitch\" }} → Lilo & Stitch\n{{ htmlUnescape \"7 &gt; 6\" }} → 7 > 6\n```\n\n----------------------------------------\n\nTITLE: Using Deprecated Shortcode Block in Hugo\nDESCRIPTION: Demonstrates the use of the deprecated-in shortcode to indicate that PAGE.Scratch is deprecated in Hugo v0.138.0 and has been aliased to PAGE.Store.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Scratch.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< deprecated-in 0.138.0 >}}\nUse the [`PAGE.Store`] method instead.\n\nThis is a soft deprecation. This method will be removed in a future release, but the removal date has not been established. Although Hugo will not emit a warning if you continue to use this method, you should begin using `PAGE.Store` as soon as possible.\n\nBeginning with v0.138.0 the `PAGE.Scratch` method is aliased to `PAGE.Store`.\n\n[`PAGE.Store`]: /methods/page/store/\n{{< /deprecated-in >}}\n```\n\n----------------------------------------\n\nTITLE: Capturing Overlay Image as Resource in Hugo\nDESCRIPTION: This snippet shows how to capture an overlay image as a resource in Hugo. It attempts to get the image from a specified path and assigns it to a variable, with error handling if the resource is not found.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Overlay.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $overlay := \"\" }}\n{{ $path := \"images/logo.png\" }}\n{{ with resources.Get $path }}\n  {{ $overlay = . }}\n{{ else }}\n  {{ errorf \"Unable to get resource %q\" $path }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using Param Method in Hugo Templates\nDESCRIPTION: Example of using the Param method in a Hugo template to conditionally display table of contents based on parameter value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Param.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if .Param \"display_toc\" }}\n  {{ .TableOfContents }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Methods with Implied Context in Hugo Templates\nDESCRIPTION: Demonstrates implied context when accessing page methods in Hugo templates. Since the context passed to most templates is a Page object, the Page prefix can be omitted when accessing its methods.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_15\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Title }} → My Site Title\n{{ .Title }} → My Page Title\n```\n\n----------------------------------------\n\nTITLE: Sorting Hugo Pages by Content Length in Ascending Order\nDESCRIPTION: This snippet demonstrates how to sort Hugo pages by content length in ascending order using the ByLength function. It iterates through the sorted pages and displays each page's title as a link.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByLength.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByLength }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Hugo Build\nDESCRIPTION: Shell commands demonstrating how to set environment variables when building a Hugo site, showing both inline and export methods.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/Getenv.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nMY_VAR1=foo MY_VAR2=bar hugo\n\nOR\n\nexport MY_VAR1=foo\nexport MY_VAR2=bar\nhugo\n```\n\n----------------------------------------\n\nTITLE: Using math.Atan2 in Hugo Templates\nDESCRIPTION: Demonstrates how to calculate the arctangent of a coordinate pair (1, 2) in radians using the math.Atan2 function in Hugo templates. The function accepts two values and returns the angle in radians, properly handling quadrant determination.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Atan2.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Atan2 1 2 }} → 0.4636476090008061\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Page Front Matter for Glossary\nDESCRIPTION: This YAML front matter configures the settings for a glossary page in Hugo documentation. It specifies the title, description, build parameters, layout, and aliases for the page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Glossary\ndescription: Terms commonly used throughout the documentation.\ncategories: []\nkeywords: []\nbuild:\n  render: always\n  list: always\ncascade:\n  build:\n    render: never\n    list: local\nlayout: single\nparams:\n  hide_in_this_section: true\naliases: [/getting-started/glossary/]\n---\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output from Conditional Transform\nDESCRIPTION: Shows the HTML output from the conditional title transformation, including the whitespace that Hugo preserves when using standard template delimiters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n  \n  \n    <h2>my page title</h2>\n  \n```\n\n----------------------------------------\n\nTITLE: Defining Sanity Post Type Schema for Hugo Integration\nDESCRIPTION: This snippet demonstrates how to define a post type in Sanity with fields that support rich text content (Portable Text) that can be converted to Markdown in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/PortableText.md#2025-04-08_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport {defineField, defineType} from 'sanity'\n\nexport const postType = defineType({\n  name: 'post',\n  title: 'Post',\n  type: 'document',\n  fields: [\n    defineField({\n      name: 'title',\n      type: 'string',\n      validation: (rule) => rule.required(),\n    }),\n    defineField({\n      name: 'summary',\n      type: 'string',\n      validation: (rule) => rule.required(),\n    }),\n    defineField({\n      name: 'slug',\n      type: 'slug',\n      options: {source: 'title'},\n      validation: (rule) => rule.required(),\n    }),\n    defineField({\n      name: 'publishedAt',\n      type: 'datetime',\n      initialValue: () => new Date().toISOString(),\n      validation: (rule) => rule.required(),\n    }),\n    defineField({\n      name: 'body',\n      type: 'array',\n      of: [\n        {\n          type: 'block',\n        },\n        {\n          type: 'image'\n        },\n        {\n          type: 'code',\n          options: {\n            language: 'css',\n            languageAlternatives: [\n              {title: 'HTML', value: 'html'},\n              {title: 'CSS', value: 'css'},\n            ],\n            withFilename: true,\n          },\n        },\n      ],\n    }),\n  ],\n})\n```\n\n----------------------------------------\n\nTITLE: Basic GoAT Diagram Markdown Example\nDESCRIPTION: Example of using GoAT diagram syntax in a Markdown code block to create a simple diagram.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/diagrams/Goat.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n```goat\n.---.     .-.       .-.       .-.     .---.  \n| A +--->| 1 |<--->| 2 |<--->| 3 |<---+ B |\n'---'     '-'       '+'       '+'     '---'\n```\n```\n\n----------------------------------------\n\nTITLE: Creating Directory Structure for Book Reviews\nDESCRIPTION: Example directory structure for organizing book review content in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/related-content.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n└── book-reviews/\n    ├── book-review-1.md\n    ├── book-review-2.md\n    ├── book-review-3.md\n    ├── book-review-4.md\n    └── book-review-5.md\n```\n\n----------------------------------------\n\nTITLE: Converting Time to Unix Nanoseconds in Hugo Templates\nDESCRIPTION: Shows how to convert a time string to a time.Time object and get its Unix nanosecond timestamp. The example demonstrates parsing an ISO-8601 timestamp and converting it to nanoseconds since January 1, 1970 UTC.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/UnixNano.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.UnixNano }} → 1674891898000000000\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Media Type in Hugo\nDESCRIPTION: Configuration for creating a custom media type for Atom feeds with XML suffix.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/output-formats.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[mediaTypes.'application/atom+xml']\nsuffixes = ['atom']\n```\n\n----------------------------------------\n\nTITLE: Getting Primary File Suffix for Resource in Hugo\nDESCRIPTION: Demonstrates how to get the primary file suffix for a resource's media type using MediaType.FirstSuffix.Suffix. Returns the preferred file extension.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/MediaType.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ .MediaType.FirstSuffix.Suffix }} → jpg\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Converting Duration to Hours in Hugo Templates\nDESCRIPTION: Demonstrates how to use the Hours method on a time.Duration object to get the duration as a floating point number of hours. The example first parses a duration string and then calls the Hours method on the resulting duration object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/duration/Hours.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $d = time.ParseDuration \"3.5h2.5m1.5s\" }}\n{{ $d.Hours }} → 3.5420833333333333\n```\n\n----------------------------------------\n\nTITLE: Formatting Date Strings in Hugo Templates\nDESCRIPTION: Shows how to format a parsable string representation of a date using the time.Format function. This example takes a simple date string and converts it to a more verbose format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/time/Format.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := \"15 Oct 2023\" }}\n{{ time.Format \"January 2, 2006\" $t }} → October 15, 2023\n```\n\n----------------------------------------\n\nTITLE: Expanding Environment Variables in Hugo\nDESCRIPTION: This snippet shows how to use the os.ExpandEnv function in Hugo to expand environment variables in a string. It demonstrates expanding the 'HOME' variable within a path string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/_index.md#2025-04-08_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{ os.ExpandEnv \"$HOME/hugo/sites\" }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Documentation Page Frontmatter in YAML\nDESCRIPTION: YAML frontmatter block that configures the main documentation landing page settings including title, link title, description and layout type.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/documentation.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Hugo Documentation\nlinkTitle: Docs\ndescription: Hugo is the world's fastest static website engine. It's written in Go (aka Golang) and developed by bep, spf13 and friends.\nlayout: list\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Module Configuration with Environment Variables in Bash\nDESCRIPTION: Example of setting Hugo module configuration options using environment variables instead of configuration files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/module.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nexport HUGO_MODULE_PROXY=\"https://proxy.example.org\"\nexport HUGO_MODULE_REPLACEMENTS=\"github.com/bep/my-theme -> ../..\"\nexport HUGO_MODULE_WORKSPACE=\"/my/hugo.work\"\n```\n\n----------------------------------------\n\nTITLE: Declaring URL Content as Safe in Hugo Templates\nDESCRIPTION: This example demonstrates the use of safeURL function to mark a string as a safe URL, allowing it to be used in href or src attributes without escaping in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/_index.md#2025-04-08_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{ $url := \"https://example.com\" }}\n<a href=\"{{ $url | safeURL }}\">Link</a>\n```\n\n----------------------------------------\n\nTITLE: Using Emoji Shortcodes in Hugo Content\nDESCRIPTION: Demonstrates how to use emoji shortcodes in Hugo content files. The example shows the heart emoji shortcode syntax which will be converted to a heart emoticon when enableEmoji is set to true in the site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Emojify.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nI :heart: Hugo!\n```\n\n----------------------------------------\n\nTITLE: Accessing Hyphenated Parameters Using Index Function\nDESCRIPTION: Example of accessing parameters with hyphens in their keys using the index function in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Params.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ index .Params \"key-with-hyphens\" }} → must use index function\n```\n\n----------------------------------------\n\nTITLE: Installing Latest Hugo Release\nDESCRIPTION: Command to build and install the latest released version of Hugo extended edition.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/development.md#2025-04-08_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nCGO_ENABLED=1 go install -tags extended github.com/gohugoio/hugo@latest\n```\n\n----------------------------------------\n\nTITLE: Humanizing Strings with inflect.Humanize in Hugo Templates\nDESCRIPTION: Demonstrates the use of the humanize function to convert hyphenated and camelCase strings into human-readable format with capitalized first letters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/inflect/Humanize.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ humanize \"my-first-post\" }} → My first post\n{{ humanize \"myCamelPost\" }} → My camel post\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Hugo List Future Command\nDESCRIPTION: Options inherited from parent commands that can be used with the 'hugo list future' command, including configuration, environment, and output options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_future.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Output of os.ReadFile Function in Hugo\nDESCRIPTION: The raw, uninterpreted output produced by the os.ReadFile function when reading a markdown file. The content is returned exactly as it appears in the file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/ReadFile.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nThis is **bold** text.\n```\n\n----------------------------------------\n\nTITLE: Calculating Sine in Hugo Templates\nDESCRIPTION: Demonstrates the usage of the math.Sin function in Hugo templating to calculate the sine of 1 radian. The function takes a float64 value as input and returns the sine as a float64.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Sin.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Sin 1 }} → 0.8414709848078965\n```\n\n----------------------------------------\n\nTITLE: Generated HTML Output\nDESCRIPTION: HTML output generated from the Markdown input showing the structure to be matched.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/FindRESubmatch.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"https://example.org\">Example</a></li>\n  <li><a href=\"https://gohugo.io\">Hugo</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Setting Map Values in Hugo Store\nDESCRIPTION: Shows how to set values in a map using SetInMap method with key and mapKey.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/store-methods.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Store.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ .Store.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n{{ .Store.Get \"greetings\" }} → map[english:Hello french:Bonjour]\n```\n\n----------------------------------------\n\nTITLE: Configuring EXIF Data Extraction in Hugo (TOML)\nDESCRIPTION: This snippet demonstrates the default configuration for extracting EXIF data from images in Hugo. It includes options to include or exclude specific fields, and to disable date and GPS data extraction.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/imaging.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[imaging.exif]\nincludeFields = \"\"\nexcludeFields = \"\"\ndisableDate = false\ndisableLatLong = false\n```\n\n----------------------------------------\n\nTITLE: Configuring EXIF Data Extraction in Hugo (TOML)\nDESCRIPTION: This snippet demonstrates the default configuration for extracting EXIF data from images in Hugo. It includes options to include or exclude specific fields, and to disable date and GPS data extraction.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/imaging.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[imaging.exif]\nincludeFields = \"\"\nexcludeFields = \"\"\ndisableDate = false\ndisableLatLong = false\n```\n\n----------------------------------------\n\nTITLE: Default Pagination Configuration in Hugo\nDESCRIPTION: This snippet shows the default configuration for pagination in Hugo. It includes options for disabling aliases, setting pager size, and defining the URL path segment for pagination.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/pagination.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndisableAliases: false\npagerSize: 10\npath: \"page\"\n```\n\n----------------------------------------\n\nTITLE: Rendering Specific Segments in Hugo CLI\nDESCRIPTION: Shows how to use the Hugo CLI to render specific segments. It includes commands for rendering a single segment and multiple segments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/segments.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhugo --renderSegments segment1\n```\n\nLANGUAGE: bash\nCODE:\n```\nhugo --renderSegments segment1,segment2\n```\n\n----------------------------------------\n\nTITLE: Direct Resource Publishing\nDESCRIPTION: Shows the direct usage of the Publish method on a resource variable for publishing without return value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Publish.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $resource.Publish }}\n```\n\n----------------------------------------\n\nTITLE: Using path.Join for Path Manipulation in Hugo Templates\nDESCRIPTION: Demonstrates various examples of using path.Join to combine path elements in Hugo templates. The function joins multiple path segments with forward slashes, handles trailing slashes, dot notation for current directory, and parent directory references (..). It also cleans and normalizes the resulting path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/path/Join.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ path.Join \"partial\" \"news.html\" }} → partial/news.html\n{{ path.Join \"partial/\" \"news.html\" }} → partial/news.html\n{{ path.Join \"foo/bar\" \"baz\" }} → foo/bar/baz\n{{ path.Join \"foo\" \"bar\" \"baz\" }} → foo/bar/baz\n{{ path.Join \"foo\" \"\" \"baz\" }} → foo/baz\n{{ path.Join \"foo\" \".\" \"baz\" }} → foo/baz\n{{ path.Join \"foo\" \"..\" \"baz\" }} → baz\n{{ path.Join \"/..\", \"foo\" \"..\" \"baz\" }} → baz\n```\n\n----------------------------------------\n\nTITLE: Rendering Captured URLs\nDESCRIPTION: Template code to iterate and display the captured href attributes from the matches.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/FindRESubmatch.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range $matches }}\n  {{ index . 1 }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Example Directory Structure for Hugo Project\nDESCRIPTION: Shows a sample directory structure used to demonstrate os.FileExists functionality\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/FileExists.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── about.md\n├── contact.md\n└── news/\n    ├── article-1.md\n    └── article-2.md\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Language in Ascending Order in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to iterate through all site pages sorted by language in ascending order, displaying a link to each page with its title.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByLanguage.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Site.AllPages.ByLanguage }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Build Command Options\nDESCRIPTION: Complete list of available flags and options for the 'hugo build' command. These options control build behavior, including content selection, output paths, rendering settings, and development aids.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_build.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -b, --baseURL string             hostname (and path) to the root, e.g. https://spf13.com/\n  -D, --buildDrafts                include content marked as draft\n  -E, --buildExpired               include expired content\n  -F, --buildFuture                include content with publishdate in the future\n      --cacheDir string            filesystem path to cache directory\n      --cleanDestinationDir        remove files from destination not found in static directories\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -c, --contentDir string          filesystem path to content directory\n  -d, --destination string         filesystem path to write files to\n      --disableKinds strings       disable different kind of pages (home, RSS etc.)\n      --enableGitInfo              add Git revision, date, author, and CODEOWNERS info to the pages\n  -e, --environment string         build environment\n      --forceSyncStatic            copy all files when static is changed.\n      --gc                         enable to run some cleanup tasks (remove unused cache files) after the build\n  -h, --help                       help for build\n      --ignoreCache                ignores the cache directory\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n  -l, --layoutDir string           filesystem path to layout directory\n      --logLevel string            log level (debug|info|warn|error)\n      --minify                     minify any supported output format (HTML, XML etc.)\n      --noBuildLock                don't create .hugo_build.lock file\n      --noChmod                    don't sync permission mode of files\n      --noTimes                    don't sync modification time of files\n      --panicOnWarning             panic on first WARNING log\n      --poll string                set this to a poll interval, e.g --poll 700ms, to use a poll based approach to watch for file system changes\n      --printI18nWarnings          print missing translations\n      --printMemoryUsage           print memory usage to screen at intervals\n      --printPathWarnings          print warnings on duplicate target paths etc.\n      --printUnusedTemplates       print warnings on unused templates.\n      --quiet                      build in quiet mode\n      --renderSegments strings     named segments to render (configured in the segments config)\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --templateMetrics            display metrics about template executions\n      --templateMetricsHints       calculate some improvement hints when combined with --templateMetrics\n  -t, --theme strings              themes to use (located in /themes/THEMENAME/)\n      --themesDir string           filesystem path to themes directory\n      --trace file                 write trace to file (not useful in general)\n  -w, --watch                      watch filesystem for changes and recreate as needed\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output of Ancestors Function\nDESCRIPTION: This HTML snippet shows the rendered output of the Ancestors function for the November 2023 auctions page, displaying links to parent pages in order from closest to furthest.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Ancestors.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/auctions/2023-11/\">Auctions in November 2023</a>\n<a href=\"/auctions/\">Auctions</a>\n<a href=\"/\">Home</a>\n```\n\n----------------------------------------\n\nTITLE: Unmarshaling Remote Resource in Hugo\nDESCRIPTION: Example of unmarshaling JSON data from a remote URL using resources.GetRemote.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Unmarshal.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := dict }}\n{{ $url := \"https://example.org/books.json\" }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ errorf \"%s\" . }}\n  {{ else with .Value }}\n    {{ $data = . | transform.Unmarshal }}\n  {{ else }}\n    {{ errorf \"Unable to get remote resource %q\" $url }}\n  {{ end }}\n{{ end }}\n\n{{ range where $data \"author\" \"Victor Hugo\" }}\n  {{ .title }} → Les Misérables\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Standard Parameters in Hugo Templates\nDESCRIPTION: Examples of accessing custom parameters in Hugo templates using direct dot notation for valid identifiers.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Params.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Params.display_related }} → true\n{{ .Params.author.email }} → jsmith@example.org\n{{ .Params.author.name }} → John Smith\n```\n\n----------------------------------------\n\nTITLE: Calling Shortcode with Named Arguments in Hugo Markdown\nDESCRIPTION: Illustrates how to call a shortcode using named arguments in a Hugo Markdown file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Get.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n{{</* myshortcode greeting=\"Hello\" firstName=\"world\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Building a Language Navigator for All Available Languages in Hugo\nDESCRIPTION: A Go HTML template that creates a navigation menu listing all available languages on the site, using the home page's translations.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n{{ range $.Site.Home.AllTranslations }}\n<li><a href=\"{{ .RelPermalink }}\">{{ .Language.LanguageName }}</a></li>\n{{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Checking File Existence in Hugo\nDESCRIPTION: This snippet illustrates how to use the os.FileExists function in Hugo to check if a file exists at a given path. It shows an example of checking for the existence of 'README.md'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/_index.md#2025-04-08_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ if os.FileExists \"README.md\" }}\n  README.md exists\n{{ else }}\n  README.md does not exist\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Converting UTC Time to Local Time in Hugo Templates\nDESCRIPTION: Demonstrates how to convert a UTC timestamp string to local time using the time.AsTime function followed by the Local() method. The example shows conversion from UTC to PST timezone.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Local.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-28T07:44:58+00:00\" }}\n{{ $t.Local }} → 2023-01-27 23:44:58 -0800 PST\n```\n\n----------------------------------------\n\nTITLE: Displaying Go's Reference Time Format\nDESCRIPTION: Shows the standard reference time format used in Go for creating custom time layouts.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/time-layout-string.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nMon Jan 2 15:04:05 MST 2006\n```\n\n----------------------------------------\n\nTITLE: Creating a New Hugo Theme\nDESCRIPTION: Command to generate a new Hugo theme skeleton with a default directory structure.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/directory-structure.md#2025-04-08_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nhugo new theme my-theme\n```\n\n----------------------------------------\n\nTITLE: Modifying Output Format Weights in Hugo Config\nDESCRIPTION: Configuration example showing how to modify the weight property of JSON and HTML output formats to control rendering priority.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/output-formats.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[outputFormats.json]\nweight = 1\n[outputFormats.html]\nweight = 2\n```\n\n----------------------------------------\n\nTITLE: Retrieving an Ordered Taxonomy with ByCount in Hugo Templates\nDESCRIPTION: Gets an ordered taxonomy sorted by the number of pages associated with each term. The ByCount method transforms a Taxonomy map into an ordered slice.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/ByCount.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $taxonomyObject.ByCount }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Nested Menu Structure in Hugo\nDESCRIPTION: TOML configuration for creating a hierarchical menu structure with parent and child relationships. Defines a Products menu entry with two child products.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/HasChildren.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\nname = 'Products'\npageRef = '/product'\nweight = 10\n\n[[menus.main]]\nname = 'Product 1'\npageRef = '/products/product-1'\nparent = 'Products'\nweight = 1\n\n[[menus.main]]\nname = 'Product 2'\npageRef = '/products/product-2'\nparent = 'Products'\nweight = 2\n```\n\n----------------------------------------\n\nTITLE: Hugo Content Directory Structure\nDESCRIPTION: This snippet illustrates the directory structure for a multilingual Hugo site, showing the organization of content files for different languages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/TranslationKey.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── de/\n│   ├── books/\n│   │   ├── buch-1.md\n│   │   └── book-2.md\n│   └── _index.md\n├── en/\n│   ├── books/\n│   │   ├── book-1.md\n│   │   └── book-2.md\n│   └── _index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Handling HTTP Request Errors with Err Method in Hugo Templates\nDESCRIPTION: This snippet demonstrates capturing and displaying errors from the resources.GetRemote function when making HTTP requests to nonexistent domains. It uses the errorf function to fail the build when an error occurs.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Err.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://broken-example.org/images/a.jpg\" }}\n{{ with resources.GetRemote $url }}\n  {{ with .Err }}\n    {{ errorf \"%s\" . }}\n  {{ else }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ else }}\n  {{ errorf \"Unable to get remote resource %q\" $url }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Random Float Generation (0-4.9) in Hugo\nDESCRIPTION: Generates a random float with one decimal place in the interval [0, 4.9] using multiplication, floor, and division\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Rand.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ div (math.Rand | mul 50 | math.Floor) 10 }}\n```\n\n----------------------------------------\n\nTITLE: HTML Output with Safe Attributes\nDESCRIPTION: The rendered HTML output when using safeHTMLAttr, showing how special characters like + are preserved in their original form.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/HTMLAttr.md#2025-04-08_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<time datetime=\"2024-05-26T07:19:55+02:00\">26 May 2024</time>\n```\n\n----------------------------------------\n\nTITLE: Generating SHA1 Hash in Hugo Template\nDESCRIPTION: Demonstrates how to generate a SHA1 hash of a string input using Hugo's crypto.SHA1/sha1 function. The function takes a string input and returns a 40-character hexadecimal string representing the SHA1 hash.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/crypto/SHA1.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ sha1 \"Hello world\" }} → 7b502c3a1f48c8609ae212cdfb639dee39673f5e\n```\n\n----------------------------------------\n\nTITLE: Path Parameter for Hugo URL Functions\nDESCRIPTION: Defines the path parameter which specifies the target page location. Paths without a leading slash are resolved relative to the current page first, then to the rest of the site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/ref-and-relref-options.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\npath\n: (`string`) The path to the target page. Paths without a leading slash (`/`) are resolved first relative to the current page, and then relative to the rest of the site.\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Definition in Hugo\nDESCRIPTION: Example of defining environment variables for JavaScript builds\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/functions/js/options.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $defines := dict \"process.env.NODE_ENV\" `\"development\"` }}\n```\n\n----------------------------------------\n\nTITLE: Setting a Custom Slug in Hugo Front Matter\nDESCRIPTION: Example of defining a custom URL slug in a Hugo page's front matter. This overrides the default URL that would be generated from the filename.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Slug.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle = 'How to make spicy tuna hand rolls'\nslug = 'sushi'\n```\n\n----------------------------------------\n\nTITLE: Local JSON Data Access\nDESCRIPTION: Demonstrates how to access local JSON data using getJSON function with different path formats.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetJSON.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := getJSON \"other-files/books.json\" }}\n{{ $data := getJSON \"other-files/\" \"books.json\" }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Content File Tree Example\nDESCRIPTION: Illustrates a simple file tree structure in a Hugo project showing how content files are organized in the filesystem.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Path.md#2025-04-08_snippet_3\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n└── s1/\n    ├── p1/\n    │   └── index.md \n    └── p2.md\n```\n\n----------------------------------------\n\nTITLE: Demonstrating File Structure for Potential Page Collision in Hugo\nDESCRIPTION: This code snippet shows a file structure where a page collision might occur in Hugo. It includes a content adapter and a markdown file with the same name, potentially leading to an indeterminate published page content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/content-adapters.md#2025-04-08_snippet_5\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n└── books/\n    ├── _content.gotmpl  <-- content adapter\n    ├── _index.md\n    └── the-hunchback-of-notre-dame.md\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML with Markdown Attributes in Hugo\nDESCRIPTION: Shows the HTML output when rendering a paragraph with Markdown attributes in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/markdown-attributes.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p class=\"foo bar\" id=\"baz\">This is a paragraph.</p>\n```\n\n----------------------------------------\n\nTITLE: Hugo Front Matter Configuration for DisqusShortname Documentation\nDESCRIPTION: YAML front matter defining metadata and configuration for the DisqusShortname documentation page, including return type, method signature, and expiry date.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/DisqusShortname.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: DisqusShortname\ndescription: Returns the Disqus shortname as defined in the site configuration.\ncategories: []\nkeywords: []\nparams:\n  functions_and_methods:\n    returnType: string\n    signatures: [SITE.DisqusShortname]\nexpiryDate: 2025-10-30 # deprecated 2023-10-30 in v0.120.0\n---\n```\n\n----------------------------------------\n\nTITLE: Safe CSS Declaration in Hugo Template\nDESCRIPTION: Shows how to use the safe.CSS function (aliased as safeCSS) to declare a string as safe CSS content, allowing it to be rendered in the HTML output.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/CSS.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $style := \"color: red;\" }}\n<p style=\"{{ $style | safeCSS }}\">foo</p>\n```\n\nLANGUAGE: html\nCODE:\n```\n<p style=\"color: red;\">foo</p>\n```\n\n----------------------------------------\n\nTITLE: Using eturl Shortcode for Embedded Template URLs\nDESCRIPTION: Demonstrates how to use the embedded template URL (eturl) shortcode to insert an absolute URL to the source code for an embedded template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_11\n\nLANGUAGE: text\nCODE:\n```\nThis is a link to the [embedded alias template].\n\n[embedded alias template]: {{%/* eturl alias */%}}\n```\n\n----------------------------------------\n\nTITLE: Additional Nil Comparison Example\nDESCRIPTION: Shows how to filter pages where a specific parameter is not present in the front matter by comparing with nil.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_15\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where .Site.RegularPages \"Params.color\" \"eq\" nil }}\n```\n\n----------------------------------------\n\nTITLE: Defining Default Deployment Configuration in Hugo\nDESCRIPTION: This snippet shows the default configuration for Hugo's deployment feature, including options for confirmation, dry run, force upload, CDN invalidation, and more.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/deployment.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nconfirm = false\ndryRun = false\nforce = false\ninvalidateCDN = true\nmaxDeletes = 256\nmatchers = []\norder = []\ntarget = \"\"\ntargets = []\nworkers = 10\n```\n\n----------------------------------------\n\nTITLE: Hugo Site Directory Structure\nDESCRIPTION: An example of the directory structure for a published Hugo site showing taxonomy folders and content pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/URLize.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\npublic/\n├── authors/\n│   ├── victor-hugo/\n│   │   └── index.html\n│   └── index.html\n├── books/\n│   ├── les-miserables/\n│   │   └── index.html\n│   └── index.html\n└── index.html\n```\n\n----------------------------------------\n\nTITLE: Featured Content Taxonomy Menu\nDESCRIPTION: Template for creating a sidebar menu of featured content using taxonomies.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Taxonomies.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n<section id=\"menu\">\n  <ul>\n    {{ range $term, $taxonomy := .Site.Taxonomies.featured }}\n      <li>{{ $term }}</li>\n      <ul>\n        {{ range $taxonomy.Pages }}\n          <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n        {{ end }}\n      </ul>\n    {{ end }}\n  </ul>\n</section>\n```\n\n----------------------------------------\n\nTITLE: Setting Map Values with Site.Store\nDESCRIPTION: Demonstrates how to create and populate a map using the SetInMap method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Store.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ site.Store.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ site.Store.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n{{ site.Store.Get \"greetings\" }} → map[english:Hello french:Bonjour]\n```\n\n----------------------------------------\n\nTITLE: Converting Duration to Seconds in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to parse a duration string using time.ParseDuration and then convert it to seconds using the Seconds method. The example parses a duration of 3.5 hours, 2.5 minutes, and 1.5 seconds, then returns the total time in seconds as a floating point number.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/duration/Seconds.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $d = time.ParseDuration \"3.5h2.5m1.5s\" }}\n{{ $d.Seconds }} → 12751.5\n```\n\n----------------------------------------\n\nTITLE: Escaping URL Parameters with urlquery in Hugo Templates\nDESCRIPTION: Example showing how to use the urlquery function to escape a URL for use in a query parameter. The function takes multiple string values and returns them escaped and concatenated.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/urlquery.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $u := urlquery \"https://\" \"example.com\" | safeURL }}\n<a href=\"https://example.org?url={{ $u }}\">Link</a>\n```\n\n----------------------------------------\n\nTITLE: Using safe.JS Function in Hugo Templates\nDESCRIPTION: Demonstrates the usage of safe.JS function to declare a string as a safe JavaScript expression. Without safe.JS, the string is treated as a literal, while with safe.JS, it's treated as a JavaScript expression.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/JS.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $js := \"x + y\" }}\n<script>const a = {{ $js }}</script>\n```\n\nLANGUAGE: html\nCODE:\n```\n<script>const a = \"x + y\"</script>\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $js := \"x + y\" }}\n<script>const a = {{ $js | safeJS }}</script>\n```\n\nLANGUAGE: html\nCODE:\n```\n<script>const a = x + y</script>\n```\n\n----------------------------------------\n\nTITLE: Converting Octal Values to Strings in Hugo Templates\nDESCRIPTION: Examples showing how the string function handles octal (base 8) values in both traditional and modern notation. When given octal numbers, it converts to decimal strings; when given strings of octal notation, it preserves the original format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToString.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ string 011 }} → 9 (string)\n{{ string \"011\" }} → 011 (string)\n\n{{ string 0o11 }} → 9 (string)\n{{ string \"0o11\" }} → 0o11 (string)\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Hugo Module Verification\nDESCRIPTION: Options inherited from parent commands for the 'hugo mod verify' command, including configuration settings, build environment, and logging options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_verify.md#2025-04-08_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Setting up Front Matter for Hugo Glossary Terms in YAML\nDESCRIPTION: YAML front matter block that configures a glossary term page in Hugo. It includes a dynamic title that replaces hyphens in the content base name with spaces, and a params section with a reference field for linking to detailed information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/archetypes/glossary.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: {{ replace .File.ContentBaseName \"-\" \" \" }}\nparams:\n  reference: \n---\n```\n\n----------------------------------------\n\nTITLE: Global Resource Implementation\nDESCRIPTION: Shows how to access JSON data as a global resource using resources.Get and transform.Unmarshal.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetJSON.md#2025-04-08_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nmy-project/\n└── assets/\n    └── data/\n        └── books.json\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := dict }}\n{{ $p := \"data/books.json\" }}\n{{ with resources.Get $p }}\n  {{ $data = . | transform.Unmarshal }}\n{{ else }}\n  {{ errorf \"Unable to get resource %q\" $p }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Matched Resources in Hugo Templates\nDESCRIPTION: This snippet shows how to use the Match method to find all resources matching a glob pattern and iterate over them to display images.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Resources.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Resources.Match \"images/*.jpg\" }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Site with Emoji Support in Menu Items\nDESCRIPTION: Configuration for enabling emoji shortcodes in Hugo and adding them to main menu items. The configuration enables global emoji support and defines menu entries with pre and post emoji shortcodes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/menu-entries/pre-and-post.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nenableEmoji = true\n\n[[menus.main]]\nname = 'About'\npageRef = '/about'\npost = ':point_left:'\npre = ':point_right:'\nweight = 10\n\n[[menus.main]]\nname = 'Contact'\npageRef = '/contact'\npost = ':arrow_left:'\npre = ':arrow_right:'\nweight = 20\n```\n\n----------------------------------------\n\nTITLE: Customized HTML Output With Render Hooks\nDESCRIPTION: Example of how the HTML output can be modified by implementing render hooks, adding a rel attribute to links and dimensions to images.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/introduction.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<p><a href=\"https://gohugo.io\" rel=\"external\">Hugo</a></p>\n<p><img alt=\"kitten\" src=\"kitten.jpg\" width=\"600\" height=\"400\"></p>\n```\n\n----------------------------------------\n\nTITLE: Using HTML Attributes Without Safe Declaration in Hugo Templates\nDESCRIPTION: Example of using a datetime attribute in an HTML time element without declaring it as safe. Hugo automatically sanitizes the attribute value, escaping special characters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/HTMLAttr.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Date }}\n  {{ $humanDate := time.Format \"2 Jan 2006\" . }}\n  {{ $machineDate := time.Format \"2006-01-02T15:04:05-07:00\" . }}\n  <time datetime=\"{{ $machineDate }}\">{{ $humanDate }}</time>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Inspecting Simple Values with printf in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the printf function to inspect simple data structures in Hugo templates. It displays both the value and its data type.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/inspection.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $value := 42 }}\n{{ printf \"%[1]v (%[1]T)\" $value }} → 42 (int)\n```\n\n----------------------------------------\n\nTITLE: Rendered Output of Duration Calculation\nDESCRIPTION: This snippet shows the rendered output of the previous Hugo template, displaying the calculated number of seconds in a day.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/time/ParseDuration.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nThere are 86400 seconds in one day.\n```\n\n----------------------------------------\n\nTITLE: Type Conversion with strings.TrimLeft\nDESCRIPTION: Shows how strings.TrimLeft handles non-string inputs by converting them to strings. Includes examples with numbers and boolean values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/TrimLeft.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.TrimLeft 21 12345 }} → 345 (string)\n{{ strings.TrimLeft \"rt\" true }} → ue\n```\n\n----------------------------------------\n\nTITLE: Using Hugo's recommended alternative to GoogleAnalytics method\nDESCRIPTION: The recommended replacement for the deprecated GoogleAnalytics method, providing access to the Google Analytics tracking ID through the site configuration object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/GoogleAnalytics.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nSite.Config.Services.GoogleAnalytics.ID\n```\n\n----------------------------------------\n\nTITLE: Configuring a Non-Rendering Hugo Showcase Page with YAML Front Matter\nDESCRIPTION: YAML front matter configuration for a Hugo 'Showcases' page that explicitly sets build parameters to prevent rendering individual pages or generating list pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/showcase/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Showcases\ncascade:\n  build:\n    render: never\n    list: never\n---\n```\n\n----------------------------------------\n\nTITLE: Accessing Site Title in Hugo Templates\nDESCRIPTION: Demonstrates how to access the Title property of the Site object in a Hugo template. The Site object contains various site-wide configuration and metadata that can be accessed in templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Site.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Title }}\n```\n\n----------------------------------------\n\nTITLE: AbsLangURL Usage With Leading Slash - Base Domain\nDESCRIPTION: Examples of using absLangURL function with baseURL set to domain root, demonstrating URL generation for paths with leading slashes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/AbsLangURL.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ absLangURL \"/\" }}          → https://example.org/en/\n{{ absLangURL \"/articles\" }}  → https://example.org/en/articles\n{{ absLangURL \"/style.css\" }} → https://example.org/en/style.css\n```\n\n----------------------------------------\n\nTITLE: Extracting Day from Time in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the Day function in Hugo to extract the day of the month from a time.Time value. It first creates a time.Time object using the AsTime function, then applies the Day method to retrieve the day.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Day.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.Day }} → 27\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output from Hugo Template\nDESCRIPTION: This snippet shows the HTML output generated from the Hugo template using 'continue'. It demonstrates that 'bar' is skipped in the rendered output.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/continue.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p>foo</p>\n<p>baz</p>\n```\n\n----------------------------------------\n\nTITLE: Error Handling with try Statement for resources.GetRemote\nDESCRIPTION: Example showing comprehensive error handling when fetching a remote resource using the try statement, with proper error message formatting and handling of different error conditions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/GetRemote.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://broken-example.org/images/a.jpg\" }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ errorf \"%s\" . }}\n  {{ else with .Value }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ else }}\n    {{ errorf \"Unable to get remote resource %q\" $url }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using reflect.IsMap Function in Hugo Templates\nDESCRIPTION: Examples demonstrating the usage of reflect.IsMap function in Hugo templates. Shows checking both a map value (created with dict) and a string value, returning true and false respectively.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/reflect/IsMap.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ reflect.IsMap (dict \"key\" \"value\") }} → true\n{{ reflect.IsMap \"yo\" }} → false\n```\n\n----------------------------------------\n\nTITLE: Hugo Configuration for Passthrough Extension\nDESCRIPTION: TOML configuration to enable the Passthrough extension and define delimiters for block and inline elements.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/passthrough.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[markup.goldmark.extensions.passthrough]\nenable = true\n[markup.goldmark.extensions.passthrough.delimiters]\nblock = [['\\[', '\\]'], ['$$', '$$']]\ninline = [['\\(', '\\)']]\n```\n\n----------------------------------------\n\nTITLE: Using Hugo List Future Command Syntax\nDESCRIPTION: The basic syntax for running the 'hugo list future' command which lists content with a future publication date.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_future.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo list future [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Converting Decimal Values to Integers in Hugo Templates\nDESCRIPTION: Demonstrates how to convert decimal numbers and strings to integers using the int function. Floating point values are truncated, not rounded.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToInt.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ int 11 }} → 11 (int)\n{{ int \"11\" }} → 11 (int)\n\n{{ int 11.1 }} → 11 (int)\n{{ int 11.9 }} → 11 (int)\n```\n\n----------------------------------------\n\nTITLE: Adding Multiple Headers to CSV Request in Hugo\nDESCRIPTION: Shows how to add multiple headers to the CSV request using a slice in the options map with the data.GetCSV function in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetCSV.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict \"X-List\" (slice \"a\" \"b\" \"c\") }}\n{{ $data := getCSV \",\" \"https://example.org/pets.csv\" $opts }}\n```\n\n----------------------------------------\n\nTITLE: Using the Section Method in Hugo Templates\nDESCRIPTION: Example of using the .Section method in a Hugo template to return the top-level section name of the current page. In this case, it returns 'lessons' for the lesson-1.md file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Section.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Section }} → lessons\n```\n\n----------------------------------------\n\nTITLE: Including a Footer Partial Without Context in Hugo\nDESCRIPTION: Demonstrates including a footer partial template without passing any context. This is useful when the partial doesn't need access to the current page or any other data.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/partials/Include.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partial \"footer.html\" }}\n```\n\n----------------------------------------\n\nTITLE: Converting Time.Month to String in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to extract the month from a time.Time value and convert it to its string representation in Hugo templates. It uses the AsTime function to parse a timestamp and then calls the Month.String method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Month.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.Month.String }} → January\n```\n\n----------------------------------------\n\nTITLE: Background Color Filter\nDESCRIPTION: Examples of creating filters with background color specification for format conversion.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Process.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Process \"jpeg #000\" }}\n{{ $filter := images.Process \"crop 200x200 center r90 q50 jpeg #000\" }}\n```\n\n----------------------------------------\n\nTITLE: Declaring HTML Content as Safe in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the safeHTML function to mark a string as safe HTML content, allowing it to be rendered without escaping in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{ $html := \"<h1>Hello</h1>\" }}\n{{ $html | safeHTML }}\n```\n\n----------------------------------------\n\nTITLE: Hugo toJSON Command Help Options\nDESCRIPTION: Available command-specific options for the toJSON conversion command.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_convert_toJSON.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for toJSON\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Attributes in Hugo\nDESCRIPTION: Configuration snippet for enabling Markdown attributes in Hugo's goldmark parser settings. This allows access to heading attributes in render hooks.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/headings.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[markup.goldmark.parser.attribute]\ntitle = true\n```\n\n----------------------------------------\n\nTITLE: HTML Output of Break Statement in Hugo Templates\nDESCRIPTION: This shows the rendered HTML output after using the 'break' statement in the template. Only 'foo' is rendered as a paragraph because the loop exits when it encounters 'bar', preventing 'bar' and 'baz' from being processed.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/break.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p>foo</p>\n```\n\n----------------------------------------\n\nTITLE: Manual Deployment of Hugo Site to Codeberg Pages using Git\nDESCRIPTION: This snippet demonstrates the process of manually deploying a Hugo site to Codeberg Pages. It builds the site, navigates to the output directory, initializes a new Git repository, and pushes the content to a Codeberg 'pages' repository.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-codeberg-pages.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# build the website\nhugo\n\n# access the output directory\ncd public\n\n# initialize new git repository\ngit init\n\n# commit and push code to main branch\ngit add .\ngit commit -m \"Initial commit\"\ngit remote add origin https://codeberg.org/<YourUsername>/pages.git\ngit push -u origin main\n```\n\n----------------------------------------\n\nTITLE: Single Page Template Overriding Block in Hugo\nDESCRIPTION: A single page template that redefines the 'main' block to display the page title and content, customizing the base template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/block.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Generating SSH Key Pair\nDESCRIPTION: This command generates a new RSA SSH key pair named 'rsa_id' in the .ssh directory, with an optional passphrase for added security.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/deploy-with-rsync.md#2025-04-08_snippet_2\n\nLANGUAGE: txt\nCODE:\n```\nssh-keygen -t rsa -q -C \"For SSH\" -f rsa_id\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output for Nested Menu\nDESCRIPTION: The final HTML output generated by Hugo when processing the menu template. Shows the nested structure with parent and child menu items.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/HasChildren.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li>\n    <a href=\"/products/\">Products</a>\n    <ul>\n      <li><a href=\"/products/product-1/\">Product 1</a></li>\n      <li><a href=\"/products/product-2/\">Product 2</a></li>\n    </ul>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Formatting String Variables with fmt.Printf in Hugo\nDESCRIPTION: This snippet demonstrates how to use fmt.Printf to format a string variable in a Hugo template. It shows the basic syntax for inserting a variable into a formatted string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Printf.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := \"world\" }}\n{{ printf \"Hello %s.\" $var }} → Hello world.\n```\n\n----------------------------------------\n\nTITLE: Processing Remote JSON Data with resources.GetRemote and transform.Unmarshal\nDESCRIPTION: Example demonstrating how to retrieve JSON data from a remote source and unmarshal it into a usable data structure using resources.GetRemote and transform.Unmarshal.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/GetRemote.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := dict }}\n{{ $url := \"https://example.org/books.json\" }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ errorf \"%s\" . }}\n  {{ else with .Value }}\n    {{ $data = . | transform.Unmarshal }}\n  {{ else }}\n    {{ errorf \"Unable to get remote resource %q\" $url }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using hugo.IsMultilingual in Templates\nDESCRIPTION: Example showing how to use the hugo.IsMultilingual function in a Hugo template. This function returns a boolean value indicating whether the site has two or more configured languages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/IsMultilingual.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.IsMultilingual }} → true\n```\n\n----------------------------------------\n\nTITLE: Hugo Doc Generation Inherited Options\nDESCRIPTION: Lists all the options inherited from parent commands that can be used with 'hugo gen doc'. Includes various configuration, build, and filesystem options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_gen_doc.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Converting Hexadecimal Values to Integers in Hugo Templates\nDESCRIPTION: Shows how to convert hexadecimal (base 16) values to integers using the int function. Both numeric literals with 0x prefix and string representations are supported.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToInt.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ int 0x11 }} → 17 (int)\n{{ int \"0x11\" }} → 17 (int)\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Directory Structure in Hugo\nDESCRIPTION: Shows the directory structure used in the example for os.ReadDir function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/ReadDir.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── about.md\n├── contact.md\n└── news/\n    ├── article-1.md\n    └── article-2.md\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Slug in Hugo Templates\nDESCRIPTION: Demonstrates how to retrieve the slug value of a page within a Hugo template using the .Slug page method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Slug.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Slug }} → sushi\n```\n\n----------------------------------------\n\nTITLE: Starting Hugo Server with Draft Content\nDESCRIPTION: Commands to start Hugo's development server while including draft content for preview.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/quick-start.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nhugo server --buildDrafts\nhugo server -D\n```\n\n----------------------------------------\n\nTITLE: Including Open Graph Template in Hugo\nDESCRIPTION: Shows how to include Hugo's embedded Open Graph protocol template in a page. This template generates metadata for rich social media sharing.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/embedded.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ template \"_internal/opengraph.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Declaring CSS Content as Safe in Hugo Templates\nDESCRIPTION: This example shows the usage of safeCSS function to mark a string as safe CSS content, enabling it to be used in style attributes without escaping in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/_index.md#2025-04-08_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{ $style := \"color: red;\" }}\n<p style=\"{{ $style | safeCSS }}\">Red text</p>\n```\n\n----------------------------------------\n\nTITLE: Unmarshaling YAML String in Hugo Templates\nDESCRIPTION: Example showing how to unmarshal a YAML string containing book information into a map and access its properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Unmarshal.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $string := `\ntitle: Les Misérables\nauthor: Victor Hugo\n`}}\n\n{{ $book := unmarshal $string }}\n{{ $book.title }} → Les Misérables\n{{ $book.author }} → Victor Hugo\n```\n\n----------------------------------------\n\nTITLE: Using new-in Shortcode with Detailed Description\nDESCRIPTION: Demonstrates how to use the new-in shortcode with additional detailed description about the new feature.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_15\n\nLANGUAGE: text\nCODE:\n```\n{{</* new-in 0.144.0 */>}}\nThis is a new feature.\n{{</* /new-in */>}}\n```\n\n----------------------------------------\n\nTITLE: Defining Next Method Signature in Hugo\nDESCRIPTION: Specifies the return type and signature for the Next method in Hugo. It returns a page.Page object and takes PAGES and PAGE as parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/Next.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nreturnType: page.Page\nsignatures: [PAGES.Next PAGE]\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: The command options inherited from parent commands that can be used with 'hugo list published'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_published.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Using math.Sqrt Function in Hugo Templates\nDESCRIPTION: Demonstrates how to use the math.Sqrt function to calculate the square root of a number in Hugo templates. The function takes a single numeric value and returns its square root as a float64.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Sqrt.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ math.Sqrt 81 }} → 9\n```\n\n----------------------------------------\n\nTITLE: Basic Directory Structure for i18n Files\nDESCRIPTION: Shows the basic directory structure for translation files in Hugo\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/Translate.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ni18n/\n├── en.toml\n└── pl.toml\n```\n\n----------------------------------------\n\nTITLE: Accessing Main Menu in Hugo Templates\nDESCRIPTION: This Go HTML template snippet demonstrates how to access and iterate over the 'main' menu structure defined in the site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/menus.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Site.Menus.main }}\n  ...\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Fingerprinting JavaScript Resource with SHA-256\nDESCRIPTION: Shows how to fingerprint a JavaScript file using SHA-256 hashing and generate an integrity hash for subresource integrity (SRI). The snippet demonstrates getting a resource, applying fingerprinting, and outputting the script tag with proper integrity attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/Fingerprint.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"js/main.js\" }}\n  {{ with . | fingerprint \"sha256\" }}\n    <script src=\"{{ .RelPermalink }}\" integrity=\"{{ .Data.Integrity }}\" crossorigin=\"anonymous\"></script>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Date Fields in Hugo Front Matter\nDESCRIPTION: This snippet demonstrates a more complex configuration of date fields in Hugo's front matter. It shows how to set up the 'date' and 'lastmod' fields using various tokens and fallback options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/front-matter.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[frontmatter]\ndate = [':filename', ':default']\nlastmod = ['lastmod', ':fileModTime']\n```\n\n----------------------------------------\n\nTITLE: Accessing Remote CSV Data with data.GetCSV in Hugo\nDESCRIPTION: Shows how to use the data.GetCSV function to access remote CSV files in a Hugo project. The function accepts a URL to the remote CSV file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetCSV.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := getCSV \",\" \"https://example.org/pets.csv\" }}\n{{ $data := getCSV \",\" \"https://example.org/\" \"pets.csv\" }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving File and Directory Information with os.Stat in Hugo\nDESCRIPTION: This snippet demonstrates how to use os.Stat to get information about a file (README.md) and a directory (content). It shows how to access various properties of the returned FileInfo structure, such as IsDir, ModTime, Name, and Size.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/Stat.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $f := os.Stat \"README.md\" }}\n{{ $f.IsDir }}    → false (bool)\n{{ $f.ModTime }}  → 2021-11-25 10:06:49.315429236 -0800 PST (time.Time)\n{{ $f.Name }}     → README.md (string)\n{{ $f.Size }}     → 241 (int64)\n\n{{ $d := os.Stat \"content\" }}\n{{ $d.IsDir }}    → true (bool)\n```\n\n----------------------------------------\n\nTITLE: Checking if Hugo Development Server is Running with hugo.IsServer\nDESCRIPTION: Returns a boolean value indicating whether the current Hugo site is being served by the built-in development server. This function can be used to conditionally include or exclude content based on whether the site is in development or production mode.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/IsServer.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.IsServer }} → true/false\n```\n\n----------------------------------------\n\nTITLE: Hugo Import Basic Options\nDESCRIPTION: Basic command-line options specific to the hugo import command.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_import.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for import\n```\n\n----------------------------------------\n\nTITLE: Converting Hexadecimal Values to Strings in Hugo Templates\nDESCRIPTION: Examples showing how the string function handles hexadecimal (base 16) values. When given a hex number, it converts to a decimal string; when given a string of hex notation, it preserves the original format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToString.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ string 0x11 }} → 17 (string)\n{{ string \"0x11\" }} → 0x11 (string)\n```\n\n----------------------------------------\n\nTITLE: Parsing Duration and Calculating Seconds in Hugo Template\nDESCRIPTION: This snippet demonstrates how to use time.ParseDuration to parse a duration string of '24h' and then calculate the number of seconds in that duration using the Seconds method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/time/ParseDuration.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $duration := time.ParseDuration \"24h\" }}\n{{ printf \"There are %.0f seconds in one day.\" $duration.Seconds }}\n```\n\n----------------------------------------\n\nTITLE: Alternative Method for Linking to Default Language in Hugo\nDESCRIPTION: This Go HTML template shows an alternative way to link to the default language home page by using the index function to access the first Site object in the .Sites collection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sites.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with index .Sites 0 }}\n  <a href=\"{{ .Home.Permalink }}\">{{ .Title }}</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Store Values with WordCount Trigger\nDESCRIPTION: Shows an alternative method to trigger content rendering using the WordCount method before accessing scratch pad values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Store.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $noop := .WordCount }}\n{{ .Store.Get \"mykey\" }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Store Values with WordCount Trigger\nDESCRIPTION: Shows an alternative method to trigger content rendering using the WordCount method before accessing scratch pad values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Store.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $noop := .WordCount }}\n{{ .Store.Get \"mykey\" }}\n```\n\n----------------------------------------\n\nTITLE: Calling Shortcode with Positional Arguments in Hugo Markdown\nDESCRIPTION: Demonstrates how to call a shortcode using positional arguments in a Hugo Markdown file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Get.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{{</* myshortcode \"Hello\" \"world\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Basic 'if' Statement in Hugo Go Templates\nDESCRIPTION: Demonstrates a basic conditional statement that checks if a variable is truthy and executes the code block when the condition is met.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/if.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := \"foo\" }}\n{{ if $var }}\n  {{ $var }} → foo\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Case Sensitive String Contains Check in Hugo Templates\nDESCRIPTION: Shows case sensitivity of strings.Contains function. Returns false when checking for 'Go' in 'Hugo' due to case mismatch.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Contains.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.Contains \"Hugo\" \"Go\" }} → false\n```\n\n----------------------------------------\n\nTITLE: Retrieving Related Pages Using Options Map in Hugo Templates\nDESCRIPTION: This snippet shows how to fetch related pages using an options map which allows for greater customization. It specifies which document to find relations for and which indices (tags and keywords) to search within.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/Related.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict\n  \"document\" .\n  \"indices\" (slice \"tags\" \"keywords\")\n}}\n{{ with .Site.RegularPages.Related $opts | first 5 }}\n  <p>Related pages:</p>\n  <ul>\n    {{ range . }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Deprecation Notice for IsServer Function in Hugo\nDESCRIPTION: This code snippet shows the deprecation notice for the IsServer function, indicating that it should be replaced with hugo.IsServer. It includes the version in which it was deprecated and a link to the new function's documentation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/IsServer.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< deprecated-in 0.120.0 >}}\nUse [`hugo.IsServer`] instead.\n\n[`hugo.IsServer`]: /functions/hugo/isserver/\n{{< /deprecated-in >}}\n```\n\n----------------------------------------\n\nTITLE: Inspecting Data Structures with debug.Dump in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the debug.Dump function to inspect a data structure in Hugo templates. It outputs a detailed representation of the .Params object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/inspection.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre>{{ debug.Dump .Params }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Basic Hugo Version Command Usage\nDESCRIPTION: Basic syntax for running the Hugo version command with optional flags and arguments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_version.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo version [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Filtering Hugo Logs for Deprecation Notices\nDESCRIPTION: Command to run Hugo with info-level logging and filter the output to show only deprecation-related messages. This helps users focus on just the deprecated features when upgrading.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/deprecation.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nhugo --logLevel info | grep deprecate\n```\n\n----------------------------------------\n\nTITLE: Creating Overlay Filter in Hugo\nDESCRIPTION: This snippet demonstrates how to create an overlay filter using the images.Overlay function in Hugo. It takes the previously captured overlay image and specifies the X and Y coordinates for placement.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Overlay.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Overlay $overlay 20 20 }}\n```\n\n----------------------------------------\n\nTITLE: Multilingual Content Structure Example\nDESCRIPTION: Shows example directory structure for multilingual Hugo content including bundles and regular content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_12\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── news/\n│   ├── b/\n│   │   ├── index.de.md   <-- leaf bundle\n│   │   └── index.en.md   <-- leaf bundle\n│   ├── a.de.md           <-- regular content\n│   ├── a.en.md           <-- regular content\n│   ├── _index.de.md      <-- branch bundle\n│   └── _index.en.md      <-- branch bundle\n├── _index.de.md\n└── _index.en.md\n```\n\n----------------------------------------\n\nTITLE: Using Default Date Sequence in Hugo Front Matter\nDESCRIPTION: This example illustrates how to use the ':default' token in Hugo's front matter configuration to fall back to the default sequence of dates if a custom date field is not present.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/front-matter.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[frontmatter]\ndate = [\"myDate\", \":default\"]\n```\n\n----------------------------------------\n\nTITLE: Using PostCSS Without Configuration File\nDESCRIPTION: Example of using PostCSS in Hugo without a separate configuration file by specifying plugins directly in the template options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/PostCSS.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict \"use\" \"autoprefixer postcss-color-alpha\" }}\n{{ with resources.Get \"css/main.css\" | postCSS $opts }}\n  <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Subtracting Multiple Numbers Using Hugo's math.Sub Function\nDESCRIPTION: Demonstrates how to use the math.Sub function in Hugo templates to subtract multiple numbers from the first one. In this example, it subtracts 3 and 2 from 12, resulting in 7.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Sub.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ sub 12 3 2 }} → 7\n```\n\n----------------------------------------\n\nTITLE: Basic Time.Now Usage in Hugo Templates\nDESCRIPTION: Demonstrates the basic usage of time.Now function which returns the current local time as a time.Time value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/time/Now.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ time.Now }}\n```\n\n----------------------------------------\n\nTITLE: Converting Image Format with Resize in Hugo\nDESCRIPTION: Demonstrates how to convert an image to WebP format while resizing it to 600 pixels wide, maintaining aspect ratio.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_16\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image.Resize \"600x webp\" }}\n```\n\n----------------------------------------\n\nTITLE: Extracting Seconds from a Time Object in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the Second method on a time.Time object in Hugo templates. It first creates a time object using time.AsTime and then extracts the second component which returns 58.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Second.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.Second }} → 58\n```\n\n----------------------------------------\n\nTITLE: Retrieving Page Title in Hugo Template\nDESCRIPTION: Demonstrates how to access the page title using the .Title method in a Hugo template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Title.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Title }} → About us\n```\n\n----------------------------------------\n\nTITLE: Displaying Content Relationships for Movies in Plain Text\nDESCRIPTION: This snippet illustrates how content relationships appear from the perspective of the content (movies) using the same data and labels as the previous example. It shows how taxonomies and terms are associated with specific movie titles.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/taxonomies.md#2025-04-08_snippet_1\n\nLANGUAGE: txt\nCODE:\n```\nUnbreakable                 <- Value\n    Actors                  <- Taxonomy\n        Bruce Willis        <- Term\n        Samuel L. Jackson   <- Term\n    Director                <- Taxonomy\n        M. Night Shyamalan  <- Term\n    ...\nMoonrise Kingdom            <- Value\n    Actors                  <- Taxonomy\n        Bruce Willis        <- Term\n        Bill Murray         <- Term\n    Director                <- Taxonomy\n        Wes Anderson        <- Term\n    ...\n```\n\n----------------------------------------\n\nTITLE: Whitespace Control in Hugo Templates with Hyphenated Delimiters\nDESCRIPTION: Demonstrates how to eliminate whitespace in rendered HTML output by using hyphenated delimiters ({{- -}}) in Hugo templates. This approach removes spaces, tabs, and newlines adjacent to the delimiters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{- $convertToLower := true -}}\n{{- if $convertToLower -}}\n  <h2>{{ strings.ToLower .Title }}</h2>\n{{- end -}}\n```\n\n----------------------------------------\n\nTITLE: Basic FindRESubmatch Examples in Hugo Templates\nDESCRIPTION: Demonstrates basic usage of findRESubmatch with different pattern matching scenarios and optional limit parameter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/FindRESubmatch.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ findRESubmatch `a(x*)b` \"-ab-\" }} → [[\"ab\" \"\"]]\n{{ findRESubmatch `a(x*)b` \"-axxb-\" }} → [[\"axxb\" \"xx\"]]\n{{ findRESubmatch `a(x*)b` \"-ab-axb-\" }} → [[\"ab\" \"\"] [\"axb\" \"x\"]]\n{{ findRESubmatch `a(x*)b` \"-axxb-ab-\" }} → [[\"axxb\" \"xx\"] [\"ab\" \"\"]]\n{{ findRESubmatch `a(x*)b` \"-axxb-ab-\" 1 }} → [[\"axxb\" \"xx\"]]\n```\n\n----------------------------------------\n\nTITLE: Initializing and Pushing Hugo Site to GitLab\nDESCRIPTION: This shell script initializes a new Git repository for a Hugo site, adds the /public directory to .gitignore, and pushes the initial commit to GitLab. It demonstrates the basic Git commands needed to set up version control for a Hugo project on GitLab.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-gitlab-pages.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n# initialize new git repository\ngit init\n\n# add /public directory to our .gitignore file\necho \"/public\" >> .gitignore\n\n# commit and push code to master branch\ngit add .\ngit commit -m \"Initial commit\"\ngit remote add origin https://gitlab.com/YourUsername/your-hugo-site.git\ngit push -u origin master\n```\n\n----------------------------------------\n\nTITLE: Triggering Content Rendering to Access Scratch or Store Values\nDESCRIPTION: Shows how to access Scratch or Store values by first triggering content rendering. This is useful when a parent template needs to access values set within rendered content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/faq.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $noop := .Content }}\n{{ .Store.Get \"mykey\" }}\n```\n\n----------------------------------------\n\nTITLE: Headless Section Configuration\nDESCRIPTION: Configuration for a headless section using cascade to apply build settings to descendant pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/build-options.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Headless section'\n[[cascade]]\n[cascade.build]\n  list = 'local'\n  publishResources = false\n  render = 'never'\n```\n\n----------------------------------------\n\nTITLE: Right-Open Interval Expression\nDESCRIPTION: Represents a half-open interval where the left endpoint is included but the right endpoint is excluded\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/interval.md#2025-04-08_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n0 <= x < 1\n```\n\n----------------------------------------\n\nTITLE: Accessing Context Values Within a Partial Template in Hugo\nDESCRIPTION: Shows how to access context values passed to a partial template. The template references the context variables directly using dot notation to render student information and a link to the page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/partials/Include.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n<p>{{ .name }} is majoring in {{ .major }}.</p>\n<p>Their grade point average is {{ .gpa }}.</p>\n<p>See <a href=\"{{ .page.RelPermalink }}\">details.</a></p>\n```\n\n----------------------------------------\n\nTITLE: Markdown Tables - Emoji Shortcodes Reference\nDESCRIPTION: Tables containing emoji icons and their corresponding shortcode syntax for use in markdown documents. Each table is organized by category and includes navigation links.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | ico | shortcode | |\n| - | :-: | - | :-: | - | - |\n| [top](#animals--nature) | :whale: | `:whale:` | :whale2: | `:whale2:` | [top](#table-of-contents) |\n| [top](#animals--nature) | :dolphin: | `:dolphin:` `:flipper:` | :seal: | `:seal:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: Creating Atom Feed Media Type in Hugo\nDESCRIPTION: Configuration to create a new media type for Atom feeds with the .atom suffix.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/media-types.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[mediaTypes.'application/atom+xml']\nsuffixes = ['atom']\n```\n\n----------------------------------------\n\nTITLE: Using compare.Le with Different Data Types in Hugo Templates\nDESCRIPTION: Examples of using the compare.Le function with different data types such as strings, dates, and booleans in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Le.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ le \"ab\" \"a\" }} → false\n{{ le time.Now (time.AsTime \"1964-12-30\") }} → false\n{{ le true false }} → false\n```\n\n----------------------------------------\n\nTITLE: Babel Configuration in Hugo Module\nDESCRIPTION: A sample Babel configuration file showing how to properly load presets when using Hugo Modules. It uses require() to load presets to avoid path resolution issues when the configuration is in a module.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Babel.md#2025-04-08_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nmodule.exports = {\n  presets: [\n    [\n      require(\"@babel/preset-env\"),\n      {\n        useBuiltIns: \"entry\",\n        corejs: 3,\n      },\n    ],\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Polish Pluralization Example\nDESCRIPTION: Demonstrates Polish pluralization rules in TOML format\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/Translate.md#2025-04-08_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[day]\none = 'miesiąc'\nfew = 'miesiące'\nmany = 'miesięcy'\nother = 'miesiąca'\n\n[day_with_count]\none = '{{ . }} miesiąc'\nfew = '{{ . }} miesiące'\nmany = '{{ . }} miesięcy'\nother = '{{ . }} miesiąca'\n```\n\n----------------------------------------\n\nTITLE: Creating Term Template in Hugo\nDESCRIPTION: Illustrates a term template that inherits from the base template and renders a list of pages associated with the current term.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/types.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ define \"main\" }}\n  <h1>{{ .Title }}</h1>\n  {{ .Content }}\n  {{ range .Pages }}\n    <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Pandoc Default CLI Flags in Hugo\nDESCRIPTION: Default command line flags passed to Pandoc executable when rendering Pandoc content in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/formats.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n--mathjax\n```\n\n----------------------------------------\n\nTITLE: Styling Details and Summary Elements with CSS\nDESCRIPTION: Provides CSS selectors for styling various parts of the details and summary elements.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/details.md#2025-04-08_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n/* target the details element */\ndetails { }\n\n/* target the summary element */\ndetails > summary { }\n\n/* target the children of the summary element */\ndetails > summary > * { }\n\n/* target the content */\ndetails > :not(summary) { }\n```\n\n----------------------------------------\n\nTITLE: Converting and Formatting Time to UTC and Local Time in Hugo Templates\nDESCRIPTION: Demonstrates how to convert a time.Time value to UTC and local time, then format it using the Format method in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Format.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := \"2023-01-27T23:44:58-08:00\" }}\n{{ $t = time.AsTime $t }}\n{{ $format := \"2 Jan 2006 3:04:05 PM MST\" }}\n\n{{ $t.UTC.Format $format }} → 28 Jan 2023 7:44:58 AM UTC\n{{ $t.Local.Format $format }} → 27 Jan 2023 11:44:58 PM PST\n```\n\n----------------------------------------\n\nTITLE: Terminating 'range' Statement in Hugo Templates\nDESCRIPTION: Illustrates how to use 'end' to terminate a 'range' statement in Hugo templates. The example iterates over a slice and prints each value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/end.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $var := slice 1 2 3 }}\n{{ range $var }}\n  {{ . }} → 1 2 3 \n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Pixelation Filter in Hugo\nDESCRIPTION: This snippet demonstrates how to create a pixelation filter using the images.Pixelate function in Hugo. The function takes a single argument specifying the size of the pixelation effect.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Pixelate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Pixelate 4 }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Gen Man Inherited Options in Bash\nDESCRIPTION: These options are inherited from parent commands and can be used with 'hugo gen man'. They include various configuration and build settings for Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_gen_man.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Capturing HTML Links with FindRESubmatch\nDESCRIPTION: Example showing how to capture href attributes and link text from HTML using regular expressions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/FindRESubmatch.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $regex := `<a\\s*href=\"(.+?)\">(.+?)</a>` }}\n{{ $matches := findRESubmatch $regex .Content }}\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output from Context Access in With Blocks\nDESCRIPTION: Shows the rendered HTML output when accessing the parent context from within a with block, demonstrating how to combine information from different contexts in the output.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<p>My Page Title - foo</p>\n```\n\n----------------------------------------\n\nTITLE: Deploying Hugo Site with Rclone via SFTP\nDESCRIPTION: This snippet demonstrates how to build a Hugo site and deploy it using Rclone with SFTP. It includes the Hugo command to generate the site and the Rclone command to sync the files to the remote server.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/deploy-with-rclone.md#2025-04-08_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\nhugo --gc --minify\nrclone sync --interactive --sftp-host sftp.example.com --sftp-user www-data --sftp-ask-password public/ :sftp:www/\n```\n\n----------------------------------------\n\nTITLE: Diff Between Regular and Markdown-Processing Shortcode Templates\nDESCRIPTION: A diff showing the required changes between regular shortcode template and one designed for use with Markdown-processing notation, highlighting indentation and blank line differences.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Inner.md#2025-04-08_snippet_7\n\nLANGUAGE: diff\nCODE:\n```\n--- layouts/shortcodes/a.html\n+++ layouts/shortcodes/b.html\n@@ -1,8 +1,9 @@\n <div class=\"card\">\n   {{ with .Get \"title\" }}\n-    <div class=\"card-title\">{{ . }}</div>\n+  <div class=\"card-title\">{{ . }}</div>\n   {{ end }}\n   <div class=\"card-content\">\n-    {{ .Inner | strings.TrimSpace | .Page.RenderString }}\n+\n+  {{ .Inner | strings.TrimSpace }}\n   </div>\n </div>\n```\n\n----------------------------------------\n\nTITLE: Diff Between Regular and Markdown-Processing Shortcode Templates\nDESCRIPTION: A diff showing the required changes between regular shortcode template and one designed for use with Markdown-processing notation, highlighting indentation and blank line differences.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Inner.md#2025-04-08_snippet_7\n\nLANGUAGE: diff\nCODE:\n```\n--- layouts/shortcodes/a.html\n+++ layouts/shortcodes/b.html\n@@ -1,8 +1,9 @@\n <div class=\"card\">\n   {{ with .Get \"title\" }}\n-    <div class=\"card-title\">{{ . }}</div>\n+  <div class=\"card-title\">{{ . }}</div>\n   {{ end }}\n   <div class=\"card-content\">\n-    {{ .Inner | strings.TrimSpace | .Page.RenderString }}\n+\n+  {{ .Inner | strings.TrimSpace }}\n   </div>\n </div>\n```\n\n----------------------------------------\n\nTITLE: Configuring a Single-Term Taxonomy in Hugo Configuration\nDESCRIPTION: Example showing how to define a taxonomy that typically has only one term per content page. This example creates an 'author' taxonomy using the same word for both singular and plural forms.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/taxonomies.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\ntaxonomies:\n  author: author\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Extended Installation on Exherbo\nDESCRIPTION: Configuration and installation steps for the extended edition of Hugo on Exherbo Linux using Paludis package manager.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nwww-apps/hugo extended\n```\n\nLANGUAGE: sh\nCODE:\n```\ncave resolve -x repository/heirecka\ncave resolve -x hugo\n```\n\n----------------------------------------\n\nTITLE: Hugo Documentation Page Frontmatter in YAML\nDESCRIPTION: YAML frontmatter for the Hugo documentation page about configuration. It defines the page title, description, empty categories and keywords arrays, and sets the page weight to 10 for ordering in the navigation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Configuration\ndescription: Configure your site.\ncategories: []\nkeywords: []\nweight: 10\n---\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of compare.Conditional in Hugo Templates\nDESCRIPTION: Demonstrates the basic usage of the compare.Conditional function (aliased as 'cond') in Hugo templates. It compares a quantity to a threshold and returns 'few' or 'many' accordingly.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Conditional.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $qty := 42 }}\n{{ cond (le $qty 3) \"few\" \"many\" }} → many\n```\n\n----------------------------------------\n\nTITLE: Creating an Instance in a Group using js.Batch in Hugo\nDESCRIPTION: This snippet shows how to create an instance within a group using js.Batch. It sets options for the instance, including parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Batch.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with js.Batch \"js/mybatch\" }}\n  {{ with .Group \"mygroup\" }}\n      {{ with .Instance \"myscript\" \"myinstance\" }}\n          {{ .SetOptions (dict \"params\" (dict \"param1\" \"value1\")) }}\n      {{ end }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo to Suppress Specific Warnings\nDESCRIPTION: Shows how to add a warning ID to the ignoreLogs configuration to suppress specific warnings generated by the warnidf function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Warnidf.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\nignoreLogs = [\"warning-42\"]\n```\n\n----------------------------------------\n\nTITLE: Hugo Configuration Example for Multilingual Setup\nDESCRIPTION: Example configuration showing how to set up Hugo for multilingual support with English as default language and Spanish as secondary language.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/AbsLangURL.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'en'\ndefaultContentLanguageInSubdir = true\n[languages.en]\nweight = 1\n[languages.es]\nweight = 2\n```\n\n----------------------------------------\n\nTITLE: Formatting Time Using Format Method in Go Templates\nDESCRIPTION: Demonstrates how to format a time.Time value using the Format method with a custom layout string in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Format.md#2025-04-08_snippet_0\n\nLANGUAGE: go-template\nCODE:\n```\n{{ $t := \"2023-01-27T23:44:58-08:00\" }}\n{{ $t = time.AsTime $t }}\n{{ $format := \"2 Jan 2006\" }}\n\n{{ $t.Format $format }} → 27 Jan 2023\n```\n\n----------------------------------------\n\nTITLE: Configuring Draft Status in Hugo Front Matter\nDESCRIPTION: Demonstrates how to set a page as a draft using front matter in Hugo. This configuration prevents the page from being published by default.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Draft.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Post 1'\ndraft = true\n```\n\n----------------------------------------\n\nTITLE: Extracting Hour from Time.Time in Hugo Go Templates\nDESCRIPTION: This snippet demonstrates how to use the Hour method on a time.Time value in Hugo templates. It creates a time.Time object from a string timestamp and then extracts the hour component, which returns an integer in the range [0, 23].\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Hour.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.Hour }} → 23\n```\n\n----------------------------------------\n\nTITLE: Hugo Global Options for Completion Command\nDESCRIPTION: Global command-line options inherited from the parent Hugo command that can be used with the completion command. These options control Hugo's build behavior, configuration, and logging.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Extracting Substrings with strings.SliceString in Hugo Templates\nDESCRIPTION: Demonstrates how to use the strings.SliceString (aliased as slicestr) function to extract portions of a string. The function uses zero-based indexing where the start position is inclusive and the end position is exclusive, forming a half-open interval.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/SliceString.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ slicestr \"BatMan\" }} → BatMan\n{{ slicestr \"BatMan\" 3 }} → Man\n{{ slicestr \"BatMan\" 0 3 }} → Bat\n```\n\n----------------------------------------\n\nTITLE: Rendering Taxonomy Terms and Pages\nDESCRIPTION: Template code that iterates through a taxonomy object, displaying each term as a heading with its associated pages listed below. This shows how to access both the term page and individual content pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/taxonomy/get-a-taxonomy-object.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range $term, $weightedPages := $taxonomyObject }}\n  <h2><a href=\"{{ .Page.RelPermalink }}\">{{ .Page.LinkTitle }}</a></h2>\n  <ul>\n    {{ range $weightedPages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output from Range and With Blocks\nDESCRIPTION: Shows the HTML output after Hugo processes a template with range and with blocks. This is the rendered result of the previous template code demonstrating how context changes affect the output.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<h2>My Page Title</h2>\n<p>foo</p>\n<p>bar</p>\n<p>baz</p>\n```\n\n----------------------------------------\n\nTITLE: Configuration Table for 21YunBox Hugo Setup\nDESCRIPTION: Table showing the required configuration values for setting up a Hugo site on 21YunBox, including environment settings, build command, and publish directory specifications.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-21yunbox.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|    Field          | Value                                            |\n| ----------------- | ------------------------------------------------ |\n| Environment       | `Static Site`                                    |\n| Build Command     | `hugo --gc --minify` (or your own build command) |\n| Publish Directory | `./public` (or your own output directory)        |\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Markdown Elements Without Render Hooks\nDESCRIPTION: A basic Markdown example showing link and image elements that would be transformed by render hooks.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/introduction.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n[Hugo](https://gohugo.io)\n\n![kitten](kitten.jpg)\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Hugo Content Directory Structure\nDESCRIPTION: Shows the hierarchical structure of content directories in Hugo, including sections and subsections with markdown files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/InSection.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── auctions/\n│   ├── 2023-11/\n│   │   ├── _index.md\n│   │   ├── auction-1.md\n│   │   └── auction-2.md\n│   ├── 2023-12/\n│   │   ├── _index.md\n│   │   ├── auction-3.md\n│   │   └── auction-4.md\n│   ├── _index.md\n│   ├── bidding.md\n│   └── payment.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Documentation Front Matter in YAML\nDESCRIPTION: Front matter configuration for a Hugo documentation page about configuration settings. Includes title, description, categories, keywords, weight and URL aliases.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/all.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: All settings\ndescription: The complete list of Hugo configuration settings.\ncategories: []\nkeywords: []\nweight: 20\naliases: [/getting-started/configuration/]\n---\n```\n\n----------------------------------------\n\nTITLE: Including Disqus Template in Hugo\nDESCRIPTION: Demonstrates how to include Hugo's embedded Disqus template in a page. This template enables Disqus commenting system integration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/embedded.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ template \"_internal/disqus.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Converting Binary Values to Integers in Hugo Templates\nDESCRIPTION: Shows how to convert binary (base 2) values to integers using the int function. Both numeric literals with 0b prefix and string representations are supported.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToInt.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ int 0b11 }} → 3 (int)\n{{ int \"0b11\" }} → 3 (int)\n```\n\n----------------------------------------\n\nTITLE: Adding a Border with images.Padding in Hugo\nDESCRIPTION: Shows how to add a simple border to an image using the Padding filter. This example adds a 2-pixel gray border around the image.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Padding.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $img = $img.Filter (images.Padding 2 \"#777\") }}\n```\n\n----------------------------------------\n\nTITLE: Passing a Dictionary as Context to a Partial in Hugo\nDESCRIPTION: Creates a dictionary with multiple values (including the current page and scalar values) and passes it as context to a partial template. This allows the partial to access multiple pieces of structured data.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/partials/Include.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $ctx := dict \n  \"page\" .\n  \"name\" \"John Doe\" \n  \"major\" \"Finance\"\n  \"gpa\" 4.0\n}}\n{{ partial \"render-student-info.html\" $ctx }}\n```\n\n----------------------------------------\n\nTITLE: Multiple Condition Testing with Context Rebinding\nDESCRIPTION: Example of testing multiple conditions using with and else with statements. Shows how to handle fallback cases when evaluating multiple variables.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_27\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $v1 := 0 }}\n{{ $v2 := 42 }}\n{{ with $v1 }}\n  {{ . }}\n{{ else with $v2 }}\n  {{ . }} → 42\n{{ else }}\n  {{ print \"v1 and v2 are falsy\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using Partial Template with Direct Rendering\nDESCRIPTION: Example of calling the odd-or-even partial template to render HTML directly.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/return.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partial \"odd-or-even.html\" 42 }}\n```\n\n----------------------------------------\n\nTITLE: Converting Duration to Nanoseconds in Hugo Template\nDESCRIPTION: Demonstrates parsing a duration string into a time.Duration value and converting it to its nanosecond count. Uses time.ParseDuration to create a duration from a string format and then calls the Nanoseconds method to get the total number of nanoseconds.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/duration/Nanoseconds.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $d = time.ParseDuration \"3.5h2.5m1.5s\" }}\n{{ $d.Nanoseconds }} → 12751500000000\n```\n\n----------------------------------------\n\nTITLE: Implementing Nested Menu Template with HasChildren\nDESCRIPTION: Go HTML template that renders a nested navigation menu using the HasChildren method to check for child menu entries. Iterates through main menu items and their children.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/HasChildren.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    <li>\n      <a href=\"{{ .URL }}\">{{ .Name }}</a>\n      {{ if .HasChildren }}\n        <ul>\n          {{ range .Children }}\n            <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n          {{ end }}\n        </ul>\n      {{ end }}\n    </li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Setting Warning Logging Level in Hugo CLI\nDESCRIPTION: Command to run Hugo with warning-level logging, which displays both warning and error messages when building a site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/logging.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nhugo --logLevel warn\n```\n\n----------------------------------------\n\nTITLE: Enabling Section Pages Menu in Hugo Configuration\nDESCRIPTION: Automatically defines a menu entry for each top-level section of your site by enabling the section pages menu in your site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/menus.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nsectionPagesMenu = \"main\"\n```\n\n----------------------------------------\n\nTITLE: Fiction Books Data Structure\nDESCRIPTION: YAML data structure containing fiction books with title, author, and ISBN information\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Data.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- title: The Hunchback of Notre Dame\n  author: Victor Hugo\n  isbn: 978-0140443530\n- title: Les Misérables\n  author: Victor Hugo\n  isbn: 978-0451419439\n```\n\n----------------------------------------\n\nTITLE: Using strings.TrimPrefix Function in Hugo Templates\nDESCRIPTION: This example demonstrates how to use the strings.TrimPrefix function to remove a specified prefix from the beginning of a string. The function takes two parameters: the prefix to remove and the target string. If the prefix exists at the beginning of the string, it is removed; otherwise, the original string is returned unchanged.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/TrimPrefix.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.TrimPrefix \"a\" \"aabbaa\" }} → abbaa\n{{ strings.TrimPrefix \"aa\" \"aabbaa\" }} → bbaa\n{{ strings.TrimPrefix \"aaa\" \"aabbaa\" }} → aabbaa\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for Emoji Documentation\nDESCRIPTION: Standard markdown table structure used consistently throughout the document to display emoji objects and their shortcodes. Each table has columns for icons and their corresponding shortcode references.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | ico | shortcode | |\n| - | :-: | - | :-: | - | - |\n| [top](#objects) | :emoji: | `:emoji:` | :emoji2: | `:emoji2:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: RelURL Usage With Leading Slash - Base URL Example 2\nDESCRIPTION: Shows RelURL function behavior with baseURL='https://example.org/docs/' when input begins with a slash. Demonstrates consistent behavior regardless of baseURL path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/RelURL.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ relURL \"/\" }}          → /\n{{ relURL \"/articles\" }}  → /articles\n{{ relURL \"/style.css\" }} → /style.css\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Info in Hugo Configuration\nDESCRIPTION: Hugo configuration setting required to enable Git information access for the CodeOwners method\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/CodeOwners.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nenableGitInfo = true\n```\n\n----------------------------------------\n\nTITLE: Deleting Map Values in Hugo Store\nDESCRIPTION: Demonstrates removing values from a map using DeleteInMap method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/store-methods.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Store.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ .Store.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n{{ .Store.DeleteInMap \"greetings\" \"english\" }}\n{{ .Store.Get \"greetings\" }} → map[french:Bonjour]\n```\n\n----------------------------------------\n\nTITLE: Hugo Module Tidy Command Syntax\nDESCRIPTION: Basic command syntax for running the hugo mod tidy command with optional flags and arguments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_tidy.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo mod tidy [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Basic Code Block Render Hook with Syntax Highlighting\nDESCRIPTION: A minimal Hugo render hook template that passes code through the Chroma syntax highlighter and returns the wrapped result, replicating Hugo's default behavior.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/code-blocks.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $result := transform.HighlightCodeBlock . }}\n{{ $result.Wrapped }}\n```\n\n----------------------------------------\n\nTITLE: HTML Output of collections.Querify URL Generation\nDESCRIPTION: Shows the rendered HTML output of the previous example, with proper HTML entity encoding for the ampersand in the query string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Querify.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://example.org?a=1&amp;b=2\">Link</a>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sorted Map Values with hugo.Store in Hugo Templates\nDESCRIPTION: Illustrates how to get an array of sorted values from a map in hugo.Store using the GetSortedMapValues method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/Store.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.Store.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ hugo.Store.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n{{ hugo.Store.GetSortedMapValues \"greetings\" }} → [Hello Bonjour]\n```\n\n----------------------------------------\n\nTITLE: Error Examples with compare.Conditional in Hugo Templates\nDESCRIPTION: Illustrates how the compare.Conditional function evaluates both arguments regardless of the control value, leading to errors when using expressions that would cause runtime errors.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Conditional.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ cond true \"true\" (div 1 0) }}\n{{ cond false (div 1 0) \"false\" }}\n```\n\n----------------------------------------\n\nTITLE: Pushing Hugo Site to GitLab Repository\nDESCRIPTION: These shell commands demonstrate how to push a newly created Hugo site repository to GitLab. The commands add a remote origin and push the master branch to GitLab, initiating the CI/CD pipeline for deployment.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-keycdn/index.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ngit remote add origin git@gitlab.com:youruser/ci-example.git\ngit push -u origin master\n```\n\n----------------------------------------\n\nTITLE: Sorting Menu Entries in Descending Order Using sort Function\nDESCRIPTION: This example demonstrates how to use the sort function to sort menu entries by name in descending order. It provides more flexibility in sorting options compared to the ByName function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/ByName.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range sort .Site.Menus.main \"Name\" \"desc\" }}\n    <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Accessing LastChange Function in Hugo Templates\nDESCRIPTION: Demonstrates the syntax for accessing the LastChange function in Hugo templates, which returns the last modification date of site content as a time.Time object. This function has been deprecated in Hugo v0.123.0.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/LastChange.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nSITE.LastChange\n```\n\n----------------------------------------\n\nTITLE: Retrieving Menu Entry Title in Hugo Templates\nDESCRIPTION: This code shows how to get the title of a menu entry in Hugo. The .Title method returns the title of the menu entry, which can be different from its name and is often used for display purposes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/_index.md#2025-04-08_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{ .Title }}\n```\n\n----------------------------------------\n\nTITLE: Comparing anchorize and urlize Functions in Hugo Templates\nDESCRIPTION: This code snippet demonstrates the usage and differences between the anchorize and urlize functions in Hugo templates. It shows how these functions handle various input strings, including spaces, special characters, and non-ASCII characters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/functions/urls/anchorize-vs-urlize.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := \"A B C\" }}\n{{ $s | anchorize }} → a-b-c\n{{ $s | urlize }} → a-b-c\n\n{{ $s := \"a b   c\" }}\n{{ $s | anchorize }} → a-b---c\n{{ $s | urlize }} → a-b-c\n\n{{ $s := \"< a, b, & c >\" }}\n{{ $s | anchorize }} → -a-b--c-\n{{ $s | urlize }} → a-b-c\n\n{{ $s := \"main.go\" }}\n{{ $s | anchorize }} → maingo\n{{ $s | urlize }} → main.go\n\n{{ $s := \"Hugö\" }}\n{{ $s | anchorize }} → hugö\n{{ $s | urlize }} → hug%C3%B6\n```\n\n----------------------------------------\n\nTITLE: Setting Lastmod Date in Hugo Front Matter\nDESCRIPTION: Example of how to set the last modification date in a Hugo content file's front matter. This explicitly defines when the content was last updated using a timestamp in ISO 8601 format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Lastmod.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle = 'Article 1'\nlastmod = 2023-10-19T00:40:04-07:00\n```\n\n----------------------------------------\n\nTITLE: Removing Suffixes from Strings using strings.TrimSuffix in Hugo Templates\nDESCRIPTION: This code snippet demonstrates the usage of the strings.TrimSuffix function in Hugo templates. It shows examples of removing different suffixes from a string, illustrating how the function behaves with various inputs.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/TrimSuffix.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.TrimSuffix \"a\" \"aabbaa\" }} → aabba\n{{ strings.TrimSuffix \"aa\" \"aabbaa\" }} → aabb\n{{ strings.TrimSuffix \"aaa\" \"aabbaa\" }} → aabbaa\n```\n\n----------------------------------------\n\nTITLE: Building Page Collections with Type Method and where Function\nDESCRIPTION: Example showing a similar approach using the Type method instead of Section. This demonstrates an alternative way to filter pages, which may yield different results if the type field is defined in front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Section.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range where .Site.RegularPages \"Type\" \"lessons\" }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using urls.AbsURL with inputs that have leading slashes (baseURL = https://example.org/docs/)\nDESCRIPTION: Demonstrates the urls.AbsURL function with inputs that begin with a slash, where the path in the resulting URL is relative to the protocol+host part of the baseURL. Here the baseURL is set to 'https://example.org/docs/'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/AbsURL.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ absURL \"/\" }}          → https://example.org/\n{{ absURL \"/articles\" }}  → https://example.org/articles\n{{ absURL \"/style.css\" }} → https://example.org/style.css\n```\n\n----------------------------------------\n\nTITLE: Executing Hugo Config Mounts Command\nDESCRIPTION: This command prints the configured file mounts in Hugo. It can be executed with optional flags and arguments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_config_mounts.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhugo config mounts [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Encoding URL Path Segments in Go\nDESCRIPTION: Shows the usage of the urlize function to convert strings into URL-friendly format. This function replaces spaces with hyphens and removes special characters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/_index.md#2025-04-08_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{ $title := \"The World's #1 Watch Company\" }}\n{{ $url := printf \"https://example.org/%s\" ($title | urlize) }}\n\n<!-- Result: https://example.org/the-worlds-1-watch-company -->\n```\n\n----------------------------------------\n\nTITLE: Retrieving LanguageCode in Hugo Templates\nDESCRIPTION: Gets the language code from the site configuration. This will fall back to Lang if not explicitly defined.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Language.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Language.LanguageCode }} → de-DE\n```\n\n----------------------------------------\n\nTITLE: Iterating Over a Slice of Maps in Hugo Templates\nDESCRIPTION: Shows how to iterate over a slice containing dictionaries (maps). Within the range block, map properties can be accessed directly using dot notation on the current context.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/range.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $m := slice\n  (dict \"name\" \"John\" \"age\" 30)\n  (dict \"name\" \"Will\" \"age\" 28)\n  (dict \"name\" \"Joey\" \"age\" 24)\n}}\n{{ range $m }}\n  <p>{{ .name }} is {{ .age }}</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Markdown Code Block Example with Attributes\nDESCRIPTION: An example of a Markdown fenced code block with language specification and attributes for styling and display options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/code-blocks.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n```bash {class=\"my-class\" id=\"my-codeblock\" lineNos=inline tabWidth=2}\ndeclare a=1\necho \"$a\"\nexit\n```\n```\n\n----------------------------------------\n\nTITLE: Getting Values from Hugo Scratch Pad\nDESCRIPTION: Shows how to retrieve a previously set value using the Get method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/NewScratch.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := newScratch }}\n{{ $s.Set \"greeting\" \"Hello\" }}\n{{ $s.Get \"greeting\" }} → Hello\n```\n\n----------------------------------------\n\nTITLE: Setting a Value with hugo.Store in Hugo Templates\nDESCRIPTION: Demonstrates how to set a value for a given key using the Set method of hugo.Store.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/Store.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.Store.Set \"greeting\" \"Hello\" }}\n```\n\n----------------------------------------\n\nTITLE: Converting Hugo Map to YAML using transform.Remarshal\nDESCRIPTION: This snippet demonstrates converting a Hugo map (dictionary) to YAML format. It creates a nested dictionary with string values, another dictionary, and a slice, then converts the entire structure to YAML.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Remarshal.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $m := dict\n  \"a\" \"Hugo rocks!\"\n  \"b\" (dict \"question\" \"What is 6x7?\" \"answer\" 42)\n  \"c\" (slice \"foo\" \"bar\")\n}}\n<pre>{{ transform.Remarshal \"yaml\" $m }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Hugo Documentation Frontmatter\nDESCRIPTION: YAML frontmatter block defining metadata for a Hugo documentation page about template functions. Includes title, link title, and description fields.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/templates/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Template functions\nlinkTitle: templates\ndescription: Use these functions to query the template system.\ncategories: []\nkeywords: []\n---\n```\n\n----------------------------------------\n\nTITLE: Basic Usage Options for Hugo Completion Command\nDESCRIPTION: Command-line options specific to the 'hugo completion' command, showing the help flag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for completion\n```\n\n----------------------------------------\n\nTITLE: HTML Output from Limited Menu Rendering\nDESCRIPTION: The rendered HTML output after applying the ByName sorting and Limit method to the menu. Shows how the first 2 menu items (sorted alphabetically) are rendered as an unordered list.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/Limit.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/about/\">About</a></li>\n  <li><a href=\"/contact\">Contact</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Adding Values with Site.Store\nDESCRIPTION: Shows how to append a value to an existing string using the Add method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Store.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ site.Store.Set \"greeting\" \"Hello\" }}\n{{ site.Store.Add \"greeting\" \"Welcome\" }}\n{{ site.Store.Get \"greeting\" }} → HelloWelcome\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output from Reversed Menu\nDESCRIPTION: The HTML output rendered by Hugo after applying the Reverse method to the menu. Shows the unordered list with menu items sorted in reverse alphabetical order (Services, Contact, About).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/Reverse.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/services/\">Services</a></li>\n  <li><a href=\"/contact\">Contact</a></li>\n  <li><a href=\"/about/\">About</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Sample Output of debug.Dump in Hugo\nDESCRIPTION: This snippet shows a sample output of the debug.Dump function when used on a .Params object. It displays various parameters like date, draft status, tags, and title.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/inspection.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{\n  \"date\": \"2023-11-10T15:10:42-08:00\",\n  \"draft\": false,\n  \"iscjklanguage\": false,\n  \"lastmod\": \"2023-11-10T15:10:42-08:00\",\n  \"publishdate\": \"2023-11-10T15:10:42-08:00\",\n  \"tags\": [\n    \"foo\",\n    \"bar\"\n  ],\n  \"title\": \"My first post\"\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Content Example with Gallery Shortcode\nDESCRIPTION: Example Markdown content showing nested gallery shortcodes within list items, where each gallery contains image references with four-space indentation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/InnerDeindent.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n- Gallery one\n\n    {{</* gallery */>}}\n    ![kitten a](thumbnails/a.jpg)\n    ![kitten b](thumbnails/b.jpg)\n    {{</* /gallery */>}}\n\n- Gallery two\n\n    {{</* gallery */>}}\n    ![kitten c](thumbnails/c.jpg)\n    ![kitten d](thumbnails/d.jpg)\n    {{</* /gallery */>}}\n```\n\n----------------------------------------\n\nTITLE: AbsLangURL Usage Without Leading Slash - Base Domain\nDESCRIPTION: Examples of using absLangURL function with baseURL set to domain root, demonstrating URL generation for paths without leading slashes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/AbsLangURL.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ absLangURL \"\" }}           → https://example.org/en/\n{{ absLangURL \"articles\" }}   → https://example.org/en/articles\n{{ absLangURL \"style.css\" }}  → https://example.org/en/style.css\n```\n\n----------------------------------------\n\nTITLE: Truncating HTML String in Hugo Template\nDESCRIPTION: Demonstrates how to truncate an HTML string while preserving HTML tags using strings.Truncate with safeHTML function. The example shows truncating to 10 characters while maintaining the <em> tags intact.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Truncate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"<em>Keep my HTML</em>\" | safeHTML | truncate 10 }} → <em>Keep my …</em>\n```\n\n----------------------------------------\n\nTITLE: Logging a WARNING with fmt.Warnf in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the warnf function to log a WARNING message in Hugo templates. It shows the usage of format specifiers and variable interpolation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Warnf.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ warnf \"The %q shortcode was unable to find %s. See %s\" .Name $file .Position }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Environment Command Options\nDESCRIPTION: Available options specific to the 'hugo env' command. Currently, it only includes the help flag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_env.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help   help for env\n```\n\n----------------------------------------\n\nTITLE: Setting Info Logging Level in Hugo CLI\nDESCRIPTION: Command to run Hugo with info-level logging, which displays information, warning, and error messages when building a site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/logging.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nhugo --logLevel info\n```\n\n----------------------------------------\n\nTITLE: Using Nested Shortcodes in Hugo Content\nDESCRIPTION: Example of nested shortcode usage in Hugo content files, showing a greeting wrapper shortcode containing a date formatting shortcode.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Parent.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{{</* greeting dateFormat=\"Jan 2, 2006\" */>}}\nWelcome. Today is {{</* now */>}}.\n{{</* /greeting */>}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Primary Language with Multiple Translations in Hugo\nDESCRIPTION: Hugo configuration example showing how to set up multiple languages with their respective content directories, names, and weights.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'en'\n\n[languages]\n[languages.en]\ncontentDir = 'content/en'\nlanguageName = 'English'\nweight = 1\n[languages.fr]\ncontentDir = 'content/fr'\nlanguageName = 'Français'\nweight = 2\n[languages.de]\ncontentDir = 'content/de'\nlanguageName = 'Deutsch'\nweight = 3\n\n```\n\n----------------------------------------\n\nTITLE: Initializing Firebase Project\nDESCRIPTION: Command to initialize a new Firebase project in the Hugo website directory\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-firebase.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nfirebase init\n```\n\n----------------------------------------\n\nTITLE: KeyVals JSON Structure Example\nDESCRIPTION: Shows the resulting JSON structure after creating a KeyVals object with a key and array of values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/KeyVals.md#2025-04-08_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Key\": \"foo\",\n  \"Values\": [\n    \"a\",\n    \"b\",\n    \"c\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Development Environment in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the hugo.IsDevelopment function in Hugo templates. The function returns a boolean value indicating whether the current running environment is set to \"development\".\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/IsDevelopment.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.IsDevelopment }} → true/false\n```\n\n----------------------------------------\n\nTITLE: Advanced JavaScript Build Configuration\nDESCRIPTION: Advanced js.Build configuration example with external dependencies and environment variable definitions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Build.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $externals := slice \"react\" \"react-dom\" }}\n{{ $defines := dict \"process.env.NODE_ENV\" `\"development\"` }}\n\n{{ $opts := dict \"targetPath\" \"main.js\" \"externals\" $externals \"defines\" $defines }}\n{{ $built := resources.Get \"scripts/main.js\" | js.Build $opts }}\n<script src=\"{{ $built.RelPermalink }}\" defer></script>\n```\n\n----------------------------------------\n\nTITLE: Creating a Script in a Group using js.Batch in Hugo\nDESCRIPTION: This snippet demonstrates how to create a script within a group using js.Batch. It sets options for the script, including specifying the resource.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Batch.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with js.Batch \"js/mybatch\" }}\n  {{ with .Group \"mygroup\" }}\n      {{ with .Script \"myscript\" }}\n          {{ .SetOptions (dict \"resource\" (resources.Get \"myscript.js\")) }}\n      {{ end }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Listing Paintings Using GetPage in Hugo Template\nDESCRIPTION: Demonstrates how to use the GetPage method to retrieve and list paintings from a specific section in a Hugo template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/GetPage.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.GetPage \"/works/paintings\" }}\n  <ul>\n    {{ range .Pages }}\n      <li>{{ .Title }} by {{ .Params.artist }}</li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Data Directory Structure Example\nDESCRIPTION: Shows the typical structure of a data directory in Hugo with various file formats\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Data.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndata/\n├── books/\n│   ├── fiction.yaml\n│   └── nonfiction.yaml\n├── films.json\n├── paintings.xml\n└── sculptures.toml\n```\n\n----------------------------------------\n\nTITLE: Using the Limit Method with Hugo Menus\nDESCRIPTION: A template example showing how to sort menu entries by name and limit the output to the first 2 entries. The code uses the ByName method to sort and Limit to restrict the number of items rendered.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/Limit.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main.ByName.Limit 2 }}\n    <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Additional options inherited from parent commands that can be used with 'hugo mod clean', including configuration settings, build environment options, and logging controls.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_clean.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Creating Duration Values in Hugo Templates\nDESCRIPTION: Demonstrates how to create a time.Duration value representing 24 hours and display it in seconds. The example shows both creating the duration and formatting it using printf.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/time/Duration.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $duration := time.Duration \"hour\" 24 }}\n{{ printf \"There are %.0f seconds in one day.\" $duration.Seconds }}\n```\n\nLANGUAGE: text\nCODE:\n```\nThere are 86400 seconds in one day.\n```\n\n----------------------------------------\n\nTITLE: Enabling ZSH Autocompletion\nDESCRIPTION: Command to enable shell completion in ZSH environment by adding compinit to .zshrc file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_zsh.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\necho \"autoload -U compinit; compinit\" >> ~/.zshrc\n```\n\n----------------------------------------\n\nTITLE: Go Code Highlighting Example\nDESCRIPTION: Demonstrates highlighting Go code with line numbers and highlighted lines using the highlight shortcode.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/highlight.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{</* highlight go \"linenos=inline, hl_lines=3 6-8, style=emacs\" */>}}\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    for i := 0; i < 3; i++ {\n        fmt.Println(\"Value of i:\", i)\n    }\n}\n{{</* /highlight */>}}\n```\n\n----------------------------------------\n\nTITLE: Using fmt.Printf with safeHTMLAttr in Hugo Templates\nDESCRIPTION: This snippet illustrates how to combine fmt.Printf with the safeHTMLAttr function to safely generate HTML attribute content in a Hugo template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Printf.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $desc := \"Eat at Joe's\" }}\n<meta name=\"description\" {{ printf \"content=%q\" $desc | safeHTMLAttr }}>\n```\n\n----------------------------------------\n\nTITLE: Basic GoAT Diagram Example\nDESCRIPTION: Shows several basic tree and node structures in GoAT ASCII diagram format. This example demonstrates simple tree layouts and connections between nodes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/diagrams.md#2025-04-08_snippet_7\n\nLANGUAGE: goat\nCODE:\n```\n      .               .                .               .--- 1          .-- 1     / 1\n     / \\              |                |           .---+            .-+         +\n    /   \\         .---+---.         .--+--.        |   '--- 2      |   '-- 2   / \\ 2\n   +     +        |       |        |       |    ---+            ---+          +\n  / \\   / \\     .-+-.   .-+-.     .+.     .+.      |   .--- 3      |   .-- 3   \\ / 3\n /   \\ /   \\    |   |   |   |    |   |   |   |     '---+            '-+         +\n 1   2 3   4    1   2   3   4    1   2   3   4         '--- 4          '-- 4     \\ 4\n```\n\n----------------------------------------\n\nTITLE: Processing Emoji Shortcodes in Hugo Templates\nDESCRIPTION: Example of how to process an emoji shortcode from within a Hugo template using the RenderString method on a Page object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"Hello! :wave:\" | .RenderString }}\n```\n\n----------------------------------------\n\nTITLE: Deleting Keys with hugo.Store in Hugo Templates\nDESCRIPTION: Demonstrates how to remove a key and its associated value from hugo.Store using the Delete method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/Store.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.Store.Set \"greeting\" \"Hello\" }}\n{{ hugo.Store.Delete \"greeting\" }}\n```\n\n----------------------------------------\n\nTITLE: Building and Deploying to Firebase\nDESCRIPTION: Command to build the Hugo site and deploy it to Firebase hosting in one step\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-firebase.md#2025-04-08_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nhugo && firebase deploy\n```\n\n----------------------------------------\n\nTITLE: Hugo Version Command Inherited Options\nDESCRIPTION: Options inherited from parent commands that can be used with the version command, including configuration, build, and environment settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_version.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Counting Map Elements with len Function in Hugo\nDESCRIPTION: Illustrates the use of the 'len' function to count the number of key-value pairs in a map within Hugo templates. Examples include a map with elements and an empty map.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/len.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ dict \"a\" 1 \"b\" 2  | len }} → 2\n{{ dict | len }} → 0\n```\n\n----------------------------------------\n\nTITLE: Creating a PostCSS Configuration File\nDESCRIPTION: JavaScript configuration file for PostCSS that specifies which plugins to use, in this case configuring Autoprefixer to add vendor prefixes to CSS rules.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/PostCSS.md#2025-04-08_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n};\n```\n\n----------------------------------------\n\nTITLE: Using Global Page Function in Hugo Templates\nDESCRIPTION: Shows how to access page parameters using the global page function when a Page object is not in context.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/global/page.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ page.Params.foo }}\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Runner in a Group using js.Batch in Hugo\nDESCRIPTION: This snippet demonstrates how to set up a runner within a group using js.Batch. It sets options for the runner, including specifying the resource.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Batch.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with js.Batch \"js/mybatch\" }}\n  {{ with .Group \"mygroup\" }}\n      {{ with .Runner \"myrunner\" }}\n          {{ .SetOptions (dict \"resource\" (resources.Get \"myrunner.js\")) }}\n      {{ end }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing YouTube Privacy Settings in Hugo Templates\nDESCRIPTION: Demonstrates how to access the YouTube privacy configuration from a Hugo template. Note that identifiers must be capitalized in the template syntax.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Config.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Config.Privacy.YouTube.Disable }} → true\n```\n\n----------------------------------------\n\nTITLE: Using Site.RegularPages to Iterate Through Regular Pages in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the RegularPages method to iterate through all regular pages on a site using the default sort order. It creates a heading with a link for each page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/RegularPages.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Site.RegularPages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Parameters with Special Characters\nDESCRIPTION: Example of accessing page parameters with non-identifier characters like hyphens using the index function. Shows how to work with parameter keys that cannot be accessed via dot notation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_30\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ index .Params \"key-with-hyphens\" }} → must use index function\n```\n\n----------------------------------------\n\nTITLE: Simple JavaScript Build Example\nDESCRIPTION: Basic example of using js.Build to process a JavaScript file in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Build.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $built := resources.Get \"js/index.js\" | js.Build \"main.js\" }}\n```\n\n----------------------------------------\n\nTITLE: Page Resource Title Method Without Front Matter\nDESCRIPTION: Demonstrates using the Title method with a page resource that has no title defined in front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Title.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Resources.Get \"Sunrise in Bryce Canyon.jpg\" }}\n  {{ .Title }} → images/Sunrise in Bryce Canyon.jpg\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating a Link to a Taxonomy Term Page with urlize\nDESCRIPTION: A Hugo template example showing how to use the urlize function to generate a link to a taxonomy term page by transforming a term string into a URL-friendly format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/urls/URLize.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $taxonomy := \"authors\" }}\n{{ $term := \"Victor Hugo\" }}\n{{ with index .Site.Taxonomies $taxonomy (urlize $term) }}\n  <a href=\"{{ .Page.RelPermalink }}\">{{ .Page.LinkTitle }}</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Comparing Different Data Types with compare.Gt in Hugo Templates\nDESCRIPTION: Examples showing how the compare.Gt function can be used with different data types including strings, dates, and boolean values. The function applies appropriate comparison logic based on the types.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/compare/Gt.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ gt \"ab\" \"a\" }} → true\n{{ gt time.Now (time.AsTime \"1964-12-30\") }} → true\n{{ gt true false }} → true\n```\n\n----------------------------------------\n\nTITLE: Creating Manual Summary with Divider in Hugo Content\nDESCRIPTION: Demonstrates how to create a manual summary using the <!--more--> divider in Hugo content files. The content before the divider becomes the summary.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/summaries.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n+++\ntitle: 'Example'\ndate: 2024-05-26T09:10:33-07:00\n+++\n\nThis is the first paragraph.\n\n<!--more-->\n\nThis is the second paragraph.\n```\n\n----------------------------------------\n\nTITLE: Hugo Shortcode for Deprecation Notice\nDESCRIPTION: Shortcode markup indicating deprecation notice for DisqusShortname, directing users to use Site.Config.Services.Disqus.Shortname instead.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/DisqusShortname.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< deprecated-in 0.120.0 >}}\nUse [`Site.Config.Services.Disqus.Shortname`] instead.\n\n[`Site.Config.Services.Disqus.Shortname`]: /methods/site/config/\n{{< /deprecated-in >}}\n```\n\n----------------------------------------\n\nTITLE: Hugo Config Command Options in Shell\nDESCRIPTION: Lists the available options for the 'hugo config' command. These options allow users to customize the output and specify various configuration parameters such as baseURL, content directory, and output format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_config.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n  -b, --baseURL string           hostname (and path) to the root, e.g. https://spf13.com/\n      --cacheDir string          filesystem path to cache directory\n  -c, --contentDir string        filesystem path to content directory\n      --format string            preferred file format (toml, yaml or json) (default \"toml\")\n  -h, --help                     help for config\n      --lang string              the language to display config for. Defaults to the first language defined.\n      --printZero                include config options with zero values (e.g. false, 0, \"\") in the output\n      --renderSegments strings   named segments to render (configured in the segments config)\n  -t, --theme strings            themes to use (located in /themes/THEMENAME/)\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended on Debian and Derivatives\nDESCRIPTION: Command to install the extended edition of Hugo on Debian-based distributions (Ubuntu, Linux Mint, Pop!_OS, etc.) using apt package manager.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nsudo apt install hugo\n```\n\n----------------------------------------\n\nTITLE: Hugo New Site Command Options\nDESCRIPTION: These are the specific options available for the 'hugo new site' command. They allow forcing initialization in a non-empty directory and setting the preferred file format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_new_site.md#2025-04-08_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n  -f, --force           init inside non-empty directory\n      --format string   preferred file format (toml, yaml or json) (default \"toml\")\n  -h, --help            help for site\n```\n\n----------------------------------------\n\nTITLE: Accessing Page CSV Resource with transform.Unmarshal in Hugo\nDESCRIPTION: Shows an alternative approach to access a page CSV resource using Resources.Get method and transform.Unmarshal function in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetCSV.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := dict }}\n{{ $p := \"pets.csv\" }}\n{{ with .Resources.Get $p }}\n  {{ $opts := dict \"delimiter\" \",\" }}\n  {{ $data = . | transform.Unmarshal $opts }}\n{{ else }}\n  {{ errorf \"Unable to get resource %q\" $p }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Tailwind CSS Entry File\nDESCRIPTION: CSS entry file configuration that imports Tailwind CSS and sources the Hugo stats file\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/TailwindCSS.md#2025-04-08_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n@import \"tailwindcss\";\n@source \"hugo_stats.json\";\n```\n\n----------------------------------------\n\nTITLE: Hugo Shortcode Deprecation Notice\nDESCRIPTION: Hugo shortcode markup showing deprecation notice for the Scratch method, introduced in version 0.139.0, with a link to the recommended Store method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Scratch.md#2025-04-08_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{< deprecated-in 0.139.0 >}}\nUse the [`SHORTCODE.Store`] method instead.\n\nThis is a soft deprecation. This method will be removed in a future release, but the removal date has not been established. Although Hugo will not emit a warning if you continue to use this method, you should begin using `SHORTCODE.Store` as soon as possible.\n\nBeginning with v0.139.0 the `SHORTCODE.Scratch` method is aliased to `SHORTCODE.Store`.\n\n[`SHORTCODE.Store`]: /methods/shortcode/store/\n{{< /deprecated-in >}}\n```\n\n----------------------------------------\n\nTITLE: Accessing German Language Prefix\nDESCRIPTION: Shows how to retrieve the language prefix when visiting the German language site with defaultContentLanguageInSubdir set to false. Returns an empty string as German is the default language.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/LanguagePrefix.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.LanguagePrefix }} → \"\"\n```\n\n----------------------------------------\n\nTITLE: Chaining Syntax for Taxonomy Terms in Hugo\nDESCRIPTION: Shows the alternative chaining syntax for accessing taxonomy terms that are valid identifiers.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Get.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $weightedPages := $taxonomyObject.suspense }}\n```\n\n----------------------------------------\n\nTITLE: Extracting Minutes from a Time.Time Value in Hugo Templates\nDESCRIPTION: This example demonstrates how to extract the minute component from a time.Time value using the Minute method. It first creates a time.Time object using time.AsTime function with an ISO 8601 timestamp, then accesses the minute component which returns 44.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Minute.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.Minute }} → 44\n```\n\n----------------------------------------\n\nTITLE: Setting Page Parameters in Hugo Content\nDESCRIPTION: Example of setting page-level parameters in content frontmatter to override site-level parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Param.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Example'\ndate = 2023-01-01\ndraft = false\n[params]\ndisplay_toc = false\n```\n\n----------------------------------------\n\nTITLE: Displaying Content Structure Example in Hugo\nDESCRIPTION: Shows a typical Hugo content folder structure with weighted pages that will be used to demonstrate navigation behavior.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/pages/next-and-prev.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── pages/\n│   ├── _index.md\n│   ├── page-1.md   <-- front matter: weight = 10\n│   ├── page-2.md   <-- front matter: weight = 20\n│   └── page-3.md   <-- front matter: weight = 30\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Rendered RSS Link HTML Output\nDESCRIPTION: Shows the rendered HTML output when the previous template code is processed on the site's home page, demonstrating the final link structure.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/OutputFormats.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/index.xml\">RSS Feed</a>\n```\n\n----------------------------------------\n\nTITLE: Content Directory Structure\nDESCRIPTION: Example of content organization showing how files are structured with taxonomy assignments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Taxonomies.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── books/\n│   ├── and-then-there-were-none.md --> genres: suspense\n│   ├── death-on-the-nile.md        --> genres: suspense\n│   └── jamaica-inn.md              --> genres: suspense, romance\n│   └── pride-and-prejudice.md      --> genres: romance\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Hugo Build Statistics Output\nDESCRIPTION: Terminal output showing Hugo build statistics for Digital.gov website, demonstrating the site's scale with ~10,000 pages built in 32 seconds.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/showcase/digitalgov/index.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\n                   |  EN\n-------------------+-------\n  Pages            | 7973\n  Paginator pages  |  600\n  Non-page files   |  108\n  Static files     |  851\n  Processed images |    0\n  Aliases          | 1381\n  Sitemaps         |    1\n  Cleaned          |    0\n\nBuilt in 32.427 seconds\n```\n\n----------------------------------------\n\nTITLE: Rendering Markdown Resource Content in Hugo\nDESCRIPTION: Template code to render the content of a markdown snippet resource.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/page-resources.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Resources.Get \"snippets/text.md\" }}\n  {{ .Content }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using IsMultiLingual Function in Hugo Templates\nDESCRIPTION: The IsMultiLingual function reports whether there are two or more configured languages in a Hugo site. It returns a boolean value. This function is accessed through the SITE object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/IsMultiLingual.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nSITE.IsMultiLingual\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended via Snap on Linux\nDESCRIPTION: Command to install the extended edition of Hugo using Snap package manager, which provides automatic updates and runs in isolation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nsudo snap install hugo\n```\n\n----------------------------------------\n\nTITLE: Hugo Module NPM Help Options\nDESCRIPTION: Displays the available help options specific to the npm command.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_npm.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for npm\n```\n\n----------------------------------------\n\nTITLE: Generating SHA256 Hash in Hugo Templates\nDESCRIPTION: Demonstrates how to use the sha256 function in Hugo templates to generate a SHA256 checksum of a string input. The function takes the input string 'Hello world' and returns its SHA256 hash as a hexadecimal string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/crypto/SHA256.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ sha256 \"Hello world\" }} → 64ec88ca00b268e5ba1a35678a1b5316d212f4f366b2477232534a8aeca37f3c\n```\n\n----------------------------------------\n\nTITLE: Processing CSS with Tailwind in Hugo Template\nDESCRIPTION: Partial template for processing CSS with Tailwind CSS CLI, including production and development configurations\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/TailwindCSS.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with (templates.Defer (dict \"key\" \"global\")) }}\n  {{ with resources.Get \"css/main.css\" }}\n    {{ $opts := dict\n      \"minify\" hugo.IsProduction\n      \"inlineImports\" true\n    }}\n    {{ with . | css.TailwindCSS $opts }}\n      {{ if hugo.IsProduction }}\n        {{ with . | fingerprint }}\n          <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\" integrity=\"{{ .Data.Integrity }}\" crossorigin=\"anonymous\">\n        {{ end }}\n      {{ else }}\n        <link rel=\"stylesheet\" href=\"{{ .RelPermalink }}\">\n      {{ end }}\n    {{ end }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Browser-Rendered Output of TOML to JSON Conversion\nDESCRIPTION: This shows how the HTML output from the TOML to JSON conversion appears when rendered in a browser. The HTML entities are displayed as actual quotes and readable JSON.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/Remarshal.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n{\n   \"baseURL\": \"https://example.org/\",\n   \"languageCode\": \"en-US\",\n   \"title\": \"ABC Widgets\"\n}\n```\n\n----------------------------------------\n\nTITLE: Tags Taxonomy Listing\nDESCRIPTION: Template for displaying all terms in the tags taxonomy with counts.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Taxonomies.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Taxonomies.tags }}\n    <li><a href=\"{{ .Page.Permalink }}\">{{ .Page.Title }}</a> {{ .Count }}</li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output Example\nDESCRIPTION: Shows the final HTML output after Hugo processes the taxonomy template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Get.md#2025-04-08_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<h2><a href=\"/books/jamaica-inn/\">Jamaica inn</a></h2>\n<h2><a href=\"/books/death-on-the-nile/\">Death on the nile</a></h2>\n<h2><a href=\"/books/and-then-there-were-none/\">And then there were none</a></h2>\n```\n\n----------------------------------------\n\nTITLE: Enabling Template Metrics in Hugo\nDESCRIPTION: Command to enable template metrics analysis in Hugo to identify slow templates and caching opportunities. This helps developers understand which templates consume the most processing time during site builds.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/performance.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nhugo --templateMetrics --templateMetricsHints\n```\n\n----------------------------------------\n\nTITLE: Gallery Shortcode Using Inner Method\nDESCRIPTION: Hugo shortcode implementation using the Inner method, which preserves indentation and results in unwanted code block rendering.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/InnerDeindent.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<div class=\"gallery\">\n  {{ .Inner | strings.TrimSpace | .Page.RenderString }}\n</div>\n```\n\n----------------------------------------\n\nTITLE: Accessing Disqus Shortname in Hugo Template\nDESCRIPTION: Shows how to access the configured Disqus shortname within a Hugo template. This is used to set up the Disqus commenting system.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/embedded.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Config.Services.Disqus.Shortname }}\n```\n\n----------------------------------------\n\nTITLE: Capturing a Taxonomy Object in Taxonomy Template\nDESCRIPTION: Go template code to capture the Taxonomy object when specifically rendering a taxonomy page. Uses the Data.Terms method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/taxonomy/get-a-taxonomy-object.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $taxonomyObject := .Data.Terms }}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of WeightedPages Method\nDESCRIPTION: Returns a slice of weighted pages assigned to the term, sorted by taxonomic weight.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/taxonomy/ordered-taxonomy-element-methods.md#2025-04-08_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nWeightedPages() page.WeightedPages\n```\n\n----------------------------------------\n\nTITLE: Date Comparison with String Dates (YAML/JSON)\nDESCRIPTION: Shows a workaround for comparing custom front matter dates from YAML/JSON (which are strings) by using range and conditional filtering.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_13\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $events := where .Site.RegularPages \"Type\" \"events\" }}\n{{ $futureEvents := slice }}\n{{ range $events }}\n  {{ if gt (time.AsTime .Params.eventDate) now }}\n    {{ $futureEvents = $futureEvents | append . }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Installing Standard Edition of Hugo using Go\nDESCRIPTION: This command installs the standard edition of Hugo using Go's package management system. It fetches the latest version of Hugo from the official GitHub repository.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/installation/04-build-from-source.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo install github.com/gohugoio/hugo@latest\n```\n\n----------------------------------------\n\nTITLE: Running the Hugo Mod Graph Command\nDESCRIPTION: The basic syntax for the 'hugo mod graph' command, which prints a module dependency graph showing information about module status such as whether modules are disabled or vendored.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_graph.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo mod graph [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Filtering with Complement Function - Example 2\nDESCRIPTION: Another example of using collections.Complement to filter pages with undefined exclude parameter\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_25\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $p1 := where .Site.RegularPages \"Params.exclude\" \"ne\" false }}\n{{ $p2 := where .Site.RegularPages \"Params.exclude\" \"eq\" nil }}\n<ul>\n  {{ range $p1 | complement $p2 }}\n    <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n  {{ end }}\n</ul>\n```\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/posts/post-1/\">Post 2</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Creating Image Colorize Filter in Hugo Templates\nDESCRIPTION: Creates an image filter that applies colorization effects. Takes three parameters: hue (0-360), saturation (0-100), and effect percentage (0-100). The hue represents the angle on the color wheel, saturation controls color intensity, and percentage determines the strength of the effect.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Colorize.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Colorize 180 50 20 }}\n```\n\n----------------------------------------\n\nTITLE: Page Resource Directory Structure Example\nDESCRIPTION: Shows the directory structure for a page resource example.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Title.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── example/\n│   ├── images/\n│   │   └── a.jpg\n│   └── index.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Displaying Hugo Directory Structure for Page Bundles\nDESCRIPTION: Shows the directory structure example illustrating different types of page bundles in Hugo, including leaf bundles and branch bundles with their associated resources.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/BundleType.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── films/\n│   ├── film-1/\n│   │   ├── a.jpg\n│   │   └── index.md  <-- leaf bundle\n│   ├── _index.md     <-- branch bundle\n│   ├── b.jpg\n│   ├── film-2.md\n│   └── film-3.md\n└── _index.md         <-- branch bundle\n```\n\n----------------------------------------\n\nTITLE: Retrieving HTTP Response Data from Remote Resources in Hugo Templates\nDESCRIPTION: Demonstrates how to fetch a remote resource and access its HTTP response data including content length, type, headers, and status information. Uses error handling with try function and shows various Data method properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Data.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $url := \"https://example.org/images/a.jpg\" }}\n{{ $opts := dict \"responseHeaders\" (slice \"Server\") }}\n{{ with try (resources.GetRemote $url) }}\n  {{ with .Err }}\n    {{ errorf \"%s\" . }}\n  {{ else with .Value }}\n    {{ with .Data }}\n      {{ .ContentLength }} → 42764\n      {{ .ContentType }} → image/jpeg\n      {{ .Headers }} → map[Server:[Netlify]]\n      {{ .Status }} → 200 OK\n      {{ .StatusCode }} → 200\n      {{ .TransferEncoding }} → []\n    {{ end }}\n  {{ else }}\n    {{ errorf \"Unable to get remote resource %q\" $url }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Home Page Menu HTML Output\nDESCRIPTION: Example HTML output when viewing the home page, showing the active state for the home menu item.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Menus.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"menu\">\n  <a class=\"active\" aria-current=\"page\" href=\"/\">Home</a>\n  <a href=\"/books/\">Books</a>\n  <a href=\"/films/\">Films</a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Adding Headers to CSV Request in Hugo\nDESCRIPTION: Demonstrates how to add headers to the CSV request using an options map with the data.GetCSV function in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetCSV.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict \"Authorization\" \"Bearer abcd\" }}\n{{ $data := getCSV \",\" \"https://example.org/pets.csv\" $opts }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Permalinks in Hugo\nDESCRIPTION: This snippet demonstrates how to set up custom permalinks for the 'posts' section in Hugo using time-based variables. It uses Go's time package layout string components to format the date in the URL.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/permalink-tokens.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npermalinks:\n  posts: /:06/:1/:2/:title/\n```\n\n----------------------------------------\n\nTITLE: Alternative Default Site Access\nDESCRIPTION: Alternative Hugo template code showing how to access the default language site using array indexing.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Sites.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with index .Site.Sites 0 }}\n  <a href=\"{{ .Home.Permalink }}\">{{ .Title }}</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Content Structure Example for Multilingual Site\nDESCRIPTION: Illustrates a typical content structure for a multilingual Hugo site with English and Spanish content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/permalinks.md#2025-04-08_snippet_6\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── en/\n│   ├── books/\n│   │   ├── les-miserables.md\n│   │   └── the-hunchback-of-notre-dame.md\n│   └── _index.md\n└── es/\n    ├── books/\n    │   ├── les-miserables.md\n    │   └── the-hunchback-of-notre-dame.md\n    └── _index.md\n```\n\n----------------------------------------\n\nTITLE: Boolean Comparison Examples\nDESCRIPTION: Demonstrates how to compare boolean values using equality and inequality operators with collections.Where.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $books := where site.RegularPages \"Section\" \"eq\" \"books\" }}\n\n{{ $pages := where $books \"Params.fiction\" \"eq\" true }}\n{{ $pages := where $books \"Params.fiction\" \"eq\" false }}\n{{ $pages := where $books \"Params.fiction\" \"ne\" true }}\n{{ $pages := where $books \"Params.fiction\" \"ne\" false }}\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for PowerShell Autocompletion in Hugo\nDESCRIPTION: This snippet lists the options inherited from parent commands for the 'hugo completion powershell' command. These options include various configuration settings and build parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_powershell.md#2025-04-08_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Using the Hugo Mod Clean Command\nDESCRIPTION: The basic syntax for using the 'hugo mod clean' command to delete the Hugo Module cache for the current project. You can specify optional flags and arguments to customize the behavior.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_clean.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo mod clean [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Setting Map Values in Hugo Scratch Pad\nDESCRIPTION: Shows how to set values in a map using SetInMap method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/NewScratch.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := newScratch }}\n{{ $s.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ $s.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n{{ $s.Get \"greetings\" }} → map[english:Hello french:Bonjour]\n```\n\n----------------------------------------\n\nTITLE: Creating a Process Image Filter for Background Color in Hugo\nDESCRIPTION: Creates a Process image filter to override the default background color when applying masks to non-transparent image formats like JPEG.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Mask.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Process \"#00ff00\" }}\n```\n\n----------------------------------------\n\nTITLE: Remote Resource Title Method Usage\nDESCRIPTION: Shows how to use the Title method with a remote resource, which returns a hashed filename.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Title.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.GetRemote \"https://example.org/images/a.jpg\" }}\n  {{ .Title }} → /a_18432433023265451104.jpg\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Setting ExpiryDate in Hugo Front Matter\nDESCRIPTION: Example of how to set the expiryDate in a Hugo content file's front matter, which controls when a page should be considered expired.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/ExpiryDate.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Article 1'\nexpiryDate = 2024-10-19T00:32:13-07:00\n```\n\n----------------------------------------\n\nTITLE: Concise Image Rendering with Skip on Error in Hugo\nDESCRIPTION: Provides a more concise way to render an image in a Hugo template, skipping if the resource is not found.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Resources.GetMatch \"sunset.jpg\" }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of strings.TrimRight in Hugo Templates\nDESCRIPTION: Demonstrates removing trailing occurrences of the character 'a' from the string 'abba', resulting in 'abb'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/TrimRight.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.TrimRight \"a\" \"abba\" }} → abb\n```\n\n----------------------------------------\n\nTITLE: Defining Required Front Matter Fields\nDESCRIPTION: Shows the minimum required front matter fields for Hugo documentation pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ntitle: The title\ndescription: The description\ncategories: []\nkeywords: []\n```\n\n----------------------------------------\n\nTITLE: Using 'include' Shortcode in Hugo Markdown\nDESCRIPTION: This snippet demonstrates how to use the 'include' shortcode in a Hugo Markdown file. It includes the content of '/posts/p2' within the current page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/render-hooks/pageinner.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{%/* include \"/posts/p2\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Time.Now Output Format Example\nDESCRIPTION: Shows the string representation output of the time.Now function in the default format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/time/Now.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n2023-10-15 12:59:28.337140706 -0700 PDT m=+0.041752605\n```\n\n----------------------------------------\n\nTITLE: Debug Taxonomy Structure in Hugo\nDESCRIPTION: Demonstrates how to inspect the data structure of an alphabetically sorted taxonomy using debug.Dump.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/Alphabetical.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre>{{ debug.Dump $taxonomyObject.Alphabetical }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Displaying Inherited Options for Hugo List Command\nDESCRIPTION: Lists the options inherited from parent commands for the 'hugo list' command. These options include settings for clock, config file, destination, environment, and various other build and rendering options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Hugo List Drafts Command\nDESCRIPTION: Options inherited from parent commands that can be used with 'hugo list drafts'. These include various configuration and build options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_drafts.md#2025-04-08_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Creating an Empty Page Collection with collections.Last in Hugo\nDESCRIPTION: This snippet shows how to create an empty page collection by setting N to zero in the collections.Last function. This can be useful when you need an initialized but empty collection for further processing.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Last.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $emptyPageCollection := last 0 .Pages }}\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Image Resources Using resources.ByType in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the resources.ByType function to iterate over all image resources and create img tags with their respective attributes. It retrieves global image resources and uses their RelPermalink, Width, and Height properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/ByType.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range resources.ByType \"image\" }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: JSON Representation of Basic Dictionary in Hugo\nDESCRIPTION: This snippet shows the JSON representation of the dictionary created in the previous example. It demonstrates the data structure produced by the dict function with two key-value pairs.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Dictionary.md#2025-04-08_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"a\": 1,\n  \"b\": 2\n}\n```\n\n----------------------------------------\n\nTITLE: Formatting Hugo Page Publish Date\nDESCRIPTION: Demonstrates how to format a page's publish date using Hugo's time.Format function with the date_medium format specification.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/PublishDate.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .PublishDate | time.Format \":date_medium\" }}\n```\n\n----------------------------------------\n\nTITLE: Using Targeted Cascade in Hugo Front Matter\nDESCRIPTION: Demonstrates how to cascade values only to specific pages using the target keyword and path patterns.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/front-matter.md#2025-04-08_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Home'\n[cascade.params]\ncolor = 'red'\n[cascade.target]\npath = '{/articles,/articles/**}'\n```\n\n----------------------------------------\n\nTITLE: Setting WebP Image Quality in Hugo\nDESCRIPTION: Controls the quality of a WebP image by using the 'q' parameter set to 50. Lower values produce smaller files with reduced quality.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_18\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image.Resize \"600x webp q50\" }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Server Output\nDESCRIPTION: Displays the typical output when starting the Hugo development server, showing the local site URL.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/usage.md#2025-04-08_snippet_7\n\nLANGUAGE: text\nCODE:\n```\nWeb Server is available at http://localhost:1313/ \n```\n\n----------------------------------------\n\nTITLE: Setting Values in Hugo Store\nDESCRIPTION: Demonstrates how to set a value for a given key in the Store using the Set method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/store-methods.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Store.Set \"greeting\" \"Hello\" }}\n```\n\n----------------------------------------\n\nTITLE: Multiplying Numbers Using math.Mul in Hugo Templates\nDESCRIPTION: Demonstrates how to use the math.Mul function to multiply multiple numbers together in Hugo templates. In this example, it multiplies 12, 3, and 2 to produce 72 as the result.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Mul.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ mul 12 3 2 }} → 72\n```\n\n----------------------------------------\n\nTITLE: Configuring PostCSS for Hugo\nDESCRIPTION: Sets up a PostCSS configuration file for Hugo, including PurgeCSS and Autoprefixer plugins. PurgeCSS is only applied in non-development environments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/PostProcess.md#2025-04-08_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nconst autoprefixer = require('autoprefixer');\nconst purgeCSSPlugin = require('@fullhuman/postcss-purgecss').default;\n\nconst purgecss = purgeCSSPlugin({\n  content: ['./hugo_stats.json'],\n  defaultExtractor: content => {\n    const els = JSON.parse(content).htmlElements;\n    return [\n      ...(els.tags || []),\n      ...(els.classes || []),\n      ...(els.ids || []),\n    ];\n  },\n  // https://purgecss.com/safelisting.html\n  safelist: []\n});\n\nmodule.exports = {\n  plugins: [\n    process.env.HUGO_ENVIRONMENT !== 'development' ? purgecss : null,\n    autoprefixer,\n  ]\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Page Front Matter in TOML\nDESCRIPTION: Example front matter configuration for a book page in TOML format, defining properties like title, author, publication year and ISBN.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Page.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Les Misérables'\nauthor = 'Victor Hugo'\npublication_year = 1862\nisbn = '978-0451419439'\n```\n\n----------------------------------------\n\nTITLE: Hugo List Published Command Syntax\nDESCRIPTION: The basic syntax for the 'hugo list published' command which lists content that is not draft, future, or expired.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_published.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo list published [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Hugo Environment Inherited Options\nDESCRIPTION: Options inherited from parent commands that can be used with 'hugo env'. These include various configuration and build settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_env.md#2025-04-08_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Finding Unique Elements with collections.Complement in Hugo\nDESCRIPTION: This snippet demonstrates how to use the collections.Complement function to find elements in one slice that are not present in other slices.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Complement.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $c1 := slice 3 }}\n{{ $c2 := slice 4 5 }}\n{{ $c3 := slice 1 2 3 4 5 }}\n\n{{ complement $c1 $c2 $c3 }} → [1 2]\n```\n\n----------------------------------------\n\nTITLE: Configuring Module Mounts in Hugo\nDESCRIPTION: Configuration example for mounting the static directory to the assets directory in Hugo, necessary when using resources from the static directory with the figure shortcode.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/figure.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n[[module.mounts]]\nsource = 'assets'\ntarget = 'assets'\n\n[[module.mounts]]\nsource = 'static'\ntarget = 'assets'\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sitemap Priority in Hugo Templates\nDESCRIPTION: Illustrates how to access the Priority property of a page's Sitemap configuration in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sitemap.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Sitemap.Priority }}\n```\n\n----------------------------------------\n\nTITLE: Mounting Resources in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the Mount method to mount resources from one location to another, which is useful in js.Batch contexts.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Resources.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $common := resources.Match \"/js/headlessui/*.*\" }}\n{{ $importContext := (slice $.Page ($common.Mount \"/js/headlessui\" \".\")) }}\n```\n\n----------------------------------------\n\nTITLE: Basic Build Options Configuration in TOML\nDESCRIPTION: Default build configuration options for Hugo pages, defining list behavior, resource publishing, and rendering rules.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/build-options.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[build]\nlist = 'always'\npublishResources = true\nrender = 'always'\n```\n\n----------------------------------------\n\nTITLE: Specifying Resampling Filter for Image Resizing in Hugo\nDESCRIPTION: Uses the Lanczos resampling filter when resizing an image, which provides high-quality results for photographic images. Different filters offer trade-offs between quality and processing speed.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_21\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image.Resize \"600x400 Lanczos\" }}\n```\n\n----------------------------------------\n\nTITLE: Basic String Replacement in Hugo Templates\nDESCRIPTION: Demonstrates basic string replacement using strings.Replace function to replace 'Robin' with 'Catwoman' in a string variable.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Replace.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := \"Batman and Robin\" }}\n{{ replace $s \"Robin\" \"Catwoman\" }} → Batman and Catwoman\n```\n\n----------------------------------------\n\nTITLE: Adding String Values in Hugo Store\nDESCRIPTION: Demonstrates string concatenation using the Add method with existing values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/store-methods.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Store.Set \"greeting\" \"Hello\" }}\n{{ .Store.Add \"greeting\" \"Welcome\" }}\n{{ .Store.Get \"greeting\" }} → HelloWelcome\n```\n\n----------------------------------------\n\nTITLE: Leaf Bundle Archetype Directory Structure\nDESCRIPTION: Example directory structure for a leaf bundle archetype, showing how to organize files to create complex content structures in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_8\n\nLANGUAGE: text\nCODE:\n```\narchetypes/\n├── galleries/\n│   ├── images/\n│   │   └── .gitkeep\n│   └── index.md      <-- same format as default.md\n└── default.md\n```\n\n----------------------------------------\n\nTITLE: Example Image Filter Implementation\nDESCRIPTION: Practical example of implementing a grayscale filter on an image resource with width and height attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Filter.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Filter images.Grayscale }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Basic Hugo Module NPM Command Syntax\nDESCRIPTION: Shows the basic syntax for executing the hugo mod npm command with optional commands and flags.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_npm.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo mod npm [command] [flags]\n```\n\n----------------------------------------\n\nTITLE: HTML Output from Nested Shortcodes in Hugo\nDESCRIPTION: The resulting HTML rendered from the nested shortcodes example. Shows how the first two images inherit the gallery's class while the third standalone image does not.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/shortcode.md#2025-04-08_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"content-gallery\">\n  <img src=\"/images/one.jpg\" class=\"content-gallery-image\">\n  <img src=\"/images/two.jpg\" class=\"content-gallery-image\">\n</div>\n<img src=\"/images/three.jpg\">\n```\n\n----------------------------------------\n\nTITLE: Using Audio Shortcode in Content\nDESCRIPTION: Example of how to call the custom audio shortcode from within markdown content files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/shortcodes.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{</* audio src=/audio/test.mp3 */>}}\n```\n\n----------------------------------------\n\nTITLE: Using Audio Shortcode in Content\nDESCRIPTION: Example of how to call the custom audio shortcode from within markdown content files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/shortcodes.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{</* audio src=/audio/test.mp3 */>}}\n```\n\n----------------------------------------\n\nTITLE: Using param Shortcode in Hugo Markdown Content\nDESCRIPTION: Example demonstrating how to use the param shortcode in a Hugo Markdown file to reference values from the front matter. The example shows a content file that defines color and size parameters, then references the color parameter in the content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/param.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n---\ntitle: Example\ndate: 2025-01-15T23:29:46-08:00\nparams:\n  color: red\n  size: medium\n---\n\nWe found a {{%/* param \"color\" */%}} shirt.\n```\n\n----------------------------------------\n\nTITLE: Executing a Template in Hugo\nDESCRIPTION: Example of how to execute a previously defined template with a pipeline context.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/block.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ template \"name\" pipeline }}\n```\n\n----------------------------------------\n\nTITLE: Counting Occurrences of Heading ID in Hugo Templates\nDESCRIPTION: Shows how to use the Fragments.Identifiers.Count method to count the number of occurrences of a specific heading ID on the page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Fragments.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Fragments.Identifiers.Count \"section-2\" }} → 1\n```\n\n----------------------------------------\n\nTITLE: Headless Page Template Implementation\nDESCRIPTION: Go HTML template for including headless page content and resources in the home page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/build-options.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.GetPage \"/headless\" }}\n  {{ .Content }}\n  {{ range .Resources.ByType \"image\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Converting Octal Inputs to Float in Hugo Templates\nDESCRIPTION: Illustrates the conversion of octal (base 8) numbers to float64 using the float function. It shows both the traditional and the 0o prefix notations.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToFloat.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ float 011 }} → 9 (float64)\n{{ float \"011\" }} → 11 (float64)\n\n{{ float 0o11 }} → 9 (float64)\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages Within Groups by Title in Hugo Templates\nDESCRIPTION: This example demonstrates how to use the GroupByParamDate function to group pages by eventDate, and then sort the pages within each group by their title using the ByTitle method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByParamDate.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByParamDate \"eventDate\" \"January 2006\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages.ByTitle }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Deleting Keys in Hugo Store\nDESCRIPTION: Demonstrates how to remove a key-value pair from the Store using the Delete method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/store-methods.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Store.Set \"greeting\" \"Hello\" }}\n{{ .Store.Delete \"greeting\" }}\n```\n\n----------------------------------------\n\nTITLE: Generated Content Front Matter Example\nDESCRIPTION: Example of front matter automatically generated by Hugo when creating a new post using the default archetype. Shows title formatting and date generation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\ntitle = 'My First Post'\ndate = '2023-08-24T11:49:46-07:00'\ndraft = true\n```\n\n----------------------------------------\n\nTITLE: Member Comparison with 'not in' Operator\nDESCRIPTION: Demonstrates using the 'not in' operator to check if a value is not a member of a slice, excluding pages where a parameter matches any value in the slice.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $fruit := where site.RegularPages \"Section\" \"eq\" \"fruit\" }}\n\n{{ $colors := slice \"red\" \"yellow\" }}\n{{ $pages := where $fruit \"Params.color\" \"not in\" $colors }}\n```\n\n----------------------------------------\n\nTITLE: Generated CSS Output\nDESCRIPTION: The final CSS output after template execution, showing the resolved values from the site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/ExecuteAsTemplate.md#2025-04-08_snippet_2\n\nLANGUAGE: css\nCODE:\n```\nbody {\n  background-color: #fefefe;\n  color: #222;\n}\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for hugo new content Command\nDESCRIPTION: These options are inherited from parent commands and include settings for clock, config file, config directory, destination, environment, vendor paths, log level, build lock, quiet mode, rendering to memory, source path, and themes directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_new_content.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Layout Structure in Hugo\nDESCRIPTION: Example of organizing layout templates for custom page types and layouts in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/lookup-order.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nlayouts/\n└── page/\n    └── contact.html  <-- renders contact.md\n    └── single.html   <-- renders about.md\n```\n\n----------------------------------------\n\nTITLE: Rendering Single Image Resource in Hugo Template\nDESCRIPTION: Template code to render a single image resource with error handling if the resource doesn't exist.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/page-resources.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $path := \"images/a.jpg\" }}\n{{ with .Resources.Get $path }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n{{ else }}\n  {{ errorf \"Unable to get page resource %q\" $path }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Generating QR Code with Text Argument in Hugo\nDESCRIPTION: This snippet demonstrates how to use the QR shortcode in Hugo with a text argument to generate a QR code for a URL.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/qr.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{{</* qr text=\"https://gohugo.io\" /*/>}}\n```\n\n----------------------------------------\n\nTITLE: Configuring URL Redirects in Hugo Server (TOML)\nDESCRIPTION: This snippet shows how to define a simple redirect rule in Hugo's server configuration. It includes options for the source URL pattern, destination, status code, and whether to force the redirect.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/server.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[[redirects]]\nfrom = \"/myspa/**\"\nto = \"/myspa/\"\nstatus = 200\nforce = false\n```\n\n----------------------------------------\n\nTITLE: Retrieving Commit Subject using GitInfo\nDESCRIPTION: Template code to access the subject line of the commit message for the last Git commit of a page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GitInfo.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .GitInfo }}\n  {{ .Subject }} → Add tutorials\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML Blockquote with Attributes in Hugo\nDESCRIPTION: Shows the HTML output when rendering a blockquote with Markdown attributes in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/markdown-attributes.md#2025-04-08_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<blockquote class=\"foo bar\" hidden=\"hidden\">\n  <p>This is a blockquote.</p>\n</blockquote>\n```\n\n----------------------------------------\n\nTITLE: Lang Parameter for Hugo URL Functions\nDESCRIPTION: Defines the lang parameter which specifies the language of the target page. If not provided, the current language is used.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/ref-and-relref-options.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nlang\n: (`string`) The language of the target page. Default is the current language. Optional.\n```\n\n----------------------------------------\n\nTITLE: Reversing Menu Entry Order in Hugo Templates\nDESCRIPTION: Go HTML template code that retrieves the main menu, sorts it by name, and then reverses the sort order with the Reverse method. This creates an unordered list of menu items with links sorted in descending order by name.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu/Reverse.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main.ByName.Reverse }}\n    <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Converting Image Format Without Scaling in Hugo\nDESCRIPTION: Shows how to convert an image to WebP format without changing its dimensions. This uses the original image width and height to maintain the exact size during format conversion.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_17\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Resources.GetMatch \"sunset.jpg\" }}\n  {{ with .Resize (printf \"%dx%d webp\" .Width .Height) }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Converting Date String to Unix Timestamp in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to convert an ISO 8601 date string to a Unix timestamp (seconds since January 1, 1970 UTC) using Hugo's templating functions. First, it creates a time.Time object using time.AsTime, then calls the Unix method to get the timestamp value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/Unix.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.Unix }} → 1674891898\n```\n\n----------------------------------------\n\nTITLE: Hugo Module Tidy Inherited Options\nDESCRIPTION: Command-line options inherited from parent commands, including configuration, environment, and build settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_tidy.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Executing Hugo Gen Chromastyles Command\nDESCRIPTION: This command generates CSS stylesheets for the Chroma code highlighter in Hugo. It is used when markup.highlight.noClasses is disabled in the config.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_gen_chromastyles.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo gen chromastyles [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Specifying Layout in Hugo Front Matter\nDESCRIPTION: Example of setting a custom layout in the front matter of a Hugo content file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/lookup-order.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Contact'\nlayout = 'contact'\n```\n\n----------------------------------------\n\nTITLE: Example Content Structure for Hugo Resources\nDESCRIPTION: Demonstrates a basic content structure with various resource types including data, images, and snippets.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/page-resources.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n└── example/\n    ├── data/\n    │  └── books.json   <-- page resource\n    ├── images/\n    │  ├── a.jpg        <-- page resource\n    │  └── b.jpg        <-- page resource\n    ├── snippets/\n    │  └── text.md      <-- page resource\n    └── index.md\n```\n\n----------------------------------------\n\nTITLE: Accessing Positional Arguments in Hugo Shortcode Template\nDESCRIPTION: Shows how to access positional arguments using the Params method in a Hugo shortcode template file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Params.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ index .Params 0 }} → Hello\n{{ index .Params 1 }} → world\n```\n\n----------------------------------------\n\nTITLE: Formatting Currency with lang.FormatAccounting in Hugo Templates\nDESCRIPTION: Demonstrates how to format a number as currency using the lang.FormatAccounting function. The example shows formatting 512.5032 as Norwegian Krone (NOK) with 2 decimal places precision.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/lang/FormatAccounting.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ 512.5032 | lang.FormatAccounting 2 \"NOK\" }} → NOK512.50\n```\n\n----------------------------------------\n\nTITLE: Rendering Plain Content with HTML Entity Unescaping in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the Plain method on a Page object and unescape HTML entities in Hugo templates. It renders the page content, removes HTML tags, and then unescapes any remaining HTML entities.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Plain.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Plain | htmlUnescape }}\n```\n\n----------------------------------------\n\nTITLE: Initializing Basic Hugo Configuration\nDESCRIPTION: Sets up the minimal required configuration for a new Hugo site, including baseURL, languageCode, and title.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/introduction.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nbaseURL = 'https://example.org/'\nlanguageCode = 'en-us'\ntitle = 'My New Hugo Site'\n```\n\n----------------------------------------\n\nTITLE: Page Resource Implementation\nDESCRIPTION: Demonstrates accessing JSON data as a page resource using Resources.Get and transform.Unmarshal.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/data/GetJSON.md#2025-04-08_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nmy-project/\n└── content/\n    └── posts/\n        └── reading-list/\n            ├── books.json\n            └── index.md\n```\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $data := dict }}\n{{ $p := \"books.json\" }}\n{{ with .Resources.Get $p }}\n  {{ $data = . | transform.Unmarshal }}\n{{ else }}\n  {{ errorf \"Unable to get resource %q\" $p }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Theme Creation Inherited Options\nDESCRIPTION: Additional options inherited from parent commands, including configuration, build, and environment settings that can be used with the theme creation command.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_new_theme.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Specifying WebP Encoding Preset in Hugo\nDESCRIPTION: Uses the 'picture' preset for WebP encoding, which is optimized for indoor photographs such as portraits. This affects the encoding parameters used when generating the WebP image.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_19\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image.Resize \"600x webp picture\" }}\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output of Details Shortcode\nDESCRIPTION: Shows the HTML output generated by Hugo when using the 'details' shortcode.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/details.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<details>\n  <summary>See the details</summary>\n  <p>This is a <strong>bold</strong> word.</p>\n</details>\n```\n\n----------------------------------------\n\nTITLE: Using hugo.IsMultihost in Templates\nDESCRIPTION: Example showing how to use the hugo.IsMultihost function in a Hugo template to check if the site is configured with unique base URLs for each language. Returns true when languages have different base URLs.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/IsMultihost.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.IsMultihost }} → true\n```\n\n----------------------------------------\n\nTITLE: Map Structure Before and After Sorting in Hugo\nDESCRIPTION: Shows how Hugo removes first level keys when sorting a map, comparing the original map structure to the sorted result.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Sort.md#2025-04-08_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"felix\": {\n    \"breed\": \"malicious\",\n    \"type\": \"cat\"\n  },\n  \"spot\": {\n    \"breed\": \"boxer\",\n    \"type\": \"dog\"\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"breed\": \"malicious\",\n    \"type\": \"cat\"\n  },\n  {\n    \"breed\": \"boxer\",\n    \"type\": \"dog\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Hugo Server Inherited Command Options\nDESCRIPTION: Options inherited from parent commands that can be used with the trust command, including configuration, build, and runtime options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_server_trust.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Comments in Hugo Templates\nDESCRIPTION: Technique for rendering HTML comments in Hugo templates using the safeHTML function. This bypasses Hugo's default HTML comment stripping behavior.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_19\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ \"<!-- I am an HTML comment. -->\" | safeHTML }}\n{{ printf \"<!-- This is the %s site. -->\" .Site.Title | safeHTML }}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Basic Cascade in Hugo Front Matter\nDESCRIPTION: Shows how to cascade front matter values from a node to its descendants using the cascade keyword in the home page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/front-matter.md#2025-04-08_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Home'\n[cascade.params]\ncolor = 'red'\n```\n\n----------------------------------------\n\nTITLE: Capturing a Taxonomy Object from Site\nDESCRIPTION: Go template code to capture the 'genres' Taxonomy object from the Site object. This can be used in any template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/taxonomy/get-a-taxonomy-object.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $taxonomyObject := .Site.Taxonomies.genres }}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of hugo list all Command\nDESCRIPTION: The basic syntax for using the 'hugo list all' command to list all content including draft, future, and expired items in a Hugo project.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_all.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo list all [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Error Handling with IsDescendant Function in Hugo\nDESCRIPTION: This snippet demonstrates how to use the IsDescendant function with error handling. It uses the 'with' and 'else' statements to report errors when a page is not found.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsDescendant.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $path := \"/auctions/2023-11\" }}\n{{ with .Site.GetPage $path }}\n  {{ $.IsDescendant . }} → true\n{{ else }}\n  {{ errorf \"Unable to find the section with path %s\" $path }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Front Matter Date Fields in Hugo\nDESCRIPTION: This snippet shows how to configure custom date parameters in Hugo's front matter. It demonstrates setting a custom date field 'myDate' to be used before the default 'date' field.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/front-matter.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[frontmatter]\ndate = [\"myDate\", \"date\"]\n```\n\n----------------------------------------\n\nTITLE: Console Output from fmt.warnidf\nDESCRIPTION: Shows the console output when using the warnidf function, including the warning message and instructions on how to suppress it.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Warnidf.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nWARN You should consider fixing this.\nYou can suppress this warning by adding the following to your site configuration:\nignoreLogs = ['warning-42']\n```\n\n----------------------------------------\n\nTITLE: Running Hugo Garbage Collection for Image Resources\nDESCRIPTION: Command to clean up unused processed images in the resources directory. This is useful after changing image processing methods, renaming or removing images to free up storage space.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_22\n\nLANGUAGE: sh\nCODE:\n```\nhugo --gc\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Taxonomies Structure\nDESCRIPTION: Example YAML configuration showing how taxonomies are structured in Hugo with multiple terms and pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Taxonomies.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntaxonomy a:\n  - term 1:\n    - page 1\n    - page 2\n  - term 2:\n    - page 1\ntaxonomy b:\n  - term 1:\n    - page 2\n  - term 2:\n    - page 1\n    - page 2\n```\n\n----------------------------------------\n\nTITLE: Basic Image Resize Filter\nDESCRIPTION: Creates an image filter to resize an image to 300px width while maintaining aspect ratio.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Process.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Process \"resize 300x\" }}\n```\n\n----------------------------------------\n\nTITLE: Basic Vimeo Shortcode Usage\nDESCRIPTION: Basic syntax for embedding a Vimeo video using the shortcode with just the video ID.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/vimeo.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{</* vimeo 55073825 */>}}\n```\n\n----------------------------------------\n\nTITLE: Custom Shortcode Usage Example\nDESCRIPTION: Shows how to use the custom shortcode for inline code highlighting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/highlight.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nThis is some {{</* hl */>}}fmt.Println(\"inline\"){{</* /hl */>}} code.\n```\n\n----------------------------------------\n\nTITLE: Implementing Mermaid Diagram Code Block Render Hook in Hugo\nDESCRIPTION: Creates a custom render hook for Mermaid diagrams in Hugo. This template renders the code block content within a 'mermaid' class pre-element and sets a page store variable to track that Mermaid is used on the page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/diagrams.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre class=\"mermaid\">\n  {{ .Inner | htmlEscape | safeHTML }}\n</pre>\n{{ .Page.Store.Set \"hasMermaid\" true }}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Content Structure for Hugo Navigation\nDESCRIPTION: A directory structure example showing how content pages with different weight values are organized in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/page/nextinsection-and-previnsection.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── pages/\n│   ├── _index.md\n│   ├── page-1.md   <-- front matter: weight = 10\n│   ├── page-2.md   <-- front matter: weight = 20\n│   └── page-3.md   <-- front matter: weight = 30\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Incorrect Multiple Returns Pattern\nDESCRIPTION: Shows an incorrect implementation with multiple return statements that should be avoided.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/return.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if math.ModBool . 2 }}\n  {{ return \"even\" }}\n{{ else }}\n  {{ return \"odd\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Implementing Single Page Navigation Template in Hugo\nDESCRIPTION: A Hugo template for single pages that displays previous and next navigation links using PrevInSection and NextInSection methods.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/page/nextinsection-and-previnsection.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .PrevInSection }}\n  <a href=\"{{ .RelPermalink }}\">Previous</a>\n{{ end }}\n\n{{ with .NextInSection }}\n  <a href=\"{{ .RelPermalink }}\">Next</a>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Polling in Hugo\nDESCRIPTION: TOML configuration for HTTP polling in Hugo. The default configuration disables polling for all resources by setting disable to true and polling intervals to 0 seconds.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/http-cache.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[[HTTPCache.polls]]\\ndisable = true\\nhigh = '0s'\\nlow = '0s'\\n[HTTPCache.polls.for]\\nincludes = ['**']\\nexcludes = []\n```\n\n----------------------------------------\n\nTITLE: Applying Image Filter Using images.Filter Function in Hugo\nDESCRIPTION: This snippet demonstrates how to apply an image filter using the images.Filter function in Hugo. It retrieves an image resource, applies a filter, and renders an img tag with the filtered image's properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/functions/images/apply-image-filter.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with . | images.Filter $filter }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Including Partial Templates in Hugo\nDESCRIPTION: Examples of including partial templates using the partial and partialCached functions. Partials allow for code reuse and modularization of templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_21\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partial \"breadcrumbs.html\" . }}\n{{ partialCached \"css.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Creating Multilingual Language Selection in Hugo Templates\nDESCRIPTION: A Go HTML template snippet that creates a list of links to translated content versions of the current page, including word count for each translation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if .IsTranslated }}\n<h4>{{ i18n \"translations\" }}</h4>\n<ul>\n  {{ range .Translations }}\n  <li>\n    <a href=\"{{ .RelPermalink }}\">{{ .Language.Lang }}: {{ .LinkTitle }}{{ if .IsPage }} ({{ i18n \"wordCount\" . }}){{ end }}</a>\n  </li>\n  {{ end }}\n</ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: HTML Comments for Content Planning\nDESCRIPTION: HTML comment block containing internal notes about potential content sources and maintaining consistent messaging across different Hugo properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/documentation.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!--\nIf we want content on this page at some point, considering taking it from:\n\n- https://gohugo.io/about/introduction/\n- https://gohugo.io/about/features/\n\nTry to use the same language (e.g., tagline) everywhere:\n\n- Home: https://gohugo.io/\n- Docs: https://gohugo.io/documentation/\n- Project repo: https://github.com/gohugoio/hugo?tab=readme-ov-file#readme\n- Docs repo: https://github.com/gohugoio/hugoDocs?tab=readme-ov-file#readme \n-->\n```\n\n----------------------------------------\n\nTITLE: Go Raw String Literal Example\nDESCRIPTION: Demonstrates the usage of raw string literals in Go, showing how characters between backticks are treated literally with no special meaning for backslashes and allowing for newlines. Carriage return characters are automatically discarded.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/raw-string-literal.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n`bar`\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination Navigation with Last Method in Hugo Templates\nDESCRIPTION: Demonstrates how to create a complete pagination navigation system using Hugo's pagination methods including Last, First, Previous, and Next. The code shows how to paginate regular pages and create navigation links between different pages of paginated content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/Last.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  <ul>\n    {{ with .First }}\n      <li><a href=\"{{ .URL }}\">First</a></li>\n    {{ end }}\n    {{ with .Prev }}\n      <li><a href=\"{{ .URL }}\">Previous</a></li>\n    {{ end }}\n    {{ with .Next }}\n      <li><a href=\"{{ .URL }}\">Next</a></li>\n    {{ end }}\n    {{ with .Last }}\n      <li><a href=\"{{ .URL }}\">Last</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using X Shortcode in Hugo Markdown\nDESCRIPTION: Demonstrates how to use the X shortcode in Hugo Markdown to embed an X post.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/x.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{</* x user=\"SanDiegoZoo\" id=\"1453110110599868418\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Basic Link Render Hook Implementation\nDESCRIPTION: Default implementation of a link render hook that follows CommonMark specification, creating an HTML anchor tag with proper attributes\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/links.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<a href=\"{{ .Destination | safeURL }}\"\n  {{- with .Title }} title=\"{{ . }}\"{{ end -}}\n>\n  {{- with .Text }}{{ . }}{{ end -}}\n</a>\n{{- /* chomp trailing newline */ -}}\n```\n\n----------------------------------------\n\nTITLE: Sample CSV data file for Hugo resources\nDESCRIPTION: Example of a CSV file stored as a global resource in the assets directory containing pet information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/data-sources.md#2025-04-08_snippet_1\n\nLANGUAGE: csv\nCODE:\n```\n\"name\",\"type\",\"breed\",\"age\"\n\"Spot\",\"dog\",\"Collie\",\"3\"\n\"Felix\",\"cat\",\"Malicious\",\"7\"\n```\n\n----------------------------------------\n\nTITLE: HTML Output of GetTerms Function in Hugo\nDESCRIPTION: This snippet shows the rendered HTML output after processing the GetTerms function template. It displays a list of tag links, maintaining the order specified in the front matter of the content file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GetTerms.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p>Tags</p>\n<ul>\n  <li><a href=\"/tags/historical/\">historical</a></li>\n  <li><a href=\"/tags/classic/\">classic</a></li>\n  <li><a href=\"/tags/fiction/\">fiction</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Example GoAT Markdown with Attributes\nDESCRIPTION: Markdown example showing GoAT diagram usage with custom class and caption attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/diagrams/Goat.md#2025-04-08_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n```goat {class=\"foo\" caption=\"Diagram 1: Example\"}\n.---.     .-.       .-.       .-.     .---.  \n| A +--->| 1 |<--->| 2 |<--->| 3 |<---+ B |\n'---'     '-'       '+'       '+'     '---'\n```\n```\n\n----------------------------------------\n\nTITLE: Accessing Output Format Properties in Hugo\nDESCRIPTION: This snippet demonstrates how to access various properties of an Output Format object in Hugo. It includes methods for retrieving the identifier, media type, permalinks, and other related information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/page/output-format-methods.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nGet IDENTIFIER // (any) Returns the OutputFormat object with the given identifier\n\nMediaType // (media.Type) Returns the media type of the output format\n\nMediaType.MainType // (string) Returns the main type of the output format's media type\n\nMediaType.SubType // (string) Returns the subtype of the current format's media type\n\nName // (string) Returns the output identifier of the output format\n\nPermalink // (string) Returns the permalink of the page generated by the current output format\n\nRel // (string) Returns the rel value of the output format, either the default or as defined in the site configuration\n\nRelPermalink // (string) Returns the relative permalink of the page generated by the current output format\n```\n\n----------------------------------------\n\nTITLE: Example of Ugly URL Format in Hugo\nDESCRIPTION: This snippet demonstrates the format of an ugly URL in Hugo, which includes a file extension (.html) at the end of the URL path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/ugly-urls.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://example.org/section/article.html\n```\n\n----------------------------------------\n\nTITLE: Initializing Hugo Module Project\nDESCRIPTION: Command to initialize a project as a Hugo Module. It attempts to guess the module path, but users can provide it as an argument. This command supports multi-module projects, allowing initialization in subfolders.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_init.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo mod init [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Accessing Menu Entry Parent in Hugo Templates\nDESCRIPTION: This code illustrates how to retrieve the parent of a menu entry in Hugo. The .Parent method returns the parent menu entry object, allowing for navigation and structuring of hierarchical menus.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/_index.md#2025-04-08_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n{{ .Parent }}\n```\n\n----------------------------------------\n\nTITLE: Creating Feature Branch in Git\nDESCRIPTION: Command to create a new Git branch for implementing a feature with issue number reference.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/development.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit checkout -b feat/implement-some-feature-99999\n```\n\n----------------------------------------\n\nTITLE: Using resources.GetMatch in Hugo Templates\nDESCRIPTION: Demonstrates how to use resources.GetMatch to find the first matching image file and create an img tag with the resource's properties. This example looks for any jpg file in the images directory and uses the matched resource's RelPermalink, Width, and Height attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/resources/GetMatch.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.GetMatch \"images/*.jpg\" }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Converting Hugo Front Matter to JSON - Basic Command\nDESCRIPTION: The base command for converting Hugo content front matter to JSON format. This command processes all content in the content directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_convert_toJSON.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo convert toJSON [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Demonstrating X Post URL Format\nDESCRIPTION: Shows the format of an X post URL that can be embedded using the X shortcode.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/x.md#2025-04-08_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\nhttps://x.com/SanDiegoZoo/status/1453110110599868418\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Markdown Link Components\nDESCRIPTION: Shows the three main components of a Markdown link: text, destination, and title\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/links.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n[Post 1](/posts/post-1 \"My first post\")\n ------  -------------  -------------\n  text    destination       title\n```\n\n----------------------------------------\n\nTITLE: Adding Resources with Hugo Content Adapter\nDESCRIPTION: Shows how to add page resources like images using the AddResource method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/content-adapters.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ $content := dict\n    \"mediaType\" .MediaType.Type\n    \"value\" .\n  }}\n  {{ $resource := dict\n    \"content\" $content\n    \"path\" \"the-hunchback-of-notre-dame/cover.jpg\"\n  }}\n  {{ $.AddResource $resource }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Including X (Twitter) Cards Template in Hugo\nDESCRIPTION: Shows how to include Hugo's embedded X (Twitter) Cards template in a page. This template generates metadata for rich media attachments in tweets linking to the site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/embedded.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ template \"_internal/twitter_cards.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Testing String Character Membership - Basic Usage\nDESCRIPTION: Shows how strings.ContainsAny checks if the string 'Hugo' contains any characters from the set 'gm', returning true because 'g' is present.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/ContainsAny.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.ContainsAny \"Hugo\" \"gm\" }} → true\n```\n\n----------------------------------------\n\nTITLE: Page Resource Title Method with Front Matter\nDESCRIPTION: Shows how to use the Title method with a page resource that has a title defined in front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Title.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Resources.Get \"images/a.jpg\" }}\n  {{ .Title }} → A beautiful sunrise in Bryce Canyon\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Initializing a New Hugo Module\nDESCRIPTION: Use the hugo mod init command to initialize a new Hugo Module. If Hugo cannot guess the module path, you must provide it as an argument.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-modules/use-modules.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nhugo mod init github.com/<your_user>/<your_project>\n```\n\n----------------------------------------\n\nTITLE: Using new-in Shortcode for New Features\nDESCRIPTION: Shows how to use the new-in shortcode to indicate a new feature with version number.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_14\n\nLANGUAGE: text\nCODE:\n```\n{{</* new-in 0.144.0 /*/>}}\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Scratch Documentation\nDESCRIPTION: YAML configuration block defining metadata for the Scratch method documentation, including title, description, return type, and deprecation details.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Scratch.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Scratch\ndescription: Returns a \"scratch pad\" to store and manipulate data, scoped to the current shortcode.\ncategories: []\nkeywords: []\nparams:\n  functions_and_methods:\n    returnType: maps.Scratch\n    signatures: [SHORTCODE.Scratch]\nexpiryDate: 2026-11-18 # deprecated 2024-11-18 (soft)\n---\n```\n\n----------------------------------------\n\nTITLE: Installing OpenSSH Client on Debian\nDESCRIPTION: This command installs the OpenSSH client on Debian-based systems, which is necessary for SSH key generation and secure file transfer.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/deploy-with-rsync.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nsudo apt-get install openssh-client\n```\n\n----------------------------------------\n\nTITLE: Rendered Translation List for Book 2 in English\nDESCRIPTION: This HTML snippet demonstrates the rendered output of the translation list for the 'Book 2' page on the English site. It only includes a link to the German translation, as there is no French version available.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Translations.md#2025-04-08_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/de/books/book-1/\" hreflang=\"de-DE\">Book 1 (Deutsch)</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Terminating 'block' Statement in Hugo Templates\nDESCRIPTION: Demonstrates the use of 'end' to terminate a 'block' statement in Hugo templates. This example defines an empty block named 'main'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/end.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ block \"main\" . }}{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using MainSections to List Relevant Pages in Hugo Templates\nDESCRIPTION: Demonstrates how to use MainSections in a theme template to dynamically show pages from the main sections. This allows theme authors to create flexible templates that adapt to site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/MainSections.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range where .Site.RegularPages \"Section\" \"in\" .Site.MainSections }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using Gist Shortcode in Hugo Markdown\nDESCRIPTION: Demonstrates how to use the gist shortcode in Hugo Markdown to embed a GitHub Gist.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/gist.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{</* gist user 23932424365401ffa5e9d9810102a477 */>}}\n```\n\n----------------------------------------\n\nTITLE: Boolean Value Examples in Hugo\nDESCRIPTION: Demonstrates the two possible values of a boolean data type in Hugo: true and false.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/boolean.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\ntrue\n```\n\nLANGUAGE: markdown\nCODE:\n```\nfalse\n```\n\n----------------------------------------\n\nTITLE: Hugo Version Command Help Options\nDESCRIPTION: Available help options specific to the version command.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_version.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for version\n```\n\n----------------------------------------\n\nTITLE: Configuring RSS Feed Output in Hugo\nDESCRIPTION: This snippet demonstrates how to control RSS feed generation for different page types in Hugo's configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/rss.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[outputs]\nhome = ['html', 'rss']\nsection = ['html', 'rss']\ntaxonomy = ['html']\nterm = ['html']\n```\n\n----------------------------------------\n\nTITLE: Using Hugo Deploy Command\nDESCRIPTION: Basic syntax for using the 'hugo deploy' command to deploy a Hugo site to a cloud provider. This command allows you to deploy your site according to the deployment configuration in your Hugo config file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_deploy.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhugo deploy [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Accessing Resource Parameters in Hugo Template\nDESCRIPTION: A Hugo template that demonstrates how to access resource parameters using the Params method. It retrieves an image resource and uses its parameters to build an HTML figure with alt text and caption.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Params.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Resources.Get \"images/a.jpg\" }}\n  <figure>\n    <img alt=\"{{ .Params.alt }}\" src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\">\n    <figcaption>{{ .Title }} is {{ .Params.temperament }}</figcaption>\n  </figure>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Inherited Options for Hugo Convert Command\nDESCRIPTION: This snippet lists the options inherited from parent commands when using the 'hugo convert' command. These options provide additional configuration capabilities for the conversion process.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_convert.md#2025-04-08_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: JavaScript Module Import Examples\nDESCRIPTION: Demonstrates different ways to import JavaScript modules within Hugo's asset system, including relative imports and JSON imports.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Build.md#2025-04-08_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nimport { hello } from 'my/module';\n```\n\nLANGUAGE: js\nCODE:\n```\nimport { hello3 } from 'my/module/hello3';\n```\n\nLANGUAGE: js\nCODE:\n```\nimport { hello4 } from './lib';\n```\n\nLANGUAGE: js\nCODE:\n```\nimport * as data from 'my/module/data.json';\n```\n\nLANGUAGE: js\nCODE:\n```\nimport * as params from '@params';\n```\n\n----------------------------------------\n\nTITLE: Using Terse Format for Pagination Navigation in Hugo\nDESCRIPTION: Using Hugo's embedded pagination template with the terse format, which provides fewer controls and page slots for a more compact navigation component.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/pagination.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ template \"_internal/pagination.html\" (dict \"page\" . \"format\" \"terse\") }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Pipes Frontmatter Definition\nDESCRIPTION: YAML frontmatter configuration for the Hugo Pipes documentation page, defining metadata like title, description and weight.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-pipes/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Hugo Pipes\ndescription: Use asset pipelines to transform and optimize images, stylesheets, and JavaScript.\ncategories: []\nkeywords: []\nweight: 10\n---\n```\n\n----------------------------------------\n\nTITLE: WebP Preset Hint Filter\nDESCRIPTION: Examples of creating WebP filters with preset hints for optimization.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Process.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Process \"webp\" \"icon\" }}\n{{ $filter := images.Process \"crop 200x200 center r90 webp q50 icon\" }}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Pages Not Backed by Files in Hugo\nDESCRIPTION: A representation of Hugo's directory structure showing how Path values are assigned to pages including those not directly backed by files (like tag pages).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Path.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n└── posts/\n    └── post-1.md  <-- front matter: tags = ['hugo']\n```\n\n----------------------------------------\n\nTITLE: Instagram Post URL Example\nDESCRIPTION: Example of an Instagram post URL that can be embedded\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/instagram.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://www.instagram.com/p/CxOWiQNP2MO/\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Animal Reptile Emoji Shortcodes\nDESCRIPTION: Markdown table containing emoji shortcodes for reptiles\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | ico | shortcode | |\n| - | :-: | - | :-: | - | - |\n| [top](#animals--nature) | :crocodile: | `:crocodile:` | :turtle: | `:turtle:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: Advanced Vimeo Shortcode Usage\nDESCRIPTION: Extended syntax for embedding a Vimeo video with additional parameters like class and title attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/vimeo.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n{{</* vimeo id=55073825 class=\"foo bar\" title=\"My Video\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Accessing Remote Resource Image in Hugo\nDESCRIPTION: Illustrates how to access a remote image as a resource within a Hugo template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image := resources.GetRemote \"https://gohugo.io/img/hugo-logo.png\" }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Navigation Sort Order in Hugo\nDESCRIPTION: Configuration settings to control the sort order behavior of Next and Previous page navigation in Hugo. These settings determine how Hugo calculates page relationships both globally and within sections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/page.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[page]\n  nextPrevInSectionSortOrder = 'asc'\n  nextPrevSortOrder = 'asc'\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output for Nested Menu in Hugo\nDESCRIPTION: The final HTML output produced by Hugo when rendering the nested menu structure. It shows a parent list item for 'Products' containing a nested unordered list with the two child products.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/Children.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li>\n    <a href=\"/products/\">Products</a>\n    <ul>\n      <li><a href=\"/products/product-1/\">Product 1</a></li>\n      <li><a href=\"/products/product-2/\">Product 2</a></li>\n    </ul>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Hugo Module NPM Inherited Options\nDESCRIPTION: Lists all the options inherited from parent commands including configuration, build, and environment settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_npm.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Disabling RSS Feed Generation in Hugo\nDESCRIPTION: This configuration snippet shows how to disable RSS feed generation for all page kinds in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/rss.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\ndisableKinds = ['rss']\n```\n\n----------------------------------------\n\nTITLE: Sorting Groups by Expiration Date in Ascending Order in Hugo Templates\nDESCRIPTION: This snippet shows how to group pages by expiration date and sort the groups in ascending order using the 'asc' parameter. The inner loop displays page links organized by their expiration date groups.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByExpiryDate.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByExpiryDate \"January 2006\" \"asc\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Layout Structure for Page Types in Hugo\nDESCRIPTION: Example of organizing layout templates for different page types in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/lookup-order.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nlayouts/\n└── page/\n    └── single.html\n```\n\n----------------------------------------\n\nTITLE: Hugo Instagram Shortcode Usage\nDESCRIPTION: Demonstrates how to use the Instagram shortcode in Hugo markdown content to embed an Instagram post\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/instagram.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{{</* instagram CxOWiQNP2MO */>}}\n```\n\n----------------------------------------\n\nTITLE: Integer Example in Hugo\nDESCRIPTION: Demonstrates a basic integer value in Hugo, showing a whole number without any fractional components.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/integer.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n42\n```\n\n----------------------------------------\n\nTITLE: Hugo Content Directory Structure Example\nDESCRIPTION: Example showing the organization of content into sections and subsections in Hugo, demonstrating the hierarchy between articles and products sections with their respective files and directories.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/sections.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── articles/             <-- section (top-level directory)\n│   ├── 2022/\n│   │   ├── article-1/\n│   │   │   ├── cover.jpg\n│   │   │   └── index.md\n│   │   └── article-2.md\n│   └── 2023/\n│       ├── article-3.md\n│       └── article-4.md\n├── products/             <-- section (top-level directory)\n│   ├── product-1/        <-- section (has _index.md file)\n│   │   ├── benefits/     <-- section (has _index.md file)\n│   │   │   ├── _index.md\n│   │   │   ├── benefit-1.md\n│   │   │   └── benefit-2.md\n│   │   ├── features/     <-- section (has _index.md file)\n│   │   │   ├── _index.md\n│   │   │   ├── feature-1.md\n│   │   │   └── feature-2.md\n│   │   └── _index.md\n│   └── product-2/        <-- section (has _index.md file)\n│       ├── benefits/     <-- section (has _index.md file)\n│       │   ├── _index.md\n│       │   ├── benefit-1.md\n│       │   └── benefit-2.md\n│       ├── features/     <-- section (has _index.md file)\n│       │   ├── _index.md\n│       │   ├── feature-1.md\n│       │   └── feature-2.md\n│       └── _index.md\n├── _index.md\n└── about.md\n```\n\n----------------------------------------\n\nTITLE: Accessing Nested Parameters with param Shortcode\nDESCRIPTION: Shows the syntax for accessing nested parameter values using the param shortcode. The notation uses dot notation to chain identifiers for accessing nested values within a parameter structure.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/param.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n{{%/* param my.nested.param */%}}\n```\n\n----------------------------------------\n\nTITLE: Accessing English Language Prefix\nDESCRIPTION: Demonstrates retrieving the language prefix when visiting the English language site. Returns '/en' as English is the secondary language.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/LanguagePrefix.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.LanguagePrefix }} → /en\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Attributes in Hugo\nDESCRIPTION: This snippet shows how to configure Hugo to enable Markdown attributes for blocks in the site configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/tables.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[markup.goldmark.parser.attribute]\nblock = true\n```\n\n----------------------------------------\n\nTITLE: Rendering Flowchart Using Diagon in GoAT\nDESCRIPTION: This snippet shows a complex flowchart diagram created using the Diagon tool and rendered as a GoAT code block. The flowchart illustrates a humorous decision tree about understanding flow charts.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/diagrams.md#2025-04-08_snippet_9\n\nLANGUAGE: goat\nCODE:\n```\n   _________________                                                              \n  ╱                 ╲                                                     ┌─────┐ \n ╱ DO YOU UNDERSTAND ╲____________________________________________________│GOOD!│ \n ╲ FLOW CHARTS?      ╱yes                                                 └──┬──┘ \n  ╲_________________╱                                                        │    \n           │no                                                               │    \n  _________▽_________                    ______________________              │    \n ╱                   ╲                  ╱                      ╲    ┌────┐   │    \n╱ OKAY, YOU SEE THE   ╲________________╱ ... AND YOU CAN SEE    ╲___│GOOD│   │    \n╲ LINE LABELED 'YES'? ╱yes             ╲ THE ONES LABELED 'NO'? ╱yes└──┬─┘   │    \n ╲___________________╱                  ╲______________________╱       │     │    \n           │no                                     │no                 │     │    \n   ________▽_________                     _________▽__________         │     │    \n  ╱                  ╲    ┌───────────┐  ╱                    ╲        │     │    \n ╱ BUT YOU SEE THE    ╲___│WAIT, WHAT?│ ╱ BUT YOU JUST         ╲___    │     │    \n ╲ ONES LABELED 'NO'? ╱yes└───────────┘ ╲ FOLLOWED THEM TWICE? ╱yes│   │     │    \n  ╲__________________╱                   ╲____________________╱    │   │     │    \n           │no                                     │no             │   │     │    \n       ┌───▽───┐                                   │               │   │     │    \n       │LISTEN.│                                   └───────┬───────┘   │     │    \n       └───┬───┘                                    ┌──────▽─────┐     │     │    \n     ┌─────▽────┐                                   │(THAT WASN'T│     │     │    \n     │I HATE YOU│                                   │A QUESTION) │     │     │    \n     └──────────┘                                   └──────┬─────┘     │     │    \n                                                      ┌────▽───┐       │     │    \n                                                      │SCREW IT│       │     │    \n                                                      └────┬───┘       │     │    \n                                                           └─────┬─────┘     │    \n                                                                 │           │    \n                                                                 └─────┬─────┘    \n                                                               ┌───────▽──────┐   \n                                                               │LET'S GO DRING│   \n                                                               └───────┬──────┘   \n                                                             ┌─────────▽─────────┐\n                                                             │HEY, I SHOULD TRY  │\n                                                             │INSTALLING FREEBSD!│\n                                                             └───────────────────┘\n```\n\n----------------------------------------\n\nTITLE: Exporting Sanity Schema Types for Hugo Integration\nDESCRIPTION: This snippet shows how to export the post type schema for use in the Sanity configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/PortableText.md#2025-04-08_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nimport {postType} from './postType'\n\nexport const schemaTypes = [postType]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Named Arguments in Hugo Shortcode Template\nDESCRIPTION: Demonstrates how to retrieve named arguments using the Get function in a Hugo shortcode template. It uses the printf function to format the output.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Get.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ printf \"%s %s.\" (.Get \"greeting\") (.Get \"firstName\") }} → Hello world.\n```\n\n----------------------------------------\n\nTITLE: PowerShell Autocompletion Command Options in Hugo\nDESCRIPTION: This snippet shows the available options for the 'hugo completion powershell' command. It includes a help flag and an option to disable completion descriptions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_powershell.md#2025-04-08_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n  -h, --help              help for powershell\n      --no-descriptions   disable completion descriptions\n```\n\n----------------------------------------\n\nTITLE: Accessing Hugo Server Help\nDESCRIPTION: Demonstrates how to get help for a specific Hugo subcommand, in this case, the 'server' command.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/usage.md#2025-04-08_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nhugo server --help\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo Extended via Homebrew\nDESCRIPTION: Command to install the extended edition of Hugo using Homebrew package manager on macOS and Linux systems. The extended edition includes additional features like SASS/SCSS support.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/installation/homebrew.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nbrew install hugo\n```\n\n----------------------------------------\n\nTITLE: Limiting RSS Feed Items in Hugo\nDESCRIPTION: This configuration snippet demonstrates how to set a limit on the number of items in each RSS feed generated by Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/rss.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[services.rss]\nlimit = 42\n```\n\n----------------------------------------\n\nTITLE: Executing Hugo Config Command in Shell\nDESCRIPTION: The basic syntax for running the 'hugo config' command. This command displays the site configuration, including both default and custom settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_config.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhugo config [command] [flags]\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Animal Amphibian Emoji Shortcodes\nDESCRIPTION: Markdown table showing emoji shortcodes for amphibians\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | |\n| - | :-: | - | - |\n| [top](#animals--nature) | :frog: | `:frog:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: Using the Details Shortcode in Hugo\nDESCRIPTION: Demonstrates how to use the 'details' shortcode in Hugo to create an expandable section with a summary.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/details.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{{</* details summary=\"See the details\" */>}}\nThis is a **bold** word.\n{{</* /details */>}}\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output\nDESCRIPTION: The resulting HTML output from the book categories template\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Data.md#2025-04-08_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<p>Fiction</p>\n<ul>\n  <li>The Hunchback of Notre Dame (978-0140443530)</li>\n  <li>Les Misérables (978-0451419439)</li>\n</ul>\n<p>Nonfiction</p>\n<ul>\n  <li>The Ancien Régime and the Revolution (978-0141441641)</li>\n  <li>Interpreting the French Revolution (978-0521280495)</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output\nDESCRIPTION: The resulting HTML output from the book categories template\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Data.md#2025-04-08_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<p>Fiction</p>\n<ul>\n  <li>The Hunchback of Notre Dame (978-0140443530)</li>\n  <li>Les Misérables (978-0451419439)</li>\n</ul>\n<p>Nonfiction</p>\n<ul>\n  <li>The Ancien Régime and the Revolution (978-0141441641)</li>\n  <li>Interpreting the French Revolution (978-0521280495)</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Markdown Image Syntax Example\nDESCRIPTION: Demonstrates the structure of a Markdown image with description, destination, and title components.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/images.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n![white kitten](/images/kitten.jpg \"A kitten!\")\n  ------------  ------------------  ---------\n  description      destination        title\n```\n\n----------------------------------------\n\nTITLE: Comprehensive Leaf Bundle Directory Structure\nDESCRIPTION: Shows a complex Hugo directory structure demonstrating multiple leaf bundles with various resource types and nested directories.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/page-bundles.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── about\n│   └── index.md\n├── posts\n│   ├── my-post\n│   │   ├── content-1.md\n│   │   ├── content-2.md\n│   │   ├── image-1.jpg\n│   │   ├── image-2.png\n│   │   └── index.md\n│   └── my-other-post\n│       └── index.md\n└── another-section\n    ├── foo.md\n    └── not-a-leaf-bundle\n        ├── bar.md\n        └── another-leaf-bundle\n            └── index.md\n```\n\n----------------------------------------\n\nTITLE: Escaping XML in Hugo Templates\nDESCRIPTION: Demonstrates the usage of transform.XMLEscape function to escape XML special characters in Hugo templates. The function removes disallowed characters and replaces specific characters with their HTML entity equivalents.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/transform/XMLEscape.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ transform.XMLEscape \"<p>abc</p>\" }}\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Last Modified Date in Descending Order\nDESCRIPTION: This snippet shows how to sort pages by their last modification date in descending order using the ByLastmod function followed by Reverse in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByLastmod.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByLastmod.Reverse }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo List Published Command Options\nDESCRIPTION: The options specific to the 'hugo list published' command.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_published.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for published\n```\n\n----------------------------------------\n\nTITLE: Running Hugo Server with a Module Workspace\nDESCRIPTION: Command to start Hugo server with a workspace configuration enabled for local module development.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-modules/use-modules.md#2025-04-08_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nHUGO_MODULE_WORKSPACE=hugo.work hugo server --ignoreVendorPaths \"**\"\n```\n\n----------------------------------------\n\nTITLE: Executing Hugo Gen Man Command in Bash\nDESCRIPTION: This command generates man pages for the Hugo CLI. By default, it creates the man page files in the 'man' directory under the current directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_gen_man.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo gen man [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Running Hugo Site Audit Command\nDESCRIPTION: A shell command that builds the Hugo site with specific environment variables and uses grep to search for common issues in the generated output. The command enables HTML comment preservation and missing translation placeholders while searching for specific patterns that indicate potential problems.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/audit/index.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nHUGO_MINIFY_TDEWOLFF_HTML_KEEPCOMMENTS=true HUGO_ENABLEMISSINGTRANSLATIONPLACEHOLDERS=true hugo && grep -inorE \"<\\!-- raw HTML omitted -->|ZgotmplZ|\\[i18n\\]|\\(<nil>\\)|(&lt;nil&gt;)|hahahugo\" public/\n```\n\n----------------------------------------\n\nTITLE: Displaying Hugo Version Output\nDESCRIPTION: Shows the expected output of the 'hugo version' command, including version number and build information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/usage.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nhugo v0.123.0-3c8a4713908e48e6523f058ca126710397aa4ed5+extended linux/amd64 BuildDate=2024-02-19T16:32:38Z VendorInfo=gohugoio\n```\n\n----------------------------------------\n\nTITLE: Testing String Character Membership - Case Sensitivity\nDESCRIPTION: Demonstrates the case sensitivity of strings.ContainsAny by checking if 'Hugo' contains any characters from 'Gm', returning false because the case doesn't match.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/ContainsAny.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ strings.ContainsAny \"Hugo\" \"Gm\" }} → false\n```\n\n----------------------------------------\n\nTITLE: Truncating Time Durations in Hugo Templates Using go-html-template\nDESCRIPTION: This snippet demonstrates the use of the Truncate method on time.Duration objects to round a duration toward zero to a multiple of another duration. It shows three examples with different truncation intervals (2 hours, 3 minutes, and 4 seconds) applied to the same base duration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/duration/Truncate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $d = time.ParseDuration \"3.5h2.5m1.5s\" }}\n\n{{ $d.Truncate (time.ParseDuration \"2h\") }} → 2h0m0s\n{{ $d.Truncate (time.ParseDuration \"3m\") }} → 3h30m0s\n{{ $d.Truncate (time.ParseDuration \"4s\") }} → 3h32m28s\n```\n\n----------------------------------------\n\nTITLE: GoAT ASCII Sequence Diagram Example\nDESCRIPTION: A simple sequence diagram created with GoAT showing a conversation between Alice and Bob. The diagram includes class attribute for width control.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/diagrams.md#2025-04-08_snippet_3\n\nLANGUAGE: goat\nCODE:\n```\n┌─────┐       ┌───┐\n│Alice│       │Bob│\n└──┬──┘       └─┬─┘\n   │            │  \n   │ Hello Bob! │  \n   │───────────>│  \n   │            │  \n   │Hello Alice!│  \n   │<───────────│  \n┌──┴──┐       ┌─┴─┐\n│Alice│       │Bob│\n└─────┘       └───┘\n\n```\n\n----------------------------------------\n\nTITLE: Basic Image Resizing in Hugo Templates\nDESCRIPTION: Demonstrates the basic usage of the Resize method to resize an image to a specified width (300px) while maintaining aspect ratio. The example shows how to access the resulting dimensions through Width and Height properties.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Resize.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Resize \"300x\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Syntax Highlighting Style in Hugo\nDESCRIPTION: This code snippet demonstrates how to set the default syntax highlighting style in the Hugo site configuration. It uses the 'monokai' style as an example.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/syntax-highlighting-styles.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[markup.highlight]\nstyle = 'monokai'\n```\n\n----------------------------------------\n\nTITLE: Including Quick Reference Section in Hugo Markdown\nDESCRIPTION: This snippet demonstrates how to include a quick reference section in Hugo markdown using a shortcode. The shortcode is configured to display methods grouped by object.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/methods.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% quick-reference section=\"methods\" %}}\n```\n\n----------------------------------------\n\nTITLE: Template Code Example with Formatting\nDESCRIPTION: Demonstrates proper formatting and spacing conventions for Hugo template code.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ if eq $foo $bar }}\n  {{ fmt.Printf \"%s is %s\" $foo $bar }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Sorting Pages by Nested Parameter (Hugo)\nDESCRIPTION: This snippet illustrates how to sort a collection of pages by a nested parameter (in this case, 'author.last_name') using dot notation with the ByParam function in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/ByParam.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByParam \"author.last_name\" }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using Figure Shortcode in Hugo\nDESCRIPTION: Example of how to use the figure shortcode in Hugo to insert an HTML figure element with various attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/figure.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{{</* figure\n  src=\"/images/examples/zion-national-park.jpg\"\n  alt=\"A photograph of Zion National Park\"\n  link=\"https://www.nps.gov/zion/index.htm\"\n  caption=\"Zion National Park\"\n  class=\"ma0 w-75\"\n*/>}}\n```\n\n----------------------------------------\n\nTITLE: Hugo Module Workspace Configuration Example\nDESCRIPTION: Example of a workspace configuration file (hugo.work) that specifies local development paths for multiple related modules.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-modules/use-modules.md#2025-04-08_snippet_8\n\nLANGUAGE: text\nCODE:\n```\ngo 1.20\n\nuse .\nuse ../gohugoioTheme\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Lists all the global options that can be used with the 'hugo list all' command, inherited from parent commands, including configuration, environment, and output settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_all.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Error Message for Unavailable Features in Hugo\nDESCRIPTION: Shows the error message displayed when attempting to use a feature not available in the current Hugo edition.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/faq.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\nthis feature is not available in this edition of Hugo\n```\n\n----------------------------------------\n\nTITLE: Copying SSH Public Key to Remote Server\nDESCRIPTION: This command copies the generated SSH public key to the remote server, enabling passwordless authentication for future connections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/deploy-with-rsync.md#2025-04-08_snippet_4\n\nLANGUAGE: txt\nCODE:\n```\nssh-copy-id -i rsa_id.pub USER@HOST.com\n```\n\n----------------------------------------\n\nTITLE: Creating a New Content Page in Hugo\nDESCRIPTION: Command to create a new post in the Hugo site's content directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/quick-start.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nhugo new content content/posts/my-first-post.md\n```\n\n----------------------------------------\n\nTITLE: Creating a New Content Page in Hugo\nDESCRIPTION: Command to create a new post in the Hugo site's content directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/quick-start.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nhugo new content content/posts/my-first-post.md\n```\n\n----------------------------------------\n\nTITLE: GoAT ASCII Complex Diagram Example\nDESCRIPTION: Shows GoAT's ability to create complex diagrams with mixed elements including rounded corners, diagonals, arrows, and text labels. This example demonstrates the variety of shapes and connections possible.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/diagrams.md#2025-04-08_snippet_5\n\nLANGUAGE: goat\nCODE:\n```\n+-------------------+                           ^                      .---.\n|    A Box          |__.--.__    __.-->         |      .-.             |   |\n|                   |        '--'               v     | * |<---        |   |\n+-------------------+                                  '-'             |   |\n                       Round                                       *---(-. |\n  .-----------------.  .-------.    .----------.         .-------.     | | |\n |   Mixed Rounded  | |         |  / Diagonals  \\        |   |   |     | | |\n | & Square Corners |  '--. .--'  /              \\       |---+---|     '-)-'       .--------.\n '--+------------+-'  .--. |     '-------+--------'      |   |   |       |        / Search /\n    |            |   |    | '---.        |               '-------'       |       '-+------'\n    |<---------->|   |    |      |       v                Interior                 |     ^\n    '           <---'      '----'   .-----------.              ---.     .---       v     |\n .------------------.  Diag line    | .-------. +---.              \\   /           .     |\n |   if (a > b)     +---.      .--->| |       | |    | Curved line  \\ /           / \\    |\n |   obj->fcn()     |    \\    /     | '-------' |<--'                +           /   \\   |\n '------------------'     '--'      '--+--------'      .--. .--.     |  .-.     +Done?+-'\n    .---+-----.                        |   ^           |\\ | | /|  .--+ |   |     \\   /\n    |   |     | Join        \\|/        |   | Curved    | \\| |/ | |    \\    |      \\ /\n    |   |     +---->  o    --o--        '-'  Vertical  '--' '--'  '--  '--'        +  .---.\n <--+---+-----'       |     /|\\                                                    |  | 3 |\n                      v                             not:line    'quotes'        .-'   '---'\n  .-.             .---+--------.            /            A || B   *bold*       |        ^\n |   |           |   Not a dot  |      <---+---<--    A dash--is not a line    v        |\n  '-'             '---------+--'          /           Nor/is this.            ---\n```\n\n----------------------------------------\n\nTITLE: Setting Page Publish Date in Hugo Front Matter\nDESCRIPTION: Shows how to set a publish date for a Hugo page using TOML front matter. The publish date is specified using ISO 8601 format with timezone offset.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/PublishDate.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Article 1'\npublishDate = 2023-10-19T00:40:04-07:00\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Resting Position Emoji Shortcodes\nDESCRIPTION: Table containing emoji shortcodes for resting positions and related activities like meditation and sleeping.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | ico | shortcode | |\n| - | :-: | - | :-: | - | - |\n| [top](#people--body) | :lotus_position: | `:lotus_position:` | :lotus_position_man: | `:lotus_position_man:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Analytics in Hugo\nDESCRIPTION: Sets up Google Analytics for a Hugo site by specifying the Google tag ID in the configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/introduction.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[services.googleAnalytics]\nID = 'G-XXXXXXXXX'\n```\n\n----------------------------------------\n\nTITLE: Template Path Resolution for Books Content Type\nDESCRIPTION: Demonstrates the template path used when rendering content of type books.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Render.md#2025-04-08_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nlayouts/books/li.html\n```\n\n----------------------------------------\n\nTITLE: HTML Client-side Redirect Template\nDESCRIPTION: Shows the HTML template Hugo uses to create client-side redirects for aliases, including meta refresh and canonical URL tags\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/urls.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"en-us\">\n  <head>\n    <title>https://example.org/posts/new-file-name/</title>\n    <link rel=\"canonical\" href=\"https://example.org/posts/new-file-name/\">\n    <meta name=\"robots\" content=\"noindex\">\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"refresh\" content=\"0; url=https://example.org/posts/new-file-name/\">\n  </head>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Deleting Keys in Hugo Scratch Pad\nDESCRIPTION: Demonstrates how to remove a key using the Delete method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/NewScratch.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := newScratch }}\n{{ $s.Set \"greeting\" \"Hello\" }}\n{{ $s.Delete \"greeting\" }}\n```\n\n----------------------------------------\n\nTITLE: Executing Hugo Build and rsync Deployment\nDESCRIPTION: This command builds the Hugo site and deploys it using rsync. It deletes files on the server that are not present in the local public directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/deploy-with-rsync.md#2025-04-08_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\nhugo && rsync -avz --delete public/ www-data@ftp.topologix.fr:~/www/\n```\n\n----------------------------------------\n\nTITLE: Hugo Gen Chromastyles Inherited Options\nDESCRIPTION: These options are inherited from parent commands and can be used with the 'hugo gen chromastyles' command for additional configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_gen_chromastyles.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Preact JSX Configuration in Hugo\nDESCRIPTION: Demonstrates setting up automatic JSX transformation for Preact components\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/functions/js/options.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $js := resources.Get \"js/main.jsx\" | js.Build (dict \"JSX\" \"automatic\" \"JSXImportSource\" \"preact\") }}\n```\n\nLANGUAGE: jsx\nCODE:\n```\nimport { render } from 'preact';\n\nconst App = () => <>Hello world!</>;\n\nconst container = document.getElementById('app');\nif (container) render(<App />, container);\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Lists all the flags inherited from parent commands that can be used with the hugo convert toTOML command, including configuration, build environment, and output options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_convert_toTOML.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n  -o, --output string              filesystem path to write files to\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n      --unsafe                     enable less safe operations, please backup first\n```\n\n----------------------------------------\n\nTITLE: Committing and Pushing Amplify Configuration (Shell)\nDESCRIPTION: Git commands to commit the newly created amplify.yml file and push it to the remote repository. This step is crucial for AWS Amplify to detect and use the configuration for deployment.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-aws-amplify/index.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngit add -A\ngit commit -m \"Create amplify.yml\"\ngit push\n```\n\n----------------------------------------\n\nTITLE: Converting Time to Unix Milliseconds in Hugo Templates\nDESCRIPTION: This example demonstrates how to convert a time.Time object to Unix milliseconds using the UnixMilli method. It first creates a time object using time.AsTime with an ISO-8601 timestamp, then uses UnixMilli to get the number of milliseconds since January 1, 1970 UTC.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/UnixMilli.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.UnixMilli }} → 1674891898000\n```\n\n----------------------------------------\n\nTITLE: GoAT ASCII Process Flow Diagram Example\nDESCRIPTION: Illustrates a process flow with start and end points, input/output, decision points, and various process blocks. This example shows how GoAT can be used for creating flowcharts.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/diagrams.md#2025-04-08_snippet_6\n\nLANGUAGE: goat\nCODE:\n```\n                                      .\n   .---------.                       / \\\n  |   START   |                     /   \\        .-+-------+-.      ___________\n   '----+----'    .-------.    A   /     \\   B   | |COMPLEX| |     /           \\      .-.\n        |        |   END   |<-----+CHOICE +----->| |       | +--->+ PREPARATION +--->| X |\n        v         '-------'        \\     /       | |PROCESS| |     \\___________/      '-'\n    .---------.                     \\   /        '-+---+---+-'\n   /  INPUT  /                       \\ /\n  '-----+---'                         '\n        |                             ^\n        v                             |\n  .-----------.                 .-----+-----.        .-.\n  |  PROCESS  +---------------->|  PROCESS  |<------+ X |\n  '-----------'                 '-----------'        '-'\n```\n\n----------------------------------------\n\nTITLE: Displaying Content Structure in Hugo\nDESCRIPTION: Shows the directory structure for a Hugo content folder containing auction-related pages and sections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsAncestor.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n├── auctions/\n│   ├── 2023-11/\n│   │   ├── _index.md\n│   │   ├── auction-1.md\n│   │   └── auction-2.md\n│   ├── 2023-12/\n│   │   ├── _index.md\n│   │   ├── auction-3.md\n│   │   └── auction-4.md\n│   ├── _index.md\n│   ├── bidding.md\n│   └── payment.md\n└── _index.md\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output for Paintings List in Hugo\nDESCRIPTION: Shows the HTML output generated from the Hugo template that lists paintings using the GetPage method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/GetPage.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li>Starry Night by Vincent van Gogh</li>\n  <li>The Mona Lisa by Leonardo da Vinci</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Example URL for LiveReload Debug in Hugo\nDESCRIPTION: Complete example URL with the debug parameter for monitoring LiveReload requests in a browser's dev tools console when running the Hugo development server.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/logging.md#2025-04-08_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nhttp://localhost:1313/?debug=LR-verbose\n```\n\n----------------------------------------\n\nTITLE: Checking for Zero Time with IsZero in Hugo Templates\nDESCRIPTION: This snippet demonstrates the usage of the IsZero function in Hugo templates. It creates two time.Time values using time.AsTime and then checks if each represents the zero time instant. The function returns a boolean value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/IsZero.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t1 := time.AsTime \"2023-01-01T00:00:00-08:00\" }}\n{{ $t2 := time.AsTime \"0001-01-01T00:00:00-00:00\" }}\n\n{{ $t1.IsZero }} → false\n{{ $t2.IsZero }} → true\n```\n\n----------------------------------------\n\nTITLE: Asciidoctor Default CLI Flags in Hugo\nDESCRIPTION: Default command line flags passed to Asciidoctor executable when rendering AsciiDoc content in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/formats.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n--no-header-footer\n```\n\n----------------------------------------\n\nTITLE: Viewing Hugo Deprecation Notices with Info Log Level\nDESCRIPTION: Command to run Hugo with info-level logging to see deprecation messages when upgrading. This allows users to identify recently deprecated features that still produce INFO level messages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/deprecation.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhugo --logLevel info\n```\n\n----------------------------------------\n\nTITLE: Template Metrics Output Format in Hugo\nDESCRIPTION: Example output from Hugo's template metrics showing performance statistics for each template. The metrics include execution duration, caching potential, and execution count to help identify optimization opportunities.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/performance.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nTemplate Metrics:\n\n     cumulative       average       maximum      cache  percent  cached  total  \n       duration      duration      duration  potential   cached   count  count  template\n     ----------      --------      --------  ---------  -------  ------  -----  --------\n  36.037476822s  135.990478ms  225.765245ms         11        0       0    265  partials/head.html\n  35.920040902s  164.018451ms  233.475072ms          0        0       0    219  articles/single.html\n  34.163268129s  128.917992ms  224.816751ms         23        0       0    265  partials/head/meta/opengraph.html\n   1.041227437s     3.92916ms  186.303376ms         47        0       0    265  partials/head/meta/schema.html\n   805.628827ms   27.780304ms  114.678523ms          0        0       0     29  _default/list.html\n    624.08354ms   15.221549ms  108.420729ms          8        0       0     41  partials/utilities/render-page-collection.html\n   545.968801ms     775.523µs  105.045775ms          0        0       0    704  _default/summary.html\n   334.680981ms    1.262947ms  127.412027ms        100        0       0    265  partials/head/js.html\n   272.763205ms    2.050851ms   24.371757ms          0        0       0    133  _default/_markup/render-codeblock.html\n   230.490038ms    8.865001ms    177.4615ms          0        0       0     26  shortcodes/template.html\n   176.921913ms  176.921913ms  176.921913ms          0        0       0      1  examples.tmpl\n   163.951469ms   14.904679ms   70.267953ms          0        0       0     11  articles/list.html\n    153.07021ms     577.623µs   73.593597ms        100        0       0    265  partials/head/init.html\n   150.910984ms  150.910984ms  150.910984ms          0        0       0      1  _default/single.html\n   146.785804ms  146.785804ms  146.785804ms          0        0       0      1  _default/contact.html\n   115.364617ms  115.364617ms  115.364617ms          0        0       0      1  authors/term.html\n    87.392071ms     329.781µs   10.687132ms        100        0       0    265  partials/head/css.html\n    86.803122ms   86.803122ms   86.803122ms          0        0       0      1  _default/home.html\n```\n\n----------------------------------------\n\nTITLE: Rendered Output of Safe String (HTML)\nDESCRIPTION: This snippet shows the HTML output when rendering a string declared as safe using safe.JSStr. The ampersand is not escaped, preserving the original string.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/safe/JSStr.md#2025-04-08_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  const a = \"Title: \" + \"Lilo & Stitch\";\n</script>\n```\n\n----------------------------------------\n\nTITLE: Default Hugo Sitemap Configuration Example\nDESCRIPTION: Shows the default configuration values for Hugo's sitemap generation. Parameters include changefreq for update frequency, priority for page importance, filename for output file name, and disable flag to exclude pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/sitemap.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nchangefreq: \"\"\ndisable: false\nfilename: \"sitemap.xml\"\npriority: -1\n```\n\n----------------------------------------\n\nTITLE: Using Chained Pipeline with collections.Complement in Hugo\nDESCRIPTION: This snippet shows how to simplify the usage of collections.Complement function by using a chained pipeline approach.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Complement.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $c3 | complement $c1 $c2 }} → [1 2]\n```\n\n----------------------------------------\n\nTITLE: Accessing Index and Value in Range Loop\nDESCRIPTION: Demonstrates how to capture both the index and value when iterating over a slice. This is useful when you need to know the position of each element in the collection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/range.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"foo\" \"bar\" \"baz\" }}\n{{ range $k, $v := $s }}\n  <p>{{ $k }}: {{ $v }}</p>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Table Using Diagon in GoAT\nDESCRIPTION: This snippet demonstrates how to create a table using the Diagon tool, rendered as a GoAT code block. The table presents a syntax definition for a simple language, including productions for identifiers, expressions, and literals.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/diagrams.md#2025-04-08_snippet_10\n\nLANGUAGE: goat\nCODE:\n```\n┌────────────────────────────────────────────────┐\n│                                                │\n├────────────────────────────────────────────────┤\n│SYNTAX     = { PRODUCTION } .                   │\n├────────────────────────────────────────────────┤\n│PRODUCTION = IDENTIFIER \"=\" EXPRESSION \".\" .    │\n├────────────────────────────────────────────────┤\n│EXPRESSION = TERM { \"|\" TERM } .                │\n├────────────────────────────────────────────────┤\n│TERM       = FACTOR { FACTOR } .                │\n├────────────────────────────────────────────────┤\n│FACTOR     = IDENTIFIER                         │\n├────────────────────────────────────────────────┤\n│          | LITERAL                             │\n├────────────────────────────────────────────────┤\n│          | \"[\" EXPRESSION \"]\"                  │\n├────────────────────────────────────────────────┤\n│          | \"(\" EXPRESSION \")\"                  │\n├────────────────────────────────────────────────┤\n│          | \"{\" EXPRESSION \"}\" .                │\n├────────────────────────────────────────────────┤\n│IDENTIFIER = letter { letter } .                │\n├────────────────────────────────────────────────┤\n│LITERAL    = \"\"\"\" character { character } \"\"\"\" .│\n└────────────────────────────────────────────────┘\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output from OpenAPI Path Listing\nDESCRIPTION: Shows the HTML result of processing the OpenAPI document, displaying the paths and their associated GET and POST operations with summaries.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/openapi3/Unmarshal.md#2025-04-08_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<p>/pets</p>\n<dl>\n  <dt>GET</dt>\n  <dd>List all pets</dd>\n  <dt>POST</dt>\n  <dd>Create a pet</dd>\n</dl>\n<p>/pets/{petId}</p>\n<dl>\n  <dt>GET</dt>\n  <dd>Info for a specific pet</dd>\n</dl>\n```\n\n----------------------------------------\n\nTITLE: Resource Publishing using Permalink\nDESCRIPTION: Demonstrates an alternative approach to publishing resources using the Permalink method with a temporary variable.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Publish.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $noop := $resource.Permalink }}\n```\n\n----------------------------------------\n\nTITLE: Defining Front Matter for Host and Deploy Documentation Page in YAML\nDESCRIPTION: This YAML front matter block defines metadata for a Hugo documentation page about hosting and deployment options. It specifies the title, description, empty categories array, empty keywords array, a weight value of 10 for ordering, and sets up an alias to '/hosting-and-deployment/'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Host and deploy\ndescription: Services and tools to host and deploy your site.\ncategories: []\nkeywords: []\nweight: 10\naliases: [/hosting-and-deployment/]\n---\n```\n\n----------------------------------------\n\nTITLE: Hugo Asciidoctor Debug Output\nDESCRIPTION: This snippet shows the debug output when running Hugo with Asciidoctor, useful for troubleshooting. It displays the command line arguments used to call the Asciidoctor executable.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/markup.md#2025-04-08_snippet_7\n\nLANGUAGE: txt\nCODE:\n```\nINFO 2019/12/22 09:08:48 Rendering book-as-pdf.adoc with C:\\Ruby26-x64\\bin\\asciidoctor.bat using asciidoc args [--no-header-footer -r asciidoctor-html5s -b html5s -r asciidoctor-diagram --base-dir D:\\prototypes\\hugo_asciidoc_ddd\\docs -a outdir=D:\\prototypes\\hugo_asciidoc_ddd\\build -] ...\n```\n\n----------------------------------------\n\nTITLE: Creating Array of Cascade Parameters in Hugo\nDESCRIPTION: Shows how to define multiple cascade configurations with different targets, applying different parameter values to different page paths.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/front-matter.md#2025-04-08_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Home'\n[[cascade]]\n[cascade.params]\ncolor = 'red'\n[cascade.target]\npath = '{/books/**}'\nkind = 'page'\n[[cascade]]\n[cascade.params]\ncolor = 'blue'\n[cascade.target]\npath = '{/films/**}'\nkind = 'page'\n```\n\n----------------------------------------\n\nTITLE: Incorrect vs Correct Partial Template Call in Hugo\nDESCRIPTION: Demonstrates the correct way to pass context to a partial template in Hugo. The correct approach passes the current context (represented by a dot) as a parameter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/faq.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{/* incorrect */}}\n{{ partial \"_internal/pagination.html\" }}\n\n{{/* correct */}}\n{{ partial \"_internal/pagination.html\" . }}\n```\n\n----------------------------------------\n\nTITLE: Defining LinkTitle in Hugo Front Matter\nDESCRIPTION: Example of how to define a linkTitle in the front matter of a Hugo content file. This shows setting both the title and linkTitle fields.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/LinkTitle.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle = 'Seventeen delightful recipes for healthy desserts'\nlinkTitle = 'Dessert recipes'\n```\n\n----------------------------------------\n\nTITLE: Converting Decimal Values to Strings in Hugo Templates\nDESCRIPTION: Examples showing how the string function converts decimal numbers and string representations of decimal numbers to string type. Both integers and floating point numbers are demonstrated.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/cast/ToString.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ string 11 }} → 11 (string)\n{{ string \"11\" }} → 11 (string)\n\n{{ string 11.1 }} → 11.1 (string)\n{{ string \"11.1\" }} → 11.1 (string)\n\n{{ string 11.9 }} → 11.9 (string)\n{{ string \"11.9\" }} → 11.9 (string)\n```\n\n----------------------------------------\n\nTITLE: Closed Interval Expression\nDESCRIPTION: Represents a closed interval where both endpoints are included in the range\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/interval.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n0 <= x <= 1\n```\n\n----------------------------------------\n\nTITLE: Using a Slice of Keys with collections.Index in Hugo\nDESCRIPTION: Demonstrates how to use a slice of keys with collections.Index to access nested values, providing flexibility in key selection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/IndexFunction.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $m := dict \"a\" 100 \"b\" 200 \"c\" (dict \"d\" 10 \"e\" 20) }}\n{{ $s := slice \"c\" \"e\" }}\n{{ index $m $s }} → 20\n```\n\n----------------------------------------\n\nTITLE: Advanced Image Fill Operation in Hugo\nDESCRIPTION: This example shows a more complex use of the Fill method, specifying additional parameters such as crop position (top), output format (webp), quality (85), and resampling filter (lanczos). It demonstrates how to combine multiple options for fine-tuned image processing.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Fill.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/original.jpg\" }}\n  {{ with .Fill \"200x200 top webp q85 lanczos\" }}\n    <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for Emoji Documentation\nDESCRIPTION: Table structure used for documenting emoji shortcodes and their visual representations across different categories like math, punctuation, currency, and flags\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | ico | shortcode | |\n| - | :-: | - | :-: | - | - |\n| [top](#symbols) | :heavy_multiplication_x: | `:heavy_multiplication_x:` | :heavy_plus_sign: | `:heavy_plus_sign:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: Defining Import Order in ESBuild with Hugo\nDESCRIPTION: A workaround script to handle undefined execution order of imports in ESBuild's code splitting feature. This script explicitly defines the import order to avoid potential issues, by importing libraries in a specific sequence.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Batch.md#2025-04-08_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport './lib2.js';\nimport './lib1.js';\n\nconsole.log('entrypoints-workaround.js');\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Resource Name by Path in Hugo\nDESCRIPTION: Demonstrates how to use the Name method on a page resource, returning the custom name defined in front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Name.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Resources.Get \"images/a.jpg\" }}\n  {{ .Name }} → Sunrise in Bryce Canyon\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Generating Firebase CI Token\nDESCRIPTION: Command to generate a CI token for automated deployments in continuous integration environments\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-firebase.md#2025-04-08_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nfirebase login:ci\n```\n\n----------------------------------------\n\nTITLE: Configuring Suffix-less Media Type for Netlify\nDESCRIPTION: Configuration for creating a custom media type without suffix or delimiter for Netlify specific files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/media-types.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[mediaTypes.\"text/netlify\"]\ndelimiter = \"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Attributes for Block Elements in Hugo\nDESCRIPTION: Configuration snippet to enable Markdown attributes for block-level elements in Hugo's site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/markdown-attributes.md#2025-04-08_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[markup.goldmark.parser.attribute]\ntitle = true # default is true\nblock = true # default is false\n```\n\n----------------------------------------\n\nTITLE: Advanced Image Render Hook with Figure Element\nDESCRIPTION: A Go HTML template that renders standalone images within figure elements and inline images as standard img tags.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/images.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{- if .IsBlock -}}\n  <figure>\n    <img src=\"{{ .Destination | safeURL }}\"\n      {{- with .PlainText }} alt=\"{{ . }}\"{{ end -}}\n    >\n    {{- with .Title }}<figcaption>{{ . }}</figcaption>{{ end -}}\n  </figure>\n{{- else -}}\n  <img src=\"{{ .Destination | safeURL }}\"\n    {{- with .PlainText }} alt=\"{{ . }}\"{{ end -}}\n    {{- with .Title }} title=\"{{ . }}\"{{ end -}}\n  >\n{{- end -}}\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: Standard copyright and license notice template to be included in project files. The template includes placeholders for year and copyright owner information that should be customized for each project.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/LICENSE.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination Navigation in Hugo Templates\nDESCRIPTION: Shows how to create a complete pagination navigation system using Hugo's pagination methods including Next, Previous, First, and Last. The code demonstrates filtering pages, creating a paginator, displaying page content, and building navigation controls.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/Next.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  <ul>\n    {{ with .First }}\n      <li><a href=\"{{ .URL }}\">First</a></li>\n    {{ end }}\n    {{ with .Prev }}\n      <li><a href=\"{{ .URL }}\">Previous</a></li>\n    {{ end }}\n    {{ with .Next }}\n      <li><a href=\"{{ .URL }}\">Next</a></li>\n    {{ end }}\n    {{ with .Last }}\n      <li><a href=\"{{ .URL }}\">Last</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Debugging a ByCount Ordered Taxonomy in Hugo\nDESCRIPTION: Uses the debug.Dump function to inspect the data structure of the ordered taxonomy, which is helpful for understanding the available properties and methods.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/taxonomy/ByCount.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre>{{ debug.Dump $taxonomyObject.ByCount }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Fantasy Character Emoji Shortcodes\nDESCRIPTION: Table displaying emoji shortcodes for fantasy characters including angels, supernatural beings, mythical creatures and fantasy professions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | ico | shortcode | |\n| - | :-: | - | :-: | - | - |\n| [top](#people--body) | :angel: | `:angel:` | :santa: | `:santa:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: Setting Config Options for js.Batch in Hugo\nDESCRIPTION: This snippet shows how to set configuration options for a js.Batch, including target, format, JSX handling, loaders, minification, and parameters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/js/Batch.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with js.Batch \"js/mybatch\" }}\n  {{ with .Config }}\n       {{ .SetOptions (dict\n        \"target\" \"es2023\"\n        \"format\" \"esm\"\n        \"jsx\" \"automatic\"\n        \"loaders\" (dict \".png\" \"dataurl\")\n        \"minify\" true\n        \"params\" (dict \"param1\" \"value1\")\n        )\n      }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing PagerSize in Hugo Pagination Templates\nDESCRIPTION: This code snippet demonstrates how to set up pagination for a collection of pages and access the PagerSize property of the paginator. The PagerSize returns the number of pages per pager as defined either by the Paginate method's second argument or by the site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pager/PagerSize.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $pages := where site.RegularPages \"Type\" \"posts\" }}\n{{ $paginator := .Paginate $pages }}\n\n{{ range $paginator.Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n\n{{ with $paginator }}\n  {{ .PagerSize }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo on NetBSD\nDESCRIPTION: Command to install the extended edition of Hugo using NetBSD's pkgin package manager.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/bsd.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nsudo pkgin install go-hugo\n```\n\n----------------------------------------\n\nTITLE: Disabling Sitemap Generation in Hugo Config\nDESCRIPTION: Configuration snippet showing how to disable sitemap generation completely in Hugo site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/sitemap.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\ndisableKinds = ['sitemap']\n```\n\n----------------------------------------\n\nTITLE: Formatting EXIF Data in Hugo\nDESCRIPTION: Shows how to access and format individual EXIF fields in Hugo, using the lang.FormatNumber function for numerical values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_15\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with $image.Exif }}\n  <ul>\n    {{ with .Date }}<li>Date: {{ .Format \"January 02, 2006\" }}</li>{{ end }}\n    {{ with .Tags.ApertureValue }}<li>Aperture: {{ lang.FormatNumber 2 . }}</li>{{ end }}\n    {{ with .Tags.BrightnessValue }}<li>Brightness: {{ lang.FormatNumber 2 . }}</li>{{ end }}\n    {{ with .Tags.ExposureTime }}<li>Exposure Time: {{ . }}</li>{{ end }}\n    {{ with .Tags.FNumber }}<li>F Number: {{ . }}</li>{{ end }}\n    {{ with .Tags.FocalLength }}<li>Focal Length: {{ . }}</li>{{ end }}\n    {{ with .Tags.ISOSpeedRatings }}<li>ISO Speed Ratings: {{ . }}</li>{{ end }}\n    {{ with .Tags.LensModel }}<li>Lens Model: {{ . }}</li>{{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Mounting Static Directory as Assets\nDESCRIPTION: TOML configuration to mount both assets and static directories for use with the embedded image render hook.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/images.md#2025-04-08_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[[module.mounts]]\nsource = 'assets'\ntarget = 'assets'\n\n[[module.mounts]]\nsource = 'static'\ntarget = 'assets'\n```\n\n----------------------------------------\n\nTITLE: Generating Hugo Front Matter Template with Dynamic Title\nDESCRIPTION: Template for creating front matter metadata in new Hugo content files. Transforms the content base filename into a properly formatted title by replacing hyphens with spaces and capitalizing the first letter. Includes placeholder fields for description, categories, keywords and automatic publish date.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/archetypes/news.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: {{ replace .File.ContentBaseName \"-\" \" \" | strings.FirstUpper }}\ndescription:\ncategories: []\nkeywords: []\npublishDate: {{ .Date }}\n---\n```\n\n----------------------------------------\n\nTITLE: Hugo toJSON Inherited Command Options\nDESCRIPTION: Options inherited from parent commands that can be used with the toJSON conversion command, including configuration, build, and filesystem options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_convert_toJSON.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n  -o, --output string              filesystem path to write files to\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n      --unsafe                     enable less safe operations, please backup first\n```\n\n----------------------------------------\n\nTITLE: Calculating Modulus with math.Mod in Hugo Templates\nDESCRIPTION: This snippet demonstrates the usage of the math.Mod function in Hugo templating. It calculates the modulus of 15 divided by 3, which results in 0. The function takes two integer arguments and returns the remainder of their division.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/math/Mod.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ mod 15 3 }} → 0\n```\n\n----------------------------------------\n\nTITLE: Basic Range Function with Slice in Hugo Templates\nDESCRIPTION: Demonstrates basic usage of the range function to iterate over a slice of strings. Each element in the slice becomes the context (the dot) within the range block.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/range.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice \"foo\" \"bar\" \"baz\" }}\n{{ range $s }}\n  {{ . }} → foo bar baz\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Hugo List Future Command Options\nDESCRIPTION: The specific options available for the 'hugo list future' command, which includes only the help flag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_future.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for future\n```\n\n----------------------------------------\n\nTITLE: Floating Point Number Example\nDESCRIPTION: A simple example showing a floating point number with decimal places.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/floating-point.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n3.14159\n```\n\n----------------------------------------\n\nTITLE: Retrieving Author Name from GitInfo\nDESCRIPTION: Template code to access the name of the author of the last Git commit for a page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/GitInfo.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .GitInfo }}\n  {{ .AuthorName }} → John Smith\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo on OpenBSD\nDESCRIPTION: Command to install Hugo using OpenBSD's package manager, which prompts for edition selection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/bsd.md#2025-04-08_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ndoas pkg_add hugo\n```\n\n----------------------------------------\n\nTITLE: Inserting Hugo Generator Meta Tag in Go HTML Template\nDESCRIPTION: This snippet demonstrates how to use the hugo.Generator function in a Hugo template to insert a meta tag that identifies Hugo as the site generator. The function returns an HTML string containing the meta tag with the current Hugo version.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/Generator.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.Generator }} → <meta name=\"generator\" content=\"Hugo 0.144.2\">\n```\n\n----------------------------------------\n\nTITLE: Setting Background Color When Converting Transparent Images in Hugo\nDESCRIPTION: Sets a custom background color (#b31280) when converting a transparent image to JPEG format, which doesn't support transparency. The background color fills any transparent areas.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_20\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image.Resize \"600x jpg #b31280\" }}\n```\n\n----------------------------------------\n\nTITLE: Advanced Netlify Configuration for Hugo Sites with Dart Sass\nDESCRIPTION: A more complex Netlify configuration file for Hugo sites that require Dart Sass. It includes environment variables for Hugo, Dart Sass, and Node.js versions, as well as a custom build command to install and use Dart Sass.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-netlify/index.md#2025-04-08_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[build.environment]\nHUGO_VERSION = \"0.144.2\"\nDART_SASS_VERSION = \"1.85.0\"\nNODE_VERSION = \"22\"\nTZ = \"America/Los_Angeles\"\n\n[build]\npublish = \"public\"\ncommand = \"\"\"\n  curl -LJO https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz && \\\n  tar -xf dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz && \\\n  rm dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz && \\\n  export PATH=/opt/build/repo/dart-sass:$PATH && \\\n  hugo --gc --minify \\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Dependency Graph Output Example\nDESCRIPTION: Example output from the hugo mod graph command showing module dependencies including vendoring and replacement status.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-modules/use-modules.md#2025-04-08_snippet_7\n\nLANGUAGE: txt\nCODE:\n```\nhugo mod graph\n\ngithub.com/bep/my-modular-site github.com/bep/hugotestmods/mymounts@v1.2.0\ngithub.com/bep/my-modular-site github.com/bep/hugotestmods/mypartials@v1.0.7\ngithub.com/bep/hugotestmods/mypartials@v1.0.7 github.com/bep/hugotestmods/myassets@v1.0.4\ngithub.com/bep/hugotestmods/mypartials@v1.0.7 github.com/bep/hugotestmods/myv2@v1.0.0\nDISABLED github.com/bep/my-modular-site github.com/spf13/hyde@v0.0.0-20190427180251-e36f5799b396\ngithub.com/bep/my-modular-site github.com/bep/hugo-fresh@v1.0.1\ngithub.com/bep/my-modular-site in-themesdir\n```\n\n----------------------------------------\n\nTITLE: Configuring Keywords as Taxonomy\nDESCRIPTION: Configuration example showing how to set up keywords as a taxonomy alongside tags and categories.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Keywords.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[taxonomies]\ntag = 'tags'\nkeyword = 'keywords'\ncategory = 'categories'\n```\n\n----------------------------------------\n\nTITLE: Configuring Language-Specific Menus in a Single Hugo Configuration File\nDESCRIPTION: Configuration example showing how to set up language-specific menu entries for German and English in a single configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[languages.de]\nlanguageCode = 'de-DE'\nlanguageName = 'Deutsch'\nweight = 1\n\n[[languages.de.menus.main]]\nname = 'Produkte'\npageRef = '/products'\nweight = 10\n\n[[languages.de.menus.main]]\nname = 'Leistungen'\npageRef = '/services'\nweight = 20\n\n[languages.en]\nlanguageCode = 'en-US'\nlanguageName = 'English'\nweight = 2\n\n[[languages.en.menus.main]]\nname = 'Products'\npageRef = '/products'\nweight = 10\n\n[[languages.en.menus.main]]\nname = 'Services'\npageRef = '/services'\nweight = 20\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Multilingual Settings\nDESCRIPTION: Example configuration for setting up a multilingual Hugo site with German as default language and English as secondary language. Demonstrates language-specific settings including codes, directions, names, and weights.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/LanguagePrefix.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ndefaultContentLanguage = 'de'\ndefaultContentLanguageInSubdir = false\n\n[languages.de]\nlanguageCode = 'de-DE'\nlanguageDirection = 'ltr'\nlanguageName = 'Deutsch'\ntitle = 'Projekt Dokumentation'\nweight = 1\n\n[languages.en]\nlanguageCode = 'en-US'\nlanguageDirection = 'ltr'\nlanguageName = 'English'\ntitle = 'Project Documentation'\nweight = 2\n```\n\n----------------------------------------\n\nTITLE: Open Interval Expression\nDESCRIPTION: Represents an open interval where both endpoints are excluded from the range\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/interval.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n0 < x < 1\n```\n\n----------------------------------------\n\nTITLE: Directory Structure Example - Hugo Content Files\nDESCRIPTION: Shows example directory structure for Hugo content files including section pages and content files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/File.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ncontent/\n└── books/\n    ├── _index.md  <-- the top-slevel section page\n    ├── book-1.md\n    └── book-2.md\n```\n\n----------------------------------------\n\nTITLE: Managing SSH Keys Access for Hugo Snap Package\nDESCRIPTION: Commands to enable or revoke Hugo's access to SSH keys when installed as a strictly confined Snap package.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/installation/linux.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nsudo snap connect hugo:ssh-keys\nsudo snap disconnect hugo:ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Retrieving Hugo Binary's Git Commit Hash in Go HTML Templates\nDESCRIPTION: This snippet demonstrates how to use the hugo.CommitHash function to retrieve the Git commit hash of the Hugo binary. The function returns a string representing the full commit hash, which can be used for debugging or to display version information.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/CommitHash.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.CommitHash }} → a4892a07b41b7b3f1f143140ee4ec0a9a5cf3970\n```\n\n----------------------------------------\n\nTITLE: Glossary Section Template\nDESCRIPTION: Template for rendering a glossary section with definition list formatting.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/build-options.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n<dl>\n  {{ range .Pages }}\n    <dt>{{ .Title }}</dt>\n    <dd>{{ .Content }}</dd>\n  {{ end }}\n</dl>\n```\n\n----------------------------------------\n\nTITLE: Deploying Hugo Site with Configured Rclone Remote\nDESCRIPTION: This snippet shows how to deploy a Hugo site using a pre-configured Rclone remote. It assumes a remote named 'hugo-www' has been set up, simplifying the deployment process.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/deploy-with-rclone.md#2025-04-08_snippet_1\n\nLANGUAGE: txt\nCODE:\n```\nhugo --gc --minify\nrclone sync --interactive public/ hugo-www:www/\n```\n\n----------------------------------------\n\nTITLE: Setting Error Logging Level in Hugo CLI\nDESCRIPTION: Command to run Hugo with error-level logging, which displays only error messages when building a site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/logging.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nhugo --logLevel error\n```\n\n----------------------------------------\n\nTITLE: Defining Front Matter Summary in Hugo Content\nDESCRIPTION: Shows how to define a content summary using the summary field in front matter, independent of the main content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/summaries.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n+++\ntitle: 'Example'\ndate: 2024-05-26T09:10:33-07:00\nsummary: 'This summary is independent of the content.'\n+++\n\nThis is the first paragraph.\n\nThis is the second paragraph.\n```\n\n----------------------------------------\n\nTITLE: HTML Output for Book 1 with All Translations\nDESCRIPTION: The rendered HTML output of the language switcher for Book 1 that has translations in all three languages (English, German, and French). Shows links to each translation with proper language attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/AllTranslations.md#2025-04-08_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/books/book-1/\" hreflang=\"en-US\">Book 1 (English)</a></li>\n  <li><a href=\"/de/books/book-1/\" hreflang=\"de-DE\">Book 1 (Deutsch)</a></li>\n  <li><a href=\"/fr/books/book-1/\" hreflang=\"fr-FR\">Book 1 (Français)</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Example of Go Interpreted String Literal\nDESCRIPTION: An interpreted string literal in Go is enclosed in double quotes, like \"foo\". Within the quotes, any character can appear except newlines and unescaped double quotes. Backslash escape sequences are interpreted.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/interpreted-string-literal.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n\"foo\"\n```\n\n----------------------------------------\n\nTITLE: Ranging Through Page Collection in Hugo Template\nDESCRIPTION: This snippet demonstrates how to iterate through a page collection sorted by title in a Hugo template. It creates a list of linked page titles.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Pages.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByTitle }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .Title }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Using glossary-term Shortcode in Hugo\nDESCRIPTION: Shows how to use the glossary-term shortcode to insert the definition of a given glossary term.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_12\n\nLANGUAGE: text\nCODE:\n```\n{{%/* glossary-term scalar */%}}\n```\n\n----------------------------------------\n\nTITLE: Setting Page Date in Hugo Front Matter\nDESCRIPTION: Example of setting a page's date using TOML front matter in a Hugo content file. The date is specified in ISO 8601 format with timezone offset.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Date.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Article 1'\ndate = 2023-10-19T00:40:04-07:00\n```\n\n----------------------------------------\n\nTITLE: Displaying Hugo Help\nDESCRIPTION: Shows how to access the list of available commands and flags in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/usage.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nhugo help\n```\n\n----------------------------------------\n\nTITLE: Executing Hugo Environment Command\nDESCRIPTION: This command displays version and environment information for Hugo. It's particularly useful for generating bug reports.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_env.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhugo env [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Escaping Shortcode Delimiters in Hugo\nDESCRIPTION: Shows how to properly escape Hugo shortcode delimiters when documenting shortcode usage in markdown files.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/syntax-highlighting.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n{{</* shortcode-1 */>}}\n\n{{%/* shortcode-2 */%}}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Glossary Term Links in Text Format\nDESCRIPTION: Shows various syntax examples for linking to glossary terms in Hugo documentation, demonstrating case-insensitive and formatting-agnostic variations.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n[global resource](g)\n[Global Resource](g)\n[Global Resources](g)\n[`Global Resources`](g)\n```\n\n----------------------------------------\n\nTITLE: Getting a Specific Module Version\nDESCRIPTION: Command to fetch a specific version of a Hugo module using semantic versioning.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-modules/use-modules.md#2025-04-08_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nhugo mod get github.com/gohugoio/myShortcodes@v1.0.7\n```\n\n----------------------------------------\n\nTITLE: Example Breadcrumb Output\nDESCRIPTION: This text snippet shows an example of how the breadcrumb navigation might appear when rendered, with each item linking to its respective page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Ancestors.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nHome > Auctions > Auctions in November 2023 > Auction 1\n```\n\n----------------------------------------\n\nTITLE: HTML Output of Menu Using PageRef Fallback\nDESCRIPTION: Displays the resulting HTML output when using the PageRef fallback in the menu template. The 'Services' link now has an href attribute populated with the pageRef value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/PageRef.md#2025-04-08_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/products/\">Products</a></li>\n  <li><a href=\"/services\">Services</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Using deprecated-in Shortcode in Hugo\nDESCRIPTION: Shows how to use the deprecated-in shortcode to indicate that a feature is deprecated and suggest alternatives.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_10\n\nLANGUAGE: text\nCODE:\n```\n{{</* deprecated-in 0.144.0 */>}}\n\nUse [`hugo.IsServer`] instead.\n\n[`hugo.IsServer`]: /functions/hugo/isserver/\n{{</* /deprecated-in */>}}\n```\n\n----------------------------------------\n\nTITLE: Generating Navigation Menu Links Using URL Method in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to create a navigation menu in Hugo using the URL method. It iterates over the main menu entries, generating list items with links using the URL method to set the href attribute.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/menu-entry/URL.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range .Site.Menus.main }}\n    <li><a href=\"{{ .URL }}\">{{ .Name }}</a></li>\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Updating a Specific Hugo Module\nDESCRIPTION: Command to update a single specified module in a Hugo project.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/hugo-modules/use-modules.md#2025-04-08_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nhugo mod get -u github.com/gohugoio/myShortcodes\n```\n\n----------------------------------------\n\nTITLE: Using fmt.warnidf in Hugo Templates\nDESCRIPTION: Demonstrates how to use the warnidf function to log a suppressible warning message with a specific ID. The warning can later be suppressed in the site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Warnidf.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ warnidf \"warning-42\" \"You should consider fixing this.\" }}\n```\n\n----------------------------------------\n\nTITLE: Multiple Archetype Directory Structure\nDESCRIPTION: Example directory structure with multiple archetypes for different content types like articles and tutorials.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_10\n\nLANGUAGE: text\nCODE:\n```\narchetypes/\n├── articles.md\n├── default.md\n└── tutorials.md\n```\n\n----------------------------------------\n\nTITLE: Creating Tip Callouts in Markdown\nDESCRIPTION: Demonstrates how to create a tip callout to provide helpful advice for doing things better or more easily.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n> [!tip]\n> Helpful advice for doing things better or more easily.\n```\n\n----------------------------------------\n\nTITLE: Executing Hugo Import Jekyll Command\nDESCRIPTION: This command is used to import content from a Jekyll site into Hugo. It requires two path arguments: the Jekyll root path and the target path for Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_import_jekyll.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo import jekyll [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output for Alternative Output Format Link\nDESCRIPTION: This snippet shows an example of the rendered HTML output for an alternative output format link on the site's home page. It demonstrates the structure of the generated link element for an RSS feed.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/AlternativeOutputFormats.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"alternate\" type=\"application/rss+xml\" href=\"https://example.org/index.xml\" title=\"ABC Widgets, Inc.\">\n```\n\n----------------------------------------\n\nTITLE: Archetype Lookup Order Example\nDESCRIPTION: Shows the priority order in which Hugo searches for archetypes when creating new content, from project-specific to theme defaults.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n1. `archetypes/posts.md`\n1. `archetypes/default.md`\n1. `themes/my-theme/archetypes/posts.md`\n1. `themes/my-theme/archetypes/default.md`\n```\n\n----------------------------------------\n\nTITLE: Archetype Lookup Order Example\nDESCRIPTION: Shows the priority order in which Hugo searches for archetypes when creating new content, from project-specific to theme defaults.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n1. `archetypes/posts.md`\n1. `archetypes/default.md`\n1. `themes/my-theme/archetypes/posts.md`\n1. `themes/my-theme/archetypes/default.md`\n```\n\n----------------------------------------\n\nTITLE: Setting TranslationKey in Front Matter (German)\nDESCRIPTION: This snippet shows how to set a matching translationKey in the front matter of a German content file, creating a relationship with its English counterpart.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/TranslationKey.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Buch 1'\ntranslationKey = 'foo'\n```\n\n----------------------------------------\n\nTITLE: Creating an images.Padding Filter in Hugo\nDESCRIPTION: Creates an image filter that adds padding to an image. The filter takes padding values in pixels and an optional hexadecimal color for the canvas.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Padding.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Padding 20 40 \"#976941\" }}\n```\n\n----------------------------------------\n\nTITLE: Removing Stop Words from Text with collections.Complement in Hugo\nDESCRIPTION: This example demonstrates how to use collections.Complement to remove stop words from a sentence, effectively filtering text content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Complement.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $text := \"The quick brown fox jumps over the lazy dog\" }}\n{{ $stopWords := slice \"a\" \"an\" \"in\" \"over\" \"the\" \"under\" }}\n{{ $filtered := split $text \" \" | complement $stopWords }}\n\n{{ delimit $filtered \" \" }} → The quick brown fox jumps lazy dog\n```\n\n----------------------------------------\n\nTITLE: Hugo List Expired Inherited Options in Bash\nDESCRIPTION: This snippet lists the options inherited from parent commands. These options are available for use with the 'hugo list expired' command and provide various configuration and build settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_expired.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Accessing Google Analytics ID in Hugo Template\nDESCRIPTION: Demonstrates how to retrieve the configured Google Analytics 4 tag ID from within a Hugo template using the Site.Config.Services path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/services.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Site.Config.Services.GoogleAnalytics.ID }}\n```\n\n----------------------------------------\n\nTITLE: Creating Content with Specific Archetype\nDESCRIPTION: Command showing how to create content with a specific archetype by using the --kind flag, allowing you to override the default archetype selection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/archetypes.md#2025-04-08_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\nhugo new content --kind tutorials articles/something.md\n```\n\n----------------------------------------\n\nTITLE: Creating Warning Callouts in Markdown\nDESCRIPTION: Demonstrates how to create a warning callout to highlight urgent information that needs immediate user attention to avoid problems.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n> [!warning]\n> Urgent info that needs immediate user attention to avoid problems.\n```\n\n----------------------------------------\n\nTITLE: Hugo Doc Generation Command-Specific Options\nDESCRIPTION: Shows the command-specific options available for the 'hugo gen doc' command. Includes the directory specification option with its default value.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_gen_doc.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --dir string   the directory to write the doc. (default \"/tmp/hugodoc/\")\n  -h, --help         help for doc\n```\n\n----------------------------------------\n\nTITLE: Executing Hugo List Expired Command in Bash\nDESCRIPTION: This command lists content with a past expiration date in Hugo. It can be run with optional flags and arguments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_expired.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo list expired [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Getting Resource RelPermalink in Hugo Templates\nDESCRIPTION: Demonstrates how to retrieve and display a resource's relative permalink using the RelPermalink method. This example shows accessing an image resource and displaying its relative path.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/RelPermalink.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ .RelPermalink }} → /images/a.jpg\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Ranging Over Site Pages to Create a List of Articles\nDESCRIPTION: Demonstrates how to iterate over regular pages of a specific content type to build a list of article links. The context within the range block is a Page object with properties like RelPermalink and LinkTitle.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/range.md#2025-04-08_snippet_8\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range where site.RegularPages \"Type\" \"articles\" }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Working with Nested Slices in Hugo Template\nDESCRIPTION: Demonstrates how to work with nested slices using the append function.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Append.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := slice (slice \"a\" \"b\") }}\n{{ $s }} → [[a b]]\n\n{{ $s = $s | append (slice \"c\" \"d\") }}\n{{ $s }} → [[a b] [c d]]\n```\n\n----------------------------------------\n\nTITLE: Inspecting Fragments.Identifiers Data Structure in Hugo Templates\nDESCRIPTION: Illustrates how to use the debug.Dump function to inspect the Fragments.Identifiers data structure, which contains a slice of id attributes for each heading on the page.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Fragments.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre>{{ debug.Dump .Fragments.Identifiers }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Basic Hugo Module NPM Pack Command\nDESCRIPTION: The basic command syntax for running the hugo mod npm pack command with optional flags and arguments.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_npm_pack.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo mod npm pack [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: URL Output\nDESCRIPTION: Final output showing the extracted URLs.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/FindRESubmatch.md#2025-04-08_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nhttps://example.org\nhttps://gohugo.io\n```\n\n----------------------------------------\n\nTITLE: Creating Amplify Configuration File (Shell)\nDESCRIPTION: Creates an empty amplify.yml file in the root of the project directory. This file will contain the Amplify configuration for deploying the Hugo site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-aws-amplify/index.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ntouch amplify.yml\n```\n\n----------------------------------------\n\nTITLE: Installing Standard Hugo Edition\nDESCRIPTION: Command to compile and install the standard edition of Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/development.md#2025-04-08_snippet_2\n\nLANGUAGE: text\nCODE:\n```\ngo install\n```\n\n----------------------------------------\n\nTITLE: Hugo New Command Inherited Options\nDESCRIPTION: Shows all inherited command-line options from parent commands, including configuration, build, and environment settings.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_new.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Example of Pretty URL Format in Hugo\nDESCRIPTION: This snippet shows Hugo's default pretty URL format, which ends with a trailing slash instead of a file extension.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/ugly-urls.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nhttps://example.org/section/article/\n```\n\n----------------------------------------\n\nTITLE: Using IsHome Method Example in Hugo Templates\nDESCRIPTION: Demonstrates the usage of the IsHome method which checks if the current page is the home page. This is a common method used on Page objects in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/method.md#2025-04-08_snippet_0\n\nLANGUAGE: go-template\nCODE:\n```\nIsHome\n```\n\n----------------------------------------\n\nTITLE: Vimeo URL Example\nDESCRIPTION: Example of a Vimeo video URL format that can be embedded.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/vimeo.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://vimeo.com/channels/staffpicks/55073825\n```\n\n----------------------------------------\n\nTITLE: Accessing Remote Resource Name in Hugo\nDESCRIPTION: Shows how the Name method returns a hashed file name for remote resources.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Name.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.GetRemote \"https://example.org/images/a.jpg\" }}\n  {{ .Name }} → /a_18432433023265451104.jpg\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Installing PostCSS Dependencies with npm\nDESCRIPTION: Shell command to install the necessary Node.js packages for using PostCSS with Hugo, specifically installing postcss, postcss-cli and autoprefixer.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/PostCSS.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm i -D postcss postcss-cli autoprefixer\n```\n\n----------------------------------------\n\nTITLE: Multi-Parameter Variant Caching in Hugo Templates\nDESCRIPTION: Illustrates caching partial templates with multiple variant parameters based on country and province.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/partials/IncludeCached.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ partialCached \"footer.html\" . .Params.country .Params.province }}\n```\n\n----------------------------------------\n\nTITLE: Creating Note Callouts in Markdown\nDESCRIPTION: Demonstrates how to create a note callout to highlight useful information that users should know when skimming content.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/documentation.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n> [!note]\n> Useful information that users should know, even when skimming content.\n```\n\n----------------------------------------\n\nTITLE: Configuring Standalone Image Wrapping in Hugo\nDESCRIPTION: Configuration snippet to disable automatic wrapping of standalone image elements within paragraph tags in Hugo.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/markdown-attributes.md#2025-04-08_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[markup.goldmark.parser]\nwrapStandAloneImageWithinParagraph = false # default is true\n```\n\n----------------------------------------\n\nTITLE: Manual Deployment Commands for Hugo Sites on SourceHut Pages\nDESCRIPTION: A series of shell commands to build a Hugo site, package it, and deploy it to SourceHut Pages using the hut CLI tool. This approach requires a personal access token but does not require a paid account.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-sourcehut-pages.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nhugo\ntar -C public -cvz . > site.tar.gz\nhut init\nhut pages publish -d <YourUsername>.srht.site site.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Front Matter Template with Dynamic Title\nDESCRIPTION: YAML front matter template for Hugo content files that generates a title by replacing hyphens with spaces in the base filename and capitalizing words. Includes structured fields for content metadata and function documentation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/archetypes/functions.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: {{ replace .File.ContentBaseName \"-\" \" \" | title }}\ndescription:\ncategories: []\nkeywords: []\nparams:\n  functions_and_methods:\n    aliases: []\n    returnType:\n    signatures: []\n---\n```\n\n----------------------------------------\n\nTITLE: Building Extended Edition of Hugo with CGO Enabled\nDESCRIPTION: This command builds the extended edition of Hugo with CGO enabled. The extended edition includes additional features such as Sass/SCSS processing. It uses the 'extended' build tag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/installation/04-build-from-source.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nCGO_ENABLED=1 go install -tags extended github.com/gohugoio/hugo@latest\n```\n\n----------------------------------------\n\nTITLE: Configuring Disqus Shortname in Hugo Configuration\nDESCRIPTION: This code snippet shows how to configure the Disqus shortname in Hugo's configuration file, which is required to enable Disqus comments on a Hugo site.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/comments.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n[services.disqus]\nshortname = 'your-disqus-shortname'\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output of Relref Links\nDESCRIPTION: The HTML output generated by Hugo when processing relref shortcodes in Markdown, showing how different parameters affect the final URL structure.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/relref.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/en/books/book-1/\">Link A</a>\n\n<a href=\"/en/books/book-1/\">Link B</a>\n\n<a href=\"/de/books/book-1/\">Link C</a>\n\n<a href=\"/de/books/book-1/index.json\">Link D</a>\n```\n\n----------------------------------------\n\nTITLE: Setting a Value with Site.Store\nDESCRIPTION: Uses the Set method to store a value with a specified key in the site-scoped scratch pad.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Store.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ site.Store.Set \"greeting\" \"Hello\" }}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Hugo Partials Documentation\nDESCRIPTION: YAML frontmatter block defining metadata for a Hugo documentation page about partial template functions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/partials/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Partial functions\nlinkTitle: partials\ndescription: Use these functions to call partial templates.\ncategories: []\nkeywords: []\n---\n```\n\n----------------------------------------\n\nTITLE: Mathematical Markup Render Hook Template\nDESCRIPTION: Go HTML template for rendering mathematical markup using the transform.ToMath function with error handling and math detection.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/passthrough.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{- $opts := dict \"output\" \"htmlAndMathml\" \"displayMode\" (eq .Type \"block\") }}\n{{- with try (transform.ToMath .Inner $opts) }}\n  {{- with .Err }}\n    {{- errorf \"Unable to render mathematical markup to HTML using the transform.ToMath function. The KaTeX display engine threw the following error: %s: see %s.\" . $.Position }}\n  {{- else }}\n    {{- .Value }}\n    {{- $.Page.Store.Set \"hasMath\" true }}\n  {{- end }}\n{{- end -}}\n```\n\n----------------------------------------\n\nTITLE: Creating Bug Fix Branch in Git\nDESCRIPTION: Command to create a new Git branch for fixing a bug with issue number reference.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/development.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ngit checkout -b fix/fix-some-bug-99999\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Host in config file\nDESCRIPTION: This command adds a host configuration to the SSH config file, specifying the hostname, port, user, and identity file to use for connections.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/deploy-with-rsync.md#2025-04-08_snippet_3\n\nLANGUAGE: txt\nCODE:\n```\ncat >> config <<EOF\nHost HOST\n     Hostname HOST\n     Port 22\n     User USER\n     IdentityFile ~/.ssh/rsa_id\nEOF\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Sports Emoji Shortcodes\nDESCRIPTION: Table listing emoji shortcodes for various sports and athletic activities including individual and team sports.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n| | ico | shortcode | ico | shortcode | |\n| - | :-: | - | :-: | - | - |\n| [top](#people--body) | :person_fencing: | `:person_fencing:` | :horse_racing: | `:horse_racing:` | [top](#table-of-contents) |\n```\n\n----------------------------------------\n\nTITLE: Building Extended/Deploy Edition of Hugo\nDESCRIPTION: This command builds the extended/deploy edition of Hugo, which includes both the extended features and deployment capabilities. It uses both 'extended' and 'withdeploy' build tags.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/installation/04-build-from-source.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nCGO_ENABLED=1 go install -tags extended,withdeploy github.com/gohugoio/hugo@latest\n```\n\n----------------------------------------\n\nTITLE: Displaying Page Summaries in Hugo Template\nDESCRIPTION: Demonstrates how to list pages with their summaries using Hugo templating. Iterates through pages and displays each page's link title and summary.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Summary.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ .Summary }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Page Summaries in Hugo Template\nDESCRIPTION: Demonstrates how to list pages with their summaries using Hugo templating. Iterates through pages and displays each page's link title and summary.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Summary.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n  {{ .Summary }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Calculating WCAG Contrast Ratio\nDESCRIPTION: Calculates and evaluates the WCAG contrast ratio between the lightest and darkest colors from an image.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/resource/Colors.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with resources.Get \"images/a.jpg\" }}\n  {{ $lightest := index (sort .Colors \"Luminance\" \"desc\") 0 }}\n  {{ $darkest := index (sort .Colors \"Luminance\") 0 }}\n  {{ $cr := div\n    (add $lightest.Luminance 0.05)\n    (add $darkest.Luminance 0.05)\n  }}\n  {{ if ge $cr 7.5 }}\n    {{ printf \"The %.2f contrast ratio conforms to WCAG Level AAA.\" $cr }}\n  {{ else if ge $cr 4.5 }}\n    {{ printf \"The %.2f contrast ratio conforms to WCAG Level AA.\" $cr }}\n  {{ else }}\n    {{ printf \"The %.2f contrast ratio does not conform to WCAG guidelines.\" $cr }}\n  {{ end }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Individual Page Data with GetPage in Hugo\nDESCRIPTION: Illustrates how to use GetPage to retrieve and display data from a specific page in a Hugo template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/GetPage.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ with .Site.GetPage \"/works/paintings/starry-night\" }}\n  {{ .Title }} → Starry Night\n  {{ .Params.artist }} → Vincent van Gogh\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Getting Values from Hugo Store\nDESCRIPTION: Shows how to retrieve a value from the Store using the Get method after setting it.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/store-methods.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Store.Set \"greeting\" \"Hello\" }}\n{{ .Store.Get \"greeting\" }} → Hello\n```\n\n----------------------------------------\n\nTITLE: Defining Sample Maps in Hugo Templates\nDESCRIPTION: Creates three sample maps ($m1, $m2, $m3) to demonstrate the merge function, with various keys and nested values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Merge.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $m1 := dict \"x\" \"foo\" }}\n{{ $m2 := dict \"x\" \"bar\" \"y\" \"wibble\" }}\n{{ $m3 := dict \"x\" \"baz\" \"y\" \"wobble\" \"z\" (dict \"a\" \"huey\") }}\n```\n\n----------------------------------------\n\nTITLE: Adding Ordinals to Numbers with inflect.Humanize in Hugo Templates\nDESCRIPTION: Shows how the humanize function adds appropriate ordinal suffixes to integer inputs, whether they are provided as strings or numbers.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/inflect/Humanize.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ humanize \"52\" }} → 52nd\n{{ humanize 103 }} → 103rd\n```\n\n----------------------------------------\n\nTITLE: Using GetPage Method with Arguments in Hugo Templates\nDESCRIPTION: Demonstrates using the GetPage method with a path argument to retrieve a specific page by its path. The example shows how to get a page and access its title property.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/templates/introduction.md#2025-04-08_snippet_16\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $page := .Page.GetPage \"/books/les-miserables\" }}\n{{ $page.Title }} → Les Misérables\n```\n\n----------------------------------------\n\nTITLE: Using os.ReadDir in Hugo Templates\nDESCRIPTION: Demonstrates how to use the os.ReadDir function in a Hugo template to list directory contents and their types.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/ReadDir.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range readDir \"content\" }}\n  {{ .Name }} → {{ .IsDir }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Installing Hugo from Specific Commit\nDESCRIPTION: Command to build and install Hugo extended edition from a specific commit.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/contribute/development.md#2025-04-08_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\nCGO_ENABLED=1 go install -tags extended github.com/gohugoio/hugo@0851c17\n```\n\n----------------------------------------\n\nTITLE: Hugo Server Inherited Options\nDESCRIPTION: Additional command-line options inherited from parent commands that affect server behavior and build process\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_server.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Checking Character Membership in a String with collections.In\nDESCRIPTION: This example demonstrates how to check if a character exists within a string using the collections.In function. It returns true when 'b' is found in the string 'abc'.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/In.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $s := \"abc\" }}\n{{ in $s \"b\" }} → true\n```\n\n----------------------------------------\n\nTITLE: Implementing List Template with Page Sorting in Hugo\nDESCRIPTION: A go-html-template for listing pages sorted by weight in Hugo. This template iterates through pages and creates links using their LinkTitle.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/methods/pages/next-and-prev.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.ByWeight }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Plotly Chart Content in Markdown\nDESCRIPTION: Example of how to use the plotly shortcode in a markdown content file to define chart data. The shortcode contains JSON data specifying a bar chart with animal data.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/HasShortcode.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{{</* plotly */>}}\n{\n  \"data\": [\n    {\n      \"x\": [\"giraffes\", \"orangutans\", \"monkeys\"],\n      \"y\": [20, 14, 23],\n      \"type\": \"bar\"\n    }\n  ],\n}\n{{</* /plotly */>}}\n```\n\n----------------------------------------\n\nTITLE: Creating New Content in Hugo\nDESCRIPTION: This command creates a new content file in Hugo, automatically setting the date and title. It can guess the file type based on the provided path or use a specified kind. Archetypes from the theme or site will be used if available.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_new_content.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo new content [path] [flags]\n```\n\n----------------------------------------\n\nTITLE: Custom Shortcode Implementation\nDESCRIPTION: Implementation of a custom shortcode for simplified inline code highlighting in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/highlight.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $code := .Inner | strings.TrimSpace }}\n{{ $lang := or (.Get 0) \"go\" }}\n{{ $opts := dict \"hl_inline\" true \"noClasses\" true }}\n{{ transform.Highlight $code $lang $opts }}\n```\n\n----------------------------------------\n\nTITLE: Tailwind Configuration for VS Code\nDESCRIPTION: Empty Tailwind configuration file required for VS Code IntelliSense extension\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/css/TailwindCSS.md#2025-04-08_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n/*\nThis file is present to satisfy a requirement of the Tailwind CSS IntelliSense\nextension for Visual Studio Code.\n\nhttps://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss\n\nThe rest of this file is intentionally empty.\n*/\n```\n\n----------------------------------------\n\nTITLE: Grouping Pages by Parameter in Descending Order (Hugo)\nDESCRIPTION: This snippet shows how to use the GroupByParam function to group pages by the 'color' parameter in descending order. It adds the 'desc' argument to sort the groups in reverse order, then iterates over the grouped pages to display the group key and page list.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByParam.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByParam \"color\" \"desc\" }}\n  <p>{{ .Key | title }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Resource Image in Hugo\nDESCRIPTION: Shows how to access an image file as a global resource within a Hugo template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image := resources.Get \"images/sunset.jpg\" }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Resource Image in Hugo\nDESCRIPTION: Shows how to access an image file as a global resource within a Hugo template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/image-processing/index.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $image := resources.Get \"images/sunset.jpg\" }}\n```\n\n----------------------------------------\n\nTITLE: Creating Greeting Wrapper Shortcode Template\nDESCRIPTION: Hugo template for a greeting shortcode that wraps content and renders inner shortcodes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Parent.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<div class=\"greeting\">\n  {{ .Inner | strings.TrimSpace | .Page.RenderString }}\n</div>\n```\n\n----------------------------------------\n\nTITLE: Hugo Import Jekyll Command Options\nDESCRIPTION: These are the specific options available for the 'hugo import jekyll' command. The --force flag allows import into a non-empty target directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_import_jekyll.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --force   allow import into non-empty target directory\n  -h, --help    help for jekyll\n```\n\n----------------------------------------\n\nTITLE: Installing Firebase Tools Globally\nDESCRIPTION: Command to install the Firebase CLI tools globally using npm package manager\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-firebase.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install -g firebase-tools\n```\n\n----------------------------------------\n\nTITLE: Hugo ZSH Completion Options\nDESCRIPTION: Available command-specific flags for ZSH completion generation.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_zsh.md#2025-04-08_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help              help for zsh\n      --no-descriptions   disable completion descriptions\n```\n\n----------------------------------------\n\nTITLE: Service Worker Implementation for Progressive Web App\nDESCRIPTION: Setting up a network-first, cache-fallback service worker strategy for both assets and HTML to enable offline functionality while maintaining up-to-date content when online.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/showcase/hartwell-insurance/index.md#2025-04-08_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Network-first, cache-fallback setup for assets and HTML\n// This approach relies on Netlify's HTTP2 and ETag-based cache invalidation\n```\n\n----------------------------------------\n\nTITLE: Hugo Gen Man Command Options in Bash\nDESCRIPTION: These are the specific options available for the 'hugo gen man' command. It includes the option to specify the output directory for the generated man pages.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_gen_man.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --dir string   the directory to write the man pages. (default \"man/\")\n  -h, --help         help for man\n```\n\n----------------------------------------\n\nTITLE: Deploying with CI Token\nDESCRIPTION: Command to deploy to Firebase using a CI token stored in an environment variable\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/host-and-deploy/host-on-firebase.md#2025-04-08_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nfirebase deploy --token $FIREBASE_DEPLOY_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Running the Hugo Mod Vendor Command\nDESCRIPTION: The basic syntax for running the hugo mod vendor command, which vendors all module dependencies into the _vendor directory. When modules are vendored, Hugo will look for dependencies in the _vendor directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_vendor.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhugo mod vendor [flags] [args]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Hugo New Site\nDESCRIPTION: These options are inherited from parent commands and provide additional configuration for the Hugo site creation process, including setting the clock, specifying config files, and controlling build behavior.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_new_site.md#2025-04-08_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n      --clock string               set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00\n      --config string              config file (default is hugo.yaml|json|toml)\n      --configDir string           config dir (default \"config\")\n  -d, --destination string         filesystem path to write files to\n  -e, --environment string         build environment\n      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern\n      --logLevel string            log level (debug|info|warn|error)\n      --noBuildLock                don't create .hugo_build.lock file\n      --quiet                      build in quiet mode\n  -M, --renderToMemory             render to memory (mostly useful when running the server)\n  -s, --source string              filesystem path to read files relative from\n      --themesDir string           filesystem path to themes directory\n```\n\n----------------------------------------\n\nTITLE: Hugo ZSH Completion Command\nDESCRIPTION: Basic command syntax for generating ZSH completion script with optional flags.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_completion_zsh.md#2025-04-08_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nhugo completion zsh [flags]\n```\n\n----------------------------------------\n\nTITLE: Hugo Mod Clean Command Options\nDESCRIPTION: Available options for the 'hugo mod clean' command, including flags to clean the entire module cache, set the base URL, specify the cache directory, and filter modules by pattern matching.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_mod_clean.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --all                      clean entire module cache\n  -b, --baseURL string           hostname (and path) to the root, e.g. https://spf13.com/\n      --cacheDir string          filesystem path to cache directory\n  -c, --contentDir string        filesystem path to content directory\n  -h, --help                     help for clean\n      --pattern string           pattern matching module paths to clean (all if not set), e.g. \"**hugo*\"\n      --renderSegments strings   named segments to render (configured in the segments config)\n  -t, --theme strings            themes to use (located in /themes/THEMENAME/)\n```\n\n----------------------------------------\n\nTITLE: Using LiveReload Debug Query Parameter in Hugo\nDESCRIPTION: Query parameter to enable verbose LiveReload debugging in the browser when using Hugo's development server.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/troubleshooting/logging.md#2025-04-08_snippet_4\n\nLANGUAGE: text\nCODE:\n```\ndebug=LR-verbose\n```\n\n----------------------------------------\n\nTITLE: Default HTML Output Without Render Hooks\nDESCRIPTION: The standard HTML output generated from the Markdown example when no render hooks are defined.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/introduction.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p><a href=\"https://gohugo.io\">Hugo</a></p>\n<p><img alt=\"kitten\" src=\"kitten.jpg\"></p>\n```\n\n----------------------------------------\n\nTITLE: Using collections.Querify with Front Matter Parameters\nDESCRIPTION: Demonstrates how to use collections.Querify with a map defined in the page's front matter or site configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Querify.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ collections.Querify .Params.query }}\n```\n\n----------------------------------------\n\nTITLE: Getting Sorted Map Values in Hugo Store\nDESCRIPTION: Shows how to retrieve sorted values from a map using GetSortedMapValues method.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/_common/store-methods.md#2025-04-08_snippet_7\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ .Store.SetInMap \"greetings\" \"english\" \"Hello\" }}\n{{ .Store.SetInMap \"greetings\" \"french\" \"Bonjour\" }}\n{{ .Store.GetSortedMapValues \"greetings\" }} → [Hello Bonjour]\n```\n\n----------------------------------------\n\nTITLE: Basic Heading Render Hook Implementation in Hugo\nDESCRIPTION: A basic heading render hook template that mimics Hugo's default behavior for rendering Markdown headings with automatic ID attributes and optional class attributes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/headings.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<h{{ .Level }} id=\"{{ .Anchor }}\" {{- with .Attributes.class }} class=\"{{ . }}\" {{- end }}>\n  {{- .Text -}}\n</h{{ .Level }}>\n```\n\n----------------------------------------\n\nTITLE: Creating a Sigmoid Image Filter in Hugo Templates\nDESCRIPTION: Creates a sigmoid filter with specified midpoint and factor values. The midpoint (0.6) controls the center of contrast adjustment, and the factor (-4) decreases the image contrast.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/Sigmoid.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $filter := images.Sigmoid 0.6 -4 }}\n```\n\n----------------------------------------\n\nTITLE: Resulting Multilingual Published Site Structure\nDESCRIPTION: Displays the structure of the published multilingual site after applying the permalink configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/permalinks.md#2025-04-08_snippet_8\n\nLANGUAGE: text\nCODE:\n```\npublic/\n├── en/\n│   ├── books/\n│   │   ├── les-miserables/\n│   │   │   └── index.html\n│   │   ├── the-hunchback-of-notre-dame/\n│   │   │   └── index.html\n│   │   └── index.html\n│   └── index.html\n├── es/\n│   ├── libros/\n│   │   ├── les-miserables/\n│   │   │   └── index.html\n│   │   ├── the-hunchback-of-notre-dame/\n│   │   │   └── index.html\n│   │   └── index.html\n│   └── index.html\n└── index.html\n```\n\n----------------------------------------\n\nTITLE: Hugo List Drafts Command Options\nDESCRIPTION: Available options specific to the 'hugo list drafts' command. Currently, it only includes the help flag.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_list_drafts.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help   help for drafts\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Dictionary with Key-Value Pairs in Hugo\nDESCRIPTION: This snippet demonstrates how to create a dictionary (map) with key-value pairs in Hugo templates using the dict function. It creates a map with two string keys and integer values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Dictionary.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $m := dict \"a\" 1 \"b\" 2 }}\n```\n\n----------------------------------------\n\nTITLE: Filtering with Complement Function - Example 1\nDESCRIPTION: Template code showing how to exclude pages with undefined fields using collections.Complement function\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Where.md#2025-04-08_snippet_24\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $p1 := where .Site.RegularPages \"Params.exclude\" \"ne\" true }}\n{{ $p2 := where .Site.RegularPages \"Params.exclude\" \"eq\" nil }}\n<ul>\n  {{ range $p1 | complement $p2 }}\n    <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n  {{ end }}\n</ul>\n```\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li><a href=\"/posts/post-1/\">Post 1</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Filtering Books by ISBN Template\nDESCRIPTION: Hugo template demonstrating how to filter and display books by ISBN\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Data.md#2025-04-08_snippet_6\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range where .Site.Data.books.fiction \"isbn\" \"978-0140443530\" }}\n  <li>{{ .title }} ({{ .author }})</li>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Delimiting a Map in Hugo Templates\nDESCRIPTION: This snippet shows how to use the delimit function with a map, which automatically sorts the map by key before returning the delimited values. It includes examples with standard and custom last-item delimiters.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Delimit.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $m := dict \"b\" 2 \"a\" 1 \"c\" 3 }}\n{{ delimit $m \", \" }} → 1, 2, 3\n{{ delimit $m \", \" \" and \"}} → 1, 2 and 3\n```\n\n----------------------------------------\n\nTITLE: Using Len Method on Page Collections in Hugo\nDESCRIPTION: Shows an alternative way to determine the number of pages in a collection using the 'Len' method directly on the collection object in Hugo templates.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/len.md#2025-04-08_snippet_4\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ site.RegularPages.Len }} → 42\n```\n\n----------------------------------------\n\nTITLE: Mermaid Diagram Render Hook Implementation\nDESCRIPTION: A custom code block render hook specifically for Mermaid diagrams that wraps the content in a Mermaid pre element and sets a page-level flag for JavaScript inclusion.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/code-blocks.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre class=\"mermaid\">\n  {{ .Inner | htmlEscape | safeHTML }}\n</pre>\n{{ .Page.Store.Set \"hasMermaid\" true }}\n```\n\n----------------------------------------\n\nTITLE: Mermaid Diagram Render Hook Implementation\nDESCRIPTION: A custom code block render hook specifically for Mermaid diagrams that wraps the content in a Mermaid pre element and sets a page-level flag for JavaScript inclusion.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/render-hooks/code-blocks.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre class=\"mermaid\">\n  {{ .Inner | htmlEscape | safeHTML }}\n</pre>\n{{ .Page.Store.Set \"hasMermaid\" true }}\n```\n\n----------------------------------------\n\nTITLE: Combining collections.Last with Where Function in Hugo\nDESCRIPTION: This example demonstrates how to combine the collections.Last function with the where function to filter pages by section before limiting the collection. It selects the last 5 pages from the 'articles' section.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/collections/Last.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range where .Pages \"Section\" \"articles\" | last 5 }}\n  {{ .Render \"summary\" }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Copyright in Hugo Configuration\nDESCRIPTION: Shows how to set the copyright notice in the Hugo configuration file. This is typically done in the hugo.toml, hugo.yaml, or hugo.json file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/site/Copyright.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ncopyright = '© 2023 ABC Widgets, Inc.'\n```\n\n----------------------------------------\n\nTITLE: Generating Absolute URLs with Hugo Ref Function\nDESCRIPTION: Examples showing how to use the Ref method to generate absolute URLs with different options including language and output format specifications. The examples demonstrate basic usage, language-specific URLs, and custom output format URLs.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/shortcode/Ref.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $opts := dict \"path\" \"/books/book-1\" }}\n{{ .Ref $opts }} → https://example.org/en/books/book-1/\n\n{{ $opts := dict \"path\" \"/books/book-1\" \"lang\" \"de\" }}\n{{ .Ref $opts }} → https://example.org/de/books/book-1/\n\n{{ $opts := dict \"path\" \"/books/book-1\" \"lang\" \"de\" \"outputFormat\" \"json\" }}\n{{ .Ref $opts }} → https://example.org/de/books/book-1/index.json\n```\n\n----------------------------------------\n\nTITLE: Hugo Template for Section Navigation\nDESCRIPTION: Template code that iterates through sections and creates navigation links, sorted by weight parameter defined in front matter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sections.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Sections.ByWeight }}\n  <h2><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></h2>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Hugo Build Statistics for Multilingual Knowledge Base\nDESCRIPTION: Terminal output showing Hugo's build statistics for the Ampio knowledge base. The output demonstrates Hugo's performance in handling a large multilingual site with English and Polish content, including pages, images, and static files, with a total build time of 1096 milliseconds.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/showcase/ampio-help/index.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n                   | EN  | PL\n-------------------+-----+------\n  Pages            | 483 | 486\n  Paginator pages  |  56 |  55\n  Non-page files   | 745 | 749\n  Static files     | 917 | 917\n  Processed images | 487 | 490\n  Aliases          |  80 |  79\n  Sitemaps         |   2 |   1\n  Cleaned          |   0 |   0\n\nTotal in 1096 ms\n```\n\n----------------------------------------\n\nTITLE: Creating Breadcrumb Navigation with Ancestors in Hugo\nDESCRIPTION: This Go HTML template demonstrates how to create a breadcrumb navigation using the Ancestors function. It reverses the order of ancestors and includes the current page as the last item.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Ancestors.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n<nav aria-label=\"breadcrumb\" class=\"breadcrumb\">\n  <ol>\n    {{ range .Ancestors.Reverse }}\n      <li>\n        <a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a>\n      </li>\n    {{ end }}\n    <li class=\"active\">\n      <a aria-current=\"page\" href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a>\n    </li>\n  </ol>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output of Hugo Ref Shortcode\nDESCRIPTION: The HTML output generated by Hugo when processing ref shortcode links, showing how different options affect the final URL structure.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/ref.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://example.org/en/books/book-1/\">Link A</a>\n\n<a href=\"https://example.org/en/books/book-1/\">Link B</a>\n\n<a href=\"https://example.org/de/books/book-1/\">Link C</a>\n\n<a href=\"https://example.org/de/books/book-1/index.json\">Link D</a>\n```\n\n----------------------------------------\n\nTITLE: Basic Front Matter Cascade Configuration in Hugo\nDESCRIPTION: Example of configuring a basic color parameter to cascade to the home page and all its descendants using Hugo configuration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/configuration/cascade.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntitle = 'Home'\n[cascade.params]\ncolor = 'red'\n```\n\n----------------------------------------\n\nTITLE: Creating Links with Hugo Ref Shortcode in Markdown\nDESCRIPTION: Examples of using the ref shortcode in different ways to create internal links, including basic usage and specifying language and output format options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/shortcodes/ref.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[Link A]({{%/* ref \"/books/book-1\" */%}})\n\n[Link B]({{%/* ref path=\"/books/book-1\" */%}})\n\n[Link C]({{%/* ref path=\"/books/book-1\" lang=\"de\" */%}})\n\n[Link D]({{%/* ref path=\"/books/book-1\" lang=\"de\" outputFormat=\"json\" */%}})\n```\n\n----------------------------------------\n\nTITLE: Ascending Sort Order with GroupByLastmod in Hugo\nDESCRIPTION: Demonstrates grouping pages by last modification date with ascending sort order by adding the 'asc' parameter.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/pages/GroupByLastmod.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ range .Pages.GroupByLastmod \"January 2006\" \"asc\" }}\n  <p>{{ .Key }}</p>\n  <ul>\n    {{ range .Pages }}\n      <li><a href=\"{{ .RelPermalink }}\">{{ .LinkTitle }}</a></li>\n    {{ end }}\n  </ul>\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Rendered Output of RenderShortcodes in Hugo\nDESCRIPTION: This HTML snippet shows the output of using RenderShortcodes on a content file. It demonstrates that the shortcode is rendered while the surrounding Markdown is preserved.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/RenderShortcodes.md#2025-04-08_snippet_4\n\nLANGUAGE: html\nCODE:\n```\nhttps://example.org/privacy/\n\nAn *emphasized* word.\n```\n\n----------------------------------------\n\nTITLE: Processing JSON Data Resource in Hugo\nDESCRIPTION: Template code to read and process JSON data from a resource file with error handling.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/page-resources.md#2025-04-08_snippet_5\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $path := \"data/books.json\" }}\n{{ with .Resources.Get $path }}\n  {{ with . | transform.Unmarshal }}\n    <p>Books:</p>\n    <ul>\n      {{ range . }}\n        <li>{{ .title }}</li>\n      {{ end }}\n    </ul>\n  {{ end }}\n{{ else }}\n  {{ errorf \"Unable to get page resource %q\" $path }}\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Alternative Parameter Access in Hugo Templates\nDESCRIPTION: Example of using the 'or' operator to handle parameter fallback between page and site parameters while ignoring falsy values.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Param.md#2025-04-08_snippet_3\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ or .Params.foo site.Params.foo }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Environment Variables in Hugo\nDESCRIPTION: This snippet demonstrates how to use the os.Getenv function in Hugo to retrieve the value of an environment variable. It shows an example of getting the 'HOME' environment variable.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/os/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{ os.Getenv \"HOME\" }}\n```\n\n----------------------------------------\n\nTITLE: Calculating Absolute Duration using Abs Method in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to use the Abs method on a time.Duration value in Hugo templates. It first parses a negative duration of -3 hours, then applies the Abs method to get the absolute value, resulting in a positive 3-hour duration.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/duration/Abs.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $d = time.ParseDuration \"-3h\" }}\n{{ $d.Abs }} → 3h0m0s\n```\n\n----------------------------------------\n\nTITLE: Auctions Page Section Navigation Output\nDESCRIPTION: Generated HTML output showing the subsection navigation links on the auctions page, sorted by weight.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Sections.md#2025-04-08_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<h2><a href=\"/auctions/2023-11/\">Auctions in November 2023</a></h2>\n<h2><a href=\"/auctions/2023-12/\">Auctions in December 2023</a></h2>\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output from fmt.Printf and safeHTMLAttr\nDESCRIPTION: This snippet shows the final HTML output after Hugo processes the template using fmt.Printf and safeHTMLAttr. It demonstrates how the formatted string is properly escaped and inserted as an HTML attribute.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/fmt/Printf.md#2025-04-08_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<meta name=\"description\" content=\"Eat at Joe's\">\n```\n\n----------------------------------------\n\nTITLE: Configuring Multilingual Hugo Site\nDESCRIPTION: Hugo configuration showing setup for a multilingual site with English as the default language and German as a secondary language. Defines content directories, language codes, display names, and weights for each language.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/IsTranslated.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndefaultContentLanguage = 'en'\n\n[languages.en]\ncontentDir = 'content/en'\nlanguageCode = 'en-US'\nlanguageName = 'English'\nweight = 1\n\n[languages.de]\ncontentDir = 'content/de'\nlanguageCode = 'de-DE'\nlanguageName = 'Deutsch'\nweight = 2\n```\n\n----------------------------------------\n\nTITLE: Configuring Module Mounts in Hugo\nDESCRIPTION: Example configuration for mounting directories in Hugo, demonstrating how to include shared content from outside the project directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/directory-structure.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[[module.mounts]]\nsource = 'content'\ntarget = 'content'\n\n[[module.mounts]]\nsource = '/home/user/shared-content'\ntarget = 'content'\n```\n\n----------------------------------------\n\nTITLE: Configuring Module Mounts in Hugo\nDESCRIPTION: Example configuration for mounting directories in Hugo, demonstrating how to include shared content from outside the project directory.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/getting-started/directory-structure.md#2025-04-08_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[[module.mounts]]\nsource = 'content'\ntarget = 'content'\n\n[[module.mounts]]\nsource = '/home/user/shared-content'\ntarget = 'content'\n```\n\n----------------------------------------\n\nTITLE: Converting Time to UTC in Hugo Templates\nDESCRIPTION: This snippet demonstrates how to convert a time.Time value to UTC using the UTC method in Hugo templates. It first creates a time.Time value from a string using time.AsTime, then applies the UTC method to convert it to Coordinated Universal Time.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/time/UTC.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $t := time.AsTime \"2023-01-27T23:44:58-08:00\" }}\n{{ $t.UTC }} → 2023-01-28 07:44:58 +0000 UTC\n```\n\n----------------------------------------\n\nTITLE: Base Template with Block in Hugo\nDESCRIPTION: A base template file that defines a block named 'main' with a default value. This serves as the foundation for other templates to extend.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/block.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<body>\n  <main>\n    {{ block \"main\" . }}\n      {{ print \"default value if 'main' template is empty\" }}\n    {{ end }}\n  </main>\n</body>\n```\n\n----------------------------------------\n\nTITLE: Base Template with Block in Hugo\nDESCRIPTION: A base template file that defines a block named 'main' with a default value. This serves as the foundation for other templates to extend.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/go-template/block.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<body>\n  <main>\n    {{ block \"main\" . }}\n      {{ print \"default value if 'main' template is empty\" }}\n    {{ end }}\n  </main>\n</body>\n```\n\n----------------------------------------\n\nTITLE: Configuring Language-Specific Menus for German in Hugo\nDESCRIPTION: A configuration file example for German menu entries when using the configuration directory approach for multilingual menus.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[[main]]\nname = 'Produkte'\npageRef = '/products'\nweight = 10\n[[main]]\nname = 'Leistungen'\npageRef = '/services'\nweight = 20\n```\n\n----------------------------------------\n\nTITLE: Configuring Language-Specific Menus for German in Hugo\nDESCRIPTION: A configuration file example for German menu entries when using the configuration directory approach for multilingual menus.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[[main]]\nname = 'Produkte'\npageRef = '/products'\nweight = 10\n[[main]]\nname = 'Leistungen'\npageRef = '/services'\nweight = 20\n```\n\n----------------------------------------\n\nTITLE: Retrieving Hugo Version in Templates\nDESCRIPTION: Shows how to obtain the current version of the Hugo binary in a template. The function returns a version string (e.g., '0.144.2') that can be displayed or used for version-specific template logic.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/Version.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.Version }} → 0.144.2\n```\n\n----------------------------------------\n\nTITLE: Retrieving Hugo Binary Build Date using hugo.BuildDate\nDESCRIPTION: This snippet demonstrates how to use the hugo.BuildDate function in a Hugo template to retrieve the compilation date of the Hugo binary. The date is returned in RFC 3339 format.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/hugo/BuildDate.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ hugo.BuildDate }} → 2023-11-01T17:57:00Z\n```\n\n----------------------------------------\n\nTITLE: Template Pipeline Syntax\nDESCRIPTION: Demonstrates the basic syntax for creating pipelines in Hugo templates, where values, functions, and methods can be chained together using the pipeline character (|). Each command's output becomes the input for the next command in the chain.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/glossary/pipeline.md#2025-04-08_snippet_0\n\nLANGUAGE: template\nCODE:\n```\n{{ command1 | command2 | command3 }}\n```\n\n----------------------------------------\n\nTITLE: Hugo Server Trust Command Options\nDESCRIPTION: Available flags specific to the trust command, including help and uninstall options.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/commands/hugo_server_trust.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help        help for trust\n      --uninstall   Uninstall the local CA (but do not delete it).\n```\n\n----------------------------------------\n\nTITLE: Basic QR Code Generation in Hugo\nDESCRIPTION: Creates a QR code using the default values for level and scale, then renders it as an image with appropriate dimensions.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/QR.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ $text := \"https://gohugo.io\" }}\n{{ with images.QR $text }}\n  <img src=\"{{ .RelPermalink }}\" width=\"{{ .Width }}\" height=\"{{ .Height }}\" alt=\"\">\n{{ end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Menu Entries in Hugo Configuration (TOML/YAML)\nDESCRIPTION: This snippet shows how to define menu entries in Hugo's configuration file, setting identifiers for translation purposes.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/content-management/multilingual.md#2025-04-08_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n[[menus.main]]\n  identifier = 'products'\n  name = 'Products'\n  pageRef = '/products'\n  weight = 10\n[[menus.main]]\n  identifier = 'services'\n  name = 'Services'\n  pageRef = '/services'\n  weight = 20\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo for Emoji Support\nDESCRIPTION: Configuration setting to enable emoji processing in Markdown content. This needs to be added to your Hugo configuration file.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/quick-reference/emojis.md#2025-04-08_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nenableEmoji = true\n```\n\n----------------------------------------\n\nTITLE: Rendering List Items in Hugo Templates\nDESCRIPTION: Shows how to create an unordered list by ranging over pages and rendering each using a li template.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/methods/page/Render.md#2025-04-08_snippet_2\n\nLANGUAGE: go-html-template\nCODE:\n```\n<ul>\n  {{ range site.RegularPages.ByDate }}\n    {{ .Render \"li\" }}\n  {{ end }}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: CSS for Print-only QR Code Display\nDESCRIPTION: CSS rules that hide QR codes during normal screen viewing but display them when the page is being printed.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/images/QR.md#2025-04-08_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n/* Hide QR code by default */\n.qr-code {\n  display: none;\n}\n\n/* Show QR code when printing */\n@media print {\n  .qr-code {\n    display: block; \n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Inspecting OpenAPI Data Structure in Hugo Templates\nDESCRIPTION: Displays the complete structure of an unmarshaled OpenAPI document using Hugo's debug.Dump function, useful for understanding the available data.\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/openapi3/Unmarshal.md#2025-04-08_snippet_1\n\nLANGUAGE: go-html-template\nCODE:\n```\n<pre>{{ debug.Dump $api }}</pre>\n```\n\n----------------------------------------\n\nTITLE: Extracting Substrings in Hugo Templates with strings.Substr Function\nDESCRIPTION: Examples of using the strings.Substr function to extract parts of strings in Hugo templates. The function accepts a string, a start position (zero-based, negative for counting from the end), and an optional length parameter (negative to omit characters from the end).\nSOURCE: https://github.com/gohugoio/hugoDocs/blob/master/content/en/functions/strings/Substr.md#2025-04-08_snippet_0\n\nLANGUAGE: go-html-template\nCODE:\n```\n{{ substr \"abcdef\" 0 }} → abcdef\n{{ substr \"abcdef\" 1 }} → bcdef\n\n{{ substr \"abcdef\" 0 1 }} → a\n{{ substr \"abcdef\" 1 1 }} → b\n\n{{ substr \"abcdef\" 0 -1 }} → abcde\n{{ substr \"abcdef\" 1 -1 }} → bcde\n\n{{ substr \"abcdef\" -1 }} → f\n{{ substr \"abcdef\" -2 }} → ef\n\n{{ substr \"abcdef\" -1 1 }} → f\n{{ substr \"abcdef\" -2 1 }} → e\n\n{{ substr \"abcdef\" -3 -1 }} → de\n{{ substr \"abcdef\" -3 -2 }} → d\n```"
  }
]
[
  {
    "owner": "6tail",
    "repo": "lunar-javascript",
    "content": "TITLE: Using Lunar Calendar Library with npm\nDESCRIPTION: This snippet demonstrates how to install and use the lunar-javascript library with npm. It initializes a new npm project, installs the lunar-javascript package, and then uses it to create Solar and Lunar objects. The objects are then printed to the console. Requires npm and Node.js.\nSOURCE: https://github.com/6tail/lunar-javascript/blob/master/README_EN.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm init\nnpm install lunar-javascript\n```\n\nLANGUAGE: javascript\nCODE:\n```\n//test.js\nconst {Solar} = require('lunar-javascript')\n//const {Solar, Lunar, HolidayUtil} = require('lunar-javascript')\n \nlet solar = Solar.fromYmd(1986,5,29);\nconsole.log(solar.toFullString());\nconsole.log(solar.getLunar().toFullString());\n \nnode test.js\n```\n\n----------------------------------------\n\nTITLE: NPM Project Example\nDESCRIPTION: This snippet shows how to use the lunar-javascript library in an npm project. It includes the commands to initialize a new npm project and install the library using `npm install lunar-javascript`. The javascript code imports the `Solar` class and then creates a Solar object, printing the solar and lunar full strings.\nSOURCE: https://github.com/6tail/lunar-javascript/blob/master/README.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm init\nnpm install lunar-javascript\n```\n\nLANGUAGE: javascript\nCODE:\n```\n//test.js\nconst {Solar} = require('lunar-javascript')\n//const {Solar, Lunar, HolidayUtil} = require('lunar-javascript')\n \nlet solar = Solar.fromYmd(1986,5,29);\nconsole.log(solar.toFullString());\nconsole.log(solar.getLunar().toFullString());\n \nnode test.js\n```\n\n----------------------------------------\n\nTITLE: Using Lunar Calendar Library with Node.js\nDESCRIPTION: This snippet demonstrates how to use the lunar-javascript library directly in a Node.js environment. It requires the lunar.js file to be present in the same directory. The code creates Solar and Lunar objects from a given date and prints their full string representations to the console. Requires Node.js.\nSOURCE: https://github.com/6tail/lunar-javascript/blob/master/README_EN.md#_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n//test.js\nconst {Solar} = require('./lunar.js')\n//const {Solar, Lunar, HolidayUtil} = require('./lunar.js')\n \nlet solar = Solar.fromYmd(1986,5,29);\nconsole.log(solar.toFullString());\nconsole.log(solar.getLunar().toFullString());\n \nnode test.js\n```\n\n----------------------------------------\n\nTITLE: Node.js Example\nDESCRIPTION: This code snippet demonstrates how to use the lunar-javascript library in a Node.js environment without npm. It assumes that `lunar.js` is in the same directory. The javascript code imports the `Solar` class from `./lunar.js` and then creates a Solar object, printing the solar and lunar full strings. It requires the `lunar.js` file to be present in the same directory.\nSOURCE: https://github.com/6tail/lunar-javascript/blob/master/README.md#_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n//test.js\nconst {Solar} = require('./lunar.js')\n//const {Solar, Lunar, HolidayUtil} = require('./lunar.js')\n \nlet solar = Solar.fromYmd(1986,5,29);\nconsole.log(solar.toFullString());\nconsole.log(solar.getLunar().toFullString());\n \nnode test.js\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Page Example\nDESCRIPTION: This code snippet demonstrates how to use the lunar-javascript library in a basic HTML page. It includes the necessary HTML structure, script tags to include the `lunar.js` file, and JavaScript code to initialize a `Solar` object and print its full string representation as well as the lunar equivalent to the console.\nSOURCE: https://github.com/6tail/lunar-javascript/blob/master/README.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n  </head>\n  <body>\n    <script src=\"lunar.js\"></script>\n    <script>\n      var solar = Solar.fromYmd(1986,5,29);\n      console.log(solar.toFullString());\n      console.log(solar.getLunar().toFullString());\n    </script>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Initializing Solar and Lunar Calendars in HTML\nDESCRIPTION: This snippet demonstrates how to include the lunar.js library in an HTML page and use it to create Solar and Lunar objects. It retrieves the Solar and Lunar representations of a specific date and prints them to the console. Requires the lunar.js file to be present in the same directory.\nSOURCE: https://github.com/6tail/lunar-javascript/blob/master/README_EN.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n  </head>\n  <body>\n    <script src=\"lunar.js\"></script>\n    <script>\n      var solar = Solar.fromYmd(1986,5,29);\n      console.log(solar.toFullString());\n      console.log(solar.getLunar().toFullString());\n    </script>\n  </body>\n</html>\n```"
  }
]
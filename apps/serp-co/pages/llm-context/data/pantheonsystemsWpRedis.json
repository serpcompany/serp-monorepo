[
  {
    "owner": "pantheon-systems",
    "repo": "wp-redis",
    "content": "TITLE: Configuring Redis Server Connection in WordPress - PHP\nDESCRIPTION: This PHP snippet shows how to define the $redis_server array in wp-config.php in order to configure connection parameters for a Redis server. Required dependencies include a PHP environment, the PhpRedis extension or Predis client, and an accessible Redis server. The 'host' parameter specifies the Redis host (such as '127.0.0.1'), 'port' denotes the Redis port number, 'auth' sets authentication credentials (either a password or username/password array for Redis ACL), and 'database' selects a Redis database (with a default of 0). This configuration enables the WP Redis object-cache drop-in to connect to Redis for caching. Ensure that the object-cache.php drop-in is installed and that the credentials match those of your Redis instance.\nSOURCE: https://github.com/pantheon-systems/wp-redis/blob/main/README.md#_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$redis_server = array(\n    'host'     => '127.0.0.1',\n    'port'     => 6379,\n    'auth'     => '12345', // ['user', 'password'] if you use Redis ACL\n    'database' => 0, // Optionally use a specific numeric Redis database. Default is 0.\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis Connection in wp-config.php\nDESCRIPTION: Configuration array for connecting to Redis server via TCP connection with host, port, authentication and database selection.\nSOURCE: https://github.com/pantheon-systems/wp-redis/blob/main/readme.txt#_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$redis_server = array(\n    'host'     => '127.0.0.1',\n    'port'     => 6379,\n    'auth'     => '12345', // ['user', 'password'] if you use Redis ACL\n    'database' => 0, // Optionally use a specific numeric Redis database. Default is 0.\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis Socket File Connection in WordPress - PHP\nDESCRIPTION: This PHP snippet demonstrates how to configure Redis connection parameters in wp-config.php for connecting via a Unix socket file instead of TCP. The 'host' parameter should be set to the file path for the Redis socket, and 'port' should be set to null. Authentication and database selection are specified as in the standard configuration. This setup requires the Redis server to be configured to listen on a socket file and the WordPress environment to have permissions to access that socket.\nSOURCE: https://github.com/pantheon-systems/wp-redis/blob/main/README.md#_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$redis_server = array(\n    'host'     => '/path/of/redis/socket-file.sock',\n    'port'     => null,\n    'auth'     => '12345',\n    'database' => 0, // Optionally use a specific numeric Redis database. Default is 0.\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis Unix Socket Connection\nDESCRIPTION: Configuration array for connecting to Redis server via Unix socket file instead of TCP connection.\nSOURCE: https://github.com/pantheon-systems/wp-redis/blob/main/readme.txt#_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$redis_server = array(\n    'host'     => '/path/of/redis/socket-file.sock',\n    'port'     => null,\n    'auth'     => '12345',\n    'database' => 0, // Optionally use a specific numeric Redis database. Default is 0.\n);\n```\n\n----------------------------------------\n\nTITLE: Adding Non-Persistent Cache Groups in WordPress Redis Object Cache - PHP\nDESCRIPTION: This PHP function call configures the WP Redis object cache to treat specified cache groups as non-persistent, meaning cache operations for these groups will use only the in-memory runtime cache and not Redis. This is useful for plugins generating excessive cache keys, mitigating performance issues. Pass an array of group names to the function. Requires WP Redis plugin to be installed and initialized.\nSOURCE: https://github.com/pantheon-systems/wp-redis/blob/main/README.md#_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nwp_cache_add_non_persistent_groups( array( 'bad-actor' ) );\n```\n\n----------------------------------------\n\nTITLE: Disabling Cache Persistence for Groups\nDESCRIPTION: Code to disable Redis cache persistence for specific cache groups that may be causing performance issues.\nSOURCE: https://github.com/pantheon-systems/wp-redis/blob/main/readme.txt#_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nwp_cache_add_non_persistent_groups( array( 'bad-actor' ) );\n```"
  }
]
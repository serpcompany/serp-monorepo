[
  {
    "owner": "portainer",
    "repo": "portainer-docs",
    "content": "TITLE: Installing Portainer BE via Helm with Ingress Exposure\nDESCRIPTION: Helm command to install Portainer Business Edition exposed via an Ingress controller, configuring it with TLS and specific host settings.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/wsl.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install --create-namespace -n portainer portainer portainer/portainer \\\n    --set enterpriseEdition.enabled=true \\\n    --set enterpriseEdition.image.tag=lts \\\n    --set service.type=ClusterIP \\\n    --set tls.force=true \\\n    --set ingress.enabled=true \\\n    --set ingress.ingressClassName=<ingressClassName (eg: nginx)> \\\n    --set ingress.annotations.\"nginx\\.ingress\\.kubernetes\\.io/backend-protocol\"=HTTPS \\\n    --set ingress.hosts[0].host=<fqdn (eg: portainer.example.io)> \\\n    --set ingress.hosts[0].paths[0].path=\"/\"\n```\n\n----------------------------------------\n\nTITLE: Docker Roles and Permissions Legend Table in Markdown\nDESCRIPTION: A markdown table defining the abbreviations and full names of different user roles in the Portainer system.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/docker-roles-and-permissions.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<table><thead><tr><th width=\"145\">Abbreviation</th><th>Role name</th></tr></thead><tbody><tr><td>EA</td><td>Environment Administrator</td></tr><tr><td>OP</td><td>Operator</td></tr><tr><td>HD</td><td>Helpdesk</td></tr><tr><td>ST</td><td>Standard user</td></tr><tr><td>RO</td><td>Read-only user</td></tr></tbody></table>\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for Portainer Business Edition with Traefik\nDESCRIPTION: Docker Compose configuration that sets up Traefik as a reverse proxy with SSL support and Portainer Business Edition. Includes container definitions, volume mappings, and Traefik labels for routing.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nversion: \"3.3\"\n\nservices:\n  traefik:\n    container_name: traefik\n    image: \"traefik:latest\"\n    command:\n      - --entrypoints.web.address=:80\n      - --entrypoints.websecure.address=:443\n      - --providers.docker\n      - --log.level=ERROR\n      - --certificatesresolvers.leresolver.acme.httpchallenge=true\n      - --certificatesresolvers.leresolver.acme.email=your-email\n      - --certificatesresolvers.leresolver.acme.storage=./acme.json\n      - --certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=web\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - \"/var/run/docker.sock:/var/run/docker.sock:ro\"\n      - \"./acme.json:/acme.json\"\n    labels:\n      - \"traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)\"\n      - \"traefik.http.routers.http-catchall.entrypoints=web\"\n      - \"traefik.http.routers.http-catchall.middlewares=redirect-to-https\"\n      - \"traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https\"\n\n  portainer:\n    image: portainer/portainer-ee:lts\n    command: -H unix:///var/run/docker.sock\n    restart: always\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - portainer_data:/data\n    labels:\n      # Frontend\n      - \"traefik.enable=true\"\n      - \"traefik.http.routers.frontend.rule=Host(`portainer.yourdomain.com`)\"\n      - \"traefik.http.routers.frontend.entrypoints=websecure\"\n      - \"traefik.http.services.frontend.loadbalancer.server.port=9000\"\n      - \"traefik.http.routers.frontend.service=frontend\"\n      - \"traefik.http.routers.frontend.tls.certresolver=leresolver\"\n\n      # Edge\n      - \"traefik.http.routers.edge.rule=Host(`edge.yourdomain.com`)\"\n      - \"traefik.http.routers.edge.entrypoints=websecure\"\n      - \"traefik.http.services.edge.loadbalancer.server.port=8000\"\n      - \"traefik.http.routers.edge.service=edge\"\n      - \"traefik.http.routers.edge.tls.certresolver=leresolver\"\n\n\nvolumes:\n  portainer_data:\n```\n\n----------------------------------------\n\nTITLE: Markdown Tables for Docker RBAC Documentation\nDESCRIPTION: Series of markdown tables documenting permissions for different Docker operations across various user roles. Includes containers, images, volumes, networks, events, and configs sections with detailed permission mappings.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/docker-roles-and-permissions.md#2025-04-13_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### Containers\n\n<table><thead><tr><th width=\"352\">Operation</th><th width=\"62\" data-type=\"checkbox\">EA</th><th width=\"58\" data-type=\"checkbox\">OP</th><th width=\"59\" data-type=\"checkbox\">HD</th><th width=\"55\" data-type=\"checkbox\">ST</th><th width=\"58\" data-type=\"checkbox\">RO</th><th>Notes</th></tr></thead><tbody><tr><td>View containers</td><td>true</td><td>true</td><td>true</td><td>true</td><td>true</td><td><a href=\"docker-roles-and-permissions.md#notes\">1</a></td></tr></tbody></table>\n\n### Images\n\n<table><thead><tr><th width=\"352\">Operation</th><th width=\"62\" data-type=\"checkbox\">EA</th><th width=\"58\" data-type=\"checkbox\">OP</th><th width=\"58\" data-type=\"checkbox\">HD</th><th width=\"55\" data-type=\"checkbox\">ST</th><th width=\"58\" data-type=\"checkbox\">RO</th><th>Notes</th></tr></thead><tbody><tr><td>View images</td><td>true</td><td>true</td><td>true</td><td>true</td><td>true</td><td></td></tr></tbody></table>\n\n### Volumes\n\n<table><thead><tr><th width=\"352\">Operation</th><th width=\"62\" data-type=\"checkbox\">EA</th><th width=\"58\" data-type=\"checkbox\">OP</th><th width=\"58\" data-type=\"checkbox\">HD</th><th width=\"55\" data-type=\"checkbox\">ST</th><th width=\"58\" data-type=\"checkbox\">RO</th><th>Notes</th></tr></thead><tbody><tr><td>View volumes</td><td>true</td><td>true</td><td>true</td><td>true</td><td>true</td><td><a href=\"docker-roles-and-permissions.md#notes\">1</a></td></tr></tbody></table>\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer Server Container\nDESCRIPTION: Deploys the Portainer Server container with required port mappings (8000, 9443), volume mounts for Docker socket and data persistence, and automatic restart configuration.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/wsl.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:lts\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Server via Load Balancer in Bash\nDESCRIPTION: Commands to access Portainer Server using Load Balancer method. Users should replace '<loadbalancer IP>' with the IP address or FQDN of the load balancer, and adjust the port if changed during setup.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/baremetal.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhttps://<loadbalancer IP>:9443/ or http://<loadbalancer IP>:9000/\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Server Container\nDESCRIPTION: Runs the Portainer Server container with necessary port mappings (8000, 9443), volume mounts for Docker socket and data storage, and automatic restart configuration.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/linux.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:lts\n```\n\n----------------------------------------\n\nTITLE: Defining Portainer Access Restrictions for Different User Roles\nDESCRIPTION: This markdown table outlines the access restrictions and permissions for different Portainer user roles including Endpoint admin, Operator, Helpdesk, Standard User, and Read-only User. It covers various functions such as namespace scope, application management, and cluster operations.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/kubernetes-roles-and-bindings.md#2025-04-13_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Function                    | Endpoint admin | Operator           | Helpdesk           | Standard User      | Read-only User     |\n| --------------------------- | -------------- | ------------------ | ------------------ | ------------------ | ------------------ |\n| Namespace Scope             | All            | All, EXCEPT System | All, EXCEPT System | Default + Assigned | Default + Assigned |\n| Namespaces                  | RW             | R                  | R                  | R                  | R                  |\n| Namespace Details           | RW             | R                  | R                  | R                  | R                  |\n| Namespace Access Management | RW             |                    |                    |                    |                    |\n| Applications                | RW             | R                  | R                  | RW                 | R                  |\n| Application Details         | RW             | R                  | R                  | RW                 | R                  |\n| Pod Delete                  | Yes            | Yes                |                    |                    |                    |\n| Application Console         | RW             | RW                 |                    |                    |                    |\n| Advanced Deployment         | RW             |                    |                    | RW                 |                    |\n| ConfigMaps & Secrets        | RW             | R                  | R                  | RW                 | R                  |\n| ConfigMap & Secret Details  | RW             | RW                 | R                  | RW                 | R                  |\n| Volumes                     | RW             | R                  | R                  | RW                 | R                  |\n| Volume Details              | RW             | R                  | R                  | RW                 | R                  |\n| Cluster                     | RW             | R                  | R                  |                    |                    |\n| Cluster Node View           | RW             | R                  | R                  |                    |                    |\n| Cluster Setup               | RW             |                    |                    |                    |                    |\n| Application Error Details   | R              | R                  | R                  |                    |                    |\n| Storage Class Disabled      | R              | R                  | R                  |                    |                    |\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Business Edition Container\nDESCRIPTION: This command runs the Portainer BE container, mapping necessary ports, mounting volumes for Docker socket and data storage, and setting restart policy. It uses the 'portainer/portainer-ee:lts' image.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/wsl.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ee:lts\n```\n\n----------------------------------------\n\nTITLE: Running Portainer Agent with Host Filesystem Access in Docker\nDESCRIPTION: This command demonstrates how to start the Portainer Agent on Docker on Linux, including mounting the host filesystem at /host. It also mounts the Docker socket and volumes directory.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/host/setup.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 9001:9001 --name portainer_agent --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker/volumes:/var/lib/docker/volumes -v /:/host portainer/agent:2.22.0\n```\n\n----------------------------------------\n\nTITLE: Defining Portainer Community Edition Roles and Bindings\nDESCRIPTION: This markdown table defines the roles and their corresponding cluster and namespace role bindings for Portainer Community Edition. It shows the differences between Admin and User roles in terms of access restrictions.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/kubernetes-roles-and-bindings.md#2025-04-13_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Portainer Role | Cluster Role Binding                                                    | Namespace Role Binding                            |\n| -------------- | ----------------------------------------------------------------------- | ------------------------------------------------- |\n| Admin          | (no restriction)                                                        | (no restriction)                                  |\n| User           | [portainer-cr-user](kubernetes-roles-and-bindings.md#portainer-cr-user) | edit (default k8s role, only assigned namespaces) |\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Server Container on Windows\nDESCRIPTION: Docker run command to deploy Portainer Server on Windows Container Service. The command maps ports 8000 and 9443, names the container, sets it to restart automatically, and mounts the Docker pipe and data volume.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/wcs.md#2025-04-13_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart always -v \\\\.\\pipe\\docker_engine:\\\\.\\pipe\\docker_engine -v portainer_data:C:\\data portainer/portainer-ce:lts\n```\n\n----------------------------------------\n\nTITLE: Basic Structure of App Template JSON Format\nDESCRIPTION: The basic structure for app template definitions, showing how templates are organized in an array within a version object.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": \"2\",\n  \"templates\": [\n    {\n      // template1\n    },\n    {\n      // template2\n    },\n    ...\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Portainer BE Version Compatibility Table\nDESCRIPTION: Markdown table showing version compatibility between Portainer Business Edition releases and container platforms. Includes release dates, supported Docker versions, Kubernetes versions, Podman versions, and supported architectures.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/requirements-and-prerequisites.md#2025-04-13_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Portainer Version                                     | Release Date       | Docker Version            | Kubernetes Version       | Podman Version | Architectures                                                                                          |\n| ----------------------------------------------------- | ------------------ | ------------------------- | ------------------------ | -------------- | ------------------------------------------------------------------------------------------------------ |\n| [Business 2.27.3](../release-notes.md#release-2.27.3) | March 25, 2025     | 26.0.2 27.0.3             | 1.29 1.30 1.31           | 5.2.3          | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Stack to Docker Swarm\nDESCRIPTION: Command to deploy the Portainer stack to Docker Swarm using the downloaded YAML manifest file.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/swarm/linux.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker stack deploy -c portainer-agent-stack.yml portainer\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Server Container with Podman\nDESCRIPTION: Runs the Portainer Server container, mapping necessary ports and volumes. This command sets up Portainer BE with access to the Podman socket and persistent data storage.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/podman/linux.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npodman run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always --privileged -v /run/podman/podman.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ee:lts\n```\n\n----------------------------------------\n\nTITLE: Generating JWT Authentication Token for Portainer API\nDESCRIPTION: HTTP POST request to authenticate and generate a JWT token. This token is required for authorization when making API calls to Portainer.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/api.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttp POST https://my-portainer-server:9443/api/auth Username=\"admin\" Password=\"adminpassword\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Server with mTLS on Docker Standalone\nDESCRIPTION: Docker run command to start Portainer Server with mTLS support by mounting certificates and specifying the required mTLS parameters. Requires CA certificate, server certificate, and server key to be available at the specified path.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/mtls.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always \\ \n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    -v portainer_data:/data \\\n    -v /root/certs:/certs \\\n    portainer/portainer-ee:lts \\\n    --mtlscacert /certs/mtlsca.crt \\    \n    --mtlscert /certs/mtlsserver.crt \\\n    --mtlskey /certs/mtlsserver.key\n\n```\n\n----------------------------------------\n\nTITLE: Required Azure Permissions for Portainer Integration\nDESCRIPTION: Lists the specific Azure permissions needed for Portainer to interact with Azure services. These permissions allow Portainer to read and write to managed Kubernetes clusters, handle deployments, and access resource groups.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/settings/credentials/aks.md#2025-04-13_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMicrosoft.ContainerService/managedClusters/read\nMicrosoft.ContainerService/managedClusters/write\nMicrosoft.Resources/deployments/*\nMicrosoft.Resources/subscriptions/resourcegroups/read\nMicrosoft.Resources/subscriptions/resourcegroups/write\nMicrosoft.Resources/subscriptions/read\nMicrosoft.ContainerService/managedClusters/listClusterAdminCredential/action\n```\n\n----------------------------------------\n\nTITLE: Upgrading Portainer to Business Edition using Helm on Kubernetes\nDESCRIPTION: This Helm command upgrades Portainer to the Business Edition while maintaining existing deployment settings.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/tobe/kubernetes.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade -n portainer portainer portainer/portainer --set enterpriseEdition.enabled=true\n```\n\n----------------------------------------\n\nTITLE: Running Password Reset Helper for Docker Standalone\nDESCRIPTION: These commands pull and run the password reset helper container for Portainer, mounting the Portainer data volume. The helper will either update the existing admin password or create a new admin user.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull portainer/helper-reset-password\ndocker run --rm -v portainer_data:/data portainer/helper-reset-password\n```\n\n----------------------------------------\n\nTITLE: Running Portainer Business Edition Server on Docker Linux\nDESCRIPTION: Deploys the Portainer Business Edition server container with appropriate port mappings, volume mounts, and restart policy. Maps ports 8000 and 9443, mounts the Docker socket and data volume, and uses the LTS version of the Portainer EE image.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/linux.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ee:lts\n```\n\n----------------------------------------\n\nTITLE: Authenticating Against Portainer API with Admin Credentials\nDESCRIPTION: Performs authentication against the Portainer API using admin credentials to receive a JWT token for subsequent API calls. The token is valid for 8 hours.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/examples.md#2025-04-13_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nhttp POST <portainer url>/api/auth Username=\"<admin username>\" Password=\"<adminpassword>\"\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for Portainer Community Edition with Nginx Proxy\nDESCRIPTION: Docker Compose configuration for deploying Portainer Community Edition behind Nginx reverse proxy in a standalone Docker environment. Uses nginxproxy/nginx-proxy for automatic proxy configuration.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/nginx.md#2025-04-13_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: \"2\"\n\nservices:\n  nginx-proxy:\n    image: nginxproxy/nginx-proxy\n    restart: always\n    ports:\n      - \"80:80\"\n    volumes:\n      - \"/var/run/docker.sock:/tmp/docker.sock:ro\"\n\n  portainer:\n    image: portainer/portainer-ce:lts\n    command: -H unix:///var/run/docker.sock\n    restart: always\n    environment:\n      - VIRTUAL_HOST=portainer.yourdomain.com\n      - VIRTUAL_PORT=9000\n    ports:\n      - 8000:8000\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - portainer_data:/data\n\nvolumes:\n  portainer_data:\n```\n\n----------------------------------------\n\nTITLE: Creating Password Reset Pod YAML for Kubernetes\nDESCRIPTION: This command creates a YAML file for a password reset pod in Kubernetes. The pod mounts the Portainer persistent volume claim to access the database and reset the password.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncat > passreset.yml<< EOF\napiVersion: v1\nkind: Pod\nmetadata:\n  name: passreset\nspec:\n  volumes:\n    - name: data\n      persistentVolumeClaim:\n        claimName: portainer\n  containers:\n    - name: passreset\n      image: portainer/helper-reset-password\n      volumeMounts:\n        - mountPath: \"/data\"\n          name: data\n  restartPolicy: Never\nEOF\n```\n\n----------------------------------------\n\nTITLE: Specifying Platform for Portainer Template in JSON\nDESCRIPTION: Shows how to define the supported platform for a template, which affects the icon displayed in the Portainer UI.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n{ \"platform\": \"linux\" }\n```\n\n----------------------------------------\n\nTITLE: Generating Kubeconfig for On-premise Kubernetes Clusters\nDESCRIPTION: Command to generate a flattened and minified kubeconfig file for on-premise Kubernetes clusters using kubectl.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kubernetes/import.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl config view --flatten=true --minify=true > kubeconfig.yml\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Secrets for mTLS Certificates\nDESCRIPTION: Commands to create Docker secrets for the CA certificate, client certificate, and client key. These secrets will be used in the Edge Agent deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/mtls.md#2025-04-13_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker secret create portainer.mtlscacert /root/certs/mtlsca.crt\ndocker secret create portainer.mtlscert /root/certs/client.crt\ndocker secret create portainer.mtlskey /root/certs/client.key\n```\n\n----------------------------------------\n\nTITLE: Deploying Edge Agent with mTLS on Docker Standalone\nDESCRIPTION: Docker run command to deploy a Portainer Edge Agent with mTLS support. Mounts the required certificates and sets the necessary environment variables for secure communication with the Portainer Server.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/mtls.md#2025-04-13_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v /var/lib/docker/volumes:/var/lib/docker/volumes \\\n  -v /:/host \\\n  -v /root/certs:/certs \\\n  -v portainer_agent_data:/data \\\n  --restart always \\\n  -e EDGE=1 \\\n  -e EDGE_ID=your-edge-id \\\n  -e EDGE_KEY=your-edge-key \\\n  -e EDGE_INSECURE_POLL=0 \\\n  --name portainer_edge_agent \\\n  portainer/agent:lts \\\n  --mtlscacert /certs/mtlsca.crt \\\n  --mtlscert /certs/client.crt \\\n  --mtlskey /certs/client.key\n```\n\n----------------------------------------\n\nTITLE: Initializing Admin Password in Portainer API\nDESCRIPTION: Creates an admin account on a fresh Portainer installation. This API call sets up the initial admin username and password, which is required before using Portainer.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/examples.md#2025-04-13_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nhttp POST <portainer url>/api/users/admin/init Username=\"<admin username>\" Password=\"<adminpassword>\"\n```\n\n----------------------------------------\n\nTITLE: Checking Portainer Container Status\nDESCRIPTION: Example output of docker ps command showing the running Portainer Server and Agent containers.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/swarm/linux.md#2025-04-13_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nroot@manager01:~# docker ps\nCONTAINER ID   IMAGE                           COMMAND                  CREATED              STATUS              PORTS                NAMES\n59ee466f6b15   portainer/agent:lts             \"./agent\"                About a minute ago   Up About a minute                        portainer_agent.xbb8k6r7j1tk9gozjku7e43wr.5sa6b3e8cl6hyu0snlt387sgv\n2db7dd4bfba0   portainer/portainer-ce:lts      \"/portainer -H tcp:/…\"   About a minute ago   Up About a minute   8000/tcp, 9443/tcp   portainer_portainer.1.gpuvu3pqmt1m19zxfo44v7izx\n```\n\n----------------------------------------\n\nTITLE: Container Ports Configuration\nDESCRIPTION: Example showing how to configure port mappings for a template, with both explicit host:container mappings and container-only specifications.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"ports\": [\"8080:80/tcp\", \"443/tcp\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Definition in Docker Compose\nDESCRIPTION: Shows how to define environment variables in a Docker Compose file using the environment block. Variables defined in Portainer can be referenced using ${VARIABLE_NAME} syntax.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/stacks/add.md#2025-04-13_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nenvironment:\n  MY_ENVIRONMENT_VARIABLE: ${MY_ENVIRONMENT_VARIABLE}\n```\n\n----------------------------------------\n\nTITLE: Verifying Portainer Container Status with Docker PS\nDESCRIPTION: Displays the running Docker containers to verify that the Portainer Server container is running correctly. Shows container ID, image, command, creation time, status, mapped ports, and container name.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/linux.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nroot@server:~# docker ps\nCONTAINER ID   IMAGE                          COMMAND                  CREATED       STATUS      PORTS                                                                                  NAMES             \nde5b28eb2fa9   portainer/portainer-ee:lts     \"/portainer\"             2 weeks ago   Up 9 days   0.0.0.0:8000->8000/tcp, :::8000->8000/tcp, 0.0.0.0:9443->9443/tcp, :::9443->9443/tcp   portainer\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer with Custom SSL Certificate on Docker Standalone\nDESCRIPTION: Docker run command to deploy Portainer with custom SSL certificate and key. Mounts certificate files from host to container and specifies them using --sslcert and --sslkey flags.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/ssl.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 9443:9443 -p 8000:8000 \\\n    --name portainer --restart always \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    -v portainer_data:/data \\\n    -v /path/to/your/certs:/certs \\\n    portainer/portainer-ee:lts \\\n    --sslcert /certs/portainer.crt \\\n    --sslkey /certs/portainer.key\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Business Edition with Podman\nDESCRIPTION: This command deploys the latest version of Portainer Business Edition using Podman. It sets up necessary port mappings, volume mounts, and uses the privileged mode for full functionality.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/tobe/podman.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npodman run -d -p 8000:8000 -p 9000:9000 -p 9443:9443 --name=portainer --restart=always --pull=always --privileged -v /run/podman/podman.sock:/run/podman/podman.sock -v portainer_data:/data portainer/portainer-ee:lts\n```\n\n----------------------------------------\n\nTITLE: JWT Token Response Format from Portainer Authentication\nDESCRIPTION: Sample response from the authentication API call showing the JWT token structure. This token must be used in the authorization header for authenticated API requests.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/examples.md#2025-04-13_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"jwt\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Server Container with Podman\nDESCRIPTION: Runs the Portainer Server container, mapping necessary ports and volumes. This command sets up Portainer with SSL on port 9443 and a TCP tunnel on port 8000.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/podman/linux.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npodman run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always --privileged -v /run/podman/podman.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:lts\n```\n\n----------------------------------------\n\nTITLE: Encrypted Portainer Stack Deployment in Docker Swarm\nDESCRIPTION: Docker Compose file for deploying Portainer in Swarm mode with database encryption enabled, including agent and network configurations.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/db-encryption.md#2025-04-13_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3.2'\n\nservices:\n  agent:\n    image: portainer/agent:lts\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /var/lib/docker/volumes:/var/lib/docker/volumes\n    networks:\n      - agent_network\n    deploy:\n      mode: global\n      placement:\n        constraints: [node.platform.os == linux]\n\n  portainer:\n    image: portainer/portainer-ee:lts\n    command: -H tcp://tasks.agent:9001 --tlsskipverify\n    ports:\n      - \"9443:9443\"\n      - \"9000:9000\"\n      - \"8000:8000\"\n    volumes:\n      - portainer_data:/data\n    networks:\n      - agent_network\n    deploy:\n      mode: replicated\n      replicas: 1\n      placement:\n        constraints: [node.role == manager]\n    secrets:\n      - portainer\n\nnetworks:\n  agent_network:\n    driver: overlay\n    attachable: true\n\nvolumes:\n  portainer_data:\n      \nsecrets:\n  portainer:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Container Volumes Configuration\nDESCRIPTION: Example showing how to configure volumes for a template, including standard volumes and bind mounts with readonly options.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"volumes\": [\n    {\n      \"container\": \"/etc/nginx\"\n    },\n    {\n      \"container\": \"/usr/share/nginx/html\",\n      \"bind\": \"/var/www\",\n      \"readonly\": true\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer via Helm with NodePort\nDESCRIPTION: Helm command to install Portainer CE with NodePort exposure on HTTPS port 30779.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/baremetal.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install --create-namespace -n portainer portainer portainer/portainer \\\n    --set tls.force=true \\\n    --set image.tag=lts\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer BE using YAML with NodePort Exposure\nDESCRIPTION: kubectl command to deploy Portainer Business Edition using a YAML manifest with NodePort exposure on ports 30777 (HTTP) and 30779 (HTTPS).\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/wsl.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n portainer -f https://downloads.portainer.io/ee-lts/portainer.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating SSL Certificate Secrets for Portainer on Docker Swarm\nDESCRIPTION: Docker commands to create secrets for SSL certificate and key in Docker Swarm. These secrets will be automatically detected and used by Portainer.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/ssl.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker secret create portainer.sslcert /path/to/your/certificate.crt\ndocker secret create portainer.sslkey /path/to/your/certificate.key\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Secrets for Portainer mTLS Certificates\nDESCRIPTION: Commands to create Docker secrets for storing mTLS certificates securely in a Docker Swarm environment. Creates secrets for the CA certificate, server certificate, and server key.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/mtls.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker secret create portainer.mtlscacert /root/certs/mtlsca.crt\ndocker secret create portainer.mtlscert /root/certs/mtlsserver.crt\ndocker secret create portainer.mtlskey /root/certs/mtlsserver.key\n```\n\n----------------------------------------\n\nTITLE: Initializing Admin Password in Portainer API\nDESCRIPTION: HTTP POST request to initialize the admin password in Portainer. This is a required first step before using the Portainer API.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/api.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhttp POST https://my-portainer-server:9443/api/users/admin/init Username=\"admin\" Password=\"adminpassword\"\n```\n\n----------------------------------------\n\nTITLE: Triggering a Webhook with HTML Form\nDESCRIPTION: This HTML snippet demonstrates how to create a form that triggers a webhook when submitted. It includes the webhook URL and a submit button to redeploy the application.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/kubernetes/applications/webhooks.md#2025-04-13_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"https://portainer:9443/api/stacks/webhooks/40ac1662-47c3-4a8e-b148-2a34eb52bb42\" method=\"post\">\n  Redeploy application <input type=\"submit\" />\n</form>\n```\n\n----------------------------------------\n\nTITLE: Container Privileged Mode Configuration\nDESCRIPTION: Example showing how to configure a container to run in privileged mode, which gives extended permissions.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"privileged\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Business Edition Server Container on Windows\nDESCRIPTION: Docker run command to deploy Portainer Business Edition Server on Windows, configuring the container to use Windows pipe for Docker communication, exposing required ports (8000 and 9443), and mounting the previously created data volume.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/wcs.md#2025-04-13_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart always -v \\\\.\\pipe\\docker_engine:\\\\.\\pipe\\docker_engine -v portainer_data:C:\\data portainer/portainer-ee:lts\n```\n\n----------------------------------------\n\nTITLE: Downloading Portainer Stack YML Manifest for Docker Swarm\nDESCRIPTION: Curl commands to download the Portainer stack YML manifest for Docker Swarm deployment. Separate commands for Business and Community editions on Linux/Windows and Windows Container Services.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/ssl.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L https://downloads.portainer.io/ee-lts/portainer-agent-stack-ssl.yml -o portainer-agent-stack.yml\n```\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L https://downloads.portainer.io/ce-lts/portainer-agent-stack-ssl.yml -o portainer-agent-stack.yml\n```\n\nLANGUAGE: bash\nCODE:\n```\ncurl https://downloads.portainer.io/ee-lts/portainer-windows-stack-ssl.yml -o portainer-agent-stack.yml\n```\n\nLANGUAGE: bash\nCODE:\n```\ncurl https://downloads.portainer.io/ce-lts/portainer-windows-stack-ssl.yml -o portainer-agent-stack.yml\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for Portainer Community Edition with Traefik\nDESCRIPTION: Docker Compose configuration that sets up Traefik as a reverse proxy with SSL support and Portainer Community Edition. Similar to Business Edition but uses the CE image.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: \"3.3\"\n\nservices:\n  traefik:\n    container_name: traefik\n    image: \"traefik:latest\"\n    command:\n      - --entrypoints.web.address=:80\n      - --entrypoints.websecure.address=:443\n      - --providers.docker\n      - --log.level=ERROR\n      - --certificatesresolvers.leresolver.acme.httpchallenge=true\n      - --certificatesresolvers.leresolver.acme.email=your-email\n      - --certificatesresolvers.leresolver.acme.storage=./acme.json\n      - --certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=web\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - \"/var/run/docker.sock:/var/run/docker.sock:ro\"\n      - \"./acme.json:/acme.json\"\n    labels:\n      - \"traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)\"\n      - \"traefik.http.routers.http-catchall.entrypoints=web\"\n      - \"traefik.http.routers.http-catchall.middlewares=redirect-to-https\"\n      - \"traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https\"\n\n  portainer:\n    image: portainer/portainer-ce:lts\n    command: -H unix:///var/run/docker.sock\n    restart: always\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - portainer_data:/data\n    labels:\n      # Frontend\n      - \"traefik.enable=true\"\n      - \"traefik.http.routers.frontend.rule=Host(`portainer.yourdomain.com`)\"\n      - \"traefik.http.routers.frontend.entrypoints=websecure\"\n      - \"traefik.http.services.frontend.loadbalancer.server.port=9000\"\n      - \"traefik.http.routers.frontend.service=frontend\"\n      - \"traefik.http.routers.frontend.tls.certresolver=leresolver\"\n\n      # Edge\n      - \"traefik.http.routers.edge.rule=Host(`edge.yourdomain.com`)\"\n      - \"traefik.http.routers.edge.entrypoints=websecure\"\n      - \"traefik.http.services.edge.loadbalancer.server.port=8000\"\n      - \"traefik.http.routers.edge.service=edge\"\n      - \"traefik.http.routers.edge.tls.certresolver=leresolver\"\n\n\nvolumes:\n  portainer_data:\n```\n\n----------------------------------------\n\nTITLE: Docker Compose configuration for Portainer Community Edition with Traefik\nDESCRIPTION: YAML configuration for deploying Portainer Community Edition with Traefik Proxy in Docker Swarm. Similar to the Business Edition configuration but uses the portainer/portainer-ce:lts image.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3.2'\n\nservices:\n  traefik:\n    image: \"traefik:latest\"\n    command:\n      - --entrypoints.web.address=:80\n      - --entrypoints.websecure.address=:443\n      - --providers.docker=true\n      - --providers.docker.swarmMode=true\n      - --providers.docker.exposedbydefault=false\n      - --providers.docker.network=public\n      - --api\n      - --log.level=ERROR\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    networks:\n      - public\n    volumes:\n      - \"/var/run/docker.sock:/var/run/docker.sock:ro\"\n\n  agent:\n    image: portainer/agent:lts\n    environment:\n      # REQUIRED: Should be equal to the service name prefixed by \"tasks.\" when\n      # deployed inside an overlay network\n      AGENT_CLUSTER_ADDR: tasks.agent\n      # AGENT_PORT: 9001\n      # LOG_LEVEL: debug\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /var/lib/docker/volumes:/var/lib/docker/volumes\n    networks:\n      - agent_network\n    deploy:\n      mode: global\n      placement:\n        constraints: [node.platform.os == linux]\n\n  portainer:\n    image: portainer/portainer-ce:lts\n    command: -H tcp://tasks.agent:9001 --tlsskipverify\n    volumes:\n      - data:/data\n    networks:\n      - public\n      - agent_network\n    deploy:\n      mode: replicated\n      replicas: 1\n      placement:\n        constraints: [node.role == manager]\n      labels:\n      - \"traefik.enable=true\"\n      - \"traefik.http.routers.portainer.rule=Host(`portainer.yourdomain.com`)\"\n      - \"traefik.http.routers.portainer.entrypoints=web\"\n      - \"traefik.http.services.portainer.loadbalancer.server.port=9000\"\n      - \"traefik.http.routers.portainer.service=portainer\"\n      # Edge\n      - \"traefik.http.routers.edge.rule=Host(`edge.yourdomain.com`)\"\n      - \"traefik.http.routers.edge.entrypoints=web\"\n      - \"traefik.http.services.edge.loadbalancer.server.port=8000\"\n      - \"traefik.http.routers.edge.service=edge\"\n\nnetworks:\n  public:\n    external: true\n  agent_network:\n    external: true\n\nvolumes:\n   data:\n```\n\n----------------------------------------\n\nTITLE: Running Encrypted Portainer Container in Docker Standalone\nDESCRIPTION: Docker run command to start Portainer with an encrypted database, including volume mounts for the Docker socket, Portainer data, and the encryption secret.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/db-encryption.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9443:9443 --name portainer \\\n    --restart=always \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    -v portainer_data:/data \\\n    -v /root/secrets/portainer:/run/secrets/portainer \\\n    portainer/portainer-ee:lts\n```\n\n----------------------------------------\n\nTITLE: Adding TLS-Secured Remote Docker Environment via Portainer API\nDESCRIPTION: HTTP POST request to add a remote environment using TLS-secured TCP communication. Requires certificate files and Docker API exposed on the specified port.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/api.md#2025-04-13_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhttp --form POST https://my-portainer-server:9443/api/endpoints \\\n    \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE\" \\\n    Name=\"test-remote-tls\" URL=\"tcp://10.0.7.10:2376\" EndpointCreationType=1 TLS=\"true\" TLSCACertFile@/path/to/ca.pem TLSCertFile@/path/to/cert.pem TLSKeyFile@/path/to/key.pem\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer CE 2.0.0 on Docker Standalone\nDESCRIPTION: Command to deploy Portainer CE 2.0.0 with persistent data and necessary port mappings.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/from-1.x.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:2.0.0\n```\n\n----------------------------------------\n\nTITLE: Updating Helm Repository for Portainer Upgrade on Kubernetes\nDESCRIPTION: This command updates the Helm repository to ensure the latest version of Portainer is available for upgrade.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/tobe/kubernetes.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Configuring Portainer Server with mTLS in Docker Swarm YAML\nDESCRIPTION: YAML configuration for deploying Portainer Server with mTLS support in Docker Swarm using Docker secrets. Includes service definition with command arguments for using the mTLS certificates.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/mtls.md#2025-04-13_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  portainer:\n    image: portainer/portainer-ee:lts\n    command: -H tcp://tasks.agent:9001 --tlsskipverify --mtlscacert /run/secrets/portainer.mtlscacert --mtlscert /run/secrets/portainer.mtlscert --mtlskey /run/secrets/portainer.mtlskey\n    ports:\n      - \"9443:9443\"\n      - \"9000:9000\"\n      - \"8000:8000\"\n    volumes:\n      - portainer_data:/data\n    networks:\n      - agent_network\n    deploy:\n      mode: replicated\n      replicas: 1\n      placement:\n        constraints: [node.role == manager]\n    secrets:\n        - portainer.mtlscacert\n        - portainer.mtlsscert\n        - portainer.mtlskey\n```\n\n----------------------------------------\n\nTITLE: Container Network Configuration\nDESCRIPTION: Example showing how to specify a network to use with the template, which will be auto-selected in the templates view.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"network\": \"host\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Default StorageClass in Kubernetes\nDESCRIPTION: Command to set a StorageClass as the default in a Kubernetes cluster using kubectl patch.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/baremetal.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch storageclass <storage-class-name> -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'\n```\n\n----------------------------------------\n\nTITLE: Creating Portainer Data Volume\nDESCRIPTION: Creates a Docker volume to store Portainer's persistent data.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/linux.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker volume create portainer_data\n```\n\n----------------------------------------\n\nTITLE: Docker Stack Configuration for Portainer Community Edition with Nginx Proxy\nDESCRIPTION: Docker Stack configuration for deploying Portainer Community Edition with Nginx reverse proxy in a Swarm environment. Includes agent configuration and network setup for cluster management.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/nginx.md#2025-04-13_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3.2'\n\nservices:\n  nginx-proxy:\n    image: nginxproxy/nginx-proxy\n    networks:\n      - proxy\n    ports:\n      - \"80:80\"\n    volumes:\n      - \"/var/run/docker.sock:/tmp/docker.sock:ro\"\n      - \"./vhost.d:/etc/nginx/vhost.d:ro\"\n\n  agent:\n    image: portainer/agent:lts\n    environment:\n      AGENT_CLUSTER_ADDR: tasks.agent\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /var/lib/docker/volumes:/var/lib/docker/volumes\n    networks:\n      - agent_network\n    deploy:\n      mode: global\n      placement:\n        constraints: [node.platform.os == linux]\n\n  portainer:\n    image: portainer/portainer-ce:lts\n    command: -H tcp://tasks.agent:9001 --tlsskipverify\n    volumes:\n      - data:/data\n    environment:\n      - VIRTUAL_HOST=portainer.yourdomain.com\n      - VIRTUAL_PORT=9000\n    ports:\n      - 8000:8000\n    networks:\n      - proxy\n      - agent_network\n    deploy:\n      mode: replicated\n      replicas: 1\n      placement:\n        constraints: [node.role == manager]\n\nnetworks:\n  proxy:\n    external: true\n  agent_network:\n    external: true\n\nvolumes:\n   data:\n```\n\n----------------------------------------\n\nTITLE: Mounting Host Filesystem for Host Management Features\nDESCRIPTION: This code snippet shows the additional volume mount needed to enable host management features in Portainer Agent, which maps the host root filesystem to /host in the container.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/docker/agent.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n-v /:/host\n```\n\n----------------------------------------\n\nTITLE: Running Portainer Templates Container with Live Updates\nDESCRIPTION: This snippet shows how to run the Portainer templates container with a volume mount to enable live updates to the templates.json file without rebuilding the container.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/build.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p \"8080:80\" -v \"${PWD}/templates.json:/usr/share/nginx/html/templates.json\" portainer-templates\n```\n\n----------------------------------------\n\nTITLE: Installing Docker CE on Windows Server\nDESCRIPTION: PowerShell commands to download and execute Microsoft's Docker CE installation script for Windows Container Host Service.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/swarm/wcs.md#2025-04-13_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-WebRequest -UseBasicParsing \"https://raw.githubusercontent.com/microsoft/Windows-Containers/Main/helpful_tools/Install-DockerCE/install-docker-ce.ps1\" -o install-docker-ce.ps1\n.\\install-docker-ce.ps1\n```\n\n----------------------------------------\n\nTITLE: Patching Portainer Deployment for Node Selection\nDESCRIPTION: kubectl command to patch the Portainer deployment to ensure pod scheduling on a specific node.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/baremetal.md#2025-04-13_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch deployments -n portainer portainer -p '{\"spec\": {\"template\": {\"spec\": {\"nodeSelector\": {\"kubernetes.io/hostname\": \"'$(kubectl get pods -n portainer -o jsonpath='{ ..nodeName }')'\"}}}}}}' || (echo Failed to identify current node of portainer pod; exit 1)\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for Portainer Business Edition with Nginx Proxy\nDESCRIPTION: Docker Compose configuration for deploying Portainer Business Edition behind Nginx reverse proxy in a standalone Docker environment. Uses nginxproxy/nginx-proxy for automatic proxy configuration.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/nginx.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nversion: \"2\"\n\nservices:\n  nginx-proxy:\n    image: nginxproxy/nginx-proxy\n    restart: always\n    ports:\n      - \"80:80\"\n    volumes:\n      - \"/var/run/docker.sock:/tmp/docker.sock:ro\"\n\n  portainer:\n    image: portainer/portainer-ee:lts\n    command: -H unix:///var/run/docker.sock\n    restart: always\n    environment:\n      - VIRTUAL_HOST=portainer.yourdomain.com\n      - VIRTUAL_PORT=9000\n    ports:\n      - 8000:8000\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - portainer_data:/data\n\nvolumes:\n  portainer_data:\n```\n\n----------------------------------------\n\nTITLE: Updating Portainer Community Edition via Helm\nDESCRIPTION: Helm command to upgrade Portainer Community Edition to the latest version\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/kubernetes.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade -n portainer portainer portainer/portainer \\\n    --set image.tag=lts\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer via YAML with NodePort\nDESCRIPTION: kubectl command to deploy Portainer using YAML manifests with NodePort exposure.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/baremetal.md#2025-04-13_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n portainer -f https://downloads.portainer.io/ce-lts/portainer.yaml\n```\n\n----------------------------------------\n\nTITLE: Force Update Portainer Deployment\nDESCRIPTION: Kubernetes command to force restart the Portainer deployment and pull the latest image\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/kubernetes.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n portainer rollout restart deployment.apps/portainer\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Edge Agent with mTLS Support in Docker Swarm\nDESCRIPTION: Modified Docker service create command for deploying the Portainer Edge Agent with mTLS support. It includes network creation, environment variables, and mounts for the Docker socket and volumes.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/mtls.md#2025-04-13_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ndocker network create \\\n  --driver overlay \\\n  portainer_agent_network;\n\ndocker service create \\\n  --name portainer_edge_agent \\\n  --network portainer_agent_network \\\n  -e EDGE=1 \\\n  -e EDGE_ID=your-edge-id \\\n  -e EDGE_KEY=your-edge-key \\\n  -e EDGE_INSECURE_POLL=0 \\\n  -e AGENT_CLUSTER_ADDR=tasks.portainer_edge_agent \\\n  --mode global \\\n  --constraint 'node.platform.os == linux' \\\n  --mount type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock \\\n  --mount type=bind,src=//var/lib/docker/volumes,dst=/var/lib/docker/volumes \\\n  --mount type=bind,src=//,dst=/host \\\n  --mount type=volume,src=portainer_agent_data,dst=/data \\\n  portainer/agent:lts \\\n  --mtlscacert /run/secrets/portainer.mtlscacert \\\n  --mtlscert /run/secrets/portainer.mtlscert \\\n  --mtlskey /run/secrets/portainer.mtlskey\n```\n\n----------------------------------------\n\nTITLE: Modifying Docker Volume Path for Non-Standard Locations\nDESCRIPTION: Example of how to adjust the volume mount in the Portainer Agent deployment command for systems with non-standard Docker volume paths.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/swarm/agent.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n--mount type=bind,src=//srv/data/docker,dst=/var/lib/docker/volumes \\\n```\n\n----------------------------------------\n\nTITLE: Portainer Server Access URL\nDESCRIPTION: The URL to access the Portainer server web interface after installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/swarm/linux.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Enabling Podman Socket on Linux\nDESCRIPTION: Ensures the Podman socket is enabled for communication with Portainer.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/podman/linux.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl enable --now podman.socket\n```\n\n----------------------------------------\n\nTITLE: Building and Running Portainer Templates Container\nDESCRIPTION: This snippet demonstrates how to clone the Portainer templates repository, customize the templates file, and build and run it as a container to serve the JSON file on port 8080.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/build.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/portainer/templates.git portainer-templates\ncd portainer-templates\n# Edit the file templates.json\ndocker build -t portainer-templates .\ndocker run -d -p \"8080:80\" portainer-templates\n```\n\n----------------------------------------\n\nTITLE: Restricting Stack Access to Teams Using Docker Compose in YAML\nDESCRIPTION: This Docker Compose example shows how to deploy a stack and restrict access to teams 'dev' and 'prod' using Portainer access control labels.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/access-control.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3.2'\nservices:\n    ltest:\n        image: busybox:latest\n        command: \"ping localhost\"\n        labels:\n            io.portainer.accesscontrol.teams: dev,prod\n```\n\n----------------------------------------\n\nTITLE: Adding Portainer Helm Repository\nDESCRIPTION: Commands to add and update the Portainer Helm repository before installation\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/wsl.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add portainer https://portainer.github.io/k8s/\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Creating a Docker Secret for Portainer Encryption in Swarm\nDESCRIPTION: Command to create a Docker secret for Portainer database encryption in a Swarm environment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/db-encryption.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\necho \"This is a secret\" | docker secret create portainer -\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer via Helm with Ingress\nDESCRIPTION: Helm command to install Portainer CE with Ingress configuration and SSL settings\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/wsl.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install --create-namespace -n portainer portainer portainer/portainer \\\n    --set service.type=ClusterIP \\\n    --set tls.force=true \\\n    --set image.tag=lts \\\n    --set ingress.enabled=true \\\n    --set ingress.ingressClassName=<ingressClassName (eg: nginx)> \\\n    --set ingress.annotations.\"nginx\\.ingress\\.kubernetes\\.io/backend-protocol\"=HTTPS \\\n    --set ingress.hosts[0].host=<fqdn (eg: portainer.example.io)> \\\n    --set ingress.hosts[0].paths[0].path=\"/\"\n```\n\n----------------------------------------\n\nTITLE: Mounting Docker Volumes for Edge Agent Deployment\nDESCRIPTION: This code snippet demonstrates how to adjust the volume mount in the Edge Agent deployment command when Docker uses a non-standard volume path. It shows an example of changing the source path while keeping the destination path consistent with Edge Agent expectations.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/swarm/edge-async.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--mount type=bind,src=//srv/data/docker,dst=/var/lib/docker/volumes \\\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Stack to Docker Swarm\nDESCRIPTION: This command deploys the Portainer stack to the Docker Swarm cluster using the downloaded YML manifest. It creates a stack named 'portainer' with the Portainer Server and Agent services.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/swarm/wsl.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker stack deploy -c portainer-agent-stack.yml portainer\n```\n\n----------------------------------------\n\nTITLE: Downloading Edge Agent Manifest for Kubernetes (Community Edition)\nDESCRIPTION: Command to download the updated YAML manifest for the Portainer Edge Agent in Kubernetes (Community Edition).\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/edge.md#2025-04-13_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L https://downloads.portainer.io/ce-lts/portainer-agent-edge-k8s.yaml -o portainer-agent-edge-k8s.yaml\n```\n\n----------------------------------------\n\nTITLE: Upgrading Portainer to Business Edition (Load Balancer) using kubectl on Kubernetes\nDESCRIPTION: This kubectl command applies the latest Portainer Business YAML manifest for a Load Balancer deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/tobe/kubernetes.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n portainer -f https://downloads.portainer.io/ee-lts/portainer-lb.yaml\n```\n\n----------------------------------------\n\nTITLE: Triggering Webhook Update Without Pulling Images in HTML\nDESCRIPTION: This HTML form demonstrates how to trigger a webhook to update the stack without pulling images by using the 'pullimage=false' parameter.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/stacks/webhooks.md#2025-04-13_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"https://portainer:9443/api/stacks/webhooks/638e6967-ef77-4906-8af8-236800621360?pullimage=false\" method=\"post\">\n  Update stack without pulling images <input type=\"submit\" />\n</form>\n```\n\n----------------------------------------\n\nTITLE: Adding Portainer Helm Repository for Kubernetes Installation\nDESCRIPTION: Commands to add the Portainer Helm repository and update the repository information before installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/wsl.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add portainer https://portainer.github.io/k8s/\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer BE via Helm with LoadBalancer Exposure\nDESCRIPTION: Helm command to install Portainer Business Edition exposed via a LoadBalancer, making it available on ports 9000 (HTTP) and 9443 (HTTPS).\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/wsl.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install --create-namespace -n portainer portainer portainer/portainer \\\n    --set service.type=LoadBalancer \\\n    --set enterpriseEdition.enabled=true \\\n    --set enterpriseEdition.image.tag=lts\n```\n\n----------------------------------------\n\nTITLE: Configuring Portainer Container with Syslog Streaming in Docker\nDESCRIPTION: Example Docker run command that demonstrates how to start a Portainer container with Syslog streaming enabled. This configuration sends logs to a SIEM provider at syslog.mydomain.com on UDP port 514 and specifies a custom hostname for the source.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/siem.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9443:9443 \\\n    --name portainer \\\n    --restart=always \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    -v portainer_data:/data \\\n    portainer/portainer-ee:lts \\\n    --syslog-addr=syslog.mydomain.com \\\n    --syslog-port=514 \\\n    --syslog-source-hostname=\"my-portainer-instance\"\n```\n\n----------------------------------------\n\nTITLE: Docker Volume Path Mount Configuration\nDESCRIPTION: Example command showing how to modify the Docker volume mount path when deploying Edge Agent with a non-standard Docker volume location.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/docker/edge.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n- v /srv/data/docker:/var/lib/docker/volumes \\\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer BE via Helm with NodePort Exposure\nDESCRIPTION: Helm command to install Portainer Business Edition exposed via NodePort, making it available on ports 30777 (HTTP) and 30779 (HTTPS).\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/wsl.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install --create-namespace -n portainer portainer portainer/portainer \\\n    --set enterpriseEdition.enabled=true \\\n    --set enterpriseEdition.image.tag=lts\n```\n\n----------------------------------------\n\nTITLE: Verifying Portainer Container Status\nDESCRIPTION: This command lists running Docker containers, allowing you to check if the Portainer container is up and running with the correct port mappings.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/wsl.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps\n```\n\n----------------------------------------\n\nTITLE: Verifying Portainer deployment in Docker Swarm\nDESCRIPTION: Command to check the deployment status of Portainer services in Docker Swarm and an example of the expected output.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ndocker service ls\n```\n\nLANGUAGE: bash\nCODE:\n```\nID                  NAME                  MODE                REPLICAS            IMAGE                          PORTS\nlt21zrypsll6        portainer_agent       global              1/1                 portainer/agent:lts\nm6912ynwdcd7        portainer_portainer   replicated          1/1                 portainer/portainer-ee:lts\ntw2nb4i640e4        portainer_traefik     replicated          1/1                 traefik:latest                 *:80->80/tcp, *:443->443/tcp\n```\n\n----------------------------------------\n\nTITLE: Docker Swarm Service Creation Output\nDESCRIPTION: Example output when deploying the Portainer Agent service to a Docker Swarm cluster.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/swarm/agent.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nCreating network portainer-agent_portainer_agent\nCreating service portainer-agent_agent\n```\n\n----------------------------------------\n\nTITLE: Implementing Redeploy Webhook Form in HTML\nDESCRIPTION: HTML form implementation for triggering a webhook to redeploy a service with the latest image of the same tag.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/services/webhooks.md#2025-04-13_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"https://portainer:9443/api/webhooks/638e6967-ef77-4906-8af8-236800621360\" method=\"post\">\n  Redeploy with latest image of same tag <input type=\"submit\" />\n</form>\n```\n\n----------------------------------------\n\nTITLE: Scaling Down Portainer Service in Docker Swarm\nDESCRIPTION: This command scales the Portainer service to zero in a Docker Swarm deployment to prepare for password reset. The service name might need adjustment based on your deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker service scale portainer_portainer=0\n```\n\n----------------------------------------\n\nTITLE: Defining Docker Secrets in Swarm YAML for mTLS\nDESCRIPTION: YAML configuration section for defining external Docker secrets to be used with Portainer in a Docker Swarm. References the previously created secrets for mTLS certificates.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/mtls.md#2025-04-13_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsecrets:\n  portainer.mtlscacert:\n    external: true\n  portainer.mtlscert:\n    external: true\n  portainer.mtlskey:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Defining Variables in YAML for Portainer Custom Templates\nDESCRIPTION: This YAML snippet demonstrates how to define a variable (MYSQL_PASSWORD) in a Portainer custom template. Variables are identified using double curly braces {{ }} and can be customized by users during deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/templates/custom.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\nservices:\n  db:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: {{ MYSQL_PASSWORD }}\n```\n\n----------------------------------------\n\nTITLE: Scaling Down Portainer Deployment in Kubernetes\nDESCRIPTION: This command scales the Portainer deployment to zero replicas in a Kubernetes cluster to prepare for password reset. This assumes Portainer is deployed in the 'portainer' namespace.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl scale deploy portainer --replicas=0 -n portainer\n```\n\n----------------------------------------\n\nTITLE: Mounting Docker Volumes with Custom Path in Edge Agent Deployment\nDESCRIPTION: Example command modification for environments where Docker volumes are stored in a non-standard location. This changes the volume mount source path while keeping the destination path as expected by the Edge Agent.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/swarm/edge.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--mount type=bind,src=//srv/data/docker,dst=/var/lib/docker/volumes \\\n```\n\n----------------------------------------\n\nTITLE: Configuring Relative Path Volumes in Docker Compose\nDESCRIPTION: This Docker Compose snippet demonstrates how to use relative path volumes in an Edge Stack configuration. It references the PORTAINER_EDGE_ID environment variable to create device-specific volume mounts.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/edge/stacks/add.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\n\nservices:\n  myservice:\n    image: myimage:latest\n    volumes:\n      - ./config/${PORTAINER_EDGE_ID}:/my-device-config\n```\n\n----------------------------------------\n\nTITLE: Applying Modified Portainer YAML in Kubernetes\nDESCRIPTION: kubectl command to apply the modified Portainer YAML file with encryption changes in Kubernetes.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/db-encryption.md#2025-04-13_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f portainer.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing Docker CE and Dependencies\nDESCRIPTION: Installs Docker Community Edition (docker-ce), the Docker CLI, and containerd.io which are the core components needed to run Docker on Linux.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install docker-ce docker-ce-cli containerd.io\n```\n\n----------------------------------------\n\nTITLE: Implementing Tag Update Webhook Form in HTML\nDESCRIPTION: HTML form implementation for triggering a webhook to update a service image with a different tag specification.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/services/webhooks.md#2025-04-13_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"https://portainer:9443/api/webhooks/638e6967-ef77-4906-8af8-236800621360?tag=latest\" method=\"post\">\n  Update Service image with different tag <input type=\"submit\" />\n</form>\n```\n\n----------------------------------------\n\nTITLE: Scaling Up Portainer Deployment After Password Reset in Kubernetes\nDESCRIPTION: This command scales the Portainer deployment back to one replica after the password has been reset in a Kubernetes environment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl scale deploy portainer --replicas=1 -n portainer\n```\n\n----------------------------------------\n\nTITLE: Installing HTTPS Repository Dependencies for Docker\nDESCRIPTION: Installs the required packages that allow apt to use repositories over HTTPS, which is necessary for adding the Docker repository.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg-agent \\\n    software-properties-common\n```\n\n----------------------------------------\n\nTITLE: Upgrading Portainer to version 1.24.2 in Docker\nDESCRIPTION: Commands to stop existing Portainer instance, remove it, and deploy version 1.24.2 with persistent storage and Docker socket mounting.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/tobe/docker.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker stop portainer\n\ndocker rm portainer\n\ndocker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer:1.24.2\n```\n\n----------------------------------------\n\nTITLE: Restricting Stack Access to Teams and Users Using Docker Compose in YAML\nDESCRIPTION: This Docker Compose example demonstrates how to deploy a stack through the Docker CLI with access restricted to the 'testers' team and users 'bob' and 'adam'.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/access-control.md#2025-04-13_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3.2'\nservices:\n    ltest:\n        image: busybox:latest\n        command: \"ping localhost\"\n        labels:\n            io.portainer.accesscontrol.teams: testers\n            io.portainer.accesscontrol.users: bob,adam\n```\n\n----------------------------------------\n\nTITLE: Adjusting Podman Volume Mount for Edge Agent Deployment\nDESCRIPTION: Example of modifying the volume mount in the Edge Agent deployment command for a non-standard Podman volume path. This adjustment is necessary when the Podman volume path differs from the default '/var/lib/containers/storage/volumes'.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/podman/edge-async.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n- v /srv/data/podman:/var/lib/docker/volumes \\\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Stack to Docker Swarm\nDESCRIPTION: Docker command to deploy the Portainer stack using the downloaded YAML manifest. This command creates a new stack named 'portainer' in the Docker Swarm cluster.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/swarm/wsl.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker stack deploy -c portainer-agent-stack.yml portainer\n```\n\n----------------------------------------\n\nTITLE: Defining Environment Variables in Docker Compose\nDESCRIPTION: This snippet demonstrates how to define environment variables in a Docker Compose file. It shows how to reference variables that are defined externally, allowing for flexible configuration across different deployments.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/stacks/add.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nenvironment:\n  MY_ENVIRONMENT_VARIABLE: ${MY_ENVIRONMENT_VARIABLE}\n```\n\n----------------------------------------\n\nTITLE: Creating a Container with Portainer API\nDESCRIPTION: API call to create a new Nginx container named 'web01' in environment ID 1, with port mapping from 80 to 8080. Uses Portainer as a gateway to the Docker API.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/examples.md#2025-04-13_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nhttp POST <portainer url>/api/endpoints/1/docker/containers/create \\\n    X-API-Key:your_access-token \\\n    name==\"web01\" Image=\"nginx:latest\" \\\n    ExposedPorts:='{ \"80/tcp\": {} }' \\\n    HostConfig:='{ \"PortBindings\": { \"80/tcp\": [{ \"HostPort\": \"8080\" }] } }'\n```\n\n----------------------------------------\n\nTITLE: Container Redeployment Webhook Form in HTML\nDESCRIPTION: HTML form that triggers a webhook to redeploy a container using the latest image of the same tag.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/containers/webhooks.md#2025-04-13_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"https://portainer:9443/api/webhooks/638e6967-ef77-4906-8af8-236800621360\" method=\"post\">\n  Redeploy with latest image of same tag <input type=\"submit\" />\n</form>\n```\n\n----------------------------------------\n\nTITLE: Docker Stack Configuration for Portainer Business Edition with Nginx Proxy\nDESCRIPTION: Docker Stack configuration for deploying Portainer Business Edition with Nginx reverse proxy in a Swarm environment. Includes agent configuration and network setup for cluster management.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/nginx.md#2025-04-13_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3.2'\n\nservices:\n  nginx-proxy:\n    image: nginxproxy/nginx-proxy\n    networks:\n      - proxy\n    ports:\n      - \"80:80\"\n    volumes:\n      - \"/var/run/docker.sock:/tmp/docker.sock:ro\"\n      - \"./vhost.d:/etc/nginx/vhost.d:ro\"\n\n  agent:\n    image: portainer/agent:lts\n    environment:\n      AGENT_CLUSTER_ADDR: tasks.agent\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /var/lib/docker/volumes:/var/lib/docker/volumes\n    networks:\n      - agent_network\n    deploy:\n      mode: global\n      placement:\n        constraints: [node.platform.os == linux]\n\n  portainer:\n    image: portainer/portainer-ee:lts\n    command: -H tcp://tasks.agent:9001 --tlsskipverify\n    volumes:\n      - data:/data\n    environment:\n      - VIRTUAL_HOST=portainer.yourdomain.com\n      - VIRTUAL_PORT=9000\n    ports:\n      - 8000:8000\n    networks:\n      - proxy\n      - agent_network\n    deploy:\n      mode: replicated\n      replicas: 1\n      placement:\n        constraints: [node.role == manager]\n\nnetworks:\n  proxy:\n    external: true\n  agent_network:\n    external: true\n\nvolumes:\n   data:\n```\n\n----------------------------------------\n\nTITLE: Upgrading to Portainer CE 2.0.0\nDESCRIPTION: Series of commands to stop, remove, pull, and deploy Portainer CE version 2.0.0 while maintaining persistent data.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/tobe/docker.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker stop portainer\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker rm portainer\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull portainer/portainer-ce:2.0.0\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:2.0.0\n```\n\n----------------------------------------\n\nTITLE: Modifying Portainer YAML for Encryption in Kubernetes\nDESCRIPTION: YAML snippet showing the modifications needed to mount the encryption secret in the Portainer container and volumes specifications for Kubernetes deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/db-encryption.md#2025-04-13_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ncontainers:\n  - name: portainer\n    image: \"portainer/portainer-ee:lts\"\n    imagePullPolicy: Always\n    args:          \n    volumeMounts:\n      - name: data\n        mountPath: /data\n      - name: portainer-key\n        mountPath: /run/secrets/portainer\n        subPath: portainer\n```\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  containers:\n    portainer:\n    ...\n  volumes:\n    - name: portainer-key\n      secret:\n        secretName: portainer-key\n        items:\n          - key: secret\n            path: portainer\n```\n\n----------------------------------------\n\nTITLE: Stopping Portainer Agent on Podman\nDESCRIPTION: Command to stop the running Portainer Agent container on Podman.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/podman.md#2025-04-13_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npodman stop portainer_agent\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Configuration\nDESCRIPTION: Complex example showing different ways to configure environment variables for a template, including text inputs, default values, presets, and select dropdowns.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"env\": [\n    {\n      \"name\": \"MYSQL_ROOT_PASSWORD\",\n      \"label\": \"Root password\",\n      \"description\": \"Password used by the root user.\"\n    },\n    {\n      \"name\": \"ENV_VAR_WITH_DEFAULT_VALUE\",\n      \"default\": \"default_value\",\n      \"preset\": true\n    },\n    {\n      \"name\": \"ENV_VAR_WITH_SELECT_VALUE\",\n      \"label\": \"An environment variable\",\n      \"description\": \"A description for this env var\",\n      \"select\": [\n        {\n          \"text\": \"Yes, I agree\",\n          \"value\": \"Y\",\n          \"default\": true\n        },\n        {\n          \"text\": \"No, I disagree\",\n          \"value\": \"N\"\n        },\n        {\n          \"text\": \"Maybe\",\n          \"value\": \"YN\"\n        }\n      ],\n      \"description\": \"Some environment variable.\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer via YAML with Load Balancer\nDESCRIPTION: kubectl command to deploy Portainer using YAML manifest exposed via Load Balancer\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/wsl.md#2025-04-13_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n portainer -f https://downloads.portainer.io/ce-lts/portainer-lb.yaml\n```\n\n----------------------------------------\n\nTITLE: Deploying Updated Portainer Business Edition on Podman\nDESCRIPTION: Command to deploy the updated Portainer Business Edition container on Podman with necessary port mappings and volume mounts.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/podman.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npodman run -d -p 8000:8000 -p 9443:9443 --name=portainer --restart=always --privileged -v /run/podman/podman.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ee:lts\n```\n\n----------------------------------------\n\nTITLE: Verifying Portainer Container Status\nDESCRIPTION: Displays running containers to verify Portainer's deployment status and configuration.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/linux.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nroot@server:~# docker ps\nCONTAINER ID   IMAGE                          COMMAND                  CREATED       STATUS      PORTS                                                                                  NAMES             \nde5b28eb2fa9   portainer/portainer-ce:lts     \"/portainer\"             2 weeks ago   Up 9 days   0.0.0.0:8000->8000/tcp, :::8000->8000/tcp, 0.0.0.0:9443->9443/tcp, :::9443->9443/tcp   portainer\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer with mTLS via Helm (Load Balancer)\nDESCRIPTION: Helm command to install Portainer with mTLS support using the LoadBalancer service type. References the previously created secret containing the mTLS certificates.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/mtls.md#2025-04-13_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nhelm install -n portainer portainer portainer/portainer \\\n    --set mtls.existingSecret=portainer-mtls-secret \\\n    --set service.type=LoadBalancer \\\n    --set enterpriseEdition.enabled=true\n```\n\n----------------------------------------\n\nTITLE: Image Tag Update Webhook Form in HTML\nDESCRIPTION: HTML form that triggers a webhook to update a container's image to a different tag using a URL parameter.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/containers/webhooks.md#2025-04-13_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"https://portainer:9443/api/webhooks/638e6967-ef77-4906-8af8-236800621360?tag=latest\" method=\"post\">\n  Update container image with different tag <input type=\"submit\" />\n</form>\n```\n\n----------------------------------------\n\nTITLE: Removing Portainer Server Container on Podman\nDESCRIPTION: Command to remove the stopped Portainer Server container on Podman.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/podman.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npodman rm portainer\n```\n\n----------------------------------------\n\nTITLE: Pulling Latest Portainer Community Edition Image on Podman\nDESCRIPTION: Command to pull the latest Portainer Community Edition image from the Docker registry using Podman.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/podman.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npodman pull portainer/portainer-ce:lts\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows Firewall Rules for Portainer with PowerShell\nDESCRIPTION: PowerShell commands to create necessary firewall exceptions for Portainer Server to operate in a Windows environment, allowing communication on various ports used for cluster management, node communication, overlay network, and DNS services.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/wcs.md#2025-04-13_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nnetsh advfirewall firewall add rule name=\"cluster_management\" dir=in action=allow protocol=TCP localport=2377\nnetsh advfirewall firewall add rule name=\"node_communication_tcp\" dir=in action=allow protocol=TCP localport=7946\nnetsh advfirewall firewall add rule name=\"node_communication_udp\" dir=in action=allow protocol=UDP localport=7946\nnetsh advfirewall firewall add rule name=\"overlay_network\" dir=in action=allow protocol=UDP localport=4789\nnetsh advfirewall firewall add rule name=\"swarm_dns_tcp\" dir=in action=allow protocol=TCP localport=53\nnetsh advfirewall firewall add rule name=\"swarm_dns_udp\" dir=in action=allow protocol=UDP localport=53\n```\n\n----------------------------------------\n\nTITLE: Mounting Device-Specific Edge Configuration in Docker Compose\nDESCRIPTION: Docker Compose configuration demonstrating how to mount device-specific Edge Configuration folders using the PORTAINER_EDGE_ID environment variable. The configuration maps a device-specific folder from the host to a container path.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/edge/configurations.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\n\nservices:\n  myservice:\n    image: myimage:latest\n    volumes:\n      - /var/edge/configs/${PORTAINER_EDGE_ID}:/my-device-config\n```\n\n----------------------------------------\n\nTITLE: Creating Portainer Data Volume with Podman\nDESCRIPTION: Creates a Podman volume to store Portainer Server's database.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/podman/linux.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npodman volume create portainer_data\n```\n\n----------------------------------------\n\nTITLE: Defining Environment Variables in Kubernetes Deployment YAML\nDESCRIPTION: This YAML snippet shows a Kubernetes Deployment manifest that includes an environment variable definition. It demonstrates how to reference a SERVICE_TAG variable with a fallback value of 'stable'.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/kubernetes/applications/webhooks.md#2025-04-13_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n        env:\n        - name: SERVICE_TAG \n          value: \"stable\"\n```\n\n----------------------------------------\n\nTITLE: Applying Custom YAML Configuration to Talos Kubernetes Cluster\nDESCRIPTION: This section allows users to apply a custom YAML configuration patch to their Talos Kubernetes cluster if required. The YAML can be entered in the provided editor after clicking 'Cluster Configuration patch'.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kube-create/omni.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Custom YAML configuration patch can be entered here\n```\n\n----------------------------------------\n\nTITLE: Deploying Updated Portainer Agent on Podman\nDESCRIPTION: Command to deploy the updated Portainer Agent container on Podman with necessary port mappings and volume mounts.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/podman.md#2025-04-13_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\npodman run -d -p 9001:9001 --name portainer_agent --restart=always --privileged -v /run/podman/podman.sock:/var/run/docker.sock -v /var/lib/containers/storage/volumes:/var/lib/docker/volumes portainer/agent:lts\n```\n\n----------------------------------------\n\nTITLE: Registry Documentation Content\nDESCRIPTION: Markdown content describing registry management processes including adding new registries and configuring access permissions\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/swarm/registries.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Registries\n\n**Registries** lets you manage access to each of the registries that are currently available.\n\n{% hint style=\"warning\" %}\nRegistry access assigned here only applies to the selected environment. It is not global.\n{% endhint %}\n\n## Adding a new registry\n\nFrom the menu select **Swarm**, select **Registries** then click **Add registry**. When the global registries page appears, follow [these instructions](../../../admin/registries/add/).\n\n## Managing access\n\nTo configure access to a registry, from the menu select **Swarm** then select **Registries**.\n\nFind the registry you want to manage then select **Manage access**.\n\nFrom the dropdown, select the users or teams that you would like to have access then click **Create access**.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Portainer Agent Stack YAML Manifest\nDESCRIPTION: Curl command to download the Portainer agent stack YAML file for deployment. This file contains the necessary configuration for deploying Portainer BE in a Docker Swarm environment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/swarm/wsl.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L https://downloads.portainer.io/ee-lts/portainer-agent-stack.yml -o portainer-agent-stack.yml\n```\n\n----------------------------------------\n\nTITLE: Pulling Latest Portainer Business Edition Image on Podman\nDESCRIPTION: Command to pull the latest Portainer Business Edition image from the Docker registry using Podman.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/podman.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npodman pull portainer/portainer-ee:lts\n```\n\n----------------------------------------\n\nTITLE: Custom Docker Volume Path Configuration for Portainer Agent\nDESCRIPTION: This snippet demonstrates how to adjust the volume mount in the Portainer Agent deployment command when Docker volumes are stored in a non-standard location. It maps the custom Docker volume path to the expected path in the container.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/docker/agent.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n- v /srv/data/docker:/var/lib/docker/volumes \\\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer with mTLS via Helm (NodePort)\nDESCRIPTION: Helm command to install Portainer with mTLS support using the NodePort service type. References the previously created secret containing the mTLS certificates.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/mtls.md#2025-04-13_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm install -n portainer portainer portainer/portainer \\\n    --set mtls.existingSecret=portainer-mtls-certs-secret \\\n    --set enterpriseEdition.enabled=true\n```\n\n----------------------------------------\n\nTITLE: Updating Portainer Agent on Docker Swarm\nDESCRIPTION: These commands update the Portainer Agent to the latest version, including pulling the new image and updating the service across the swarm.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/swarm.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull portainer/agent:lts\ndocker service update --image portainer/agent:lts --force portainer_agent\n```\n\n----------------------------------------\n\nTITLE: Mounting Docker volumes for Edge Agent on non-standard paths\nDESCRIPTION: When deploying the Edge Agent to an environment with a non-standard Docker volume path, adjust the volume mount in the deployment command. This example shows how to modify the command for a volume path at /srv/data/docker.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/docker/edge-async.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n- v /srv/data/docker:/var/lib/docker/volumes \\\n```\n\n----------------------------------------\n\nTITLE: Deploying Container with Restricted Access Using Docker CLI\nDESCRIPTION: This Docker command deploys a container with access restricted to teams 'dev' and 'prod' and user 'bob' using multiple access control labels.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/access-control.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d --label io.portainer.accesscontrol.teams=dev,prod --label io.portainer.accesscontrol.users=bob nginx:latest\n```\n\n----------------------------------------\n\nTITLE: Creating a Docker Volume for Portainer Data Storage on Linux\nDESCRIPTION: Creates a Docker volume named 'portainer_data' that will be used by Portainer Server to store its database files. This ensures data persistence across container restarts or updates.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/linux.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker volume create portainer_data\n```\n\n----------------------------------------\n\nTITLE: Accessing the Portainer Web Interface\nDESCRIPTION: Shows the URL format to access the Portainer web interface after installation. The interface is available via HTTPS on port 9443, with a note to replace 'localhost' with the appropriate IP address or FQDN if needed.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/linux.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Deleting a Container with Portainer API\nDESCRIPTION: API call to force delete a container using its ID. The 'force' parameter ensures the container is removed even if it's running.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/examples.md#2025-04-13_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nhttp DELETE <portainer url>/api/endpoints/1/docker/containers/5fc2a93d7a3d426a1c3937436697fc5e5343cc375226f6110283200bede3b107 \\\n    X-API-Key:your_access-token \\\n    force==true\n```\n\n----------------------------------------\n\nTITLE: Adding Local Docker Socket Environment via Portainer API\nDESCRIPTION: HTTP POST request to add a local environment using Docker socket communication. This requires the Docker socket to be mounted in the Portainer container.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/api.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhttp --form POST https://my-portainer-server:9443/api/endpoints \\\n    \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE\" \\\n    Name=\"test-local\" EndpointCreationType=1\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Template with Variables for Kubernetes Deployment\nDESCRIPTION: This YAML snippet demonstrates how to define a custom template with variables in Portainer. It includes a variable 'REPLICA_COUNT' that can be adjusted by the user during deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/kubernetes/templates/add.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: {{ REPLICA_COUNT }}\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n```\n\n----------------------------------------\n\nTITLE: Setting Agent Secret Environment Variable in Podman\nDESCRIPTION: Command line option to set the AGENT_SECRET environment variable when deploying the Portainer Agent container.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/podman/agent.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n-e AGENT_SECRET=yoursecret\n```\n\n----------------------------------------\n\nTITLE: Deploying Updated Portainer Agent\nDESCRIPTION: Command to run the updated Portainer agent container with necessary volume mounts\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/docker.md#2025-04-13_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 9001:9001 --name portainer_agent --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker/volumes:/var/lib/docker/volumes portainer/agent:lts\n```\n\n----------------------------------------\n\nTITLE: Creating Portainer Data Volume with Docker\nDESCRIPTION: Creates a Docker volume that will be used by Portainer Server to store its database.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/wsl.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker volume create portainer_data\n```\n\n----------------------------------------\n\nTITLE: Downloading Portainer Agent Stack Configuration\nDESCRIPTION: Command to download the Portainer agent stack YAML manifest file from the official Portainer downloads server.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/swarm/linux.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L https://downloads.portainer.io/ee-lts/portainer-agent-stack.yml -o portainer-agent-stack.yml\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer BE using YAML with LoadBalancer Exposure\nDESCRIPTION: kubectl command to deploy Portainer Business Edition using a YAML manifest with LoadBalancer exposure on ports 9000 (HTTP) and 9443 (HTTPS).\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/wsl.md#2025-04-13_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n portainer -f https://downloads.portainer.io/ee-lts/portainer-lb.yaml\n```\n\n----------------------------------------\n\nTITLE: Referencing Environment Variables in Docker Compose\nDESCRIPTION: This Docker Compose snippet demonstrates how to reference the 'SERVICE_TAG' environment variable with a fallback value in a service definition.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/stacks/webhooks.md#2025-04-13_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  my-service:\n    image: repository/image:${SERVICE_TAG:-stable}\n```\n\n----------------------------------------\n\nTITLE: Starting a Container with Portainer API\nDESCRIPTION: API call to start a previously created container using its ID. This uses Portainer as a proxy to the Docker ContainerStart API operation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/examples.md#2025-04-13_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nhttp POST <portainer url>/api/endpoints/1/docker/containers/5fc2a93d7a3d426a1c3937436697fc5e5343cc375226f6110283200bede3b107/start \\\n    X-API-Key:your_access-token\n```\n\n----------------------------------------\n\nTITLE: Docker Compose with Environment Variable Reference\nDESCRIPTION: YAML configuration showing how to reference a webhook environment variable in a Docker Compose file with a fallback value.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/services/webhooks.md#2025-04-13_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  my-service:\n    image: repository/image:${SERVICE_TAG:-stable}\n```\n\n----------------------------------------\n\nTITLE: Stopping Portainer Container in Docker Standalone\nDESCRIPTION: This command stops the running Portainer container to prepare for password reset. You need to replace \"id-portainer-container\" with your actual Portainer container ID or name.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker stop \"id-portainer-container\"\n```\n\n----------------------------------------\n\nTITLE: Adding Agent Secret to Kubernetes YAML\nDESCRIPTION: Example of how to add the AGENT_SECRET environment variable to the Kubernetes deployment YAML for Portainer Agent. This is necessary if a secret was specified when starting the Portainer Server container.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kubernetes/agent.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  - name: AGENT_SECRET\n    value: yoursecret\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Stack on Docker Swarm\nDESCRIPTION: Docker command to deploy Portainer using the downloaded stack configuration file.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/swarm/wcs.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker stack deploy --compose-file=portainer-windows-stack.yml portainer\n```\n\n----------------------------------------\n\nTITLE: Installing Latest Node.js with NVM\nDESCRIPTION: Uses Node Version Manager (NVM) to install the latest version of Node.js, which is required for Portainer development (v12+ required).\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnvm install node\n```\n\n----------------------------------------\n\nTITLE: Mounting Host Filesystem for Portainer Agent in Docker\nDESCRIPTION: This snippet shows how to mount the root of the host filesystem to /host when running the Portainer Agent in Docker. This is required for enabling host management features in Portainer.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/host/setup.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n-v /:/host\n```\n\n----------------------------------------\n\nTITLE: Updating Edge Agent Service in Docker Swarm\nDESCRIPTION: Command to update the Portainer Edge Agent service in a Docker Swarm environment to use the new image version.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/edge.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker service update --image portainer/agent:lts --force portainer_edge_agent\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer via YAML with NodePort\nDESCRIPTION: kubectl command to deploy Portainer using YAML manifest exposed via NodePort\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/wsl.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n portainer -f https://downloads.portainer.io/ce-lts/portainer.yaml\n```\n\n----------------------------------------\n\nTITLE: Force Update Portainer Agent Deployment\nDESCRIPTION: Kubernetes command to force restart the Portainer agent deployment and pull the latest image\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/kubernetes.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n portainer rollout restart deployment.apps/portainer-agent\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer via Helm with NodePort\nDESCRIPTION: Helm command to install Portainer CE exposed via NodePort on ports 30777 (HTTP) and 30779 (HTTPS)\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/wsl.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install --create-namespace -n portainer portainer portainer/portainer \\\n    --set image.tag=lts\n```\n\n----------------------------------------\n\nTITLE: Complete Stack Template Definition Example\nDESCRIPTION: A full example of a stack template for CockroachDB, showing the required structure and properties for stack templates including repository and stackfile references.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": 2,\n  \"title\": \"CockroachDB\",\n  \"description\": \"CockroachDB cluster\",\n  \"note\": \"Deploys an insecure CockroachDB cluster, please refer to CockroachDB documentation for production deployments.\",\n  \"categories\": [\"database\"],\n  \"platform\": \"linux\",\n  \"logo\": \"https://cloudinovasi.id/assets/img/logos/cockroachdb.png\",\n  \"repository\": {\n    \"url\": \"https://github.com/portainer/templates\",\n    \"stackfile\": \"stacks/cockroachdb/docker-stack.yml\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Docker overlay networks for Portainer deployment\nDESCRIPTION: Commands to create two overlay networks required for Portainer deployment in Docker Swarm: agent_network and public.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker network create -d overlay agent_network\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker network create -d overlay public\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables in Docker Compose\nDESCRIPTION: Demonstrates how to define environment variables in a Docker compose file using variable substitution syntax. Variables can be set individually in Portainer or loaded from a .env file.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/edge/stacks/add.md#2025-04-13_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nenvironment:\n  MY_ENVIRONMENT_VARIABLE: ${MY_ENVIRONMENT_VARIABLE}\n```\n\n----------------------------------------\n\nTITLE: Defining Agent Secret in Kubernetes YAML\nDESCRIPTION: YAML snippet showing how to define the AGENT_SECRET environment variable in a Kubernetes deployment manifest for the Edge Agent. This is required when a custom agent secret is set on the Portainer Server.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kubernetes/edge-async.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  - name: AGENT_SECRET\n    value: yoursecret\n```\n\n----------------------------------------\n\nTITLE: Container Restart Policy Configuration\nDESCRIPTION: Example showing how to specify a restart policy for a container, controlling when it automatically restarts.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"restart_policy\": \"unless-stopped\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adjusting Volume Path for Non-Standard Podman Locations\nDESCRIPTION: Example of modifying the volume mount in the Edge Agent deployment command when Podman uses a non-standard volume path. The left side of the mount should reflect the actual Podman volume path, while the right side remains '/var/lib/docker/volumes'.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/podman/edge.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n- v /srv/data/podman:/var/lib/docker/volumes \\\n```\n\n----------------------------------------\n\nTITLE: Deploying Updated Portainer Business Edition\nDESCRIPTION: Command to run the updated Portainer Business Edition container with persistent storage and necessary port mappings\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/docker.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9443:9443 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ee:lts\n```\n\n----------------------------------------\n\nTITLE: Downloading and Saving Docker Images for MicroK8s Addons\nDESCRIPTION: Downloads required Docker images for MicroK8s addons and saves them in the expected format and location for offline installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kube-create/microk8s/offline.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker image pull docker.io/portainer/agent:2.20.3\ndocker image save docker.io/portainer/agent:2.20.3 -o \"$HOME/microk8s/images/docker,io-portainer-agent_2.20.3.tar\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Stack to Docker Swarm\nDESCRIPTION: Docker command to deploy Portainer using the downloaded stack configuration\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/swarm/wcs.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker stack deploy --compose-file=portainer-windows-stack.yml portainer\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret for Portainer mTLS Certificates\nDESCRIPTION: Kubernetes command to create a secret containing the mTLS certificates for Portainer. Includes the CA certificate, server certificate, and server key for secure communication.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/mtls.md#2025-04-13_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic portainer-mtls-certs-secret -n portainer \\\n    --from-file=mtlsca.crt=ca.crt \\\n    --from-file=mtlscert.crt=server.crt \\\n    --from-file=mtlskey.key=server.key\n```\n\n----------------------------------------\n\nTITLE: Portainer Frontend Host Configuration\nDESCRIPTION: Traefik label for configuring the Portainer frontend host URL\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- \"traefik.http.routers.frontend.rule=Host(`portainer.yourdomain.com`)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables in Kubernetes YAML for Edge Agent\nDESCRIPTION: This YAML snippet shows how to set environment variables when deploying the Portainer Edge Agent on Kubernetes. It specifically demonstrates setting the AGENT_SECRET variable, which is crucial if a custom secret is used on the Portainer Server instance.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kubernetes/edge.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  - name: AGENT_SECRET\n    value: yoursecret\n```\n\n----------------------------------------\n\nTITLE: Enabling Host Management Features Volume Mount\nDESCRIPTION: Volume mount configuration to enable host management features in Portainer Agent.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/podman/agent.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n-v /:/host\n```\n\n----------------------------------------\n\nTITLE: Enabling Docker Registry Image Deletion for Self-hosted Registries\nDESCRIPTION: Environment variable configuration needed for enabling tag deletion functionality in a self-hosted Docker registry. This setting must be added to allow retagging and removing tags from images in the registry.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/registries/manage.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nREGISTRY_STORAGE_DELETE_ENABLED=TRUE\n```\n\n----------------------------------------\n\nTITLE: Adding Remote Docker Environment via Portainer API\nDESCRIPTION: HTTP POST request to add a remote environment using TCP communication. Requires the Docker API to be exposed on the specified IP address and port.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/api.md#2025-04-13_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhttp --form POST https://my-portainer-server:9443/api/endpoints \\\n    \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE\" \\\n    Name=\"test-remote\" URL=\"tcp://10.0.7.10:2375\" EndpointCreationType=1\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Business Edition with Custom SSL Certificates on Podman\nDESCRIPTION: Command to deploy Portainer Business Edition with custom SSL certificates, specifying the paths to the certificate and key files.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/podman.md#2025-04-13_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npodman run -d -p 8000:8000 -p 9443:9443 --name=portainer --restart=always --privileged -v /run/podman/podman.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ee:lts --sslcert /path/to/cert/portainer.crt --sslkey /path/to/cert/portainer.key\n```\n\n----------------------------------------\n\nTITLE: Retrieving Portainer Agent Stack YML Manifest\nDESCRIPTION: This command downloads the Portainer agent stack YML manifest from the official Portainer downloads server. The manifest is used to deploy Portainer as a service in a Docker Swarm cluster.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/swarm/wsl.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L https://downloads.portainer.io/ce-lts/portainer-agent-stack.yml -o portainer-agent-stack.yml\n```\n\n----------------------------------------\n\nTITLE: Using env_file in Docker Compose\nDESCRIPTION: This snippet shows how to use the env_file directive in a Docker Compose file to load environment variables from an external file. This method is supported in Docker Standalone and Podman environments, but not in Docker Swarm.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/stacks/add.md#2025-04-13_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nenv_file:\n  - stack.env\n```\n\n----------------------------------------\n\nTITLE: Traefik ACME Configuration Path\nDESCRIPTION: Volume mapping configuration for SSL certificate storage in Traefik\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- \"./acme.json:/acme.json\"\n```\n\n----------------------------------------\n\nTITLE: Updating Portainer Business Edition on Docker Swarm\nDESCRIPTION: These commands update Portainer Business Edition to the latest version, including pulling the new image and updating the service with HTTPS support.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/swarm.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull portainer/portainer-ee:lts\ndocker service update --image portainer/portainer-ee:lts --publish-add 9443:9443 --force portainer_portainer\n```\n\n----------------------------------------\n\nTITLE: Listing Containers with Portainer API\nDESCRIPTION: API call to list all containers in a specific environment (ID: 1) using Portainer as a proxy to the Docker API. The response format follows the Docker API ContainerList operation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/examples.md#2025-04-13_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nhttp GET <portainer url>/api/endpoints/1/docker/containers/json \\\n    X-API-Key:your_access-token \\\n    all==true\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Server via NodePort in Bash\nDESCRIPTION: Commands to access Portainer Server using NodePort. The user needs to replace 'localhost' with the appropriate IP address or FQDN if necessary, and adjust the port if it was changed during setup.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/baremetal.md#2025-04-13_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:30779/ or http://localhost:30777/\n```\n\n----------------------------------------\n\nTITLE: Deploying Public Container Using Docker CLI\nDESCRIPTION: This Docker command deploys a container with the 'public' access control label, making it accessible to all Portainer users.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/access-control.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d --label io.portainer.accesscontrol.public nginx:latest\n```\n\n----------------------------------------\n\nTITLE: Configuring EKSFullAccess Policy in AWS IAM\nDESCRIPTION: JSON policy definition for EKSFullAccess, granting permissions for EKS management, SSM parameter access, KMS operations, and log retention policy setting.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/settings/credentials/eks.md#2025-04-13_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"eks:*\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Action\": [\n                \"ssm:GetParameter\",\n                \"ssm:GetParameters\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ssm:*:<account_id>:parameter/aws/*\",\n                \"arn:aws:ssm:*::parameter/aws/*\"\n            ],\n            \"Effect\": \"Allow\"\n        },\n        {\n             \"Action\": [\n               \"kms:CreateGrant\",\n               \"kms:DescribeKey\"\n             ],\n             \"Resource\": \"*\",\n             \"Effect\": \"Allow\"\n        },\n        {\n             \"Action\": [\n               \"logs:PutRetentionPolicy\"\n             ],\n             \"Resource\": \"*\",\n             \"Effect\": \"Allow\"\n        }        \n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Portainer Template in JSON\nDESCRIPTION: Illustrates the structure for defining environment variables in a Portainer template, including various input types and configurations.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"env\": [\n    {\n      \"name\": \"MYSQL_ROOT_PASSWORD\",\n      \"label\": \"Root password\",\n      \"description\": \"Password used by the root user.\"\n    },\n    {\n      \"name\": \"ENV_VAR_WITH_DEFAULT_VALUE\",\n      \"default\": \"default_value\",\n      \"preset\": true\n    },\n    {\n      \"name\": \"ENV_VAR_WITH_SELECT_VALUE\",\n      \"label\": \"An environment variable\",\n      \"description\": \"A description for this env var\",\n      \"select\": [\n        {\n          \"text\": \"Yes, I agree\",\n          \"value\": \"Y\",\n          \"default\": true\n        },\n        {\n          \"text\": \"No, I disagree\",\n          \"value\": \"N\"\n        },\n        {\n          \"text\": \"Maybe\",\n          \"value\": \"YN\"\n        }\n      ],\n      \"description\": \"Some environment variable.\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Stack to Docker Swarm\nDESCRIPTION: Deploys the Portainer stack using the downloaded YML manifest file to create the Portainer Server and Agent services.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/swarm/linux.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker stack deploy -c portainer-agent-stack.yml portainer\n```\n\n----------------------------------------\n\nTITLE: Updating Portainer Business Edition via Helm\nDESCRIPTION: Helm command to upgrade Portainer Business Edition to the latest version\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/kubernetes.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade -n portainer portainer portainer/portainer \\\n    --set enterpriseEdition.image.tag=lts\n```\n\n----------------------------------------\n\nTITLE: Basic Nginx Docker Compose with Relative Path\nDESCRIPTION: A simple Docker Compose configuration for Nginx that demonstrates relative path volume mounting from the same directory level as the compose file.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/relative-paths.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3.1'\nservices:\n  webapp:\n    image: nginx:latest\n    restart: always\n    ports:\n      - \"3002:80\"\n    volumes:\n      - ./static:/usr/share/nginx/html\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Web Interface\nDESCRIPTION: Example URL for accessing the Portainer web interface after installation\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/swarm/wcs.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Webhook URL with Environment Variables\nDESCRIPTION: Example of a webhook URL that includes an environment variable SERVICE_TAG with a specific value.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/services/webhooks.md#2025-04-13_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://portainer:9443/api/webhooks/1d251d96-fb34-4172-a0a1-d0655467b897?SERVICE_TAG=development\n```\n\n----------------------------------------\n\nTITLE: Defining Categories for Portainer Template in JSON\nDESCRIPTION: Illustrates how to associate categories with a template, which are used for filtering in the Portainer UI.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"categories\": [\"webserver\", \"open-source\"]\n\n```\n\n----------------------------------------\n\nTITLE: Specifying Docker Socket Path in Docker Swarm Environment\nDESCRIPTION: This code snippet shows the default Docker socket path that is used when connecting Portainer to a Docker Swarm environment. Users can override this path if needed.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/swarm/socket.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n/var/run/docker.sock\n```\n\n----------------------------------------\n\nTITLE: Installing Docker CE on Windows Server\nDESCRIPTION: PowerShell commands to download and execute Microsoft's script for installing the Windows Container Host Service and Docker CE on a Windows server.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/wcs.md#2025-04-13_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-WebRequest -UseBasicParsing \"https://raw.githubusercontent.com/microsoft/Windows-Containers/Main/helpful_tools/Install-DockerCE/install-docker-ce.ps1\" -o install-docker-ce.ps1\n.\\install-docker-ce.ps1\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer Stack on Docker Swarm\nDESCRIPTION: Docker command to deploy the Portainer stack on Docker Swarm using the downloaded YML manifest.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/ssl.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker stack deploy -c portainer-agent-stack.yml portainer\n```\n\n----------------------------------------\n\nTITLE: LDAP Group Search Filter Configuration\nDESCRIPTION: Filter to return only groups containing 'Portainer' in their name, useful for managing Portainer-specific group access.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/settings/authentication/ldap.md#2025-04-13_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n(&(objectclass=group)(cn=*Portainer*))\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer via Helm with Ingress\nDESCRIPTION: Helm command to install Portainer CE with Ingress configuration for custom hostname access.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/baremetal.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install --create-namespace -n portainer portainer portainer/portainer \\\n    --set service.type=ClusterIP \\\n    --set tls.force=true \\\n    --set image.tag=lts \\\n    --set ingress.enabled=true \\\n    --set ingress.ingressClassName=<ingressClassName (eg: nginx)> \\\n    --set ingress.annotations.\"nginx\\.ingress\\.kubernetes\\.io/backend-protocol\"=HTTPS \\\n    --set ingress.hosts[0].host=<fqdn (eg: portainer.example.io)> \\\n    --set ingress.hosts[0].paths[0].path=\"/\"\n```\n\n----------------------------------------\n\nTITLE: Extracting Golang v1.17 from Tar Archive\nDESCRIPTION: Extracts the downloaded Go v1.17 archive to the /usr/local directory, which is the standard location for Go installation on Linux.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nsudo tar -C /usr/local -xzf go1.17.6.linux-amd64.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Updating Portainer Community Edition on Docker Swarm\nDESCRIPTION: These commands update Portainer Community Edition to the latest version, including pulling the new image and updating the service with HTTPS support.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/swarm.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull portainer/portainer-ce:lts\ndocker service update --image portainer/portainer-ce:lts --publish-add 9443:9443 --force portainer_portainer\n```\n\n----------------------------------------\n\nTITLE: Using Environment Variables in Webhook URL\nDESCRIPTION: This example shows how to pass an environment variable 'SERVICE_TAG' through the webhook URL.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/stacks/webhooks.md#2025-04-13_snippet_3\n\nLANGUAGE: html\nCODE:\n```\nhttps://portainer:9443/api/stacks/webhooks/1d251d96-fb34-4172-a0a1-d0655467b897?SERVICE_TAG=development\n```\n\n----------------------------------------\n\nTITLE: Deploying Updated Edge Agent in Docker Standalone\nDESCRIPTION: Command to deploy the updated Portainer Edge Agent in a Docker Standalone environment, requiring Edge identifier and Edge key.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/edge.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker/volumes:/var/lib/docker/volumes -v /:/host -v portainer_agent_data:/data --restart always -e EDGE=1 -e EDGE_ID=your-edge-identifier-here -e EDGE_KEY=your-edge-key-here -e EDGE_INSECURE_POLL=1 --name portainer_edge_agent portainer/agent:lts\n```\n\n----------------------------------------\n\nTITLE: Setting Administrator-Only Access for Portainer Template in JSON\nDESCRIPTION: Shows how to configure a template to be accessible only by admin users using the administrator_only field.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"administrator_only\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Portainer Service to Business Edition in Docker Swarm\nDESCRIPTION: Command to update an existing Portainer service to the Business Edition (portainer-ee) using the latest LTS image. This command forces an update of the portainer_portainer service with the enterprise edition image.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/tobe/swarm.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker service update --image portainer/portainer-ee:lts --force portainer_portainer\n```\n\n----------------------------------------\n\nTITLE: Configuring values.yaml for Helm Chart Deployment\nDESCRIPTION: Example showing how to configure the values.yaml file when deploying a Helm chart through Portainer's web interface. The values.yaml file contains customizable parameters for the Helm chart installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/kubernetes/applications/manifest.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvalues.yaml # (implied from context but not explicitly shown in the screenshot)\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace and TLS Secret for Portainer on Kubernetes\nDESCRIPTION: Kubectl commands to create a namespace for Portainer and a TLS secret containing the SSL certificate and key for Kubernetes deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/ssl.md#2025-04-13_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace portainer\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret tls portainer-tls-secret -n portainer \\\n    --cert=/path/to/cert/file \\\n    --key=/path/to/key/file\n```\n\n----------------------------------------\n\nTITLE: Updating Portainer Service with Encryption Secret in Docker Swarm\nDESCRIPTION: Docker service update command to add the encryption secret to an existing Portainer deployment in Swarm.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/db-encryption.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker service update \\\n    --secret-add src=portainer,target=\"/run/secrets/portainer\" \\\n    portainer\n```\n\n----------------------------------------\n\nTITLE: Verifying Docker's GPG Key Fingerprint\nDESCRIPTION: Displays the fingerprint of the Docker GPG key to verify its authenticity before proceeding with installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-key fingerprint 0EBFCD88\n```\n\n----------------------------------------\n\nTITLE: Docker Socket Path Configuration\nDESCRIPTION: Default Docker socket path that can be overridden in Portainer environment settings. This path is used for local Docker daemon communication.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/docker/socket.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n/var/run/docker.sock\n```\n\n----------------------------------------\n\nTITLE: Environment File Reference in Docker Compose\nDESCRIPTION: Demonstrates how to include all environment variables from a stack.env file in a Docker Compose configuration, which allows accessing both individually defined variables and those from uploaded .env files.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/stacks/add.md#2025-04-13_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nenv_file:\n  - stack.env\n```\n\n----------------------------------------\n\nTITLE: Triggering Webhook Update with Different Tag in HTML\nDESCRIPTION: This HTML form shows how to trigger a webhook to update the stack to use a different image tag.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/stacks/webhooks.md#2025-04-13_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"https://portainer:9443/api/stacks/webhooks/638e6967-ef77-4906-8af8-236800621360?tag=latest\" method=\"post\">\n  Update stack container images with different tag <input type=\"submit\" />\n</form>\n```\n\n----------------------------------------\n\nTITLE: Downloading Edge Agent Manifest for Kubernetes (Business Edition)\nDESCRIPTION: Command to download the updated YAML manifest for the Portainer Edge Agent in Kubernetes (Business Edition).\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/edge.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L https://downloads.portainer.io/ee-lts/portainer-agent-edge-k8s.yaml  -o portainer-agent-edge-k8s.yaml\n```\n\n----------------------------------------\n\nTITLE: Deploying Edge Agent with Insecure Poll Flag in Bash\nDESCRIPTION: This command demonstrates how to deploy the Edge Agent with the EDGE_INSECURE_POLL flag set to 1. This is necessary when the Portainer instance uses a self-signed certificate, allowing the agent to communicate with Portainer despite the certificate not being trusted.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/edge-agent.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n-e EDGE_INSECURE_POLL=1\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer stack with Docker Compose\nDESCRIPTION: Command to deploy the Portainer stack using the Docker Compose file (portainer.yml) in a Docker Swarm environment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ndocker stack deploy portainer -c portainer.yml\n```\n\n----------------------------------------\n\nTITLE: Removing Old Portainer Version for 2.0.0 Update\nDESCRIPTION: Commands to stop and remove the existing Portainer container before updating to version 2.0.0.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/from-1.x.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker stop portainer\ndocker rm portainer\n```\n\n----------------------------------------\n\nTITLE: Example Repository Configuration for Portainer Template in JSON\nDESCRIPTION: Demonstrates a practical example of the repository object configuration, pointing to a specific Compose file in a GitHub repository.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"url\": \"https://github.com/portainer/templates\",\n  \"stackfile\": \"stacks/cockroachdb/docker-stack.yml\"\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Yarn Installation on macOS\nDESCRIPTION: Command to verify the successful installation of Yarn package manager by checking its version.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/mac.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn --version\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer via YAML with Load Balancer\nDESCRIPTION: kubectl command to deploy Portainer using YAML manifests with Load Balancer exposure.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/baremetal.md#2025-04-13_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n portainer -f https://downloads.portainer.io/ce-lts/portainer-lb.yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying Portainer Agent Deployment in Kubernetes\nDESCRIPTION: Command to check the status of the Portainer Agent pods in the Kubernetes cluster after deployment. This helps validate that the agent is running correctly.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kubernetes/agent.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods --namespace=portainer\n```\n\n----------------------------------------\n\nTITLE: Upgrading to Portainer Business Edition\nDESCRIPTION: Commands to upgrade from version 2.0.0 or later to Portainer Business Edition, including container removal and deployment with additional HTTPS port.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/tobe/docker.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker stop portainer\ndocker rm portainer\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9000:9000 -p 9443:9443 --name=portainer --restart=always --pull=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ee:lts\n```\n\n----------------------------------------\n\nTITLE: LDAP Group Filter Configuration\nDESCRIPTION: Filter criteria to restrict user access to only members of a specific group within an OU.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/settings/authentication/ldap.md#2025-04-13_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n(&(objectClass=user)(memberOf=cn=mycn,ou=myou,dc=mydomain,dc=com))\n```\n\n----------------------------------------\n\nTITLE: Adding Portainer Helm Repository\nDESCRIPTION: Commands to add and update the Portainer Helm repository for Kubernetes installations\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/kubernetes.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add portainer https://portainer.github.io/k8s/\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Applying Password Reset Pod in Kubernetes\nDESCRIPTION: This command applies the password reset pod YAML to create the pod in the Kubernetes cluster in the portainer namespace.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f passreset.yml -n portainer\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows Firewall Rules for Docker Swarm\nDESCRIPTION: PowerShell commands to add necessary firewall exceptions for Docker Swarm cluster management, node communication, overlay networking, and DNS services.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/swarm/wcs.md#2025-04-13_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nnetsh advfirewall firewall add rule name=\"cluster_management\" dir=in action=allow protocol=TCP localport=2377\nnetsh advfirewall firewall add rule name=\"node_communication_tcp\" dir=in action=allow protocol=TCP localport=7946\nnetsh advfirewall firewall add rule name=\"node_communication_udp\" dir=in action=allow protocol=UDP localport=7946\nnetsh advfirewall firewall add rule name=\"overlay_network\" dir=in action=allow protocol=UDP localport=4789\nnetsh advfirewall firewall add rule name=\"swarm_dns_tcp\" dir=in action=allow protocol=TCP localport=53\nnetsh advfirewall firewall add rule name=\"swarm_dns_udp\" dir=in action=allow protocol=UDP localport=53\n```\n\n----------------------------------------\n\nTITLE: Verifying Portainer Container Status\nDESCRIPTION: Docker command to check if the Portainer Server container is running properly, showing container details including ports and status.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/wsl.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nroot@server:~# docker ps\nCONTAINER ID   IMAGE                                              COMMAND                  CREATED        STATUS        PORTS                                                                                  NAMES\nf4ab79732007   portainer/portainer-ce:lts                         \"/portainer\"             2 weeks ago    Up 29 hours   0.0.0.0:8000->8000/tcp, :::8000->8000/tcp, 0.0.0.0:9443->9000/tcp, :::9443->9443/tcp   portainer\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Other Environment Settings\nDESCRIPTION: Table describing additional environment-specific configuration options\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/swarm/setup.md#2025-04-13_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Option                                                                    | Overview                                                                                                                                                                                                               |\n| ------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| Show GPU in the UI                                                        | GPU functionality is currently not available in Docker Swarm environments so this toggle is disabled.                                                  |\n| Show an image(s) up to date indicator for Stacks, Services and Containers | <p>Toggle on to enable the <a href=\"../services/\">new image notification</a> feature for this environment. Toggle off to disable the feature.<br><br>This feature is only available in Portainer Business Edition.</p> |\n```\n\n----------------------------------------\n\nTITLE: Nginx Docker Compose with Parent Directory Reference\nDESCRIPTION: Docker Compose configuration showing how to reference files in a parent directory when the compose file is located in a subdirectory.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/relative-paths.md#2025-04-13_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3.1'\nservices:\n  webapp:\n    image: nginx:latest\n    restart: always\n    ports:\n      - \"3002:80\"\n    volumes:\n      - ../static:/usr/share/nginx/html\n```\n\n----------------------------------------\n\nTITLE: Validating Portainer Agent Deployment\nDESCRIPTION: Command to verify that the Portainer Agent service is running properly on the Docker Swarm cluster.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/swarm/agent.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker service ls\n```\n\n----------------------------------------\n\nTITLE: Loading Environment Variables from File in Docker Compose\nDESCRIPTION: Shows how to load all environment variables from a stack.env file in a Docker compose configuration, allowing for bulk variable loading.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/edge/stacks/add.md#2025-04-13_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nenv_file:\n  - stack.env\n```\n\n----------------------------------------\n\nTITLE: Configuring IAMLimitedAccess Policy in AWS IAM\nDESCRIPTION: JSON policy definition for IAMLimitedAccess, granting specific IAM permissions for managing roles, instance profiles, policies, and OIDC providers related to EKS and eksctl.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/settings/credentials/eks.md#2025-04-13_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:CreateInstanceProfile\",\n                \"iam:DeleteInstanceProfile\",\n                \"iam:GetInstanceProfile\",\n                \"iam:RemoveRoleFromInstanceProfile\",\n                \"iam:GetRole\",\n                \"iam:CreateRole\",\n                \"iam:DeleteRole\",\n                \"iam:AttachRolePolicy\",\n                \"iam:PutRolePolicy\",\n                \"iam:ListInstanceProfiles\",\n                \"iam:AddRoleToInstanceProfile\",\n                \"iam:ListInstanceProfilesForRole\",\n                \"iam:PassRole\",\n                \"iam:DetachRolePolicy\",\n                \"iam:DeleteRolePolicy\",\n                \"iam:GetRolePolicy\",\n                \"iam:GetOpenIDConnectProvider\",\n                \"iam:CreateOpenIDConnectProvider\",\n                \"iam:DeleteOpenIDConnectProvider\",\n                \"iam:TagOpenIDConnectProvider\",\n                \"iam:ListAttachedRolePolicies\",\n                \"iam:TagRole\",\n                \"iam:GetPolicy\",\n                \"iam:CreatePolicy\",\n                \"iam:DeletePolicy\",\n                \"iam:ListPolicyVersions\"\n            ],\n            \"Resource\": [\n                \"arn:aws:iam::<account_id>:instance-profile/eksctl-*\",\n                \"arn:aws:iam::<account_id>:role/eksctl-*\",\n                \"arn:aws:iam::<account_id>:policy/eksctl-*\",\n                \"arn:aws:iam::<account_id>:oidc-provider/*\",\n                \"arn:aws:iam::<account_id>:role/aws-service-role/eks-nodegroup.amazonaws.com/AWSServiceRoleForAmazonEKSNodegroup\",\n                \"arn:aws:iam::<account_id>:role/eksctl-managed-*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:GetRole\"\n            ],\n            \"Resource\": [\n                \"arn:aws:iam::<account_id>:role/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:CreateServiceLinkedRole\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"iam:AWSServiceName\": [\n                        \"eks.amazonaws.com\",\n                        \"eks-nodegroup.amazonaws.com\",\n                        \"eks-fargate.amazonaws.com\"\n                    ]\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Making GET Request with API Token\nDESCRIPTION: Example of making an HTTP GET request to the Portainer stacks endpoint using httpie with an API token for authentication.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/access.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhttp GET https://portainer-url:9443/api/stacks X-API-Key:your_api_key_here\n```\n\n----------------------------------------\n\nTITLE: Downloading Portainer Agent Stack Configuration\nDESCRIPTION: Downloads the YML manifest file required for deploying Portainer in Docker Swarm.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/swarm/linux.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L https://downloads.portainer.io/ce-lts/portainer-agent-stack.yml -o portainer-agent-stack.yml\n```\n\n----------------------------------------\n\nTITLE: Creating Firewall Exceptions for Windows Container Service\nDESCRIPTION: PowerShell commands to add firewall rules allowing necessary ports for cluster management, node communication, overlay networking, and swarm DNS on a Windows server.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/wcs.md#2025-04-13_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nnetsh advfirewall firewall add rule name=\"cluster_management\" dir=in action=allow protocol=TCP localport=2377\nnetsh advfirewall firewall add rule name=\"node_communication_tcp\" dir=in action=allow protocol=TCP localport=7946\nnetsh advfirewall firewall add rule name=\"node_communication_udp\" dir=in action=allow protocol=UDP localport=7946\nnetsh advfirewall firewall add rule name=\"overlay_network\" dir=in action=allow protocol=UDP localport=4789\nnetsh advfirewall firewall add rule name=\"swarm_dns_tcp\" dir=in action=allow protocol=TCP localport=53\nnetsh advfirewall firewall add rule name=\"swarm_dns_udp\" dir=in action=allow protocol=UDP localport=53\n```\n\n----------------------------------------\n\nTITLE: Batch Download and Save Docker Images Script\nDESCRIPTION: A bash script to automate the process of pulling and saving multiple Docker images required for MicroK8s offline installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kube-create/microk8s/offline.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nimageList=(\"docker.io/calico/cni:v3.25.0\" \"docker.io/calico/kube-controllers:v3.25.0\" \"docker.io/calico/node:v3.25.0\" \"docker.io/cdkbot/hostpath-provisioner:1.4.2\" \"docker.io/coredns/coredns:1.10.0\" \"docker.io/library/busybox:1.28.4\" \"registry.k8s.io/ingress-nginx/controller:v1.5.1\" \"registry.k8s.io/metrics-server/metrics-server:v0.5.2\" \"registry.k8s.io/pause:3.7\" \"docker.io/portainer/agent:2.20.3\" \"docker.io/portainer/kubectl-shell:latest\")\n\nfor image in ${imageList[@]}; do\n  docker image pull $image && docker image save $image -o \"$HOME/microk8s/images/$(echo $image | sed 's/\\//-/g' | sed 's/:/_/g').tar\"\ndone\n```\n\n----------------------------------------\n\nTITLE: Stack List Response\nDESCRIPTION: Example JSON response from the Portainer API showing stack information including creation details, Git configuration, and status.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/access.md#2025-04-13_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n    {\n        \"AdditionalFiles\": null,\n        \"AutoUpdate\": null,\n        \"CreatedBy\": \"admin\",\n        \"CreationDate\": 1631852794,\n        \"EndpointId\": 4,\n        \"EntryPoint\": \"docker-compose.yml\",\n        \"Env\": null,\n        \"GitConfig\": {\n            \"Authentication\": null,\n            \"ConfigFilePath\": \"docker-compose.yml\",\n            \"ConfigHash\": \"2e71920bf1ee1bbac976d320f8f274411fba3bad\",\n            \"ReferenceName\": \"refs/heads/master\",\n            \"URL\": \"https://github.com/mygithubaccount/wordpress-stack\"\n        },\n        \"Id\": 5,\n        \"IsComposeFormat\": true,\n        \"Name\": \"\",\n        \"Namespace\": \"my-namespace\",\n        \"ProjectPath\": \"/data/compose/5\",\n        \"ResourceControl\": null,\n        \"Status\": 1,\n        \"SwarmId\": \"\",\n        \"Type\": 3,\n        \"UpdateDate\": 0,\n        \"UpdatedBy\": \"\"\n    },\n]\n```\n\n----------------------------------------\n\nTITLE: Upgrading Portainer to Business Edition (NodePort) using kubectl on Kubernetes\nDESCRIPTION: This kubectl command applies the latest Portainer Business YAML manifest for a NodePort deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/tobe/kubernetes.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -n portainer -f https://downloads.portainer.io/ee-lts/portainer.yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying Docker Installation\nDESCRIPTION: Runs a simple hello-world container to verify that Docker is correctly installed and functioning on the system.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsudo docker run hello-world\n```\n\n----------------------------------------\n\nTITLE: Template Platform Configuration\nDESCRIPTION: Example showing how to specify the platform supported by the template (Linux or Windows), which displays a platform icon in the UI.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"platform\": \"linux\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes API Group Resources and Verbs for portainer-view\nDESCRIPTION: This markdown table defines the API group resources and allowed verbs for the portainer-view role in Kubernetes. It covers various API groups including core, apps, autoscaling, batch, extensions, networking, and policy.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/kubernetes-roles-and-bindings.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| API Group         | Resources                                                                                                                                                                                                                                                                                                                                                                   | Verbs            |\n| ----------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------- |\n| (Empty)           | bindings, componentstatuses, configmaps, endpoints, events, limitranges, namespaces, namespaces/status, persistentvolumeclaims, persistentvolumeclaims/status, pods, pods/log, pods/status, replicationcontrollers, replicationcontrollers/scale, replicationcontrollers/status, resourcequotas, resourcequotas/status, secrets, serviceaccounts, services, services/status | get, list, watch |\n| apps              | controllerrevisions, daemonsets, daemonsets/status, deployments, deployments/scale, deployments/status, replicasets, replicasets/scale, replicasets/status, statefulsets, statefulsets/scale, statefulsets/status                                                                                                                                                           | get, list, watch |\n| autoscaling       | horizontalpodautoscalers, horizontalpodautoscalers/status                                                                                                                                                                                                                                                                                                                   | get, list, watch |\n| batch             | cronjobs, cronjobs/status, jobs, jobs/status                                                                                                                                                                                                                                                                                                                                | get, list, watch |\n| extensions        | daemonsets, daemonsets/status, deployments, deployments/scale, deployments/status, ingresses, ingresses/status, networkpolicies, replicasets, replicasets/scale, replicasets/status, replicationcontrollers/scale                                                                                                                                                           | get, list, watch |\n| networking.k8s.io | ingresses, ingresses/status, networkpolicies                                                                                                                                                                                                                                                                                                                                | get, list, watch |\n| policy            | poddisruptionbudgets, poddisruptionbudgets/status                                                                                                                                                                                                                                                                                                                           | get, list, watch |\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Server via Ingress in Bash\nDESCRIPTION: Command to access Portainer Server using Ingress method. Users should replace '<FQDN>' with the actual Fully Qualified Domain Name of their Portainer instance.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/baremetal.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttps://<FQDN>/\n```\n\n----------------------------------------\n\nTITLE: Defining Repository Object for Portainer Template in JSON\nDESCRIPTION: Specifies the format for the repository object in a Portainer template, including the URL of the Git repository and the path to the Compose file.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"url\": \"URL of the public git repository (mandatory)\",\n  \"stackfile\": \"Path to the Compose file inside the repository (mandatory)\",\n}\n```\n\n----------------------------------------\n\nTITLE: URL for Accessing Portainer via Ingress\nDESCRIPTION: Example URL format for accessing Portainer when it's exposed via an Ingress controller using HTTPS.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/wsl.md#2025-04-13_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhttps://<FQDN>/\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Web Interface\nDESCRIPTION: This URL is used to access the Portainer web interface after installation. Replace 'localhost' with the appropriate IP address or FQDN if needed.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/wsl.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: New API Endpoints - REST\nDESCRIPTION: New API endpoints added to the system, including container operations, kubernetes management, and edge stack functionality.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_3\n\nLANGUAGE: rest\nCODE:\n```\nPOST /custom_templates/create/file\nPOST /custom_templates/create/repository\nPOST /custom_templates/create/string\nPOST /docker/{environmentId}/containers/image_status/clear\nGET /docker/{environmentId}/images\nPOST /docker/{environmentId}/services/image_status/clear\nGET /edge_stacks/{id}/logs/{endpoint_id}/file\n```\n\n----------------------------------------\n\nTITLE: Checking Default StorageClass in Kubernetes\nDESCRIPTION: Command to check for available StorageClasses and identify the default StorageClass in a Kubernetes cluster.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/baremetal.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get sc\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows Firewall Rules for Docker Swarm\nDESCRIPTION: PowerShell commands to add necessary firewall exceptions for Docker Swarm cluster management and communication\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/swarm/wcs.md#2025-04-13_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nnetsh advfirewall firewall add rule name=\"cluster_management\" dir=in action=allow protocol=TCP localport=2377\nnetsh advfirewall firewall add rule name=\"node_communication_tcp\" dir=in action=allow protocol=TCP localport=7946\nnetsh advfirewall firewall add rule name=\"node_communication_udp\" dir=in action=allow protocol=UDP localport=7946\nnetsh advfirewall firewall add rule name=\"overlay_network\" dir=in action=allow protocol=UDP localport=4789\nnetsh advfirewall firewall add rule name=\"swarm_dns_tcp\" dir=in action=allow protocol=TCP localport=53\nnetsh advfirewall firewall add rule name=\"swarm_dns_udp\" dir=in action=allow protocol=UDP localport=53\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Web Interface\nDESCRIPTION: Provides the URL to access the Portainer web interface after installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/podman/linux.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Pulling Latest Portainer Business Edition Image\nDESCRIPTION: Command to pull the latest Business Edition LTS image from Docker Hub\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/docker.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull portainer/portainer-ee:lts\n```\n\n----------------------------------------\n\nTITLE: Setting Up Docker's Stable Repository\nDESCRIPTION: Adds Docker's stable repository to the system's package sources, using the appropriate Ubuntu release codename automatically.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo add-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n```\n\n----------------------------------------\n\nTITLE: URL for Accessing Portainer via LoadBalancer\nDESCRIPTION: Example URL formats for accessing Portainer when it's exposed via a LoadBalancer on ports 9443 (HTTPS) and 9000 (HTTP).\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/wsl.md#2025-04-13_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nhttps://<loadbalancer IP>:9443/ or http://<loadbalancer IP>:9000/\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace for Portainer\nDESCRIPTION: Kubernetes command to create a dedicated namespace for Portainer deployment. This is the first step before creating the mTLS certificate secrets.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/mtls.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace portainer\n```\n\n----------------------------------------\n\nTITLE: Listing Modified API Endpoints\nDESCRIPTION: List of modified API endpoints with changes to path parameters, query parameters, and responses.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nGET /cloud/{provider}/info\nPUT /custom_templates/{id}\nGET /docker/{environmentId}/containers/{containerID}/image_status\nGET /docker/{environmentId}/services/{serviceID}/image_status\nGET /docker/{environmentId}/snapshot/containers/{containerId}\nGET /docker/{environmentId}/stacks/{id}/images_status\n```\n\n----------------------------------------\n\nTITLE: Adding Volume Mount for Host Management Features in Portainer Agent\nDESCRIPTION: Code snippet showing how to add a volume mount to enable host management features in the Portainer Agent deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/swarm/agent.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--mount type=bind,src=//,dst=/host\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Host and Filesystem Options\nDESCRIPTION: Table describing host management and volume management configuration options in Portainer\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/swarm/setup.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Option                                          | Overview                                                                                                                                                                         |\n| ----------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Enable host management features                 | Enabling host management features allows you to see the available devices and storage on the physical nodes across your cluster as well as browse the nodes' filesystems.        |\n| Enable volume management for non-administrators | Enabling this feature allows non-administrator users to manage volumes on an environment. If this is disabled, users below administrator level have read-only access to volumes. |\n```\n\n----------------------------------------\n\nTITLE: Patching Portainer Deployment to Set Node Affinity\nDESCRIPTION: kubectl command to patch the Portainer deployment to ensure it's always scheduled on the same node it's currently running on, using nodeSelector.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/wsl.md#2025-04-13_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch deployments -n portainer portainer -p '{\"spec\": {\"template\": {\"spec\": {\"nodeSelector\": {\"kubernetes.io/hostname\": \"'$(kubectl get pods -n portainer -o jsonpath='{ ..nodeName }')'\"}}}}}}' || (echo Failed to identify current node of portainer pod; exit 1)\n```\n\n----------------------------------------\n\nTITLE: Template Categories Configuration\nDESCRIPTION: Example showing how to assign categories to a template, which are used for filtering in the Portainer UI.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"categories\": [\"webserver\", \"open-source\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Downloading Portainer Windows Stack Configuration\nDESCRIPTION: Command to download the Portainer Windows stack YML configuration file\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/swarm/wcs.md#2025-04-13_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\ncurl https://downloads.portainer.io/ce-lts/portainer_windows_stack.yml -o portainer-windows-stack.yml\n```\n\n----------------------------------------\n\nTITLE: Sample Kubeconfig File Structure in YAML\nDESCRIPTION: This snippet shows the structure of a kubeconfig file generated by Portainer. It includes cluster information, context, and user authentication details. The server URL points to the Portainer Server instance rather than the Kubernetes cluster directly.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/kubernetes/kubeconfig.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nclusters:\n- cluster:\n    insecure-skip-tls-verify: true\n    server: https://my-portainer-server:9443/api/endpoints/1/kubernetes\n  name: portainer-cluster-kubernetes\ncontexts:\n- context:\n    cluster: portainer-cluster-kubernetes\n    user: portainer-sa-clusteradmin\n  name: portainer-ctx-kubernetes\ncurrent-context: portainer-ctx-kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: portainer-sa-clusteradmin\n  user:\n    token: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n```\n\n----------------------------------------\n\nTITLE: Setting Node Selector for Portainer Deployment\nDESCRIPTION: kubectl command to patch the Portainer deployment with node selector configuration\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/wsl.md#2025-04-13_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch deployments -n portainer portainer -p '{\"spec\": {\"template\": {\"spec\": {\"nodeSelector\": {\"kubernetes.io/hostname\": \"'$(kubectl get pods -n portainer -o jsonpath='{ ..nodeName }')'\"}}}}}}' || (echo Failed to identify current node of portainer pod; exit 1)\n```\n\n----------------------------------------\n\nTITLE: Removing Portainer Server Container\nDESCRIPTION: Command to remove the stopped Portainer server container while preserving data volumes\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/docker.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker rm portainer\n```\n\n----------------------------------------\n\nTITLE: Docker API Version Error Message\nDESCRIPTION: Error message displayed when running Portainer with Docker Engine <= 19.03 due to API version incompatibility between client and daemon.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nfailed initializing upgrade service | error=\"failed to determine container platform: failed to retrieve docker info: Error response from daemon: client version 1.41 is too new. Maximum supported API version is 1.40\"\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Docker Security Settings\nDESCRIPTION: Comprehensive table listing Docker security configuration options and their implications\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/swarm/setup.md#2025-04-13_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Option                                                | Overview|\n| ----------------------------------------------------- ||\n| Disable bind mounts for non-administrators            | Prevents non-admin users within Portainer from using bind mounts when creating containers and/or services/stacks. When toggled on, the option to attach to a host file system path is removed.                                                                                                                                                                                                                                                                                                                                              |\n| Disable privileged mode for non-administrators        | Prevents non-admin users from elevating the privilege of a container to bypass SELinux/AppArmor. When toggled on, the option to select **Privileged** mode when [adding a container](../containers/add.md) is removed.                                                                                                                                                                                                                                                                                                                      |\n| Disable the use of host PID 1 for non-administrators  | Prevents non-admin users from requesting that a deployed container operates as the host PID. This is a security risk if used by a non-trustworthy authorized user because when they operate as PID1, they are in effect able to run any command in the container console as root on the host.                                                                                                                                                                                                                                                               |\n| Disable the use of Stacks for non-administrators      | This is a 'sledgehammer' approach to removing any possibility for non-admin users within Portainer to find and use weaknesses in the Docker architecture. Whilst Portainer has the ability to disable some of the more common exploits, we cannot possibly block them all because there are any number of capabilities that could be added to a container to attempt to gain access to the host. This feature simply allows an admin to disable all possible entry points.                                                                                  |\n| Disable device mappings for non-administrators        | Blocks users from mapping host devices into containers. Whilst the ability to map devices is generally used for good (e.g. mapping a GPU into a container), it can equally be used by non-trustworthy authorized users to map a physical storage device into a container. It is possible to mount `/dev/sda1` into a container, and then from a console of that container, the user would have complete access to the sda1 device without restriction. By toggling this on, Portainer blocks the ability for non-admins to map ANY devices into containers. |\n| Disable container capabilities for non-administrators | Toggle on to hide the **Container capabilities** tab for non-administrators when they are [adding a container](../containers/add.md).                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| Disable sysctl settings for non-administrators        | Toggle on to stop non-admin users from using sysctl options, preventing them from recreating, duplicating or editing containers.                                                                                                                                                                                                                                                                                                                                                                                                                            |\n```\n\n----------------------------------------\n\nTITLE: Stopping and Removing Edge Agent in Docker Standalone\nDESCRIPTION: Commands to stop and remove the existing Portainer Edge Agent container in a Docker Standalone environment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/edge.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker stop portainer_edge_agent\ndocker rm portainer_edge_agent\n```\n\n----------------------------------------\n\nTITLE: Creating Directory Structure for MicroK8s Offline Installation\nDESCRIPTION: Creates the necessary directory structure in the SSH user's home directory for storing MicroK8s installation files and images.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kube-create/microk8s/offline.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p $HOME/microk8s\nmkdir -p $HOME/microk8s/images\n```\n\n----------------------------------------\n\nTITLE: Adding Notes to Portainer Template in JSON\nDESCRIPTION: Demonstrates how to include additional information about a template using the note field, which supports HTML.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"note\": \"You can use this field to record extra information about a template.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using Cron Syntax for Scheduled Backups in Portainer\nDESCRIPTION: Example of the cron syntax format used to schedule automatic backups to S3 in Portainer Business Edition. The format follows the standard cron pattern with five fields representing minute, hour, day of month, month, and day of week.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/settings/general.md#2025-04-13_snippet_0\n\nLANGUAGE: cron\nCODE:\n```\n41 3 * * 2\n```\n\n----------------------------------------\n\nTITLE: Adding Portainer Helm Repository\nDESCRIPTION: Commands to add and update the Portainer Helm repository before installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/baremetal.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add portainer https://portainer.github.io/k8s/\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Stopping Portainer Server Container\nDESCRIPTION: Command to stop the running Portainer server container\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/docker.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker stop portainer\n```\n\n----------------------------------------\n\nTITLE: Templates Permissions Table in Markdown\nDESCRIPTION: A markdown table showing permission levels for different roles regarding template operations in Portainer.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/docker-roles-and-permissions.md#2025-04-13_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<table><thead><tr><th width=\"352\">Operation</th><th width=\"62\" data-type=\"checkbox\">EA</th><th width=\"58\" data-type=\"checkbox\">OP</th><th width=\"58\" data-type=\"checkbox\">HD</th><th width=\"55\" data-type=\"checkbox\">ST</th><th width=\"58\" data-type=\"checkbox\">RO</th><th>Notes</th></tr></thead><tbody><tr><td>View app templates</td><td>true</td><td>true</td><td>true</td><td>true</td><td>true</td><td></td></tr><tr><td>Deploy app templates</td><td>true</td><td>false</td><td>false</td><td>true</td><td>false</td><td></td></tr></tbody></table>\n```\n\n----------------------------------------\n\nTITLE: Container Command Configuration\nDESCRIPTION: Example showing how to specify a custom command to run in the container when it starts, overriding the default command from the Dockerfile.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"command\": \"/bin/bash -c \\\"echo hello\\\" && exit 777\"\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Local Environment Addition in Portainer API\nDESCRIPTION: Example JSON response after successfully adding a local Docker socket environment. Contains the environment details including its ID which is needed for subsequent API calls.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/api.md#2025-04-13_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"AuthorizedTeams\": [], \n    \"AuthorizedUsers\": [], \n    \"Extensions\": [], \n    \"GroupId\": 1, \n    \"Id\": 1, \n    \"Name\": \"test-local\", \n    \"PublicURL\": \"\",\n    \"Type\": 1,\n    \"TLSConfig\": {\n        \"TLS\": false, \n        \"TLSSkipVerify\": false\n    }, \n    \"Type\": 1, \n    \"URL\": \"unix:///var/run/docker.sock\"\n}\n```\n\n----------------------------------------\n\nTITLE: Pulling Latest Portainer Agent Image\nDESCRIPTION: Command to pull the latest Portainer agent image from Docker Hub\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/docker.md#2025-04-13_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull portainer/agent:lts\n```\n\n----------------------------------------\n\nTITLE: Docker Run Pull Always Flag\nDESCRIPTION: Docker run command flag for always pulling the latest image version during container creation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/stacks/add.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n--pull=always\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Server Web Interface\nDESCRIPTION: URL format for accessing the Portainer Server web interface after installation. The server runs on HTTPS port 9443 by default and can be accessed via localhost or the server's IP address/hostname.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/wcs.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Volume for Portainer Data\nDESCRIPTION: PowerShell command to create a Docker volume that Portainer Server will use to store its database.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/wcs.md#2025-04-13_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\ndocker volume create portainer_data\n```\n\n----------------------------------------\n\nTITLE: Creating Sidero Omni Service Account with omnictl\nDESCRIPTION: Command to create a service account named 'portainer' using the omnictl command line tool. This creates an account with a one-year lifetime and the same role as the creating user.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/settings/credentials/omni.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nonictl serviceaccount create portainer\n```\n\n----------------------------------------\n\nTITLE: Installing Docker CE on Windows Server\nDESCRIPTION: PowerShell commands to download and execute the Docker CE installation script from Microsoft\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/swarm/wcs.md#2025-04-13_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-WebRequest -UseBasicParsing \"https://raw.githubusercontent.com/microsoft/Windows-Containers/Main/helpful_tools/Install-DockerCE/install-docker-ce.ps1\" -o install-docker-ce.ps1\n.\\install-docker-ce.ps1\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Structure\nDESCRIPTION: Markdown structure defining the navigation and setup options for Portainer BE installation across different environments.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/README.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Set up a new Portainer BE Server installation\n\n{% hint style=\"info\" %}\nThese installation instructions are for Portainer Business Edition (BE). For Portainer Community Edition (CE) refer to the [CE install documentation](../../install-ce/server/).\n{% endhint %}\n\nSelect the environment for your new Portainer installation:\n\n{% content-ref url=\"docker/\" %}\n[docker](docker/)\n{% endcontent-ref %}\n\n{% content-ref url=\"swarm/\" %}\n[swarm](swarm/)\n{% endcontent-ref %}\n\n{% content-ref url=\"podman/\" %}\n[podman](podman/)\n{% endcontent-ref %}\n\n{% content-ref url=\"kubernetes/\" %}\n[kubernetes](kubernetes/)\n{% endcontent-ref %}\n```\n\n----------------------------------------\n\nTITLE: Sample Portainer Agent Deployment Output\nDESCRIPTION: Example output from the Kubernetes deployment command for Portainer Agent. Shows the creation of necessary resources like namespace, service account, and deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kubernetes/agent.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnamespace/portainer created\nserviceaccount/portainer-sa-clusteradmin created\nclusterrolebinding.rbac.authorization.k8s.io/portainer-crb-clusteradmin created\nservice/portainer-agent created\nservice/portainer-agent-headless created\ndeployment.apps/portainer-agent created\n```\n\n----------------------------------------\n\nTITLE: Custom Podman Volume Path Configuration\nDESCRIPTION: Example of configuring a custom volume path for Podman storage volumes in the Agent deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/podman/agent.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n- v /srv/data/podman:/var/lib/docker/volumes \\\n```\n\n----------------------------------------\n\nTITLE: Docker Run Command Reference\nDESCRIPTION: Reference to the basic docker run command structure used in force redeployment contexts.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/stacks/add.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Server via Ingress in Bash\nDESCRIPTION: Command to access Portainer Server using Ingress. The user needs to replace '<FQDN>' with the actual Fully Qualified Domain Name of their Portainer instance.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/baremetal.md#2025-04-13_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nhttps://<FQDN>/\n```\n\n----------------------------------------\n\nTITLE: Updating Docker Swarm from pre-1.24.1 to 1.24.2\nDESCRIPTION: Command to update the Portainer service to version 1.24.2 in a Docker Swarm environment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/from-1.x.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker service update --image portainer/portainer:1.24.2 --force portainer_portainer\n```\n\n----------------------------------------\n\nTITLE: JWT Response Format from Portainer Authentication\nDESCRIPTION: Example response from the authentication endpoint showing the JWT token format. This token is valid for 8 hours and must be included in subsequent API requests.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/api.md#2025-04-13_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"jwt\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Web Interface\nDESCRIPTION: URL format for accessing the Portainer web interface after installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/linux.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Documentation Structure in Markdown\nDESCRIPTION: Basic markdown structure showing installation guide navigation and platform selection for Podman installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/podman/README.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Podman\n\n{% hint style=\"info\" %}\nThese installation instructions are for Portainer Community Edition (CE). For Portainer Business Edition (BE) refer to the [BE install documentation](../../../install/server/podman/).\n{% endhint %}\n\nInstallation instructions can differ between platforms. Please choose your platform below:\n\n{% content-ref url=\"linux.md\" %}\n[linux.md](linux.md)\n{% endcontent-ref %}\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer with Certbot-generated SSL Certificate on Docker Standalone\nDESCRIPTION: Docker run command to deploy Portainer using SSL certificates generated by Certbot. Mounts both 'live' and 'archive' directories from Let's Encrypt and uses the full chain certificate.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/ssl.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 9443:9443 -p 8000:8000 \\\n    --name portainer --restart always \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    -v portainer_data:/data \\\n    -v /etc/letsencrypt/live/yourdomain:/certs/live/yourdomain:ro \\\n    -v /etc/letsencrypt/archive/yourdomain:/certs/archive/yourdomain:ro \\\n    portainer/portainer-ee:lts \\\n    --sslcert /certs/live/yourdomain/fullchain.pem \\\n    --sslkey /certs/live/yourdomain/privkey.pem\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Web Interface\nDESCRIPTION: URL to access the Portainer web interface after installation. The interface is accessed via HTTPS on port 9443.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/wcs.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Stopping and Removing Old Portainer Instance in Podman\nDESCRIPTION: These commands stop and remove the existing Portainer container in Podman. This is necessary before upgrading to the Business Edition.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/tobe/podman.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npodman stop portainer\npodman rm portainer\n```\n\n----------------------------------------\n\nTITLE: Displaying Kubernetes Volume Configuration in YAML\nDESCRIPTION: This section shows the YAML representation of the volume deployment configuration. It can be used for backing up the volume configuration or for reference purposes.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/kubernetes/volumes/inspect.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n<figure><img src=\"../../../.gitbook/assets/2.15-kubernetes_volume_volume_yaml.png\" alt=\"\"><figcaption></figcaption></figure>\n```\n\n----------------------------------------\n\nTITLE: Adding Yarn Package Repository\nDESCRIPTION: Adds Yarn's GPG key and repository to the system's package sources to enable installation of the Yarn package manager.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\necho \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n```\n\n----------------------------------------\n\nTITLE: Pulling Latest Portainer Agent Image in Docker\nDESCRIPTION: Command to pull the latest version of the Portainer Agent image for Docker environments.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/edge.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull portainer/agent:lts\n```\n\n----------------------------------------\n\nTITLE: Azure CLI Authentication for Kubeconfig Generation\nDESCRIPTION: Command to authenticate with Azure CLI before generating kubeconfig file.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kubernetes/import.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz login\n```\n\n----------------------------------------\n\nTITLE: Required GitHub Token Scopes\nDESCRIPTION: The specific permission scopes required for GitHub personal access token (classic) to authenticate with the container registry. These scopes are necessary for full registry access and management.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/registries/add/ghcr.md#2025-04-13_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndelete:packages\nrepo\nwrite:packages\n```\n\n----------------------------------------\n\nTITLE: Inserting Hint Block in Markdown\nDESCRIPTION: This code snippet demonstrates how to create an info hint block in markdown, which is used to inform users about the relocation of content to the Portainer Knowledge Base.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/faq/troubleshooting.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% hint style=\"info\" %}\nThis content has moved to the [Portainer Knowledge Base](https://portal.portainer.io/knowledge/troubleshooting).\n{% endhint %}\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Web Interface\nDESCRIPTION: URL pattern to access the Portainer web interface after installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/docker/wsl.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Adding Docker's Official GPG Key\nDESCRIPTION: Downloads and adds Docker's official GPG key to ensure package authenticity when installing Docker packages.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n```\n\n----------------------------------------\n\nTITLE: Edge Groups Structure Example in Markdown\nDESCRIPTION: Table structure showing the dynamic grouping options for Edge environments, describing Partial Match and Full Match behaviors.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/edge/groups.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Option        | Overview                                                                                                              |\n| ------------- | --------------------------------------------------------------------------------------------------------------------- |\n| Partial Match | Will associate any environments matching at least one of the selected tags (environments can have more than one tag). |\n| Full Match    | Will associate any environments matching all of the selected tags.                                                    |\n```\n\n----------------------------------------\n\nTITLE: Updating Docker Swarm to Portainer CE 2.0.0\nDESCRIPTION: Command to update the Portainer service to version 2.0.0 in a Docker Swarm environment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/from-1.x.md#2025-04-13_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker service update --image portainer/portainer-ce:2.0.0 --force portainer_portainer\n```\n\n----------------------------------------\n\nTITLE: Authorization Header Format for Portainer API\nDESCRIPTION: Example of the Authorization header format required for Portainer API requests. The JWT token must be prefixed with 'Bearer'.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/api.md#2025-04-13_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nBearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE\n```\n\n----------------------------------------\n\nTITLE: Updating Docker Standalone from pre-1.24.1 to 1.24.2\nDESCRIPTION: Commands to stop the existing Portainer container, remove it, and deploy version 1.24.2 while preserving data volumes.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/from-1.x.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker stop portainer\n\ndocker rm portainer\n\ndocker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer:1.24.2\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Web Interface\nDESCRIPTION: Provides the URL to access the Portainer Server web interface after installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/podman/linux.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Applying Edge Agent Manifest in Kubernetes\nDESCRIPTION: Command to apply the downloaded YAML manifest to update the Portainer Edge Agent in a Kubernetes environment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/edge.md#2025-04-13_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f portainer-agent-edge-k8s.yaml\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Web Interface\nDESCRIPTION: URL format for accessing the Portainer web interface after installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/swarm/linux.md#2025-04-13_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Adding Go Binary Path to Environment\nDESCRIPTION: Adds the Go binary directories to the PATH environment variable in the bash profile, enabling Go commands to be executed from anywhere in the terminal.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\necho \"export PATH=$PATH:$HOME/go/bin:/usr/local/go/bin\" >> ~/.bashrc\n```\n\n----------------------------------------\n\nTITLE: Deprecated API Endpoints - REST\nDESCRIPTION: List of deprecated API endpoints that will be removed or replaced, including custom templates, stack image status, and kubernetes namespace operations.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_2\n\nLANGUAGE: rest\nCODE:\n```\nPOST /custom_templates/file\nPOST /custom_templates/repository\nPOST /custom_templates/string\nGET /docker/{environmentId}/stacks/{id}/images_status\nPOST /cloud/credentials/{id}/delete\nPUT /edge_configurations\nGET /edge_update_schedules/active\nPOST /kubernetes/{id}/namespaces/{namespace}\n```\n\n----------------------------------------\n\nTITLE: Container Interactive Mode Configuration\nDESCRIPTION: Example showing how to configure a container to run in foreground (interactive) mode.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"interactive\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Authorization Header Format for Portainer API\nDESCRIPTION: Example of the authorization header format required for authenticated Portainer API requests. The header value must include 'Bearer' followed by the JWT token.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/examples.md#2025-04-13_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nBearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE\n```\n\n----------------------------------------\n\nTITLE: Pulling Portainer CE 2.0.0 Image\nDESCRIPTION: Command to pull the Portainer CE 2.0.0 image before deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/from-1.x.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull portainer/portainer-ce:2.0.0\n```\n\n----------------------------------------\n\nTITLE: Stopping Portainer Server on Podman\nDESCRIPTION: Command to stop the running Portainer Server container on Podman.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/podman.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npodman stop portainer\n```\n\n----------------------------------------\n\nTITLE: Sample Portainer Agent Pod Status\nDESCRIPTION: Example output showing the status of the Portainer Agent pod after successful deployment in the Kubernetes cluster.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kubernetes/agent.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nNAME                               READY   STATUS    RESTARTS   AGE\nportainer-agent-5988b5d966-bvm9m   1/1     Running   0          15m\n```\n\n----------------------------------------\n\nTITLE: Verifying Portainer Container Status with Podman\nDESCRIPTION: Checks the status of the Portainer Server container to ensure it's running correctly.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/podman/linux.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npodman ps\n```\n\n----------------------------------------\n\nTITLE: Listing Broken API Endpoints\nDESCRIPTION: List of API endpoints that are currently broken or not functioning as expected in the Portainer API.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nGET /cloud/microk8s/addons\nPOST /cloud/{provider}\nGET /cloudcredentials\nPOST /cloudcredentials\nPUT /cloudcredentials\nPOST /custom_templates\nPOST /edge_jobs\nPOST /edge_stacks\nGET /endpoints/{id}/edge/generate-key\nPOST /stacks\n```\n\n----------------------------------------\n\nTITLE: Installing Yarn Package Manager\nDESCRIPTION: Updates package lists and installs the Yarn package manager, which is required for managing Node.js dependencies in Portainer development.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get update && sudo apt-get install yarn\n```\n\n----------------------------------------\n\nTITLE: Creating Portainer Data Volume with Podman\nDESCRIPTION: Creates a persistent volume for Portainer to store its database.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/podman/linux.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npodman volume create portainer_data\n```\n\n----------------------------------------\n\nTITLE: Deploying Updated Portainer Community Edition\nDESCRIPTION: Command to run the updated Portainer Community Edition container with persistent storage and necessary port mappings\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/docker.md#2025-04-13_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9443:9443 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:lts\n```\n\n----------------------------------------\n\nTITLE: Docker Service List Output\nDESCRIPTION: Example output from the docker service ls command showing the Portainer Agent service running in the cluster.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/swarm/agent.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nID                  NAME                    MODE                REPLICAS            IMAGE                    PORTS\ntshb6ee2710s        portainer-agent_agent   global              1/1                 portainer/agent:latest\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Web Interface\nDESCRIPTION: URL format for accessing the Portainer web interface after installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/swarm/wcs.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Deleted API Endpoints - Markdown\nDESCRIPTION: Lists removed API endpoints for system information and upgrades\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n* GET `/system/info`\n* POST `/system/upgrade`\n```\n\n----------------------------------------\n\nTITLE: Modified API Endpoints - Markdown\nDESCRIPTION: Details changes to existing API endpoints including parameter modifications and description updates\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n* POST `/cloud/{provider}`\n* POST `/cloudcredentials`\n  * Description changed from 'Create a cloud credential **Access policy**: authenticated' to 'delete delete a cloud credential by ID **Access policy**: authenticated'\n  * New query param: `id`\n[...additional endpoints omitted for brevity...]\n```\n\n----------------------------------------\n\nTITLE: Stacks Permissions Table in Markdown\nDESCRIPTION: A markdown table detailing permission levels for different roles regarding stack operations in Portainer.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/docker-roles-and-permissions.md#2025-04-13_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<table><thead><tr><th width=\"352\">Operation</th><th width=\"62\" data-type=\"checkbox\">EA</th><th width=\"58\" data-type=\"checkbox\">OP</th><th width=\"57\" data-type=\"checkbox\">HD</th><th width=\"55\" data-type=\"checkbox\">ST</th><th width=\"58\" data-type=\"checkbox\">RO</th><th>Notes</th></tr></thead><tbody><tr><td>View stacks</td><td>true</td><td>true</td><td>true</td><td>true</td><td>true</td><td></td></tr></tbody></table>\n```\n\n----------------------------------------\n\nTITLE: Enabling Podman Socket on Linux\nDESCRIPTION: Ensures the Podman socket is enabled for communication with Portainer.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/podman/linux.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl enable --now podman.socket\n```\n\n----------------------------------------\n\nTITLE: Administrator-only Template Configuration\nDESCRIPTION: Example showing how to configure a template to be available only to administrator users via the administrator-only property.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"administrator-only\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Removing Portainer Agent\nDESCRIPTION: Command to remove the stopped Portainer agent container\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/docker.md#2025-04-13_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker rm portainer_agent\n```\n\n----------------------------------------\n\nTITLE: Describing Valid Configurations Section in Markdown\nDESCRIPTION: This markdown snippet introduces the valid configurations section, explaining Portainer's testing process and the scope of tested configurations.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/requirements-and-prerequisites.md#2025-04-13_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Valid configurations\n\nEvery Portainer release goes through functional, release and post-release testing to ensure it works as expected. Because we cannot test against every configuration variant out there, we test against a subset.\n\nThe following tables list all of the configurations that we have tested, validated and consider to be functional. If a variant is not listed, it doesn't mean it won't work, it just means it hasn't been tested.\n```\n\n----------------------------------------\n\nTITLE: Services Permissions Table in Markdown\nDESCRIPTION: A markdown table showing permission levels for different roles regarding service operations in Docker Swarm environments.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/docker-roles-and-permissions.md#2025-04-13_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<table><thead><tr><th width=\"352\">Operation</th><th width=\"62\" data-type=\"checkbox\">EA</th><th width=\"58\" data-type=\"checkbox\">OP</th><th width=\"58\" data-type=\"checkbox\">HD</th><th width=\"55\" data-type=\"checkbox\">ST</th><th width=\"58\" data-type=\"checkbox\">RO</th><th>Notes</th></tr></thead><tbody><tr><td>View services</td><td>true</td><td>true</td><td>true</td><td>true</td><td>true</td><td></td></tr></tbody></table>\n```\n\n----------------------------------------\n\nTITLE: Stopping and Removing Portainer Container in Docker Standalone\nDESCRIPTION: Commands to stop and remove an existing Portainer container before applying encryption changes.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/db-encryption.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker stop portainer\ndocker rm portainer\n```\n\n----------------------------------------\n\nTITLE: No direct code snippets found\nDESCRIPTION: This document contains release notes and changelog information but no explicit code snippets. It describes features like YAML manifest editing, webhook configurations, and Docker Compose updates, but doesn't include code examples.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_12\n\n\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Secret for Portainer Encryption\nDESCRIPTION: kubectl command to create a Kubernetes secret for Portainer database encryption.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/db-encryption.md#2025-04-13_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic portainer-key --from-literal=secret=IAmASecretKey --namespace portainer\n```\n\n----------------------------------------\n\nTITLE: Template Note Configuration\nDESCRIPTION: Example showing how to add additional information about a template that will be displayed in the UI, supporting HTML formatting.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"note\": \"You can use this field to record extra information about a template.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Portainer Container Status with Podman\nDESCRIPTION: Checks the status of the Portainer Server container using the 'podman ps' command.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/podman/linux.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nroot@server:~# podman ps\nCONTAINER ID   IMAGE                          COMMAND                  CREATED       STATUS      PORTS                                                                                  NAMES             \nde5b28eb2fa9   portainer/portainer-ce:lts     \"/portainer\"             2 weeks ago   Up 9 days   0.0.0.0:8000->8000/tcp, :::8000->8000/tcp, 0.0.0.0:9443->9443/tcp, :::9443->9443/tcp   portainer\n```\n\n----------------------------------------\n\nTITLE: Defining portainer-cr-user Role Permissions\nDESCRIPTION: This markdown table outlines the specific API group resources and verbs allowed for the portainer-cr-user role in Portainer Community Edition. It covers core resources, storage, and networking.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/kubernetes-roles-and-bindings.md#2025-04-13_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| API Group         | Resources         | Verbs |\n| ----------------- | ----------------- | ----- |\n| (Empty)           | namespaces, nodes | list  |\n| storage.k8s.io    | storageclasses    | list  |\n| networking.k8s.io | ingresses         | list  |\n```\n\n----------------------------------------\n\nTITLE: Starting Portainer Container After Password Reset\nDESCRIPTION: This command restarts the Portainer container after the password has been reset. You'll need to replace \"id-portainer-container\" with your actual container ID or name.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker start \"id-portainer-container\"\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Ingress Path Configuration\nDESCRIPTION: Example showing the root path configuration for Kubernetes Ingress rules.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/kubernetes/networking/ingresses/add.md#2025-04-13_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n/\n```\n\n----------------------------------------\n\nTITLE: Viewing Password Reset Pod Logs in Kubernetes\nDESCRIPTION: This command displays the logs from the password reset pod to view the new password that was generated for the admin user.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs passreset -n portainer\n```\n\n----------------------------------------\n\nTITLE: Markdown Content Links Structure\nDESCRIPTION: GitHub-flavored markdown content with GitBook content reference blocks linking to various Kubernetes resource documentation pages.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/kubernetes/more-resources/README.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# More Resources\n\nThis section provides access to Kubernetes resources and objects that are not covered by the other menu options.\n\n{% content-ref url=\"jobs.md\" %}\n[jobs.md](jobs.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"service-accounts.md\" %}\n[service-accounts.md](service-accounts.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"cluster-roles.md\" %}\n[cluster-roles.md](cluster-roles.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"namespace-roles.md\" %}\n[namespace-roles.md](namespace-roles.md)\n{% endcontent-ref %}\n```\n\n----------------------------------------\n\nTITLE: Markdown Content Structure\nDESCRIPTION: Basic markdown structure for documentation with platform-specific links and info hints\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/README.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Docker Standalone\n\n{% hint style=\"info\" %}\nThese installation instructions are for Portainer Business Edition (BE). For Portainer Community Edition (CE) refer to the [CE install documentation](../../../install-ce/server/docker/).\n{% endhint %}\n\nInstallation instructions can differ between platforms. Please choose your platform below:\n\n{% content-ref url=\"linux.md\" %}\n[linux.md](linux.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"wsl.md\" %}\n[wsl.md](wsl.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"wcs.md\" %}\n[wcs.md](wcs.md)\n{% endcontent-ref %}\n```\n\n----------------------------------------\n\nTITLE: Stopping Portainer Agent\nDESCRIPTION: Command to stop the running Portainer agent container\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/docker.md#2025-04-13_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker stop portainer_agent\n```\n\n----------------------------------------\n\nTITLE: Deleting Password Reset Pod in Kubernetes\nDESCRIPTION: This command deletes the password reset pod from the Kubernetes cluster after the password reset is complete.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete pod passreset -n portainer\n```\n\n----------------------------------------\n\nTITLE: Customizing Traefik labels for Portainer access URL\nDESCRIPTION: YAML snippets showing how to customize the Traefik labels to set the desired URLs for accessing Portainer and Edge services.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n- \"traefik.http.routers.frontend.rule=Host(`portainer.yourdomain.com`)\"\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- \"traefik.http.routers.edge.rule=Host(`edge.yourdomain.com`)\"\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Ingress Class Annotation\nDESCRIPTION: Example showing the Google Cloud specific ingress class annotation used for GCE/GKE ingress controllers.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/kubernetes/networking/ingresses/add.md#2025-04-13_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nkubernetes.io/ingress.class: gce\n```\n\n----------------------------------------\n\nTITLE: Modified API Endpoints Documentation\nDESCRIPTION: Documentation of API endpoint changes including updates to settings, registry and token generation endpoints. Details parameters and return types that were added.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nPUT /settings\n  Parameters:\n    Added: body.OAuthSettings.AuthStyle\n  Return Type:\n    Added: OAuthSettings.AuthStyle\n\nGET /settings\n  Return Type:\n    Added: OAuthSettings.AuthStyle\n\nPUT /settings/default_registry\n  Return Type:\n    Added: OAuthSettings.AuthStyle\n\nPOST /users/{id}/tokens\n  Return Type:\n    Added: apiKey\n    Added: rawAPIKey\n```\n\n----------------------------------------\n\nTITLE: Markdown Content Notice\nDESCRIPTION: Markdown hint block redirecting users to the Portainer Knowledge base for upgrade information.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/faq/upgrading.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% hint style=\"info\" %}\nThis content has moved to the [Portainer Knowledge base](https://portal.portainer.io/knowledge/upgrading-and-downgrading).\n{% endhint %}\n```\n\n----------------------------------------\n\nTITLE: Docker Environment Variable Configuration\nDESCRIPTION: Example of adding a custom AGENT_SECRET environment variable to the Docker run command when deploying Edge Agent.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/docker/edge.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n-e AGENT_SECRET=yoursecret\n```\n\n----------------------------------------\n\nTITLE: Running Password Reset Helper for Docker Swarm\nDESCRIPTION: These commands pull and run the password reset helper container for Portainer in a Docker Swarm environment, mounting the Portainer data volume. The volume name may need to be adjusted based on your deployment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull portainer/helper-reset-password\ndocker run --rm -v portainer_portainer_data:/data portainer/helper-reset-password\n```\n\n----------------------------------------\n\nTITLE: Docker Compose configuration for Portainer Business Edition with Traefik\nDESCRIPTION: YAML configuration for deploying Portainer Business Edition with Traefik Proxy in Docker Swarm. Includes services for Traefik, Portainer agent, and Portainer server with appropriate network and volume configurations.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3.2'\n\nservices:\n  traefik:\n    image: \"traefik:latest\"\n    command:\n      - --entrypoints.web.address=:80\n      - --entrypoints.websecure.address=:443\n      - --providers.docker=true\n      - --providers.docker.swarmMode=true\n      - --providers.docker.exposedbydefault=false\n      - --providers.docker.network=public\n      - --api\n      - --log.level=ERROR\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    networks:\n      - public\n    volumes:\n      - \"/var/run/docker.sock:/var/run/docker.sock:ro\"\n\n  agent:\n    image: portainer/agent:lts\n    environment:\n      # REQUIRED: Should be equal to the service name prefixed by \"tasks.\" when\n      # deployed inside an overlay network\n      AGENT_CLUSTER_ADDR: tasks.agent\n      # AGENT_PORT: 9001\n      # LOG_LEVEL: debug\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /var/lib/docker/volumes:/var/lib/docker/volumes\n    networks:\n      - agent_network\n    deploy:\n      mode: global\n      placement:\n        constraints: [node.platform.os == linux]\n\n  portainer:\n    image: portainer/portainer-ee:lts\n    command: -H tcp://tasks.agent:9001 --tlsskipverify\n    volumes:\n      - data:/data\n    networks:\n      - public\n      - agent_network\n    deploy:\n      mode: replicated\n      replicas: 1\n      placement:\n        constraints: [node.role == manager]\n      labels:\n      - \"traefik.enable=true\"\n      - \"traefik.http.routers.portainer.rule=Host(`portainer.yourdomain.com`)\"\n      - \"traefik.http.routers.portainer.entrypoints=web\"\n      - \"traefik.http.services.portainer.loadbalancer.server.port=9000\"\n      - \"traefik.http.routers.portainer.service=portainer\"\n      # Edge\n      - \"traefik.http.routers.edge.rule=Host(`edge.yourdomain.com`)\"\n      - \"traefik.http.routers.edge.entrypoints=web\"\n      - \"traefik.http.services.edge.loadbalancer.server.port=8000\"\n      - \"traefik.http.routers.edge.service=edge\"\n\nnetworks:\n  public:\n    external: true\n  agent_network:\n    external: true\n\nvolumes:\n   data:\n```\n\n----------------------------------------\n\nTITLE: API Path Corrections - Swagger\nDESCRIPTION: Documentation updates for various API endpoints including stack image status, user tokens, and custom templates paths. Changes include fixing incorrect paths and response format descriptions.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_1\n\nLANGUAGE: rest\nCODE:\n```\n/stacks/{id}/images_status\n/users/{id}/tokens\n/custom_templates/create/file\n/custom_templates/create/repository\n/custom_templates/create/string\n```\n\n----------------------------------------\n\nTITLE: Listing Changes to Portainer API Endpoints in Markdown\nDESCRIPTION: This code snippet provides a comprehensive listing of changes to various Portainer API endpoints, including modifications to query parameters, path parameters, and new endpoints. The documentation covers endpoints related to SSL management, stacks, webhooks, and tags.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n* PUT `/ssl`\n* POST `/stacks/webhooks/{webhookID}`\n* DELETE `/stacks/{id}`\n  * Modified query param: endpointId\n    * Description changed from 'Environment(Endpoint) identifier used to remove an external stack (required when external is set to true)' to 'Environment identifier'\n    * Required changed from false to true\n* PUT `/stacks/{id}`\n  * Modified query param: endpointId\n    * Description changed from 'Stacks created before version 1.18.0 might not have an associated environment(endpoint) identifier. Use this optional parameter to set the environment(endpoint) identifier used by the stack.' to 'Environment identifier'\n    * Required changed from false to true\n* PUT `/stacks/{id}/associate`\n  * Modified query param: endpointId\n    * Description changed from 'Stacks created before version 1.18.0 might not have an associated environment(endpoint) identifier. Use this optional parameter to set the environment(endpoint) identifier used by the stack.' to 'Environment identifier'\n* GET `/stacks/{id}/file`\n  * New query param: commitHash\n  * New query param: version\n* POST `/stacks/{id}/start`\n  * New query param: endpointId\n* POST `/stacks/{id}/stop`\n  * New query param: endpointId\n* POST `/tags`\n* GET `/webhooks`\n  * Modified query param: EndpointID\n    * Required changed from false to true\n  * Modified query param: ResourceID\n    * Required changed from false to true\n* POST `/webhooks`\n* PUT `/webhooks/{id}`\n  * New path param: id\n* PUT `/webhooks/{id}/reassign`\n  * New path param: id\n* POST `/webhooks/{token}`\n  * Modified path param: token\n```\n\n----------------------------------------\n\nTITLE: URL for Accessing Portainer via NodePort\nDESCRIPTION: Example URL formats for accessing Portainer when it's exposed via NodePort on ports 30779 (HTTPS) and 30777 (HTTP).\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/wsl.md#2025-04-13_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:30779/ or http://localhost:30777/\n```\n\n----------------------------------------\n\nTITLE: Cloning the Portainer Repository in Shell\nDESCRIPTION: Command to clone the Portainer GitHub repository to your local machine. This is the first step in setting up the development environment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/README.md#2025-04-13_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/portainer/portainer.git\n```\n\n----------------------------------------\n\nTITLE: Triggering Webhook Redeploy in HTML\nDESCRIPTION: This HTML form demonstrates how to trigger a webhook to redeploy stack containers with the latest image of the same tag.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/stacks/webhooks.md#2025-04-13_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"https://portainer:9443/api/stacks/webhooks/638e6967-ef77-4906-8af8-236800621360\" method=\"post\">\n  Redeploy stack containers with latest image of same tag <input type=\"submit\" />\n</form>\n```\n\n----------------------------------------\n\nTITLE: Listing New API Endpoints\nDESCRIPTION: List of newly added API endpoints in the Portainer API, including cloud, edge, Kubernetes, and webhook related endpoints.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nGET /cloud/credentials\nPOST /cloud/credentials\nPUT /cloud/credentials\nGET /cloud/endpoints/{endpointid}/nodes/nodestatus\nGET /cloud/endpoints/{environmentid}/addons\nPOST /cloud/endpoints/{environmentid}/addons\nPOST /cloud/endpoints/{environmentid}/nodes/add\nPOST /cloud/endpoints/{environmentid}/nodes/remove\nPOST /cloud/endpoints/{environmentid}/upgrade\nGET /cloud/endpoints/{environmentid}/version\nPOST /cloud/testssh\n```\n\n----------------------------------------\n\nTITLE: Installing Yarn via Homebrew on macOS\nDESCRIPTION: Command to install Yarn package manager using Homebrew package manager.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/mac.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew install yarn\n```\n\n----------------------------------------\n\nTITLE: Container Labels Configuration\nDESCRIPTION: Example showing how to add metadata labels to containers created from the template.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"labels\": [\n    { \"name\": \"com.example.vendor\", \"value\": \"Acme\" },\n    { \"name\": \"com.example.license\", \"value\": \"GPL\" },\n    { \"name\": \"com.example.version\", \"value\": \"1.0\" }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Building and Running Portainer in Development Mode in Shell\nDESCRIPTION: Command to build and run the Portainer project in development mode. This makes Portainer accessible at https://localhost:9443 and the UI dev server at http://localhost:8999.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/README.md#2025-04-13_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmake dev\n```\n\n----------------------------------------\n\nTITLE: Content References in Markdown\nDESCRIPTION: Markdown content references linking to authentication and activity log documentation pages\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/logs/README.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% content-ref url=\"authentication.md\" %}\n[authentication.md](authentication.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"activity.md\" %}\n[activity.md](activity.md)\n{% endcontent-ref %}\n```\n\n----------------------------------------\n\nTITLE: Navigating to the Portainer Project Directory in Shell\nDESCRIPTION: Command to change to the Portainer project directory after cloning the repository.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/README.md#2025-04-13_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncd portainer\n```\n\n----------------------------------------\n\nTITLE: Updating System Packages on Ubuntu\nDESCRIPTION: Updates the package lists for upgrades and new package installations on Ubuntu-based systems.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get update\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer Development Dependencies in Shell\nDESCRIPTION: Command to install all required development dependencies for the Portainer project using the Make utility.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/README.md#2025-04-13_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nmake deps\n```\n\n----------------------------------------\n\nTITLE: Installing Docker on Windows Container Host Service using PowerShell\nDESCRIPTION: PowerShell commands to download and execute Microsoft's script for installing the Windows Container Host Service and Docker. The script handles all necessary configurations for setting up Docker on Windows Server.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/wcs.md#2025-04-13_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-WebRequest -UseBasicParsing \"https://raw.githubusercontent.com/microsoft/Windows-Containers/Main/helpful_tools/Install-DockerCE/install-docker-ce.ps1\" -o install-docker-ce.ps1\n.\\install-docker-ce.ps1\n```\n\n----------------------------------------\n\nTITLE: Markdown Content Structure for Portainer Settings\nDESCRIPTION: Markdown structure defining the navigation and organization of Portainer settings documentation using content references and links.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/settings/README.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Settings\n\nThis section provides access to Portainer settings that apply to Portainer in general. For environment-specific settings, check the [Host](../../user/docker/host/), [Swarm](../../user/docker/swarm/) or [Cluster](../../user/kubernetes/cluster/) sections in each environment depending on the environment type.\n\n{% content-ref url=\"general.md\" %}\n[general.md](general.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"authentication/\" %}\n[authentication](authentication/)\n{% endcontent-ref %}\n\n{% content-ref url=\"credentials/\" %}\n[credentials](credentials/)\n{% endcontent-ref %}\n\n{% content-ref url=\"edge.md\" %}\n[edge.md](edge.md)\n{% endcontent-ref %}\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Mustache Variable Example in YAML\nDESCRIPTION: Example of using Mustache variable syntax in Docker Compose YAML files. This shows the format for variable interpolation that is referenced in a bug fix where using the same variable multiple times would prompt users to enter it repeatedly.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\n{{ service }}\n```\n\n----------------------------------------\n\nTITLE: Verifying Yarn Installation\nDESCRIPTION: Displays the installed version of Yarn to verify that the installation was successful.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nyarn --version\n```\n\n----------------------------------------\n\nTITLE: Verifying Node.js Installation\nDESCRIPTION: Displays the installed version of Node.js to verify that the installation was successful and meets the version requirement (v12+).\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode --version\n```\n\n----------------------------------------\n\nTITLE: Markdown Content References\nDESCRIPTION: Internal documentation links using content-ref tags to reference application and custom template pages\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/edge/templates/README.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% content-ref url=\"application.md\" %}\n[application.md](application.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"custom.md\" %}\n[custom.md](custom.md)\n{% endcontent-ref %}\n```\n\n----------------------------------------\n\nTITLE: Azure AKS Kubeconfig Generation\nDESCRIPTION: Command to generate kubeconfig file for Azure Kubernetes Service (AKS) cluster, requiring resource group name and cluster name parameters.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kubernetes/import.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz aks get-credentials --resource-group [resource-group-name] --name [cluster-name] --file ./kubeconfig-azure.yml\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Ingress Host Configuration Example\nDESCRIPTION: Example showing the format for specifying a hostname in Kubernetes Ingress configuration.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/kubernetes/networking/ingresses/add.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmyapp.mydomain.com\n```\n\n----------------------------------------\n\nTITLE: Container Hostname Configuration\nDESCRIPTION: Example showing how to set a custom hostname for a container instead of using the default Docker-assigned name.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/app-templates/format.md#2025-04-13_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hostname\": \"mycontainername\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Requirements and Prerequisites Section in Markdown\nDESCRIPTION: This snippet creates a markdown header for the requirements and prerequisites section of the Portainer documentation. It also includes a brief explanation about environment-specific requirements.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/requirements-and-prerequisites.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Requirements and prerequisites\n\nRequirements specific to your environment will be covered in the installation process.\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer with Custom SSL Certificate on Kubernetes via Helm\nDESCRIPTION: Helm install commands for Portainer on Kubernetes, specifying the custom TLS secret. Includes options for NodePort and LoadBalancer configurations for both Business and Community editions.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/ssl.md#2025-04-13_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm install -n portainer portainer portainer/portainer \\\n    --set tls.existingSecret=portainer-tls-secret \\\n    --set enterpriseEdition.enabled=true\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm install -n portainer portainer portainer/portainer \\\n    --set tls.existingSecret=portainer-tls-secret\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm install -n portainer portainer portainer/portainer \\\n    --set tls.existingSecret=portainer-tls-secret \\\n    --set service.type=LoadBalancer \\\n    --set enterpriseEdition.enabled=true \n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm install -n portainer portainer portainer/portainer \\\n    --set tls.existingSecret=portainer-tls-secret \\\n    --set service.type=LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: New API Endpoints - Markdown\nDESCRIPTION: Lists newly added API endpoints for edge update schedules and SSH key generation\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/release-notes.md#2025-04-13_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n* GET `/edge_update_schedules/previous_versions`\n* POST `/sshkeygen`\n```\n\n----------------------------------------\n\nTITLE: Hint Block in Markdown\nDESCRIPTION: A Markdown hint block indicating that the cluster visualizer feature is exclusive to Docker Swarm environments.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/swarm/cluster-visualizer.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% hint style=\"info\" %}\nThis feature is only available to Docker Swarm environments.\n{% endhint %}\n```\n\n----------------------------------------\n\nTITLE: Removing Portainer Agent Container on Podman\nDESCRIPTION: Command to remove the stopped Portainer Agent container on Podman.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/podman.md#2025-04-13_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npodman rm portainer_agent\n```\n\n----------------------------------------\n\nTITLE: Sample Docker Service List Output\nDESCRIPTION: This snippet shows an example output of the 'docker service ls' command, displaying Portainer services and their current versions.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/swarm.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nID             NAME                    MODE         REPLICAS   IMAGE                          PORTS\ntb9gtxc647fw   portainer-agent_agent   global       3/3        portainer/agent:2.26.0\nm3a3mtuy55ed   portainer_portainer     replicated   1/1        portainer/portainer-ee:2.26.0  *:8000->8000/tcp, *:9000->9000/tcp\n```\n\n----------------------------------------\n\nTITLE: Deploying Portainer with Custom SSL Certificates\nDESCRIPTION: Command to run Portainer Business Edition with custom SSL certificate and key files\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/docker.md#2025-04-13_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d -p 8000:8000 -p 9443:9443 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ee:lts --sslcert /path/to/cert/portainer.crt --sslkey /path/to/cert/portainer.key\n```\n\n----------------------------------------\n\nTITLE: Deploying Updated Portainer Community Edition on Podman\nDESCRIPTION: Command to deploy the updated Portainer Community Edition container on Podman with necessary port mappings and volume mounts.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/podman.md#2025-04-13_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npodman run -d -p 8000:8000 -p 9443:9443 --name=portainer --restart=always --privileged -v /run/podman/podman.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:lts\n```\n\n----------------------------------------\n\nTITLE: Unauthorized Error Response\nDESCRIPTION: Example JSON response when accessing an endpoint without proper authorization.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/access.md#2025-04-13_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"details\": \"Unauthorized\",\n    \"message\": \"Access denied\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Volume for Portainer Data Storage\nDESCRIPTION: This command creates a Docker volume named 'portainer_data' to store Portainer's database.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/wsl.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker volume create portainer_data\n```\n\n----------------------------------------\n\nTITLE: Markdown Content Reference Links\nDESCRIPTION: GitBook-style content reference links for navigation between documentation pages using markdown syntax.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/kubernetes/cluster/README.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% content-ref url=\"details.md\" %}\n[details.md](details.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"node.md\" %}\n[node.md](node.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"setup.md\" %}\n[setup.md](setup.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"security.md\" %}\n[security.md](security.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"registries.md\" %}\n[registries.md](registries.md)\n{% endcontent-ref %}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Portainer Business Version Compatibility\nDESCRIPTION: A markdown table displaying Portainer Business versions with their release dates, supported Docker and Kubernetes versions, and compatible hardware architectures. The table covers releases from 2.0.0 to 2.16.0.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/requirements-and-prerequisites.md#2025-04-13_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| [Business 2.16.0](../release-notes.md#release-2.16.0) | October 31, 2022   | 20.10.9 20.10.13 20.10.17 | 1.21.7 1.22 1.23         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.15.1](../release-notes.md#release-2.15.1) | September 16, 2022 | 20.10.9 20.10.12 20.10.13 | 1.21.7 1.22 1.23         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.15.0](../release-notes.md#release-2.15.0) | September 6, 2022  | 20.10.9 20.10.12 20.10.13 | 1.21.7 1.22 1.23         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.14.2](../release-notes.md#release-2.14.2) | July 26, 2022      | 20.10.9 20.10.12 20.10.13 | 1.21.7 1.22 1.23         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.14.1](../release-notes.md#release-2.14.1) | July 12, 2022      | 20.10.9 20.10.12 20.10.13 | 1.21.7 1.22 1.23         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.14.0](../release-notes.md#release-2.14.0) | June 28, 2022      | 20.10.9 20.10.12 20.10.13 | 1.21.7 1.22 1.23         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.13.1](../release-notes.md#release-2.13.1) | May 12, 2022       | 20.10.9 20.10.12 20.10.13 | 1.21.7 1.22 1.23         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.13.0](../release-notes.md#release-2.13.0) | May 9, 2022        | 20.10.9 20.10.12 20.10.13 | 1.21.7 1.22 1.23         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.12.2](../release-notes.md#release-2.12.2) | April 4, 2022      | 20.10.7 20.10.11 20.10.12 | 1.21.7 1.22 1.23         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.12.1](../release-notes.md#release-2.12.1) | March 9, 2022      | 20.10.7 20.10.11 20.10.12 | 1.21.7 1.22 1.23         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.12.0](../release-notes.md#release-2.12.0) | March 8, 2022      | 20.10.7 20.10.11 20.10.12 | 1.21.7 1.22 1.23         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.10.0](../release-notes.md#release-2.10.0) | November 15, 2021  | 20.10.6 20.10.7 20.10.8   | 1.19.11 1.20.7 1.21 1.22 | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.7.0](../release-notes.md#release-2.7.0)   | July 29, 2021      | 20.10.6 20.10.7           | 1.19 1.20.2 1.21         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.4.0](../release-notes.md#release-2.4.0)   | May 4, 2021        | 20.10.5                   | 1.19 1.20.2 1.21         | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.0.1](../release-notes.md#release-2.0.1)   | February 22, 2021  | 19.03.13                  | 1.17.3 1.18.6 1.19.3     | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n| [Business 2.0.0](../release-notes.md#release-2.0.0)   | December 3, 2020   | 19.03.13                  | 1.17.3 1.18.6 1.19.3     | N/A            | [ARM64](https://portal.portainer.io/knowledge/which-arm-architectures-does-portainer-support), x86\\_64 |\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Volume for Portainer Data Storage\nDESCRIPTION: PowerShell command to create a Docker volume named 'portainer_data' which will be used by Portainer Server to persistently store its database across container restarts.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/docker/wcs.md#2025-04-13_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\ndocker volume create portainer_data\n```\n\n----------------------------------------\n\nTITLE: Pulling Latest Portainer Community Edition Image\nDESCRIPTION: Command to pull the latest Community Edition LTS image from Docker Hub\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/docker.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull portainer/portainer-ce:lts\n```\n\n----------------------------------------\n\nTITLE: Traefik Certificate Resolver Path\nDESCRIPTION: Configuration for specifying the SSL certificate storage location in Traefik\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- --certificatesresolvers.leresolver.acme.storage=./acme.json\n```\n\n----------------------------------------\n\nTITLE: Response for Remote Environment Addition in Portainer API\nDESCRIPTION: Example JSON response after successfully adding a remote TCP environment. Contains the environment details including its ID and the TCP URL configured.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/api.md#2025-04-13_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"AuthorizedTeams\": [], \n    \"AuthorizedUsers\": [], \n    \"Extensions\": [], \n    \"GroupId\": 1, \n    \"Id\": 1, \n    \"Type\": 1,\n    \"Name\": \"test-remote\", \n    \"PublicURL\": \"\", \n    \"TLSConfig\": {\n        \"TLS\": false, \n        \"TLSSkipVerify\": false\n    }, \n    \"Type\": 1, \n    \"URL\": \"tcp://10.0.7.10:2375\"\n}\n```\n\n----------------------------------------\n\nTITLE: Response for TLS-Secured Environment Addition in Portainer API\nDESCRIPTION: Example JSON response after successfully adding a TLS-secured remote environment. Shows the environment details including TLS configuration and certificate paths.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/api.md#2025-04-13_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"AuthorizedTeams\": [], \n    \"AuthorizedUsers\": [], \n    \"Extensions\": [], \n    \"GroupId\": 1, \n    \"Id\": 1, \n    \"Type\": 1,\n    \"Name\": \"test-remote-tls\", \n    \"PublicURL\": \"\", \n    \"TLSConfig\": {\n        \"TLS\": true, \n        \"TLSCACert\": \"/data/tls/1/ca.pem\", \n        \"TLSCert\": \"/data/tls/1/cert.pem\", \n        \"TLSKey\": \"/data/tls/1/key.pem\", \n        \"TLSSkipVerify\": false\n    }, \n    \"Type\": 1, \n    \"URL\": \"tcp://10.0.7.10:2376\"\n}\n```\n\n----------------------------------------\n\nTITLE: Pulling Latest Portainer Agent Image on Podman\nDESCRIPTION: Command to pull the latest Portainer Agent image from the Docker registry using Podman.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/podman.md#2025-04-13_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\npodman pull portainer/agent:lts\n```\n\n----------------------------------------\n\nTITLE: Docker Process Status Output\nDESCRIPTION: Example output of the docker ps command showing the running Portainer containers after successful installation.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/swarm/linux.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nroot@manager01:~# docker ps\nCONTAINER ID   IMAGE                           COMMAND                  CREATED              STATUS              PORTS                NAMES\n59ee466f6b15   portainer/agent:lts             \"./agent\"                About a minute ago   Up About a minute                        portainer_agent.xbb8k6r7j1tk9gozjku7e43wr.5sa6b3e8cl6hyu0snlt387sgv\n2db7dd4bfba0   portainer/portainer-ee:lts      \"/portainer -H tcp:/…\"   About a minute ago   Up About a minute   8000/tcp, 9443/tcp   portainer_portainer.1.gpuvu3pqmt1m19zxfo44v7izx\n```\n\n----------------------------------------\n\nTITLE: Scaling Up Portainer Service After Password Reset\nDESCRIPTION: This command scales the Portainer service back to one instance after the password has been reset in a Docker Swarm environment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker service scale portainer_portainer=1\n```\n\n----------------------------------------\n\nTITLE: Example Output of Successful Password Reset\nDESCRIPTION: This shows the expected console output when the password reset helper successfully updates the admin user's password. It provides the new password to use for login.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n2020/06/04 00:13:58 Password successfully updated for user: admin\n2020/06/04 00:13:58 Use the following password to login: &_4#\\3^5V8vLTd)E\"NWiJBs26G*9HPl1\n```\n\n----------------------------------------\n\nTITLE: Example Output of Creating New Admin User\nDESCRIPTION: This shows the console output when the password reset helper cannot find an existing admin user and creates a new one. This might happen if the database is corrupted or the user was deleted.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reset-admin.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n2022/08/10 07:36:33 [WARN] Unable to retrieve user with ID 1, will try to create, err: object not found inside the database\n2022/08/10 07:36:33 Admin user admin-u0512b3f0v4dqk7o successfully created\n2022/08/10 07:36:33 Use the following password to login: Sr#]YL_6D0k8Pd{pA9^|}F32j5J4I=av\n```\n\n----------------------------------------\n\nTITLE: Listing Docker Services in Swarm\nDESCRIPTION: This command lists all services running in the Docker Swarm cluster, allowing users to identify the Portainer services for updating.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/upgrade/swarm.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker service ls\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Server via NodePort in Bash\nDESCRIPTION: Commands to access Portainer Server using NodePort method. Users should replace 'localhost' with the appropriate IP address or FQDN if needed, and adjust the port if changed during setup.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/kubernetes/baremetal.md#2025-04-13_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:30779/ or http://localhost:30777/\n```\n\n----------------------------------------\n\nTITLE: Moving and Renaming Downloaded MicroK8s Files\nDESCRIPTION: Moves the downloaded MicroK8s and Core20 files to the correct directory and renames them to the expected filenames for Portainer.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kube-create/microk8s/offline.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmv microk8s_*.snap $HOME/microk8s/microk8s.snap\nmv microk8s_*.assert $HOME/microk8s/microk8s.assert\nmv core20_*.snap $HOME/microk8s/core20.snap\nmv core20_*.assert $HOME/microk8s/core20.assert\n```\n\n----------------------------------------\n\nTITLE: Container Creation Response Format\nDESCRIPTION: Sample response from the container creation API call showing the container ID and any warnings. This ID is needed for subsequent operations on the container.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/examples.md#2025-04-13_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Id\": \"5fc2a93d7a3d426a1c3937436697fc5e5343cc375226f6110283200bede3b107\",\n    \"Warnings\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Deployment Command\nDESCRIPTION: Command to deploy the Portainer stack using Docker Compose\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Downloading MicroK8s and Core20 Snap Packages\nDESCRIPTION: Downloads the MicroK8s and Core20 snap packages for offline installation. This example uses version 1.27 of MicroK8s.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/environments/add/kube-create/microk8s/offline.md#2025-04-13_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsnap download microk8s --channel 1.27\nsnap download core20\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Web Interface\nDESCRIPTION: This URL is used to access the Portainer web interface after installation. It uses HTTPS and the default port 9443. The 'localhost' should be replaced with the appropriate IP address or FQDN if needed.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/swarm/wsl.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Creating Docker volume for Portainer data persistence\nDESCRIPTION: Command to create a Docker volume named portainer_data for storing Portainer's persistent data.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker volume create portainer_data\n```\n\n----------------------------------------\n\nTITLE: Downloading Portainer Windows Stack Configuration\nDESCRIPTION: Command to download the Portainer Windows stack YML configuration file.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/swarm/wcs.md#2025-04-13_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\ncurl https://downloads.portainer.io/ee-lts/portainer_windows_stack.yml -o portainer-windows-stack.yml\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Web Interface\nDESCRIPTION: URL to access the Portainer web interface after installation. By default, Portainer uses HTTPS on port 9443.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install/server/swarm/wsl.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:9443\n```\n\n----------------------------------------\n\nTITLE: Unauthorized API Request Example\nDESCRIPTION: Example of making an HTTP GET request to a restricted endpoint and the resulting error response.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/api/access.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhttp GET https://portainer:9443/api/settings X-API-Key:your_api_key_here\n```\n\n----------------------------------------\n\nTITLE: Portainer Edge Host Configuration\nDESCRIPTION: Traefik label for configuring the Portainer Edge host URL\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- \"traefik.http.routers.edge.rule=Host(`edge.yourdomain.com`)\"\n```\n\n----------------------------------------\n\nTITLE: Let's Encrypt Email Configuration\nDESCRIPTION: Configuration line for specifying the Let's Encrypt registration email\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/traefik.md#2025-04-13_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- --certificatesresolvers.leresolver.acme.email=your-email\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Structure for Swarm Environment\nDESCRIPTION: Markdown structure defining the documentation layout for Swarm environment management, including navigation links to detailed sections for environment details, cluster visualization, setup, and registries.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/user/docker/swarm/README.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Swarm\n\n{% hint style=\"info\" %}\nThe **Swarm** menu is only available to Docker Swarm environments.\n{% endhint %}\n\nThis section provides an overview of your Swarm environment. You can view information about environments and nodes, view cluster information, and configure environment-specific settings.\n\n{% content-ref url=\"details.md\" %}\n[details.md](details.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"cluster-visualizer.md\" %}\n[cluster-visualizer.md](cluster-visualizer.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"setup.md\" %}\n[setup.md](setup.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"registries.md\" %}\n[registries.md](registries.md)\n{% endcontent-ref %}\n```\n\n----------------------------------------\n\nTITLE: Content References in Markdown\nDESCRIPTION: Markdown content references using Jekyll-style linking syntax to connect related documentation pages for team management.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/admin/user/teams/README.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% content-ref url=\"add.md\" %}\n[add.md](add.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"add-user.md\" %}\n[add-user.md](add-user.md)\n{% endcontent-ref %}\n```\n\n----------------------------------------\n\nTITLE: Content Reference Links in Markdown\nDESCRIPTION: Markdown syntax for linking to Traefik and nginx configuration guides using custom content reference tags.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/advanced/reverse-proxy/README.md#2025-04-13_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% content-ref url=\"traefik.md\" %}\n[traefik.md](traefik.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"nginx.md\" %}\n[nginx.md](nginx.md)\n{% endcontent-ref %}\n```\n\n----------------------------------------\n\nTITLE: Accessing Portainer Server via Load Balancer in Bash\nDESCRIPTION: Commands to access Portainer Server using a Load Balancer. The user needs to replace '<loadbalancer IP>' with the IP address or FQDN of the load balancer, and adjust the port if it was changed during setup.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/baremetal.md#2025-04-13_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nhttps://<loadbalancer IP>:9443/ or http://<loadbalancer IP>:9000/\n```\n\n----------------------------------------\n\nTITLE: Installing Portainer via Helm with Load Balancer\nDESCRIPTION: Helm command to install Portainer CE exposed via Load Balancer on ports 9000 (HTTP) and 9443 (HTTPS)\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/start/install-ce/server/kubernetes/wsl.md#2025-04-13_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install --create-namespace -n portainer portainer portainer/portainer \\\n    --set service.type=LoadBalancer \\\n    --set image.tag=lts\n```\n\n----------------------------------------\n\nTITLE: Installing Wget on Ubuntu\nDESCRIPTION: Installs the Wget utility, which is used for retrieving files using common internet protocols and is required for the Portainer development environment.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/linux.md#2025-04-13_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\napt-get install wget\n```\n\n----------------------------------------\n\nTITLE: Checking Node.js Version on macOS\nDESCRIPTION: Command to verify the installed version of Node.js.\nSOURCE: https://github.com/portainer/portainer-docs/blob/2.27/contribute/build/mac.md#2025-04-13_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode --version\n```"
  }
]
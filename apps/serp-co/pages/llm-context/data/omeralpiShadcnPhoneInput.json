[
  {
    "owner": "omeralpi",
    "repo": "shadcn-phone-input",
    "content": "TITLE: Integrating Shadcn PhoneInput with React Hook Form in TSX\nDESCRIPTION: Demonstrates how to use the `PhoneInput` component within a React form managed by `react-hook-form`. It utilizes Zod for schema definition and validation, leveraging `isValidPhoneNumber` from `react-phone-number-input` to ensure a valid phone number format. On submission, the form data is displayed using a Shadcn UI toast component.\nSOURCE: https://github.com/omeralpi/shadcn-phone-input/blob/main/README.md#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { isValidPhoneNumber } from \"react-phone-number-input\";\nimport { z } from \"zod\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { PhoneInput } from \"@/components/ui/phone-input\";\nimport { toast } from \"@/components/ui/use-toast\";\n\nconst FormSchema = z.object({\n  phone: z\n    .string()\n    .refine(isValidPhoneNumber, { message: \"Invalid phone number\" }),\n});\n\nexport default function Hero() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      phone: \"\",\n    },\n  });\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    });\n  }\n\n  return (\n    <Form {...form}>\n      <form\n        onSubmit={form.handleSubmit(onSubmit)}\n        className=\"flex flex-col items-start space-y-8\"\n      >\n        <FormField\n          control={form.control}\n          name=\"phone\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col items-start\">\n              <FormLabel className=\"text-left\">Phone Number</FormLabel>\n              <FormControl className=\"w-full\">\n                <PhoneInput placeholder=\"Enter a phone number\" {...field} />\n              </FormControl>\n              <FormDescription className=\"text-left\">\n                Enter a phone number\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Custom PhoneInput Component with react-phone-number-input in TypeScript\nDESCRIPTION: Defines the PhoneInput React component using forwardRef for enhanced ref management. It wraps react-phone-number-input's main default export, customizing behavior with props such as className, country flag, country selection UI, input styling, and smartCaret feature disabled. It also handles onChange events with a safeguard to convert undefined values into an empty string to prevent invalid states. The component accepts extended props and maintains type safety with TypeScript for props and references.\nSOURCE: https://github.com/omeralpi/shadcn-phone-input/blob/main/content/snippets/phone-input.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst PhoneInput: React.ForwardRefExoticComponent<PhoneInputProps> =\n  React.forwardRef<React.ElementRef<typeof RPNInput.default>, PhoneInputProps>(\n    ({ className, onChange, ...props }, ref) => {\n      return (\n        <RPNInput.default\n          ref={ref}\n          className={cn(\"flex\", className)}\n          flagComponent={FlagComponent}\n          countrySelectComponent={CountrySelect}\n          inputComponent={InputComponent}\n          smartCaret={false}\n          /**\n           * Handles the onChange event.\n           *\n           * react-phone-number-input might trigger the onChange event as undefined\n           * when a valid phone number is not entered. To prevent this,\n           * the value is coerced to an empty string.\n           *\n           * @param {E164Number | undefined} value - The entered value\n           */\n          onChange={(value) => onChange?.(value || (\"\" as RPNInput.Value))}\n          {...props}\n        />\n      );\n    },\n  );\nPhoneInput.displayName = \"PhoneInput\";\n```\n\n----------------------------------------\n\nTITLE: Rendering Country Selector with Popover and Command Pattern in React TypeScript\nDESCRIPTION: CountrySelect is a React component presenting a searchable dropdown for selecting countries, leveraging Popover, Command, and ScrollArea UI components. It accepts disabled state, current value, a list of country options, and a callback for selection changes. Each country is rendered as a command item featuring a flag, country name, and calling code. The Popover provides interactive UI to trigger and display the country list, while CommandInput enables filtering by country name.\nSOURCE: https://github.com/omeralpi/shadcn-phone-input/blob/main/content/snippets/phone-input.mdx#_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nconst CountrySelect = ({\n  disabled,\n  value: selectedCountry,\n  options: countryList,\n  onChange,\n}: CountrySelectProps) => {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          className=\"flex gap-1 rounded-e-none rounded-s-lg border-r-0 px-3 focus:z-10\"\n          disabled={disabled}\n        >\n          <FlagComponent\n            country={selectedCountry}\n            countryName={selectedCountry}\n          />\n          <ChevronsUpDown\n            className={cn(\n              \"-mr-2 size-4 opacity-50\",\n              disabled ? \"hidden\" : \"opacity-100\",\n            )}\n          />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[300px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search country...\" />\n          <CommandList>\n            <ScrollArea className=\"h-72\">\n              <CommandEmpty>No country found.</CommandEmpty>\n              <CommandGroup>\n                {countryList.map(({ value, label }) =>\n                  value ? (\n                    <CountrySelectOption\n                      key={value}\n                      country={value}\n                      countryName={label}\n                      selectedCountry={selectedCountry}\n                      onChange={onChange}\n                    />\n                  ) : null,\n                )}\n              </CommandGroup>\n            </ScrollArea>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Defining an Optional Phone Number Field with Zod in TSX\nDESCRIPTION: Shows how to modify a Zod schema to make the phone number field optional. It uses the `.or(z.literal(\"\"))` method chained after the `refine` validation, allowing the field to accept either a valid phone number according to `isValidPhoneNumber` or an empty string.\nSOURCE: https://github.com/omeralpi/shadcn-phone-input/blob/main/README.md#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst FormSchema = z.object({\n  phone: z\n    .string()\n    .refine(isValidPhoneNumber, { message: \"Invalid phone number\" })\n    .or(z.literal(\"\")),\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Input Field Component for Phone Number UI in TypeScript\nDESCRIPTION: The InputComponent is a styled wrapper around a basic HTML input element using the Input UI primitive. It modifies specific border radii via classNames for seamless integration within the composite phone input UI. This component accepts all default input props and forwards refs appropriately to maintain compatibility and integration within the PhoneInput component.\nSOURCE: https://github.com/omeralpi/shadcn-phone-input/blob/main/content/snippets/phone-input.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst InputComponent = React.forwardRef<\n  HTMLInputElement,\n  React.ComponentProps<\"input\">\n>(({ className, ...props }, ref) => (\n  <Input\n    className={cn(\"rounded-e-lg rounded-s-none\", className)}\n    {...props}\n    ref={ref}\n  />\n));\nInputComponent.displayName = \"InputComponent\";\n```\n\n----------------------------------------\n\nTITLE: Implementing CountrySelectOption Component with Flag, Name, and Calling Code in React TypeScript\nDESCRIPTION: CountrySelectOption renders an individual selectable option inside the CountrySelect dropdown. It displays the country flag, the country name as text, and the phone calling code fetched from react-phone-number-input utility functions. The selected option is visually indicated with an icon. It triggers an onChange callback when selected, enabling dynamic country updates in the parent component.\nSOURCE: https://github.com/omeralpi/shadcn-phone-input/blob/main/content/snippets/phone-input.mdx#_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nconst CountrySelectOption = ({\n  country,\n  countryName,\n  selectedCountry,\n  onChange,\n}: CountrySelectOptionProps) => {\n  return (\n    <CommandItem className=\"gap-2\" onSelect={() => onChange(country)}>\n      <FlagComponent country={country} countryName={countryName} />\n      <span className=\"flex-1 text-sm\">{countryName}</span>\n      <span className=\"text-sm text-foreground/50\">{`+${RPNInput.getCountryCallingCode(country)}`}</span>\n      <CheckIcon\n        className={`ml-auto size-4 ${country === selectedCountry ? \"opacity-100\" : \"opacity-0\"}`}\n      />\n    </CommandItem>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Rendering Country Flag Component Using react-phone-number-input Flags in TypeScript\nDESCRIPTION: FlagComponent renders the flag icon SVG for a given country code using the flags mapping provided by react-phone-number-input. It applies styling to fit the flag into a fixed-size container with rounded edges and overflow hidden. If no flag is found for the country code, it renders nothing. The flag includes accessible title text for improved usability.\nSOURCE: https://github.com/omeralpi/shadcn-phone-input/blob/main/content/snippets/phone-input.mdx#_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nconst FlagComponent = ({ country, countryName }: RPNInput.FlagProps) => {\n  const Flag = flags[country];\n\n  return (\n    <span className=\"flex h-4 w-6 overflow-hidden rounded-sm bg-foreground/20 [&_svg]:size-full\">\n      {Flag && <Flag title={countryName} />}\n    </span>\n  );\n};\n```"
  }
]
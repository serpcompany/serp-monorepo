[
  {
    "owner": "keats",
    "repo": "tera",
    "content": "TITLE: Basic Tera Template Example in Jinja2 Syntax\nDESCRIPTION: A simple example demonstrating Tera's template syntax including block definition, iteration with for loops, and variable interpolation. Shows common templating features like blocks, loops, and variable rendering.\nSOURCE: https://github.com/keats/tera/blob/master/README.md#2025-04-20_snippet_0\n\nLANGUAGE: jinja2\nCODE:\n```\n<title>{% block title %}{% endblock title %}</title>\n<ul>\n{% for user in users %}\n  <li><a href=\"{{ user.url }}\">{{ user.username }}</a></li>\n{% endfor %}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Base Template Structure in Tera\nDESCRIPTION: Example of a base template with multiple blocks for inheritance\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_35\n\nLANGUAGE: jinja2\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    {% block head %}\n    <link rel=\"stylesheet\" href=\"style.css\" />\n    <title>{% block title %}{% endblock title %} - My Webpage</title>\n    {% endblock head %}\n</head>\n<body>\n    <div id=\"content\">{% block content %}{% endblock content %}</div>\n    <div id=\"footer\">\n        {% block footer %}\n        &copy; Copyright 2008 by <a href=\"http://domain.invalid/\">you</a>.\n        {% endblock footer %}\n    </div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Using For Loops in Tera Templates\nDESCRIPTION: Demonstrates various ways to use 'for' loops in Tera templates, including looping over arrays, strings, maps, and structs. Shows special loop variables and filtering.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_28\n\nLANGUAGE: jinja2\nCODE:\n```\n{% for product in products %}\n  {{loop.index}}. {{product.name}}\n{% endfor %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% for letter in name %}\n  {% if loop.index % 2 == 0%}\n    <span style=\"color:red\">{{ letter }}</span>\n  {% else %}\n    <span style=\"color:blue\">{{ letter }}</span>\n  {% endif %}\n{% endfor %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% for key, value in products %}\n  {{key}}. {{value.name}}\n{% endfor %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% for product in products | reverse %}\n  {{loop.index}}. {{product.name}}\n{% endfor %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% for a in [1,2,3,] %}\n  {{a}}\n{% endfor %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% for product in products %}\n  {{loop.index}}. {{product.name}}\n{% else %}\n  No products.  \n{% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML with Tera Template Syntax\nDESCRIPTION: This code demonstrates core Tera templating features including template inheritance with block definitions, iteration over a collection, and variable interpolation. The template creates an HTML page with a customizable title and generates an unordered list of user links based on a 'users' collection.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/_index.md#2025-04-20_snippet_0\n\nLANGUAGE: jinja2\nCODE:\n```\n<title>{% block title %}{% endblock title %}</title>\n<ul>\n{% for user in users -%}\n  <li><a href=\"{{ user.url }}\">{{ user.username }}</a></li>\n{%- endfor %}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Using Conditional Statements in Tera Templates\nDESCRIPTION: Shows how to use 'if', 'elif', and 'else' statements in Tera templates. Demonstrates checking for undefined variables and complex conditions.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_27\n\nLANGUAGE: jinja2\nCODE:\n```\n{% if price < 10 or always_show %}\n   Price is {{ price }}.\n{% elif price > 1000 and not rich %}\n   That's expensive!\n{% else %}\n    N/A\n{% endif %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% if my_var %}\n    {{ my_var }}\n{% else %}\n    Sorry, my_var isn't defined.\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Child Template Example in Tera\nDESCRIPTION: Shows how to extend a base template and override blocks\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_36\n\nLANGUAGE: jinja2\nCODE:\n```\n{% extends \"base.html\" %}\n{% block title %}Index{% endblock title %}\n{% block head %}\n    {{/* super() */}}\n    <style type=\"text/css\">\n        .important { color: #336699; }\n    </style>\n{% endblock head %}\n{% block content %}\n    <h1>Index</h1>\n    <p class=\"important\">\n      Welcome to my awesome homepage.\n    </p>\n{% endblock content %}\n```\n\n----------------------------------------\n\nTITLE: Using Include Statements in Tera Templates\nDESCRIPTION: Demonstrates how to use the 'include' tag to render other templates within the current context. Shows options for handling missing templates and providing multiple template options.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_30\n\nLANGUAGE: jinja2\nCODE:\n```\n{% include \"included.html\" %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% include \"header.html\" ignore missing %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% include [\"custom/header.html\", \"header.html\"] %}\n{% include [\"special_sidebar.html\", \"sidebar.html\"] ignore missing %}\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Filters in Tera\nDESCRIPTION: Demonstrates how to register a custom filter in Tera using Rust. Filters are functions that modify variables and can be chained.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_20\n\nLANGUAGE: rust\nCODE:\n```\ntera.register_filter(\"upper\", string::upper);\n```\n\n----------------------------------------\n\nTITLE: Nested Template Inheritance in Tera\nDESCRIPTION: Demonstrates multi-level template inheritance with nested blocks\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_37\n\nLANGUAGE: jinja2\nCODE:\n```\n// grandparent\n{% block hey %}hello{% endblock hey %}\n\n// parent\n{% extends \"grandparent\" %}\n{% block hey %}hi and grandma says {{/* super() */}} {% block ending %}sincerely{% endblock ending %}{% endblock hey %}\n\n// child\n{% extends \"parent\" %}\n{% block hey %}dad says {{/* super() */}}{% endblock hey %}\n{% block ending %}{{/* super() */}} with love{% endblock ending %}\n```\n\n----------------------------------------\n\nTITLE: Using Tests in Tera Templates\nDESCRIPTION: Shows how to use tests in 'if' blocks to check conditions on expressions. Tests can be negated and custom tests can be registered.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_23\n\nLANGUAGE: jinja2\nCODE:\n```\n{% if my_number is odd %}\n Odd\n{% endif %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% if my_number is not odd %}\n Even\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Conditional Template Logic in Tera\nDESCRIPTION: Example of conditional if-else template logic using default values in Tera templates\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_51\n\nLANGUAGE: jinja2\nCODE:\n```\n{% if value %}{{ value }}{% else %}1{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Using Custom Functions in Tera Templates\nDESCRIPTION: Demonstrates how to call custom functions in Tera templates. Functions can be used in variable blocks and for loop containers.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_26\n\nLANGUAGE: jinja2\nCODE:\n```\n{{/* url_for(name=\"home\") */}}\n```\n\n----------------------------------------\n\nTITLE: String Manipulation in Tera Templates\nDESCRIPTION: Examples of using escape, escape_xml, safe, get, split, int, and float filters for string and value manipulation.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_50\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ content | replace(from=\"Robert\", to=\"Bob\") | safe }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ content | safe | replace(from=\"Robert\", to=\"Bob\") }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ sections | get(key=\"posts/content\") }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ sections | get(key=\"posts/content\", default=\"default\") }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ path | split(pat=\"/\") }}\n```\n\n----------------------------------------\n\nTITLE: Loading Templates with Globbing\nDESCRIPTION: How to initialize Tera and load templates using a glob pattern to match multiple files.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_4\n\nLANGUAGE: rs\nCODE:\n```\nuse tera::Tera;\n\n// Use globbing\nlet tera = match Tera::new(\"templates/**/*.html\") {\n    Ok(t) => t,\n    Err(e) => {\n        println!(\"Parsing error(s): {}\", e);\n        ::std::process::exit(1);\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Sorting by Attribute in Tera Templates\nDESCRIPTION: Examples of using the sort filter with the attribute parameter to sort an array of Person objects by last name or age.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_39\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ people | sort(attribute=\"name.1\") }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ people | sort(attribute=\"age\") }}\n```\n\n----------------------------------------\n\nTITLE: Grouping Objects by Attribute in Tera Templates\nDESCRIPTION: Examples of using the group_by filter to organize posts by year or author name, and manipulating the resulting hashmap.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_43\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ posts | group_by(attribute=\"year\") }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% for name, author_posts in posts | group_by(attribute=\"author.name\") %}\n    {{ name }}\n    {% for post in author_posts %}\n        {{ post.year }}: {{ post.content }}\n    {% endfor %}\n{% endfor %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% set map = section.pages | group_by(attribute=\"year\") %}\n{% set_global years = [] %}\n{% for year, ignored in map %}\n    {% set_global years = years | concat(with=year) %}\n{% endfor %}\n{% for year in years | reverse %}\n    {% set posts = map[year] %}\n{% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Numeric Operations in Tera Templates\nDESCRIPTION: Examples of using the abs, pluralize, and round filters for number formatting and text pluralization.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_48\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ negative_number | abs }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\nYou have {{ num_messages }} message{{ num_messages | pluralize }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ num_categories }} categor{{ num_categories | pluralize(singular=\"y\", plural=\"ies\") }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ num | round }} {{ num | round(method=\"ceil\", precision=2) }}\n```\n\n----------------------------------------\n\nTITLE: Date Formatting in Tera Templates\nDESCRIPTION: Examples of using the date filter to format timestamps with options for timezone and locale.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_49\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ ts | date }} {{ ts | date(format=\"%Y-%m-%d %H:%M\") }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ \"2019-09-19T13:18:48.731Z\" | date(timezone=\"America/New_York\") }}\n\n{{ \"2019-09-19T13:18:48.731Z\" | date(format=\"%Y-%m-%d %H:%M\", timezone=\"Asia/Shanghai\") }}\n\n{{ 1648252203 | date(timezone=\"Europe/Berlin\") }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ 1648252203 | date(format=\"%A %-d %B\", timezone=\"Europe/Paris\", locale=\"fr_FR\") }}\n```\n\n----------------------------------------\n\nTITLE: URL Encoding in Tera Templates\nDESCRIPTION: Examples of using the urlencode and urlencode_strict filters to encode URL components with different handling of forward slashes.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_47\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ value | urlencode }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ value | urlencode_strict }}\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Macro in Tera\nDESCRIPTION: Shows how to define a reusable input macro with parameters and default values\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_31\n\nLANGUAGE: jinja2\nCODE:\n```\n{% macro input(label, type=\"text\") %}\n    <label>\n        {{ label }}\n        <input type=\"{{type}}\" />\n    </label>\n{% endmacro input %}\n```\n\n----------------------------------------\n\nTITLE: Regex Pattern Matching in Templates\nDESCRIPTION: Shows how to use regex pattern matching with the matching test for conditional formatting\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_56\n\nLANGUAGE: jinja2\nCODE:\n```\n{% if name is matching(\"^[Qq]ueen\") %}\n    Her Royal Highness, {{ name }}\n{% elif name is matching(\"^[Kk]ing\") %}\n    His Royal Highness, {{ name }}\n{% else %}\n    {{ name }}\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Slicing Arrays in Tera Templates\nDESCRIPTION: Examples of using the slice filter to extract portions of an array with start and end parameters, including examples with negative indices.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_41\n\nLANGUAGE: jinja2\nCODE:\n```\n{% for i in my_arr | slice(end=5) %}\n{% for i in my_arr | slice(start=1) %}\n{% for i in my_arr | slice(start=1, end=5) %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% for i in my_arr | slice(end=-2) %}\n```\n\n----------------------------------------\n\nTITLE: Using Unique Filter in Tera Templates\nDESCRIPTION: Examples of using the unique filter with attribute parameter to remove duplicates from an array of Person objects based on age or last name.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_40\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ people | unique(attribute=\"age\") }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ people | unique(attribute=\"name.1\", case_sensitive=\"true\") }}\n```\n\n----------------------------------------\n\nTITLE: Using Loop Controls in Tera Templates\nDESCRIPTION: Shows how to use 'break' and 'continue' statements within loops to control iteration in Tera templates.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_29\n\nLANGUAGE: jinja2\nCODE:\n```\n{% for product in products %}\n  {% if product.id == target_id %}{% break %}{% endif %}\n  {{loop.index}}. {{product.name}}\n{% endfor %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% for product in products %}\n  {% if loop.index is even %}{% continue %}{% endif %}\n  {{loop.index}}. {{product.name}}\n{% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Recursive Macro Example in Tera\nDESCRIPTION: Demonstrates a recursive macro implementation for calculating factorial\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_34\n\nLANGUAGE: jinja2\nCODE:\n```\n{% macro factorial(n) %}\n  {% if n > 1 %}{{ n }} - {{ self::factorial(n=n-1) }}{% else %}1{% endif %}\n{% endmacro factorial %}\n```\n\n----------------------------------------\n\nTITLE: Assigning Values to Variables in Tera Templates\nDESCRIPTION: Demonstrates how to assign values to variables using the 'set' keyword. Assignments can include literals, variables, macro calls, function calls, and arrays with mixed types.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_18\n\nLANGUAGE: jinja2\nCODE:\n```\n{% set my_var = \"hello\" %}\n{% set my_var = 1 + 4 %}\n{% set my_var = some_var %}\n{% set my_var = macros::some_macro() %}\n{% set my_var = global_fn() %}\n{% set my_var = [1, true, some_var | round] %}\n```\n\n----------------------------------------\n\nTITLE: String Content Testing\nDESCRIPTION: Demonstrates using the containing test to check for substrings\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_55\n\nLANGUAGE: jinja2\nCODE:\n```\n{% if username is containing(\"xXx\") %}\n    Bad\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: String Path Prefix Testing\nDESCRIPTION: Example of using starting_with test to check string prefix in paths\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_54\n\nLANGUAGE: jinja2\nCODE:\n```\n{% if path is starting_with(\"x/\") %}\n    In section x\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Default Value with Empty String Example\nDESCRIPTION: Demonstrates how empty string behaves with default filter in Tera templates\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_52\n\nLANGUAGE: jinja2\nCODE:\n```\nI would like to read more {{ \"\" | default (value=\"Louise Michel\") }}!\n```\n\n----------------------------------------\n\nTITLE: Filtering Objects by Attribute in Tera Templates\nDESCRIPTION: Examples of using the filter filter to select posts based on draft status or author name.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_44\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ posts | filter(attribute=\"draft\", value=true) }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ posts | filter(attribute=\"author.name\", value=\"Vincent\") }}\n```\n\n----------------------------------------\n\nTITLE: Mapping Attributes from Objects in Tera Templates\nDESCRIPTION: Example of using the map filter to extract a specific attribute from each object in an array.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_45\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ people | map(attribute=\"age\") }}\n```\n\n----------------------------------------\n\nTITLE: Loading Templates from Strings\nDESCRIPTION: How to load templates from strings instead of files, with examples for single and multiple templates.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_10\n\nLANGUAGE: rs\nCODE:\n```\n// one template only\nlet mut tera = Tera::default();\ntera.add_raw_template(\"hello.html\", \"the body\")?;\n\n// many templates\nlet mut tera = Tera::default();\ntera.add_raw_templates(vec![\n    (\"grandparent\", \"{% block hey %}hello{% endblock hey %}\"),\n    (\"parent\", \"{% extends \\\"grandparent\\\" %}{% block hey %}Parent{% endblock hey %}\"),\n])?;\n```\n\n----------------------------------------\n\nTITLE: Using Filter Sections in Tera Templates\nDESCRIPTION: Demonstrates how to apply filters to entire sections of a template using the 'filter' and 'endfilter' tags. Also shows how to use filter sections with block inheritance.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_22\n\nLANGUAGE: jinja2\nCODE:\n```\n{% filter upper %}\n    Hello\n{% endfilter %}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% filter upper %}\n  {% block content_to_be_upper_cased %}\n    This will be upper-cased\n  {% endblock content_to_be_upper_cased %} \n{% endfilter %}\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Functions in Tera\nDESCRIPTION: Shows how to implement and register a custom function in Tera using Rust. Functions can capture external variables and return Result<Value>.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_25\n\nLANGUAGE: rust\nCODE:\n```\nfn make_url_for(urls: BTreeMap<String, String>) -> impl Function {\n    Box::new(move |args| -> Result<Value> {\n        match args.get(\"name\") {\n            Some(val) => match from_value::<String>(val.clone()) {\n                Ok(v) =>  Ok(to_value(urls.get(&v).unwrap()).unwrap()),\n                Err(_) => Err(\"oops\".into()),\n            },\n            None => Err(\"oops\".into()),\n        }\n    })\n}\n```\n\nLANGUAGE: rust\nCODE:\n```\ntera.register_function(\"url_for\", make_url_for(urls));\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Tests in Tera\nDESCRIPTION: Demonstrates how to register a custom test in Tera using Rust. Tests are functions that return a boolean result.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_24\n\nLANGUAGE: rust\nCODE:\n```\ntera.register_tester(\"odd\", testers::odd);\n```\n\n----------------------------------------\n\nTITLE: Whitespace Control Example with Trimming\nDESCRIPTION: Example showing how to remove unwanted whitespace in template output by using trimming modifiers.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_14\n\nLANGUAGE: jinja2\nCODE:\n```\n{% set my_var = 2 -%}\n{{ my_var }}\n```\n\n----------------------------------------\n\nTITLE: Whitespace Control in Tera Templates\nDESCRIPTION: How to control whitespace rendering in Tera templates using special syntax modifiers.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_13\n\nLANGUAGE: jinja2\nCODE:\n```\n{% set my_var = 2 %}\n{{ my_var }}\n```\n\n----------------------------------------\n\nTITLE: Adding Tera Dependency to Cargo.toml\nDESCRIPTION: How to add Tera to your Rust project's dependencies in Cargo.toml.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ntera = \"1\"\n```\n\n----------------------------------------\n\nTITLE: Using set_global for Global Assignments in Tera Templates\nDESCRIPTION: Shows how to use 'set_global' to assign values in the global context, especially useful within for loops. Outside of loops, 'set_global' behaves the same as 'set'.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_19\n\nLANGUAGE: jinja2\nCODE:\n```\n{% set_global my_var = \"hello\" %}\n{% set_global my_var = 1 + 4 %}\n{% set_global my_var = some_var %}\n{% set_global my_var = macros::some_macro() %}\n{% set_global my_var = global_fn() %}\n{% set_global my_var = [1, true, some_var | round] %}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating 'in' Operator Usage in Tera Templates\nDESCRIPTION: Shows how to use the 'in' operator to check if a value is contained in an array, string, or object. Supports literals and variables on both sides of the operator.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_17\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ some_var in [1, 2, 3] }}\n\n{{ 'index' in page.path }}\n\n{{ an_ident not in  an_obj }}\n```\n\n----------------------------------------\n\nTITLE: String Concatenation in Tera Templates\nDESCRIPTION: How to concatenate strings, numbers, and identifiers in Tera templates using the tilde operator.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_16\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ \"hello \" ~ 'world' ~ `!` }}\n\n{{ an_ident ~ \" and a string\" ~ another_ident }}\n\n{{ an_ident ~ another_ident }}\n```\n\n----------------------------------------\n\nTITLE: Calling Macros in Tera\nDESCRIPTION: Shows how to call macros with keyword arguments\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_33\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ macros::input(label=\"Name\", type=\"text\") }}\n```\n\n----------------------------------------\n\nTITLE: Importing Macros in Tera\nDESCRIPTION: Demonstrates how to import macros from external files\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_32\n\nLANGUAGE: jinja2\nCODE:\n```\n{% import \"macros.html\" as macros %}\n```\n\n----------------------------------------\n\nTITLE: Global Context Template Example\nDESCRIPTION: Example showing the set_global tag usage for setting global context values.\nSOURCE: https://github.com/keats/tera/blob/master/CHANGELOG.md#2025-04-20_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nset_global\n```\n\n----------------------------------------\n\nTITLE: Raw Block in Tera Templates\nDESCRIPTION: How to use the raw block to prevent Tera from processing template syntax within the block.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_12\n\nLANGUAGE: jinja2\nCODE:\n```\n{% raw %}\n  Hello {{ name }}\n{% endraw %}\n```\n\n----------------------------------------\n\nTITLE: Comments in Tera Templates\nDESCRIPTION: How to add comments to Tera templates that won't be rendered in the output.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_15\n\nLANGUAGE: jinja2\nCODE:\n```\n{# A comment #}\n```\n\n----------------------------------------\n\nTITLE: Rendering a One-off Template\nDESCRIPTION: How to render a single template without adding it to a Tera instance, useful for user-provided templates.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_11\n\nLANGUAGE: rs\nCODE:\n```\n// The last parameter is whether we want to autoescape the template or not.\n// Should be true in 99% of the cases for HTML\nlet context = Context::new();\n// add stuff to context\nlet result = Tera::one_off(user_tpl, context, true);\n```\n\n----------------------------------------\n\nTITLE: Reloading Templates in Tera\nDESCRIPTION: How to reload templates when they change, useful for development environments with hot reloading.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_9\n\nLANGUAGE: rs\nCODE:\n```\ntera.full_reload()?;\n```\n\n----------------------------------------\n\nTITLE: Extending a Tera Instance\nDESCRIPTION: How to extend your Tera instance with templates, filters, functions, and testers from another Tera instance.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_8\n\nLANGUAGE: rs\nCODE:\n```\nlet mut tera = Tera::new(&tpl_glob).chain_err(|| \"Error parsing templates\")?;\n// ZOLA_TERA is an instance present in a library\ntera.extend(&ZOLA_TERA)?;\n```\n\n----------------------------------------\n\nTITLE: Concatenating Arrays in Tera Templates\nDESCRIPTION: Examples of using the concat filter to combine arrays or append values to an array.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_46\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ posts | concat(with=drafts) }}\n```\n\nLANGUAGE: jinja2\nCODE:\n```\n{% set pages_id = pages_id | concat(with=id) %}\n```\n\n----------------------------------------\n\nTITLE: Configuring Auto-escaping in Tera\nDESCRIPTION: How to customize Tera's auto-escaping behavior by specifying which file extensions should have content escaped.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_7\n\nLANGUAGE: rs\nCODE:\n```\n// escape only files ending with `.php.html`\ntera.autoescape_on(vec![\".php.html\"]);\n// disable autoescaping completely\ntera.autoescape_on(vec![]);\n```\n\n----------------------------------------\n\nTITLE: Creating a Static Tera Instance with lazy_static\nDESCRIPTION: How to create a static Tera instance using lazy_static, which is the recommended approach as templates should only be compiled once.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_5\n\nLANGUAGE: rs\nCODE:\n```\nlazy_static! {\n    pub static ref TEMPLATES: Tera = {\n        let mut tera = match Tera::new(\"examples/basic/templates/**/*\") {\n            Ok(t) => t,\n            Err(e) => {\n                println!(\"Parsing error(s): {}\", e);\n                ::std::process::exit(1);\n            }\n        };\n        tera.autoescape_on(vec![\".html\", \".sql\"]);\n        tera.register_filter(\"do_nothing\", do_nothing_filter);\n        tera\n    };\n}\n```\n\n----------------------------------------\n\nTITLE: Example Project Directory Structure\nDESCRIPTION: Shows an example directory structure for templates that can be used with Tera's glob pattern matching.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ntemplates/\n  hello.html\n  index.html\n  products/\n    product.html\n    price.html\n```\n\n----------------------------------------\n\nTITLE: Importing Tera in Rust (pre-2018 edition)\nDESCRIPTION: How to import the Tera crate in your Rust code if you're not using Rust 2018 edition or later.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_2\n\nLANGUAGE: rs\nCODE:\n```\nextern crate tera;\n```\n\n----------------------------------------\n\nTITLE: Initializing Template Syntax Example\nDESCRIPTION: Example showing updated mandatory test parentheses syntax for template parsing.\nSOURCE: https://github.com/keats/tera/blob/master/CHANGELOG.md#2025-04-20_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndivisibleby(2)\n```\n\n----------------------------------------\n\nTITLE: Using Filters in Math Operations in Tera Templates\nDESCRIPTION: Shows how filters have the lowest priority in math operations and demonstrates the correct way to use them in calculations.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_21\n\nLANGUAGE: css\nCODE:\n```\n{{ 1 + a | length }}\n// is equal to\n{{ (1 + a) | length } // this will probably error\n\n// This will do what you wanted initially\n{{ a | length + 1 }}\n```\n\n----------------------------------------\n\nTITLE: Template Expression Example\nDESCRIPTION: Example demonstrating combined test expressions with conditions in templates.\nSOURCE: https://github.com/keats/tera/blob/master/CHANGELOG.md#2025-04-20_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nif x is divisibleby(2) and x > 10\n```\n\n----------------------------------------\n\nTITLE: Defining Author and Post Structs in Rust for Tera Templates\nDESCRIPTION: Defines Post and Author structs for demonstrating group_by and filter filters in Tera templates.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_42\n\nLANGUAGE: rust\nCODE:\n```\nstruct Author {\n    name: String,\n};\n\nstruct Post {\n    content: String,\n    year: u32,\n    author: Author,\n    draft: bool,\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Person Struct in Rust for Tera Templates\nDESCRIPTION: Defines a Person struct with a nested Name struct for demonstrating sort and unique filters in Tera templates.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_38\n\nLANGUAGE: rust\nCODE:\n```\nstruct Name(String, String);\n\nstruct Person {\n    name: Name,\n    age: u32,\n}\n```\n\n----------------------------------------\n\nTITLE: Divisibility Test in Tera Templates\nDESCRIPTION: Shows how to use the divisibleby test to check if a number is divisible by another\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_53\n\nLANGUAGE: jinja2\nCODE:\n```\n{% if rating is divisibleby(2) %}\n    Divisible\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Adding Tera with Default Features Disabled\nDESCRIPTION: How to add Tera as a dependency with default features disabled, which removes additional dependencies for certain filters and functions.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\ntera = { version = \"1\", default-features = false }\n```\n\n----------------------------------------\n\nTITLE: Building Tera WebAssembly Playground with wasm-pack\nDESCRIPTION: This command uses wasm-pack to build the Tera WebAssembly project for use as a playground. It compiles the Rust code into WebAssembly, making it ready for web integration.\nSOURCE: https://github.com/keats/tera/blob/master/docs/playground/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nwasm-pack build\n```\n\n----------------------------------------\n\nTITLE: Rendering Templates with Context\nDESCRIPTION: How to render a template by providing a context using either the Tera Context struct or a serializable struct.\nSOURCE: https://github.com/keats/tera/blob/master/docs/content/docs/_index.md#2025-04-20_snippet_6\n\nLANGUAGE: rs\nCODE:\n```\nuse tera::Context;\n// Using the tera Context struct\nlet mut context = Context::new();\ncontext.insert(\"product\", &product);\ncontext.insert(\"vat_rate\", &0.20);\ntera.render(\"products/product.html\", &context)?;\n\n#[derive(Serialize)]\nstruct Product {\n    name: String\n}\n// or a struct\ntera.render(\"products/product.html\", &Context::from_serialize(&product)?)?;\n```\n\n----------------------------------------\n\nTITLE: Building Tera WebAssembly Package\nDESCRIPTION: Command to build the Tera WebAssembly package using wasm-pack tool for web playground usage\nSOURCE: https://github.com/keats/tera/blob/master/docs/playground/pkg/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nwasm-pack build\n```"
  }
]
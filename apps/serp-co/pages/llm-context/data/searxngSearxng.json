[
  {
    "owner": "searxng",
    "repo": "searxng",
    "content": "TITLE: Configuring SearXNG Server Settings in YAML\nDESCRIPTION: This YAML configuration block defines the server settings for a SearXNG instance. It includes settings for base URL, port, binding address, security, rate limiting, and HTTP headers. Each setting can be customized according to deployment needs.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_server.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n    base_url: http://example.org/location  # change this!\n    port: 8888\n    bind_address: \"127.0.0.1\"\n    secret_key: \"ultrasecretkey\"           # change this!\n    limiter: false\n    public_instance: false\n    image_proxy: false\n    default_http_headers:\n      X-Content-Type-Options : nosniff\n      X-Download-Options : noopen\n      X-Robots-Tag : noindex, nofollow\n      Referrer-Policy : no-referrer\n```\n\n----------------------------------------\n\nTITLE: Enabling SearXNG Site on Ubuntu/Debian\nDESCRIPTION: Commands to create a symlink for the SearXNG site configuration in NGINX on Ubuntu or Debian-based systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ln -s /etc/nginx/sites-available/searxng.conf \\\n               /etc/nginx/sites-enabled/searxng.conf\n```\n\n----------------------------------------\n\nTITLE: Complete Engine Configuration Example\nDESCRIPTION: Comprehensive example showing all possible configuration options for a search engine, including network settings, timeout values, and authentication options.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_engines.rst#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- name: example\n  engine: example\n  shortcut: demo\n  base_url: 'https://{language}.example.com/'\n  send_accept_language_header: false\n  categories: general\n  timeout: 3.0\n  api_key: 'apikey'\n  disabled: false\n  language: en_US\n  tokens: [ 'my-secret-token' ]\n  weight: 1\n  display_error_messages: true\n  about:\n     website: https://example.com\n     wikidata_id: Q306656\n     official_api_documentation: https://example.com/api-doc\n     use_official_api: true\n     require_api_key: true\n     results: HTML\n\n  # overwrite values from section 'outgoing:'\n  enable_http2: false\n  retries: 1\n  max_connections: 100\n  max_keepalive_connections: 10\n  keepalive_expiry: 5.0\n  using_tor_proxy: false\n  proxies:\n    http:\n      - http://proxy1:8080\n      - http://proxy2:8080\n    https:\n      - http://proxy1:8080\n      - http://proxy2:8080\n      - socks5://user:password@proxy3:1080\n      - socks5h://user:password@proxy4:1080\n\n  # other network settings\n  enable_http: false\n  retry_on_http_error: true # or 403 or [404, 429]\n```\n\n----------------------------------------\n\nTITLE: Running SearXNG Docker Container with Volume Mount\nDESCRIPTION: Commands to pull and run the SearXNG docker container with custom configuration. This example creates a local directory for settings, maps port 8080, and sets environment variables for basic configuration.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-docker.rst#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n$ mkdir my-instance\n$ cd my-instance\n$ export PORT=8080\n$ docker pull searxng/searxng\n$ docker run --rm \\\n                -d -p ${PORT}:8080 \\\n                -v \"${PWD}/searxng:/etc/searxng\" \\\n                -e \"BASE_URL=http://localhost:$PORT/\" \\\n                -e \"INSTANCE_NAME=my-instance\" \\\n                searxng/searxng\n2f998.... # container's ID\n```\n\n----------------------------------------\n\nTITLE: Configuring SearXNG Server Settings in YAML\nDESCRIPTION: Configuration snippet from the reference settings.yml file that enables essential features for public SearXNG instances. It activates request rate limiting, image proxying, and static file hashing for improved security and caching.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/architecture.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  # WARNING: use {} to specify default value (see https://github.com/searxng/searxng/issues/1853)\n  secret_key: \"\\\"\\\\\\${SECRET_KEY}\\\"\"  # change this!\n  limiter: true  # rate limit the number of request on the instance, block some bots\n  image_proxy: true  # proxying images is enabled\n  timeout: 4.0   # a timeout of 4 seconds is suitable for a public instance\n\nui:\n  static_use_hash: true\n```\n\n----------------------------------------\n\nTITLE: Configuring SearXNG UI Settings in YAML\nDESCRIPTION: YAML configuration block defining various UI settings for SearXNG including static file hashing, localization, theme settings, cache URL configuration, and search behavior preferences. These settings control the visual appearance and interaction behavior of the SearXNG instance.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_ui.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nui:\n  static_use_hash: false\n  default_locale: \"\"\n  query_in_title: false\n  infinite_scroll: false\n  center_alignment: false\n  cache_url: https://web.archive.org/web/\n  default_theme: simple\n  theme_args:\n    simple_style: auto\n  search_on_category_select: true\n  hotkeys: default\n  url_formatting: pretty\n```\n\n----------------------------------------\n\nTITLE: Cloning SearXNG Repository\nDESCRIPTION: Command to clone the SearXNG source code repository from GitHub to start development.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/quickstart.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/searxng/searxng.git searxng\n```\n\n----------------------------------------\n\nTITLE: Installing SearXNG Development Tools with searxng.sh\nDESCRIPTION: Uses the searxng.sh utility to install all required build and development tools for SearXNG on the host system. This installs packages needed for SearXNG operation as well as documentation building and testing.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/buildhosts.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo -H ./utils/searxng.sh install buildhost\n```\n\n----------------------------------------\n\nTITLE: Setting Up SearXNG Configuration in YAML\nDESCRIPTION: This snippet shows the recommended default settings.yml configuration for SearXNG. It enables the limiter to protect against bots, image proxy for better privacy, and cache busting to save bandwidth.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-searxng.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nuse_default_settings: True\n\nserver:\n    # base_url is defined in the DEFAULT_SETTINGS\n    secret_key: \"ultrasecretkey\"  # change this!\n    limiter: True  # rate limit the number of request on the instance, block some bots\n    image_proxy: True  # proxying image results through SearXNG\n    default_http_headers:\n        X-Content-Type-Options: nosniff\n        X-XSS-Protection: 1; mode=block\n        X-Download-Options: noopen\n        X-Robots-Tag: noindex, nofollow\n        Referrer-Policy: no-referrer\n\nui:\n    static_use_hash: True\n\n```\n\n----------------------------------------\n\nTITLE: Running Tests\nDESCRIPTION: Demonstrates how to run various tests using make commands, including pylint, PEP8, unit tests, and shell tests.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/makefile.rst#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ make test.pep8 test.unit test.shell\nTEST      test.pep8 OK\n...\nTEST      test.unit OK\n...\nTEST      test.shell OK\n```\n\n----------------------------------------\n\nTITLE: Engine Keep-Only Configuration in YAML\nDESCRIPTION: Demonstrates how to maintain only specific engines in the configuration while removing all others, including setting custom tokens for the kept engines.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings.rst#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nuse_default_settings:\n  engines:\n    keep_only:\n      - google\n      - duckduckgo\nserver:\n  secret_key: \"ultrasecretkey\"   # change this!\nengines:\n  - name: google\n    tokens: ['$ecretValue']\n  - name: duckduckgo\n    tokens: ['$ecretValue']\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Settings in YAML for SearXNG\nDESCRIPTION: This YAML configuration block defines various search settings for SearXNG, including safe search level, autocomplete options, favicon resolver, default language, and error handling parameters. It also specifies supported result formats.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_search.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsearch:\n  safe_search: 0\n  autocomplete: \"\"\n  favicon_resolver: \"\"\n  default_lang: \"\"\n  ban_time_on_fail: 5\n  max_page: 0\n  max_ban_time_on_fail: 120\n  suspended_times:\n    SearxEngineAccessDenied: 86400\n    SearxEngineCaptcha: 86400\n    SearxEngineTooManyRequests: 3600\n    cf_SearxEngineCaptcha: 1296000\n    cf_SearxEngineAccessDenied: 86400\n    recaptcha_SearxEngineCaptcha: 604800\n  formats:\n    - html\n```\n\n----------------------------------------\n\nTITLE: Configuring Outgoing Communication Settings in YAML for SearXNG\nDESCRIPTION: This YAML configuration block defines various settings for outgoing requests in SearXNG, including timeouts, user agent information, connection pooling, and proxy options. It also includes commented-out sections for custom server certificates and proxy configurations.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_outgoing.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\noutgoing:\n  request_timeout: 2.0       # default timeout in seconds, can be override by engine\n  max_request_timeout: 10.0  # the maximum timeout in seconds\n  useragent_suffix: \"\"       # information like an email address to the administrator\n  pool_connections: 100      # Maximum number of allowable connections, or null\n                             # for no limits. The default is 100.\n  pool_maxsize: 10           # Number of allowable keep-alive connections, or null\n                             # to always allow. The default is 10.\n  enable_http2: true         # See https://www.python-httpx.org/http2/\n  # uncomment below section if you want to use a custom server certificate\n  # see https://www.python-httpx.org/advanced/#changing-the-verification-defaults\n  # and https://www.python-httpx.org/compatibility/#ssl-configuration\n  #  verify: ~/.mitmproxy/mitmproxy-ca-cert.cer\n  #\n  # uncomment below section if you want to use a proxyq see: SOCKS proxies\n  #   https://2.python-requests.org/en/latest/user/advanced/#proxies\n  # are also supported: see\n  #   https://2.python-requests.org/en/latest/user/advanced/#socks\n  #\n  #  proxies:\n  #    all://:\n  #      - http://proxy1:8080\n  #      - http://proxy2:8080\n  #\n  #  using_tor_proxy: true\n  #\n  # Extra seconds to add in order to account for the time taken by the proxy\n  #\n  #  extra_proxy_timeout: 10.0\n  #\n```\n\n----------------------------------------\n\nTITLE: Adding User to Docker Group in Linux\nDESCRIPTION: Command to add the current user to the docker group on Linux, which allows running docker commands without sudo. User needs to log out and log back in for group membership to be applied.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-docker.rst#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo usermod -a -G docker $USER\n```\n\n----------------------------------------\n\nTITLE: Updating SearXNG Instance Using searxng.sh Script\nDESCRIPTION: Command to update a SearXNG instance that was installed using the installation scripts. This uses the update command from the searxng.sh utility script.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/update-searxng.rst#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nsudo -H ./utils/searxng.sh instance update\n```\n\n----------------------------------------\n\nTITLE: Private Engine Configuration with Token\nDESCRIPTION: Example of configuring a private engine with access token for the Arch Linux Wiki search.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_engines.rst#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- name: arch linux wiki\n  engine: archlinux\n  shortcut: al\n  tokens: [ 'my-secret-token' ]\n```\n\n----------------------------------------\n\nTITLE: Embedding SearXNG Search Bar in HTML\nDESCRIPTION: HTML form code to embed a SearXNG search bar into external websites. The example shows how to customize search parameters including query, categories, language, locale, and time range filters.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/api.rst#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<form method=\"post\" action=\"https://example.org/\">\n  <!-- search      --> <input type=\"text\" name=\"q\">\n  <!-- categories  --> <input type=\"hidden\" name=\"categories\" value=\"general,social media\">\n  <!-- language    --> <input type=\"hidden\" name=\"lang\" value=\"all\">\n  <!-- locale      --> <input type=\"hidden\" name=\"locale\" value=\"en\">\n  <!-- date filter --> <input type=\"hidden\" name=\"time_range\" value=\"month\">\n</form>\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Engine Configuration in Python\nDESCRIPTION: This snippet shows how to define basic configuration options for a SearXNG engine adapter in the engine's Python module. It sets categories, paging support, and a non-overwritten global variable.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/engine_overview.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n# engine dependent config\ncategories = ['general']\npaging = True\n_non_overwritten_global = 'foo'\n```\n\n----------------------------------------\n\nTITLE: Updating Python Packages for SearXNG\nDESCRIPTION: Commands to update Python packages and install SearXNG in the virtual environment.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H -u ${SERVICE_USER} -i\n\n(${SERVICE_USER})$ command -v python && python --version\n$SEARXNG_PYENV/bin/python\nPython 3.11.10\n\n# update pip's boilerplate ..\npip install -U pip\npip install -U setuptools\npip install -U wheel\npip install -U pyyaml\n\n# jump to SearXNG's working tree and install SearXNG into virtualenv\n(${SERVICE_USER})$ cd \"$SEARXNG_SRC\"\n(${SERVICE_USER})$ pip install --use-pep517 --no-build-isolation -e .\n```\n\n----------------------------------------\n\nTITLE: Python Package Requirements Specification\nDESCRIPTION: Defines exact versions of Python packages required for the SearXNG project. Includes core dependencies for web functionality (Flask, Jinja2), HTTP handling (httpx), data processing (lxml, PyYAML), and various utility packages.\nSOURCE: https://github.com/searxng/searxng/blob/master/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ncertifi==2025.1.31\nbabel==2.17.0\nflask-babel==4.0.0\nflask==3.1.0\njinja2==3.1.6\nlxml==5.3.2\npygments==2.19.1\npython-dateutil==2.9.0.post0\npyyaml==6.0.2\nhttpx[http2]==0.24.1\nBrotli==1.1.0\nuvloop==0.21.0\nhttpx-socks[asyncio]==0.7.7\nsetproctitle==1.3.5\nredis==5.0.8\nmarkdown-it-py==3.0.0\nfasttext-predict==0.9.2.4\ntomli==2.2.1; python_version < '3.11'\nmsgspec==0.19.0\ntyper-slim==0.15.2\nisodate==0.7.2\n```\n\n----------------------------------------\n\nTITLE: Deploying Documentation to GitHub Pages\nDESCRIPTION: Command to clean, rebuild, and deploy the documentation to GitHub Pages. This Makefile target handles the building and all necessary git operations.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/contribution_guide.rst#2025-04-21_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n$ make docs.clean docs.gh-pages\n```\n\n----------------------------------------\n\nTITLE: Running SearXNG Docker Container with Command Line Help\nDESCRIPTION: Command to run the SearXNG Docker container in interactive mode to display the help text from the container's entrypoint script.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-docker.rst#2025-04-21_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ndocker run --rm -it searxng/searxng -h\n```\n\n----------------------------------------\n\nTITLE: Configuring SearXNG with Default Settings\nDESCRIPTION: Commands to create the SearXNG configuration directory and copy the default settings file.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H mkdir -p \"$(dirname ${SEARXNG_SETTINGS_PATH})\"\n$ sudo -H cp \"$SEARXNG_SRC/utils/templates/etc/searxng/settings.yml\" \\\n             \"${SEARXNG_SETTINGS_PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring General Settings in SearXNG YAML\nDESCRIPTION: Core configuration block for SearXNG general settings. Includes debug mode, instance name, various URL configurations, and metrics settings. These settings control basic instance behavior and public-facing elements.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_general.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ngeneral:\n  debug: false\n  instance_name:  \"SearXNG\"\n  privacypolicy_url: false\n  donation_url: false\n  contact_url: false\n  enable_metrics: true\n  open_metrics: ''\n```\n\n----------------------------------------\n\nTITLE: Configuring uWSGI for SearXNG on Fedora/RHEL\nDESCRIPTION: uWSGI configuration file for SearXNG on Fedora/RHEL systems. It sets up a uWSGI instance that listens on a Unix socket and enables cache busting.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-uwsgi.rst#2025-04-21_snippet_2\n\nLANGUAGE: ini\nCODE:\n```\n[uwsgi]\nuid = searxng\ngid = searxng\n\n# disable logging for privacy\ndisable-logging = true\n\n# Number of workers (usually CPU count)\nworkers = 4\n\n# The right granted on the created socket\nchmod-socket = 666\n\n# Plugin to use and interpretor config\nplugin = python3\nsingle-interpreter = true\n\n# Module to import\nmodule = searx.webapp\n\n# Setup up search instance environment\nenv = SEARXNG_SETTINGS_PATH=/etc/searxng/settings.yml\n\n# Virtualenv and python path\nvirtualenv = /usr/local/searxng\npythonpath = /usr/local/searxng\n\n# Cache Busting\noffload-threads = %k\nstatic-map = /static=/usr/local/searxng/searx/static\nroute-uri = ^/static/practi.ff22940e9968cf0461dd.css$ static:/usr/local/searxng/searx/static/practi.css\nroute-uri = ^/static/(.+) addheader:Cache-Control: public, max-age=31536000\nroute-uri = ^/static/themes/oscar/css/logicodev.1daf88f9cb5f4ee47261.css$ static:/usr/local/searxng/searx/static/themes/oscar/css/logicodev.css\n\nsocket = /run/uwsgi/searxng.sock\n```\n\n----------------------------------------\n\nTITLE: Basic Engine Configuration Structure in YAML\nDESCRIPTION: Shows the basic structure for configuring multiple search engines in SearXNG's settings.yml file.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_engines.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nengines:\n\n  - name: dummy.online\n    engine: dummy\n    ..\n  - name: dummy.offline\n    engine: dummy-offline\n    ..\n  ..\n```\n\n----------------------------------------\n\nTITLE: Installing SearXNG with Default Settings in Bash\nDESCRIPTION: This command installs SearXNG with default settings using the installation script. It requires sudo privileges and installs all components, including a uWSGI setup.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-scripts.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo -H ./utils/searxng.sh install all\n```\n\n----------------------------------------\n\nTITLE: Configuring Language Settings in YAML for SearXNG\nDESCRIPTION: This YAML snippet demonstrates how to configure available languages for SearXNG. It includes a list of language codes and a special 'all' option for the default language.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_search.rst#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nlanguages:\n  - all\n  - en\n  - en-US\n  - de\n  - it-IT\n  - fr\n  - fr-BE\n```\n\n----------------------------------------\n\nTITLE: Installing SearXNG Suite and Nginx\nDESCRIPTION: Commands to install the complete SearXNG suite and Nginx HTTP proxy in the container.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo -H ./utils/lxc.sh install suite searxng-archlinux\n$ sudo -H ./utils/lxc.sh cmd -- FORCE_TIMEOUT=0 ./utils/searxng.sh install nginx\n$ sudo ./utils/lxc.sh show suite | grep SEARXNG_URL\n```\n\n----------------------------------------\n\nTITLE: Basic Server Configuration with Default Settings in YAML\nDESCRIPTION: Demonstrates how to override default settings with custom server configuration, specifically setting a secret key and bind address while inheriting other default settings.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nuse_default_settings: true\nserver:\n    secret_key: \"ultrasecretkey\"   # change this!\n    bind_address: \"[::]\"\n```\n\n----------------------------------------\n\nTITLE: Engine Configuration with Token Settings in YAML\nDESCRIPTION: Shows how to configure specific engines while maintaining default settings, including enabling the Bing engine and setting a token for the Arch Linux wiki engine.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings.rst#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nuse_default_settings: true\nserver:\n  secret_key: \"ultrasecretkey\"   # change this!\nengines:\n  - name: arch linux wiki\n    tokens: ['$ecretValue']\n  - name: bing\n    disabled: false\n```\n\n----------------------------------------\n\nTITLE: Installing NGINX on Ubuntu/Debian\nDESCRIPTION: Command to install NGINX on Ubuntu or Debian-based systems using apt-get.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H apt-get install nginx\n```\n\n----------------------------------------\n\nTITLE: Chaining Multiple Search Engines and Categories in SearXNG\nDESCRIPTION: Demonstrates how to chain multiple search engines and categories using '!' prefixes for a comprehensive search about Jakarta.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/id/search-syntax.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{search('!map !ddg !wp Jakarta')}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Category Tabs in SearXNG using YAML\nDESCRIPTION: This YAML configuration defines which search categories will be displayed as tabs in the SearXNG user interface. Only categories with active engines will be shown as tabs, and engines in categories not listed here can still be searched using search syntax.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_categories_as_tabs.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncategories_as_tabs:\n  general:\n  images:\n  videos:\n  news:\n  map:\n  music:\n  it:\n  science:\n  files:\n  social media:\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis URL in SearXNG YAML Settings\nDESCRIPTION: YAML configuration snippet for setting the Redis URL in SearXNG. This example uses a Unix socket connection to a local Redis instance.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_redis.rst#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nredis:\n  url: unix:///usr/local/searxng-redis/run/redis.sock?db=0\n```\n\n----------------------------------------\n\nTITLE: Configuring SearXNG with Minimal Setup\nDESCRIPTION: Command to generate a random secret key for SearXNG's configuration.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H sed -i -e \"s/ultrasecretkey/$(openssl rand -hex 16)/g\" \\\n              \"$SEARXNG_SETTINGS_PATH\"\n```\n\n----------------------------------------\n\nTITLE: Python Package Requirements List\nDESCRIPTION: A comprehensive list of Python package dependencies with exact version specifications for development, testing, and documentation purposes. Includes testing frameworks, linting tools, Sphinx documentation packages, and utility libraries.\nSOURCE: https://github.com/searxng/searxng/blob/master/requirements-dev.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nmock==5.2.0\nnose2[coverage_plugin]==0.15.1\ncov-core==1.15.0\nblack==24.3.0\npylint==3.3.6\nsplinter==0.21.0\nselenium==4.31.0\nPallets-Sphinx-Themes==2.3.0\nSphinx==7.4.7\nsphinx-issues==5.0.1\nsphinx-jinja==2.0.2\nsphinx-tabs==3.4.7\nsphinxcontrib-programoutput==0.18\nsphinx-autobuild==2024.10.3\nsphinx-notfound-page==1.1.0\nmyst-parser==3.0.1\nlinuxdoc==20240924\naiounittest==1.5.0\nyamllint==1.37.0\nwlc==1.15\ncoloredlogs==15.0.1\ndocutils>=0.21.2\nparameterized==0.9.0\n```\n\n----------------------------------------\n\nTITLE: Retrieving SearXNG Configuration Data via HTTP GET Request\nDESCRIPTION: Shows the HTTP GET request format to retrieve configuration data from the SearXNG administration API. This endpoint returns the current configuration of the SearXNG instance.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/api.rst#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /config  HTTP/1.1\n```\n\n----------------------------------------\n\nTITLE: Installing SearXNG with Apache using searxng.sh\nDESCRIPTION: This command installs the SearXNG site using the searxng.sh installation script.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo -H ./utils/searxng.sh install apache\n```\n\n----------------------------------------\n\nTITLE: Installing Redis Python Client in SearXNG Environment\nDESCRIPTION: Command to install the Redis Python client in the SearXNG Python virtual environment. This is a prerequisite for using the Redis engine.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/offline/nosql-engines.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo utils/searxng.sh instance cmd bash\n(searxng-pyenv)$ pip install redis\n```\n\n----------------------------------------\n\nTITLE: Configuring Built-in Plugins in SearXNG YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure built-in plugins in SearXNG. Each plugin is specified by its fully qualified class name and can be activated or deactivated using the 'active' parameter.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_plugins.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n\n  searx.plugins.calculator.SXNGPlugin:\n    active: true\n\n  searx.plugins.hash_plugin.SXNGPlugin:\n    active: true\n\n  searx.plugins.self_info.SXNGPlugin:\n    active: true\n\n  searx.plugins.tracker_url_remover.SXNGPlugin:\n    active: true\n\n  searx.plugins.unit_converter.SXNGPlugin:\n    active: true\n\n  searx.plugins.ahmia_filter.SXNGPlugin:\n    active: true\n\n  searx.plugins.hostnames.SXNGPlugin:\n    active: true\n\n  searx.plugins.oa_doi_rewrite.SXNGPlugin:\n    active: false\n\n  searx.plugins.tor_check.SXNGPlugin:\n    active: false\n```\n\n----------------------------------------\n\nTITLE: Configuring SQL Engine in SearXNG settings.yml\nDESCRIPTION: YAML configuration example for setting up SQL engines in SearXNG. It shows the basic required attributes including engine type, database connection, result template, and query string configuration.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/offline/sql-engines.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- name: ...\n  engine: {sqlite|postgresql|mysql_server}\n  database: ...\n  result_template: {template_name}\n  query_str: ...\n```\n\n----------------------------------------\n\nTITLE: Running Post-Installation Checks for SearXNG\nDESCRIPTION: Command to run validation checks after SearXNG installation or migration, which identifies leftover configuration files, deprecated settings, and confirms Redis connectivity.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/update-searxng.rst#2025-04-21_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H ./utils/searxng.sh instance check\n\nSearXNG checks\n--------------\nERROR: settings.yml in /etc/searx/ is deprecated, move file to folder /etc/searxng/\nINFO:  [OK] (old) account 'searx' does not exists\nINFO:  [OK] (old) account 'filtron' does not exists\nINFO:  [OK] (old) account 'morty' does not exists\n...\nINFO    searx.redisdb                 : connecting to Redis db=0 path='/usr/local/searxng-redis/run/redis.sock'\nINFO    searx.redisdb                 : connected to Redis\n```\n\n----------------------------------------\n\nTITLE: Restarting Apache and uWSGI Services for SearXNG on Ubuntu/Debian\nDESCRIPTION: These commands restart the Apache2 web server and the uWSGI service for SearXNG on Ubuntu or Debian systems. They require sudo privileges to execute.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H systemctl restart apache2\nsudo -H service uwsgi restart searxng\n```\n\n----------------------------------------\n\nTITLE: Enabling SearXNG Site on Arch Linux and Fedora/RHEL\nDESCRIPTION: This command creates a symlink to enable the SearXNG site configuration on Arch Linux and Fedora/RHEL systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ln -s /etc/httpd/sites-available/searxng.conf \\\n                /etc/httpd/sites-enabled/searxng.conf\n```\n\n----------------------------------------\n\nTITLE: Activating Favicons in SearXNG with YAML Configuration\nDESCRIPTION: YAML configuration to activate favicons in SearXNG by setting a default favicon resolver in the search settings. This enables favicon display in search results.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/searx.favicons.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsearch:\n  favicon_resolver: \"duckduckgo\"\n```\n\n----------------------------------------\n\nTITLE: Installing and Starting Apache on Arch Linux\nDESCRIPTION: These commands install, enable, and start the Apache HTTP server on Arch Linux.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H pacman -S apache\nsudo -H systemctl enable httpd\nsudo -H systemctl start http\n```\n\n----------------------------------------\n\nTITLE: Installing and Starting Apache on Fedora/RHEL\nDESCRIPTION: These commands install, enable, and start the Apache HTTP server on Fedora or RHEL systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H dnf install httpd\nsudo -H systemctl enable httpd\nsudo -H systemctl start httpd\n```\n\n----------------------------------------\n\nTITLE: Redis URL Formats for SearXNG Configuration\nDESCRIPTION: Examples of Redis URL formats for connecting to a Redis database in SearXNG. These URLs can be used in the SEARXNG_REDIS_URL environment variable or in the configuration file.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_redis.rst#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nredis://[[username]:[password]]@localhost:6379/0\nrediss://[[username]:[password]]@localhost:6379/0\nunix://[[username]:[password]]@/path/to/socket.sock?db=0\n```\n\n----------------------------------------\n\nTITLE: Restarting Services on Arch Linux\nDESCRIPTION: Commands to restart NGINX and uWSGI services for SearXNG on Arch Linux.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H systemctl restart nginx\nsudo -H systemctl restart uwsgi@searxng\n```\n\n----------------------------------------\n\nTITLE: Local Search Engine Configuration in settings.yml\nDESCRIPTION: Configuration entries for local search engines in SearXNG's settings.yml file. The base_url must be specified for each engine, and HTTP requests can be enabled by setting enable_http to True. Access can be restricted using tokens.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/offline/search-indexer-engines.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Example configuration structure (inferred from documentation)\nengines:\n  - name: elasticsearch\n    base_url: \"http://localhost:9200\"\n    enable_http: true\n    tokens: [\"your-access-token\"]\n  \n  - name: meilisearch\n    base_url: \"http://localhost:7700\"\n    enable_http: true\n    tokens: [\"your-access-token\"]\n  \n  - name: solr\n    base_url: \"http://localhost:8983\"\n    enable_http: true\n    tokens: [\"your-access-token\"]\n```\n\n----------------------------------------\n\nTITLE: Enabling SearXNG Site on Ubuntu/Debian\nDESCRIPTION: This command enables the SearXNG site configuration on Ubuntu or Debian systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H a2ensite searxng.conf\n```\n\n----------------------------------------\n\nTITLE: Cloning SearXNG Repository\nDESCRIPTION: Commands to switch to the SearXNG user and clone the SearXNG repository.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H -u ${SERVICE_USER} -i\n(${SERVICE_USER})$ git clone \"$GIT_URL\" \\\n                   \"$SEARXNG_SRC\"\n```\n\n----------------------------------------\n\nTITLE: Installing SearXNG Server and Nginx Proxy on LXC Containers\nDESCRIPTION: This bash command installs a SearXNG server and nginx proxy on all containers of the SearXNG suite using the FORCE_TIMEOUT environment variable to run in batch mode with default choices.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/utils/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ./utils/lxc.sh cmd -- FORCE_TIMEOUT=0 ./utils/searxng.sh install all\nsudo -H ./utils/lxc.sh cmd -- FORCE_TIMEOUT=0 ./utils/searxng.sh install nginx\n```\n\n----------------------------------------\n\nTITLE: Special Queries in SearXNG Search (Markdown)\nDESCRIPTION: Provides examples of special queries in SearXNG, including generating a random UUID, finding an average, and converting strings to hash digests.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/en/search-syntax.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n{{search('random uuid')}}\n{{search('avg 123 548 2.04 24.2')}}\n{{search('user-agent')}}\n{{search('md5 lorem ipsum')}}\n{{search('sha512 lorem ipsum')}}\n```\n\n----------------------------------------\n\nTITLE: Cloning SearXNG Repository\nDESCRIPTION: Commands to clone the SearXNG repository from GitHub into the local system.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cd ~/Downloads\n$ git clone https://github.com/searxng/searxng.git searxng\n$ cd searxng\n```\n\n----------------------------------------\n\nTITLE: Multilingual Search Configuration\nDESCRIPTION: Configuration example for setting up multilingual search with German as default and additional English results.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_engines.rst#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsearch:\n    default_lang : \"de\"\n    ...\n\nengines:\n  - name : google english\n    engine : google\n    language : en\n    ...\n```\n\n----------------------------------------\n\nTITLE: Restarting Services on Fedora/RHEL\nDESCRIPTION: Commands to restart NGINX and touch uWSGI configuration for SearXNG on Fedora or RHEL-based systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H systemctl restart nginx\nsudo -H touch /etc/uwsgi.d/searxng.ini\n```\n\n----------------------------------------\n\nTITLE: Opening Shell Inside SearXNG Container\nDESCRIPTION: Command to open a shell (sh) inside a running SearXNG container for direct interaction with the container's filesystem and processes.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-docker.rst#2025-04-21_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n$ docker exec -it 2f998 sh\n```\n\n----------------------------------------\n\nTITLE: Installing Build Prerequisites\nDESCRIPTION: Commands to install all prerequisites needed for a buildhost environment.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n./utils/searxng.sh install buildhost\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ./utils/lxc.sh cmd searxng-archlinux ./utils/searxng.sh install buildhost\n```\n\n----------------------------------------\n\nTITLE: Installing GraphViz and Image Processing Dependencies on Ubuntu/Debian\nDESCRIPTION: Installs the necessary packages on Ubuntu/Debian systems for better documentation output, including GraphViz for diagrams, ImageMagick for image processing, and XeTeX for math rendering.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/buildhosts.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo apt install graphviz imagemagick texlive-xetex librsvg2-bin\n```\n\n----------------------------------------\n\nTITLE: Installing and Configuring Redis for SearXNG Development\nDESCRIPTION: Shell commands for building, installing, and configuring a local Redis instance for SearXNG development. These commands use the 'manage' script to set up Redis and add the current user to the Redis group.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_redis.rst#2025-04-21_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n$ ./manage redis.build\n$ sudo -H ./manage redis.install\n$ sudo -H ./manage redis.addgrp \"${USER}\"\n# don't forget to logout & login to get member of group\n```\n\n----------------------------------------\n\nTITLE: Creating a Dedicated User for SearXNG\nDESCRIPTION: Commands to create a system user for running SearXNG and set up its home directory.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H useradd --shell /bin/bash --system \\\n    --home-dir \"$SERVICE_HOME\" \\\n    --comment 'Privacy-respecting metasearch engine' \\\n    $SERVICE_USER\n\n$ sudo -H mkdir \"$SERVICE_HOME\"\n$ sudo -H chown -R \"$SERVICE_GROUP:$SERVICE_GROUP\" \"$SERVICE_HOME\"\n```\n\n----------------------------------------\n\nTITLE: Installing NGINX Site for SearXNG using searxng.sh\nDESCRIPTION: Command to install the NGINX site configuration for SearXNG using the searxng.sh utility script.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo -H ./utils/searxng.sh install nginx\n```\n\n----------------------------------------\n\nTITLE: Setting up SSH Tunnel for SOCKS Proxy in Bash\nDESCRIPTION: This command creates an SSH tunnel that sets up a SOCKS proxy on localhost:8080. It connects to the server 'example.org' using the user 'user'.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/answer-captcha.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# SOCKS server: socks://127.0.0.1:8080\n\n$ ssh -q -N -D 8080 user@example.org\n```\n\n----------------------------------------\n\nTITLE: Chaining Multiple Engines in SearXNG Search (Markdown)\nDESCRIPTION: Illustrates how to chain multiple engine and category modifiers in a single search query.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/en/search-syntax.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{search('!map !ddg !wp paris')}}\n```\n\n----------------------------------------\n\nTITLE: Using External Bangs in SearXNG Search (Markdown)\nDESCRIPTION: Shows how to use the '!!' prefix for external bangs, directly searching on external sites like Wikipedia in a specific language.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/en/search-syntax.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n{{search('!!wfr Wau Holland')}}\n```\n\n----------------------------------------\n\nTITLE: Defining Search Request Parameters Table in reStructuredText\nDESCRIPTION: This RST table defines the parameters that can be used to specify a search request in SearXNG. It includes the argument name, type, and a brief description for each parameter.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/engine_overview.rst#2025-04-21_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n.. table::\n   :width: 100%\n\n   =================== =========== ==========================================================================\n   argument            type        information\n   =================== =========== ==========================================================================\n   url                 str         requested url\n   method              str         HTTP request method\n   headers             set         HTTP header information\n   data                set         HTTP data information\n   cookies             set         HTTP cookies\n   verify              bool        Performing SSL-Validity check\n   allow_redirects     bool        Follow redirects\n   max_redirects       int         maximum redirects, hard limit\n   soft_max_redirects  int         maximum redirects, soft limit. Record an error but don't stop the engine\n   raise_for_httperror bool        True by default: raise an exception if the HTTP code of response is >= 300\n   =================== =========== ==========================================================================\n```\n\n----------------------------------------\n\nTITLE: Manual Favicon Cache Maintenance Commands\nDESCRIPTION: Bash commands to perform manual maintenance and check the state of the SearXNG favicon cache. These commands can be used when automatic maintenance is disabled.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/searx.favicons.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ python -m searx.favicons cache maintenance\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ python -m searx.favicons cache state\n```\n\n----------------------------------------\n\nTITLE: Installing SearXNG Build Dependencies on Fedora/RHEL\nDESCRIPTION: Command to install build dependencies for SearXNG on Fedora or RHEL-based systems using dnf.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H dnf install -y \\\n${fedora_build}\n```\n\n----------------------------------------\n\nTITLE: Custom Favicon Resolver Map Configuration\nDESCRIPTION: TOML configuration for manually registering multiple favicon resolvers. This allows users to choose between different favicon sources.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/searx.favicons.rst#2025-04-21_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[favicons.proxy.resolver_map]\n\n\"duckduckgo\" = \"searx.favicons.resolvers.duckduckgo\"\n\"allesedv\" = \"searx.favicons.resolvers.allesedv\"\n# \"google\" = \"searx.favicons.resolvers.google\"\n# \"yandex\" = \"searx.favicons.resolvers.yandex\"\n```\n\n----------------------------------------\n\nTITLE: Installing and Enabling NGINX on Fedora/RHEL\nDESCRIPTION: Commands to install, enable, and start NGINX on Fedora or RHEL-based systems using dnf and systemctl.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H dnf install nginx\nsudo -H systemctl enable nginx\nsudo -H systemctl start nginx\n```\n\n----------------------------------------\n\nTITLE: Engine Removal Configuration in YAML\nDESCRIPTION: Illustrates how to remove specific engines from the default configuration while adding custom engine settings.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings.rst#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nuse_default_settings:\n  engines:\n    remove:\n      - google\nserver:\n  secret_key: \"ultrasecretkey\"   # change this!\nengines:\n  - name: arch linux wiki\n    tokens: ['$ecretValue']\n```\n\n----------------------------------------\n\nTITLE: Defining Correction Result Structure in Python\nDESCRIPTION: This snippet shows the basic structure of a correction result item in SearXNG. It's a simple dictionary with a single key-value pair, where the key is 'correction' and the value is the suggested search term.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/correction.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n{\"correction\" : \"lorem ipsum ..\"}\n```\n\n----------------------------------------\n\nTITLE: Installing Nginx Reverse Proxy in LXC Containers\nDESCRIPTION: Commands to install Nginx reverse proxy in all or a specific LXC container for SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/utils/lxc.sh.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo -H ./utils/lxc.sh cmd -- FORCE_TIMEOUT=0 ./utils/searxng.sh install nginx\n\n# For a specific container:\n$ sudo -H ./utils/lxc.sh cmd searxng-archlinux FORCE_TIMEOUT=0 ./utils/searxng.sh install nginx\n```\n\n----------------------------------------\n\nTITLE: Configuring uWSGI for SearXNG on Ubuntu/Debian\nDESCRIPTION: uWSGI configuration file for SearXNG on Ubuntu/Debian systems. It sets up a uWSGI instance that listens on a Unix socket and enables cache busting.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-uwsgi.rst#2025-04-21_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\n[uwsgi]\nuid = searxng\ngid = searxng\n\n# disable logging for privacy\ndisable-logging = true\n\n# Number of workers (usually CPU count)\nworkers = 4\n\n# The right granted on the created socket\nchmod-socket = 666\n\n# Plugin to use and interpretor config\nplugin = python3\nsingle-interpreter = true\n\n# Module to import\nmodule = searx.webapp\n\n# Setup up search instance environment\nenv = SEARXNG_SETTINGS_PATH=/etc/searxng/settings.yml\n\n# Virtualenv and python path\nvirtualenv = /usr/local/searxng\npythonpath = /usr/local/searxng\n\n# automatically set uid/gid/umask for protocol defined in socket key\nmanage-script-name = true\nmount = /searxng=searx.webapp:application\n\n# Cache Busting\noffload-threads = %k\nstatic-map = /static=/usr/local/searxng/searx/static\nroute-uri = ^/static/practi.ff22940e9968cf0461dd.css$ static:/usr/local/searxng/searx/static/practi.css\nroute-uri = ^/static/(.+) addheader:Cache-Control: public, max-age=31536000\nroute-uri = ^/static/themes/oscar/css/logicodev.1daf88f9cb5f4ee47261.css$ static:/usr/local/searxng/searx/static/themes/oscar/css/logicodev.css\n\nhttp-socket = /run/uwsgi/app/searxng/socket\n```\n\n----------------------------------------\n\nTITLE: Building Theme-Specific Assets\nDESCRIPTION: Command to compile assets for a specific theme (e.g., 'simple' theme) in SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/quickstart.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake themes.simple\n```\n\n----------------------------------------\n\nTITLE: Inspecting and Debugging SearXNG Instance\nDESCRIPTION: Command to inspect and debug a SearXNG instance that was installed using the installation scripts. This uses the inspect command from the searxng.sh utility script.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/update-searxng.rst#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nsudo -H ./utils/searxng.sh instance inspect\n```\n\n----------------------------------------\n\nTITLE: Sample JSON Response from SearXNG Configuration API\nDESCRIPTION: Example JSON response from the configuration endpoint showing various settings like autocomplete, categories, engine configurations, locales, and plugins. This illustrates the structure and content of the configuration data returned by the API.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/api.rst#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"autocomplete\": \"\",\n  \"categories\": [\n    \"map\",\n    \"it\",\n    \"images\",\n  ],\n  \"default_locale\": \"\",\n  \"default_theme\": \"simple\",\n  \"engines\": [\n    {\n      \"categories\": [\n        \"map\"\n      ],\n      \"enabled\": true,\n      \"name\": \"openstreetmap\",\n      \"shortcut\": \"osm\"\n    },\n    {\n      \"categories\": [\n        \"it\"\n      ],\n      \"enabled\": true,\n      \"name\": \"arch linux wiki\",\n      \"shortcut\": \"al\"\n    },\n    {\n      \"categories\": [\n        \"images\"\n      ],\n      \"enabled\": true,\n      \"name\": \"google images\",\n      \"shortcut\": \"goi\"\n    },\n    {\n      \"categories\": [\n        \"it\"\n      ],\n      \"enabled\": false,\n      \"name\": \"bitbucket\",\n      \"shortcut\": \"bb\"\n    },\n  ],\n  \"instance_name\": \"searx\",\n  \"locales\": {\n    \"de\": \"Deutsch (German)\",\n    \"en\": \"English\",\n    \"eo\": \"Esperanto (Esperanto)\",\n  },\n  \"plugins\": [\n    {\n      \"enabled\": true,\n      \"name\": \"HTTPS rewrite\"\n    }\n  ],\n  \"safe_search\": 0\n}\n```\n\n----------------------------------------\n\nTITLE: Using RawTextQuery for Suggestion URLs in Python\nDESCRIPTION: Shows how RawTextQuery is used to generate suggestion URLs that maintain the same bang as the original query. This is used in the suggestions.html template.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/suggestion.rst#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n# use RawTextQuery to get the suggestion URLs with the same bang\n{\"url\" : \"!bang lorem ipsum ..\", \"title\": \"lorem ipsum\" }\n```\n\n----------------------------------------\n\nTITLE: Disabling NGINX Logs for Privacy\nDESCRIPTION: NGINX configuration snippet to disable access and error logs for better privacy.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_19\n\nLANGUAGE: nginx\nCODE:\n```\nhttp {\n    # ...\n    access_log /dev/null;\n    error_log  /dev/null;\n    # ...\n}\n```\n\n----------------------------------------\n\nTITLE: Installing and Enabling NGINX on Arch Linux\nDESCRIPTION: Commands to install, enable, and start NGINX on Arch Linux using pacman and systemctl.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H pacman -S nginx-mainline\nsudo -H systemctl enable nginx\nsudo -H systemctl start nginx\n```\n\n----------------------------------------\n\nTITLE: Setting Up Favicons Cache Directory with Bash Commands\nDESCRIPTION: Bash commands to create and configure the cache directory for SearXNG favicons. This creates a persistent cache location and sets appropriate permissions for the searxng user.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/searx.favicons.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo mkdir /var/cache/searxng\n$ sudo chown root:searxng /var/cache/searxng/\n$ sudo chmod g+w /var/cache/searxng/\n```\n\n----------------------------------------\n\nTITLE: Configuring Live Documentation Build with Custom Port\nDESCRIPTION: Example of using environment variables to configure sphinx-autobuild options, specifically to automatically select a free port for the documentation server.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/contribution_guide.rst#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ SPHINXOPTS=\"--port 0\" make docs.live\n...\n... Serving on http://0.0.0.0:50593\n...\n```\n\n----------------------------------------\n\nTITLE: Opening SearXNG in Web Browser\nDESCRIPTION: Command to open the locally running SearXNG instance in the default web browser.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-docker.rst#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ xdg-open \"http://localhost:$PORT\"\n```\n\n----------------------------------------\n\nTITLE: Automatic Redirect in SearXNG Search (Markdown)\nDESCRIPTION: Illustrates the use of '!!' within the search query to automatically redirect to the first result, similar to DuckDuckGo's 'Feeling Lucky' feature.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/en/search-syntax.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n{{search('!! Wau Holland')}}\n```\n\n----------------------------------------\n\nTITLE: Documenting SearXNG Result Types Base Module in Python\nDESCRIPTION: This snippet uses Python's automodule directive to automatically generate documentation for the searx.result_types._base module. It likely includes class definitions, methods, and other core components for handling search result types in SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/base_result.rst#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\n.. automodule:: searx.result_types._base\n```\n\n----------------------------------------\n\nTITLE: Listing and Managing Docker Containers\nDESCRIPTION: Commands to list running Docker containers, stop a specific container, and remove it. These are standard Docker commands for container management.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-docker.rst#2025-04-21_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n$ docker container ls\nCONTAINER ID   IMAGE             COMMAND                  CREATED         ...\n2f998d725993   searxng/searxng   \"/sbin/tini -- /usr/…\"   7 minutes ago   ...\n\n$ docker container stop 2f998\n$ docker container rm 2f998\n```\n\n----------------------------------------\n\nTITLE: Building SearXNG Docker Image from Source\nDESCRIPTION: Commands to clone the SearXNG repository, build a Docker image from the included Dockerfile, and view the resulting images. The build process tags the image with both 'latest' and version tags.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-docker.rst#2025-04-21_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n$ git clone https://github.com/searxng/searxng.git\n$ cd searxng\n$ make docker.build\n...\nSuccessfully built 49586c016434\nSuccessfully tagged searxng/searxng:latest\nSuccessfully tagged searxng/searxng:1.0.0-209-9c823800-dirty\n\n$ docker images\nREPOSITORY        TAG                        IMAGE ID       CREATED          SIZE\nsearxng/searxng   1.0.0-209-9c823800-dirty   49586c016434   13 minutes ago   308MB\nsearxng/searxng   latest                     49586c016434   13 minutes ago   308MB\nalpine            3.13                       6dbb9cc54074   3 weeks ago      5.61MB\n```\n\n----------------------------------------\n\nTITLE: Automatic Resolver Map Generation from YAML Configuration\nDESCRIPTION: Example showing how SearXNG automatically generates a TOML resolver map from a YAML configuration with a single favicon resolver.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/searx.favicons.rst#2025-04-21_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[favicons.proxy.resolver_map]\n\n\"duckduckgo\" = \"searx.favicons.resolvers.duckduckgo\"\n```\n\n----------------------------------------\n\nTITLE: Enabling SearXNG Site on Arch Linux\nDESCRIPTION: Commands to create a symlink for the SearXNG site configuration in NGINX on Arch Linux.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ln -s /etc/nginx/default.apps-available/searxng.conf \\\n               /etc/nginx/default.d/searxng.conf\n```\n\n----------------------------------------\n\nTITLE: Selecting Map Category in SearXNG Search (Markdown)\nDESCRIPTION: Shows how to use the '!' prefix to search in the map category for 'paris'.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/en/search-syntax.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- {{search('!map paris')}}\n```\n\n----------------------------------------\n\nTITLE: OSM Data Structure Definition in Python\nDESCRIPTION: Definition of the OSM (OpenStreetMap) data structure used in map result templates.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/templates.rst#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nosm = {\n    'type': str,\n    'id':   str,\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up SearXNG Development Environment\nDESCRIPTION: Commands to build and install a fully functional SearXNG suite in an Archlinux container.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ./utils/lxc.sh build searxng-archlinux\nsudo -H ./utils/lxc.sh install suite searxng-archlinux\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Docker Environment\nDESCRIPTION: Commands to stop all containers, perform system cleanup, and remove all Docker images. This is useful when you want to completely reset your Docker environment.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-docker.rst#2025-04-21_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n$ docker stop $(docker ps -aq)       # stop all containers\n$ docker system prune                # make some housekeeping\n$ docker rmi -f $(docker images -q)  # drop all images\n```\n\n----------------------------------------\n\nTITLE: Cloning SearXNG Repository in Bash\nDESCRIPTION: This snippet shows how to clone the SearXNG repository from GitHub. It navigates to the Downloads folder, clones the repository, and changes into the cloned directory.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-scripts.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cd ~/Downloads\n$ git clone https://github.com/searxng/searxng.git searxng\n$ cd searxng\n```\n\n----------------------------------------\n\nTITLE: Removing HTTP Sites for Filtron and Morty with Nginx\nDESCRIPTION: Commands to remove Nginx HTTP sites for filtron and morty when upgrading from older versions of searx to SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/update-searxng.rst#2025-04-21_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H ./utils/filtron.sh nginx remove\n$ sudo -H ./utils/morty.sh nginx remove\n```\n\n----------------------------------------\n\nTITLE: Enabling SearXNG Site on Fedora/RHEL\nDESCRIPTION: Commands to create a symlink for the SearXNG site configuration in NGINX on Fedora or RHEL-based systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ln -s /etc/nginx/default.apps-available/searxng.conf \\\n               /etc/nginx/conf.d/searxng.conf\n```\n\n----------------------------------------\n\nTITLE: Calculating Average in SearXNG\nDESCRIPTION: Shows how to use a special query to calculate the average of a set of numbers in SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/id/search-syntax.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n- {{search('avg 123 548 2.04 24.2')}}\n```\n\n----------------------------------------\n\nTITLE: Testing SOCKS Proxy with Server's IP in Bash\nDESCRIPTION: This command uses curl to test the SOCKS proxy by sending a request through it to check the IP address. It should return the server's IP address.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/answer-captcha.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -x socks://127.0.0.1:8080 http://ipecho.net/plain\nn.n.n.n\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Obsolete SearXNG Services\nDESCRIPTION: Commands to remove filtron, morty, and searx services when upgrading to SearXNG. These are required when migrating from older versions to clean up deprecated components.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/update-searxng.rst#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H ./utils/filtron.sh remove all\n$ sudo -H ./utils/morty.sh   remove all\n$ sudo -H ./utils/searx.sh   remove all\n```\n\n----------------------------------------\n\nTITLE: Running SearXNG Development Instance\nDESCRIPTION: Shows how to start a development instance of SearXNG using the 'make run' command, which enables debug mode and opens the application in a web browser.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/makefile.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ make run\n```\n\n----------------------------------------\n\nTITLE: Implementing Engine Data Response Handler in Python\nDESCRIPTION: Example of how to append engine data to results and pass tokens between requests and responses in SearXNG engines.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/templates.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndef response(resp):\n    ...\n    results.append({\n       'engine_data': token,\n       'key': 'next_page_token',\n    })\n    ...\n    return results\n\ndef request(query, params):\n    page_token = params['engine_data'].get('next_page_token')\n```\n\n----------------------------------------\n\nTITLE: Loading Apache Modules on Arch Linux and Fedora/RHEL\nDESCRIPTION: These Apache directives load necessary modules for SearXNG operation on Arch Linux and Fedora/RHEL systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_11\n\nLANGUAGE: apache\nCODE:\n```\nLoadModule ssl_module           modules/mod_ssl.so\nLoadModule headers_module       modules/mod_headers.so\nLoadModule proxy_module         modules/mod_proxy.so\nLoadModule proxy_http_module    modules/mod_proxy_http.so\nLoadModule proxy_uwsgi_module   modules/mod_proxy_uwsgi.so\n```\n\n----------------------------------------\n\nTITLE: Installing Project Runtimes with asdf\nDESCRIPTION: Commands to navigate to the project directory and install runtime versions specified in .tool-versions file\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/rtm_asdf.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cd /path/to/searxng\n$ asdf install          # will install runtimes listed in .tool-versions\n...\n```\n\n----------------------------------------\n\nTITLE: Installing MongoDB Python Driver in SearXNG Environment\nDESCRIPTION: Command to install the MongoDB Python driver (pymongo) in the SearXNG Python virtual environment. This is required for using the MongoDB engine.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/offline/nosql-engines.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo utils/searxng.sh instance cmd bash\n(searxng-pyenv)$ pip install pymongo\n```\n\n----------------------------------------\n\nTITLE: Restarting Services on Ubuntu/Debian\nDESCRIPTION: Commands to restart NGINX and uWSGI services for SearXNG on Ubuntu or Debian-based systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H systemctl restart nginx\nsudo -H service uwsgi restart searxng\n```\n\n----------------------------------------\n\nTITLE: Setting Up SearXNG Buildhost Environment\nDESCRIPTION: Command to install the SearXNG buildhost environment in LXC containers.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/utils/lxc.sh.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ./utils/lxc.sh cmd -- ./utils/searxng.sh install buildhost\n```\n\n----------------------------------------\n\nTITLE: Configuring uWSGI for SearXNG on Arch Linux\nDESCRIPTION: uWSGI configuration file for SearXNG on Arch Linux systems. It sets up a uWSGI instance that listens on a Unix socket and enables cache busting.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-uwsgi.rst#2025-04-21_snippet_1\n\nLANGUAGE: ini\nCODE:\n```\n[uwsgi]\nuid = searxng\ngid = searxng\n\n# disable logging for privacy\ndisable-logging = true\n\n# Number of workers (usually CPU count)\nworkers = 4\n\n# The right granted on the created socket\nchmod-socket = 666\n\n# Plugin to use and interpretor config\nplugin = python\nsingle-interpreter = true\n\n# Module to import\nmodule = searx.webapp\n\n# Setup up search instance environment\nenv = SEARXNG_SETTINGS_PATH=/etc/searxng/settings.yml\n\n# Virtualenv and python path\nvirtualenv = /usr/local/searxng\npythonpath = /usr/local/searxng\n\n# Cache Busting\noffload-threads = %k\nstatic-map = /static=/usr/local/searxng/searx/static\nroute-uri = ^/static/practi.ff22940e9968cf0461dd.css$ static:/usr/local/searxng/searx/static/practi.css\nroute-uri = ^/static/(.+) addheader:Cache-Control: public, max-age=31536000\nroute-uri = ^/static/themes/oscar/css/logicodev.1daf88f9cb5f4ee47261.css$ static:/usr/local/searxng/searx/static/themes/oscar/css/logicodev.css\n\nsocket = /run/uwsgi/searxng.sock\n```\n\n----------------------------------------\n\nTITLE: Files Template Data Structure - Python\nDESCRIPTION: Data structure for files template including file metadata like filename, size, time, and mime types.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/templates.rst#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfilename: str\nsize: str\ntime: str\nmtype: str  # audio | video | str\nsubtype: str\nabstract: str\nauthor: str\nembedded: str\n```\n\n----------------------------------------\n\nTITLE: Installing PDF Output Dependencies on Ubuntu/Debian\nDESCRIPTION: Installs additional packages required for PDF output generation on Ubuntu/Debian systems, including LaTeX and font packages.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/buildhosts.rst#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo apt texlive-latex-recommended texlive-extra-utils ttf-dejavu\n```\n\n----------------------------------------\n\nTITLE: Setting DocumentRoot in Apache Configuration\nDESCRIPTION: This Apache directive sets the document root directory for the server.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_5\n\nLANGUAGE: apache\nCODE:\n```\nDocumentRoot /var/www/html\n```\n\n----------------------------------------\n\nTITLE: Accessing Container Shell\nDESCRIPTION: Commands to open a root shell inside the container for administrative tasks.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo -H ./utils/lxc.sh cmd searxng-archlinux bash\n```\n\n----------------------------------------\n\nTITLE: Installing LXD Container System\nDESCRIPTION: Commands to install and initialize the LXD container system on the host machine using snap package manager.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ snap install lxd\n$ lxd init --auto\n```\n\n----------------------------------------\n\nTITLE: Basic Server Block in NGINX Configuration (Arch Linux)\nDESCRIPTION: Example of a basic server block in NGINX configuration for Arch Linux, listening on port 80 for localhost.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_7\n\nLANGUAGE: nginx\nCODE:\n```\nserver {\n    listen       80;\n    server_name  localhost;\n    # ...\n}\n```\n\n----------------------------------------\n\nTITLE: Building Correction URL Dictionary in Python\nDESCRIPTION: This snippet demonstrates how a more complex dictionary is built from the simple correction dict. It uses RawTextQuery to generate a URL with the same bang as the original query, and includes both the URL and the corrected search term as the title.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/correction.rst#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n# use RawTextQuery to get the corrections URLs with the same bang\n{\"url\" : \"!bang lorem ipsum ..\", \"title\": \"lorem ipsum ..\" }\n```\n\n----------------------------------------\n\nTITLE: Installing Latest Runtime Versions\nDESCRIPTION: Commands to install the latest versions of Go, Node.js, Python, and Shellcheck using asdf\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/rtm_asdf.rst#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ asdf install golang latest\n$ asdf install nodejs latest\n$ asdf install python latest\n$ asdf install shellcheck latest\n```\n\n----------------------------------------\n\nTITLE: Committing Static Build Products\nDESCRIPTION: Command to commit the build products after source code changes have been committed.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/quickstart.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmake static.build.commit\n```\n\n----------------------------------------\n\nTITLE: Defining Documentation Structure in reStructuredText\nDESCRIPTION: This snippet outlines the structure of the SearXNG documentation using reStructuredText syntax. It defines a table of contents with links to various sections of the documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/index.rst#2025-04-21_snippet_3\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n\n   user/index\n   own-instance\n   admin/index\n   dev/index\n   utils/index\n   src/index\n```\n\n----------------------------------------\n\nTITLE: Managing Development Environment\nDESCRIPTION: Commands to set up development environment by replacing container source with working tree.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ mv /usr/local/searxng/searxng-src  /usr/local/searxng/searxng-src.old\n$ ln -s /share/SearXNG/ /usr/local/searxng/searxng-src\n```\n\n----------------------------------------\n\nTITLE: Viewing NGINX Configuration on Ubuntu/Debian\nDESCRIPTION: Command to view the NGINX configuration file on Ubuntu or Debian-based systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nless /etc/nginx/nginx.conf\n```\n\n----------------------------------------\n\nTITLE: Favicon Proxy Configuration in TOML\nDESCRIPTION: TOML configuration for the favicon proxy settings, specifically the max_age parameter. This controls how long favicon responses remain fresh in the client's browser cache.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/searx.favicons.rst#2025-04-21_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[favicons.proxy]\n\nmax_age = 5184000             # 60 days / default: 7 days (604800 sec)\n```\n\n----------------------------------------\n\nTITLE: Defining Infobox Structure in Python\nDESCRIPTION: This snippet outlines the structure of an infobox result in SearXNG. It includes the main fields (img_src, infobox, content) and the subsections for attributes, urls, and relatedTopics. Each subsection is defined as a list of dictionaries with specific keys.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/infobox.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ninfobox_result = {\n    \"img_src\": str,  # URL of image or thumbnail\n    \"infobox\": str,  # Title of the info box\n    \"content\": str,  # Text of the info box\n    \"attributes\": [\n        {\n            \"label\": str,  # (mandatory)\n            \"value\": str,  # (mandatory)\n            \"image\": [\n                {\n                    \"src\": str,  # URL of image/thumbnail (mandatory)\n                    \"alt\": str,  # alternative text for the image (mandatory)\n                }\n            ]  # (optional)\n        }\n    ],\n    \"urls\": [\n        {\n            \"url\": str,  # URL of the link (mandatory)\n            \"title\": str,  # Title of the link (mandatory)\n        }\n    ],\n    \"relatedTopics\": [\n        {\n            \"name\": str,  # (mandatory)\n            \"suggestions\": [\n                {\n                    \"suggestion\": str  # suggested search term (mandatory)\n                }\n            ]  # (optional)\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Including Site Configurations in NGINX (Fedora/RHEL)\nDESCRIPTION: NGINX configuration line to include site-specific configurations from the conf.d directory.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_9\n\nLANGUAGE: nginx\nCODE:\n```\ninclude /etc/nginx/conf.d/*.conf;\n```\n\n----------------------------------------\n\nTITLE: Removing HTTP Sites for Filtron and Morty with Apache\nDESCRIPTION: Commands to remove Apache HTTP sites for filtron and morty when upgrading from older versions of searx to SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/update-searxng.rst#2025-04-21_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H ./utils/filtron.sh apache remove\n$ sudo -H ./utils/morty.sh apache remove\n```\n\n----------------------------------------\n\nTITLE: Restarting Apache and Triggering uWSGI Reload for SearXNG on Fedora/RHEL\nDESCRIPTION: These commands restart the Apache (httpd) web server and trigger a reload of the uWSGI configuration for SearXNG on Fedora or RHEL systems. They require sudo privileges to execute.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H systemctl restart httpd\nsudo -H touch /etc/uwsgi.d/searxng.ini\n```\n\n----------------------------------------\n\nTITLE: Starting the SearXNG Vite Development Server\nDESCRIPTION: Two alternative methods for starting the Vite development server for SearXNG. The first uses the project's manage script, and the second runs Vite directly from the client directory.\nSOURCE: https://github.com/searxng/searxng/blob/master/client/simple/README.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ ./manage vite.simple.dev\n\n# in folder ./client/simple/\n$ npm exec -- vite\n```\n\n----------------------------------------\n\nTITLE: Checking Redis Socket Permissions\nDESCRIPTION: Command to check access rights on the Redis socket file. This is important to ensure proper permissions are set for SearXNG to access the Redis instance.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_redis.rst#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nls -la /usr/local/searxng-redis/run/redis.sock\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Suggestion Result Structure in Python\nDESCRIPTION: Shows the basic structure of a suggestion result in SearXNG. It's a simple dictionary with a single key-value pair, where the key is 'suggestion' and the value is the suggested search term.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/suggestion.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n{\"suggestion\" : \"lorem ipsum ..\"}\n```\n\n----------------------------------------\n\nTITLE: Installing Apache on Ubuntu/Debian\nDESCRIPTION: This command installs the Apache HTTP server on Ubuntu or Debian systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H apt-get install apache2\n```\n\n----------------------------------------\n\nTITLE: Installing Runtime Dependencies\nDESCRIPTION: Command to install system dependencies required for building various runtime versions on Debian-based systems\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/rtm_asdf.rst#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo apt update\n$ sudo apt install \\\n         dirmngr gpg curl gawk coreutils build-essential libssl-dev zlib1g-dev \\\n         libbz2-dev libreadline-dev libsqlite3-dev \\\n         libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev\n```\n\n----------------------------------------\n\nTITLE: Documenting SearXNG Utils Module in Python\nDESCRIPTION: This code snippet uses Sphinx autodoc to generate documentation for the searx.utils module. It includes all members of the module in the generated documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/searx.utils.rst#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\n.. automodule:: searx.utils\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Building Documentation\nDESCRIPTION: Shows how to build the project documentation using the 'make docs' command, which generates HTML pages in the dist/docs directory.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/makefile.rst#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ make docs\nHTML ./docs --> file://\nDOCS      build build/docs/includes\n...\nThe HTML pages are in dist/docs.\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache to Disable Logs for SearXNG\nDESCRIPTION: This Apache configuration snippet provides two options for disabling logs related to SearXNG requests. The SetEnvIf directive disables logging for specific URIs, while the CustomLog directive disables logging for the entire server when SearXNG is at the root.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_19\n\nLANGUAGE: apache\nCODE:\n```\nSetEnvIf Request_URI \"/searxng\" dontlog\n# CustomLog /dev/null combined env=dontlog\n```\n\n----------------------------------------\n\nTITLE: Restarting SearXNG Docker Container\nDESCRIPTION: Command to restart the SearXNG Docker container after making configuration changes to settings.yml or uwsgi.ini.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-docker.rst#2025-04-21_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n$ docker container restart 2f998\n```\n\n----------------------------------------\n\nTITLE: Configuring Intersphinx Mapping in Sphinx Configuration\nDESCRIPTION: Python code snippet from the Sphinx configuration file (conf.py) showing how to set up intersphinx_mapping for external documentation references.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nintersphinx_mapping = {\n    \"python\": (\"https://docs.python.org/3/\", None),\n    \"flask\": (\"https://flask.palletsprojects.com/\", None),\n    \"jinja\": (\"https://jinja.palletsprojects.com/\", None),\n    \"linuxdoc\" : (\"https://return42.github.io/linuxdoc/\", None),\n    \"sphinx\" : (\"https://www.sphinx-doc.org/en/master/\", None),\n}\n```\n\n----------------------------------------\n\nTITLE: Creating NGINX Configuration Directory (Fedora/RHEL)\nDESCRIPTION: Command to create a directory for available sites in NGINX configuration on Fedora or RHEL-based systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p /etc/nginx/default.apps-available\n```\n\n----------------------------------------\n\nTITLE: Checking SearXNG Installation\nDESCRIPTION: Commands to enable debug mode, start the SearXNG webapp, and then disable debug mode.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\n# enable debug ..\n$ sudo -H sed -i -e \"s/debug : False/debug : True/g\" \"$SEARXNG_SETTINGS_PATH\"\n\n# start webapp\n$ sudo -H -u ${SERVICE_USER} -i\n(${SERVICE_USER})$ cd ${SEARXNG_SRC}\n(${SERVICE_USER})$ export SEARXNG_SETTINGS_PATH=\"${SEARXNG_SETTINGS_PATH}\"\n(${SERVICE_USER})$ python searx/webapp.py\n\n# disable debug\n$ sudo -H sed -i -e \"s/debug : True/debug : False/g\" \"$SEARXNG_SETTINGS_PATH\"\n```\n\n----------------------------------------\n\nTITLE: Cleaning Build Artifacts\nDESCRIPTION: Demonstrates the use of 'make clean' to remove all intermediate files and builds while keeping source files intact.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/makefile.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ make clean\nCLEAN     pyenv\nPYENV     [virtualenv] drop local/py3\nCLEAN     docs -- build/docs dist/docs\nCLEAN     themes -- locally installed npm dependencies\n...\nCLEAN     test stuff\nCLEAN     common files\n```\n\n----------------------------------------\n\nTITLE: Clean and Test After Version Change\nDESCRIPTION: Commands to install new runtime versions and clean existing environments before running tests\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/rtm_asdf.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ asdf install\n...\n$ make clean test\n```\n\n----------------------------------------\n\nTITLE: Installing Python Environment with Makefile\nDESCRIPTION: Uses the 'make install' command to set up a Python virtual environment and install SearXNG dependencies. Checks for changes in requirements files before rebuilding.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/makefile.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cd ~/searxng-clone\n$ make install\nPYENV     [virtualenv] installing ./requirements*.txt into local/py3\n...\nPYENV     [install] pip install --use-pep517 --no-build-isolation -e 'searx[test]'\n...\nSuccessfully installed searxng-2023.7.19+a446dea1b\n```\n\n----------------------------------------\n\nTITLE: Configuring Weblate Client (wlc) Settings\nDESCRIPTION: Configuration settings for the Weblate command-line client (wlc). This configuration file should be placed in ~/.config/weblate and requires an API key from the Weblate platform.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/translation.rst#2025-04-21_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\n[keys]\nhttps://translate.codeberg.org/api/ = APIKEY\n```\n\n----------------------------------------\n\nTITLE: Running Tests in SearXNG Container\nDESCRIPTION: Commands to execute tests inside the SearXNG container, showing both guest and host perspectives.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmake test\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ./utils/lxc.sh cmd searxng-archlinux  make test\n```\n\n----------------------------------------\n\nTITLE: Displaying User Agent in SearXNG\nDESCRIPTION: Illustrates a special query to display the user agent of the browser in SearXNG (if enabled).\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/id/search-syntax.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n- {{search('user-agent')}}\n```\n\n----------------------------------------\n\nTITLE: Python Object Reference - ResultContainer\nDESCRIPTION: Reference to the ResultContainer class that organizes search results before template rendering\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nresults.ResultContainer\n```\n\n----------------------------------------\n\nTITLE: Enabling Apache Modules on Ubuntu/Debian\nDESCRIPTION: These commands enable necessary Apache modules for SearXNG on Ubuntu or Debian systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H a2enmod ssl\nsudo -H a2enmod headers\nsudo -H a2enmod proxy\nsudo -H a2enmod proxy_http\nsudo -H a2enmod proxy_uwsgi\n```\n\n----------------------------------------\n\nTITLE: Building Live Documentation in Archlinux Container\nDESCRIPTION: Command to build and serve live documentation inside an Archlinux LXC container.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/utils/lxc.sh.rst#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ./utils/lxc.sh cmd searxng-archlinux make docs.clean docs.live\n```\n\n----------------------------------------\n\nTITLE: Installing SearXNG using searxng.sh script (Bash)\nDESCRIPTION: This command installs SearXNG by running the searxng.sh script with sudo privileges. It installs all components of SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/utils/searxng.sh.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ./utils/searx.sh install all\n```\n\n----------------------------------------\n\nTITLE: Defining SearXNG Features in reStructuredText\nDESCRIPTION: This snippet lists the key features of SearXNG using reStructuredText syntax. It includes information about self-hosting, privacy protection, supported search engines, translations, and development practices.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. sidebar::  features\n\n      - :ref:`self hosted <installation>`\n      - :ref:`no user tracking / no profiling <SearXNG protect privacy>`\n      - script & cookies are optional\n      - secure, encrypted connections\n      - :ref:`{{engines | length}} search engines <configured engines>`\n      - `58 translations <https://translate.codeberg.org/projects/searxng/searxng/>`_\n      - about 70 `well maintained <https://uptime.searxng.org/>`__ instances on searx.space_\n      - :ref:`easy integration of search engines <demo online engine>`\n      - professional development: `CI <https://github.com/searxng/searxng/actions>`_,\n\t`quality assurance <https://dev.searxng.org/>`_ &\n\t`automated tested UI <https://dev.searxng.org/screenshots.html>`_\n```\n\n----------------------------------------\n\nTITLE: Checking Desktop's IP without Proxy in Bash\nDESCRIPTION: This command uses curl to check the IP address without using the proxy. It should return the desktop's IP address for comparison.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/answer-captcha.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ curl http://ipecho.net/plain\nx.x.x.x\n```\n\n----------------------------------------\n\nTITLE: Providing SearXNG Security Contact Email in Markdown\nDESCRIPTION: This snippet provides the email address for reporting security vulnerabilities in SearXNG. It's formatted as inline code within a Markdown file to ensure clear visibility and easy access for potential reporters.\nSOURCE: https://github.com/searxng/searxng/blob/master/SECURITY.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n`security@searxng.org`\n```\n\n----------------------------------------\n\nTITLE: Loading Apache Modules on Arch Linux\nDESCRIPTION: These Apache directives load necessary modules for SearXNG operation on Arch Linux.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_8\n\nLANGUAGE: apache\nCODE:\n```\nLoadModule autoindex_module modules/mod_autoindex.so\n...\nInclude conf/extra/httpd-autoindex.conf\n```\n\n----------------------------------------\n\nTITLE: Formatting Python Code with Black\nDESCRIPTION: Uses the 'make format.python' command to format Python source code using the Black code style. References Makefile variables for configuration.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/makefile.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ make format.python\n```\n\n----------------------------------------\n\nTITLE: Installing LXD and Building SearXNG LXC Suite\nDESCRIPTION: Commands to install LXD, initialize it, and build the SearXNG LXC suite containers.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/utils/lxc.sh.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ snap install lxd\n$ lxd init --auto\n$ sudo -H ./utils/lxc.sh build\n```\n\n----------------------------------------\n\nTITLE: Defining Community Involvement in reStructuredText\nDESCRIPTION: This snippet outlines ways for the community to get involved with SearXNG using reStructuredText syntax. It encourages participation in translations, discussions, and bug reporting.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/index.rst#2025-04-21_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. sidebar:: be a part\n\n   SearXNG is driven by an open community, come join us!  Don't hesitate, no\n   need to be an *expert*, everyone can contribute:\n\n   - `help to improve translations <https://translate.codeberg.org/projects/searxng/searxng/>`_\n   - `discuss with the community <https://matrix.to/#/#searxng:matrix.org>`_\n   - report bugs & suggestions\n   - ...\n```\n\n----------------------------------------\n\nTITLE: Configuring IPTables for LXC Internet Connectivity\nDESCRIPTION: Script to reset iptables FORWARD chain policy to allow internet connectivity in LXC containers when Docker is installed.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/utils/lxc.sh.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/sh\niptables -F FORWARD\niptables -P FORWARD ACCEPT\n```\n\n----------------------------------------\n\nTITLE: Dropping Static Build Commit\nDESCRIPTION: Command to rewind the last build commit in the repository.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/quickstart.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmake static.build.drop\n```\n\n----------------------------------------\n\nTITLE: Defining Document Tree Structure in reStructuredText\nDESCRIPTION: This snippet defines the structure of the documentation tree, setting the maximum depth to 2 and including links to subsections on search syntax, configured engines, and general information.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/user/index.rst#2025-04-21_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n\n   search-syntax\n   configured_engines\n   about\n```\n\n----------------------------------------\n\nTITLE: Viewing NGINX Configuration on Fedora/RHEL\nDESCRIPTION: Command to view the NGINX configuration file on Fedora or RHEL-based systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nless /etc/nginx/nginx.conf\n```\n\n----------------------------------------\n\nTITLE: Coding Guidelines in Markdown\nDESCRIPTION: Clean code principles and coding guidelines for the project, referencing PEP 8 and PEP 20 standards.\nSOURCE: https://github.com/searxng/searxng/blob/master/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* Simpler is better. [KISS principle](https://en.wikipedia.org/wiki/KISS_principle)\n* Be consistent.\n* Every function must do one thing.\n* Use descriptive names for functions and variables.\n* Always look for the root cause.\n* Keep configurable data high level.\n* Avoid negative conditionals.\n* Prefer fewer arguments.\n* Do not add obvious comment to code.\n* Do not comment out code, just delete lines.\n```\n\n----------------------------------------\n\nTITLE: Building and Installing SearXNG Suite in LXC Containers\nDESCRIPTION: Commands to build and install the SearXNG suite in all or specific LXC containers.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/utils/lxc.sh.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo -H ./utils/lxc.sh build\n$ sudo -H ./utils/lxc.sh install suite\n\n# For a specific container:\n$ sudo -H ./utils/lxc.sh build searxng-archlinux\n$ sudo -H ./utils/lxc.sh install suite searxng-archlinux\n```\n\n----------------------------------------\n\nTITLE: Sphinx Math Configuration in Python\nDESCRIPTION: Configuration extract from the docs/conf.py file that sets up the imgmath extension for Sphinx documentation. It configures the math renderer to use imgmath instead of relying on CDNs for mathematical expressions.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/buildhosts.rst#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n# sphinx.ext.imgmath setup\n# sphinx.ext.imgmath setup END\n```\n\n----------------------------------------\n\nTITLE: Displaying Static File Build Help in Bash\nDESCRIPTION: This command displays help information for static file build tasks in SearXNG. It uses the 'manage' script to show available options for building static files.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/makefile.rst#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"cd ..; ./manage static.help\"\n```\n\n----------------------------------------\n\nTITLE: Installing NVM and Node.js with Makefile\nDESCRIPTION: Demonstrates how to install NVM (Node Version Manager) and Node.js using Makefile targets. Shows the output of installation and status checking commands.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/makefile.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ LANG=C make nvm.install\nINFO:  install (update) NVM at ./searxng/.nvm\nINFO:  clone: https://github.com/nvm-sh/nvm.git\n  || Cloning into './searxng/.nvm'...\nINFO:  checkout v0.39.4\n  || HEAD is now at 8fbf8ab v0.39.4\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ make nvm.nodejs\nINFO:  install (update) NVM at /share/searxng/.nvm\nINFO:  clone: https://github.com/nvm-sh/nvm.git\n...\nDownloading and installing node v16.13.0...\n...\nINFO:  Node.js is installed at searxng/.nvm/versions/node/v16.13.0/bin/node\nINFO:  Node.js is version v16.13.0\nINFO:  npm is installed at searxng/.nvm/versions/node/v16.13.0/bin/npm\nINFO:  npm is version 8.1.0\nINFO:  NVM is installed at searxng/.nvm\n```\n\n----------------------------------------\n\nTITLE: Installing SearXNG Dependencies on Arch Linux\nDESCRIPTION: Command to install necessary packages for SearXNG on Arch Linux using pacman.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H pacman -S --noconfirm \\\n${arch}\n```\n\n----------------------------------------\n\nTITLE: Installing asdf Version Manager\nDESCRIPTION: Commands to clone asdf repository and configure shell integration\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/rtm_asdf.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch <version>\n$ echo '. \"$HOME/.asdf/asdf.sh\"' >> ~/.bashrc\n$ echo '. \"$HOME/.asdf/completions/asdf.bash\"' >> ~/.bashrc\n```\n\n----------------------------------------\n\nTITLE: Installing asdf Plugins\nDESCRIPTION: Commands to list and install required asdf plugins for Go, Node.js, Python, and Shellcheck\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/rtm_asdf.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ asdf plugin-list-all | grep -E '(golang|python|nodejs|shellcheck).git'\ngolang                        https://github.com/asdf-community/asdf-golang.git\nnodejs                        https://github.com/asdf-vm/asdf-nodejs.git\npython                        https://github.com/danhper/asdf-python.git\nshellcheck                    https://github.com/luizm/asdf-shellcheck.git\n\n$ asdf plugin add golang https://github.com/asdf-community/asdf-golang.git\n$ asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n$ asdf plugin add python https://github.com/danhper/asdf-python.git\n$ asdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\n```\n\n----------------------------------------\n\nTITLE: Installing GraphViz and Image Processing Dependencies on Arch Linux\nDESCRIPTION: Installs the necessary packages on Arch Linux for better documentation output, including GraphViz for diagrams, ImageMagick for image processing, and XeTeX for math rendering.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/buildhosts.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo pacman -S graphviz imagemagick texlive-bin extra/librsvg\n```\n\n----------------------------------------\n\nTITLE: Displaying Redis Management Help in Bash\nDESCRIPTION: This command shows help information for Redis-related tasks in SearXNG. It uses the 'manage' script to display available Redis management options.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/makefile.rst#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"cd ..; ./manage redis.help\"\n```\n\n----------------------------------------\n\nTITLE: Managing Source Links\nDESCRIPTION: Example output showing the symbolic link setup for development sources.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_10\n\nLANGUAGE: text\nCODE:\n```\nlink SearXNG's sources to: /share/SearXNG\n=========================================\n\nmv -f \"/usr/local/searxng/searxng-src\" \"/usr/local/searxng/searxng-src.backup\"\nln -s \"/share/SearXNG\" \"/usr/local/searxng/searxng-src\"\nls -ld /usr/local/searxng/searxng-src\n  |searxng| lrwxrwxrwx 1 searxng searxng ... /usr/local/searxng/searxng-src -> /share/SearXNG\n```\n\n----------------------------------------\n\nTITLE: Selecting Wikipedia Engine in SearXNG Search (Markdown)\nDESCRIPTION: Demonstrates how to use the '!' prefix to search specifically in Wikipedia for the term 'paris'.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/en/search-syntax.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- {{search('!wp paris')}}\n- {{search('!wikipedia paris')}}\n```\n\n----------------------------------------\n\nTITLE: Installing SearXNG Build Dependencies on Ubuntu/Debian\nDESCRIPTION: Command to install build dependencies for SearXNG on Ubuntu or Debian-based systems using apt-get.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H apt-get install -y \\\n${debian_build}\n```\n\n----------------------------------------\n\nTITLE: Configuring DocumentRoot and Directory Options on Fedora/RHEL\nDESCRIPTION: This Apache configuration sets the document root and directory options for Fedora or RHEL systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_9\n\nLANGUAGE: apache\nCODE:\n```\nDocumentRoot \"/var/www/html\"\n...\n<Directory \"/var/www\">\n    AllowOverride None\n    # Allow open access:\n    Require all granted\n</Directory>\n```\n\n----------------------------------------\n\nTITLE: Restarting Apache and uWSGI Services for SearXNG on Arch Linux\nDESCRIPTION: These commands restart the Apache (httpd) web server and the uWSGI service for SearXNG on Arch Linux systems. They require sudo privileges to execute.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H systemctl restart httpd\nsudo -H systemctl restart uwsgi@searxng\n```\n\n----------------------------------------\n\nTITLE: Installing GraphViz and Image Processing Dependencies on Fedora/RHEL\nDESCRIPTION: Installs the necessary packages on Fedora/RHEL systems for better documentation output, including GraphViz for diagrams, ImageMagick for image processing, and XeTeX for math rendering.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/buildhosts.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo dnf install graphviz graphviz-gd ImageMagick texlive-xetex-bin librsvg2-tools\n```\n\n----------------------------------------\n\nTITLE: Image Search for Cats in SearXNG\nDESCRIPTION: Illustrates how to perform an image search for 'cats' using the '!images' prefix in SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/id/search-syntax.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- {{search('!images kucing')}}\n```\n\n----------------------------------------\n\nTITLE: Writing Math Equations in reST\nDESCRIPTION: Example showing how to include LaTeX math equations in reST documentation using math roles and directives\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_17\n\nLANGUAGE: reST\nCODE:\n```\nIn :math:numref:`schroedinger general` the time-dependent Schrödinger equation\nis shown.\n\n.. math::\n   :label: schroedinger general\n\n    \\mathrm{i}\\hbar\\dfrac{\\partial}{\\partial t} |\\,\\psi (t) \\rangle =\n          \\hat{H} |\\,\\psi (t) \\rangle.\n```\n\n----------------------------------------\n\nTITLE: Installing ShellCheck for Shell Script Linting on Arch Linux\nDESCRIPTION: Installs ShellCheck, a static analysis tool for shell scripts, on Arch Linux to verify the quality of shell scripts in the project.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/buildhosts.rst#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo pacman -S shellcheck\n```\n\n----------------------------------------\n\nTITLE: Basic Favicons TOML Configuration\nDESCRIPTION: TOML configuration for SearXNG favicons with schema version and cache settings. This defines the configuration schema version which is required for the favicons system.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/searx.favicons.rst#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[favicons]\n\ncfg_schema = 1   # config's schema version no.\n\n[favicons.cache]\n\ndb_url = \"/var/cache/searxng/faviconcache.db\"  # default: \"/tmp/faviconcache.db\"\nLIMIT_TOTAL_BYTES = 2147483648                 # 2 GB / default: 50 MB\n# HOLD_TIME = 5184000                            # 60 days / default: 30 days\n# BLOB_MAX_BYTES = 40960                         # 40 KB / default 20 KB\n# MAINTENANCE_MODE = \"off\"                       # default: \"auto\"\n# MAINTENANCE_PERIOD = 600                       # 10min / default: 1h\n```\n\n----------------------------------------\n\nTITLE: Installing SearXNG Dependencies on Ubuntu/Debian\nDESCRIPTION: Command to install necessary packages for SearXNG on Ubuntu or Debian-based systems using apt-get.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H apt-get install -y \\\n${debian}\n```\n\n----------------------------------------\n\nTITLE: Including Site Configurations in Apache on Arch Linux and Fedora/RHEL\nDESCRIPTION: This Apache directive includes site configurations from the sites-enabled directory.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_13\n\nLANGUAGE: apache\nCODE:\n```\nIncludeOptional sites-enabled/*.conf\n```\n\n----------------------------------------\n\nTITLE: Generating Random UUID in SearXNG\nDESCRIPTION: Demonstrates a special query to generate a random UUID using SearXNG's built-in functionality.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/id/search-syntax.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n- {{search('random uuid')}}\n```\n\n----------------------------------------\n\nTITLE: Grid Table in reStructuredText\nDESCRIPTION: Shows how to create a grid table with both colspan and rowspan support in reStructuredText.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_13\n\nLANGUAGE: reST\nCODE:\n```\n.. table:: grid table example\n   :widths: 1 1 5\n\n   +------------+------------+-----------+\n   | Header 1   | Header 2   | Header 3  |\n   +============+============+===========+\n   | body row 1 | column 2   | column 3  |\n   +------------+------------+-----------+\n   | body row 2 | Cells may span columns.|\n   +------------+------------+-----------+\n   | body row 3 | Cells may  | - Cells   |\n   +------------+ span rows. | - contain |\n   | body row 4 |            | - blocks. |\n   +------------+------------+-----------+\n```\n\n----------------------------------------\n\nTITLE: Selecting Wikipedia Engine for Jakarta Search in SearXNG\nDESCRIPTION: Demonstrates how to use the '!' prefix to specify the Wikipedia search engine when searching for 'Jakarta' in SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/id/search-syntax.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- {{search('!wp Jakarta')}}\n- {{search('!wikipedia Jakarta')}}\n```\n\n----------------------------------------\n\nTITLE: Installing PDF Output Dependencies on Arch Linux\nDESCRIPTION: Installs additional packages required for PDF output generation on Arch Linux, including LaTeX and font packages.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/buildhosts.rst#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo pacman -S texlive-core texlive-latexextra ttf-dejavu\n```\n\n----------------------------------------\n\nTITLE: Installing PDF Output Dependencies on Fedora/RHEL\nDESCRIPTION: Installs additional packages required for PDF output generation on Fedora/RHEL systems, including LaTeX and font packages.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/buildhosts.rst#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo dnf install \\\n    texlive-collection-fontsrecommended texlive-collection-latex \\\n    dejavu-sans-fonts dejavu-serif-fonts dejavu-sans-mono-fonts\n```\n\n----------------------------------------\n\nTITLE: Installing SearXNG Dependencies on Fedora/RHEL\nDESCRIPTION: Command to install necessary packages for SearXNG on Fedora or RHEL-based systems using dnf.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H dnf install -y \\\n${fedora}\n```\n\n----------------------------------------\n\nTITLE: Including Site Configurations in NGINX (Ubuntu/Debian)\nDESCRIPTION: NGINX configuration line to include site-specific configurations from the sites-enabled directory.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_5\n\nLANGUAGE: nginx\nCODE:\n```\ninclude /etc/nginx/sites-enabled/*;\n```\n\n----------------------------------------\n\nTITLE: Building Extended Suggestion Result Dictionary in Python\nDESCRIPTION: Demonstrates how a more detailed suggestion result dictionary is constructed from the basic suggestion. It includes a URL (which is actually a search query) and a title.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/suggestion.rst#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n{\"url\" : \"!bang lorem ipsum ..\", \"title\": \"lorem ipsum\" }\n```\n\n----------------------------------------\n\nTITLE: Simple Table in reStructuredText\nDESCRIPTION: Demonstrates creating a simple table with colspan support and metadata using the table directive.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_12\n\nLANGUAGE: reST\nCODE:\n```\n.. table:: foo gate truth table\n   :widths: grid\n   :align: left\n\n   ====== ====== ======\n       Inputs    Output\n   ------------- ------\n   A      B      A or B\n   ====== ====== ======\n   False\n   --------------------\n   True\n   --------------------\n   True   False  True\n          (foo)\n   ------ ------ ------\n   False  True\n          (foo)\n   ====== =============\n```\n\n----------------------------------------\n\nTITLE: Configuring DocumentRoot and Directory Options on Arch Linux\nDESCRIPTION: This Apache configuration sets the document root and directory options for Arch Linux.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_7\n\nLANGUAGE: apache\nCODE:\n```\nDocumentRoot \"/srv/http\"\n<Directory \"/srv/http\">\n    Options Indexes FollowSymLinks\n    AllowOverride None\n    Require all granted\n</Directory>\n```\n\n----------------------------------------\n\nTITLE: Querying SearXNG Search API using GET Method\nDESCRIPTION: These are the two main endpoints for querying the SearXNG search API using the GET method. They accept various parameters to customize the search behavior.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/search_api.rst#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /\n\nGET /search\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for SearXNG's Simple Client\nDESCRIPTION: Command to install NPM dependencies for the simple client interface in the SearXNG project. This must be run in the ./client/simple/ directory.\nSOURCE: https://github.com/searxng/searxng/blob/master/client/simple/README.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# in folder ./client/simple/\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Configuring SearXNG Brand URLs in YAML\nDESCRIPTION: YAML configuration block that defines the main URLs for SearXNG's brand settings. Includes customizable URLs for issue tracking, documentation, public instances listing, and wiki access.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/settings/settings_brand.rst#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nbrand:\n  issue_url: https://github.com/searxng/searxng/issues\n  docs_url: https://docs.searxng.org\n  public_instances: https://searx.space\n  wiki_url: https://github.com/searxng/searxng/wiki\n```\n\n----------------------------------------\n\nTITLE: Displaying Engine Count using Jinja in reStructuredText\nDESCRIPTION: This snippet uses Jinja templating to display the total number of search engines supported by SearXNG and the number of engines enabled by default.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/user/configured_engines.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. jinja:: searx\n\n   SearXNG supports {{engines | length}} search engines of which\n   {{enabled_engine_count}} are enabled by default.\n```\n\n----------------------------------------\n\nTITLE: Authors Data Type Definition - Python\nDESCRIPTION: Type definition for authors list in search results, specified as a List of strings.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/templates.rst#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nauthors : List[str]\n```\n\n----------------------------------------\n\nTITLE: Setting Language Filter for Wikipedia Search in SearXNG\nDESCRIPTION: Shows how to use the ':' prefix to set the language filter for a Wikipedia search in SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/id/search-syntax.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n- {{search(':en !wp Jakarta')}}\n```\n\n----------------------------------------\n\nTITLE: Creating Apache Site Directories on Arch Linux and Fedora/RHEL\nDESCRIPTION: These commands create directories for available and enabled sites on Arch Linux and Fedora/RHEL systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p /etc/httpd/sites-available\nmkdir -p /etc/httpd/sites-enabled\n```\n\n----------------------------------------\n\nTITLE: Selecting Language in SearXNG Search (Markdown)\nDESCRIPTION: Demonstrates how to use the ':' prefix to specify a language filter in combination with an engine selection.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/en/search-syntax.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{search(':fr !wp Wau Holland')}}\n```\n\n----------------------------------------\n\nTITLE: Building SearXNG's Simple Client\nDESCRIPTION: Command to fix code issues and build the production version of the SearXNG simple client using the project's manage script.\nSOURCE: https://github.com/searxng/searxng/blob/master/client/simple/README.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ ./manage vite.simple.build\n```\n\n----------------------------------------\n\nTITLE: Importing Google Autocomplete Function in Python\nDESCRIPTION: This snippet demonstrates the import of the Google Autocomplete function from the searx.autocomplete module. It uses Python's autofunction directive to include the google_complete function.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/google.rst#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n.. autofunction:: searx.autocomplete.google_complete\n```\n\n----------------------------------------\n\nTITLE: Importing Command Engine Module in Python for SearXNG\nDESCRIPTION: This snippet demonstrates how to import and use the command engine module in SearXNG. It provides access to the functionality of command line engines within the search framework.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/offline/command-line-engines.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n.. automodule:: searx.engines.command\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Documentation Structure in Markdown\nDESCRIPTION: Markdown structure showing project documentation resources and links to development quickstart and contribution guides.\nSOURCE: https://github.com/searxng/searxng/blob/master/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# How to contribute\n\n## Resources in the documentation\n\n* [Development quickstart](https://docs.searxng.org/dev/quickstart.html)\n* [Contribution guide](https://docs.searxng.org/dev/contribution_guide.html)\n```\n\n----------------------------------------\n\nTITLE: Using External Search Engine Bang for Wikipedia in SearXNG\nDESCRIPTION: Illustrates the use of the '!!' prefix to perform a search using DuckDuckGo's external bang for Wikipedia in English.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/id/search-syntax.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n- {{search('!!wen cat')}}\n```\n\n----------------------------------------\n\nTITLE: Checking Search Engines\nDESCRIPTION: Shows how to use the 'make search.checker' command to check all search engines or a specific engine, with options for debugging and filtering HTTP redirects.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/makefile.rst#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nmake search.checker\n\nmake search.checker.google_news\n\nmake SEARXNG_DEBUG=1 search.checker.google_news\n\nmake SEARXNG_DEBUG=1 search.checker.google_news | grep -A1 \"HTTP/1.1\\\" 3[0-9][0-9]\"\n```\n\n----------------------------------------\n\nTITLE: Importing Google Videos Engine Module in Python\nDESCRIPTION: This snippet shows the import of the Google Videos search engine module in SearXNG. It uses Python's automodule directive to include all members of the searx.engines.google_videos module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/google.rst#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n.. automodule:: searx.engines.google_videos\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Literal Blocks in reStructuredText\nDESCRIPTION: Example showing the usage of literal blocks in reStructuredText using double colons (::).\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_3\n\nLANGUAGE: reST\nCODE:\n```\n::\n\n  Literal block\n\nLorem ipsum dolor::\n\n  Literal block\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\neirmod tempor invidunt ut labore ::\n\n  Literal block\n```\n\n----------------------------------------\n\nTITLE: Generating Hash Digests in SearXNG\nDESCRIPTION: Demonstrates special queries to generate MD5 and SHA512 hash digests of a given string in SearXNG (if enabled).\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/id/search-syntax.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n- {{search('md5 kucing sphynx')}}\n- {{search('sha512 kucing sphynx')}}\n```\n\n----------------------------------------\n\nTITLE: Documenting SXNGPlugin Class for Self-Info in SearXNG using Sphinx\nDESCRIPTION: This snippet uses Sphinx's autoclass directive to generate documentation for the SXNGPlugin class from the searx.plugins.self_info module. It includes all members of the class in the documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/plugins/self_info.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. autoclass:: searx.plugins.self_info.SXNGPlugin\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Products Template Data Structure - Python\nDESCRIPTION: Data structure for products template containing product information including content, price, shipping details.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/templates.rst#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\ncontent: str\nprice: str\nshipping: str\nsource_country: str\n```\n\n----------------------------------------\n\nTITLE: Building Documentation\nDESCRIPTION: Commands to build the SearXNG documentation on a buildhost.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nmake docs.html\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ./utils/lxc.sh cmd searxng-archlinux make docs.html\n```\n\n----------------------------------------\n\nTITLE: Importing Mullvad-Leta Engine Module in reStructuredText\nDESCRIPTION: This directive automatically imports and displays the documentation for the searx.engines.mullvad_leta module including all its members. It's part of the Sphinx documentation system.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/mullvad_leta.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: searx.engines.mullvad_leta\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Creating hlist in reStructuredText\nDESCRIPTION: Demonstrates how to create a horizontal list (hlist) in reStructuredText to make bullet lists more compact.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_6\n\nLANGUAGE: reST\nCODE:\n```\n.. hlist::\n\n   - first list item\n   - second list item\n   - third list item\n   ...\n```\n\n----------------------------------------\n\nTITLE: Importing Google News Engine Module in Python\nDESCRIPTION: This code imports the Google News search engine module in SearXNG. It uses Python's automodule directive to include all members of the searx.engines.google_news module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/google.rst#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n.. automodule:: searx.engines.google_news\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Documentation for SearXNG Hostnames Plugin\nDESCRIPTION: This snippet uses Sphinx's automodule directive to automatically generate documentation for the hostnames plugin in SearXNG. It includes all class and function members of the module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/plugins/hostnames.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: searx.plugins.hostnames\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Map Links and Data Structure Definition in Python\nDESCRIPTION: Definition of the links and data structures used in map result templates.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/templates.rst#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nlinks.append({\n    'label'       : str,\n    'url'         : str,\n    'url_label'   : str,  # set by some engines but unused (oscar)\n})\n```\n\nLANGUAGE: python\nCODE:\n```\ndata.append({\n   'label'   : str,\n   'value'   : str,\n   'key'     : str,  # set by some engines but unused\n})\n```\n\n----------------------------------------\n\nTITLE: Creating NGINX Configuration Directories (Arch Linux)\nDESCRIPTION: Commands to create directories for available and enabled sites in NGINX configuration on Arch Linux.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p /etc/nginx/default.d\nmkdir -p /etc/nginx/default.apps-available\n```\n\n----------------------------------------\n\nTITLE: Including Void Linux Engine Module Documentation in RST\nDESCRIPTION: This RST directive automatically includes documentation for the searx.engines.voidlinux module, displaying all members and their documentation. This is part of the Sphinx documentation system.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/void.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: searx.engines.voidlinux\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Definition Lists in reStructuredText\nDESCRIPTION: Shows how to create definition lists with terms, classifiers and definitions in reStructuredText format.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_7\n\nLANGUAGE: reST\nCODE:\n```\nterm 1 (up to a line of text)\n    Definition 1.\n\nSee the typo : this line is not a term!\n\n  And this is not term's definition.  **There is a blank line** in between\n  the line above and this paragraph.  That's why this paragraph is taken as\n  **block quote** (:duref:`ref <block-quotes>`) and not as term's definition!\n\nterm 2\n    Definition 2, paragraph 1.\n\n    Definition 2, paragraph 2.\n\nterm 3 : classifier\n    Definition 3.\n\nterm 4 : classifier one : classifier two\n    Definition 4.\n```\n\n----------------------------------------\n\nTITLE: Structuring Anna's Archive Documentation with reStructuredText\nDESCRIPTION: This snippet defines the documentation structure for the Anna's Archive engine module in SearxNG using reStructuredText format. It includes a title, table of contents configuration, and an automodule directive to import documentation from the Python module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/annas_archive.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _annas_archive engine:\n\n==============\nAnna's Archive\n==============\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.annas_archive\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Testing SearXNG with curl\nDESCRIPTION: Command to test SearXNG installation using curl, showing the expected output.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_14\n\nLANGUAGE: none\nCODE:\n```\n$ curl --location --verbose --head --insecure $SEARXNG_INTERNAL_HTTP\n\n*   Trying 127.0.0.1:8888...\n* TCP_NODELAY set\n* Connected to 127.0.0.1 (127.0.0.1) port 8888 (#0)\n> HEAD / HTTP/1.1\n> Host: 127.0.0.1:8888\n> User-Agent: curl/7.68.0\n> Accept: */*\n>\n* Mark bundle as not supporting multiuse\n* HTTP 1.0, assume close after body\n< HTTP/1.0 200 OK\nHTTP/1.0 200 OK\n...\n```\n\n----------------------------------------\n\nTITLE: Address Data Structure Definition in Python\nDESCRIPTION: Definition of the address dictionary structure used in map result templates.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/templates.rst#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\naddress = {\n    'name'          : str,  # name of object\n    'road'          : str,  # street name of object\n    'house_number'  : str,  # house number of object\n    'postcode'      : str,  # postcode of object\n    'country'       : str,  # country of object\n    'country_code'  : str,\n    'locality'      : str,\n}\n```\n\n----------------------------------------\n\nTITLE: Including Site-Specific Configurations in NGINX (Arch Linux)\nDESCRIPTION: NGINX configuration snippet to include site-specific configurations from the default.d directory on Arch Linux.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_11\n\nLANGUAGE: nginx\nCODE:\n```\nserver {\n    # ...\n    include /etc/nginx/default.d/*.conf;\n    # ...\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Tineye Module Structure in reStructuredText\nDESCRIPTION: This snippet defines the structure of the Tineye engine documentation using reStructuredText. It includes a title, table of contents, and an automodule directive for the searx.engines.tineye module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online_url_search/tineye.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _tineye engine:\n\n======\nTineye\n======\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.tineye\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Configuring RST Documentation Structure for RadioBrowser\nDESCRIPTION: Sets up the reStructuredText documentation structure for the RadioBrowser engine module, including table of contents configuration and module autodoc directive.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/radio_browser.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _RadioBrowser engine:\n\n============\nRadioBrowser\n============\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.radio_browser\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Defining reStructuredText Document Structure for Arch Linux Engine\nDESCRIPTION: This snippet sets up the document structure for the Arch Linux engine documentation using reStructuredText. It defines the title, table of contents, and includes an auto-generated module reference.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/archlinux.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _archlinux engine:\n\n==========\nArch Linux\n==========\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.archlinux\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Building a Table of Configured SearXNG Plugins using Jinja Templating in reStructuredText\nDESCRIPTION: This snippet uses Jinja templating within a reStructuredText document to dynamically generate a table of all SearXNG plugins. The table displays each plugin's name, activation status, and description by iterating through the plugins collection.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/plugins.rst#2025-04-21_snippet_0\n\nLANGUAGE: jinja\nCODE:\n```\n.. jinja:: searx\n\n   .. flat-table:: Plugins configured at built time (defaults)\n      :header-rows: 1\n      :stub-columns: 1\n      :widths: 3 1 9\n\n      * - Name\n        - Active\n        - Description\n\n      {% for plg in plugins %}\n\n      * - {{plg.info.name}}\n        - {{(plg.active and \"yes\") or \"no\"}}\n        - {{plg.info.description}}\n\n      {% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Viewing Apache Default Configuration on Ubuntu/Debian\nDESCRIPTION: This command displays the default Apache configuration file on Ubuntu or Debian systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nless /etc/apache2/sites-enabled/000-default.conf\n```\n\n----------------------------------------\n\nTITLE: Container Service Management\nDESCRIPTION: Commands for managing services and viewing container information.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nsudo -H ./utils/lxc.sh cmd searxng-archlinux systemctl restart uwsgi@searxng\nsudo -H ./utils/lxc.sh cmd -- FORCE_TIMEOUT=0 ./utils/searxng.sh install nginx\n```\n\n----------------------------------------\n\nTITLE: RST Documentation Structure for Hugging Face Engine\nDESCRIPTION: ReStructuredText format documentation outline defining the Hugging Face engine module documentation with auto-generated API docs\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/huggingface.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _huggingface engine:\n\n============\nHugging Face\n============\n\n.. automodule:: searx.engines.huggingface\n   :members:\n```\n\n----------------------------------------\n\nTITLE: RST Header and Table of Contents Configuration\nDESCRIPTION: ReStructuredText markup for the Piped engine documentation page, including header, title, table of contents configuration, and module autodoc directive.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/piped.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _piped engine:\n\n=====\nPiped\n=====\n\n.. contents:: Contents\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.piped\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Opening SearXNG in Web Browser\nDESCRIPTION: Command to open SearXNG in the default web browser.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_13\n\nLANGUAGE: sh\nCODE:\n```\n$ xdg-open http://$SEARXNG_INTERNAL_HTTP\n```\n\n----------------------------------------\n\nTITLE: Viewing Apache Configuration on Arch Linux\nDESCRIPTION: This command displays the Apache configuration file on Arch Linux systems.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-apache.rst#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nless /etc/httpd/conf/httpd.conf\n```\n\n----------------------------------------\n\nTITLE: Viewing Container Information\nDESCRIPTION: Example output showing container configuration and service information.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_12\n\nLANGUAGE: text\nCODE:\n```\n$ sudo -H ./utils/lxc.sh show suite searxng-archlinux\n[searxng-archlinux]  INFO:  (eth0) docs-live:  http:///n.n.n.140:8080/\n[searxng-archlinux]  INFO:  (eth0) IPv6:       http://[fd42:555b:2af9:e121:216:3eff:fe5b:1744]\n[searxng-archlinux]  uWSGI:\n[searxng-archlinux]    SEARXNG_UWSGI_SOCKET : /usr/local/searxng/run/socket\n[searxng-archlinux]  environment /usr/local/searxng/searxng-src/utils/brand.env:\n[searxng-archlinux]    GIT_URL              : https://github.com/searxng/searxng\n[searxng-archlinux]    GIT_BRANCH           : master\n[searxng-archlinux]    SEARXNG_URL          : http:///n.n.n.140/searxng\n[searxng-archlinux]    SEARXNG_PORT         : 8888\n[searxng-archlinux]    SEARXNG_BIND_ADDRESS : 127.0.0.1\n```\n\n----------------------------------------\n\nTITLE: Defining Sphinx Documentation Structure for Seekr Engines\nDESCRIPTION: This RST (reStructuredText) snippet defines the documentation structure for the Seekr engines in SearXNG. It includes a title, table of contents configuration, and an automodule directive that automatically generates documentation from the searx.engines.seekr Python module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/seekr.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _seekr engine:\n\n=============\nSeekr Engines\n=============\n\n.. contents:: Contents\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.seekr\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Documentation for Demo Online Engine in reStructuredText\nDESCRIPTION: This snippet sets up the structure for Sphinx documentation of the demo_online engine module. It includes a table of contents and uses the automodule directive to automatically generate documentation from the module's docstrings.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/demo/demo_online.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _demo online engine:\n\n==================\nDemo Online Engine\n==================\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.demo_online\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Configuring YaCy Module Documentation with reStructuredText\nDESCRIPTION: This snippet configures the documentation for the YaCy search engine module in SearXNG. It creates a reference label, sets up a title, defines a table of contents, and uses the automodule directive to automatically include documentation from the searx.engines.yacy Python module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/yacy.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _yacy engine:\n\n====\nYacy\n====\n\n.. contents:: Contents\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.yacy\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Defining JSON Engine Documentation Structure in reStructuredText\nDESCRIPTION: This RST code defines the structure for the JSON Engine documentation in SearXNG. It includes a title, table of contents, and uses autodoc to generate module documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/json_engine.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _json_engine engine:\n\n============\nJSON Engine\n============\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.json_engine\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Installing ShellCheck for Shell Script Linting on Ubuntu/Debian\nDESCRIPTION: Installs ShellCheck, a static analysis tool for shell scripts, on Ubuntu/Debian systems to verify the quality of shell scripts in the project.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/buildhosts.rst#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo apt install shellcheck\n```\n\n----------------------------------------\n\nTITLE: Displaying Go Tasks Help in Bash\nDESCRIPTION: This command presents help information for Go-related tasks in SearXNG. It utilizes the 'manage' script to show available options for Go programming tasks.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/makefile.rst#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"cd ..; ./manage go.help\"\n```\n\n----------------------------------------\n\nTITLE: Generating Table of Contents in reStructuredText\nDESCRIPTION: This snippet creates a table of contents for the MediaWiki engine documentation. It sets the depth to 2, makes it local, and includes backlinks to the entry point.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/mediawiki.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n```\n\n----------------------------------------\n\nTITLE: Sphinx Documentation Structure for demo_offline Engine in SearxNG\nDESCRIPTION: RST (reStructuredText) markup defining the documentation structure for the demo_offline engine in SearxNG. It includes a reference label, section headers, table of contents configuration, and an automodule directive to automatically include Python module documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/demo/demo_offline.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _demo offline engine:\n\n===================\nDemo Offline Engine\n===================\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.demo_offline\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Generating Engine Tables using Jinja and reStructuredText\nDESCRIPTION: This complex snippet uses Jinja templating within reStructuredText to generate tables of configured search engines. It iterates through categories and engine groups, displaying detailed information for each engine.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/user/configured_engines.rst#2025-04-21_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. jinja:: searx\n\n   {% for category, engines in categories_as_tabs.items() %}\n\n   tab ``!{{category.replace(' ', '_')}``\n   ---------------------------------------\n\n   {% for group, group_bang, engines in engines | group_engines_in_tab %}\n\n   {% if loop.length > 1 %}\n   {% if group_bang %}group ``{{group_bang}}``{% else %}{{group}}{% endif %}\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   {% endif %}\n\n   .. flat-table::\n      :header-rows: 2\n      :stub-columns: 1\n      :widths: 10 1 10 1 1 1 1 1 1 1\n\n      * - :cspan:`5` Engines configured by default (in :ref:`settings.yml <engine settings>`)\n        - :cspan:`3` :ref:`Supported features <engine file>`\n\n      * - Name\n        - !bang\n        - Module\n        - Disabled\n        - Timeout\n        - Weight\n        - Paging\n        - Locale\n        - Safe search\n        - Time range\n\n      {% for mod in engines %}\n\n      * - `{{mod.name}} <{{mod.about and mod.about.website}}>`_\n          {%- if mod.about and  mod.about.language %}\n          ({{mod.about.language | upper}})\n          {%- endif %}\n        - ``!{{mod.shortcut}}``\n        - {%- if 'searx.engines.' + mod.__name__ in documented_modules %}\n          :py:mod:`~searx.engines.{{mod.__name__}}`\n          {%- else %}\n          :origin:`{{mod.__name__}} <searx/engines/{{mod.__name__}}.py>`\n          {%- endif %}\n        - {{(mod.disabled and \"y\") or \"\"}}\n        - {{mod.timeout}}\n        - {{mod.weight or 1 }}\n        {% if mod.engine_type == 'online' %}\n        - {{(mod.paging and \"y\") or \"\"}}\n        - {{(mod.language_support and \"y\") or \"\"}}\n        - {{(mod.safesearch and \"y\") or \"\"}}\n        - {{(mod.time_range_support and \"y\") or \"\"}}\n        {% else %}\n        - :cspan:`3` not applicable ({{mod.engine_type}})\n        {% endif %}\n\n     {% endfor %}\n     {% endfor %}\n     {% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Installing SearXNG Build Dependencies on Arch Linux\nDESCRIPTION: Command to install build dependencies for SearXNG on Arch Linux using pacman.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n$ sudo -H pacman -S --noconfirm \\\n${arch_build}\n```\n\n----------------------------------------\n\nTITLE: RST Documentation Structure for Wikimedia Engines\nDESCRIPTION: Defines the documentation structure for Wikimedia-related search engines using reStructuredText format. Includes sections for Wikipedia and Wikidata engines with automodule directives.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/wikipedia.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _wikimedia engines:\\n\\n=========\\nWikimedia\\n=========\\n\\n.. contents::\\n   :depth: 2\\n   :local:\\n   :backlinks: entry\\n\\n\\n.. _wikipedia engine:\\n\\nWikipedia\\n=========\\n\\n.. automodule:: searx.engines.wikipedia\\n  :members:\\n\\n.. _wikidata engine:\\n\\nWikidata\\n=========\\n\\n.. automodule:: searx.engines.wikidata\\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Importing Google Web Engine Module in Python\nDESCRIPTION: This snippet shows the import statement for the Google Web search engine module in SearXNG. It uses Python's automodule directive to include all members of the searx.engines.google module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/google.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n.. automodule:: searx.engines.google\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Installing ShellCheck for Shell Script Linting on Fedora/RHEL\nDESCRIPTION: Installs ShellCheck, a static analysis tool for shell scripts, on Fedora/RHEL systems to verify the quality of shell scripts in the project.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/buildhosts.rst#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo dnf install ShellCheck\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Documentation for SearXNG Calculator Plugin\nDESCRIPTION: A reStructuredText directive to generate automatic documentation for the calculator plugin module in SearXNG. It uses the automodule directive to document all members of the searx.plugins.calculator module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/plugins/calculator.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: searx.plugins.calculator\n   :members:\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Documentation Structure for Search Processors\nDESCRIPTION: ReStructuredText file structure defining the documentation layout for SearXNG search processors, including table of contents and module autodoc directives.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/searx.search.processors.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _searx.search.processors:\\n\\n=================\\nSearch processors\\n=================\\n\\n.. contents::\\n   :depth: 2\\n   :local:\\n   :backlinks: entry\\n\\n\\nAbstract processor class\\n========================\\n\\n.. automodule:: searx.search.processors.abstract\\n  :members:\\n\\nOffline processor\\n=================\\n\\n.. automodule:: searx.search.processors.offline\\n  :members:\\n\\nOnline processor\\n================\\n\\n.. automodule:: searx.search.processors.online\\n  :members:\\n\\nOnline currency processor\\n=========================\\n\\n.. automodule:: searx.search.processors.online_currency\\n  :members:\\n\\nOnline dictionary processor\\n===========================\\n\\n.. automodule:: searx.search.processors.online_dictionary\\n  :members:\\n\\nOnline URL search processor\\n===========================\\n\\n.. automodule:: searx.search.processors.online_url_search\\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Defining ReStructuredText Documentation Structure for SearXNG Engine Library\nDESCRIPTION: ReStructuredText markup defining the documentation structure for SearXNG's engine library, including table of contents and module autodoc directives.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/enginelib.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. _searx.enginelib:\n\n==============\nEngine Library\n==============\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.enginelib\n  :members:\n\n.. _searx.enginelib.traits:\n\n\nEngine traits\n=============\n\n.. automodule:: searx.enginelib.traits\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Defining Z-Library Documentation Structure in RST\nDESCRIPTION: Defines the documentation structure for the Z-Library search engine module using reStructuredText format. Includes section headers, table of contents, and module autodoc directive.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/zlibrary.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _zlibrary engine:\n\n=========\nZ-Library\n=========\n\n.. contents:: Contents\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.zlibrary\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Importing Google Images Engine Module in Python\nDESCRIPTION: This code imports the Google Images search engine module in SearXNG. It uses Python's automodule directive to include all members of the searx.engines.google_images module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/google.rst#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n.. automodule:: searx.engines.google_images\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Importing ResultList and EngineResults Classes in Python\nDESCRIPTION: This snippet shows the import statements for ResultList and EngineResults classes from the searx.result_types module. These classes are fundamental to handling search results in SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n.. autoclass:: searx.result_types.ResultList\n\n.. autoclass:: searx.result_types.EngineResults\n```\n\n----------------------------------------\n\nTITLE: Generating Unit Converter Plugin Documentation with Sphinx\nDESCRIPTION: This snippet uses Sphinx's automodule directive to automatically generate documentation for the unit_converter plugin in SearXNG. It includes all members of the module in the generated documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/plugins/unit_converter.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: searx.plugins.unit_converter\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents for Built-in Plugins in reStructuredText\nDESCRIPTION: This snippet creates a table of contents for the built-in plugins documentation using reStructuredText syntax. It sets the depth of the table to 1 and lists the individual plugin modules.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/plugins/builtins.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. toctree::\n   :maxdepth: 1\n\n   calculator\n   hash_plugin\n   hostnames\n   self_info\n   tor_check\n   unit_converter\n```\n\n----------------------------------------\n\nTITLE: Generating Documentation for MainResult Class in SearXNG using reStructuredText\nDESCRIPTION: This snippet uses reStructuredText directives to automatically generate documentation for the MainResult class from the searx.result_types._base module. It includes all members of the class in the documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/main/mainresult.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _result_types.mainresult:\n\n.. autoclass:: searx.result_types._base.MainResult\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Building SearXNG Container\nDESCRIPTION: Commands to remove any existing container and build a fresh SearXNG Arch Linux container.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/lxcdev.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo -H ./utils/lxc.sh remove searxng-archlinux\n$ sudo -H ./utils/lxc.sh build searxng-archlinux\n```\n\n----------------------------------------\n\nTITLE: Defining Soundcloud Engine Documentation Structure in reStructuredText\nDESCRIPTION: This snippet defines the structure of the Soundcloud engine documentation using reStructuredText markup. It includes a title, table of contents configuration, and an autodoc directive to automatically include documentation from the searx.engines.soundcloud module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/soundcloud.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _soundcloud engine:\n\n==========\nSoundcloud\n==========\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.soundcloud\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Documenting Mwmbl Web Engine Module in reStructuredText\nDESCRIPTION: This snippet uses the automodule directive to generate documentation for the Mwmbl web engine module in SearXNG. It includes all members of the module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/mwmbl.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: searx.engines.mwmbl\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Importing Google Scholar Engine Module in Python\nDESCRIPTION: This snippet demonstrates the import of the Google Scholar search engine module in SearXNG. It uses Python's automodule directive to include all members of the searx.engines.google_scholar module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/google.rst#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n.. automodule:: searx.engines.google_scholar\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Restoring Static Build State\nDESCRIPTION: Command to restore the previous build state, separating modified source code from build products.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/quickstart.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake static.build.restore\n```\n\n----------------------------------------\n\nTITLE: RST Table of Contents for SearXNG Plugins\nDESCRIPTION: ReStructuredText markup defining the documentation structure for SearXNG plugins with a table of contents directive linking to development and builtins sections.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/plugins/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n\n   development\n   builtins\n```\n\n----------------------------------------\n\nTITLE: Defining Key-Value Results Section in RST\nDESCRIPTION: ReStructuredText section definition for key-value results documentation with a reference label and heading.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/main/keyvalue.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _result_types.keyvalue:\n\n=================\nKey-Value Results\n=================\n\n.. automodule:: searx.result_types.keyvalue\n```\n\n----------------------------------------\n\nTITLE: Defining Recoll Engine Documentation Structure in reStructuredText\nDESCRIPTION: This snippet sets up the structure for the Recoll engine documentation using reStructuredText directives. It includes a title, table of contents, and an automodule reference.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/recoll.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _engine recoll:\n\n=============\nRecoll Engine\n=============\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.recoll\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Generating Documentation for Geizhals Engine Module in reStructuredText\nDESCRIPTION: This snippet uses Sphinx's automodule directive to automatically generate documentation for the Geizhals search engine module in SearXNG. It includes all members of the module in the generated documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/geizhals.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: searx.engines.geizhals\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Auto-documenting MediaWiki Engine Module in reStructuredText\nDESCRIPTION: This snippet uses Sphinx's autodoc feature to automatically generate documentation for the MediaWiki engine module in SearXNG, including all its members.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/mediawiki.rst#2025-04-21_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: searx.engines.mediawiki\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Git Commit Reference\nDESCRIPTION: Reference to the initial commit that established the typeless results foundation\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/index.rst#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nae9fb1d7d\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Documentation for SearXNG Rate Limiter\nDESCRIPTION: Sphinx documentation structure defining the rate limiter module documentation, including a sidebar note about Redis dependency and auto-generated module documentation setup.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/searx.limiter.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. _limiter:\n\n=======\nLimiter\n=======\n\n.. sidebar:: info\n\n   The limiter requires a :ref:`Redis <settings redis>` database.\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.limiter\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Importing SearXNG Standalone Module\nDESCRIPTION: This snippet demonstrates how to import and use the standalone_searx module from the searxng_extra package. The automodule directive is used to automatically generate documentation for all members of the module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/searxng_extra/standalone_searx.py.rst#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\n.. automodule:: searxng_extra.standalone_searx\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Viewing NGINX Configuration on Arch Linux\nDESCRIPTION: Command to view the NGINX configuration file on Arch Linux.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/installation-nginx.rst#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nless /etc/nginx/nginx.conf\n```\n\n----------------------------------------\n\nTITLE: Qwant Module Header in reStructuredText\nDESCRIPTION: ReStructuredText markup defining the documentation structure for the Qwant search engine module, including section headers and table of contents configuration.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/qwant.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _qwant engine:\n\n=====\nQwant\n=====\n\n.. contents:: Contents\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.qwant\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Sphinx Reuters Module Documentation\nDESCRIPTION: ReStructuredText documentation directive that automatically generates documentation for the Reuters search engine module from Python docstrings.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/reuters.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: searx.engines.reuters\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Package Template Data Structure - Python\nDESCRIPTION: Data structure for package template displaying package information including name, version, maintainer, and other metadata.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/templates.rst#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\npackage_name: str\nversion: str\nmaintainer: str\npublishedDate: datetime\ntags: List[str]\npopularity: str\nlicense_name: str\nlicense_url: str\nhomepage: str\nsource_code_url: str\nlinks: dict\n```\n\n----------------------------------------\n\nTITLE: Setting Global System Versions\nDESCRIPTION: Commands to set system versions as global defaults for all runtimes\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/rtm_asdf.rst#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ cd /\n$ asdf global golang system\n$ asdf global nodejs system\n$ asdf global python system\n$ asdf global shellcheck system\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Documentation for Matrix Rooms Search Engine\nDESCRIPTION: This reStructuredText snippet sets up the documentation structure for the Matrix Rooms Search (MRS) engine in SearXNG. It defines a section header, table of contents, and uses the automodule directive to automatically document the searx.engines.mrs Python module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/mrs.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _mrs engine:\n\n=========================\nMatrix Rooms Search (MRS)\n=========================\n\n.. contents:: Contents\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.mrs\n   :members:\n```\n\n----------------------------------------\n\nTITLE: RST Documentation Structure for SQLite DB Module\nDESCRIPTION: ReStructuredText documentation structure that sets up the SQLite DB documentation page with a reference label and automodule directive for the searx.sqlitedb module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/searx.sqlitedb.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _sqlite db:\n\n=========\nSQLite DB\n=========\n\n.. automodule:: searx.sqlitedb\n   :members:\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Documentation Header\nDESCRIPTION: Sphinx documentation structure for Alpine Linux package search engine, including section headers and table of contents directive.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/alpinelinux.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. _alpinelinux engine:\n\n=====================\nAlpine Linux Packages\n=====================\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.alpinelinux\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Defining Startpage Documentation Structure in RST\nDESCRIPTION: Sets up the documentation structure for Startpage search engines using reStructuredText directives, including a table of contents and module autodoc reference.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/startpage.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _startpage engines:\n\n=================\nStartpage Engines\n=================\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.startpage\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Code Template Data Structure - Python\nDESCRIPTION: Data structure for code template showing code fragments with content, code lines, and language information.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/templates.rst#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ncontent: str\ncodelines: [line1, line2, ...]\ncode_language: str\nrepository: str\n```\n\n----------------------------------------\n\nTITLE: RST Documentation Structure\nDESCRIPTION: ReStructuredText markup defining the documentation structure for the searxng_extra tooling box, including page title, reference label, and table of contents.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/searxng_extra/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _searxng_extra:\n\n=============================\nTooling box ``searxng_extra``\n=============================\n\nIn the folder :origin:`searxng_extra/` we maintain some tools useful for CI and\ndevelopers.\n\n.. toctree::\n   :maxdepth: 2\n\n   update\n   standalone_searx.py\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Directive for Mastodon Engine Documentation\nDESCRIPTION: This snippet uses the automodule directive to automatically generate documentation for the searx.engines.mastodon module. The :members: option ensures that all module members (functions, classes, etc.) are included in the generated documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/mastodon.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: searx.engines.mastodon\n  :members:\n```\n\n----------------------------------------\n\nTITLE: RST Automodule Documentation Directive\nDESCRIPTION: Sphinx documentation directive to automatically generate documentation from the searx.settings_loader module's docstrings and members.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/searx.settings.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: searx.settings_loader\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Using Live Documentation Build for WYSIWYG Editing\nDESCRIPTION: Command to start a live documentation build server that automatically rebuilds documentation whenever a reST file changes. This is the recommended way for editing documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/contribution_guide.rst#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n$ make docs.live\n...\nThe HTML pages are in dist/docs.\n... Serving on http://0.0.0.0:8000\n... Start watching changes\n```\n\n----------------------------------------\n\nTITLE: Peertube Module Documentation Structure\nDESCRIPTION: reStructuredText directive for auto-generating documentation from the Peertube video search engine module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/peertube.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: searx.engines.peertube\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Defining RST Document Structure for Presearch Engine\nDESCRIPTION: ReStructuredText document structure defining the Presearch engine documentation section with table of contents and module autodocumentation directive.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/presearch.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _engine presearch:\n\n================\nPresearch Engine\n================\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.presearch\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Python Code Block Example\nDESCRIPTION: Example showing a Python route handler for /stats endpoint using Flask.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_4\n\nLANGUAGE: Python\nCODE:\n```\n@app.route('/stats', methods=['GET'])\ndef stats():\n    \"\"\"Render engine statistics page.\"\"\"\n    stats = get_engines_stats()\n    return render(\n        'stats.html'\n        , stats = stats )\n```\n\n----------------------------------------\n\nTITLE: RST Documentation Structure for Favicons\nDESCRIPTION: RestructuredText documentation layout defining the structure of favicon-related modules in SearXNG, including configuration, proxy, resolver, and cache components.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/searx.favicons.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _favicons source:\n\n=================\nFavicons (source)\n=================\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.favicons\n   :members:\n\n.. _favicons.config:\n\nFavicons Config\n===============\n\n.. automodule:: searx.favicons.config\n   :members:\n\n.. _favicons.proxy:\n\nFavicons Proxy\n==============\n\n.. automodule:: searx.favicons.proxy\n   :members:\n\n.. _favicons.resolver:\n\nFavicons Resolver\n=================\n\n.. automodule:: searx.favicons.resolvers\n   :members:\n\n.. _favicons.cache:\n\nFavicons Cache\n==============\n\n.. automodule:: searx.favicons.cache\n   :members:\n```\n\n----------------------------------------\n\nTITLE: RST Documentation Structure for SearXNG Exceptions\nDESCRIPTION: Sphinx/RST markup defining the documentation structure for SearXNG's exception module. Uses automodule directive to automatically generate documentation from inline docstrings.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/searx.exceptions.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _searx.exceptions:\\n\\n==================\\nSearXNG Exceptions\\n==================\\n\\n.. automodule:: searx.exceptions\\n  :members:\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Project Header and Links\nDESCRIPTION: RST formatted document header with title and reference links to changelog and pull request documentation\nSOURCE: https://github.com/searxng/searxng/blob/master/CHANGELOG.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n=======\nSearXNG\n=======\n\n.. _CHANGELOG: https://github.com/searxng/searxng/commits/master\n.. _PR-229: https://github.com/searxng/searxng/pull/229\n```\n\n----------------------------------------\n\nTITLE: SepiaSearch Module Documentation Structure\nDESCRIPTION: reStructuredText directive for auto-generating documentation from the SepiaSearch engine module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/peertube.rst#2025-04-21_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: searx.engines.sepiasearch\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Defining Moviepilot Engine Documentation Structure in reStructuredText\nDESCRIPTION: Sets up the documentation structure for the Moviepilot search engine in SearXNG using reStructuredText directives. Includes a table of contents and automatic module documentation generation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/moviepilot.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. _moviepilot engine:\n\n==========\nMoviepilot\n==========\n\n.. contents:: Contents\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.moviepilot\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Jinja Context in Python\nDESCRIPTION: Python code showing how to configure Jinja templating context in Sphinx configuration with search engines and plugins\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_16\n\nLANGUAGE: Python\nCODE:\n```\nimport searx.search\nimport searx.engines\nimport searx.plugins\nsearx.search.initialize()\njinja_contexts = {\n   'searx': {\n      'engines': searx.engines.engines,\n      'plugins': searx.plugins.plugins\n   },\n}\n```\n\n----------------------------------------\n\nTITLE: Info Page Documentation Header in reStructuredText\nDESCRIPTION: ReStructuredText directives for documenting the /info page module of SearXNG search engine, including automatic module documentation generation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/searx.infopage.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. _searx.infopage:\n\n================\nOnline ``/info``\n================\n\n.. automodule:: searx.infopage\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Configuring GitLab Engine Documentation in reStructuredText\nDESCRIPTION: This snippet sets up the documentation structure for the GitLab engine module in SearXNG. It defines a reference label, creates a title, and uses the automodule directive to automatically generate documentation from the module's source code.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/gitlab.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _gitlab engine:\n\n======\nGitLab\n======\n\n.. automodule:: searx.engines.gitlab\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Building Documentation with Sphinx\nDESCRIPTION: Command to clean and rebuild the documentation files using the Makefile. The HTML pages are generated in the dist/docs directory.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/contribution_guide.rst#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ make docs.clean docs.html\n...\nThe HTML pages are in dist/docs.\n```\n\n----------------------------------------\n\nTITLE: Configuring reStructuredText Table of Contents\nDESCRIPTION: Defines a toctree directive that creates a hierarchical table of contents with a maximum depth of 2 levels, listing all major documentation sections for the SearXNG project.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n\n   quickstart\n   rtm_asdf\n   contribution_guide\n   extended_types\n   engines/index\n   result_types/index\n   templates\n   search_api\n   plugins/index\n   answerers/index\n   translation\n   lxcdev\n   makefile\n   reST\n   searxng_extra/index\n```\n\n----------------------------------------\n\nTITLE: Defining Answer Results Section in reStructuredText\nDESCRIPTION: This snippet defines the 'Answer Results' section in the documentation using reStructuredText syntax. It includes a reference label, section title, and a brief description of the feature.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/answer.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _result_types.answer:\n\n==============\nAnswer Results\n==============\n\nThe :ref:`area answer results` is an area in which additional information can\nbe displayed.\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Sphinx Redis DB Documentation\nDESCRIPTION: Sphinx documentation directives that set up the Redis DB documentation page and auto-document the searx.redisdb module members.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/searx.redisdb.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. _redis db:\n\n========\nRedis DB\n========\n\n.. automodule:: searx.redisdb\n  :members:\n```\n\n----------------------------------------\n\nTITLE: SearchWithPlugins Class Documentation RST\nDESCRIPTION: RST documentation for SearchWithPlugins class detailing its attributes including search_query, result_container, plugin list and request object types.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/searx.search.rst#2025-04-21_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n.. autoclass:: searx.search.SearchWithPlugins\n  :members:\n\n  .. attribute:: search_query\n    :type: searx.search.SearchQuery\n\n  .. attribute:: result_container\n    :type: searx.results.ResultContainer\n\n  .. attribute:: ordered_plugin_list\n    :type: typing.List\n\n  .. attribute:: request\n    :type: flask.request\n\n  .. automethod:: search() -> searx.results.ResultContainer\n```\n\n----------------------------------------\n\nTITLE: Setting up Wallhaven Documentation with reStructuredText\nDESCRIPTION: A reStructuredText document defining the structure for Wallhaven search engine documentation in SearXNG. It includes a reference, title, table of contents, and auto-generated module documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/wallhaven.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _wallhaven engine:\n\n=========\nWallhaven\n=========\n\n.. contents:: Contents\n   :depth: 2\n   :local: 2\n   :backlinks: entry\n\n.. automodule:: searx.engines.wallhaven\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Creating Table of Contents in reStructuredText\nDESCRIPTION: This snippet creates a table of contents for the user documentation. It sets the depth to 3 levels, keeps the TOC local, and includes backlinks to the entry point.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/user/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. contents::\n   :depth: 3\n   :local:\n   :backlinks: entry\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Autodoc for searx.engines Module in reStructuredText\nDESCRIPTION: This snippet sets up Sphinx autodoc to automatically generate documentation for the searx.engines module. It includes all members of the module in the generated documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/engines.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: searx.engines\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Documenting SearXNG's Custom Message Extractor Module for Internationalization\nDESCRIPTION: This snippet uses Sphinx autodoc to generate documentation for the searx.babel_extract module. It includes all members of the module in the generated documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/searx.babel_extract.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: searx.babel_extract\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Modifying Runtime Versions\nDESCRIPTION: Example diff showing how to modify Python and Shellcheck versions in .tool-versions file\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/rtm_asdf.rst#2025-04-21_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n--- a/.tool-versions\n+++ b/.tool-versions\n@@ -1,2 +1,2 @@\n-python 3.12.0\n-shellcheck 0.9.0\n+python 3.11.6\n+shellcheck 0.8.0\n```\n\n----------------------------------------\n\nTITLE: Basic reStructuredText Template for SearXNG Documentation\nDESCRIPTION: A template for creating a simple article in reStructuredText, including document title, chapters, sections, and subsections with proper markup and anchors.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_0\n\nLANGUAGE: reST\nCODE:\n```\n.. _doc refname:\n\n==============\nDocument title\n==============\n\nLorem ipsum dolor sit amet, consectetur adipisici elit ..  Further read\n:ref:`chapter refname`.\n\n.. _chapter refname:\n\nChapter\n=======\n\nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\naliquid ex ea commodi consequat ...\n\n.. _section refname:\n\nSection\n-------\n\nlorem ..\n\n.. _subsection refname:\n\nSubsection\n~~~~~~~~~~\n\nlorem ..\n```\n\n----------------------------------------\n\nTITLE: Including Markdown Content in Sphinx Documentation for SearXNG\nDESCRIPTION: This directive includes the 'about.md' file and specifies the MyST parser to convert Markdown to reStructuredText format. It's used to integrate Markdown content into Sphinx-based documentation for the SearXNG project.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/user/about.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. include:: about.md\n   :parser: myst_parser.sphinx_\n```\n\n----------------------------------------\n\nTITLE: Searching in Map Category for Jakarta in SearXNG\nDESCRIPTION: Shows how to use the '!' prefix to search within the 'map' category for 'Jakarta' in SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/searx/infopage/id/search-syntax.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- {{search('!map Jakarta')}}\n```\n\n----------------------------------------\n\nTITLE: Creating Flat Tables in reST\nDESCRIPTION: Example showing how to create structured tables using reST flat-table directive with header rows, stub columns, and cell spanning\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_14\n\nLANGUAGE: reST\nCODE:\n```\n.. flat-table:: ``flat-table`` example\n   :header-rows: 2\n   :stub-columns: 1\n   :widths: 1 1 1 1 2\n\n   * - :rspan:`1` head / stub\n     - :cspan:`3` head 1.1-4\n\n   * - head 2.1\n     - head 2.2\n     - head 2.3\n     - head 2.4\n```\n\n----------------------------------------\n\nTITLE: Creating Table of Contents in reStructuredText for SearXNG Documentation\nDESCRIPTION: A reStructuredText directive that creates a table of contents for SearXNG administrator documentation, with a maximum depth of 2 levels, linking to various installation and configuration guides.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/admin/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n\n   settings/index\n   installation\n   installation-docker\n   installation-scripts\n   installation-searxng\n   installation-uwsgi\n   installation-nginx\n   installation-apache\n   update-searxng\n   answer-captcha\n   searx.favicons\n   searx.limiter\n   api\n   architecture\n   plugins\n   buildhosts\n```\n\n----------------------------------------\n\nTITLE: Defining Main Search Results Structure in reStructuredText\nDESCRIPTION: This snippet defines the structure of the main search results documentation using reStructuredText. It includes a title, introduction, and a table of contents for different result types.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/main_result.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _main search results:\n\n===================\nMain Search Results\n===================\n\nIn the :ref:`area main results` the results that a search engine has found for\nthe search term are displayed.\n\nThere is still no typing for all items in the :ref:`main result list`.  The\nfollowing types have been implemented so far ..\n\n.. toctree::\n   :maxdepth: 2\n\n   main/mainresult\n   main/keyvalue\n\nThe :ref:`LegacyResult <LegacyResult>` is used internally for the results that\nhave not yet been typed.  The templates can be used as orientation until the\nfinal typing is complete.\n\n- :ref:`template default` / :py:obj:`Result`\n- :ref:`template images`\n- :ref:`template videos`\n- :ref:`template torrent`\n- :ref:`template map`\n- :ref:`template paper`\n- :ref:`template packages`\n- :ref:`template code`\n- :ref:`template files`\n- :ref:`template products`\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Directive for Documenting Random Answerer Class\nDESCRIPTION: A ReStructuredText directive to automatically generate documentation for the SXNGAnswerer class from the searx.answerers.random module. The :members: option includes documentation for all class members.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/answerers/random.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. autoclass:: searx.answerers.random.SXNGAnswerer\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Python Function Documentation with Field Lists\nDESCRIPTION: Example of documenting a Python function using field lists in the docstring for parameters and return values.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\ndef my_function(my_arg, my_other_arg):\n    \"\"\"A function just for me.\n\n    :param my_arg: The first of my arguments.\n    :param my_other_arg: The second of my arguments.\n\n    :returns: A message (just for me, of course).\n    \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Defining Project Origin in reStructuredText\nDESCRIPTION: This snippet provides information about the origin of SearXNG using reStructuredText syntax. It mentions that the project started as a fork of the searx project in mid-2021.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/index.rst#2025-04-21_snippet_2\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. sidebar:: the origin\n\n   SearXNG development has been started in the middle of 2021 as a fork of the\n   searx project.\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Documentation Index\nDESCRIPTION: RST markup defining the documentation structure for the answerers section, including a table of contents with development and builtins subsections.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/answerers/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n=========\nAnswerers\n=========\n\n.. toctree::\n   :maxdepth: 2\n\n   development\n   builtins\n```\n\n----------------------------------------\n\nTITLE: Generic Admonition in reStructuredText\nDESCRIPTION: Shows how to create a generic admonition with a custom title in reStructuredText.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_11\n\nLANGUAGE: reST\nCODE:\n```\n.. admonition:: generic admonition title\n\n   lorem ipsum ..\n```\n\n----------------------------------------\n\nTITLE: Quoted Paragraphs in reStructuredText\nDESCRIPTION: Examples of creating quoted paragraphs and line blocks by indenting text in reStructuredText.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_8\n\nLANGUAGE: reST\nCODE:\n```\nnormal paragraph ...\nlorem ipsum.\n\n   Quoted paragraph ...\n   lorem ipsum.\n\n| These lines are\n| broken exactly like in\n| the source file.\n```\n\n----------------------------------------\n\nTITLE: Configuring RST Documentation Structure\nDESCRIPTION: ReStructuredText directive that sets up the documentation structure using toctree. It specifies a maximum depth of 2 levels and uses glob pattern to include all searx.* documentation files.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n   :glob:\n\n   searx.*\n```\n\n----------------------------------------\n\nTITLE: Documenting Mwmbl Autocomplete Function in reStructuredText\nDESCRIPTION: This snippet uses the autofunction directive to generate documentation for the Mwmbl autocomplete function in SearXNG.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/mwmbl.rst#2025-04-21_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. autofunction:: searx.autocomplete.mwmbl\n```\n\n----------------------------------------\n\nTITLE: Field Lists in reStructuredText\nDESCRIPTION: Shows how to create field lists for mapping field names to field bodies in reStructuredText.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_9\n\nLANGUAGE: reST\nCODE:\n```\n:fieldname: Field content\n:foo:       first paragraph in field foo\n\n            second paragraph in field foo\n\n:bar:       Field content\n```\n\n----------------------------------------\n\nTITLE: SVG XML Code Example\nDESCRIPTION: Example showing SVG markup for creating a diagonal arrow graphic.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"\n     baseProfile=\"full\" width=\"70px\" height=\"40px\"\n     viewBox=\"0 0 700 400\"\n     >\n  <line x1=\"180\" y1=\"370\"\n        x2=\"500\" y2=\"50\"\n        stroke=\"black\" stroke-width=\"15px\"\n        />\n  <polygon points=\"585 0 525 25 585 50\"\n           transform=\"rotate(135 525 25)\"\n           />\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Creating reStructuredText Documentation for Brave Engines in SearXNG\nDESCRIPTION: This snippet sets up the structure for documenting Brave engines in SearXNG. It includes a title, table of contents, and an auto-generated module reference.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/brave.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _brave engine:\n\n=============\nBrave Engines\n=============\n\n.. contents:: Contents\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.brave\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Defining ReStructuredText Section Headers for Answerer Documentation\nDESCRIPTION: ReStructuredText markup defining the documentation structure for the SearXNG answerer development guide. It includes a cross-reference label and section headers.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/answerers/development.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. _dev answerers:\n\n====================\nAnswerer Development\n====================\n\n.. automodule:: searx.answerers\n```\n\n----------------------------------------\n\nTITLE: Defining RST Section Headers for Plugin Development Documentation\nDESCRIPTION: ReStructuredText markup defining the documentation section headers for plugin development, including a reference label and main title.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/plugins/development.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _dev plugin:\n\n==================\nPlugin Development\n==================\n\n.. automodule:: searx.plugins\n```\n\n----------------------------------------\n\nTITLE: Sphinx Documentation Structure for Locales Module\nDESCRIPTION: RST format documentation structure that sets up the documentation page for the searx.locales module, including table of contents and automated module documentation generation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/searx.locales.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _searx.locales:\n\n=======\nLocales\n=======\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.locales\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Importing Answer Module in reStructuredText\nDESCRIPTION: This snippet uses the 'automodule' directive to import and document the 'searx.result_types.answer' module in the reStructuredText documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/result_types/answer.rst#2025-04-21_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: searx.result_types.answer\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Documentation Structure for Core Engine\nDESCRIPTION: ReStructuredText markup defining the documentation structure for the core engine module, including section headers, table of contents, and module autodoc directive.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/core.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _core engine:\n\n====\nCORE\n====\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.core\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Setting up Dailymotion Engine Documentation with reStructuredText\nDESCRIPTION: This reStructuredText code configures the documentation for the Dailymotion search engine module in SearXNG. It includes a title, table of contents, and autodoc directive to automatically include module member documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/dailymotion.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. _dailymotion engine:\n\n===========\nDailymotion\n===========\n\n.. contents::\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.dailymotion\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Generating Module Documentation for BT4G Engine in Python\nDESCRIPTION: This snippet uses the automodule directive to automatically generate documentation for the bt4g module in the searx.engines package. It includes all members of the module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/bt4g.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: searx.engines.bt4g\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Documenting Discourse Engine with Sphinx automodule directive\nDESCRIPTION: Uses Sphinx's automodule directive to automatically generate documentation for the searx.engines.discourse module, including all its members. This directive processes Python docstrings into structured documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/discourse.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: searx.engines.discourse\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Defining Odysee Documentation Structure in reStructuredText\nDESCRIPTION: A reStructuredText file that defines the documentation structure for the Odysee search engine in SearXNG. It includes a title, table of contents with specified depth and linking options, and an automodule directive to include the Python module documentation.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/engines/online/odysee.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _odysee engine:\n\n======\nOdysee\n======\n\n.. contents:: Contents\n   :depth: 2\n   :local:\n   :backlinks: entry\n\n.. automodule:: searx.engines.odysee\n  :members:\n```\n\n----------------------------------------\n\nTITLE: Defining CSV Structure with Stub Columns and Lorem Ipsum Text\nDESCRIPTION: This snippet illustrates a CSV structure with stub columns and rows, using Lorem Ipsum text as placeholder content. It demonstrates how to format multi-line text within CSV cells and the use of quotation marks for text containing commas.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/csv_table.txt#2025-04-21_snippet_0\n\nLANGUAGE: csv\nCODE:\n```\nstub col row 1, column, \"loremLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\neirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\nvoluptua.\"\nstub col row 1, \"At vero eos et accusam et justo duo dolores et ea rebum. Stet clita\nkasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\", column\nstub col row 1, column, column\n```\n\n----------------------------------------\n\nTITLE: Listing Intersphinx Inventory Anchors Using Python\nDESCRIPTION: A shell command to list all anchors from an Intersphinx inventory file using Python and the sphinx.ext.intersphinx module.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ python -m sphinx.ext.intersphinx https://docs.python.org/3/objects.inv\n...\n```\n\n----------------------------------------\n\nTITLE: Creating CSV Tables in reST\nDESCRIPTION: Example demonstrating how to include CSV data in documentation using the csv-table directive with header and column specifications\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/dev/reST.rst#2025-04-21_snippet_15\n\nLANGUAGE: reST\nCODE:\n```\n.. csv-table:: CSV table example\n   :header: .. , Column 1, Column 2\n   :widths: 2 5 5\n   :stub-columns: 1\n   :file: csv_table.txt\n```\n\n----------------------------------------\n\nTITLE: Search Class Documentation RST\nDESCRIPTION: RST documentation for Search class showing its core attributes including search_query and result_container types and the search method.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/src/searx.search.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. autoclass:: searx.search.Search\n\n  .. attribute:: search_query\n    :type: searx.search.SearchQuery\n\n  .. attribute:: result_container\n    :type: searx.results.ResultContainer\n\n  .. automethod:: search() -> searx.results.ResultContainer\n```\n\n----------------------------------------\n\nTITLE: Fixing SearXNG Client Source Code\nDESCRIPTION: Command to run the code fixing/linting process for the SearXNG simple client. This helps maintain code quality and consistency.\nSOURCE: https://github.com/searxng/searxng/blob/master/client/simple/README.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# in folder ./client/simple/\n$ npm run fix\n```\n\n----------------------------------------\n\nTITLE: Commit Message Guidelines in Markdown\nDESCRIPTION: Guidelines for writing commit messages, including format requirements and best practices.\nSOURCE: https://github.com/searxng/searxng/blob/master/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* Always write descriptive commit messages (\"fix bug\" is not acceptable).\n* Use the present tense (\"Add feature\" not \"Added feature\").\n* Use the imperative mood (\"Move cursor to...\" not \"Moves cursor to...\").\n* Limit the first line to 72 characters or less.\n* Include the number of the issue you are fixing.\n```\n\n----------------------------------------\n\nTITLE: Creating Python Virtual Environment for SearXNG\nDESCRIPTION: Commands to create a Python virtual environment for SearXNG and add activation to the user's profile.\nSOURCE: https://github.com/searxng/searxng/blob/master/docs/build-templates/searxng.rst#2025-04-21_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n(${SERVICE_USER})$ python3 -m venv \"${SEARXNG_PYENV}\"\n(${SERVICE_USER})$ echo \". ${SEARXNG_PYENV}/bin/activate\" \\\n                   >>  \"$SERVICE_HOME/.profile\"\n```"
  }
]
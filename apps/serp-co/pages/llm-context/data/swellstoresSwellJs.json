[
  {
    "owner": "swellstores",
    "repo": "swell-js",
    "content": "TITLE: Including Stripe.js via CDN in HTML\nDESCRIPTION: This snippet shows how to include Stripe.js directly from Stripe's CDN using a script tag in HTML.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://js.stripe.com/v3/\"></script>\n```\n\n----------------------------------------\n\nTITLE: Initializing Stripe.js with publishable key (Script)\nDESCRIPTION: This code initializes Stripe.js with a publishable key when loaded from a script tag.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = Stripe('pk_test_...');\n```\n\n----------------------------------------\n\nTITLE: Initializing Stripe.js with publishable key (Module)\nDESCRIPTION: This code demonstrates how to initialize Stripe.js with a publishable key when loaded as a JavaScript module.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { loadStripe } from '@stripe/stripe-js';\nconst stripe = await loadStripe('pk_test_...');\n```\n\n----------------------------------------\n\nTITLE: Initializing Stripe server-side library\nDESCRIPTION: This snippet shows how to initialize the Stripe server-side library with a secret key.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = require('stripe')('sk_test_...');\n```\n\n----------------------------------------\n\nTITLE: Creating iDEAL payment intent\nDESCRIPTION: This server-side code creates a payment intent for an iDEAL payment using the Stripe API.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = require('stripe')('sk_test_...');\n\nawait stripe.paymentIntents.create({\n  payment_method: '<payment_method_id>',\n  amount: '<amount in cents>',\n  currency: 'eur',\n  payment_method_types: 'ideal',\n  confirmation_method: 'manual',\n  confirm: true,\n  return_url: '<return_url>',\n});\n```\n\n----------------------------------------\n\nTITLE: Authorizing iDEAL payment\nDESCRIPTION: This client-side code initiates the payment authorization process for an iDEAL payment.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = Stripe('pk_test_...');\n\nawait stripe.handleCardAction(paymentIntent.client_secret);\n```\n\n----------------------------------------\n\nTITLE: Updating Swell cart with iDEAL payment details\nDESCRIPTION: This code demonstrates how to update a Swell cart or order with iDEAL payment details using both Swell JS and Node.js libraries.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst billing = {\n  method: 'ideal',\n  ideal: {\n    token: '<payment_method_id>',\n  },\n  intent: {\n    stripe: {\n      id: '<payment_intent_id>',\n    }\n  },\n};\n\n// Using Swell JS library\nawait swell.cart.update({ billing });\n\n// Using Swell Node.js library\nawait swell.put('/carts/<id>', { billing });\n```\n\n----------------------------------------\n\nTITLE: Creating Klarna source object\nDESCRIPTION: This client-side code creates a Klarna source object using Stripe.js.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = Stripe('pk_test_...');\n\nawait stripe.createSource({\n  type: 'klarna',\n  flow: 'redirect',\n  amount: '<amount>',\n  currency: '<iso currency code>',\n  klarna: {\n    product: 'payment',\n    purchase_country: '<2-digit country code>',\n  },\n  source_order: {\n    items: '<items>',\n  },\n  redirect: {\n    return_url: '<return_url>',\n  },\n });\n```\n\n----------------------------------------\n\nTITLE: Updating Swell cart with Klarna payment details\nDESCRIPTION: This code shows how to update a Swell cart or order with Klarna payment details using both Swell JS and Node.js libraries.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst billing = {\n  method: 'klarna',\n  klarna: {\n    source: '<source_id>',\n  },\n};\n\n// Using Swell JS library\nawait swell.cart.update({ billing });\n\n// Using Swell Node.js library\nawait swell.put('/carts/<id>', { billing });\n```\n\n----------------------------------------\n\nTITLE: Creating Bancontact source object\nDESCRIPTION: This client-side code creates a Bancontact source object using Stripe.js.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = Stripe('pk_test_...');\n\nawait stripe.createSource({\n  type: 'bancontact',\n  amount: '<amount>',\n  currency: 'eur', // Bancontact must always use Euros\n  owner: {\n    name: '<name>',\n  },\n  redirect: {\n    return_url: '<return_url>',\n  },\n });\n```\n\n----------------------------------------\n\nTITLE: Updating Swell cart with Bancontact payment details\nDESCRIPTION: This code demonstrates how to update a Swell cart or order with Bancontact payment details using both Swell JS and Node.js libraries.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nconst billing = {\n  method: 'bancontact',\n  bancontact: {\n    source: '<source_id>',\n  },\n};\n\n// Using Swell JS library\nawait swell.cart.update({ billing });\n\n// Using Swell Node.js library\nawait swell.put('/carts/<id>', { billing });\n```\n\n----------------------------------------\n\nTITLE: Creating iDEAL element with Stripe Elements\nDESCRIPTION: This code creates an iDEAL bank element using Stripe Elements and mounts it to a DOM element.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = Stripe('pk_test_...');\n\nconst elements = stripe.elements();\nconst ideal = elements.create('idealBank', options?);\nideal.mount('#stripe-ideal');\n```\n\n----------------------------------------\n\nTITLE: Creating iDEAL payment method\nDESCRIPTION: This snippet demonstrates how to create an iDEAL payment method using Stripe.js.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/stripe_klarna_ideal.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst stripe = Stripe('pk_test_...');\n\nawait stripe.createPaymentMethod({\n  type: 'ideal',\n  ideal: idealElement,\n  billing_details: {\n    name: 'Jenny Rosen',\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Saferpay Payment Page with JSON Request\nDESCRIPTION: JSON request structure for initializing the Saferpay Payment Page. It includes customer details, payment information, terminal configuration, and return URLs for handling success and failure cases.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/saferpay.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\nPOST: /Payment/v1/PaymentPage/Initialize\n{\n  \"RequestHeader\": {\n    \"SpecVersion\": \"[current Spec-Version]\",\n    \"CustomerId\": \"[your customer id]\",\n    \"RequestId\": \"[unique request identifier]\",\n    \"RetryIndicator\": 0\n  },\n  \"TerminalId\": \"[your terminal id]\",\n  \"Payment\": {\n    \"Amount\": {\n      \"Value\": \"100\",\n      \"CurrencyCode\": \"CHF\"\n    },\n    \"OrderId\": \"Id of the order\",\n    \"Description\": \"Description of payment\"\n  },\n  \"RegisterAlias\": { // Used to save and reuse a payment card\n    \"IdGenerator\": \"MANUAL\",\n    \"Id\": \"[unique random value]\"\n  },\n  \"PaymentMethods\": [\"[card payment methods]\"], // Swell currently only supports card payment methods\n  \"ReturnUrls\": {\n    \"Success\": \"[your shop payment success url]\",\n    \"Fail\": \"[your shop payment fail url]\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Saferpay Payment Page Initialization Response\nDESCRIPTION: JSON response structure returned after successfully initializing the Saferpay Payment Page. Contains a token and redirect URL that will be used in subsequent steps of the payment process.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/saferpay.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\nRESPONSE\n{\n  \"ResponseHeader\": {\n    \"SpecVersion\": \"[current Spec-Version]\",\n    \"RequestId\": \"Id of the request\"\n  },\n  \"Token\": \"234uhfh78234hlasdfh8234e1234\",\n  \"Expiration\": \"2015-01-30T12:45:22.258+01:00\",\n  \"RedirectUrl\": \"https://www.saferpay.com/vt2/api/...\"\n}\n```\n\n----------------------------------------\n\nTITLE: Saferpay Payment Page Assertion Request\nDESCRIPTION: JSON request structure for verifying a payment after customer redirection back to the store. Uses the token received during initialization to validate the payment status.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/saferpay.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\nPOST: /Payment/v1/PaymentPage/Assert\n{\n  \"RequestHeader\": {\n    \"SpecVersion\": \"[current Spec-Version]\",\n    \"CustomerId\": \"[your customer id]\",\n    \"RequestId\": \"[unique request identifier]\",\n    \"RetryIndicator\": 0\n  },\n  \"Token\": \"234uhfh78234hlasdfh8234e1234\" // Pass the previously saved transaction token received during initialization\n}\n```\n\n----------------------------------------\n\nTITLE: Saferpay Payment Page Assertion Response\nDESCRIPTION: JSON response structure returned after a successful payment assertion. Contains payment method details including card information and the alias ID for future reference.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/saferpay.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\nRESPONSE\n{\n  ...\n  \"RegistrationResult\": {\n    \"Alias\": {\n      \"Id\": \"alias35nfd9mkzfw0x57iwx\"\n    }\n  },\n  \"PaymentMeans\": {\n    \"Brand\": {\n      \"PaymentMethod\": \"VISA\",\n      \"Name\": \"VISA Saferpay Test\"\n    },\n    \"DisplayText\": \"9123 45xx xxxx 1234\",\n    \"Card\": {\n      \"MaskedNumber\": \"912345xxxxxx1234\",\n      \"ExpYear\": 2015,\n      \"ExpMonth\": 9,\n      \"HolderName\": \"Max Mustermann\",\n      \"CountryCode\": \"CH\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Completing Saferpay Payment with Swell JS\nDESCRIPTION: JavaScript code for completing the payment process by updating the cart with billing information from Saferpay and submitting the order using the Swell JS library.\nSOURCE: https://github.com/swellstores/swell-js/blob/master/saferpay.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst billing = {\n  method: 'card',\n  card: {\n    token: RegistrationResult.Alias.Id,\n    exp_month: PaymentMeans.Card.ExpMonth,\n    exp_year: PaymentMeans.Card.ExpYear,\n    brand: PaymentMeans.Brand.Name,\n    last4: \"[last 4 characters from 'PaymentMeans.Card.MaskedNumber']\",\n    gateway: 'saferpay',\n  },\n};\n\n// Using Swell JS library\nawait swell.cart.update({ billing });\nawait swell.cart.submitOrder();\n\n// Using Swell Node.js library\nconst cart = await swell.put('/carts/<id>', { billing });\nawait swell.post('/orders', { cart_id: cart.id });\n```"
  }
]
[
  {
    "owner": "web-infra-dev",
    "repo": "midscene",
    "content": "TITLE: Demonstrating Basic Midscene.js Operations in TypeScript\nDESCRIPTION: Example showing the three main capabilities of Midscene.js: action (typing and searching), query (extracting structured data), and assert (validating UI elements). Shows how to perform a search for headphones and extract product information using natural language commands.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/index.mdx#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// 👀 type keywords, perform a search\nawait ai('type \"Headphones\" in search box, hit Enter');\n\n// 👀 find the items, return in JSON\nconst items = await aiQuery(\n  \"{itemTitle: string, price: Number}[], find item in list and corresponding price\"\n);\n\nconsole.log(\"headphones in stock\", items);\n\n// 👀 assert by natural language\nawait aiAssert(\"There is a category filter on the left\");\n```\n\n----------------------------------------\n\nTITLE: Example E2E Test Using Midscene AI Operations\nDESCRIPTION: Comprehensive example showing how to use various Midscene AI operations for testing eBay's search functionality, including input, tap, scroll, query, and assertions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-playwright.mdx#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { expect } from \"@playwright/test\";\nimport { test } from \"./fixture\";\n\ntest.beforeEach(async ({ page }) => {\n  page.setViewportSize({ width: 400, height: 905 });\n  await page.goto(\"https://www.ebay.com\");\n  await page.waitForLoadState(\"networkidle\");\n});\n\ntest(\"search headphone on ebay\", async ({ \n  ai, \n  aiQuery, \n  aiAssert,\n  aiInput,\n  aiTap,\n  aiScroll \n}) => {\n  // Use aiInput to enter search keyword\n  await aiInput('Headphones', 'search box');\n  \n  // Use aiTap to click search button\n  await aiTap('search button');\n  \n  // Wait for search results to load\n  await aiWaitFor('search results list loaded', { timeoutMs: 5000 });\n  \n  // Use aiScroll to scroll to bottom\n  await aiScroll(\n    { \n      direction: 'down',\n      scrollType: 'untilBottom'\n    },\n    'search results list'\n  );\n  \n  // Use aiQuery to get product information\n  const items = await aiQuery<Array<{title: string, price: number}>>(\n    'get product titles and prices from search results'\n  );\n  \n  console.log(\"headphones in stock\", items);\n  expect(items?.length).toBeGreaterThan(0);\n  \n  // Use aiAssert to verify filter functionality\n  await aiAssert(\"category filter exists on the left side\");\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Android Automation with JavaScript SDK in Midscene\nDESCRIPTION: This TypeScript code demonstrates how to use Midscene's JavaScript SDK to automate interactions on eBay, including connecting to a device, launching a browser, searching for headphones, extracting item information, and performing assertions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/blog-support-android-automation.mdx#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AndroidAgent, AndroidDevice, getConnectedDevices } from '@midscene/android';\nimport \"dotenv/config\"; // read environment variables from .env file\n\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\nPromise.resolve(\n  (async () => {\n    const devices = await getConnectedDevices();\n    const page = new AndroidDevice(devices[0].udid);\n\n    // 👀 init Midscene agent\n    const agent = new AndroidAgent(page,{\n      aiActionContext:\n        'If any location, permission, user agreement, etc. popup, click agree. If login page pops up, close it.',\n    });\n    await page.connect();\n    await page.launch('https://www.ebay.com');\n\n    await sleep(5000);\n\n    // 👀 type keywords, perform a search\n    await agent.aiAction('type \"Headphones\" in search box, hit Enter');\n\n    // 👀 wait for the loading\n    await agent.aiWaitFor(\"there is at least one headphone item on page\");\n    // or you may use a plain sleep:\n    // await sleep(5000);\n\n    // 👀 understand the page content, find the items\n    const items = await agent.aiQuery(\n      \"{itemTitle: string, price: Number}[], find item in list and corresponding price\"\n    );\n    console.log(\"headphones in stock\", items);\n\n    // 👀 assert by AI\n    await agent.aiAssert(\"There is a category filter on the left\");\n  })()\n);\n```\n\n----------------------------------------\n\nTITLE: Using aiInput Method in Midscene\nDESCRIPTION: Example of using the aiInput method to enter text into an input field described in natural language.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nawait agent.aiInput('Hello World', 'The search input box');\n```\n\n----------------------------------------\n\nTITLE: Complex Workflow with Deep Think in YAML\nDESCRIPTION: Complete example of using Deep Think in a YAML configuration to interact with multiple elements in a complex UI, specifically for the Coze.com workflow editor.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/blog-introducing-instant-actions-and-deep-think.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntasks:\n  - name: edit input panel\n    flow:\n      - aiTap: the triangle icon on the left side of the text \"Input\"\n        deepThink: true\n      - aiTap: the first checkbox in the Input form\n        deepThink: true\n      - aiTap: the expand button on the second row of the Input form (on the right of the checkbox)\n        deepThink: true\n      - aiTap: the delete button on the second last row of the Input form\n        deepThink: true\n      - aiTap: the add button on the last row of the Input form （second button from the right）\n        deepThink: true\n```\n\n----------------------------------------\n\nTITLE: Declaring AI Action Function Type in TypeScript\nDESCRIPTION: TypeScript function type declaration for the aiAction method, which allows performing a series of UI actions described in natural language. It shows both the main function and its shorthand alias.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction aiAction(prompt: string): Promise<void>;\nfunction ai(prompt: string): Promise<void>; // shorthand form\n```\n\n----------------------------------------\n\nTITLE: Implementing Android Automation with Midscene JavaScript SDK\nDESCRIPTION: This TypeScript code demonstrates how to use the Midscene JavaScript SDK to perform Android automation tasks, including device connection, web navigation, search operations, and AI-assisted interactions and assertions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/blog-support-android-automation.mdx#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AndroidAgent, AndroidDevice, getConnectedDevices } from '@midscene/android';\nimport \"dotenv/config\"; // read environment variables from .env file\n\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\nPromise.resolve(\n  (async () => {\n    const devices = await getConnectedDevices();\n    const page = new AndroidDevice(devices[0].udid);\n\n    // 👀 init Midscene agent\n    const agent = new AndroidAgent(page,{\n      aiActionContext:\n        'If any location, permission, user agreement, etc. popup, click agree. If login page pops up, close it.',\n    });\n    await page.connect();\n    await page.launch('https://www.ebay.com');\n\n    await sleep(5000);\n\n    // 👀 type keywords, perform a search\n    await agent.aiAction('type \"Headphones\" in search box, hit Enter');\n\n    // 👀 wait for the loading\n    await agent.aiWaitFor(\"there is at least one headphone item on page\");\n    // or you may use a plain sleep:\n    // await sleep(5000);\n\n    // 👀 understand the page content, find the items\n    const items = await agent.aiQuery(\n      \"{itemTitle: string, price: Number}[], find item in list and corresponding price\"\n    );\n    console.log(\"headphones in stock\", items);\n\n    // 👀 assert by AI\n    await agent.aiAssert(\"There is a category filter on the left\");\n  })()\n);\n```\n\n----------------------------------------\n\nTITLE: Using Deep Think with YAML Configuration in Midscene\nDESCRIPTION: Demonstrates how to use the deepThink option in a YAML configuration file to interact with complex UI elements on Coze.com's workflow editor. Each step uses precise targeting descriptions with the deepThink option enabled.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/blog-introducing-instant-actions-and-deep-think.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntasks:\n  - name: edit input panel\n    flow:\n      - aiTap: the triangle icon on the left side of the text \"Input\"\n        deepThink: true\n      - aiTap: the first checkbox in the Input form\n        deepThink: true\n      - aiTap: the expand button on the second row of the Input form (on the right of the checkbox)\n        deepThink: true\n      - aiTap: the delete button on the second last row of the Input form\n        deepThink: true\n      - aiTap: the add button on the last row of the Input form （second button from the right）\n        deepThink: true\n```\n\n----------------------------------------\n\nTITLE: Declaring aiInput Function Type in TypeScript\nDESCRIPTION: TypeScript function type declaration for the aiInput method, which allows inputting text into elements identified through natural language descriptions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nfunction aiInput(text: string, locate: string, options?: Object): Promise<void>;\n```\n\n----------------------------------------\n\nTITLE: Using aiQuery Method for Data Extraction in Midscene\nDESCRIPTION: Examples of using the aiQuery method to extract structured data from the UI, including complex objects, arrays, and primitive types based on natural language descriptions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nconst dataA = await agent.aiQuery({\n  time: 'The date and time displayed in the top-left corner as a string',\n  userInfo: 'User information in the format {name: string}',\n  tableFields: 'An array of table field names, string[]',\n  tableDataRecord: 'Table records in the format {id: string, [fieldName]: string}[]',\n});\n\n// You can also describe the expected return format using a string:\n\n// dataB will be an array of strings\nconst dataB = await agent.aiQuery('string[], list of task names');\n\n// dataC will be an array of objects\nconst dataC = await agent.aiQuery('{name: string, age: string}[], table data records');\n```\n\n----------------------------------------\n\nTITLE: Implementing Result Validation with Assertions in Midscene\nDESCRIPTION: A TypeScript example showing how to create a task with Midscene's AI interface and then validate the results using assertions, which provides a more reliable testing approach.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nawait ai('Enter \"Learning AI the day after tomorrow\" in the task box, then press Enter to create');\n\n// check the result\nconst taskList = await aiQuery<string[]>('string[], tasks in the list');\nexpect(taskList.length).toBe(1);\nexpect(taskList[0]).toBe('Learning AI the day after tomorrow');\n```\n\n----------------------------------------\n\nTITLE: Using AI Action Methods in Midscene\nDESCRIPTION: Examples of using the aiAction and ai methods to perform automated UI interactions using natural language instructions, including basic usage and advanced usage with UI Agent models.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// Basic usage\nawait agent.aiAction('Type \"JavaScript\" into the search box, then click the search button');\n\n// Using the shorthand .ai form\nawait agent.ai('Click the login button at the top of the page, then enter \"test@example.com\" in the username field');\n\n// When using UI Agent models like ui-tars, you can try a more high-level prompt\nawait agent.aiAction('Post a Tweet \"Hello World\"');\n```\n\n----------------------------------------\n\nTITLE: Basic Midscene YAML Script for Web Automation\nDESCRIPTION: A simple example of a Midscene YAML script that automates searching for weather on Bing.com and verifies the results. The script defines a web target and tasks with AI-powered actions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nweb:\n  url: https://www.bing.com\n\ntasks:\n  - name: search weather\n    flow:\n      - ai: search for 'weather today'\n      - sleep: 3000\n\n  - name: check result\n    flow:\n      - aiAssert: the result shows the weather info\n```\n\n----------------------------------------\n\nTITLE: Declaring aiQuery Function Type in TypeScript\nDESCRIPTION: TypeScript function type declaration for the aiQuery method, which allows extracting data from the UI using multimodal AI reasoning capabilities.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nfunction aiQuery<T>(dataShape: string | Object): Promise<T>;\n```\n\n----------------------------------------\n\nTITLE: Declaring aiTap Function Type in TypeScript\nDESCRIPTION: TypeScript function type declaration for the aiTap method, which allows tapping elements identified through natural language descriptions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nfunction aiTap(locate: string, options?: Object): Promise<void>;\n```\n\n----------------------------------------\n\nTITLE: Controlling Android Device with Midscene JavaScript SDK\nDESCRIPTION: This TypeScript snippet demonstrates how to use the Midscene JavaScript SDK to control an Android device. It shows initialization, browser navigation, AI-driven actions, and data extraction capabilities.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/integrate-with-android.mdx#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AndroidAgent, AndroidDevice, getConnectedDevices } from '@midscene/android';\n\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\nPromise.resolve(\n  (async () => {\n    const devices = await getConnectedDevices();\n    const page = new AndroidDevice(devices[0].udid);\n\n    // 👀 初始化 Midscene agent\n    const agent = new AndroidAgent(page,{\n      aiActionContext:\n        '如果出现位置、权限、用户协议等弹窗，点击同意。如果出现登录页面，关闭它。',\n    });\n    await page.connect();\n\n    // 👀 打开浏览器并导航到 ebay.com（请确保当前页面有浏览器 App 喔）\n    await agent.aiAction('open browser and navigate to ebay.com');\n\n    await sleep(5000);\n\n    // 👀 输入关键词，执行搜索\n    await agent.aiAction('在搜索框输入 \"Headphones\" ，敲回车');\n\n    // 👀 等待加载完成\n    await agent.aiWaitFor(\"页面中至少有一个耳机商品\");\n    // 或者你也可以使用一个普通的 sleep:\n    // await sleep(5000);\n\n    // 👀 理解页面内容，提取数据\n    const items = await agent.aiQuery(\n      \"{itemTitle: string, price: Number}[], 找到列表里的商品标题和价格\"\n    );\n    console.log(\"耳机商品信息\", items);\n\n    // 👀 用 AI 断言\n    await agent.aiAssert(\"界面左侧有类目筛选功能\");\n  })()\n);\n```\n\n----------------------------------------\n\nTITLE: Instant Actions Implementation in Midscene\nDESCRIPTION: Example showing how to use the new Instant Actions interfaces (aiInput and aiKeyboardPress) to perform the same search operation more reliably.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/blog-introducing-instant-actions-and-deep-think.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nawait agent.aiInput('Headphones', 'search-box');\nawait agent.aiKeyboardPress('Enter');\n```\n\n----------------------------------------\n\nTITLE: Declaring aiHover Function Type in TypeScript\nDESCRIPTION: TypeScript function type declaration for the aiHover method, which allows hovering over elements identified through natural language descriptions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nfunction aiHover(locate: string, options?: Object): Promise<void>;\n```\n\n----------------------------------------\n\nTITLE: Creating Android Automation Scripts with YAML in Midscene\nDESCRIPTION: This YAML snippet demonstrates how to write an automation script to search for headphones on eBay, extract item information into JSON, and assert the presence of UI elements like the shopping cart icon.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/blog-support-android-automation.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# search headphone on ebay, extract the items info into a json file, and assert the shopping cart icon\n\nandroid:\n  deviceId: s4ey59\n\ntasks:\n  - name: search headphones\n    flow:\n      - aiAction: open browser and navigate to ebay.com\n      - aiAction: type 'Headphones' in ebay search box, hit Enter\n      - sleep: 5000\n      - aiAction: scroll down the page for 800px\n\n  - name: extract headphones info\n    flow:\n      - aiQuery: >\n          {name: string, price: number, subTitle: string}[], return item name, price and the subTitle on the lower right corner of each item\n        name: headphones\n\n  - name: assert Filter button\n    flow:\n      - aiAssert: There is a Filter button on the page\n```\n\n----------------------------------------\n\nTITLE: Defining AI-Assisted Assertion Method in TypeScript\nDESCRIPTION: Defines the aiAssert method for specifying assertions in natural language. The method takes an assertion string and an optional error message, returning a Promise that resolves if the assertion passes or throws an error if it fails.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nfunction aiAssert(assertion: string, errorMsg?: string): Promise<void>;\n```\n\n----------------------------------------\n\nTITLE: Using aiTap Method in Midscene\nDESCRIPTION: Examples of using the aiTap method to interact with UI elements by clicking or tapping, with optional deepThink parameter for more precise element location.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nawait agent.aiTap('The login button at the top of the page');\n\n// Use deepThink feature to precisely locate the element\nawait agent.aiTap('The login button at the top of the page', { deepThink: true });\n```\n\n----------------------------------------\n\nTITLE: Evaluating JavaScript in Web Context with TypeScript\nDESCRIPTION: Defines and demonstrates the use of evaluateJavaScript method to execute JavaScript expressions in the web page context.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\nfunction evaluateJavaScript(script: string): Promise<any>;\n\nconst result = await agent.evaluateJavaScript('document.title');\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Setting AI Action Context in TypeScript\nDESCRIPTION: Defines and demonstrates the use of setAIActionContext method to set background knowledge for AI actions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\nfunction setAIActionContext(actionContext: string): void;\n\nawait agent.setAIActionContext('Close the cookie consent dialog first if it exists');\n```\n\n----------------------------------------\n\nTITLE: Bing Search YAML Script for Web Automation\nDESCRIPTION: A complete YAML script for automating a weather search on Bing.com in a web browser. It performs the search, waits for results, and verifies that weather information is displayed.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nweb:\n  url: https://www.bing.com\n\ntasks:\n  - name: search weather\n    flow:\n      - ai: search for 'weather today'\n      - sleep: 3000\n      - aiAssert: the result shows the weather info\n```\n\n----------------------------------------\n\nTITLE: Setting up Playwright Test Fixture with Midscene\nDESCRIPTION: Creation of a custom test fixture that extends Playwright's base test object with Midscene AI capabilities.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-playwright.mdx#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { test as base } from '@playwright/test';\nimport type { PlayWrightAiFixtureType } from '@midscene/web/playwright';\nimport { PlaywrightAiFixture } from '@midscene/web/playwright';\n\nexport const test = base.extend<PlayWrightAiFixtureType>(PlaywrightAiFixture());\n```\n\n----------------------------------------\n\nTITLE: Using AI-Assisted Assertion in TypeScript\nDESCRIPTION: Demonstrates how to use the aiAssert method to check if the price of a specific product is correct.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nawait agent.aiAssert('The price of \"Sauce Labs Onesie\" is 7.99');\n```\n\n----------------------------------------\n\nTITLE: Implementing Web Automation with Puppeteer and Midscene in TypeScript\nDESCRIPTION: Main script demonstrating Puppeteer integration with Midscene to automate eBay search. Shows browser initialization, page navigation, AI-powered actions, queries, and assertions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-puppeteer.mdx#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport puppeteer from \"puppeteer\";\nimport { PuppeteerAgent } from \"@midscene/web/puppeteer\";\n\nconst sleep = (ms: number) => new Promise((r) => setTimeout(r, ms));\nPromise.resolve(\n  (async () => {\n    const browser = await puppeteer.launch({\n      headless: false, // here we use headed mode to help debug\n    });\n\n    const page = await browser.newPage();\n    await page.setViewport({\n      width: 1280,\n      height: 800,\n      deviceScaleFactor: 1,\n    });\n\n    await page.goto(\"https://www.ebay.com\");\n    await sleep(5000);\n\n    // 👀 init Midscene agent\n    const agent = new PuppeteerAgent(page);\n\n    // 👀 type keywords, perform a search\n    await agent.aiAction('type \"Headphones\" in search box, hit Enter');\n    await sleep(5000);\n\n    // 👀 understand the page content, find the items\n    const items = await agent.aiQuery(\n      \"{itemTitle: string, price: Number}[], find item in list and corresponding price\"\n    );\n    console.log(\"headphones in stock\", items);\n\n    // 👀 assert by AI\n    await agent.aiAssert(\"There is a category filter on the left\");\n\n    await browser.close();\n  })()\n);\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Script Execution Method in TypeScript\nDESCRIPTION: Defines the runYaml method for executing automation scripts written in YAML format. It takes a YAML script content string and returns the results of all aiQuery calls within the script.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\nfunction runYaml(yamlScriptContent: string): Promise<{ result: any }>;\n```\n\n----------------------------------------\n\nTITLE: Bridge Mode Configuration in Midscene YAML\nDESCRIPTION: Example of configuring bridge mode in a Midscene YAML script to automate a web browser on the desktop using a Chrome extension. Useful for reusing cookies, plugins, and page states.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nweb:\n  url: https://www.bing.com\n+ bridgeMode: newTabWithUrl\n```\n\n----------------------------------------\n\nTITLE: Using Instant Actions in Midscene for Direct UI Operations\nDESCRIPTION: Shows how to use the new instant action interfaces (aiInput and aiKeyboardPress) to perform the same search operation more reliably. These interfaces execute specific operations directly while AI only handles element location.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/blog-introducing-instant-actions-and-deep-think.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nawait agent.aiInput('耳机', '搜索框');\nawait agent.aiKeyboardPress('Enter');\n```\n\n----------------------------------------\n\nTITLE: Defining AI-Assisted Wait Method in TypeScript\nDESCRIPTION: Defines the aiWaitFor method for waiting until a specified condition becomes true. It takes an assertion string and optional configuration for timeout and check interval.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nfunction aiWaitFor(\n  assertion: string, \n  options?: { \n    timeoutMs?: number;\n    checkIntervalMs?: number;\n  }\n): Promise<void>;\n```\n\n----------------------------------------\n\nTITLE: Creating Android Device Automation Script with Midscene SDK\nDESCRIPTION: Complete script demonstrating how to automate interactions with an Android device. It connects to a device, opens a browser, searches for headphones on eBay, and extracts product information.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-android.mdx#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AndroidAgent, AndroidDevice, getConnectedDevices } from '@midscene/android';\n\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\nPromise.resolve(\n  (async () => {\n    const devices = await getConnectedDevices();\n    const page = new AndroidDevice(devices[0].udid);\n\n    // 👀 init Midscene agent\n    const agent = new AndroidAgent(page,{\n      aiActionContext:\n        'If any location, permission, user agreement, etc. popup, click agree. If login page pops up, close it.',\n    });\n    await page.connect();\n\n    // 👀 open browser and navigate to ebay.com (Please ensure that the current page has a browser app)\n    await agent.aiAction('open browser and navigate to ebay.com');\n\n    await sleep(5000);\n\n    // 👀 type keywords, perform a search\n    await agent.aiAction('type \"Headphones\" in search box, hit Enter');\n\n    // 👀 wait for loading completed\n    await agent.aiWaitFor(\"There is at least one headphone product\");\n    // or you can use a normal sleep:\n    // await sleep(5000);\n\n    // 👀 understand the page content, extract data\n    const items = await agent.aiQuery(\n      \"{itemTitle: string, price: Number}[], find item in list and corresponding price\"\n    );\n    console.log(\"headphones in stock\", items);\n\n    // 👀 assert by AI\n    await agent.aiAssert(\"There is a category filter on the left\");\n  })()\n);\n```\n\n----------------------------------------\n\nTITLE: Using Bridge Mode in YAML Automation Scripts\nDESCRIPTION: YAML configuration example showing how to use Bridge Mode in Midscene YAML automation scripts by setting the bridgeMode property to newTabWithUrl.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\ntarget:\n  url: https://www.bing.com\n+ bridgeMode: newTabWithUrl\ntasks:\n```\n\n----------------------------------------\n\nTITLE: Enabling Caching in Playwright\nDESCRIPTION: Shows how to enable caching in Playwright mode by setting the MIDSCENE_CACHE environment variable to 1. In Playwright mode, the cacheId is automatically set to the test file name.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/caching.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n- playwright test --config=playwright.config.ts\n+ MIDSCENE_CACHE=1 playwright test --config=playwright.config.ts\n```\n\n----------------------------------------\n\nTITLE: Combining AI Query with Standard Assertions in TypeScript\nDESCRIPTION: Shows an alternative approach to AI-assisted assertions by combining aiQuery with standard JavaScript assertions, reducing the risk of AI hallucination errors.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nconst items = await agent.aiQuery(\n  '\"{name: string, price: number}[], return product names and prices'\n);\nconst onesieItem = items.find(item => item.name === 'Sauce Labs Onesie');\nexpect(onesieItem).toBeTruthy();\nexpect(onesieItem.price).toBe(7.99);\n```\n\n----------------------------------------\n\nTITLE: Using aiHover Method in Midscene\nDESCRIPTION: Example of using the aiHover method to move the mouse over a specific element described in natural language.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nawait agent.aiHover('The version number of the current page');\n```\n\n----------------------------------------\n\nTITLE: Using AI-Assisted Wait Method in TypeScript\nDESCRIPTION: Demonstrates how to use the aiWaitFor method with basic usage and custom options for timeout and check interval.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\n// Basic usage\nawait agent.aiWaitFor(\"There is at least one headphone information displayed on the interface\");\n\n// Using custom options\nawait agent.aiWaitFor(\"The shopping cart icon shows a quantity of 2\", {\n  timeoutMs: 30000,    // Wait for 30 seconds\n  checkIntervalMs: 5000  // Check every 5 seconds\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Android Automation Tasks with YAML in Midscene\nDESCRIPTION: This YAML snippet demonstrates how to set up Android automation tasks in Midscene, including device connection, opening a browser, searching on eBay, extracting item information, and performing assertions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/blog-support-android-automation.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# search headphone on ebay, extract the items info into a json file, and assert the shopping cart icon\n\nandroid:\n  deviceId: s4ey59\n\ntasks:\n  - name: search headphones\n    flow:\n      - aiAction: open browser and navigate to ebay.com\n      - aiAction: type 'Headphones' in ebay search box, hit Enter\n      - sleep: 5000\n      - aiAction: scroll down the page for 800px\n\n  - name: extract headphones info\n    flow:\n      - aiQuery: >\n          {name: string, price: number, subTitle: string}[], return item name, price and the subTitle on the lower right corner of each item\n        name: headphones\n\n  - name: assert Filter button\n    flow:\n      - aiAssert: There is a Filter button on the page\n```\n\n----------------------------------------\n\nTITLE: Example of Improved Dropdown Selection Prompt\nDESCRIPTION: An improved prompt that explicitly outlines the steps required to interact with a dropdown menu, providing clearer guidance for the AI model.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_7\n\nLANGUAGE: log\nCODE:\n```\nClick the \"range\" dropdown menu, and select \"include\"\n```\n\n----------------------------------------\n\nTITLE: Programmatically Configuring AI Services in TypeScript\nDESCRIPTION: Shows how to override AI configuration using JavaScript/TypeScript before running Midscene code. This provides a programmatic alternative to environment variables.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/model-provider.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { overrideAIConfig } from \"@midscene/core/env\";\n\noverrideAIConfig({\n  MIDSCENE_MODEL_NAME: \"...\",\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Using aiKeyboardPress Method in Midscene\nDESCRIPTION: Example of using the aiKeyboardPress method to press a specific key (Enter) on an element described in natural language.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nawait agent.aiKeyboardPress('Enter', 'The search input box');\n```\n\n----------------------------------------\n\nTITLE: Extracting Data with Query Commands\nDESCRIPTION: Example of using the Query tab to extract structured JSON data from web pages\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/common/start-experience.mdx#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nextract the user id from the page, return in { id: string }\n```\n\n----------------------------------------\n\nTITLE: Standard GPT-4o Configuration for Midscene.js\nDESCRIPTION: Basic environment variables setup for using GPT-4o with Midscene.js, including API key, optional custom endpoint, and optional model version specification.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/choose-a-model.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nOPENAI_API_KEY=\"......\"\nOPENAI_BASE_URL=\"https://custom-endpoint.com/compatible-mode/v1\" # optional, if you want an endpoint other than the default one from OpenAI.\nMIDSCENE_MODEL_NAME=\"gpt-4o-2024-11-20\" # optional. The default is \"gpt-4o\".\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Different Interaction Styles in Midscene Android Automation\nDESCRIPTION: This JavaScript snippet showcases two different styles of interaction in Midscene Android automation: auto-planning style and instant action style. It demonstrates how to input text and press keys using both approaches.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/blog-support-android-automation.mdx#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// The auto-planning style:\nawait agent.ai('input \"Headphones\" in search box, hit Enter');\n\n// The instant action style:\nawait agent.aiInput('Headphones', 'search box');\nawait agent.aiKeyboardPress('Enter');\n```\n\n----------------------------------------\n\nTITLE: Configuring PuppeteerAgent for Same-Tab Navigation\nDESCRIPTION: Example showing how to configure the PuppeteerAgent to force same-tab navigation, preventing new tab openings.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-puppeteer.mdx#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst mid = new PuppeteerAgent(page, {\n  forceSameTabNavigation: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing AgentOverChromeBridge for Bridge Mode\nDESCRIPTION: Creates a new AgentOverChromeBridge instance that allows control of desktop Chrome through the Midscene extension bridge.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AgentOverChromeBridge } from \"@midscene/web/bridge-mode\";\n\nconst agent = new AgentOverChromeBridge();\n```\n\n----------------------------------------\n\nTITLE: Validating Pages with Assert Commands\nDESCRIPTION: Example of using the Assert tab to validate page content and properties\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/common/start-experience.mdx#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nthe page title is \"Midscene\"\n```\n\n----------------------------------------\n\nTITLE: Tasks Configuration Schema in Midscene YAML\nDESCRIPTION: The schema definition for the 'tasks' section of a Midscene YAML file, which defines the sequence of automation actions to perform including AI actions, assertions, and other interactions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ntasks:\n  - name: <name>\n    continueOnError: <boolean> # optional, default is false\n    flow:\n      # Auto Planning (.ai)\n      # ----------------\n\n      # perform an action, this is the shortcut for aiAction\n      - ai: <prompt>\n\n      # this is the same as ai\n      - aiAction: <prompt>\n\n      # Instant Action(.aiTap, .aiHover, .aiInput, .aiKeyboardPress, .aiScroll)\n      # ----------------\n\n      # tap an element located by prompt\n      - aiTap: <prompt>\n        deepThink: <boolean> # optional, whether to use deepThink to precisely locate the element\n\n      # hover an element located by prompt\n      - aiHover: <prompt>\n        deepThink: <boolean> # optional, whether to use deepThink to precisely locate the element\n\n      # input text into an element located by prompt\n      - aiInput: <final text content of the input>\n        locate: <prompt>\n        deepThink: <boolean> # optional, whether to use deepThink to precisely locate the element\n\n      # press a key (like Enter, Tab, Escape, etc.) on an element located by prompt\n      - aiKeyboardPress: <key>\n        locate: <prompt>\n        deepThink: <boolean> # optional, whether to use deepThink to precisely locate the element\n\n\n      # scroll globally or on an element located by prompt\n      - aiScroll:\n        direction: 'up' # or 'down' | 'left' | 'right'\n        scrollType: 'once' # or 'untilTop' | 'untilBottom' | 'untilLeft' | 'untilRight'\n        distance: <number> # optional, distance to scroll in px\n        locate: <prompt> # optional, the element to scroll on\n        deepThink: <boolean> # optional, whether to use deepThink to precisely locate the element\n\n      # Data Extraction\n      # ----------------\n\n      # perform a query, return a json object\n      - aiQuery: <prompt> # remember to describe the format of the result in the prompt\n        name: <name> # the name of the result, will be used as the key in the output json\n\n      # More APIs\n      # ----------------\n\n      # wait for a condition to be met with a timeout (ms, optional, default 30000)\n      - aiWaitFor: <prompt>\n        timeout: <ms>\n\n      # perform an assertion\n      - aiAssert: <prompt>\n\n      # sleep for a number of milliseconds\n      - sleep: <ms>\n\n      # evaluate a javascript expression in web page context\n      - javascript: <javascript>\n        name: <name> # assign a name to the return value, will be used as the key in the output json, optional\n\n  - name: <name>\n    flow:\n      # ...\n```\n\n----------------------------------------\n\nTITLE: Example Configuration for UI-TARS Model\nDESCRIPTION: Environment variable configuration for using the UI-TARS model. Shows settings for connecting to a local model server with the appropriate model flag.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/model-provider.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENAI_BASE_URL=\"http://localhost:1234/v1\"\nexport MIDSCENE_MODEL_NAME=\"ui-tars-72b-sft\"\nexport MIDSCENE_USE_VLM_UI_TARS=1\n```\n\n----------------------------------------\n\nTITLE: Configuring UI-TARS Model with Volcengine\nDESCRIPTION: Environment variables setup to use the UI-TARS model through Volcengine. This configuration enables access to UI-TARS visual language model capabilities for element detection and interaction.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/choose-a-model.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nOPENAI_BASE_URL=\"https://ark.cn-beijing.volces.com/api/v3\" \nOPENAI_API_KEY=\"....\"\nMIDSCENE_MODEL_NAME=\"ep-2025...\"\nMIDSCENE_USE_VLM_UI_TARS=1\n```\n\n----------------------------------------\n\nTITLE: Connecting to Current Tab with AgentOverChromeBridge\nDESCRIPTION: Shows how to use the connectCurrentTab method to connect to the currently active Chrome tab.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ntry {\n  await agent.connectCurrentTab();\n  console.log('Successfully connected to current tab');\n} catch (err) {\n  console.error('Connection failed:', err.message);\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Puppeteer with Midscene Agent for Web Automation\nDESCRIPTION: This script demonstrates how to use Puppeteer with Midscene Agent to automate web interactions, perform AI-driven actions, extract data, and make assertions. It includes setting up a browser, navigating to a website, and using AI to interact with the page.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/integrate-with-puppeteer.mdx#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport puppeteer from \"puppeteer\";\nimport { PuppeteerAgent } from \"@midscene/web/puppeteer\";\n\nconst sleep = (ms: number) => new Promise((r) => setTimeout(r, ms));\nPromise.resolve(\n  (async () => {\n    const browser = await puppeteer.launch({\n      headless: false, // here we use headed mode to help debug\n    });\n\n    const page = await browser.newPage();\n    await page.setViewport({\n      width: 1280,\n      height: 800,\n      deviceScaleFactor: 1,\n    });\n\n    await page.goto(\"https://www.ebay.com\");\n    await sleep(5000);\n\n    // 👀 初始化 Midscene agent \n    const agent = new PuppeteerAgent(page);\n\n    // 👀 执行搜索\n    // 注：尽管这是一个英文页面，你也可以用中文指令控制它\n    await agent.aiAction('在搜索框输入 \"Headphones\" ，敲回车');\n    await sleep(5000);\n\n    // 👀 理解页面，提取数据\n    const items = await agent.aiQuery(\n      '{itemTitle: string, price: Number}[], 找到列表里的商品标题和价格',\n    );\n    console.log(\"耳机商品信息\", items);\n\n    // 👀 用 AI 断言\n    await agent.aiAssert(\"界面左侧有类目筛选功能\");\n\n    await browser.close();\n  })()\n);\n```\n\n----------------------------------------\n\nTITLE: Creating Chrome Bridge Mode Demo Script with New Tab\nDESCRIPTION: A complete script that demonstrates connecting to a new Chrome tab using Bridge Mode and executing AI-driven actions. It opens Bing search, types a query, and checks for results.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AgentOverChromeBridge } from \"@midscene/web/bridge-mode\";\n\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\nPromise.resolve(\n  (async () => {\n    const agent = new AgentOverChromeBridge();\n\n    // 这个方法将连接到你的桌面 Chrome 的新标签页\n    // 记得启动你的 Chrome 插件，并点击 'allow connection' 按钮。否则你会得到一个 timeout 错误\n    await agent.connectNewTabWithUrl(\"https://www.bing.com\");\n\n    // 这些方法与普通 Midscene agent 相同\n    await agent.ai('type \"AI 101\" and hit Enter');\n    await sleep(3000);\n\n    await agent.aiAssert(\"there are some search results\");\n    await agent.destroy();\n  })()\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring GPT-4o Model for Midscene.js\nDESCRIPTION: Environment variables setup to use the GPT-4o model with Midscene.js. This includes setting the OpenAI API key, custom base URL (optional), and specific model version (optional).\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/choose-a-model.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nOPENAI_API_KEY=\"......\"\nOPENAI_BASE_URL=\"https://custom-endpoint.com/compatible-mode/v1\" # optional, if you want an endpoint other than the default one from OpenAI.\nMIDSCENE_MODEL_NAME=\"gpt-4o-2024-11-20\" # optional. The default is \"gpt-4o\".\n```\n\n----------------------------------------\n\nTITLE: Configuring Viewport Scale Factor in TypeScript\nDESCRIPTION: Code snippet demonstrating how to set the viewport deviceScaleFactor to resolve screen flickering issues on Mac systems. This configuration helps match the browser's scaling with the system's display settings.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/faq.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nawait page.setViewport({\n  deviceScaleFactor: 2,\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Connected Android Devices with getConnectedDevices()\nDESCRIPTION: Example of retrieving all connected Android devices using getConnectedDevices() and creating an agent with the first device.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-android.mdx#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { agentFromAdbDevice, getConnectedDevices } from '@midscene/android';\n\nconst devices = await getConnectedDevices();\nconsole.log(devices);\nconst agent = await agentFromAdbDevice(devices[0].udid);\n```\n\n----------------------------------------\n\nTITLE: Creating AgentOverChromeBridge Instance in TypeScript\nDESCRIPTION: Demonstrates how to instantiate an AgentOverChromeBridge object.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AgentOverChromeBridge } from \"@midscene/web/bridge-mode\";\n\nconst agent = new AgentOverChromeBridge();\n```\n\n----------------------------------------\n\nTITLE: Configuring Qwen-2.5-VL Model with Openrouter or Aliyun\nDESCRIPTION: Environment variables setup to use the Qwen-2.5-VL model through either Openrouter or Aliyun. This configuration enables visual grounding capabilities with lower token usage compared to GPT-4o.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/choose-a-model.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# openrouter.ai\nexport OPENAI_BASE_URL=\"https://openrouter.ai/api/v1\"\nexport OPENAI_API_KEY=\"......\"\nexport MIDSCENE_MODEL_NAME=\"qwen/qwen2.5-vl-72b-instruct\"\nexport MIDSCENE_USE_QWEN_VL=1\n\n# or from Aliyun.com\nOPENAI_BASE_URL=\"https://dashscope.aliyuncs.com/compatible-mode/v1\"\nexport OPENAI_API_KEY=\"......\"\nMIDSCENE_MODEL_NAME=\"qwen-vl-max-latest\"\nMIDSCENE_USE_QWEN_VL=1\n```\n\n----------------------------------------\n\nTITLE: Configuring PuppeteerAgent for Same-Tab Navigation\nDESCRIPTION: This code snippet shows how to configure the PuppeteerAgent to force navigation within the same tab, which is useful when dealing with links that have target=\"_blank\" attributes.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/integrate-with-puppeteer.mdx#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst mid = new PuppeteerAgent(page, {\n  forceSameTabNavigation: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Playwright Configuration\nDESCRIPTION: Configuration changes needed in playwright.config.ts to enable Midscene integration, including timeout settings and reporter configuration.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-playwright.mdx#2025-04-23_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\nexport default defineConfig({\n  testDir: './e2e',\n+ timeout: 90 * 1000,\n+ reporter: [[\"list\"], [\"@midscene/web/playwright-report\"]],\n});\n```\n\n----------------------------------------\n\nTITLE: API Styles for Android Interactions in Midscene\nDESCRIPTION: This code snippet demonstrates two different API styles for automating Android interactions in Midscene: Auto-planning style for high-level instructions and Instant Actions style for specific, granular operations.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/blog-support-android-automation.mdx#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nawait agent.ai('input \"Headphones\" in search box, hit Enter');\n```\n\nLANGUAGE: javascript\nCODE:\n```\nawait agent.aiInput('Headphones', 'search box');\nawait agent.aiKeyboardPress('Enter');\n```\n\n----------------------------------------\n\nTITLE: Running Midscene YAML Script\nDESCRIPTION: Shows the command to execute a Midscene YAML script using the midscene CLI.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nmidscene ./bing.yaml\n```\n\n----------------------------------------\n\nTITLE: Connecting and Controlling Chrome Tab with AgentOverChromeBridge\nDESCRIPTION: Illustrates how to create an AgentOverChromeBridge instance, connect to a new Chrome tab, perform actions, and destroy the connection.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AgentOverChromeBridge } from \"@midscene/web/bridge-mode\";\n\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\nPromise.resolve(\n  (async () => {\n    const agent = new AgentOverChromeBridge();\n\n    // This will connect to a new tab on your desktop Chrome\n    // remember to start your chrome extension, click 'allow connection' button. Otherwise you will get an timeout error\n    await agent.connectNewTabWithUrl(\"https://www.bing.com\");\n\n    // these are the same as normal Midscene agent\n    await agent.ai('type \"AI 101\" and hit Enter');\n    await sleep(3000);\n\n    await agent.aiAssert(\"there are some search results\");\n    await agent.destroy();\n  })()\n);\n```\n\n----------------------------------------\n\nTITLE: Using launch() Method to Open Apps and URLs\nDESCRIPTION: Example of using the launch method from AndroidAgent to open web pages or native Android applications by specifying URLs or package/activity names.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/integrate-with-android.mdx#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AndroidAgent, AndroidDevice } from '@midscene/android';\n\nconst page = new AndroidDevice('s4ey59');\nconst agent = new AndroidAgent(page);\n\nawait agent.launch('https://www.ebay.com'); // 打开网页\nawait agent.launch('com.android.settings'); // 打开系统设置 app(package name)\nawait agent.launch('com.android.settings/.Settings'); // 打开系统设置 app(package name) 的 .Settings(activity name) 页面\n```\n\n----------------------------------------\n\nTITLE: Web Configuration Schema in Midscene YAML\nDESCRIPTION: The schema definition for the 'web' section of a Midscene YAML file, which configures browser automation parameters such as URL, viewport size, cookies, and network settings.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nweb:\n  # The URL to visit, required. If `serve` is provided, provide the path to the file to visit\n  url: <url>\n\n  # Serve the local path as a static server, optional\n  serve: <root-directory>\n\n  # The user agent to use, optional\n  userAgent: <ua>\n\n  # number, the viewport width, default is 1280, optional\n  viewportWidth: <width>\n\n  # number, the viewport height, default is 960, optional\n  viewportHeight: <height>\n\n  # number, the device scale factor (dpr), default is 1, optional\n  deviceScaleFactor: <scale>\n\n  # string, the path to the json format cookie file, optional\n  cookie: <path-to-cookie-file>\n  \n  # object, the strategy to wait for network idle, optional\n  waitForNetworkIdle:\n    # number, the timeout in milliseconds, 10000ms for default, optional\n    timeout: <ms>\n    # boolean, continue on network idle error, true for default\n    continueOnNetworkIdleError: <boolean>\n  \n  # string, the path to save the aiQuery result, optional\n  output: <path-to-output-file>\n\n  # boolean, if limit the popup to the current page, true for default in yaml script\n  forceSameTabNavigation: <boolean>\n\n  # string, the bridge mode to use, optional, default is false, can be 'newTabWithUrl' or 'currentTab'. More details see the following section\n  bridgeMode: false | 'newTabWithUrl' | 'currentTab'\n\n  # boolean, if close the new tabs after the bridge is disconnected, optional, default is false\n  closeNewTabsAfterDisconnect: <boolean>\n\n  # boolean, if allow insecure https certs, optional, default is false\n  acceptInsecureCerts: <boolean>\n\n  # string, the background knowledge to send to the AI model when calling aiAction, optional\n  aiActionContext: <string>\n```\n\n----------------------------------------\n\nTITLE: Using agentFromAdbDevice() to Create an AndroidAgent\nDESCRIPTION: Examples of creating an AndroidAgent from a connected ADB device, with or without specifying a device ID.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-android.mdx#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { agentFromAdbDevice } from '@midscene/android';\n\nconst agent = await agentFromAdbDevice('s4ey59'); // create a AndroidAgent from a specific adb device\nconst agent = await agentFromAdbDevice(); // no deviceId, use the first connected device\n```\n\n----------------------------------------\n\nTITLE: Overriding AI Configuration in TypeScript\nDESCRIPTION: Shows how to override environment variables at runtime using the overrideAIConfig method for configuring OpenAI and Midscene settings.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_23\n\nLANGUAGE: typescript\nCODE:\n```\nimport { overrideAIConfig } from '@midscene/web/puppeteer'; // or another Agent\n\noverrideAIConfig({\n  OPENAI_BASE_URL: \"...\",\n  OPENAI_API_KEY: \"...\",\n  MIDSCENE_MODEL_NAME: \"...\"\n});\n```\n\n----------------------------------------\n\nTITLE: Executing YAML Script with TypeScript and YAML\nDESCRIPTION: Demonstrates how to use the runYaml method to execute a YAML script that performs a weather search and query. The script includes AI-assisted actions and queries.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\nconst { result } = await agent.runYaml(`\ntasks:\n  - name: search weather\n    flow:\n      - ai: input 'weather today' in input box, click search button\n      - sleep: 3000\n\n  - name: query weather\n    flow:\n      - aiQuery: \"the result shows the weather info, {description: string}\"\n`);\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Getting Connected Android Devices\nDESCRIPTION: Example of retrieving a list of connected Android devices and using the first device to create an agent. Shows how to access device information from the returned array.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/integrate-with-android.mdx#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { agentFromAdbDevice, getConnectedDevices } from '@midscene/android'\n\nconst devices = await getConnectedDevices();\nconsole.log(devices);\nconst agent = await agentFromAdbDevice(devices[0].udid);\n```\n\n----------------------------------------\n\nTITLE: Running the Bridge Mode Demo Script\nDESCRIPTION: Executes the Chrome Bridge Mode demo script using tsx, which connects to Chrome and automates interactions after the 'Allow connection' button is clicked in the extension.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntsx demo-new-tab.ts\n```\n\n----------------------------------------\n\nTITLE: Running the Midscene Android Script with TSX\nDESCRIPTION: Command to execute the Android automation script using TSX, which allows running TypeScript files directly.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-android.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# run\nnpx tsx demo.ts\n```\n\n----------------------------------------\n\nTITLE: Configuring Midscene MCP Server Settings\nDESCRIPTION: JSON configuration for setting up the Midscene MCP Server with environment variables for OpenAI API key, model name, and request timeout settings.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/mcp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-midscene\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@midscene/mcp@0.15.2-beta-20250422125908.0\"\n      ],\n      \"env\": {\n        \"OPENAI_API_KEY\": \"YOUR_OPENAI_API_KEY\",\n        \"MIDSCENE_MODEL_NAME\": \"YOUR_MODEL_NAME\",\n        \"MCP_SERVER_REQUEST_TIMEOUT\": \"800000\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using AI Interface for Automated Planning in Midscene\nDESCRIPTION: Demonstrates the traditional .ai() interface where Midscene calls LLM to plan and execute steps automatically. This approach follows the common AI Agent pattern but may result in unpredictable behavior.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/blog-introducing-instant-actions-and-deep-think.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nawait agent.ai('在搜索框中输入 \"Headphones\"，按下回车键');\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Example in Midscene YAML\nDESCRIPTION: Example of using environment variables in a Midscene YAML script by referencing them with ${variable-name} syntax. Demonstrates setting up a .env file and using the variables in the script.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_11\n\nLANGUAGE: env\nCODE:\n```\ntopic=weather today\n```\n\n----------------------------------------\n\nTITLE: Running Puppeteer Script with tsx\nDESCRIPTION: Command to execute the Puppeteer automation script using tsx, showing expected console output format for retrieved headphone data.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-puppeteer.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# run\nnpx tsx demo.ts\n\n# it should print \n#  [\n#   {\n#     itemTitle: 'Beats by Dr. Dre Studio Buds Totally Wireless Noise Cancelling In Ear + OPEN BOX',\n#     price: 505.15\n#   },\n#   {\n#     itemTitle: 'Skullcandy Indy Truly Wireless Earbuds-Headphones Green Mint',\n#     price: 186.69\n#   }\n# ]\n```\n\n----------------------------------------\n\nTITLE: Installing Android Playground via NPX\nDESCRIPTION: Command to install and run the midscene Android playground package using NPX. Requires ADB to be installed as a prerequisite.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/android-playground/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx @midscene/android-playground\n```\n\n----------------------------------------\n\nTITLE: Using launch() Method in AndroidAgent\nDESCRIPTION: Example of using the launch() method to open webpages or native apps on Android devices. This method can accept URLs or package/activity names.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-android.mdx#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AndroidAgent, AndroidDevice } from '@midscene/android';\n\nconst page = new AndroidDevice('s4ey59');\nconst agent = new AndroidAgent(page);\n\nawait agent.launch('https://www.ebay.com'); // open a webpage\nawait agent.launch('com.android.settings'); // open a native page\nawait agent.launch('com.android.settings/.Settings'); // open a native page\n```\n\n----------------------------------------\n\nTITLE: Setting OpenAI API Key as Environment Variable in Bash\nDESCRIPTION: Sets the OpenAI API key as an environment variable, which is required for using OpenAI models in the Midscene project. This is a placeholder that should be replaced with the user's actual API key.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/common/setup-env.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# replace with your own\nexport OPENAI_API_KEY=\"sk-abcdefghijklmnopqrstuvwxyz\"\n```\n\n----------------------------------------\n\nTITLE: Deep Think Function Signature in Midscene\nDESCRIPTION: Shows the function signature for using the deepThink option with instant action interfaces. This option improves element targeting accuracy by first finding a containing area before focusing on the target element.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/blog-introducing-instant-actions-and-deep-think.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nawait agent.aiTap('target', { deepThink: true });\n```\n\n----------------------------------------\n\nTITLE: Example Configuration for OpenAI's GPT-4o Model\nDESCRIPTION: Environment variable configuration example for using OpenAI's GPT-4o model. Shows how to set the API key, optional base URL, and model specification.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/model-provider.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENAI_API_KEY=\"sk-...\"\nexport OPENAI_BASE_URL=\"https://endpoint.some_other_provider.com/v1\" # 可选，如果你想要使用一个不同于 OpenAI 官方的接入点\nexport MIDSCENE_MODEL_NAME=\"gpt-4o-2024-11-20\" # 可选，默认是 \"gpt-4o\"\n```\n\n----------------------------------------\n\nTITLE: Checking Connected Android Devices with ADB\nDESCRIPTION: Command to list all Android devices connected to the computer via ADB, with the -l flag providing additional device details.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/common/prepare-android.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nadb devices -l\n```\n\n----------------------------------------\n\nTITLE: Running Inspection Mode\nDESCRIPTION: Command to run the inspection mode for the MCP server, with a note about potential SSE link errors when running multiple inspect pages.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/mcp/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# before run this command, you need to build the library first\npnpm run inspect\n```\n\n----------------------------------------\n\nTITLE: Anthropic Claude Configuration\nDESCRIPTION: Environment variable setup for using Claude model from Anthropic.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/model-provider.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nexport MIDSCENE_USE_ANTHROPIC_SDK=1\nexport ANTHROPIC_API_KEY=\".....\"\nexport MIDSCENE_MODEL_NAME=\"claude-3-opus-20240229\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Gemini-2.5-Pro for Midscene.js\nDESCRIPTION: Environment variables setup to integrate Google's Gemini-2.5-Pro model with Midscene.js. This enables the use of Google's visual language capabilities for web automation.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/choose-a-model.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nOPENAI_BASE_URL=\"https://generativelanguage.googleapis.com/v1beta/openai/\"\nOPENAI_API_KEY=\"......\"\nMIDSCENE_MODEL_NAME=\"gemini-2.5-pro\"\nMIDSCENE_USE_GEMINI=1\n```\n\n----------------------------------------\n\nTITLE: Example of Improved User Interface Prompt for Search Action\nDESCRIPTION: An improved version of the search prompt with specific details about the UI element location and the expected action sequence, which helps the AI model understand context better.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_1\n\nLANGUAGE: log\nCODE:\n```\nClick the search box (it should be along with a region switch, such as 'domestic' or 'international'), type 'headphone', and hit Enter.\n```\n\n----------------------------------------\n\nTITLE: Performing Instant Actions with Tap Commands\nDESCRIPTION: Example of using the Tap feature for direct element interaction\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/common/start-experience.mdx#2025-04-23_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nthe login button\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration for AI Features\nDESCRIPTION: Example .env file configuration for AI-related features with OpenAI API settings.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/CONTRIBUTING.md#2025-04-23_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nOPENAI_API_KEY=\"your_token\"\nMIDSCENE_MODEL_NAME=\"gpt-4o-2024-08-06\"\n```\n\n----------------------------------------\n\nTITLE: Using aiScroll Method in Midscene\nDESCRIPTION: Example of using the aiScroll method to scroll a specific element described in natural language in a particular direction and distance.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nawait agent.aiScroll({ direction: 'up', distance: 100, scrollType: 'once' }, 'The form panel');\n```\n\n----------------------------------------\n\nTITLE: OpenRouter Custom Headers Configuration\nDESCRIPTION: Environment variable setup with custom request headers for OpenRouter integration.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/model-provider.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENAI_BASE_URL=\"https://openrouter.ai/api/v1\"\nexport OPENAI_API_KEY=\"...\"\nexport MIDSCENE_MODEL_NAME=\"...\"\nexport MIDSCENE_OPENAI_INIT_CONFIG_JSON='{\"defaultHeaders\":{\"HTTP-Referer\":\"...\",\"X-Title\":\"...\"}}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Qwen-2.5-VL Through Openrouter\nDESCRIPTION: Environment variables setup for using Qwen-2.5-VL through the Openrouter API. This configuration enables visual grounding capabilities with appropriate settings for element detection.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/choose-a-model.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nOPENAI_BASE_URL=\"https://openrouter.ai/api/v1\"\nOPENAI_API_KEY=\"......\"\nMIDSCENE_MODEL_NAME=\"qwen/qwen2.5-vl-72b-instruct\"\nMIDSCENE_USE_QWEN_VL=1\n```\n\n----------------------------------------\n\nTITLE: Example of Improved User Interface Prompt for Assertion\nDESCRIPTION: An improved assertion prompt that clearly specifies what element to look for and what state to verify, providing better guidance for the AI model.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_3\n\nLANGUAGE: log\nCODE:\n```\nAssert: There is a 'food delivery service' on page, and is in normal state\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration File for Midscene\nDESCRIPTION: An example of a .env file that stores configuration variables for Midscene, particularly the OpenAI API key which is required for AI-powered automation features.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_1\n\nLANGUAGE: env\nCODE:\n```\nOPENAI_API_KEY=\"sk-abcdefghijklmnopqrstuvwxyz\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dotenv for Environment Variable Management\nDESCRIPTION: Shows how to install the dotenv package using npm. Dotenv is used to load environment variables from a .env file, providing an alternative method for configuring API keys.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/model-provider.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# 安装 dotenv\nnpm install dotenv --save\n```\n\n----------------------------------------\n\nTITLE: Example Configuration for Alibaba Cloud's Qwen VL Model\nDESCRIPTION: Environment variable configuration for using Alibaba Cloud's Qwen VL (Vision-Language) model. Includes required settings for the DashScope compatible API.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/model-provider.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENAI_API_KEY=\"sk-...\"\nexport OPENAI_BASE_URL=\"https://dashscope.aliyuncs.com/compatible-mode/v1\"\nexport MIDSCENE_MODEL_NAME=\"qwen-vl-max-latest\"\nexport MIDSCENE_USE_QWEN_VL=1\n```\n\n----------------------------------------\n\nTITLE: Configuring Gemini-2.5-Pro Model with Google Gemini\nDESCRIPTION: Environment variables setup to use Google's Gemini-2.5-Pro model with Midscene.js. This configuration enables access to Google's visual grounding capabilities through their API.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/choose-a-model.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nOPENAI_BASE_URL=\"https://generativelanguage.googleapis.com/v1beta/openai/\"\nOPENAI_API_KEY=\"......\"\nMIDSCENE_MODEL_NAME=\"gemini-2.5-pro-preview-03-25\"\nMIDSCENE_USE_GEMINI=1\n```\n\n----------------------------------------\n\nTITLE: Declaring aiKeyboardPress Function Type in TypeScript\nDESCRIPTION: TypeScript function type declaration for the aiKeyboardPress method, which allows pressing keyboard keys on specific elements or globally.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction aiKeyboardPress(key: string, locate?: string, options?: Object): Promise<void>;\n```\n\n----------------------------------------\n\nTITLE: Importing Dotenv in TypeScript\nDESCRIPTION: Shows how to import the dotenv configuration in a TypeScript file. This import automatically loads environment variables from the .env file into process.env.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/model-provider.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'dotenv/config';\n```\n\n----------------------------------------\n\nTITLE: Git Email Configuration Commands\nDESCRIPTION: Commands for checking and configuring Git email settings both globally and locally.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit config --list | grep email\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit config --global user.email \"SOME_EMAIL@example.com\"\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit config user.email \"SOME_EMAIL@example.com\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Bridge Mode in YAML Script\nDESCRIPTION: Demonstrates how to set up bridge mode in a YAML script for Midscene automation.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ntarget:\n  url: https://www.bing.com\n  bridgeMode: newTabWithUrl\n  closeNewTabsAfterDisconnect: true\ntasks:\n```\n\n----------------------------------------\n\nTITLE: Setting System Environment Variables for OpenAI\nDESCRIPTION: Basic bash command to set OpenAI API key in system environment variables.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/model-provider.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# replace by your own\nexport OPENAI_API_KEY=\"sk-abcdefghijklmnopqrstuvwxyz\"\n```\n\n----------------------------------------\n\nTITLE: Self-hosted UI-TARS Configuration\nDESCRIPTION: Environment variable setup for using a self-hosted UI-TARS model.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/model-provider.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENAI_API_KEY=\"sk-...\"\nexport OPENAI_BASE_URL=\"http://localhost:1234/v1\"\nexport MIDSCENE_MODEL_NAME=\"ui-tars-72b-sft\"\nexport MIDSCENE_USE_VLM_UI_TARS=1\n```\n\n----------------------------------------\n\nTITLE: Declaring aiScroll Function Type in TypeScript\nDESCRIPTION: TypeScript function type declaration for the aiScroll method, which allows scrolling a page or a specific element in different directions and distances.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nfunction aiScroll(scrollParam: PlanningActionParamScroll, locate?: string, options?: Object): Promise<void>;\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Midscene Report with pnpm\nDESCRIPTION: Command to install all required dependencies for the Midscene Report project using pnpm package manager.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/report/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Implementing Video Player Controls and Interface in React JSX\nDESCRIPTION: This code represents a React-based video player interface with multiple components including time displays, playback controls, quality settings, share buttons, and a search bar. Each element has positioning attributes (left, top, width, height) and unique marker IDs for tracking.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/aweme-play/element-tree.txt#2025-04-23_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <div id=\"illpl\" markerId=\"0\" svgContent=\"true\" left=\"32\" top=\"761\" width=\"16\" height=\"18\">\n  </div>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"mcphb\" markerId=\"1\" svgContent=\"true\" left=\"59\" top=\"56\" width=\"15\" height=\"22\">\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <input id=\"feikj\" markerId=\"2\" class=\".YEhxqQNi.jUqDCyab\" data-e2e=\"searchbar-input\" maxlength=\"100\" undefined=\"\" type=\"text\" left=\"136\" top=\"49\" width=\"207\" height=\"36\">\n  </input>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<div id=\"jnhha\" markerId=\"3\" class=\".YQK6ciuU\" data-e2e=\"searchbar-button\" type=\"button\" left=\"343\" top=\"49\" width=\"69\" height=\"36\">\n  Search\n</div>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"fmbcn\" markerId=\"4\" svgContent=\"true\" left=\"17\" top=\"769\" width=\"14\" height=\"16\">\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"lnalf\" markerId=\"5\"  left=\"45\" top=\"767\" width=\"37\" height=\"20\">\n    00:00\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"pmhne\" markerId=\"6\"  left=\"89\" top=\"767\" width=\"7\" height=\"20\">\n    /\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"elapi\" markerId=\"7\"  left=\"102\" top=\"767\" width=\"37\" height=\"20\">\n    00:00\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<xg-inner-controls id=\"jcfcg\" markerId=\"8\" class=\".xg-center-grid\" left=\"0\" top=\"742\" width=\"1280\" height=\"22\">\n</xg-inner-controls>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"nochb\" markerId=\"9\" svgContent=\"true\" left=\"1240\" top=\"769\" width=\"17\" height=\"16\">\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"djknm\" markerId=\"10\" svgContent=\"true\" left=\"1201\" top=\"768\" width=\"21\" height=\"17\">\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <div id=\"pmfho\" markerId=\"11\" svgContent=\"true\" left=\"1165\" top=\"769\" width=\"22\" height=\"17\">\n  </div>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"ifnbk\" markerId=\"12\"  left=\"1206\" top=\"726\" width=\"8\" height=\"19\">\n    L\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <div id=\"omoni\" markerId=\"13\"  left=\"1099\" top=\"767\" width=\"42\" height=\"20\">\n    Speed\n  </div>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <div id=\"mkfdi\" markerId=\"14\"  left=\"1045\" top=\"767\" width=\"46\" height=\"20\">\n    Quality\n  </div>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <div id=\"ehbpm\" markerId=\"15\" aria-checked=\"true\" class=\".xg-switch\" aria-labelledby=\"xg-switch-pip\" type=\"button\" left=\"970\" top=\"770\" width=\"24\" height=\"14\">\n  </div>\n  <>\n    <span id=\"kblff\" markerId=\"16\"  left=\"998\" top=\"767\" width=\"35\" height=\"20\">\n      Clear\n    </span>\n  </>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <div id=\"llfkn\" markerId=\"17\" aria-checked=\"true\" class=\".xg-switch.xg-switch-checked\" aria-labelledby=\"xg-switch-pip\" type=\"button\" left=\"876\" top=\"770\" width=\"24\" height=\"14\">\n  </div>\n  <>\n    <span id=\"kbhpj\" markerId=\"18\"  left=\"904\" top=\"767\" width=\"58\" height=\"20\">\n      Autoplay\n    </span>\n  </>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"oegcn\" markerId=\"19\" svgContent=\"true\" left=\"1210\" top=\"185\" width=\"13\" height=\"8\">\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"ikeln\" markerId=\"20\" svgContent=\"true\" left=\"1210\" top=\"224\" width=\"13\" height=\"8\">\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"bgmlm\" markerId=\"21\" undefined=\"\" class=\".fiWP27dC\" left=\"1196\" top=\"275\" width=\"40\" height=\"40\">\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"fddee\" markerId=\"22\" svgContent=\"true\" left=\"1207\" top=\"306\" width=\"17\" height=\"17\">\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"ebgie\" markerId=\"23\" svgContent=\"true\" left=\"1204\" top=\"351\" width=\"23\" height=\"21\">\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <div id=\"mifpj\" markerId=\"24\"  left=\"1195\" top=\"385\" width=\"41\" height=\"21\">\n    64.9K\n  </div>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"cjmim\" markerId=\"25\" svgContent=\"true\" left=\"1205\" top=\"425\" width=\"22\" height=\"22\">\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <div id=\"bkedb\" markerId=\"26\"  left=\"1198\" top=\"459\" width=\"35\" height=\"21\">\n    2074\n  </div>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"moimk\" markerId=\"27\" svgContent=\"true\" left=\"1204\" top=\"498\" width=\"23\" height=\"22\">\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <div id=\"bdcmj\" markerId=\"28\"  left=\"1198\" top=\"533\" width=\"36\" height=\"21\">\n    9349\n  </div>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"mgcne\" markerId=\"29\" svgContent=\"true\" left=\"1203\" top=\"575\" width=\"25\" height=\"18\">\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <div id=\"ininj\" markerId=\"30\"  left=\"1198\" top=\"607\" width=\"36\" height=\"21\">\n    9544\n  </div>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <div id=\"fojhm\" markerId=\"31\" svgContent=\"true\" left=\"1205\" top=\"648\" width=\"21\" height=\"18\">\n  </div>\n  <>\n    <div id=\"enclg\" markerId=\"32\"  left=\"1189\" top=\"673\" width=\"53\" height=\"21\">\n      Related\n    </div>\n  </>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"bhdmb\" markerId=\"34\"  left=\"520\" top=\"349\" width=\"240\" height=\"20\">\n    不支持的音频/视频格式 或 设备无网络\n  </span>\n</>\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <span id=\"glcjn\" markerId=\"35\"  left=\"602\" top=\"385\" width=\"42\" height=\"20\">\n    请试试\n  </span>\n  <>\n    <span id=\"gkndl\" markerId=\"36\"  left=\"647\" top=\"385\" width=\"28\" height=\"20\">\n      刷新\n    </span>\n  </>\n</>\n```\n\n----------------------------------------\n\nTITLE: Configuring Dotenv in TypeScript\nDESCRIPTION: Example of importing dotenv configuration in a TypeScript file for environment variable management.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/model-provider.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'dotenv/config';\n```\n\n----------------------------------------\n\nTITLE: OpenAI GPT-4 Configuration\nDESCRIPTION: Environment variable setup for using the GPT-4 model from OpenAI with custom endpoint.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/model-provider.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENAI_API_KEY=\"sk-...\"\nexport OPENAI_BASE_URL=\"https://endpoint.some_other_provider.com/v1\" # config this if you want to use a different endpoint\nexport MIDSCENE_MODEL_NAME=\"gpt-4o-2024-11-20\" # optional, the default is \"gpt-4o\"\n```\n\n----------------------------------------\n\nTITLE: Setting Cache ID in JavaScript Agent\nDESCRIPTION: Demonstrates how to set the cacheId property when initializing a PuppeteerAgent to specify a unique cache identifier. This is required when using JavaScript SDK as it's not set automatically.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/caching.mdx#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst mid = new PuppeteerAgent(originPage, {\n  cacheId: 'puppeteer-swag-sab', // specify cache id\n});\n```\n\n----------------------------------------\n\nTITLE: Rendering Ant Design Component Overview Page Structure in HTML\nDESCRIPTION: This HTML snippet defines the structure of an Ant Design component overview page. It includes a header with logo, search bar, and navigation links, as well as a sidebar listing component categories and individual components with their Chinese translations.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-tooltip/element-tree.txt#2025-04-23_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <a id=\"hdoie\"  draggable=\"false\" alt=\"logo\" left=\"40\" top=\"16\" width=\"32\" height=\"32\">\n  </a>\n  <>\n    <span id=\"mfigm\" markerId=\"1\"  left=\"84\" top=\"19\" width=\"93\" height=\"26\">\n      Ant Design\n    </span>\n  </>\n</>\n<>\n  <div id=\"kdhdf\" markerId=\"2\" svgContent=\"true\" left=\"338\" top=\"26\" width=\"13\" height=\"13\">\n  </div>\n  <input id=\"ncmaf\" markerId=\"3\" class=\".dumi-default-search-bar-input\" placeholder=\"输入关键字搜索...\" undefined=\"\" left=\"321\" top=\"21\" width=\"280\" height=\"22\">\n    输入关键字搜索...\n  </input>\n  <>\n    <span id=\"fccei\" markerId=\"4\"  left=\"610\" top=\"25\" width=\"11\" height=\"14\">\n      ⌘\n    </span>\n    <span id=\"oekmn\" markerId=\"5\"  left=\"621\" top=\"25\" width=\"11\" height=\"14\">\n      K\n    </span>\n  </>\n</>\n      <>\n        <a id=\"mbjje\" markerId=\"6\"  left=\"1288\" top=\"23\" width=\"28\" height=\"19\">\n          设计\n        </a>\n      </>\n      <>\n        <a id=\"kbooi\" markerId=\"7\"  left=\"1352\" top=\"23\" width=\"28\" height=\"19\">\n          研发\n        </a>\n      </>\n      <>\n        <a id=\"oojpd\" markerId=\"8\"  left=\"1416\" top=\"23\" width=\"28\" height=\"19\">\n          组件\n        </a>\n      </>\n      <>\n        <a id=\"hjock\" markerId=\"9\"  left=\"1480\" top=\"23\" width=\"28\" height=\"19\">\n          博客\n        </a>\n      </>\n      <>\n        <a id=\"gljpp\" markerId=\"10\"  left=\"1544\" top=\"23\" width=\"28\" height=\"19\">\n          资源\n        </a>\n      </>\n      <>\n        <a id=\"abeae\" markerId=\"11\"  left=\"1602\" top=\"23\" width=\"56\" height=\"19\">\n          国内镜像\n        </a>\n      </>\n      <>\n        <span id=\"dmopn\" markerId=\"12\"  left=\"1690\" top=\"23\" width=\"41\" height=\"17\">\n          5.23.4\n        </span>\n      </>\n<div id=\"bmfja\" markerId=\"13\" type=\"button\" class=\".acss-a4e8ca\" left=\"1784\" top=\"16\" width=\"32\" height=\"32\">\n  中\nEn\n</div>\n<div id=\"fnplj\" markerId=\"14\" type=\"button\" class=\".acss-a4e8ca\" aria-label=\"RTL Switch Button\" left=\"1828\" top=\"16\" width=\"32\" height=\"32\">\n</div>\n<>\n  <a id=\"illkj\" markerId=\"15\" type=\"button\" class=\".acss-a4e8ca\" left=\"1872\" top=\"16\" width=\"32\" height=\"32\">\n  </a>\n</>\n        <>\n          <span id=\"cgjbn\" markerId=\"16\"  left=\"44\" top=\"119\" width=\"56\" height=\"19\">\n            组件总览\n          </span>\n        </>\n<>\n  <div id=\"dbfhp\" markerId=\"17\"  left=\"44\" top=\"174\" width=\"28\" height=\"19\">\n    通用\n  </div>\n</>\n            <>\n              <span id=\"hdpka\" markerId=\"18\"  left=\"44\" top=\"230\" width=\"42\" height=\"19\">\n                Button\n              </span>\n            </>\n            <>\n              <span id=\"injck\" markerId=\"19\"  left=\"94\" top=\"231\" width=\"24\" height=\"17\">\n                按钮\n              </span>\n            </>\n            <>\n              <span id=\"blbpf\" markerId=\"20\"  left=\"44\" top=\"274\" width=\"73\" height=\"19\">\n                FloatButton\n              </span>\n            </>\n            <>\n              <span id=\"pjlpj\" markerId=\"21\"  left=\"125\" top=\"275\" width=\"48\" height=\"17\">\n                悬浮按钮\n              </span>\n            </>\n        <>\n          <span id=\"glbmn\" markerId=\"22\"  left=\"263\" top=\"276\" width=\"28\" height=\"14\">\n            5.0.0\n          </span>\n        </>\n            <>\n              <span id=\"lgmbn\" markerId=\"23\"  left=\"44\" top=\"318\" width=\"27\" height=\"19\">\n                Icon\n              </span>\n            </>\n            <>\n              <span id=\"npcno\" markerId=\"24\"  left=\"79\" top=\"319\" width=\"24\" height=\"17\">\n                图标\n              </span>\n            </>\n            <>\n              <span id=\"jhmgb\" markerId=\"25\"  left=\"44\" top=\"362\" width=\"74\" height=\"19\">\n                Typography\n              </span>\n            </>\n            <>\n              <span id=\"bfjin\" markerId=\"26\"  left=\"126\" top=\"363\" width=\"24\" height=\"17\">\n                排版\n              </span>\n            </>\n<>\n  <div id=\"knnlf\" markerId=\"27\"  left=\"44\" top=\"417\" width=\"28\" height=\"19\">\n    布局\n  </div>\n</>\n            <>\n              <span id=\"milel\" markerId=\"28\"  left=\"44\" top=\"473\" width=\"45\" height=\"19\">\n                Divider\n              </span>\n            </>\n            <>\n              <span id=\"haena\" markerId=\"29\"  left=\"97\" top=\"474\" width=\"36\" height=\"17\">\n                分割线\n              </span>\n            </>\n            <>\n              <span id=\"emgpf\" markerId=\"30\"  left=\"44\" top=\"517\" width=\"26\" height=\"19\">\n                Flex\n              </span>\n            </>\n            <>\n              <span id=\"bmoal\" markerId=\"31\"  left=\"78\" top=\"518\" width=\"48\" height=\"17\">\n                弹性布局\n              </span>\n            </>\n        <>\n          <span id=\"ghiad\" markerId=\"32\"  left=\"257\" top=\"519\" width=\"34\" height=\"14\">\n            5.10.0\n          </span>\n        </>\n            <>\n              <span id=\"ljafl\" markerId=\"33\"  left=\"44\" top=\"561\" width=\"27\" height=\"19\">\n                Grid\n              </span>\n            </>\n            <>\n              <span id=\"chihb\" markerId=\"34\"  left=\"79\" top=\"562\" width=\"24\" height=\"17\">\n                栅格\n              </span>\n            </>\n            <>\n              <span id=\"fkpgm\" markerId=\"35\"  left=\"44\" top=\"605\" width=\"42\" height=\"19\">\n                Layout\n              </span>\n            </>\n            <>\n              <span id=\"jbpeh\" markerId=\"36\"  left=\"94\" top=\"606\" width=\"24\" height=\"17\">\n                布局\n              </span>\n            </>\n            <>\n              <span id=\"kpmmp\" markerId=\"37\"  left=\"44\" top=\"649\" width=\"38\" height=\"19\">\n                Space\n              </span>\n            </>\n            <>\n              <span id=\"ioddf\" markerId=\"38\"  left=\"90\" top=\"650\" width=\"24\" height=\"17\">\n                间距\n              </span>\n            </>\n            <>\n              <span id=\"bjjnc\" markerId=\"39\"  left=\"44\" top=\"693\" width=\"45\" height=\"19\">\n                Splitter\n              </span>\n            </>\n            <>\n              <span id=\"kfneg\" markerId=\"40\"  left=\"97\" top=\"694\" width=\"48\" height=\"17\">\n                分隔面板\n              </span>\n            </>\n        <>\n          <span id=\"feenk\" markerId=\"41\"  left=\"257\" top=\"695\" width=\"34\" height=\"14\">\n            5.21.0\n          </span>\n        </>\n<>\n  <div id=\"lfpfh\" markerId=\"42\"  left=\"44\" top=\"748\" width=\"28\" height=\"19\">\n    导航\n  </div>\n</>\n            <>\n              <span id=\"bgkfb\" markerId=\"43\"  left=\"44\" top=\"804\" width=\"45\" height=\"19\">\n                Anchor\n              </span>\n            </>\n            <>\n              <span id=\"ckjfc\" markerId=\"44\"  left=\"97\" top=\"805\" width=\"24\" height=\"17\">\n                锚点\n              </span>\n            </>\n            <>\n```\n\n----------------------------------------\n\nTITLE: Ant Design Navigation Layout JSX\nDESCRIPTION: JSX markup structure for Ant Design navigation interface, including logo, search bar, main navigation links, language selector, and component category listings. Contains positioning attributes for layout control.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-pagination/element-tree.txt#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <a id=\"hdoie\" draggable=\"false\" alt=\"logo\" left=\"40\" top=\"16\" width=\"32\" height=\"32\">\n  </a>\n  <>\n    <span id=\"mfigm\" markerId=\"1\" left=\"84\" top=\"19\" width=\"93\" height=\"26\">\n      Ant Design\n    </span>\n  </>\n</>\n<>\n  <div id=\"kdhdf\" markerId=\"2\" svgContent=\"true\" left=\"338\" top=\"26\" width=\"13\" height=\"13\">\n  </div>\n  <input id=\"ncmaf\" markerId=\"3\" class=\".dumi-default-search-bar-input\" placeholder=\"输入关键字搜索...\" undefined=\"\" left=\"321\" top=\"21\" width=\"280\" height=\"22\">\n    输入关键字搜索...\n  </input>\n  <>\n    <span id=\"fccei\" markerId=\"4\" left=\"610\" top=\"25\" width=\"11\" height=\"14\">\n      ⌘\n    </span>\n    <span id=\"oekmn\" markerId=\"5\" left=\"621\" top=\"25\" width=\"11\" height=\"14\">\n      K\n    </span>\n  </>\n</>\n[...additional navigation and component list markup...]\n```\n\n----------------------------------------\n\nTITLE: Configuring UI-TARS Environment Variables\nDESCRIPTION: Essential environment variable configuration for enabling UI-TARS mode in Midscene.js. Includes base URL, API key, model name, and the required UI-TARS flag.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/choose-a-model.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nOPENAI_BASE_URL=\".....\"\nOPENAI_API_KEY=\"......\" \nMIDSCENE_MODEL_NAME=\"ui-tars-72b-sft\"\nMIDSCENE_USE_VLM_UI_TARS=1 # remember to include this for UI-TARS mode !\n```\n\n----------------------------------------\n\nTITLE: Setting OpenAI API Key for Midscene Bridge Mode\nDESCRIPTION: Sets the OpenAI API Key as an environment variable for authentication with OpenAI services when using Midscene Bridge Mode.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# 更新为你自己的 Key\nexport OPENAI_API_KEY=\"sk-abcdefghijklmnopqrstuvwxyz\"\n```\n\n----------------------------------------\n\nTITLE: Azure OpenAI ADT Token Configuration\nDESCRIPTION: Environment variable setup for Azure OpenAI Service using ADT token provider.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/model-provider.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# this is always true when using Azure OpenAI Service\nexport MIDSCENE_USE_AZURE_OPENAI=1\n\nexport MIDSCENE_AZURE_OPENAI_SCOPE=\"https://cognitiveservices.azure.com/.default\"\nexport AZURE_OPENAI_ENDPOINT=\"...\"\nexport AZURE_OPENAI_API_VERSION=\"2024-05-01-preview\"\nexport AZURE_OPENAI_DEPLOYMENT=\"gpt-4o\"\n```\n\n----------------------------------------\n\nTITLE: Running Midscene Scripts via CLI\nDESCRIPTION: Bash commands for running Midscene YAML scripts using the CLI tool, either from a global installation or using npx for a project-local installation.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmidscene ./bing-search.yaml\n# or if you installed midscene inside the project\nnpx midscene ./bing-search.yaml\n```\n\n----------------------------------------\n\nTITLE: Rendering Pagination Component in HTML\nDESCRIPTION: This snippet shows the HTML structure for a pagination component with numbered pages and navigation buttons. It includes anchor tags for page numbers and list items for navigation buttons, each with specific positioning attributes.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-pagination/element-tree.txt#2025-04-23_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <a id=\"bdalk\" markerId=\"128\"  left=\"1138\" top=\"929\" width=\"9\" height=\"17\">\n    5\n  </a>\n</>\n<>\n  <li id=\"lafhd\" markerId=\"129\" class=\".ant-pagination-item-link\" type=\"button\" tabindex=\"-1\" left=\"1166\" top=\"921\" width=\"32\" height=\"32\">\n  </li>\n</>\n<>\n  <li id=\"mjekd\" markerId=\"130\" class=\".ant-pagination-item-link\" type=\"button\" tabindex=\"-1\" undefined=\"\" left=\"1459\" top=\"975\" width=\"32\" height=\"32\">\n  </li>\n</>\n<>\n  <a id=\"nkebg\" markerId=\"131\"  left=\"1512\" top=\"983\" width=\"7\" height=\"17\">\n    1\n  </a>\n</>\n<>\n  <a id=\"fcjbi\" markerId=\"132\"  left=\"1551\" top=\"983\" width=\"8\" height=\"17\">\n    2\n  </a>\n</>\n<>\n  <a id=\"oennm\" markerId=\"133\"  left=\"1591\" top=\"983\" width=\"9\" height=\"17\">\n    3\n  </a>\n</>\n<>\n  <a id=\"oibgd\" markerId=\"134\"  left=\"1631\" top=\"983\" width=\"9\" height=\"17\">\n    4\n  </a>\n</>\n<>\n  <a id=\"jijdc\" markerId=\"135\"  left=\"1671\" top=\"983\" width=\"9\" height=\"17\">\n    5\n  </a>\n</>\n<>\n  <li id=\"ameki\" markerId=\"136\" class=\".ant-pagination-item-link\" type=\"button\" tabindex=\"-1\" left=\"1699\" top=\"975\" width=\"32\" height=\"32\">\n  </li>\n</>\n```\n\n----------------------------------------\n\nTITLE: Rendering Ribbon Corner Element in HTML\nDESCRIPTION: This snippet shows an HTML div element used as a ribbon corner. It includes a specific class and positioning attributes for styling and layout.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-pagination/element-tree.txt#2025-04-23_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<div id=\"agkmm\" markerId=\"138\" class=\".ant-ribbon-corner\" left=\"1756\" top=\"854\" width=\"8\" height=\"6\">\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using Environment Variables in YAML Scripts\nDESCRIPTION: Example of referencing environment variables within a Midscene YAML script using ${variable-name} syntax.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n#...\n - ai: type ${topic} in input box\n#...\n```\n\n----------------------------------------\n\nTITLE: JavaScript Config Override\nDESCRIPTION: TypeScript example showing how to override AI configuration programmatically using the Midscene core library.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/model-provider.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { overrideAIConfig } from \"@midscene/core/env\";\n\noverrideAIConfig({\n  MIDSCENE_MODEL_NAME: \"...\",\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Setting OpenAI API Environment Variables in Bash\nDESCRIPTION: Demonstrates how to set the required OpenAI API Key as an environment variable in a bash shell. This is one method to configure Midscene to use OpenAI services.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/model-provider.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# 替换为你自己的 API Key\nexport OPENAI_API_KEY=\"sk-abcdefghijklmnopqrstuvwxyz\"\n```\n\n----------------------------------------\n\nTITLE: Defining Navigation Links in HTML\nDESCRIPTION: This snippet defines navigation links for Help, Community, Status, and GitHub.com. It uses anchor tags with specific IDs and positioning attributes.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/githubstatus/element-tree.txt#2025-04-23_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <a id=\"neica\" markerId=\"1\"  left=\"24\" top=\"27\" width=\"34\" height=\"19\">\n    Help\n  </a>\n</>\n<>\n  <a id=\"glbjl\" markerId=\"2\"  left=\"86\" top=\"27\" width=\"83\" height=\"19\">\n    Community\n  </a>\n</>\n<>\n  <a id=\"mbikf\" markerId=\"3\"  left=\"197\" top=\"27\" width=\"46\" height=\"19\">\n    Status\n  </a>\n</>\n<>\n  <a id=\"jdmek\" markerId=\"4\"  left=\"1622\" top=\"27\" width=\"86\" height=\"19\">\n    GitHub.com\n  </a>\n</>\n```\n\n----------------------------------------\n\nTITLE: Defining Service Status Indicators in HTML\nDESCRIPTION: This snippet defines the structure for displaying individual service statuses. It includes the service name, a tooltip indicator, status icon, and current status text.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/githubstatus/element-tree.txt#2025-04-23_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <span id=\"aabof\" markerId=\"8\"  left=\"492\" top=\"583\" width=\"107\" height=\"19\">\n    Git Operations\n  </span>\n</>\n<>\n  <span id=\"fmhia\" markerId=\"9\"  left=\"614\" top=\"585\" width=\"6\" height=\"14\">\n    ?\n  </span>\n</>\n<div id=\"milim\" markerId=\"10\" class=\".tool.icon-indicator.fa.fa-check.tooltipstered\" left=\"916\" top=\"583\" width=\"24\" height=\"24\">\n</div>\n<>\n  <span id=\"jbanm\" markerId=\"11\"  left=\"492\" top=\"610\" width=\"47\" height=\"17\">\n    Normal\n  </span>\n</>\n```\n\n----------------------------------------\n\nTITLE: Running Multiple YAML Files in Midscene\nDESCRIPTION: CLI commands for running all YAML files in a directory or matching a glob pattern with Midscene.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nmidscene /dir/of/yaml/\n\n# glob is also supported\nmidscene /dir/**/yaml/\n```\n\n----------------------------------------\n\nTITLE: Enabling Caching in YAML Mode\nDESCRIPTION: Shows how to enable caching when using YAML mode by setting the MIDSCENE_CACHE environment variable to 1. In YAML mode, the cacheId is automatically set to the YAML filename.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/caching.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n- npx midscene ./bing-search.yaml\n+ # Add cache identifier, cacheId is the yaml filename\n+ MIDSCENE_CACHE=1 npx midscene ./bing-search.yaml\n```\n\n----------------------------------------\n\nTITLE: Example Configuration for Anthropic's Claude 3 Opus Model\nDESCRIPTION: Environment variable configuration for using Anthropic's Claude 3 Opus model. Uses the Anthropic SDK instead of OpenAI SDK for API calls.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/model-provider.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nexport MIDSCENE_USE_ANTHROPIC_SDK=1\nexport ANTHROPIC_API_KEY=\".....\"\nexport MIDSCENE_MODEL_NAME=\"claude-3-opus-20240229\"\n```\n\n----------------------------------------\n\nTITLE: Configuring LangSmith Integration with Bash\nDESCRIPTION: Demonstrates how to set environment variables to enable LangSmith integration for debugging large language models in Midscene.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/API.mdx#2025-04-23_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n# Set environment variables\n\n# Enable debug mode\nexport MIDSCENE_LANGSMITH_DEBUG=1 \n\n# LangSmith configuration\nexport LANGSMITH_TRACING_V2=true\nexport LANGSMITH_ENDPOINT=\"https://api.smith.langchain.com\"\nexport LANGSMITH_API_KEY=\"your_key_here\"\nexport LANGSMITH_PROJECT=\"your_project_name_here\"\n```\n\n----------------------------------------\n\nTITLE: License and Privacy Links Footer in HTML\nDESCRIPTION: HTML structure for the footer section containing license and privacy statement information. This section includes text and links to legal documents that users agree to when using VS Code.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/visualstudio/element-tree.txt#2025-04-23_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <p id=\"dglpo\" markerId=\"24\"  left=\"466\" top=\"423\" width=\"184\" height=\"13\">\n    By using VS Code, you agree to its\n  </p>\n    <>\n      <a id=\"mknif\" markerId=\"25\"  left=\"650\" top=\"423\" width=\"38\" height=\"13\">\n        license\n      </a>\n    </>\n    <span id=\"lnfni\" markerId=\"26\"  left=\"688\" top=\"423\" width=\"26\" height=\"13\">\n      and\n    </span>\n    <>\n      <a id=\"ajndm\" markerId=\"27\"  left=\"714\" top=\"423\" width=\"96\" height=\"13\">\n        privacy statement\n      </a>\n    </>\n</>\n```\n\n----------------------------------------\n\nTITLE: Android Automation YAML Script\nDESCRIPTION: A YAML script for automating a weather search on Bing.com using an Android device connected via ADB. It specifies the device ID and includes tasks to open the browser and perform the search.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nandroid:\n  # launch: https://www.bing.com\n  deviceId: s4ey59\n\ntasks:\n  - name: search weather\n    flow:\n      - ai: open browser and navigate to bing.com\n      - ai: search for 'weather today'\n      - sleep: 3000\n      - aiAssert: the result shows the weather info\n```\n\n----------------------------------------\n\nTITLE: Configuring Midscene Chrome Extension with API Key\nDESCRIPTION: This snippet shows how to set up the configuration for the Midscene Chrome extension by pasting the necessary key-value pairs, including the OpenAI API key.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/quick-experience.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nOPENAI_API_KEY=\"sk-replace-by-your-own\"\n# ...all other configs here (if any)\n```\n\n----------------------------------------\n\nTITLE: Configuring Alternative Multimodal LLM Models\nDESCRIPTION: Basic environment variable setup for using alternative multimodal LLM models with Midscene.js. Includes the essential configuration parameters.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/choose-a-model.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nMIDSCENE_MODEL_NAME=\".....\"\nOPENAI_BASE_URL=\"......\"\nOPENAI_API_KEY=\"......\"\n```\n\n----------------------------------------\n\nTITLE: Installing Midscene CLI\nDESCRIPTION: Bash commands for installing the Midscene command line interface either globally or as a project dependency using npm.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g @midscene/cli\n# or if you prefer a project-wide installation\nnpm i @midscene/cli --save-dev\n```\n\n----------------------------------------\n\nTITLE: Running Single YAML File in Midscene\nDESCRIPTION: CLI command for running a single YAML automation script with Midscene.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmidscene /path/to/yaml\n```\n\n----------------------------------------\n\nTITLE: Connecting to Current Tab with Bridge Mode\nDESCRIPTION: Example showing how to connect to the currently active tab in Chrome using Bridge Mode, with error handling and optional configuration for same-tab navigation.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ntry {\n  await agent.connectCurrentTab();\n  console.log('成功连接到当前标签页');\n} catch (err) {\n  console.error('连接失败:', err.message);\n}\n```\n\n----------------------------------------\n\nTITLE: Aliyun Qwen-VL Configuration\nDESCRIPTION: Environment variable setup for using the Qwen-VL model from Aliyun.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/model-provider.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENAI_API_KEY=\"sk-...\"\nexport OPENAI_BASE_URL=\"https://dashscope.aliyuncs.com/compatible-mode/v1\"\nexport MIDSCENE_MODEL_NAME=\"qwen-vl-max-latest\"\nexport MIDSCENE_USE_QWEN_VL=1\n```\n\n----------------------------------------\n\nTITLE: Running YAML Script with Bridge Mode\nDESCRIPTION: Command to run a Midscene YAML automation script that uses Bridge Mode, requiring the Chrome extension to be active with 'Allow connection' clicked.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nmidscene ./bing.yaml\n```\n\n----------------------------------------\n\nTITLE: Connecting to New Tab with URL in Bridge Mode\nDESCRIPTION: Demonstrates opening a new tab in Chrome with a specified URL and connecting to it via Bridge Mode, with optional configuration for navigation behavior.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// 打开 Bing 并等待连接\nawait agent.connectNewTabWithUrl(\n  \"https://www.bing.com\",\n  { forceSameTabNavigation: false }\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure OpenAI with API Key\nDESCRIPTION: Environment variable configuration for using Azure OpenAI service with an API key (keyless mode). This provides direct authentication with the Azure OpenAI service.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/model-provider.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nexport MIDSCENE_USE_AZURE_OPENAI=1\nexport AZURE_OPENAI_ENDPOINT=\"...\"\nexport AZURE_OPENAI_KEY=\"...\"\nexport AZURE_OPENAI_API_VERSION=\"2024-05-01-preview\"\nexport AZURE_OPENAI_DEPLOYMENT=\"gpt-4o\"\n```\n\n----------------------------------------\n\nTITLE: Setting up PNPM Package Manager\nDESCRIPTION: Commands for enabling PNPM using corepack and installing project dependencies.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncorepack enable\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Midscene Android Playground with NPX\nDESCRIPTION: This command uses NPX to run the Midscene Android playground without installation. It allows users to quickly experience Midscene features on Android devices.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/quick-experience-with-android.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx --yes @midscene/android-playground\n```\n\n----------------------------------------\n\nTITLE: Destroying Bridge Mode Connection\nDESCRIPTION: Shows how to properly clean up resources by destroying the Bridge Mode connection after completing operations, with optional tab closing configuration.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\n// 完成操作后销毁连接\nawait agent.ai('执行最终操作...');\nawait agent.destroy();\n```\n\n----------------------------------------\n\nTITLE: Azure OpenAI Keyless Authentication\nDESCRIPTION: Environment variable configuration for Azure OpenAI Service using keyless authentication.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/model-provider.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport MIDSCENE_USE_AZURE_OPENAI=1\nexport AZURE_OPENAI_ENDPOINT=\"...\"\nexport AZURE_OPENAI_KEY=\"...\"\nexport AZURE_OPENAI_API_VERSION=\"2024-05-01-preview\"\nexport AZURE_OPENAI_DEPLOYMENT=\"gpt-4o\"\n```\n\n----------------------------------------\n\nTITLE: Running E2E Tests\nDESCRIPTION: Commands for running end-to-end tests using Playwright and ADB.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/CONTRIBUTING.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npnpm run e2e\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpx nx e2e @midscene/web\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd packages/web-integration && pnpm run test:ai -- adb\n```\n\n----------------------------------------\n\nTITLE: Destroying AgentOverChromeBridge Connection\nDESCRIPTION: Shows how to properly destroy the AgentOverChromeBridge connection and release resources.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// Destroy connection after completing operations\nawait agent.ai('Perform final operation...');\nawait agent.destroy();\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure OpenAI with ADT Token Provider\nDESCRIPTION: Environment variable configuration for using Azure OpenAI service with Azure AD token authentication. This method cannot be used in browser extensions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/model-provider.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# 使用 Azure OpenAI 服务时，配置为 1\nexport MIDSCENE_USE_AZURE_OPENAI=1\n\nexport MIDSCENE_AZURE_OPENAI_SCOPE=\"https://cognitiveservices.azure.com/.default\"\nexport AZURE_OPENAI_ENDPOINT=\"...\"\nexport AZURE_OPENAI_API_VERSION=\"2024-05-01-preview\"\nexport AZURE_OPENAI_DEPLOYMENT=\"gpt-4o\"\n```\n\n----------------------------------------\n\nTITLE: Conventional Commit Format\nDESCRIPTION: Example structure for conventional commit messages following the project's commit guidelines.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/CONTRIBUTING.md#2025-04-23_snippet_10\n\nLANGUAGE: text\nCODE:\n```\n<type>(<scope>): <subject>\n^    ^       ^\n|    |       |__ Subject: Concise description of the change (imperative mood, lowercase).\n|    |__________ Scope: The specific part of the codebase affected. **This is mandatory.**\n|_______________ Type: Indicates the kind of change.\n```\n\n----------------------------------------\n\nTITLE: Running Tests Commands\nDESCRIPTION: Commands for running unit tests and AI-related tests for the entire project or specific packages.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/CONTRIBUTING.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npnpm run test\n# Test with AI-related features, it will need to create a .env file\npnpm run test:ai\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpx nx test @midscene/web\n# Test with AI-related features, it will need to create a .env file\nnpx nx test:ai @midscene/web\n```\n\n----------------------------------------\n\nTITLE: Importing AgentOverChromeBridge in TypeScript\nDESCRIPTION: Demonstrates how to import the AgentOverChromeBridge class from the @midscene/web/bridge-mode package.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AgentOverChromeBridge } from \"@midscene/web/bridge-mode\";\n```\n\n----------------------------------------\n\nTITLE: Example .env File Configuration for OpenAI API\nDESCRIPTION: Sample content for a .env file to store the OpenAI API key. This file should be placed in the project root directory and will be read by the dotenv package.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/model-provider.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nOPENAI_API_KEY=\"sk-abcdefghijklmnopqrstuvwxyz\"\n```\n\n----------------------------------------\n\nTITLE: Running Linter\nDESCRIPTION: Command for running the Biome linter to maintain code consistency.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/CONTRIBUTING.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\npnpm run lint\n```\n\n----------------------------------------\n\nTITLE: Installing Midscene Dependencies for Bridge Mode\nDESCRIPTION: Installing the required npm packages (@midscene/web and tsx) to use the Chrome Bridge Mode functionality.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ninstall @midscene/web tsx --save-dev\n```\n\n----------------------------------------\n\nTITLE: Running Midscene in Headed Mode\nDESCRIPTION: CLI commands for running Midscene in headed mode (with a visible browser) and keeping the browser window open after script completion, useful for debugging purposes.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n# run in headed mode\nmidscene /path/to/yaml --headed\n\n# run in headed mode and keep the browser window open after the script finishes\nmidscene /path/to/yaml --keep-window\n```\n\n----------------------------------------\n\nTITLE: Traditional AI Command in Midscene\nDESCRIPTION: Example of using the traditional .ai interface to perform a search action in Midscene.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/blog-introducing-instant-actions-and-deep-think.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nawait agent.ai('type \"Headphones\" in search box, hit Enter');\n```\n\n----------------------------------------\n\nTITLE: Building Packages with NX\nDESCRIPTION: Commands for building specific packages or all packages using NX build system.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/CONTRIBUTING.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpx nx build @midscene/web\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building Midscene Chrome Extension Project\nDESCRIPTION: Commands to navigate to the chrome-extension directory and build the Chrome extension.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/chrome-extension/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncd apps/chrome-extension\npnpm run build\n```\n\n----------------------------------------\n\nTITLE: Executing Action Commands in Midscene\nDESCRIPTION: Examples of Action tab commands used for automated web page interactions, including typing text and clicking buttons\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/common/start-experience.mdx#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ntype Midscene in the search box\nclick the login button\n```\n\n----------------------------------------\n\nTITLE: Running Vitest Tests in Bash\nDESCRIPTION: Command to execute all tests in the tests directory using Vitest test runner via npx\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/core/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx vitest ./tests/\n```\n\n----------------------------------------\n\nTITLE: Running Playwright Tests with Midscene\nDESCRIPTION: Command to execute Playwright tests with Midscene integration.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-playwright.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpx playwright test ./e2e/ebay-search.spec.ts\n```\n\n----------------------------------------\n\nTITLE: Connecting to New Tab with AgentOverChromeBridge\nDESCRIPTION: Illustrates how to use the connectNewTabWithUrl method to open and connect to a new Chrome tab.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n// Open Bing and wait for connection\nawait agent.connectNewTabWithUrl(\n  \"https://www.bing.com\",\n  { forceSameTabNavigation: false }\n);\n```\n\n----------------------------------------\n\nTITLE: Displaying Directory Structure for Midscene Chrome Extension\nDESCRIPTION: Shows the directory structure of the Midscene Chrome extension project, including source code, build outputs, and utility scripts.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/chrome-extension/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nchrome-extension/\n├── dist/                 # Build output directory, can be directly installed as a Chrome extension\n├── extension/            # Packaged Chrome extension\n│   └── midscene-extension-v{version}.zip    # Compressed extension\n├── scripts/              # Build and utility scripts\n│   ├── build-report-template.js   # Generate report template\n│   └── pack-extension.js          # Package Chrome extension\n├── src/                  # Source code\n│   ├── extension/        # Chrome extension-related components\n│   │   ├── bridge.tsx    # Bridge mode UI\n│   │   ├── popup.tsx     # Extension popup homepage\n│   │   ├── misc.tsx      # Auxiliary components\n│   │   ├── utils.ts      # Utility functions\n│   │   ├── common.less   # Common style variables\n│   │   ├── popup.less    # Popup styles\n│   │   └── bridge.less   # Bridge mode styles\n│   ├── blank_polyfill.ts # Browser polyfill for Node.js modules\n│   ├── index.tsx         # Main entry\n│   └── App.tsx           # Main application component\n├── static/               # Static resources directory, will be copied to the dist directory\n│   └── scripts/          # Script resources\n│       └── report-template.js     # Generated report template\n├── package.json          # Project configuration\n├── rsbuild.config.ts     # Rsbuild build configuration\n└── ...\n```\n\n----------------------------------------\n\nTITLE: Building Dependency Packages for Midscene Chrome Extension\nDESCRIPTION: Command to build all packages in the project root directory.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/chrome-extension/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm run build\n```\n\n----------------------------------------\n\nTITLE: Setting Device Scale Factor in Playwright with Midscene\nDESCRIPTION: This code snippet demonstrates how to set the device scale factor in Playwright when using Midscene to prevent screen flashing in headed mode. Setting deviceScaleFactor to 2 on macOS helps resolve display issues.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/faq.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nawait page.setViewport({\n  deviceScaleFactor: 2,\n});\n```\n\n----------------------------------------\n\nTITLE: Deep Think Action Interface\nDESCRIPTION: Example of using the deepThink option with an instant action for more accurate element targeting.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/blog-introducing-instant-actions-and-deep-think.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nawait agent.aiTap('target', { deepThink: true });\n```\n\n----------------------------------------\n\nTITLE: Starting Midscene Report Development Server\nDESCRIPTION: Command to launch the development server for Midscene Report, enabling local development and testing.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/report/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Enabling Caching in JavaScript Agent\nDESCRIPTION: Shows how to enable caching when using JavaScript agents such as PuppeteerAgent or AgentOverChromeBridge by setting the MIDSCENE_CACHE environment variable to 1.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/caching.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n- tsx demo.ts \n+ MIDSCENE_CACHE=1 tsx demo.ts\n```\n\n----------------------------------------\n\nTITLE: Example of Improved Color Query Prompt with Limited Options\nDESCRIPTION: An improved prompt that asks the AI to select from a predefined set of color options rather than requesting an exact hex value, which is more reliable.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_12\n\nLANGUAGE: log\nCODE:\n```\nstring, color of text, one of blue / red / yellow / green / white / black / others\n```\n\n----------------------------------------\n\nTITLE: Previewing Midscene Report Production Build\nDESCRIPTION: Command to locally preview the production build of Midscene Report before deployment.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/report/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm preview\n```\n\n----------------------------------------\n\nTITLE: Verifying ADB Installation with Version Check\nDESCRIPTION: Command to verify that ADB (Android Debug Bridge) is installed correctly by checking its version information.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/common/prepare-android.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nadb --version\n```\n\n----------------------------------------\n\nTITLE: Example of Improved Visual Assertion Prompt\nDESCRIPTION: A proper assertion that refers to a visual property (color) that can be observed in the interface screenshots, making it appropriate for AI-based verification.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_16\n\nLANGUAGE: log\nCODE:\n```\nThe title is blue\n```\n\n----------------------------------------\n\nTITLE: Creating New Git Branch\nDESCRIPTION: Command for creating and checking out a new Git branch for development.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/CONTRIBUTING.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b MY_BRANCH_NAME\n```\n\n----------------------------------------\n\nTITLE: Creating Agent from ADB Device\nDESCRIPTION: Examples of creating an AndroidAgent instance from connected ADB devices, either by specifying a device ID or using the first connected device.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/integrate-with-android.mdx#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { agentFromAdbDevice } from '@midscene/android';\n\nconst agent = await agentFromAdbDevice('s4ey59'); // 传入 deviceId\nconst agent = await agentFromAdbDevice(); // 不传入 deviceId，则使用第一个连接的设备\n```\n\n----------------------------------------\n\nTITLE: Example of Poor DOM-Based Assertion Prompt\nDESCRIPTION: An example of an inappropriate assertion that relies on DOM properties which are not visible in screenshots and therefore inaccessible to the AI model.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_13\n\nLANGUAGE: log\nCODE:\n```\nThe title has a `test-id-size` property\n```\n\n----------------------------------------\n\nTITLE: ADB Devices Command Output Example\nDESCRIPTION: Example output from the ADB devices command showing a successfully connected Android device with details about the product, model, and transport ID.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/common/prepare-android.mdx#2025-04-23_snippet_3\n\nLANGUAGE: log\nCODE:\n```\nList of devices attached\ns4ey59\tdevice usb:34603008X product:cezanne model:M2006J device:cezan transport_id:3\n```\n\n----------------------------------------\n\nTITLE: Android Configuration Schema in Midscene YAML\nDESCRIPTION: The schema definition for the 'android' section of a Midscene YAML file, which configures Android device automation parameters including device ID and URL to launch.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/automate-with-scripts-in-yaml.mdx#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nandroid:\n  # The device id to use, optional, default is the first connected device\n  deviceId: <device-id>\n\n  # The url to launch, optional, default is the current page\n  launch: <url>\n```\n\n----------------------------------------\n\nTITLE: Example of Poor Color Query Prompt\nDESCRIPTION: An ineffective prompt asking for a specific hex color value, which is challenging for AI models to determine precisely from visual input.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_10\n\nLANGUAGE: log\nCODE:\n```\nstring, hex value of text color\n```\n\n----------------------------------------\n\nTITLE: ADB Version Command Output Example\nDESCRIPTION: Example output from the ADB version command showing successful installation information, including version numbers and installation path.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/common/prepare-android.mdx#2025-04-23_snippet_1\n\nLANGUAGE: log\nCODE:\n```\nAndroid Debug Bridge version 1.0.41\nVersion 34.0.4-10411341\nInstalled as /usr/local/bin//adb\nRunning on Darwin 24.3.0 (arm64)\n```\n\n----------------------------------------\n\nTITLE: Example of Improved Button Click Prompt with Location Context\nDESCRIPTION: An improved prompt that includes spatial information about the button's location relative to other UI elements, which helps the AI model locate the correct element.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_9\n\nLANGUAGE: log\nCODE:\n```\nClick the \"Add\" button on the top-right corner, it's on the right side of the \"range\" dropdown menu\n```\n\n----------------------------------------\n\nTITLE: Starting Development Mode for Midscene Chrome Extension\nDESCRIPTION: Commands to navigate to the chrome-extension directory and start the project in development mode.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/chrome-extension/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd apps/chrome-extension\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Running Puppeteer Script with tsx\nDESCRIPTION: This bash command demonstrates how to run the Puppeteer script using tsx. It executes the demo.ts file and shows the expected output format for the extracted product information.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/integrate-with-puppeteer.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# run\nnpx tsx demo.ts\n\n# 命令行应该有如下输出\n#  [\n#   {\n#     itemTitle: 'JBL Tour Pro 2 - True wireless Noise Cancelling earbuds with Smart Charging Case',\n#     price: 551.21\n#   },\n#   {\n#     itemTitle: 'Soundcore Space One无线耳机40H ANC播放时间2XStronger语音还原',\n#     price: 543.94\n#   }\n# ]\n```\n\n----------------------------------------\n\nTITLE: Example of Improved Single-Task User Interface Prompts\nDESCRIPTION: The recommended approach of breaking down complex tasks into separate, focused prompts, which improves reliability and helps the AI model complete each step accurately.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_5\n\nLANGUAGE: log\nCODE:\n```\nClick Login Button\nClick Sign up button\nFill the form with 'test@test.com' in the email field\nFill the form with 'test' in the password field\nClick Sign up button\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Midscene Chrome Extension\nDESCRIPTION: Command to install project dependencies using pnpm package manager.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/chrome-extension/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Example Output from Android Control Script\nDESCRIPTION: Sample output from running the Android control script, showing structured data extracted from the eBay search results for headphones.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/integrate-with-android.mdx#2025-04-23_snippet_2\n\nLANGUAGE: log\nCODE:\n```\n[\n {\n   itemTitle: 'JBL Tour Pro 2 - True wireless Noise Cancelling earbuds with Smart Charging Case',\n   price: 551.21\n },\n {\n   itemTitle: 'Soundcore Space One无线耳机40H ANC播放时间2XStronger语音还原',\n   price: 543.94\n }\n]\n```\n\n----------------------------------------\n\nTITLE: Example of Poor Multi-Task User Interface Prompt\nDESCRIPTION: An example of a poor prompt that combines multiple actions in a single request, which can confuse the AI model and lead to inconsistent or incomplete execution.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_4\n\nLANGUAGE: log\nCODE:\n```\nClick Login button, then click Sign up button, fill the form with 'test@test.com' in the email field, 'test' in the password field, and click Sign up button\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js with NVM\nDESCRIPTION: Commands for installing and configuring Node.js 20.9.0 using NVM (Node Version Manager).\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Install the LTS version of Node.js 20\nnvm install 20.9.0 --lts\n\n# Make the newly installed Node.js 20 as the default version\nnvm alias default 20.9.0\n\n# Switch to the newly installed Node.js 20\nnvm use 20.9.0\n```\n\n----------------------------------------\n\nTITLE: Sample Output from Android Automation Script\nDESCRIPTION: Example of the console output showing extracted product information from the eBay search results.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-android.mdx#2025-04-23_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n[\n{\n  itemTitle: 'Beats by Dr. Dre Studio Buds Totally Wireless Noise Cancelling In Ear + OPEN BOX',\n  price: 505.15\n},\n{\n  itemTitle: 'Skullcandy Indy Truly Wireless Earbuds-Headphones Green Mint',\n  price: 186.69\n}\n]\n```\n\n----------------------------------------\n\nTITLE: Example of Poor Dropdown Selection Prompt\nDESCRIPTION: An insufficient prompt for selecting an option from a dropdown that doesn't clearly describe the necessary sequence of actions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_6\n\nLANGUAGE: log\nCODE:\n```\nSelect \"include\" in the \"range\" dropdown menu\n```\n\n----------------------------------------\n\nTITLE: Checking Node.js Version\nDESCRIPTION: Command to verify the installed Node.js version.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode -v\n```\n\n----------------------------------------\n\nTITLE: Example of Poor User Interface Prompt for Search Action\nDESCRIPTION: An example of an insufficient prompt that lacks detail for a search action. This type of brief prompt may result in inconsistent AI responses due to ambiguity.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_0\n\nLANGUAGE: log\nCODE:\n```\nSearch 'headphone'\n```\n\n----------------------------------------\n\nTITLE: Example of Poor User Interface Prompt for Assertion\nDESCRIPTION: An insufficient assertion prompt that doesn't provide enough context about what to check on the interface, making it difficult for the AI to perform verification correctly.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_2\n\nLANGUAGE: log\nCODE:\n```\nAssert: food delivery service is in normal state\n```\n\n----------------------------------------\n\nTITLE: Rendering React Todo Application UI Components\nDESCRIPTION: This code snippet renders various UI components for a React-based todo list application. It includes headers, input fields, checkboxes, and labels for managing todo items. The components use specific IDs and positioning attributes for layout and styling purposes.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/todo-input-with-value/element-tree.txt#2025-04-23_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <h3 id=\"fpael\"   left=\"18\" top=\"28\" width=\"65\" height=\"29\">\n    React\n  </h3>\n</>\n  <>\n    <h5 id=\"bkdon\" markerId=\"1\"  left=\"18\" top=\"67\" width=\"38\" height=\"17\">\n      React\n    </h5>\n  </>\n  <>\n    <a id=\"opmfa\" markerId=\"2\"  left=\"18\" top=\"85\" width=\"44\" height=\"17\">\n      Source\n    </a>\n  </>\n  <>\n    <h5 id=\"gepop\" markerId=\"3\"  left=\"18\" top=\"113\" width=\"123\" height=\"17\">\n      TypeScript + React\n    </h5>\n  </>\n  <>\n    <a id=\"fpfeg\" markerId=\"4\"  left=\"18\" top=\"131\" width=\"37\" height=\"17\">\n      Demo\n    </a>\n  </>\n  <span id=\"benod\" markerId=\"5\"  left=\"55\" top=\"131\" width=\"8\" height=\"17\">\n    ,\n  </span>\n  <>\n    <a id=\"fhaob\" markerId=\"6\"  left=\"63\" top=\"131\" width=\"44\" height=\"17\">\n      Source\n    </a>\n  </>\n<>\n  <p id=\"elfjh\" markerId=\"7\"  left=\"28\" top=\"203\" width=\"244\" height=\"135\">\n    React is a JavaScript library for creating user interfaces. Its core principles are declarative code, efficiency, and flexibility. Simply specify what...\n  </p>\n</>\n  <>\n    <a id=\"hkkka\" markerId=\"8\"  left=\"253\" top=\"370\" width=\"37\" height=\"17\">\n      React\n    </a>\n  </>\n<>\n<h4 id=\"jkmjg\" markerId=\"9\"  left=\"18\" top=\"430\" width=\"151\" height=\"22\">\n  Official Resources\n</h4>\n</>\n  <>\n    <a id=\"coknk\" markerId=\"10\"  left=\"43\" top=\"463\" width=\"70\" height=\"17\">\n      Quick Start\n    </a>\n  </>\n  <>\n    <a id=\"obnba\" markerId=\"11\"  left=\"43\" top=\"483\" width=\"89\" height=\"17\">\n      API Reference\n    </a>\n  </>\n  <>\n    <a id=\"bkcjh\" markerId=\"12\"  left=\"43\" top=\"503\" width=\"69\" height=\"17\">\n      Philosophy\n    </a>\n  </>\n  <>\n    <a id=\"eglfn\" markerId=\"13\"  left=\"43\" top=\"523\" width=\"113\" height=\"17\">\n      React Community\n    </a>\n  </>\n<>\n<h4 id=\"ceeap\" markerId=\"14\"  left=\"18\" top=\"572\" width=\"95\" height=\"22\">\n  Community\n</h4>\n</>\n  <>\n    <a id=\"ddhae\" markerId=\"15\"  left=\"43\" top=\"605\" width=\"172\" height=\"17\">\n      ReactJS on Stack Overflow\n    </a>\n  </>\n<>\n  <em id=\"nddcg\" markerId=\"16\"  left=\"18\" top=\"677\" width=\"261\" height=\"36\">\n    If you have other helpful links to share, or find any of the links above no longer work, please\n  </em>\n</>\n<>\n  <h1 id=\"lnceo\" markerId=\"17\"  left=\"696\" top=\"19\" width=\"188\" height=\"95\">\n    todos\n  </h1>\n</>\n<>\n  <input id=\"okgbn\" markerId=\"18\" class=\".new-todo\" id=\"todo-input\" type=\"text\" data-testid=\"text-input\" placeholder=\"What needs to be done?\" undefined=\"\" left=\"515\" top=\"130\" width=\"550\" height=\"65\">\n    Learn English\n  </input>\n  <>\n    <label id=\"liecc\" markerId=\"19\"  left=\"1064\" top=\"131\" width=\"91\" height=\"17\">\n      New Todo Input\n    </label>\n  </>\n</>\n<>\n  <input id=\"ejffn\" markerId=\"20\" class=\".toggle-all\" type=\"checkbox\" id=\"toggle-all\" data-testid=\"toggle-all\" undefined=\"\" left=\"519\" top=\"133\" width=\"40\" height=\"60\">\n    on\n  </input>\n</>\n    <>\n      <input id=\"hbdoo\" markerId=\"21\" class=\".toggle\" type=\"checkbox\" data-testid=\"todo-item-toggle\" undefined=\"\" left=\"515\" top=\"205\" width=\"40\" height=\"40\">\n        on\n      </input>\n      <>\n        <label id=\"ofnmb\" markerId=\"22\"  left=\"575\" top=\"211\" width=\"143\" height=\"28\">\n          Learn Python\n        </label>\n      </>\n    </>\n    <>\n      <input id=\"cdllc\" markerId=\"23\" class=\".toggle\" type=\"checkbox\" data-testid=\"todo-item-toggle\" undefined=\"\" left=\"515\" top=\"265\" width=\"40\" height=\"40\">\n        on\n      </input>\n      <>\n        <label id=\"idmhb\" markerId=\"24\"  left=\"575\" top=\"271\" width=\"117\" height=\"28\">\n          Learn Rust\n        </label>\n      </>\n      <div id=\"jicbk\" markerId=\"25\" class=\".destroy\" data-testid=\"todo-item-button\" left=\"1015\" top=\"265\" width=\"40\" height=\"40\">\n        ×\n      </div>\n    </>\n    <>\n      <input id=\"kjccf\" markerId=\"26\" class=\".toggle\" type=\"checkbox\" data-testid=\"todo-item-toggle\" undefined=\"\" left=\"515\" top=\"325\" width=\"40\" height=\"40\">\n        on\n      </input>\n      <>\n        <label id=\"nlfin\" markerId=\"27\"  left=\"575\" top=\"331\" width=\"89\" height=\"28\">\n          Learn AI\n        </label>\n      </>\n    </>\n    <>\n      <a id=\"fcnjd\" markerId=\"28\"  left=\"708\" top=\"386\" width=\"14\" height=\"18\">\n        All\n      </a>\n    </>\n    <>\n      <a id=\"ikfki\" markerId=\"29\"  left=\"744\" top=\"386\" width=\"38\" height=\"18\">\n        Active\n      </a>\n    </>\n    <>\n      <a id=\"ddapc\" markerId=\"30\"  left=\"803\" top=\"386\" width=\"69\" height=\"18\">\n        Completed\n      </a>\n    </>\n<footer id=\"iodmf\" markerId=\"31\" class=\".clear-completed\" undefined=\"\" left=\"947\" top=\"385\" width=\"103\" height=\"19\">\n  Clear completed\n</footer>\n<>\n<p id=\"ijiil\" markerId=\"32\"  left=\"730\" top=\"479\" width=\"120\" height=\"13\">\n  Double-click to edit a todo\n</p>\n</>\n<>\n<p id=\"lbkin\" markerId=\"33\"  left=\"718\" top=\"501\" width=\"144\" height=\"13\">\n  Created by the TodoMVC Team\n</p>\n</>\n<>\n<p id=\"odmdh\" markerId=\"34\"  left=\"749\" top=\"523\" width=\"33\" height=\"13\">\n  Part of\n</p>\n<>\n  <a id=\"ahhbb\" markerId=\"35\"  left=\"782\" top=\"523\" width=\"48\" height=\"13\">\n    TodoMVC\n  </a>\n</>\n</>\n```\n\n----------------------------------------\n\nTITLE: Rendering Ant Design Component Sidebar in JSX\nDESCRIPTION: This snippet renders the sidebar section of the Ant Design documentation page, listing component categories and individual components with their Chinese translations and version information.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-form/element-tree.txt#2025-04-23_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n        <>\n          <span id=\"cgjbn\" markerId=\"16\"  left=\"44\" top=\"119\" width=\"56\" height=\"19\">\n            组件总览\n          </span>\n        </>\n<>\n  <div id=\"dbfhp\" markerId=\"17\"  left=\"44\" top=\"174\" width=\"28\" height=\"19\">\n    通用\n  </div>\n</>\n            <>\n              <span id=\"hdpka\" markerId=\"18\"  left=\"44\" top=\"230\" width=\"42\" height=\"19\">\n                Button\n              </span>\n            </>\n            <>\n              <span id=\"injck\" markerId=\"19\"  left=\"94\" top=\"231\" width=\"24\" height=\"17\">\n                按钮\n              </span>\n            </>\n            <>\n              <span id=\"blbpf\" markerId=\"20\"  left=\"44\" top=\"274\" width=\"73\" height=\"19\">\n                FloatButton\n              </span>\n            </>\n            <>\n              <span id=\"pjlpj\" markerId=\"21\"  left=\"125\" top=\"275\" width=\"48\" height=\"17\">\n                悬浮按钮\n              </span>\n            </>\n        <>\n          <span id=\"loofk\" markerId=\"22\"  left=\"235\" top=\"276\" width=\"28\" height=\"14\">\n            5.0.0\n          </span>\n        </>\n            <>\n              <span id=\"lgmbn\" markerId=\"23\"  left=\"44\" top=\"318\" width=\"27\" height=\"19\">\n                Icon\n              </span>\n            </>\n            <>\n              <span id=\"npcno\" markerId=\"24\"  left=\"79\" top=\"319\" width=\"24\" height=\"17\">\n                图标\n              </span>\n            </>\n            <>\n              <span id=\"jhmgb\" markerId=\"25\"  left=\"44\" top=\"362\" width=\"74\" height=\"19\">\n                Typography\n              </span>\n            </>\n            <>\n              <span id=\"bfjin\" markerId=\"26\"  left=\"126\" top=\"363\" width=\"24\" height=\"17\">\n                排版\n              </span>\n            </>\n<>\n  <div id=\"knnlf\" markerId=\"27\"  left=\"44\" top=\"417\" width=\"28\" height=\"19\">\n    布局\n  </div>\n</>\n            <>\n              <span id=\"milel\" markerId=\"28\"  left=\"44\" top=\"473\" width=\"45\" height=\"19\">\n                Divider\n              </span>\n            </>\n            <>\n              <span id=\"haena\" markerId=\"29\"  left=\"97\" top=\"474\" width=\"36\" height=\"17\">\n                分割线\n              </span>\n            </>\n            <>\n              <span id=\"emgpf\" markerId=\"30\"  left=\"44\" top=\"517\" width=\"26\" height=\"19\">\n                Flex\n              </span>\n            </>\n            <>\n              <span id=\"bmoal\" markerId=\"31\"  left=\"78\" top=\"518\" width=\"48\" height=\"17\">\n                弹性布局\n              </span>\n            </>\n        <>\n          <span id=\"kmnlc\" markerId=\"32\"  left=\"229\" top=\"519\" width=\"34\" height=\"14\">\n            5.10.0\n          </span>\n        </>\n            <>\n              <span id=\"ljafl\" markerId=\"33\"  left=\"44\" top=\"561\" width=\"27\" height=\"19\">\n                Grid\n              </span>\n            </>\n            <>\n              <span id=\"chihb\" markerId=\"34\"  left=\"79\" top=\"562\" width=\"24\" height=\"17\">\n                栅格\n              </span>\n            </>\n            <>\n              <span id=\"fkpgm\" markerId=\"35\"  left=\"44\" top=\"605\" width=\"42\" height=\"19\">\n                Layout\n              </span>\n            </>\n            <>\n              <span id=\"jbpeh\" markerId=\"36\"  left=\"94\" top=\"606\" width=\"24\" height=\"17\">\n                布局\n              </span>\n            </>\n            <>\n              <span id=\"kpmmp\" markerId=\"37\"  left=\"44\" top=\"649\" width=\"38\" height=\"19\">\n                Space\n              </span>\n            </>\n            <>\n              <span id=\"ioddf\" markerId=\"38\"  left=\"90\" top=\"650\" width=\"24\" height=\"17\">\n                间距\n              </span>\n            </>\n            <>\n              <span id=\"bjjnc\" markerId=\"39\"  left=\"44\" top=\"693\" width=\"45\" height=\"19\">\n                Splitter\n              </span>\n            </>\n            <>\n              <span id=\"kfneg\" markerId=\"40\"  left=\"97\" top=\"694\" width=\"48\" height=\"17\">\n                分隔面板\n              </span>\n            </>\n        <>\n          <span id=\"ocapn\" markerId=\"41\"  left=\"229\" top=\"695\" width=\"34\" height=\"14\">\n            5.21.0\n          </span>\n        </>\n<>\n  <div id=\"lfpfh\" markerId=\"42\"  left=\"44\" top=\"748\" width=\"28\" height=\"19\">\n    导航\n  </div>\n</>\n            <>\n              <span id=\"bgkfb\" markerId=\"43\"  left=\"44\" top=\"804\" width=\"45\" height=\"19\">\n                Anchor\n              </span>\n            </>\n            <>\n              <span id=\"ckjfc\" markerId=\"44\"  left=\"97\" top=\"805\" width=\"24\" height=\"17\">\n                锚点\n              </span>\n```\n\n----------------------------------------\n\nTITLE: Example of Poor Network Request Assertion Prompt\nDESCRIPTION: An inappropriate assertion about network request status, which isn't directly observable from the UI and therefore not accessible to the AI model.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_15\n\nLANGUAGE: log\nCODE:\n```\nThe request has finished.\n```\n\n----------------------------------------\n\nTITLE: Rendering Ant Design Header and Navigation in JSX\nDESCRIPTION: This snippet renders the header section of the Ant Design documentation page, including the logo, search bar, navigation links, and language/theme toggles.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-form/element-tree.txt#2025-04-23_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <a id=\"hdoie\" markerId=\"0\" draggable=\"false\" alt=\"logo\" left=\"40\" top=\"16\" width=\"32\" height=\"32\">\n  </a>\n  <>\n    <span id=\"mfigm\" markerId=\"1\"  left=\"84\" top=\"19\" width=\"93\" height=\"26\">\n      Ant Design\n    </span>\n  </>\n</>\n<>\n  <div id=\"hdakf\" markerId=\"2\" svgContent=\"true\" left=\"309\" top=\"26\" width=\"13\" height=\"13\">\n  </div>\n  <input id=\"adjbb\" markerId=\"3\" class=\".dumi-default-search-bar-input\" placeholder=\"输入关键字搜索...\" undefined=\"\" left=\"293\" top=\"21\" width=\"280\" height=\"22\">\n    输入关键字搜索...\n  </input>\n  <>\n    <span id=\"cejmn\" markerId=\"4\"  left=\"582\" top=\"25\" width=\"11\" height=\"14\">\n      ⌘\n    </span>\n    <span id=\"loebp\" markerId=\"5\"  left=\"593\" top=\"25\" width=\"11\" height=\"14\">\n      K\n    </span>\n  </>\n</>\n      <>\n        <a id=\"jncdi\" markerId=\"6\"  left=\"768\" top=\"23\" width=\"28\" height=\"19\">\n          设计\n        </a>\n      </>\n      <>\n        <a id=\"dmikg\" markerId=\"7\"  left=\"832\" top=\"23\" width=\"28\" height=\"19\">\n          研发\n        </a>\n      </>\n      <>\n        <a id=\"mgalb\" markerId=\"8\"  left=\"896\" top=\"23\" width=\"28\" height=\"19\">\n          组件\n        </a>\n      </>\n      <>\n        <a id=\"ffehn\" markerId=\"9\"  left=\"960\" top=\"23\" width=\"28\" height=\"19\">\n          博客\n        </a>\n      </>\n      <>\n        <a id=\"bbjng\" markerId=\"10\"  left=\"1024\" top=\"23\" width=\"28\" height=\"19\">\n          资源\n        </a>\n      </>\n      <>\n        <a id=\"pagch\" markerId=\"11\"  left=\"1082\" top=\"23\" width=\"56\" height=\"19\">\n          国内镜像\n        </a>\n      </>\n      <>\n        <span id=\"ihlfa\" markerId=\"12\"  left=\"1170\" top=\"23\" width=\"40\" height=\"17\">\n          5.24.2\n        </span>\n      </>\n<div id=\"dinoj\" markerId=\"13\" type=\"button\" class=\".acss-a4e8ca\" aria-describedby=\":Rjlblj5cma:\" left=\"1264\" top=\"16\" width=\"32\" height=\"32\">\n  中\nEn\n</div>\n<div id=\"nfpha\" markerId=\"14\" type=\"button\" class=\".acss-a4e8ca\" aria-label=\"RTL Switch Button\" aria-describedby=\":Rklblj5cma:\" left=\"1308\" top=\"16\" width=\"32\" height=\"32\">\n</div>\n<>\n  <a id=\"hmbld\" markerId=\"15\" type=\"button\" class=\".acss-a4e8ca\" aria-describedby=\":Rllblj5cma:\" left=\"1352\" top=\"16\" width=\"32\" height=\"32\">\n  </a>\n</>\n```\n\n----------------------------------------\n\nTITLE: Menu Interface Structure in JSX\nDESCRIPTION: Complete JSX structure for HEYTEA Singapore's menu interface, including header elements, navigation tabs, product categories, and menu items with pricing. The layout uses nested div and span elements with specific positioning attributes.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/online_order/element-tree.txt#2025-04-23_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\n<>\n  <div id=\"amjle\" markerId=\"0\" undefined=\"\" class=\".icon\" left=\"15\" top=\"17\" width=\"22\" height=\"22\">\n  </div>\n</>\n<>\n  <span id=\"kfmhg\" markerId=\"1\"  left=\"65\" top=\"17\" width=\"53\" height=\"23\">\n    English\n  </span>\n</>\n<>\n  <div id=\"kiboe\" markerId=\"2\" undefined=\"\" class=\".img\" left=\"203\" top=\"8\" width=\"44\" height=\"44\">\n  </div>\n</>\n<>\n  <div id=\"podpa\" markerId=\"3\" undefined=\"\" class=\".icon\" left=\"350\" top=\"16\" width=\"25\" height=\"25\">\n  </div>\n</>\n<>\n  <p id=\"mhedh\" markerId=\"4\"  left=\"75\" top=\"69\" width=\"250\" height=\"20\">\n    Delivery and self pick-up not available\n  </p>\n</>\n<>\n  <span id=\"aadbo\" markerId=\"5\"  left=\"22\" top=\"123\" width=\"312\" height=\"20\">\n    Islandwide Delivery, Minimum Spending of S$ 11\n  </span>\n</>\n<>\n  <div id=\"dbdoo\" markerId=\"6\" undefined=\"\" left=\"16\" top=\"260\" width=\"368\" height=\"180\">\n  </div>\n  <>\n    <p id=\"ppkeh\" markerId=\"7\"  left=\"16\" top=\"451\" width=\"330\" height=\"41\">\n      HEYTEA Singapore. The original cheezo tea 2012, fostering joy & inspiration with every sip.\n    </p>\n  </>\n</>\n<>\n  <span id=\"agjnc\" markerId=\"8\"  left=\"74\" top=\"536\" width=\"41\" height=\"23\">\n    Menu\n  </span>\n</>\n<>\n  <span id=\"ajcdg\" markerId=\"10\"  left=\"155\" top=\"536\" width=\"61\" height=\"23\">\n    Reviews\n  </span>\n</>\n<>\n  <span id=\"pmdgk\" markerId=\"11\"  left=\"256\" top=\"536\" width=\"70\" height=\"23\">\n    Merchant\n  </span>\n</>\n<>\n  <span id=\"odbpp\" markerId=\"12\"  left=\"5\" top=\"594\" width=\"64\" height=\"17\">\n    IN SEASON\n  </span>\n</>\n<>\n  <span id=\"eoobp\" markerId=\"13\"  left=\"5\" top=\"645\" width=\"75\" height=\"35\">\n    REFRESHING DRINKS\n  </span>\n</>\n<>\n  <span id=\"ocabo\" markerId=\"14\"  left=\"5\" top=\"705\" width=\"68\" height=\"35\">\n    SIGNATURE DRINKS\n  </span>\n</>\n<>\n  <span id=\"pgadj\" markerId=\"15\"  left=\"5\" top=\"765\" width=\"60\" height=\"35\">\n    COMFORT DRINKS\n  </span>\n</>\n<>\n  <span id=\"pfdef\" markerId=\"16\"  left=\"5\" top=\"825\" width=\"58\" height=\"35\">\n    SIMPLE CLASSICS\n  </span>\n</>\n<>\n  <span id=\"hjlcp\" markerId=\"17\"  left=\"88\" top=\"602\" width=\"96\" height=\"20\">\n    IN SEASON (1)\n  </span>\n</>\n<>\n  <div id=\"obhgh\" markerId=\"18\" undefined=\"\" class=\".img\" left=\"88\" top=\"638\" width=\"90\" height=\"90\">\n  </div>\n  <>\n    <h2 id=\"millo\" markerId=\"19\"  left=\"188\" top=\"639\" width=\"139\" height=\"41\">\n      Very Tangerine Blast (Original)\n    </h2>\n  </>\n  <>\n    <span id=\"dmggl\" markerId=\"20\"  left=\"192\" top=\"721\" width=\"37\" height=\"25\">\n      6.82\n    </span>\n  </>\n  <>\n    <div id=\"jfdbe\" markerId=\"21\"  left=\"306\" top=\"721\" width=\"76\" height=\"17\">\n      Select Option\n    </div>\n  </>\n</>\n<>\n  <span id=\"eabbl\" markerId=\"22\"  left=\"88\" top=\"763\" width=\"169\" height=\"20\">\n    REFRESHING DRINKS (5)\n  </span>\n</>\n<>\n  <div id=\"enebg\" markerId=\"23\" undefined=\"\" class=\".img\" left=\"88\" top=\"800\" width=\"90\" height=\"90\">\n  </div>\n  <>\n    <h2 id=\"iihbj\" markerId=\"24\"  left=\"188\" top=\"800\" width=\"156\" height=\"20\">\n      Mango Grapefruit Pops\n    </h2>\n  </>\n  <>\n    <span id=\"naibh\" markerId=\"25\"  left=\"192\" top=\"864\" width=\"37\" height=\"25\">\n      6.54\n    </span>\n  </>\n  <>\n    <div id=\"cdmma\" markerId=\"26\"  left=\"306\" top=\"864\" width=\"76\" height=\"17\">\n      Select Option\n    </div>\n  </>\n</>\n<>\n  <div id=\"ddeal\" markerId=\"27\" undefined=\"\" left=\"358\" top=\"813\" width=\"42\" height=\"42\">\n  </div>\n</>\n```\n\n----------------------------------------\n\nTITLE: Example of Poor Coordinate Query Prompt\nDESCRIPTION: An ineffective prompt asking for exact coordinates, which AI models struggle to provide with precision from visual context.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_11\n\nLANGUAGE: log\nCODE:\n```\n[number, number], the [x, y] coords of the main button\n```\n\n----------------------------------------\n\nTITLE: Implementing Right-Side Buttons (Right-Top, Right, Right-Bottom) in HTML\nDESCRIPTION: This snippet creates three buttons positioned on the right side of a layout (top, middle, bottom) using Ant Design classes. The buttons are styled as outlined default buttons with specific dimensions and positions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-tooltip/element-tree.txt#2025-04-23_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<div id=\"knobo\" markerId=\"130\" type=\"button\" class=\".ant-btn.css-var-Rpalfmcjcma.ant-btn-default.ant-btn-color-default.ant-btn-variant-outlined\" left=\"1545\" top=\"605\" width=\"80\" height=\"32\">\n  RT\n</div>\n<div id=\"jikoa\" markerId=\"131\" type=\"button\" class=\".ant-btn.css-var-Rpalfmcjcma.ant-btn-default.ant-btn-color-default.ant-btn-variant-outlined\" left=\"1545\" top=\"645\" width=\"80\" height=\"32\">\n  Right\n</div>\n<div id=\"ipefb\" markerId=\"132\" type=\"button\" class=\".ant-btn.css-var-Rpalfmcjcma.ant-btn-default.ant-btn-color-default.ant-btn-variant-outlined\" left=\"1545\" top=\"685\" width=\"80\" height=\"32\">\n  RB\n</div>\n```\n\n----------------------------------------\n\nTITLE: Header Navigation Element Structure in HTML\nDESCRIPTION: HTML structure for the Visual Studio Code website header, containing the product name, navigation links to documentation, updates, blog, API, extensions, FAQ, and GitHub Copilot pages.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/visualstudio/element-tree.txt#2025-04-23_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <span id=\"fglbl\"   left=\"116\" top=\"17\" width=\"170\" height=\"24\">\n    Visual Studio Code\n  </span>\n</>\n  <>\n    <a id=\"hbbjm\" markerId=\"1\"  left=\"313\" top=\"20\" width=\"38\" height=\"19\">\n      Docs\n    </a>\n  </>\n  <>\n    <a id=\"ldhod\" markerId=\"2\"  left=\"375\" top=\"20\" width=\"63\" height=\"19\">\n      Updates\n    </a>\n  </>\n  <>\n    <a id=\"njicg\" markerId=\"3\"  left=\"461\" top=\"20\" width=\"33\" height=\"19\">\n      Blog\n    </a>\n  </>\n  <>\n    <a id=\"bpelm\" markerId=\"4\"  left=\"519\" top=\"20\" width=\"25\" height=\"19\">\n      API\n    </a>\n  </>\n  <>\n    <a id=\"jdhej\" markerId=\"5\"  left=\"568\" top=\"20\" width=\"81\" height=\"19\">\n      Extensions\n    </a>\n  </>\n  <>\n    <a id=\"jfnal\" markerId=\"6\"  left=\"672\" top=\"20\" width=\"31\" height=\"19\">\n      FAQ\n    </a>\n  </>\n  <>\n    <a id=\"pnpcb\" markerId=\"7\"  left=\"727\" top=\"20\" width=\"109\" height=\"19\">\n      GitHub Copilot\n    </a>\n  </>\n```\n\n----------------------------------------\n\nTITLE: Example of Non-English Prompt for Navigation\nDESCRIPTION: An example showing that Midscene supports prompts in languages other than English, in this case Chinese, to click on a home link in the navigation bar.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_18\n\nLANGUAGE: log\nCODE:\n```\n点击顶部左侧导航栏中的\"首页\"链接\n```\n\n----------------------------------------\n\nTITLE: Creating Left-Side Buttons (Left-Top, Left, Left-Bottom) in HTML\nDESCRIPTION: This code creates three buttons positioned on the left side of a layout (top, middle, bottom) using Ant Design classes. The buttons are styled as outlined default buttons with specific dimensions and positions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-tooltip/element-tree.txt#2025-04-23_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<div id=\"ojjkb\" markerId=\"127\" type=\"button\" class=\".ant-btn.css-var-Rpalfmcjcma.ant-btn-default.ant-btn-color-default.ant-btn-variant-outlined\" left=\"1201\" top=\"605\" width=\"80\" height=\"32\">\n  LT\n</div>\n<div id=\"jclgn\" markerId=\"128\" type=\"button\" class=\".ant-btn.css-var-Rpalfmcjcma.ant-btn-default.ant-btn-color-default.ant-btn-variant-outlined\" left=\"1201\" top=\"645\" width=\"80\" height=\"32\">\n  Left\n</div>\n<div id=\"cddkd\" markerId=\"129\" type=\"button\" class=\".ant-btn.css-var-Rpalfmcjcma.ant-btn-default.ant-btn-color-default.ant-btn-variant-outlined\" left=\"1201\" top=\"685\" width=\"80\" height=\"32\">\n  LB\n</div>\n```\n\n----------------------------------------\n\nTITLE: GitHub Copilot Promotional Banner in HTML\nDESCRIPTION: HTML structure for a promotional banner advertising GitHub Copilot integration with VS Code. The banner contains text and a link encouraging users to get GitHub Copilot for free with VS Code.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/visualstudio/element-tree.txt#2025-04-23_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <p id=\"befbo\" markerId=\"12\"  left=\"496\" top=\"77\" width=\"45\" height=\"17\">\n    🚀 Get\n  </p>\n  <>\n    <a id=\"hcbca\" markerId=\"13\"  left=\"541\" top=\"77\" width=\"130\" height=\"17\">\n      GitHub Copilot Free\n    </a>\n  </>\n  <p id=\"bjijb\" markerId=\"14\"  left=\"671\" top=\"77\" width=\"80\" height=\"17\">\n    in VS Code!\n  </p>\n</>\n<>\n  <div id=\"jnkgi\" markerId=\"15\" aria-hidden=\"true\" class=\".glyph-icon\" left=\"1241\" top=\"73\" width=\"15\" height=\"21\">\n  </div>\n</>\n```\n\n----------------------------------------\n\nTITLE: Main Heading and Download Section in HTML\nDESCRIPTION: HTML elements for the main heading and download section of the VS Code website. Includes the headline, download button for macOS, GitHub Copilot link, and alternative platform links.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/visualstudio/element-tree.txt#2025-04-23_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <h1 id=\"cphhj\" markerId=\"16\"  left=\"350\" top=\"139\" width=\"581\" height=\"171\">\n    Your code editor. Redefined with AI.\n  </h1>\n</>\n    <>\n      <div id=\"kacdo\" markerId=\"17\" type=\"button\" class=\".link-button.dlink\" data-os=\"osx\" id=\"download-buttons-osx\" left=\"438\" top=\"336\" width=\"219\" height=\"48\">\n        Download for macOS\n      </div>\n      <>\n        <a id=\"cjedj\" markerId=\"18\"  left=\"688\" top=\"349\" width=\"133\" height=\"22\">\n          Get Copilot Free\n        </a>\n      </>\n    </>\n    <>\n      <a id=\"aolaj\" markerId=\"19\"  left=\"523\" top=\"394\" width=\"26\" height=\"14\">\n        Web\n      </a>\n    </>\n    <p id=\"fjkhe\" markerId=\"20\"  left=\"549\" top=\"394\" width=\"7\" height=\"14\">\n      ,\n    </p>\n    <>\n      <a id=\"ighlp\" markerId=\"21\"  left=\"556\" top=\"394\" width=\"89\" height=\"14\">\n        Insiders edition\n      </a>\n    </>\n    <p id=\"cfbdk\" markerId=\"22\"  left=\"645\" top=\"394\" width=\"22\" height=\"14\">\n      , or\n    </p>\n    <>\n      <a id=\"llkjk\" markerId=\"23\"  left=\"667\" top=\"394\" width=\"90\" height=\"14\">\n        other platforms\n      </a>\n    </>\n```\n\n----------------------------------------\n\nTITLE: Implementing Top and Top-Right Buttons in HTML\nDESCRIPTION: This snippet creates two buttons positioned at the top and top-right of a layout using Ant Design classes. The buttons are styled as outlined default buttons with specific dimensions and positions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-tooltip/element-tree.txt#2025-04-23_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<div id=\"gpang\" markerId=\"125\" type=\"button\" class=\".ant-btn.css-var-Rpalfmcjcma.ant-btn-default.ant-btn-color-default.ant-btn-variant-outlined\" left=\"1373\" top=\"565\" width=\"80\" height=\"32\">\n  Top\n</div>\n<div id=\"kbhkl\" markerId=\"126\" type=\"button\" class=\".ant-btn.css-var-Rpalfmcjcma.ant-btn-default.ant-btn-color-default.ant-btn-variant-outlined\" left=\"1461\" top=\"565\" width=\"80\" height=\"32\">\n  TR\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Updates Dropdown in HTML\nDESCRIPTION: This snippet defines a div element for a dropdown to subscribe to updates. It includes ARIA attributes for accessibility and specific CSS classes.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/githubstatus/element-tree.txt#2025-04-23_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <div id=\"inilf\" markerId=\"5\" href=\"#\" data-js-hook=\"show-updates-dropdown\" id=\"show-updates-dropdown\" class=\".show-updates-dropdown\" aria-label=\"Subscribe to updates\" aria-expanded=\"false\" aria-haspopup=\"dialog\" role=\"button\" left=\"1736\" top=\"27\" width=\"160\" height=\"19\">\n  </div>\n</>\n```\n\n----------------------------------------\n\nTITLE: Creating Bottom and Bottom-Corner Buttons in HTML\nDESCRIPTION: This code implements three buttons positioned at the bottom-left, bottom-center, and bottom-right of a layout using Ant Design classes. The buttons are styled as outlined default buttons with specific dimensions and positions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-tooltip/element-tree.txt#2025-04-23_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<div id=\"gioah\" markerId=\"133\" type=\"button\" class=\".ant-btn.css-var-Rpalfmcjcma.ant-btn-default.ant-btn-color-default.ant-btn-variant-outlined\" left=\"1285\" top=\"725\" width=\"80\" height=\"32\">\n  BL\n</div>\n<div id=\"fehdo\" markerId=\"134\" type=\"button\" class=\".ant-btn.css-var-Rpalfmcjcma.ant-btn-default.ant-btn-color-default.ant-btn-variant-outlined\" left=\"1373\" top=\"725\" width=\"80\" height=\"32\">\n  Bottom\n</div>\n<div id=\"inlfc\" markerId=\"135\" type=\"button\" class=\".ant-btn.css-var-Rpalfmcjcma.ant-btn-default.ant-btn-color-default.ant-btn-variant-outlined\" left=\"1461\" top=\"725\" width=\"80\" height=\"32\">\n  BR\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Descriptive Text and Icons for Button Layout in HTML\nDESCRIPTION: This snippet adds descriptive text and placeholder spans for icons to explain the button layout. It includes a title, an icon placeholder, and a description mentioning 12 directions for positioning.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-tooltip/element-tree.txt#2025-04-23_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<a id=\"ngggj\" markerId=\"136\"  left=\"1095\" top=\"805\" width=\"28\" height=\"17\">\n  位置\n</a>\n<span id=\"apcbb\" markerId=\"137\" svgContent=\"true\" left=\"1132\" top=\"805\" width=\"14\" height=\"14\">\n</span>\n<p id=\"gbdkm\" markerId=\"138\"  left=\"1095\" top=\"836\" width=\"120\" height=\"17\">\n  位置有 12 个方向。\n</p>\n```\n\n----------------------------------------\n\nTITLE: Implementing Icon Placeholders and Code Expand Button in HTML\nDESCRIPTION: This code creates placeholder spans for icons and a code expand button. The placeholders are likely to be filled with SVG content, and the expand button is styled using a specific CSS class.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-tooltip/element-tree.txt#2025-04-23_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<span id=\"offpo\" markerId=\"139\" svgContent=\"true\" left=\"1342\" top=\"883\" width=\"14\" height=\"16\">\n</span>\n<span id=\"mopgl\" markerId=\"140\" svgContent=\"true\" left=\"1374\" top=\"884\" width=\"13\" height=\"16\">\n</span>\n<span id=\"fifek\" markerId=\"141\" svgContent=\"true\" left=\"1405\" top=\"884\" width=\"14\" height=\"14\">\n</span>\n<span id=\"bgjkc\" markerId=\"142\" svgContent=\"true\" left=\"1439\" top=\"886\" width=\"11\" height=\"11\">\n</span>\n<div id=\"filbo\" markerId=\"143\" alt=\"expand code\" class=\".code-expand-icon-show\" left=\"1469\" top=\"883\" width=\"16\" height=\"16\">\n</div>\n```\n\n----------------------------------------\n\nTITLE: Theme Toggle and Search Components in HTML\nDESCRIPTION: HTML elements for the theme toggle button and search functionality on the VS Code website. Includes a toggle button for switching themes and a search input field with placeholder text and submit button.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/visualstudio/element-tree.txt#2025-04-23_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <li id=\"copdb\" markerId=\"8\" type=\"button\" class=\".theme-switch\" id=\"theme-toggle\" left=\"849\" top=\"13\" width=\"32\" height=\"32\">\n  </li>\n</>\n    <>\n      <input id=\"bminn\" markerId=\"9\" type=\"text\" name=\"q\" class=\".search-box.form-control\" placeholder=\"Search Docs\" aria-label=\"Search text\" undefined=\"\" left=\"885\" top=\"13\" width=\"200\" height=\"32\">\n        Search Docs\n      </input>\n      <>\n        <span id=\"cipnh\" markerId=\"10\" tabindex=\"0\" class=\".btn\" type=\"submit\" aria-label=\"Search\" left=\"892\" top=\"19\" width=\"28\" height=\"20\">\n        </span>\n      </>\n    </>\n    <>\n      <span id=\"opjng\" markerId=\"11\"  left=\"1109\" top=\"20\" width=\"75\" height=\"19\">\n        Download\n      </span>\n    </>\n```\n\n----------------------------------------\n\nTITLE: Displaying Version Number in HTML\nDESCRIPTION: This snippet shows an HTML span element used to display a version number. It includes positioning attributes for layout purposes.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-pagination/element-tree.txt#2025-04-23_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <span id=\"omebk\" markerId=\"137\"  left=\"1718\" top=\"835\" width=\"38\" height=\"17\">\n    5.19.0\n  </span>\n</>\n```\n\n----------------------------------------\n\nTITLE: Installing Midscene Android Package with Package Manager\nDESCRIPTION: Command to install the Midscene Android package as a development dependency using the package manager.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/integrate-with-android.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ninstall @midscene/android --save-dev\n```\n\n----------------------------------------\n\nTITLE: Running TypeScript Script with tsx\nDESCRIPTION: Shows the command to execute a TypeScript script using tsx.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/bridge-mode-by-chrome-extension.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ntsx demo-new-tab.ts\n```\n\n----------------------------------------\n\nTITLE: Building Midscene Report for Production\nDESCRIPTION: Command to create an optimized production build of the Midscene Report application.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/report/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Running TypeScript Script with tsx\nDESCRIPTION: Command to run the TypeScript demo script using tsx, which allows direct execution of TypeScript files without a separate compilation step.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/zh/integrate-with-android.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# run\nnpx tsx demo.ts\n```\n\n----------------------------------------\n\nTITLE: Creating Theme Switcher Button in HTML\nDESCRIPTION: This snippet shows an HTML div element used as a theme switcher button. It includes specific classes, an aria-label, and positioning attributes for accessibility and layout purposes.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-pagination/element-tree.txt#2025-04-23_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <div id=\"fmeee\" markerId=\"139\" aria-label=\"Theme Switcher\" class=\".css-var-R2a.ant-float-btn-css-var.ant-float-btn.ant-float-btn-group-trigger.ant-float-btn-default.ant-float-btn-circle\" type=\"button\" left=\"1856\" top=\"992\" width=\"40\" height=\"40\">\n  </div>\n</>\n```\n\n----------------------------------------\n\nTITLE: Creating a Theme Switcher Button in HTML\nDESCRIPTION: This snippet implements a theme switcher button using Ant Design's float button component. The button is styled as a circular, default float button with specific positioning and dimensions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/antd-tooltip/element-tree.txt#2025-04-23_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<div id=\"fmeee\" markerId=\"144\" aria-label=\"Theme Switcher\" class=\".css-var-R2a.ant-float-btn-css-var.ant-float-btn.ant-float-btn-group-trigger.ant-float-btn-default.ant-float-btn-circle\" type=\"button\" left=\"1856\" top=\"992\" width=\"40\" height=\"40\">\n</div>\n```\n\n----------------------------------------\n\nTITLE: Displaying System Status Overview in HTML\nDESCRIPTION: This snippet shows the overall system status with a span element. It's positioned within the layout and indicates that all systems are operational.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/githubstatus/element-tree.txt#2025-04-23_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<>\n  <span id=\"djonb\" markerId=\"7\"  left=\"522\" top=\"415\" width=\"219\" height=\"24\">\n    All Systems Operational\n  </span>\n</>\n```\n\n----------------------------------------\n\nTITLE: Rendering Positioned Div with React Fragments\nDESCRIPTION: Demonstrates the use of empty React fragments (<></>) wrapping a div element with specific positioning, styling and marker attributes.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/packages/evaluation/page-data/aweme-play/element-tree.txt#2025-04-23_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n                                    </>\n                          <>\n                            <div id=\"cmdpm\" markerId=\"37\" class=\".zNBuJls_\" type=\"button\" left=\"1248\" top=\"375\" width=\"32\" height=\"50\">\n                            </div>\n                          </>\n```\n\n----------------------------------------\n\nTITLE: Midscene Report Project Structure\nDESCRIPTION: Overview of the main directories in the Midscene Report project structure, showing the organization of components, assets, templates, and type definitions.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/report/README.md#2025-04-23_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nsrc/\n  ├── components/     # React Components\n  ├── assets/        # Static Assets\n  ├── template/      # HTML Templates\n  └── types.ts       # Type Definitions\n```\n\n----------------------------------------\n\nTITLE: Example of Poor Button Click Prompt\nDESCRIPTION: A vague prompt for clicking a button that doesn't provide enough positional information to disambiguate between similar UI elements.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_8\n\nLANGUAGE: log\nCODE:\n```\nClick the \"Add\" button\n```\n\n----------------------------------------\n\nTITLE: Example of Poor Browser State Assertion Prompt\nDESCRIPTION: An ineffective assertion that refers to browser state (tabs) that isn't visible in the interface screenshots provided to the AI model.\nSOURCE: https://github.com/web-infra-dev/midscene/blob/main/apps/site/docs/en/prompting-tips.md#2025-04-23_snippet_14\n\nLANGUAGE: log\nCODE:\n```\nThe browser has two active tabs\n```"
  }
]
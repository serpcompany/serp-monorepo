[
  {
    "owner": "paypal",
    "repo": "paypal-typescript-server-sdk",
    "content": "TITLE: Creating an Order with PayPal API in TypeScript\nDESCRIPTION: Demonstrates how to create a new PayPal order using the OrdersController. This method allows merchants to add Level 2 and 3 data to payments to reduce risk and processing costs.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/orders.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nasync createOrder(\n  body: OrderRequest,\n  paypalMockResponse?: string,\n  paypalRequestId?: string,\n  paypalPartnerAttributionId?: string,\n  paypalClientMetadataId?: string,\n  prefer?: string,\n  paypalAuthAssertion?: string,\n  requestOptions?: RequestOptions\n): Promise<ApiResponse<Order>>\n```\n\n----------------------------------------\n\nTITLE: Initializing PayPal API Client in TypeScript\nDESCRIPTION: Configuration example for initializing the PayPal API client with authentication credentials, environment settings, timeout configuration, and logging options.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst client = new Client({\n  clientCredentialsAuthCredentials: {\n    oAuthClientId: 'OAuthClientId',\n    oAuthClientSecret: 'OAuthClientSecret'\n  },\n  timeout: 0,\n  environment: Environment.Sandbox,\n  logging: {\n    logLevel: LogLevel.Info,\n    logRequest: {\n      logBody: true\n    },\n    logResponse: {\n      logHeaders: true\n    }\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Refunding Captured Payment with PayPal TypeScript SDK\nDESCRIPTION: This snippet demonstrates how to refund a captured payment using the PayPal TypeScript Server SDK. It includes error handling for API errors and shows how to access response details.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/payments.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  captureId: 'capture_id2',\n  prefer: 'return=minimal'\n}\n\ntry {\n  const { result, ...httpResponse } = await paymentsController.refundCapturedPayment(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Capturing Payment for PayPal Order in TypeScript\nDESCRIPTION: This function captures payment for a PayPal order. It requires the order ID and supports optional parameters for customizing the request. The function returns an ApiResponse containing the updated Order object.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/orders.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nasync captureOrder(\n  id: string,\n  paypalMockResponse?: string,\n  paypalRequestId?: string,\n  prefer?: string,\n  paypalClientMetadataId?: string,\n  paypalAuthAssertion?: string,\n  body?: OrderCaptureRequest,\n  requestOptions?: RequestOptions\n): Promise<ApiResponse<Order>>\n```\n\n----------------------------------------\n\nTITLE: Initializing PayPal TypeScript SDK Client with OAuth2 Authentication\nDESCRIPTION: Sample code demonstrating how to initialize the PayPal TypeScript SDK client with client credentials authentication, custom timeout, environment settings, and detailed logging configuration. This initialization is required before accessing any of the SDK controllers for API operations.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/client.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst client = new Client({\n  clientCredentialsAuthCredentials: {\n    oAuthClientId: 'OAuthClientId',\n    oAuthClientSecret: 'OAuthClientSecret'\n  },\n  timeout: 0,\n  environment: Environment.Sandbox,\n  logging: {\n    logLevel: LogLevel.Info,\n    logRequest: {\n      logBody: true\n    },\n    logResponse: {\n      logHeaders: true\n    }\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Authorizing an Order with PayPal TypeScript SDK\nDESCRIPTION: Authorizes payment for an order after buyer approval. Requires the order ID and handles various optional parameters. Returns the authorization response on success.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/orders.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  id: 'id0',\n  prefer: 'return=minimal'\n}\n\ntry {\n  const { result, ...httpResponse } = await ordersController.authorizeOrder(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Payment Token in PayPal Vault\nDESCRIPTION: Creates a payment token from a payment source and adds it to customer's vault. Accepts payment token request body and optional PayPal request ID.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/vault.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  body: {\n    paymentSource: {\n    },\n  }\n}\n\ntry {\n  const { result, ...httpResponse } = await vaultController.createPaymentToken(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of getAuthorizedPayment Method in TypeScript\nDESCRIPTION: Demonstrates how to use the getAuthorizedPayment method to retrieve details of an authorized payment by its ID, including error handling.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/payments.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  authorizationId: 'authorization_id8'\n}\n\ntry {\n  const { result, ...httpResponse } = await paymentsController.getAuthorizedPayment(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example OrderRequest Object in JSON\nDESCRIPTION: A complete example of the OrderRequest object in JSON format showing all the possible fields including intent, purchase units, payer information, payment source, and application context. This example demonstrates the structure required for creating an order with the PayPal API.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"intent\": \"CAPTURE\",\n  \"purchase_units\": [\n    {\n      \"reference_id\": \"reference_id4\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\",\n        \"breakdown\": {\n          \"item_total\": {\n            \"currency_code\": \"currency_code0\",\n            \"value\": \"value6\"\n          },\n          \"shipping\": {\n            \"currency_code\": \"currency_code0\",\n            \"value\": \"value6\"\n          },\n          \"handling\": {\n            \"currency_code\": \"currency_code2\",\n            \"value\": \"value8\"\n          },\n          \"tax_total\": {\n            \"currency_code\": \"currency_code4\",\n            \"value\": \"value0\"\n          },\n          \"insurance\": {\n            \"currency_code\": \"currency_code2\",\n            \"value\": \"value8\"\n          }\n        }\n      },\n      \"payee\": {\n        \"email_address\": \"email_address4\",\n        \"merchant_id\": \"merchant_id6\"\n      },\n      \"payment_instruction\": {\n        \"platform_fees\": [\n          {\n            \"amount\": {\n              \"currency_code\": \"currency_code6\",\n              \"value\": \"value0\"\n            },\n            \"payee\": {\n              \"email_address\": \"email_address4\",\n              \"merchant_id\": \"merchant_id6\"\n            }\n          },\n          {\n            \"amount\": {\n              \"currency_code\": \"currency_code6\",\n              \"value\": \"value0\"\n            },\n            \"payee\": {\n              \"email_address\": \"email_address4\",\n              \"merchant_id\": \"merchant_id6\"\n            }\n          },\n          {\n            \"amount\": {\n              \"currency_code\": \"currency_code6\",\n              \"value\": \"value0\"\n            },\n            \"payee\": {\n              \"email_address\": \"email_address4\",\n              \"merchant_id\": \"merchant_id6\"\n            }\n          }\n        ],\n        \"disbursement_mode\": \"INSTANT\",\n        \"payee_pricing_tier_id\": \"payee_pricing_tier_id2\",\n        \"payee_receivable_fx_rate_id\": \"payee_receivable_fx_rate_id0\"\n      },\n      \"description\": \"description6\",\n      \"custom_id\": \"custom_id4\"\n    }\n  ],\n  \"payer\": {\n    \"email_address\": \"email_address6\",\n    \"payer_id\": \"payer_id6\",\n    \"name\": {\n      \"given_name\": \"given_name2\",\n      \"surname\": \"surname8\"\n    },\n    \"phone\": {\n      \"phone_type\": \"OTHER\",\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      }\n    },\n    \"birth_date\": \"birth_date4\"\n  },\n  \"payment_source\": {\n    \"card\": {\n      \"name\": \"name6\",\n      \"number\": \"number6\",\n      \"expiry\": \"expiry4\",\n      \"security_code\": \"security_code8\",\n      \"billing_address\": {\n        \"address_line_1\": \"address_line_12\",\n        \"address_line_2\": \"address_line_28\",\n        \"admin_area_2\": \"admin_area_28\",\n        \"admin_area_1\": \"admin_area_14\",\n        \"postal_code\": \"postal_code0\",\n        \"country_code\": \"country_code8\"\n      }\n    },\n    \"token\": {\n      \"id\": \"id6\",\n      \"type\": \"BILLING_AGREEMENT\"\n    },\n    \"paypal\": {\n      \"vault_id\": \"vault_id0\",\n      \"email_address\": \"email_address0\",\n      \"name\": {\n        \"given_name\": \"given_name2\",\n        \"surname\": \"surname8\"\n      },\n      \"phone\": {\n        \"phone_type\": \"OTHER\",\n        \"phone_number\": {\n          \"national_number\": \"national_number6\"\n        }\n      },\n      \"birth_date\": \"birth_date8\"\n    },\n    \"bancontact\": {\n      \"name\": \"name0\",\n      \"country_code\": \"country_code0\",\n      \"experience_context\": {\n        \"brand_name\": \"brand_name2\",\n        \"locale\": \"locale6\",\n        \"shipping_preference\": \"NO_SHIPPING\",\n        \"return_url\": \"return_url4\",\n        \"cancel_url\": \"cancel_url6\"\n      }\n    },\n    \"blik\": {\n      \"name\": \"name2\",\n      \"country_code\": \"country_code2\",\n      \"email\": \"email4\",\n      \"experience_context\": {\n        \"brand_name\": \"brand_name2\",\n        \"locale\": \"locale6\",\n        \"shipping_preference\": \"NO_SHIPPING\",\n        \"return_url\": \"return_url4\",\n        \"cancel_url\": \"cancel_url6\"\n      },\n      \"level_0\": {\n        \"auth_code\": \"auth_code8\"\n      },\n      \"one_click\": {\n        \"auth_code\": \"auth_code0\",\n        \"consumer_reference\": \"consumer_reference2\",\n        \"alias_label\": \"alias_label6\",\n        \"alias_key\": \"alias_key4\"\n      }\n    }\n  },\n  \"application_context\": {\n    \"brand_name\": \"brand_name8\",\n    \"locale\": \"locale2\",\n    \"landing_page\": \"BILLING\",\n    \"shipping_preference\": \"SET_PROVIDED_ADDRESS\",\n    \"user_action\": \"CONTINUE\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Capturing Authorized Payment in TypeScript\nDESCRIPTION: Method signature for capturing an authorized payment using its ID. This method finalizes the payment capture process and returns a CapturedPayment object.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/payments.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nasync captureAuthorizedPayment(\n  authorizationId: string,\n  paypalMockResponse?: string,\n  paypalRequestId?: string,\n  prefer?: string,\n  paypalAuthAssertion?: string,\n  body?: CaptureRequest,\n  requestOptions?: RequestOptions\n): Promise<ApiResponse<CapturedPayment>>\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CreateOrder Method in TypeScript\nDESCRIPTION: Shows a practical example of creating an order with the PayPal API using the OrdersController. The example demonstrates setting the intent to capture payment and specifying the purchase unit details.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/orders.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  body: {\n    intent: CheckoutPaymentIntent.Capture,\n    purchaseUnits: [\n      {\n        amount: {\n          currencyCode: 'currency_code6',\n          value: 'value0',\n        },\n      }\n    ],\n  },\n  prefer: 'return=minimal'\n}\n\ntry {\n  const { result, ...httpResponse } = await ordersController.createOrder(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Order Details with PayPal API in TypeScript\nDESCRIPTION: Shows how to retrieve details for a specific order by its ID using the OrdersController.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/orders.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nasync getOrder(\n  id: string,\n  paypalMockResponse?: string,\n  paypalAuthAssertion?: string,\n  fields?: string,\n  requestOptions?: RequestOptions\n): Promise<ApiResponse<Order>>\n```\n\n----------------------------------------\n\nTITLE: Updating Order Tracking for PayPal Order in TypeScript\nDESCRIPTION: This function updates or cancels tracking information for a PayPal order. It requires the order ID and tracker ID, and supports optional parameters for customizing the update. The function returns an ApiResponse with no content.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/orders.md#2025-04-23_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nasync updateOrderTracking(\n  id: string,\n  trackerId: string,\n  paypalAuthAssertion?: string,\n  body?: Patch[],\n  requestOptions?: RequestOptions\n): Promise<ApiResponse<void>>\n```\n\n----------------------------------------\n\nTITLE: Reauthorizing a Payment with PayPal TypeScript SDK\nDESCRIPTION: This snippet demonstrates how to reauthorize a payment using the PayPal TypeScript SDK. It includes error handling for API errors and shows how to access the response data.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/payments.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  authorizationId: 'authorization_id8',\n  prefer: 'return=minimal'\n}\n\ntry {\n  const { result, ...httpResponse } = await paymentsController.reauthorizePayment(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of GetSetupToken with PayPal Vault Controller in TypeScript\nDESCRIPTION: Code example demonstrating how to call the getSetupToken method with an ID parameter and handle both successful responses and potential API errors in the PayPal TypeScript Server SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/vault.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst id = 'id0';\n\ntry {\n  const { result, ...httpResponse } = await vaultController.getSetupToken(id);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: PaymentSource Object Structure in TypeScript\nDESCRIPTION: Defines the PaymentSource object structure with various payment method options. Each field represents a different payment source, such as card, token, PayPal wallet, or other alternative payment methods.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-source.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nPaymentSource {\n  card?: CardRequest;\n  token?: Token;\n  paypal?: PaypalWallet;\n  bancontact?: BancontactPaymentRequest;\n  blik?: BlikPaymentRequest;\n  eps?: EpsPaymentRequest;\n  giropay?: GiropayPaymentRequest;\n  ideal?: IdealPaymentRequest;\n  mybank?: MybankPaymentRequest;\n  p24?: P24PaymentRequest;\n  sofort?: SofortPaymentRequest;\n  trustly?: TrustlyPaymentRequest;\n  applePay?: ApplePayRequest;\n  googlePay?: GooglePayRequest;\n  venmo?: VenmoWalletRequest;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OrderAuthorizeResponsePaymentSource Structure in JSON\nDESCRIPTION: This JSON snippet demonstrates the structure of an OrderAuthorizeResponsePaymentSource object. It includes examples of all possible payment sources: card, PayPal, Apple Pay, Google Pay, and Venmo. Each payment source contains relevant details such as account information, name, and contact details.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-authorize-response-payment-source.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"card\": {\n    \"name\": \"name6\",\n    \"last_digits\": \"last_digits0\",\n    \"brand\": \"RUPAY\",\n    \"available_networks\": [\n      \"SYNCHRONY\"\n    ],\n    \"type\": \"UNKNOWN\"\n  },\n  \"paypal\": {\n    \"email_address\": \"email_address0\",\n    \"account_id\": \"account_id4\",\n    \"account_status\": \"VERIFIED\",\n    \"name\": {\n      \"given_name\": \"given_name2\",\n      \"surname\": \"surname8\"\n    },\n    \"phone_type\": \"FAX\"\n  },\n  \"apple_pay\": {\n    \"id\": \"id0\",\n    \"token\": \"token6\",\n    \"name\": \"name0\",\n    \"email_address\": \"email_address8\",\n    \"phone_number\": {\n      \"national_number\": \"national_number6\"\n    }\n  },\n  \"google_pay\": {\n    \"name\": \"name8\",\n    \"email_address\": \"email_address6\",\n    \"phone_number\": {\n      \"country_code\": \"country_code2\",\n      \"national_number\": \"national_number6\"\n    },\n    \"card\": {\n      \"name\": \"name6\",\n      \"last_digits\": \"last_digits0\",\n      \"type\": \"UNKNOWN\",\n      \"brand\": \"RUPAY\",\n      \"billing_address\": {\n        \"address_line_1\": \"address_line_12\",\n        \"address_line_2\": \"address_line_28\",\n        \"admin_area_2\": \"admin_area_28\",\n        \"admin_area_1\": \"admin_area_14\",\n        \"postal_code\": \"postal_code0\",\n        \"country_code\": \"country_code8\"\n      }\n    }\n  },\n  \"venmo\": {\n    \"email_address\": \"email_address4\",\n    \"account_id\": \"account_id8\",\n    \"user_name\": \"user_name2\",\n    \"name\": {\n      \"given_name\": \"given_name2\",\n      \"surname\": \"surname8\"\n    },\n    \"phone_number\": {\n      \"national_number\": \"national_number6\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StandardEntryClassCode Enumeration in TypeScript\nDESCRIPTION: This enumeration defines the Standard Entry Class (SEC) codes supported by PayPal for ACH transactions. It includes TEL, WEB, CCD, and PPD codes, each representing different methods of capturing consumer authorization for ACH transactions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/standard-entry-class-code.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum StandardEntryClassCode {\n  Tel,\n  Web,\n  Ccd,\n  Ppd\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Client with OAuth 2.0 Client Credentials in TypeScript\nDESCRIPTION: This snippet demonstrates how to initialize a client with OAuth 2.0 Client Credentials Grant. It sets up the client with the OAuth client ID and secret, which will automatically fetch the OAuth token when needed.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/auth/oauth-2-client-credentials-grant.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst client = new Client({\n  clientCredentialsAuthCredentials: {\n    oAuthClientId: 'OAuthClientId',\n    oAuthClientSecret: 'OAuthClientSecret'\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Patching an Order with PayPal TypeScript SDK\nDESCRIPTION: Updates an existing order using the PATCH method. Requires the order ID and optional patch operations. Handles API errors and returns the response.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/orders.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  id: 'id0',\n  body: [\n    {\n      op: PatchOp.Add,\n    }\n  ]\n}\n\ntry {\n  const { result, ...httpResponse } = await ordersController.patchOrder(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Captured Payment Details with PayPal TypeScript SDK\nDESCRIPTION: This snippet demonstrates how to retrieve details for a captured payment using the PayPal TypeScript SDK. It shows how to handle the API response and potential errors.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/payments.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  captureId: 'capture_id2'\n}\n\ntry {\n  const { result, ...httpResponse } = await paymentsController.getCapturedPayment(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: PaymentTokenResponse Example in JSON\nDESCRIPTION: A complete example of the PaymentTokenResponse object in JSON format. This object contains fields for the token ID, customer information, payment source details (supporting card, PayPal, Venmo, and Apple Pay methods), and HATEOAS links.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-token-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id0\",\n  \"customer\": {\n    \"id\": \"id0\",\n    \"merchant_customer_id\": \"merchant_customer_id2\"\n  },\n  \"payment_source\": {\n    \"card\": {\n      \"name\": \"name6\",\n      \"last_digits\": \"last_digits0\",\n      \"brand\": \"RUPAY\",\n      \"expiry\": \"expiry4\",\n      \"billing_address\": {\n        \"address_line_1\": \"address_line_12\",\n        \"address_line_2\": \"address_line_28\",\n        \"admin_area_2\": \"admin_area_28\",\n        \"admin_area_1\": \"admin_area_14\",\n        \"postal_code\": \"postal_code0\",\n        \"country_code\": \"country_code8\"\n      }\n    },\n    \"paypal\": {\n      \"description\": \"description2\",\n      \"usage_pattern\": \"THRESHOLD_PREPAID\",\n      \"shipping\": {\n        \"name\": {\n          \"full_name\": \"full_name6\"\n        },\n        \"phone_number\": {\n          \"country_code\": \"country_code2\",\n          \"national_number\": \"national_number6\"\n        },\n        \"type\": \"SHIPPING\",\n        \"address\": {\n          \"address_line_1\": \"address_line_16\",\n          \"address_line_2\": \"address_line_26\",\n          \"admin_area_2\": \"admin_area_20\",\n          \"admin_area_1\": \"admin_area_12\",\n          \"postal_code\": \"postal_code8\",\n          \"country_code\": \"country_code6\"\n        }\n      },\n      \"permit_multiple_payment_tokens\": false,\n      \"usage_type\": \"MERCHANT\"\n    },\n    \"venmo\": {\n      \"description\": \"description6\",\n      \"usage_pattern\": \"UNSCHEDULED_PREPAID\",\n      \"shipping\": {\n        \"name\": {\n          \"full_name\": \"full_name6\"\n        },\n        \"phone_number\": {\n          \"country_code\": \"country_code2\",\n          \"national_number\": \"national_number6\"\n        },\n        \"type\": \"SHIPPING\",\n        \"address\": {\n          \"address_line_1\": \"address_line_16\",\n          \"address_line_2\": \"address_line_26\",\n          \"admin_area_2\": \"admin_area_20\",\n          \"admin_area_1\": \"admin_area_12\",\n          \"postal_code\": \"postal_code8\",\n          \"country_code\": \"country_code6\"\n        }\n      },\n      \"permit_multiple_payment_tokens\": false,\n      \"usage_type\": \"MERCHANT\"\n    },\n    \"apple_pay\": {\n      \"card\": {\n        \"name\": \"name6\",\n        \"last_digits\": \"last_digits0\",\n        \"type\": \"UNKNOWN\",\n        \"brand\": \"RUPAY\",\n        \"billing_address\": {\n          \"address_line_1\": \"address_line_12\",\n          \"address_line_2\": \"address_line_28\",\n          \"admin_area_2\": \"admin_area_28\",\n          \"admin_area_1\": \"admin_area_14\",\n          \"postal_code\": \"postal_code0\",\n          \"country_code\": \"country_code8\"\n        }\n      }\n    }\n  },\n  \"links\": [\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    },\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: PaymentAuthorization Example JSON Structure\nDESCRIPTION: Example JSON representation of a PaymentAuthorization object showing a VOIDED payment with status details, ID, amount, and invoice ID. This demonstrates the minimum required fields for a typical authorization transaction.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-authorization.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"VOIDED\",\n  \"status_details\": {\n    \"reason\": \"PENDING_REVIEW\"\n  },\n  \"id\": \"id0\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  },\n  \"invoice_id\": \"invoice_id0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Voiding a Payment with PayPal TypeScript SDK\nDESCRIPTION: This snippet shows how to void or cancel an authorized payment using the PayPal TypeScript SDK. It includes error handling and demonstrates how to set up the request parameters.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/payments.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  authorizationId: 'authorization_id8',\n  prefer: 'return=minimal'\n}\n\ntry {\n  const { result, ...httpResponse } = await paymentsController.voidPayment(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VaultPaypalWalletRequest Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of a VaultPaypalWalletRequest, including all its fields, their types, and optional status. It also includes constraints and descriptions for each field.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-paypal-wallet-request.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface VaultPaypalWalletRequest {\n  description?: string; // Optional, min length 1, max length 128\n  usagePattern?: UsagePattern; // Optional\n  shipping?: VaultedDigitalWalletShippingDetails; // Optional\n  permitMultiplePaymentTokens?: boolean; // Optional, default false\n  usageType?: PaypalPaymentTokenUsageType; // Optional\n  customerType?: PaypalPaymentTokenCustomerType; // Optional\n  billingPlan?: Plan; // Optional\n  experienceContext?: VaultExperienceContext; // Optional\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Payment Token Details\nDESCRIPTION: Fetches details of a vaulted payment source using the payment token ID.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/vault.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst id = 'id0';\n\ntry {\n  const { result, ...httpResponse } = await vaultController.getPaymentToken(id);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example PayPal Order JSON Structure\nDESCRIPTION: This code snippet shows an example of a PayPal Order object in JSON format. It includes essential fields like create/update times, ID, payment source details with card information, and the payment intent.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"create_time\": \"create_time8\",\n  \"update_time\": \"update_time4\",\n  \"id\": \"id2\",\n  \"payment_source\": {\n    \"card\": {\n      \"name\": \"name6\",\n      \"last_digits\": \"last_digits0\",\n      \"brand\": \"RUPAY\",\n      \"available_networks\": [\n        \"SYNCHRONY\"\n      ],\n      \"type\": \"UNKNOWN\"\n    },\n    \"paypal\": {\n      \"email_address\": \"email_address0\",\n      \"account_id\": \"account_id4\",\n      \"account_status\": \"VERIFIED\",\n      \"name\": {\n        \"given_name\": \"given_name2\",\n        \"surname\": \"surname8\"\n      },\n      \"phone_type\": \"FAX\"\n    },\n    \"bancontact\": {\n      \"name\": \"name0\",\n      \"country_code\": \"country_code0\",\n      \"bic\": \"bic2\",\n      \"iban_last_chars\": \"iban_last_chars8\",\n      \"card_last_digits\": \"card_last_digits4\"\n    },\n    \"blik\": {\n      \"name\": \"name2\",\n      \"country_code\": \"country_code2\",\n      \"email\": \"email4\",\n      \"one_click\": {\n        \"consumer_reference\": \"consumer_reference2\"\n      }\n    },\n    \"eps\": {\n      \"name\": \"name6\",\n      \"country_code\": \"country_code6\",\n      \"bic\": \"bic8\"\n    }\n  },\n  \"intent\": \"CAPTURE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of GetOrder Method in TypeScript\nDESCRIPTION: Demonstrates how to retrieve order details using the order ID with proper error handling.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/orders.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  id: 'id0'\n}\n\ntry {\n  const { result, ...httpResponse } = await ordersController.getOrder(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ExperienceContext Model Structure in TypeScript\nDESCRIPTION: This snippet defines the structure of the ExperienceContext model, including its fields, types, and constraints. It specifies optional properties for customizing the payment experience, such as brand name, locale, shipping preference, and URLs.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/experience-context.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nExperienceContext {\n  brandName?: string; // Optional, min length 1, max length 127\n  locale?: string; // Optional, min length 2, max length 10\n  shippingPreference?: ShippingPreference; // Optional, default: GET_FROM_FILE\n  returnUrl?: string; // Optional\n  cancelUrl?: string; // Optional\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OrderCaptureRequest Structure with JSON Example\nDESCRIPTION: This JSON example illustrates the structure of an OrderCaptureRequest object. It includes a payment_source field with nested objects for various payment methods such as card, token, PayPal, Apple Pay, and Google Pay.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-capture-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"payment_source\": {\n    \"card\": {\n      \"name\": \"name6\",\n      \"number\": \"number6\",\n      \"expiry\": \"expiry4\",\n      \"security_code\": \"security_code8\",\n      \"billing_address\": {\n        \"address_line_1\": \"address_line_12\",\n        \"address_line_2\": \"address_line_28\",\n        \"admin_area_2\": \"admin_area_28\",\n        \"admin_area_1\": \"admin_area_14\",\n        \"postal_code\": \"postal_code0\",\n        \"country_code\": \"country_code8\"\n      }\n    },\n    \"token\": {\n      \"id\": \"id6\",\n      \"type\": \"BILLING_AGREEMENT\"\n    },\n    \"paypal\": {\n      \"vault_id\": \"vault_id0\",\n      \"email_address\": \"email_address0\",\n      \"name\": {\n        \"given_name\": \"given_name2\",\n        \"surname\": \"surname8\"\n      },\n      \"phone\": {\n        \"phone_type\": \"OTHER\",\n        \"phone_number\": {\n          \"national_number\": \"national_number6\"\n        }\n      },\n      \"birth_date\": \"birth_date8\"\n    },\n    \"apple_pay\": {\n      \"id\": \"id0\",\n      \"name\": \"name0\",\n      \"email_address\": \"email_address8\",\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      },\n      \"decrypted_token\": {\n        \"transaction_amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value2\"\n        },\n        \"tokenized_card\": {\n          \"name\": \"name4\",\n          \"number\": \"number2\",\n          \"expiry\": \"expiry2\",\n          \"card_type\": \"CB_NATIONALE\",\n          \"type\": \"UNKNOWN\"\n        },\n        \"device_manufacturer_id\": \"device_manufacturer_id6\",\n        \"payment_data_type\": \"3DSECURE\",\n        \"payment_data\": {\n          \"cryptogram\": \"cryptogram6\",\n          \"eci_indicator\": \"eci_indicator0\",\n          \"emv_data\": \"emv_data0\",\n          \"pin\": \"pin4\"\n        }\n      }\n    },\n    \"google_pay\": {\n      \"name\": \"name8\",\n      \"email_address\": \"email_address6\",\n      \"phone_number\": {\n        \"country_code\": \"country_code2\",\n        \"national_number\": \"national_number6\"\n      },\n      \"card\": {\n        \"name\": \"name6\",\n        \"type\": \"UNKNOWN\",\n        \"brand\": \"RUPAY\",\n        \"billing_address\": {\n          \"address_line_1\": \"address_line_12\",\n          \"address_line_2\": \"address_line_28\",\n          \"admin_area_2\": \"admin_area_28\",\n          \"admin_area_1\": \"admin_area_14\",\n          \"postal_code\": \"postal_code0\",\n          \"country_code\": \"country_code8\"\n        }\n      },\n      \"decrypted_token\": {\n        \"message_id\": \"message_id0\",\n        \"message_expiration\": \"message_expiration2\",\n        \"payment_method\": \"CARD\",\n        \"card\": {\n          \"name\": \"name6\",\n          \"number\": \"number6\",\n          \"expiry\": \"expiry4\",\n          \"last_digits\": \"last_digits0\",\n          \"type\": \"UNKNOWN\"\n        },\n        \"authentication_method\": \"PAN_ONLY\",\n        \"cryptogram\": \"cryptogram6\",\n        \"eci_indicator\": \"eci_indicator0\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Confirming an Order with PayPal TypeScript SDK\nDESCRIPTION: Confirms a payer's intent to pay for an order. Requires the order ID and optional parameters like client metadata and auth assertion. Returns the order details on success.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/orders.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  id: 'id0',\n  prefer: 'return=minimal'\n}\n\ntry {\n  const { result, ...httpResponse } = await ordersController.confirmOrder(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using ApiResponse in TypeScript with ExampleController\nDESCRIPTION: This snippet demonstrates how to use the ApiResponse class with an ExampleController. It shows how to make an API call, handle the successful response, and catch and process any errors.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/api-response.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntry {\n  const exampleController = new ExampleController(client);\n  const response = exampleController.getExampleType(body);\n  console.log('Success! Result:', response.result);\n  console.log('Status Code:', response.statusCode);\n} catch (error) {\n  if (error instanceof ApiError) {\n    console.log('Error:', error.message);\n    console.log('Result:', error.body);\n    console.log('Status Code:', error.statusCode);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example PaymentCollection JSON Structure\nDESCRIPTION: A sample JSON representation of the PaymentCollection model showing authorizations, captures, and refunds for a purchase unit. The example demonstrates the structure and format of payment data including status, amount, and invoice information.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-collection.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"authorizations\": [\n    {\n      \"status\": \"DENIED\",\n      \"status_details\": {\n        \"reason\": \"PENDING_REVIEW\"\n      },\n      \"id\": \"id2\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"invoice_id\": \"invoice_id2\"\n    },\n    {\n      \"status\": \"DENIED\",\n      \"status_details\": {\n        \"reason\": \"PENDING_REVIEW\"\n      },\n      \"id\": \"id2\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"invoice_id\": \"invoice_id2\"\n    },\n    {\n      \"status\": \"DENIED\",\n      \"status_details\": {\n        \"reason\": \"PENDING_REVIEW\"\n      },\n      \"id\": \"id2\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"invoice_id\": \"invoice_id2\"\n    }\n  ],\n  \"captures\": [\n    {\n      \"status\": \"REFUNDED\",\n      \"status_details\": {\n        \"reason\": \"VERIFICATION_REQUIRED\"\n      },\n      \"id\": \"id4\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"invoice_id\": \"invoice_id4\"\n    },\n    {\n      \"status\": \"REFUNDED\",\n      \"status_details\": {\n        \"reason\": \"VERIFICATION_REQUIRED\"\n      },\n      \"id\": \"id4\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"invoice_id\": \"invoice_id4\"\n    }\n  ],\n  \"refunds\": [\n    {\n      \"status\": \"CANCELLED\",\n      \"status_details\": {\n        \"reason\": \"ECHECK\"\n      },\n      \"id\": \"id8\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"invoice_id\": \"invoice_id8\"\n    },\n    {\n      \"status\": \"CANCELLED\",\n      \"status_details\": {\n        \"reason\": \"ECHECK\"\n      },\n      \"id\": \"id8\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"invoice_id\": \"invoice_id8\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PaypalWallet Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of the PaypalWallet resource, including all its fields with their types and optional status. It includes various fields like vaultId, emailAddress, name, phone, and others, each with specific constraints and descriptions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PaypalWallet {\n  vaultId?: string;\n  emailAddress?: string;\n  name?: Name;\n  phone?: PhoneWithType;\n  birthDate?: string;\n  taxInfo?: TaxInfo;\n  address?: Address;\n  attributes?: PaypalWalletAttributes;\n  experienceContext?: PaypalWalletExperienceContext;\n  billingAgreementId?: string;\n  storedCredential?: PaypalWalletStoredCredential;\n}\n```\n\n----------------------------------------\n\nTITLE: Reauthorizing Payment in TypeScript\nDESCRIPTION: Method signature for reauthorizing an existing payment authorization. This is used to ensure funds are still available after the initial authorization honor period expires.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/payments.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nasync reauthorizePayment(\n  authorizationId: string,\n  paypalRequestId?: string,\n  prefer?: string,\n  paypalAuthAssertion?: string,\n  body?: ReauthorizeRequest,\n  requestOptions?: RequestOptions\n): Promise<ApiResponse<PaymentAuthorization>>\n```\n\n----------------------------------------\n\nTITLE: Example Refund Object JSON Structure\nDESCRIPTION: Example JSON showing the structure of a PayPal refund object with basic fields including status, status details, ID, amount and invoice ID. Demonstrates the expected format for refund data.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/refund.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"CANCELLED\",\n  \"status_details\": {\n    \"reason\": \"ECHECK\"\n  },\n  \"id\": \"id6\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  },\n  \"invoice_id\": \"invoice_id6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Customer Payment Tokens\nDESCRIPTION: Retrieves all payment tokens for a specified customer with pagination support. Takes customer ID and optional pagination parameters.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/vault.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  customerId: 'customer_id8',\n  pageSize: 5,\n  page: 1,\n  totalRequired: false\n}\n\ntry {\n  const { result, ...httpResponse } = await vaultController.listCustomerPaymentTokens(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example ConfirmOrderRequest JSON Structure\nDESCRIPTION: A complete example of the ConfirmOrderRequest model in JSON format. It demonstrates how to structure a request with various payment source options including card, token, PayPal, Bancontact, and BLIK payment methods, along with application context settings.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/confirm-order-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"payment_source\": {\n    \"card\": {\n      \"name\": \"name6\",\n      \"number\": \"number6\",\n      \"expiry\": \"expiry4\",\n      \"security_code\": \"security_code8\",\n      \"billing_address\": {\n        \"address_line_1\": \"address_line_12\",\n        \"address_line_2\": \"address_line_28\",\n        \"admin_area_2\": \"admin_area_28\",\n        \"admin_area_1\": \"admin_area_14\",\n        \"postal_code\": \"postal_code0\",\n        \"country_code\": \"country_code8\"\n      }\n    },\n    \"token\": {\n      \"id\": \"id6\",\n      \"type\": \"BILLING_AGREEMENT\"\n    },\n    \"paypal\": {\n      \"vault_id\": \"vault_id0\",\n      \"email_address\": \"email_address0\",\n      \"name\": {\n        \"given_name\": \"given_name2\",\n        \"surname\": \"surname8\"\n      },\n      \"phone\": {\n        \"phone_type\": \"OTHER\",\n        \"phone_number\": {\n          \"national_number\": \"national_number6\"\n        }\n      },\n      \"birth_date\": \"birth_date8\"\n    },\n    \"bancontact\": {\n      \"name\": \"name0\",\n      \"country_code\": \"country_code0\",\n      \"experience_context\": {\n        \"brand_name\": \"brand_name2\",\n        \"locale\": \"locale6\",\n        \"shipping_preference\": \"NO_SHIPPING\",\n        \"return_url\": \"return_url4\",\n        \"cancel_url\": \"cancel_url6\"\n      }\n    },\n    \"blik\": {\n      \"name\": \"name2\",\n      \"country_code\": \"country_code2\",\n      \"email\": \"email4\",\n      \"experience_context\": {\n        \"brand_name\": \"brand_name2\",\n        \"locale\": \"locale6\",\n        \"shipping_preference\": \"NO_SHIPPING\",\n        \"return_url\": \"return_url4\",\n        \"cancel_url\": \"cancel_url6\"\n      },\n      \"level_0\": {\n        \"auth_code\": \"auth_code8\"\n      },\n      \"one_click\": {\n        \"auth_code\": \"auth_code0\",\n        \"consumer_reference\": \"consumer_reference2\",\n        \"alias_label\": \"alias_label6\",\n        \"alias_key\": \"alias_key4\"\n      }\n    }\n  },\n  \"application_context\": {\n    \"brand_name\": \"brand_name8\",\n    \"locale\": \"locale2\",\n    \"return_url\": \"return_url0\",\n    \"cancel_url\": \"cancel_url2\",\n    \"stored_payment_source\": {\n      \"payment_initiator\": \"CUSTOMER\",\n      \"payment_type\": \"RECURRING\",\n      \"usage\": \"FIRST\",\n      \"previous_network_transaction_reference\": {\n        \"id\": \"id6\",\n        \"date\": \"date2\",\n        \"network\": \"DELTA\",\n        \"acquirer_reference_number\": \"acquirer_reference_number8\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CardVerificationDetails Structure in TypeScript\nDESCRIPTION: This snippet defines the structure of CardVerificationDetails, including its fields, their types, and associated constraints. It represents card verification details including authorization and 3D Secure information.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-verification-details.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface CardVerificationDetails {\n  networkTransactionId?: string;\n  date?: string;\n  network?: CardBrand;\n  time?: string;\n  amount?: Money;\n  processorResponse?: CardVerificationProcessorResponse;\n  threeDSecure?: unknown;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Level3CardProcessingData Structure in TypeScript\nDESCRIPTION: This snippet defines the structure of Level3CardProcessingData, including its fields, types, and optional tags. It represents the data required for level 3 card processing, including shipping details, amounts, and line items.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/level-3-card-processing-data.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Level3CardProcessingData {\n  shippingAmount?: Money;\n  dutyAmount?: Money;\n  discountAmount?: Money;\n  shippingAddress?: Address;\n  shipsFromPostalCode?: string;\n  lineItems?: LineItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Refund Details with PayPal TypeScript SDK\nDESCRIPTION: This snippet shows how to retrieve details for a specific refund using its ID. It demonstrates the use of optional parameters and error handling in the PayPal TypeScript Server SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/payments.md#2025-04-23_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  refundId: 'refund_id4'\n}\n\ntry {\n  const { result, ...httpResponse } = await paymentsController.getRefund(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example VenmoPaymentToken Object in JSON\nDESCRIPTION: Example showing the structure of a VenmoPaymentToken object with sample values for payment token configuration, shipping details, and usage patterns. Demonstrates the format for essential fields and nested objects.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-payment-token.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"permit_multiple_payment_tokens\": false,\n  \"description\": \"description4\",\n  \"usage_pattern\": \"INSTALLMENT_PREPAID\",\n  \"shipping\": {\n    \"name\": {\n      \"full_name\": \"full_name6\"\n    },\n    \"phone_number\": {\n      \"country_code\": \"country_code2\",\n      \"national_number\": \"national_number6\"\n    },\n    \"type\": \"SHIPPING\",\n    \"address\": {\n      \"address_line_1\": \"address_line_16\",\n      \"address_line_2\": \"address_line_26\",\n      \"admin_area_2\": \"admin_area_20\",\n      \"admin_area_1\": \"admin_area_12\",\n      \"postal_code\": \"postal_code8\",\n      \"country_code\": \"country_code6\"\n    }\n  },\n  \"usage_type\": \"MERCHANT\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Card Attributes JSON Structure\nDESCRIPTION: Example JSON structure showing the format for card attributes including customer information, vault instructions, and verification settings. Demonstrates the expected field format and nesting structure for PayPal card operations.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-attributes.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"customer\": {\n    \"id\": \"id0\",\n    \"email_address\": \"email_address2\",\n    \"phone\": {\n      \"phone_type\": \"OTHER\",\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      }\n    },\n    \"merchant_customer_id\": \"merchant_customer_id2\"\n  },\n  \"vault\": {\n    \"store_in_vault\": \"ON_SUCCESS\"\n  },\n  \"verification\": {\n    \"method\": \"3D_SECURE\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Authorized Payment Details in TypeScript\nDESCRIPTION: Method signature for retrieving details of an authorized payment using its ID. Returns a PaymentAuthorization object containing the payment details.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/payments.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nasync getAuthorizedPayment(\n  authorizationId: string,\n  paypalMockResponse?: string,\n  paypalAuthAssertion?: string,\n  requestOptions?: RequestOptions\n): Promise<ApiResponse<PaymentAuthorization>>\n```\n\n----------------------------------------\n\nTITLE: Initializing PaymentsController in TypeScript\nDESCRIPTION: Creates a new instance of the PaymentsController using a client object for handling PayPal payment operations.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/payments.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst paymentsController = new PaymentsController(client);\n```\n\n----------------------------------------\n\nTITLE: Updating an Order with PayPal API in TypeScript\nDESCRIPTION: Shows how to update an existing order with CREATED or APPROVED status using the patch operation. Various order attributes can be modified including intent, payer, purchase units, and more.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/orders.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nasync patchOrder(\n  id: string,\n  paypalMockResponse?: string,\n  paypalAuthAssertion?: string,\n  body?: Patch[],\n  requestOptions?: RequestOptions\n): Promise<ApiResponse<void>>\n```\n\n----------------------------------------\n\nTITLE: Defining OrderStatus Enumeration in TypeScript for PayPal SDK\nDESCRIPTION: An enumeration that defines the possible states of a PayPal order throughout its lifecycle. The enumeration includes statuses from initial creation through approval, completion, voiding, and cases requiring additional payer action.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-status.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum OrderStatus {\n  Created,               // The order was created with the specified context\n  Saved,                 // The order was saved and persisted\n  Approved,              // The customer approved the payment\n  Voided,                // All purchase units in the order are voided\n  Completed,             // The intent of the Order was completed\n  PayerActionRequired    // The order requires an action from the payer\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GooglePayRequest Structure in JSON for PayPal TypeScript Server SDK\nDESCRIPTION: This snippet provides an example of a GooglePayRequest object in JSON format. It includes fields for payer information, payment card details, and decrypted token data from Google Pay. This structure is used to process Google Pay payments through the PayPal TypeScript Server SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/google-pay-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name4\",\n  \"email_address\": \"email_address2\",\n  \"phone_number\": {\n    \"country_code\": \"country_code2\",\n    \"national_number\": \"national_number6\"\n  },\n  \"card\": {\n    \"name\": \"name6\",\n    \"type\": \"UNKNOWN\",\n    \"brand\": \"RUPAY\",\n    \"billing_address\": {\n      \"address_line_1\": \"address_line_12\",\n      \"address_line_2\": \"address_line_28\",\n      \"admin_area_2\": \"admin_area_28\",\n      \"admin_area_1\": \"admin_area_14\",\n      \"postal_code\": \"postal_code0\",\n      \"country_code\": \"country_code8\"\n    }\n  },\n  \"decrypted_token\": {\n    \"message_id\": \"message_id0\",\n    \"message_expiration\": \"message_expiration2\",\n    \"payment_method\": \"CARD\",\n    \"card\": {\n      \"name\": \"name6\",\n      \"number\": \"number6\",\n      \"expiry\": \"expiry4\",\n      \"last_digits\": \"last_digits0\",\n      \"type\": \"UNKNOWN\"\n    },\n    \"authentication_method\": \"PAN_ONLY\",\n    \"cryptogram\": \"cryptogram6\",\n    \"eci_indicator\": \"eci_indicator0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Network Token Example in JSON\nDESCRIPTION: Example JSON representation of a Network Token object showing all possible fields including number, expiry, cryptogram, ECI flag, and token requestor ID. This demonstrates the proper format for third-party network token data used to fund a payment.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/network-token.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"number\": \"number0\",\n  \"expiry\": \"expiry0\",\n  \"cryptogram\": \"cryptogram2\",\n  \"eci_flag\": \"ATTEMPTED_AUTHENTICATION_TRANSACTION\",\n  \"token_requestor_id\": \"token_requestor_id8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Order Tracking for PayPal Order in TypeScript\nDESCRIPTION: This function adds tracking information to a PayPal order. It requires the order ID and a body containing the tracking details. The function returns an ApiResponse containing the updated Order object.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/orders.md#2025-04-23_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nasync createOrderTracking(\n  id: string,\n  body: OrderTrackerRequest,\n  paypalAuthAssertion?: string,\n  requestOptions?: RequestOptions\n): Promise<ApiResponse<Order>>\n```\n\n----------------------------------------\n\nTITLE: Example Apple Pay Tokenized Card JSON Structure\nDESCRIPTION: Demonstrates the JSON structure for an Apple Pay tokenized card with sample values. Shows the basic required fields including name, card number, expiry date, card type, and type.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/apple-pay-tokenized-card.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name8\",\n  \"number\": \"number6\",\n  \"expiry\": \"expiry6\",\n  \"card_type\": \"SOLO\",\n  \"type\": \"STORE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of StoredPaymentSource in JSON\nDESCRIPTION: This JSON example demonstrates how to use the StoredPaymentSource structure. It shows a sample configuration with a customer-initiated recurring payment, derived usage, and a previous network transaction reference.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/stored-payment-source.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"payment_initiator\": \"CUSTOMER\",\n  \"payment_type\": \"RECURRING\",\n  \"usage\": \"DERIVED\",\n  \"previous_network_transaction_reference\": {\n    \"id\": \"id6\",\n    \"date\": \"date2\",\n    \"network\": \"DELTA\",\n    \"acquirer_reference_number\": \"acquirer_reference_number8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Setup Token with PayPal Vault Controller in TypeScript\nDESCRIPTION: Example showing how to retrieve a setup token using its ID. This method returns a readable representation of a temporarily vaulted payment source associated with the provided setup token ID.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/vault.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nasync getSetupToken(\n  id: string,\n  requestOptions?: RequestOptions\n): Promise<ApiResponse<SetupTokenResponse>>\n```\n\n----------------------------------------\n\nTITLE: CapturedPayment Example JSON Structure\nDESCRIPTION: Example JSON representation of a CapturedPayment object showing key fields like capture status, amount, and configuration. This demonstrates the structure of response data when a payment has been captured with a PARTIALLY_REFUNDED status.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/captured-payment.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"final_capture\": false,\n  \"disbursement_mode\": \"INSTANT\",\n  \"status\": \"PARTIALLY_REFUNDED\",\n  \"status_details\": {\n    \"reason\": \"VERIFICATION_REQUIRED\"\n  },\n  \"id\": \"id4\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  },\n  \"invoice_id\": \"invoice_id4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Setup Token Response Card JSON Structure\nDESCRIPTION: Example JSON structure showing a typical SetupTokenResponseCard response with card details including name, last digits, brand, expiry and billing address fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/setup-token-response-card.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name8\",\n  \"last_digits\": \"last_digits2\",\n  \"brand\": \"ELO\",\n  \"expiry\": \"expiry6\",\n  \"billing_address\": {\n    \"address_line_1\": \"address_line_12\",\n    \"address_line_2\": \"address_line_28\",\n    \"admin_area_2\": \"admin_area_28\",\n    \"admin_area_1\": \"admin_area_14\",\n    \"postal_code\": \"postal_code0\",\n    \"country_code\": \"country_code8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AVS Code Enumeration in TypeScript\nDESCRIPTION: TypeScript enumeration defining all possible address verification response codes used in payment processing. Includes codes for address matches, ZIP code matches, international transactions, and service availability states across major card networks.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/avs-code.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum AvsCode {\n  AvsA,  // Address matches, ZIP code doesn't (Visa/MC/Discover) or address correct (Amex)\n  AvsB,  // Address matches, International A\n  AvsC,  // No matches, International N\n  AvsD,  // Address and postal code match, International X\n  AvsE,  // Not allowed for Internet/phone or incorrect name but address/postal match (Amex)\n  AvsF,  // Address and postal match (UK specific X) or incorrect name but address matches (Amex)\n  AvsG,  // Global unavailable, nothing matches\n  AvsI,  // International unavailable\n  AvsM,  // Address and postal match or name/address/postal match (Amex)\n  AvsN,  // Nothing matches or address/postal incorrect (Amex)\n  AvsP,  // Postal international Z, postal code only\n  AvsR,  // Retry request or system unavailable (Amex)\n  AvsS,  // Service not supported\n  AvsU,  // Service unavailable or information unavailable\n  AvsW,  // Whole ZIP code or all incorrect (Amex)\n  AvsX,  // Exact match of address and nine-digit ZIP\n  AvsY,  // Address and five-digit ZIP match\n  AvsZ,  // Five-digit ZIP matches, no address\n  AvsNull,  // No AVS response obtained (Maestro)\n  Avs0,  // All address information matches (Maestro)\n  Avs1,  // No address information matches (Maestro)\n  Avs2,  // Partial address information matches (Maestro)\n  Avs3,  // Address information not processed (Maestro)\n  Avs4   // Address check unavailable (Maestro)\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PurchaseUnit Model Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of the PurchaseUnit model, including all its fields and their types. It represents the details of a purchase unit in a PayPal order, including reference ID, amount, payee information, and various transaction-related fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/purchase-unit.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PurchaseUnit {\n  referenceId?: string;\n  amount?: AmountWithBreakdown;\n  payee?: PayeeBase;\n  paymentInstruction?: PaymentInstruction;\n  description?: string;\n  customId?: string;\n  invoiceId?: string;\n  id?: string;\n  softDescriptor?: string;\n  items?: Item[];\n  shipping?: ShippingWithTrackingDetails;\n  supplementaryData?: SupplementaryData;\n  payments?: PaymentCollection;\n  mostRecentErrors?: unknown[];\n}\n```\n\n----------------------------------------\n\nTITLE: Example Google Pay Card Response JSON Structure\nDESCRIPTION: Sample JSON showing the structure of a Google Pay card response object with fields like name, last digits, card type, brand, and billing address. Demonstrates the expected format for payment card information used in Google Pay transactions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/google-pay-card-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name4\",\n  \"last_digits\": \"last_digits8\",\n  \"type\": \"DEBIT\",\n  \"brand\": \"ELECTRON\",\n  \"billing_address\": {\n    \"address_line_1\": \"address_line_12\",\n    \"address_line_2\": \"address_line_28\",\n    \"admin_area_2\": \"admin_area_28\",\n    \"admin_area_1\": \"admin_area_14\",\n    \"postal_code\": \"postal_code0\",\n    \"country_code\": \"country_code8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: PayPal Wallet Attributes Response Example JSON Structure\nDESCRIPTION: Example JSON structure showing the PayPal Wallet attributes response format with vault information and cobranded cards. The structure includes vault details with customer information and an array of cobranded cards with labels, payee details, and amount information.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-attributes-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vault\": {\n    \"id\": \"id6\",\n    \"status\": \"APPROVED\",\n    \"links\": [\n      {\n        \"href\": \"href6\",\n        \"rel\": \"rel0\",\n        \"method\": \"HEAD\"\n      }\n    ],\n    \"customer\": {\n      \"id\": \"id0\",\n      \"email_address\": \"email_address2\",\n      \"phone\": {\n        \"phone_type\": \"OTHER\",\n        \"phone_number\": {\n          \"national_number\": \"national_number6\"\n        }\n      },\n      \"merchant_customer_id\": \"merchant_customer_id2\"\n    }\n  },\n  \"cobranded_cards\": [\n    {\n      \"labels\": [\n        \"labels4\",\n        \"labels3\"\n      ],\n      \"payee\": {\n        \"email_address\": \"email_address4\",\n        \"merchant_id\": \"merchant_id6\"\n      },\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      }\n    },\n    {\n      \"labels\": [\n        \"labels4\",\n        \"labels3\"\n      ],\n      \"payee\": {\n        \"email_address\": \"email_address4\",\n        \"merchant_id\": \"merchant_id6\"\n      },\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PartialRequestLoggingOptions Interface in TypeScript\nDESCRIPTION: This snippet defines the PartialRequestLoggingOptions interface with properties for configuring API request logging. It includes options for logging request bodies, headers, and query parameters, as well as specifying which headers to include, exclude, or whitelist.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/partial-request-logging-options.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PartialRequestLoggingOptions {\n  logBody?: boolean;\n  logHeaders?: boolean;\n  headerToInclude?: string[];\n  headerToExclude?: string[];\n  headerToWhitelist?: string[];\n  includeQueryInPath?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Sample OrderAuthorizeRequest JSON Structure\nDESCRIPTION: A comprehensive JSON example showing all possible payment sources for an order authorization request, including card, token, PayPal, Apple Pay, and Google Pay payment methods with their respective fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-authorize-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"payment_source\": {\n    \"card\": {\n      \"name\": \"name6\",\n      \"number\": \"number6\",\n      \"expiry\": \"expiry4\",\n      \"security_code\": \"security_code8\",\n      \"billing_address\": {\n        \"address_line_1\": \"address_line_12\",\n        \"address_line_2\": \"address_line_28\",\n        \"admin_area_2\": \"admin_area_28\",\n        \"admin_area_1\": \"admin_area_14\",\n        \"postal_code\": \"postal_code0\",\n        \"country_code\": \"country_code8\"\n      }\n    },\n    \"token\": {\n      \"id\": \"id6\",\n      \"type\": \"BILLING_AGREEMENT\"\n    },\n    \"paypal\": {\n      \"vault_id\": \"vault_id0\",\n      \"email_address\": \"email_address0\",\n      \"name\": {\n        \"given_name\": \"given_name2\",\n        \"surname\": \"surname8\"\n      },\n      \"phone\": {\n        \"phone_type\": \"OTHER\",\n        \"phone_number\": {\n          \"national_number\": \"national_number6\"\n        }\n      },\n      \"birth_date\": \"birth_date8\"\n    },\n    \"apple_pay\": {\n      \"id\": \"id0\",\n      \"name\": \"name0\",\n      \"email_address\": \"email_address8\",\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      },\n      \"decrypted_token\": {\n        \"transaction_amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value2\"\n        },\n        \"tokenized_card\": {\n          \"name\": \"name4\",\n          \"number\": \"number2\",\n          \"expiry\": \"expiry2\",\n          \"card_type\": \"CB_NATIONALE\",\n          \"type\": \"UNKNOWN\"\n        },\n        \"device_manufacturer_id\": \"device_manufacturer_id6\",\n        \"payment_data_type\": \"3DSECURE\",\n        \"payment_data\": {\n          \"cryptogram\": \"cryptogram6\",\n          \"eci_indicator\": \"eci_indicator0\",\n          \"emv_data\": \"emv_data0\",\n          \"pin\": \"pin4\"\n        }\n      }\n    },\n    \"google_pay\": {\n      \"name\": \"name8\",\n      \"email_address\": \"email_address6\",\n      \"phone_number\": {\n        \"country_code\": \"country_code2\",\n        \"national_number\": \"national_number6\"\n      },\n      \"card\": {\n        \"name\": \"name6\",\n        \"type\": \"UNKNOWN\",\n        \"brand\": \"RUPAY\",\n        \"billing_address\": {\n          \"address_line_1\": \"address_line_12\",\n          \"address_line_2\": \"address_line_28\",\n          \"admin_area_2\": \"admin_area_28\",\n          \"admin_area_1\": \"admin_area_14\",\n          \"postal_code\": \"postal_code0\",\n          \"country_code\": \"country_code8\"\n        }\n      },\n      \"decrypted_token\": {\n        \"message_id\": \"message_id0\",\n        \"message_expiration\": \"message_expiration2\",\n        \"payment_method\": \"CARD\",\n        \"card\": {\n          \"name\": \"name6\",\n          \"number\": \"number6\",\n          \"expiry\": \"expiry4\",\n          \"last_digits\": \"last_digits0\",\n          \"type\": \"UNKNOWN\"\n        },\n        \"authentication_method\": \"PAN_ONLY\",\n        \"cryptogram\": \"cryptogram6\",\n        \"eci_indicator\": \"eci_indicator0\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: PayPal Plan Model Example in JSON\nDESCRIPTION: Example JSON structure showing a complete Plan object with billing cycles, one-time charges, product details, and plan name. The example demonstrates the required and optional fields with their proper formatting and constraints.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/plan.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"billing_cycles\": [\n    {\n      \"tenure_type\": \"REGULAR\",\n      \"total_cycles\": 1,\n      \"sequence\": 1,\n      \"pricing_scheme\": {\n        \"price\": {\n          \"currency_code\": \"currency_code8\",\n          \"value\": \"value4\"\n        },\n        \"pricing_model\": \"AUTO_RELOAD\",\n        \"reload_threshold_amount\": {\n          \"currency_code\": \"currency_code0\",\n          \"value\": \"value6\"\n        }\n      },\n      \"frequency\": {\n        \"key1\": \"val1\",\n        \"key2\": \"val2\"\n      },\n      \"start_date\": \"start_date6\"\n    }\n  ],\n  \"one_time_charges\": {\n    \"setup_fee\": {\n      \"currency_code\": \"currency_code8\",\n      \"value\": \"value4\"\n    },\n    \"shipping_amount\": {\n      \"currency_code\": \"currency_code0\",\n      \"value\": \"value6\"\n    },\n    \"taxes\": {\n      \"currency_code\": \"currency_code6\",\n      \"value\": \"value2\"\n    },\n    \"product_price\": {\n      \"currency_code\": \"currency_code6\",\n      \"value\": \"value2\"\n    },\n    \"subtotal\": {\n      \"currency_code\": \"currency_code2\",\n      \"value\": \"value8\"\n    },\n    \"total_amount\": {\n      \"currency_code\": \"currency_code2\",\n      \"value\": \"value8\"\n    }\n  },\n  \"product\": {\n    \"key1\": \"val1\",\n    \"key2\": \"val2\"\n  },\n  \"name\": \"name8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SetupTokenRequestPaymentSource Structure in JSON\nDESCRIPTION: This JSON example demonstrates the structure of a SetupTokenRequestPaymentSource object. It includes optional fields for card, PayPal, Venmo, and token payment sources, each with their respective properties and nested structures.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/setup-token-request-payment-source.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"card\": {\n    \"name\": \"name6\",\n    \"number\": \"number6\",\n    \"expiry\": \"expiry4\",\n    \"security_code\": \"security_code8\",\n    \"brand\": \"RUPAY\"\n  },\n  \"paypal\": {\n    \"description\": \"description2\",\n    \"usage_pattern\": \"THRESHOLD_PREPAID\",\n    \"shipping\": {\n      \"name\": {\n        \"full_name\": \"full_name6\"\n      },\n      \"phone_number\": {\n        \"country_code\": \"country_code2\",\n        \"national_number\": \"national_number6\"\n      },\n      \"type\": \"SHIPPING\",\n      \"address\": {\n        \"address_line_1\": \"address_line_16\",\n        \"address_line_2\": \"address_line_26\",\n        \"admin_area_2\": \"admin_area_20\",\n        \"admin_area_1\": \"admin_area_12\",\n        \"postal_code\": \"postal_code8\",\n        \"country_code\": \"country_code6\"\n      }\n    },\n    \"permit_multiple_payment_tokens\": false,\n    \"usage_type\": \"MERCHANT\"\n  },\n  \"venmo\": {\n    \"description\": \"description6\",\n    \"usage_pattern\": \"UNSCHEDULED_PREPAID\",\n    \"shipping\": {\n      \"name\": {\n        \"full_name\": \"full_name6\"\n      },\n      \"phone_number\": {\n        \"country_code\": \"country_code2\",\n        \"national_number\": \"national_number6\"\n      },\n      \"type\": \"SHIPPING\",\n      \"address\": {\n        \"address_line_1\": \"address_line_16\",\n        \"address_line_2\": \"address_line_26\",\n        \"admin_area_2\": \"admin_area_20\",\n        \"admin_area_1\": \"admin_area_12\",\n        \"postal_code\": \"postal_code8\",\n        \"country_code\": \"country_code6\"\n      }\n    },\n    \"permit_multiple_payment_tokens\": false,\n    \"usage_type\": \"MERCHANT\"\n  },\n  \"token\": {\n    \"id\": \"id6\",\n    \"type\": \"SETUP_TOKEN\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Structuring Card Supplementary Data in JSON for PayPal TypeScript Server SDK\nDESCRIPTION: This snippet demonstrates the structure of CardSupplementaryData including Level 2 and Level 3 card processing data. It shows how to format invoice details, tax information, shipping amounts, duty amounts, discount amounts, and shipping address for use with PayPal's payment processing.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-supplementary-data.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"level_2\": {\n    \"invoice_id\": \"invoice_id4\",\n    \"tax_total\": {\n      \"currency_code\": \"currency_code4\",\n      \"value\": \"value0\"\n    }\n  },\n  \"level_3\": {\n    \"shipping_amount\": {\n      \"currency_code\": \"currency_code0\",\n      \"value\": \"value6\"\n    },\n    \"duty_amount\": {\n      \"currency_code\": \"currency_code6\",\n      \"value\": \"value2\"\n    },\n    \"discount_amount\": {\n      \"currency_code\": \"currency_code2\",\n      \"value\": \"value8\"\n    },\n    \"shipping_address\": {\n      \"address_line_1\": \"address_line_10\",\n      \"address_line_2\": \"address_line_20\",\n      \"admin_area_2\": \"admin_area_24\",\n      \"admin_area_1\": \"admin_area_16\",\n      \"postal_code\": \"postal_code2\",\n      \"country_code\": \"country_code0\"\n    },\n    \"ships_from_postal_code\": \"ships_from_postal_code4\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CardStoredCredential Structure in TypeScript\nDESCRIPTION: This snippet defines the CardStoredCredential structure with its fields, types, and constraints. It includes required fields like paymentInitiator and paymentType, as well as optional fields like usage and previousNetworkTransactionReference.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-stored-credential.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface CardStoredCredential {\n  paymentInitiator: PaymentInitiator;\n  paymentType: StoredPaymentSourcePaymentType;\n  usage?: StoredPaymentSourceUsageType;\n  previousNetworkTransactionReference?: NetworkTransactionReference;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Venmo Wallet Experience Context in JSON\nDESCRIPTION: Example JSON configuration for Venmo Wallet Experience settings. Demonstrates setting shipping preferences, brand name, and callback configuration for order updates. Includes shipping options and address callback events.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-wallet-experience-context.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"shipping_preference\": \"GET_FROM_FILE\",\n  \"brand_name\": \"brand_name6\",\n  \"order_update_callback_config\": {\n    \"callback_events\": [\n      \"SHIPPING_OPTIONS\",\n      \"SHIPPING_ADDRESS\",\n      \"SHIPPING_OPTIONS\"\n    ],\n    \"callback_url\": \"callback_url6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example AuthenticationResponse JSON Structure\nDESCRIPTION: Example JSON representation of the AuthenticationResponse model showing liability shift and 3D Secure authentication results. The model contains two main fields: liability_shift (indicating the outcome of issuer authentication) and three_d_secure (containing the detailed 3D Secure authentication status).\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/authentication-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"liability_shift\": \"POSSIBLE\",\n  \"three_d_secure\": {\n    \"authentication_status\": \"C\",\n    \"enrollment_status\": \"Y\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IdealPaymentRequest Structure in TypeScript\nDESCRIPTION: This snippet defines the structure of an IdealPaymentRequest object. It includes fields for name, country code, BIC (optional), and experience context (optional). Each field has specific constraints and descriptions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/ideal-payment-request.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IdealPaymentRequest {\n  name: string; // Minimum Length: 3, Maximum Length: 300\n  countryCode: string; // Two-character ISO 3166-1 code, Minimum Length: 2, Maximum Length: 2\n  bic?: string; // Optional, Minimum Length: 8, Maximum Length: 11\n  experienceContext?: ExperienceContext; // Optional\n}\n```\n\n----------------------------------------\n\nTITLE: Example PurchaseUnitRequest JSON Structure\nDESCRIPTION: Example JSON structure showing a complete PurchaseUnitRequest object with amount breakdown, payee information, and payment instructions. Demonstrates the format and structure of a purchase unit request including platform fees and disbursement settings.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/purchase-unit-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"reference_id\": \"reference_id6\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\",\n    \"breakdown\": {\n      \"item_total\": {\n        \"currency_code\": \"currency_code0\",\n        \"value\": \"value6\"\n      },\n      \"shipping\": {\n        \"currency_code\": \"currency_code0\",\n        \"value\": \"value6\"\n      },\n      \"handling\": {\n        \"currency_code\": \"currency_code2\",\n        \"value\": \"value8\"\n      },\n      \"tax_total\": {\n        \"currency_code\": \"currency_code4\",\n        \"value\": \"value0\"\n      },\n      \"insurance\": {\n        \"currency_code\": \"currency_code2\",\n        \"value\": \"value8\"\n      }\n    }\n  },\n  \"payee\": {\n    \"email_address\": \"email_address4\",\n    \"merchant_id\": \"merchant_id6\"\n  },\n  \"payment_instruction\": {\n    \"platform_fees\": [\n      {\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        },\n        \"payee\": {\n          \"email_address\": \"email_address4\",\n          \"merchant_id\": \"merchant_id6\"\n        }\n      },\n      {\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        },\n        \"payee\": {\n          \"email_address\": \"email_address4\",\n          \"merchant_id\": \"merchant_id6\"\n        }\n      },\n      {\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        },\n        \"payee\": {\n          \"email_address\": \"email_address4\",\n          \"merchant_id\": \"merchant_id6\"\n        }\n      }\n    ],\n    \"disbursement_mode\": \"INSTANT\",\n    \"payee_pricing_tier_id\": \"payee_pricing_tier_id2\",\n    \"payee_receivable_fx_rate_id\": \"payee_receivable_fx_rate_id0\"\n  },\n  \"description\": \"description6\",\n  \"custom_id\": \"custom_id4\"\n}\n```\n\n----------------------------------------\n\nTITLE: OrderAuthorizeRequestPaymentSource Example in JSON\nDESCRIPTION: A comprehensive JSON example of the OrderAuthorizeRequestPaymentSource model showing all possible payment methods. This example includes structures for card payments, token-based payments, PayPal wallet, Apple Pay, Google Pay, and Venmo wallet payment sources.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-authorize-request-payment-source.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"card\": {\n    \"name\": \"name6\",\n    \"number\": \"number6\",\n    \"expiry\": \"expiry4\",\n    \"security_code\": \"security_code8\",\n    \"billing_address\": {\n      \"address_line_1\": \"address_line_12\",\n      \"address_line_2\": \"address_line_28\",\n      \"admin_area_2\": \"admin_area_28\",\n      \"admin_area_1\": \"admin_area_14\",\n      \"postal_code\": \"postal_code0\",\n      \"country_code\": \"country_code8\"\n    }\n  },\n  \"token\": {\n    \"id\": \"id6\",\n    \"type\": \"BILLING_AGREEMENT\"\n  },\n  \"paypal\": {\n    \"vault_id\": \"vault_id0\",\n    \"email_address\": \"email_address0\",\n    \"name\": {\n      \"given_name\": \"given_name2\",\n      \"surname\": \"surname8\"\n    },\n    \"phone\": {\n      \"phone_type\": \"OTHER\",\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      }\n    },\n    \"birth_date\": \"birth_date8\"\n  },\n  \"apple_pay\": {\n    \"id\": \"id0\",\n    \"name\": \"name0\",\n    \"email_address\": \"email_address8\",\n    \"phone_number\": {\n      \"national_number\": \"national_number6\"\n    },\n    \"decrypted_token\": {\n      \"transaction_amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value2\"\n      },\n      \"tokenized_card\": {\n        \"name\": \"name4\",\n        \"number\": \"number2\",\n        \"expiry\": \"expiry2\",\n        \"card_type\": \"CB_NATIONALE\",\n        \"type\": \"UNKNOWN\"\n      },\n      \"device_manufacturer_id\": \"device_manufacturer_id6\",\n      \"payment_data_type\": \"3DSECURE\",\n      \"payment_data\": {\n        \"cryptogram\": \"cryptogram6\",\n        \"eci_indicator\": \"eci_indicator0\",\n        \"emv_data\": \"emv_data0\",\n        \"pin\": \"pin4\"\n      }\n    }\n  },\n  \"google_pay\": {\n    \"name\": \"name8\",\n    \"email_address\": \"email_address6\",\n    \"phone_number\": {\n      \"country_code\": \"country_code2\",\n      \"national_number\": \"national_number6\"\n    },\n    \"card\": {\n      \"name\": \"name6\",\n      \"type\": \"UNKNOWN\",\n      \"brand\": \"RUPAY\",\n      \"billing_address\": {\n        \"address_line_1\": \"address_line_12\",\n        \"address_line_2\": \"address_line_28\",\n        \"admin_area_2\": \"admin_area_28\",\n        \"admin_area_1\": \"admin_area_14\",\n        \"postal_code\": \"postal_code0\",\n        \"country_code\": \"country_code8\"\n      }\n    },\n    \"decrypted_token\": {\n      \"message_id\": \"message_id0\",\n      \"message_expiration\": \"message_expiration2\",\n      \"payment_method\": \"CARD\",\n      \"card\": {\n        \"name\": \"name6\",\n        \"number\": \"number6\",\n        \"expiry\": \"expiry4\",\n        \"last_digits\": \"last_digits0\",\n        \"type\": \"UNKNOWN\"\n      },\n      \"authentication_method\": \"PAN_ONLY\",\n      \"cryptogram\": \"cryptogram6\",\n      \"eci_indicator\": \"eci_indicator0\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example SetupTokenResponsePaymentSource JSON Structure\nDESCRIPTION: Example JSON structure showing the setup token response payment source with card, PayPal, and Venmo payment methods. Includes billing and shipping address details, usage patterns, and token configurations.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/setup-token-response-payment-source.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"card\": {\n    \"name\": \"name6\",\n    \"last_digits\": \"last_digits0\",\n    \"brand\": \"RUPAY\",\n    \"expiry\": \"expiry4\",\n    \"billing_address\": {\n      \"address_line_1\": \"address_line_12\",\n      \"address_line_2\": \"address_line_28\",\n      \"admin_area_2\": \"admin_area_28\",\n      \"admin_area_1\": \"admin_area_14\",\n      \"postal_code\": \"postal_code0\",\n      \"country_code\": \"country_code8\"\n    }\n  },\n  \"paypal\": {\n    \"description\": \"description2\",\n    \"usage_pattern\": \"THRESHOLD_PREPAID\",\n    \"shipping\": {\n      \"name\": {\n        \"full_name\": \"full_name6\"\n      },\n      \"phone_number\": {\n        \"country_code\": \"country_code2\",\n        \"national_number\": \"national_number6\"\n      },\n      \"type\": \"SHIPPING\",\n      \"address\": {\n        \"address_line_1\": \"address_line_16\",\n        \"address_line_2\": \"address_line_26\",\n        \"admin_area_2\": \"admin_area_20\",\n        \"admin_area_1\": \"admin_area_12\",\n        \"postal_code\": \"postal_code8\",\n        \"country_code\": \"country_code6\"\n      }\n    },\n    \"permit_multiple_payment_tokens\": false,\n    \"usage_type\": \"MERCHANT\"\n  },\n  \"venmo\": {\n    \"description\": \"description6\",\n    \"usage_pattern\": \"UNSCHEDULED_PREPAID\",\n    \"shipping\": {\n      \"name\": {\n        \"full_name\": \"full_name6\"\n      },\n      \"phone_number\": {\n        \"country_code\": \"country_code2\",\n        \"national_number\": \"national_number6\"\n      },\n      \"type\": \"SHIPPING\",\n      \"address\": {\n        \"address_line_1\": \"address_line_16\",\n        \"address_line_2\": \"address_line_26\",\n        \"admin_area_2\": \"admin_area_20\",\n        \"admin_area_1\": \"admin_area_12\",\n        \"postal_code\": \"postal_code8\",\n        \"country_code\": \"country_code6\"\n      }\n    },\n    \"permit_multiple_payment_tokens\": false,\n    \"usage_type\": \"MERCHANT\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Payment Token Request in JSON\nDESCRIPTION: A JSON example of a PaymentTokenRequest with customer information and payment source details. This example shows how to structure a request to store a payment instrument with card details and a token.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-token-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"customer\": {\n    \"id\": \"id0\",\n    \"merchant_customer_id\": \"merchant_customer_id2\"\n  },\n  \"payment_source\": {\n    \"card\": {\n      \"name\": \"name6\",\n      \"number\": \"number6\",\n      \"expiry\": \"expiry4\",\n      \"security_code\": \"security_code8\",\n      \"brand\": \"RUPAY\"\n    },\n    \"token\": {\n      \"id\": \"id6\",\n      \"type\": \"SETUP_TOKEN\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: EciFlag Enumeration Definition in PayPal TypeScript SDK\nDESCRIPTION: An enumeration of Electronic Commerce Indicator (ECI) values for different card types and authentication scenarios. These values indicate whether a transaction was processed with full 3D Secure authentication, attempted authentication, or without 3D Secure, across different card networks.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/eci-flag.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nEciFlag\n```\n\n----------------------------------------\n\nTITLE: Example VenmoWalletAttributesResponse JSON Structure\nDESCRIPTION: This JSON snippet demonstrates the structure of a VenmoWalletAttributesResponse object. It includes a 'vault' field with details about a saved payment source, such as its ID, status, customer information, and associated links.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-wallet-attributes-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vault\": {\n    \"id\": \"id6\",\n    \"status\": \"APPROVED\",\n    \"customer\": {\n      \"id\": \"id0\"\n    },\n    \"links\": [\n      {\n        \"href\": \"href6\",\n        \"rel\": \"rel0\",\n        \"method\": \"HEAD\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: OAuth Token Example Response in JSON\nDESCRIPTION: An example response from PayPal's OAuth 2 Authorization endpoint showing the format of an OAuth token. This JSON example includes the access token, token type, expiration details, scope, refresh token, and ID token.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/o-auth-token.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"access_token\": \"access_token4\",\n  \"token_type\": \"token_type6\",\n  \"expires_in\": 74,\n  \"scope\": \"scope6\",\n  \"expiry\": 88,\n  \"refresh_token\": \"refresh_token6\",\n  \"id_token\": \"id_token6\"\n}\n```\n\n----------------------------------------\n\nTITLE: PayPal Authorization Model Example in JSON\nDESCRIPTION: Example JSON representation of a PayPal authorization object showing core fields like status, status details, ID, amount, and invoice ID. The example demonstrates the basic structure and required field formats for an authorization transaction.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/authorization.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"CREATED\",\n  \"status_details\": {\n    \"reason\": \"PENDING_REVIEW\"\n  },\n  \"id\": \"id8\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  },\n  \"invoice_id\": \"invoice_id8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Setup Token with PayPal Vault Controller in TypeScript\nDESCRIPTION: Example demonstrating how to create a setup token using the vaultController. The example initializes a collect object with a paymentSource and handles both successful responses and potential API errors.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/vault.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  body: {\n    paymentSource: {\n    },\n  }\n}\n\ntry {\n  const { result, ...httpResponse } = await vaultController.createSetupToken(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example BLIK Payment Request in JSON\nDESCRIPTION: Provides a sample JSON representation of a BLIK payment request, showcasing how the fields are structured and populated in a real-world scenario.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/blik-payment-request.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name8\",\n  \"country_code\": \"country_code8\",\n  \"email\": \"email8\",\n  \"experience_context\": {\n    \"brand_name\": \"brand_name2\",\n    \"locale\": \"locale6\",\n    \"shipping_preference\": \"NO_SHIPPING\",\n    \"return_url\": \"return_url4\",\n    \"cancel_url\": \"cancel_url6\"\n  },\n  \"level_0\": {\n    \"auth_code\": \"auth_code8\"\n  },\n  \"one_click\": {\n    \"auth_code\": \"auth_code0\",\n    \"consumer_reference\": \"consumer_reference2\",\n    \"alias_label\": \"alias_label6\",\n    \"alias_key\": \"alias_key4\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Apple Pay Card JSON Structure\nDESCRIPTION: Example JSON representation of an Apple Pay card object showing all available fields including name, last digits, type, brand, and billing address. Demonstrates the expected data structure for API requests and responses.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/apple-pay-card.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name4\",\n  \"last_digits\": \"last_digits8\",\n  \"type\": \"UNKNOWN\",\n  \"brand\": \"AMEX\",\n  \"billing_address\": {\n    \"address_line_1\": \"address_line_12\",\n    \"address_line_2\": \"address_line_28\",\n    \"admin_area_2\": \"admin_area_28\",\n    \"admin_area_1\": \"admin_area_14\",\n    \"postal_code\": \"postal_code0\",\n    \"country_code\": \"country_code8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example PaymentsCapture Object in JSON\nDESCRIPTION: A sample JSON representation of a PaymentsCapture object showing its structure and field values. This example includes primary fields like final_capture, disbursement_mode, status, and amount information.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payments-capture.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"final_capture\": false,\n  \"disbursement_mode\": \"INSTANT\",\n  \"status\": \"COMPLETED\",\n  \"status_details\": {\n    \"reason\": \"VERIFICATION_REQUIRED\"\n  },\n  \"id\": \"id0\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  },\n  \"invoice_id\": \"invoice_id0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example PaymentSource JSON Object\nDESCRIPTION: Provides a sample JSON representation of a PaymentSource object. This example includes card, token, PayPal, Bancontact, and BLIK payment methods with their respective fields populated.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-source.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"card\": {\n    \"name\": \"name6\",\n    \"number\": \"number6\",\n    \"expiry\": \"expiry4\",\n    \"security_code\": \"security_code8\",\n    \"billing_address\": {\n      \"address_line_1\": \"address_line_12\",\n      \"address_line_2\": \"address_line_28\",\n      \"admin_area_2\": \"admin_area_28\",\n      \"admin_area_1\": \"admin_area_14\",\n      \"postal_code\": \"postal_code0\",\n      \"country_code\": \"country_code8\"\n    }\n  },\n  \"token\": {\n    \"id\": \"id6\",\n    \"type\": \"BILLING_AGREEMENT\"\n  },\n  \"paypal\": {\n    \"vault_id\": \"vault_id0\",\n    \"email_address\": \"email_address0\",\n    \"name\": {\n      \"given_name\": \"given_name2\",\n      \"surname\": \"surname8\"\n    },\n    \"phone\": {\n      \"phone_type\": \"OTHER\",\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      }\n    },\n    \"birth_date\": \"birth_date8\"\n  },\n  \"bancontact\": {\n    \"name\": \"name0\",\n    \"country_code\": \"country_code0\",\n    \"experience_context\": {\n      \"brand_name\": \"brand_name2\",\n      \"locale\": \"locale6\",\n      \"shipping_preference\": \"NO_SHIPPING\",\n      \"return_url\": \"return_url4\",\n      \"cancel_url\": \"cancel_url6\"\n    }\n  },\n  \"blik\": {\n    \"name\": \"name2\",\n    \"country_code\": \"country_code2\",\n    \"email\": \"email4\",\n    \"experience_context\": {\n      \"brand_name\": \"brand_name2\",\n      \"locale\": \"locale6\",\n      \"shipping_preference\": \"NO_SHIPPING\",\n      \"return_url\": \"return_url4\",\n      \"cancel_url\": \"cancel_url6\"\n    },\n    \"level_0\": {\n      \"auth_code\": \"auth_code8\"\n    },\n    \"one_click\": {\n      \"auth_code\": \"auth_code0\",\n      \"consumer_reference\": \"consumer_reference2\",\n      \"alias_label\": \"alias_label6\",\n      \"alias_key\": \"alias_key4\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of captureAuthorizedPayment Method in TypeScript\nDESCRIPTION: Demonstrates how to use the captureAuthorizedPayment method to capture an authorized payment, with the finalCapture flag set to false, allowing for multiple captures.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/payments.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst collect = {\n  authorizationId: 'authorization_id8',\n  prefer: 'return=minimal',\n  body: {\n    finalCapture: false,\n  }\n}\n\ntry {\n  const { result, ...httpResponse } = await paymentsController.captureAuthorizedPayment(collect);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example CustomerVaultPaymentTokensResponse JSON Structure\nDESCRIPTION: Complete example of a CustomerVaultPaymentTokensResponse object showing payment tokens with various payment sources including card, PayPal, Venmo, and Apple Pay. The response includes customer details, pagination information, and HATEOAS links.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/customer-vault-payment-tokens-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"total_items\": 132,\n  \"total_pages\": 168,\n  \"customer\": {\n    \"id\": \"id0\",\n    \"merchant_customer_id\": \"merchant_customer_id2\",\n    \"links\": [\n      {\n        \"key1\": \"val1\",\n        \"key2\": \"val2\"\n      },\n      {\n        \"key1\": \"val1\",\n        \"key2\": \"val2\"\n      }\n    ]\n  },\n  \"payment_tokens\": [\n    {\n      \"id\": \"id4\",\n      \"customer\": {\n        \"id\": \"id0\",\n        \"merchant_customer_id\": \"merchant_customer_id2\"\n      },\n      \"payment_source\": {\n        \"card\": {\n          \"name\": \"name6\",\n          \"last_digits\": \"last_digits0\",\n          \"brand\": \"RUPAY\",\n          \"expiry\": \"expiry4\",\n          \"billing_address\": {\n            \"address_line_1\": \"address_line_12\",\n            \"address_line_2\": \"address_line_28\",\n            \"admin_area_2\": \"admin_area_28\",\n            \"admin_area_1\": \"admin_area_14\",\n            \"postal_code\": \"postal_code0\",\n            \"country_code\": \"country_code8\"\n          }\n        },\n        \"paypal\": {\n          \"description\": \"description2\",\n          \"usage_pattern\": \"THRESHOLD_PREPAID\",\n          \"shipping\": {\n            \"name\": {\n              \"full_name\": \"full_name6\"\n            },\n            \"phone_number\": {\n              \"country_code\": \"country_code2\",\n              \"national_number\": \"national_number6\"\n            },\n            \"type\": \"SHIPPING\",\n            \"address\": {\n              \"address_line_1\": \"address_line_16\",\n              \"address_line_2\": \"address_line_26\",\n              \"admin_area_2\": \"admin_area_20\",\n              \"admin_area_1\": \"admin_area_12\",\n              \"postal_code\": \"postal_code8\",\n              \"country_code\": \"country_code6\"\n            }\n          },\n          \"permit_multiple_payment_tokens\": false,\n          \"usage_type\": \"MERCHANT\"\n        },\n        \"venmo\": {\n          \"description\": \"description6\",\n          \"usage_pattern\": \"UNSCHEDULED_PREPAID\",\n          \"shipping\": {\n            \"name\": {\n              \"full_name\": \"full_name6\"\n            },\n            \"phone_number\": {\n              \"country_code\": \"country_code2\",\n              \"national_number\": \"national_number6\"\n            },\n            \"type\": \"SHIPPING\",\n            \"address\": {\n              \"address_line_1\": \"address_line_16\",\n              \"address_line_2\": \"address_line_26\",\n              \"admin_area_2\": \"admin_area_20\",\n              \"admin_area_1\": \"admin_area_12\",\n              \"postal_code\": \"postal_code8\",\n              \"country_code\": \"country_code6\"\n            }\n          },\n          \"permit_multiple_payment_tokens\": false,\n          \"usage_type\": \"MERCHANT\"\n        },\n        \"apple_pay\": {\n          \"card\": {\n            \"name\": \"name6\",\n            \"last_digits\": \"last_digits0\",\n            \"type\": \"UNKNOWN\",\n            \"brand\": \"RUPAY\",\n            \"billing_address\": {\n              \"address_line_1\": \"address_line_12\",\n              \"address_line_2\": \"address_line_28\",\n              \"admin_area_2\": \"admin_area_28\",\n              \"admin_area_1\": \"admin_area_14\",\n              \"postal_code\": \"postal_code0\",\n              \"country_code\": \"country_code8\"\n            }\n          }\n        }\n      },\n      \"links\": [\n        {\n          \"href\": \"href6\",\n          \"rel\": \"rel0\",\n          \"method\": \"HEAD\"\n        },\n        {\n          \"href\": \"href6\",\n          \"rel\": \"rel0\",\n          \"method\": \"HEAD\"\n        }\n      ]\n    },\n    {\n      \"id\": \"id4\",\n      \"customer\": {\n        \"id\": \"id0\",\n        \"merchant_customer_id\": \"merchant_customer_id2\"\n      },\n      \"payment_source\": {\n        \"card\": {\n          \"name\": \"name6\",\n          \"last_digits\": \"last_digits0\",\n          \"brand\": \"RUPAY\",\n          \"expiry\": \"expiry4\",\n          \"billing_address\": {\n            \"address_line_1\": \"address_line_12\",\n            \"address_line_2\": \"address_line_28\",\n            \"admin_area_2\": \"admin_area_28\",\n            \"admin_area_1\": \"admin_area_14\",\n            \"postal_code\": \"postal_code0\",\n            \"country_code\": \"country_code8\"\n          }\n        },\n        \"paypal\": {\n          \"description\": \"description2\",\n          \"usage_pattern\": \"THRESHOLD_PREPAID\",\n          \"shipping\": {\n            \"name\": {\n              \"full_name\": \"full_name6\"\n            },\n            \"phone_number\": {\n              \"country_code\": \"country_code2\",\n              \"national_number\": \"national_number6\"\n            },\n            \"type\": \"SHIPPING\",\n            \"address\": {\n              \"address_line_1\": \"address_line_16\",\n              \"address_line_2\": \"address_line_26\",\n              \"admin_area_2\": \"admin_area_20\",\n              \"admin_area_1\": \"admin_area_12\",\n              \"postal_code\": \"postal_code8\",\n              \"country_code\": \"country_code6\"\n            }\n          },\n          \"permit_multiple_payment_tokens\": false,\n          \"usage_type\": \"MERCHANT\"\n        },\n        \"venmo\": {\n          \"description\": \"description6\",\n          \"usage_pattern\": \"UNSCHEDULED_PREPAID\",\n          \"shipping\": {\n            \"name\": {\n              \"full_name\": \"full_name6\"\n            },\n            \"phone_number\": {\n              \"country_code\": \"country_code2\",\n              \"national_number\": \"national_number6\"\n            },\n            \"type\": \"SHIPPING\",\n            \"address\": {\n              \"address_line_1\": \"address_line_16\",\n              \"address_line_2\": \"address_line_26\",\n              \"admin_area_2\": \"admin_area_20\",\n              \"admin_area_1\": \"admin_area_12\",\n              \"postal_code\": \"postal_code8\",\n              \"country_code\": \"country_code6\"\n            }\n          },\n          \"permit_multiple_payment_tokens\": false,\n          \"usage_type\": \"MERCHANT\"\n        },\n        \"apple_pay\": {\n          \"card\": {\n            \"name\": \"name6\",\n            \"last_digits\": \"last_digits0\",\n            \"type\": \"UNKNOWN\",\n            \"brand\": \"RUPAY\",\n            \"billing_address\": {\n              \"address_line_1\": \"address_line_12\",\n              \"address_line_2\": \"address_line_28\",\n              \"admin_area_2\": \"admin_area_28\",\n              \"admin_area_1\": \"admin_area_14\",\n              \"postal_code\": \"postal_code0\",\n              \"country_code\": \"country_code8\"\n            }\n          }\n        }\n      },\n      \"links\": [\n        {\n          \"href\": \"href6\",\n          \"rel\": \"rel0\",\n          \"method\": \"HEAD\"\n        },\n        {\n          \"href\": \"href6\",\n          \"rel\": \"rel0\",\n          \"method\": \"HEAD\"\n        }\n      ]\n    }\n  ],\n  \"links\": [\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    },\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON for SetupTokenCardExperienceContext in PayPal TypeScript SDK\nDESCRIPTION: This JSON example demonstrates how to structure the SetupTokenCardExperienceContext object with sample values for each field. It includes the vault_instruction, brand_name, locale, return_url, and cancel_url properties.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/setup-token-card-experience-context.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vault_instruction\": \"ON_CREATE_PAYMENT_TOKENS\",\n  \"brand_name\": \"brand_name2\",\n  \"locale\": \"locale6\",\n  \"return_url\": \"return_url4\",\n  \"cancel_url\": \"cancel_url6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PaypalWalletStoredCredential Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of the PaypalWalletStoredCredential model, including its fields, types, and constraints. It's used to represent stored credential information for PayPal wallet payments.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-stored-credential.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PaypalWalletStoredCredential {\n  paymentInitiator: PaymentInitiator;\n  chargePattern?: UsagePattern;\n  usagePattern?: UsagePattern;\n  usage?: StoredPaymentSourceUsageType;\n}\n```\n\n----------------------------------------\n\nTITLE: CardRequest Model Example in JSON\nDESCRIPTION: A JSON example of the CardRequest model structure showing how to format payment card information including name, number, expiry date, security code, and billing address.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name8\",\n  \"number\": \"number4\",\n  \"expiry\": \"expiry6\",\n  \"security_code\": \"security_code0\",\n  \"billing_address\": {\n    \"address_line_1\": \"address_line_12\",\n    \"address_line_2\": \"address_line_28\",\n    \"admin_area_2\": \"admin_area_28\",\n    \"admin_area_1\": \"admin_area_14\",\n    \"postal_code\": \"postal_code0\",\n    \"country_code\": \"country_code8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Level 2 Card Processing Data in JSON Format\nDESCRIPTION: A JSON example that demonstrates the structure of Level 2 Card Processing Data. It includes an invoice_id and tax_total with currency code and value. This format is used when configuring Level 2 processing for merchant accounts.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/level-2-card-processing-data.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"invoice_id\": \"invoice_id8\",\n  \"tax_total\": {\n    \"currency_code\": \"currency_code4\",\n    \"value\": \"value0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example CapturePaymentInstruction JSON Object\nDESCRIPTION: This JSON example demonstrates how a CapturePaymentInstruction object might be structured, including platform fees, disbursement mode, and FX rate ID for the payee receivable.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/capture-payment-instruction.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"disbursement_mode\": \"INSTANT\",\n  \"platform_fees\": [\n    {\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"payee\": {\n        \"email_address\": \"email_address4\",\n        \"merchant_id\": \"merchant_id6\"\n      }\n    },\n    {\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"payee\": {\n        \"email_address\": \"email_address4\",\n        \"merchant_id\": \"merchant_id6\"\n      }\n    }\n  ],\n  \"payee_receivable_fx_rate_id\": \"payee_receivable_fx_rate_id8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example PaymentSourceResponse JSON Structure\nDESCRIPTION: An example JSON representation of the PaymentSourceResponse model showing various payment sources including card, PayPal, Bancontact, BLIK, and EPS payment methods. Each payment method contains its specific properties.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-source-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"card\": {\n    \"name\": \"name6\",\n    \"last_digits\": \"last_digits0\",\n    \"brand\": \"RUPAY\",\n    \"available_networks\": [\n      \"SYNCHRONY\"\n    ],\n    \"type\": \"UNKNOWN\"\n  },\n  \"paypal\": {\n    \"email_address\": \"email_address0\",\n    \"account_id\": \"account_id4\",\n    \"account_status\": \"VERIFIED\",\n    \"name\": {\n      \"given_name\": \"given_name2\",\n      \"surname\": \"surname8\"\n    },\n    \"phone_type\": \"FAX\"\n  },\n  \"bancontact\": {\n    \"name\": \"name0\",\n    \"country_code\": \"country_code0\",\n    \"bic\": \"bic2\",\n    \"iban_last_chars\": \"iban_last_chars8\",\n    \"card_last_digits\": \"card_last_digits4\"\n  },\n  \"blik\": {\n    \"name\": \"name2\",\n    \"country_code\": \"country_code2\",\n    \"email\": \"email4\",\n    \"one_click\": {\n      \"consumer_reference\": \"consumer_reference2\"\n    }\n  },\n  \"eps\": {\n    \"name\": \"name6\",\n    \"country_code\": \"country_code6\",\n    \"bic\": \"bic8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example OrderCaptureRequestPaymentSource Object in JSON\nDESCRIPTION: A comprehensive JSON example demonstrating the structure of an OrderCaptureRequestPaymentSource object with various payment methods including card, token, PayPal, Apple Pay, and Google Pay. Shows the proper format and required fields for each payment source type.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-capture-request-payment-source.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"card\": {\n    \"name\": \"name6\",\n    \"number\": \"number6\",\n    \"expiry\": \"expiry4\",\n    \"security_code\": \"security_code8\",\n    \"billing_address\": {\n      \"address_line_1\": \"address_line_12\",\n      \"address_line_2\": \"address_line_28\",\n      \"admin_area_2\": \"admin_area_28\",\n      \"admin_area_1\": \"admin_area_14\",\n      \"postal_code\": \"postal_code0\",\n      \"country_code\": \"country_code8\"\n    }\n  },\n  \"token\": {\n    \"id\": \"id6\",\n    \"type\": \"BILLING_AGREEMENT\"\n  },\n  \"paypal\": {\n    \"vault_id\": \"vault_id0\",\n    \"email_address\": \"email_address0\",\n    \"name\": {\n      \"given_name\": \"given_name2\",\n      \"surname\": \"surname8\"\n    },\n    \"phone\": {\n      \"phone_type\": \"OTHER\",\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      }\n    },\n    \"birth_date\": \"birth_date8\"\n  },\n  \"apple_pay\": {\n    \"id\": \"id0\",\n    \"name\": \"name0\",\n    \"email_address\": \"email_address8\",\n    \"phone_number\": {\n      \"national_number\": \"national_number6\"\n    },\n    \"decrypted_token\": {\n      \"transaction_amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value2\"\n      },\n      \"tokenized_card\": {\n        \"name\": \"name4\",\n        \"number\": \"number2\",\n        \"expiry\": \"expiry2\",\n        \"card_type\": \"CB_NATIONALE\",\n        \"type\": \"UNKNOWN\"\n      },\n      \"device_manufacturer_id\": \"device_manufacturer_id6\",\n      \"payment_data_type\": \"3DSECURE\",\n      \"payment_data\": {\n        \"cryptogram\": \"cryptogram6\",\n        \"eci_indicator\": \"eci_indicator0\",\n        \"emv_data\": \"emv_data0\",\n        \"pin\": \"pin4\"\n      }\n    }\n  },\n  \"google_pay\": {\n    \"name\": \"name8\",\n    \"email_address\": \"email_address6\",\n    \"phone_number\": {\n      \"country_code\": \"country_code2\",\n      \"national_number\": \"national_number6\"\n    },\n    \"card\": {\n      \"name\": \"name6\",\n      \"type\": \"UNKNOWN\",\n      \"brand\": \"RUPAY\",\n      \"billing_address\": {\n        \"address_line_1\": \"address_line_12\",\n        \"address_line_2\": \"address_line_28\",\n        \"admin_area_2\": \"admin_area_28\",\n        \"admin_area_1\": \"admin_area_14\",\n        \"postal_code\": \"postal_code0\",\n        \"country_code\": \"country_code8\"\n      }\n    },\n    \"decrypted_token\": {\n      \"message_id\": \"message_id0\",\n      \"message_expiration\": \"message_expiration2\",\n      \"payment_method\": \"CARD\",\n      \"card\": {\n        \"name\": \"name6\",\n        \"number\": \"number6\",\n        \"expiry\": \"expiry4\",\n        \"last_digits\": \"last_digits0\",\n        \"type\": \"UNKNOWN\"\n      },\n      \"authentication_method\": \"PAN_ONLY\",\n      \"cryptogram\": \"cryptogram6\",\n      \"eci_indicator\": \"eci_indicator0\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example AmountWithBreakdown Object in JSON\nDESCRIPTION: A sample JSON representation of the AmountWithBreakdown object showing currency code, value, and a breakdown of various cost components including item total, shipping, handling, tax total, and insurance.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/amount-with-breakdown.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"currency_code\": \"currency_code4\",\n  \"value\": \"value0\",\n  \"breakdown\": {\n    \"item_total\": {\n      \"currency_code\": \"currency_code0\",\n      \"value\": \"value6\"\n    },\n    \"shipping\": {\n      \"currency_code\": \"currency_code0\",\n      \"value\": \"value6\"\n    },\n    \"handling\": {\n      \"currency_code\": \"currency_code2\",\n      \"value\": \"value8\"\n    },\n    \"tax_total\": {\n      \"currency_code\": \"currency_code4\",\n      \"value\": \"value0\"\n    },\n    \"insurance\": {\n      \"currency_code\": \"currency_code2\",\n      \"value\": \"value8\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoredPaymentSource Structure in TypeScript\nDESCRIPTION: This snippet defines the structure of StoredPaymentSource, including its fields, types, and constraints. It represents a stored payment source with properties like payment initiator, payment type, usage, and previous transaction references.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/stored-payment-source.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoredPaymentSource {\n  paymentInitiator: PaymentInitiator;\n  paymentType: StoredPaymentSourcePaymentType;\n  usage?: StoredPaymentSourceUsageType;\n  previousNetworkTransactionReference?: NetworkTransactionReference;\n}\n```\n\n----------------------------------------\n\nTITLE: Example PaymentInstruction Object in JSON\nDESCRIPTION: Example JSON representation of a PaymentInstruction object showing platform fees, disbursement mode, pricing tier ID, and FX rate ID. This illustrates how to structure a payment instruction for payment processing.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-instruction.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"disbursement_mode\": \"INSTANT\",\n  \"platform_fees\": [\n    {\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"payee\": {\n        \"email_address\": \"email_address4\",\n        \"merchant_id\": \"merchant_id6\"\n      }\n    }\n  ],\n  \"payee_pricing_tier_id\": \"payee_pricing_tier_id6\",\n  \"payee_receivable_fx_rate_id\": \"payee_receivable_fx_rate_id4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SupplementaryData Structure in TypeScript\nDESCRIPTION: This snippet outlines the structure of the SupplementaryData object, which includes optional fields for card and risk data. It's used to provide additional information for payment processing and risk assessment.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/supplementary-data.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SupplementaryData {\n  card?: CardSupplementaryData;\n  risk?: RiskSupplementaryData;\n}\n```\n\n----------------------------------------\n\nTITLE: Apple Pay Payment Token Example in JSON\nDESCRIPTION: Example JSON representation of the ApplePayPaymentToken resource. It includes a card property with details like name, last digits, type, brand, and billing address information.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/apple-pay-payment-token.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"card\": {\n    \"name\": \"name6\",\n    \"last_digits\": \"last_digits0\",\n    \"type\": \"UNKNOWN\",\n    \"brand\": \"RUPAY\",\n    \"billing_address\": {\n      \"address_line_1\": \"address_line_12\",\n      \"address_line_2\": \"address_line_28\",\n      \"admin_area_2\": \"admin_area_28\",\n      \"admin_area_1\": \"admin_area_14\",\n      \"postal_code\": \"postal_code0\",\n      \"country_code\": \"country_code8\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SetupTokenResponse Model Structure in TypeScript\nDESCRIPTION: Defines the structure of the SetupTokenResponse model with its fields, types, and constraints. It includes properties for token ID, customer details, status, payment source, and HATEOAS links.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/setup-token-response.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SetupTokenResponse {\n  id?: string; // PayPal-generated ID for the vault token\n  customer?: Customer;\n  status?: PaymentTokenStatus; // Default: PaymentTokenStatus.Created\n  paymentSource?: SetupTokenResponsePaymentSource;\n  links?: LinkDescription[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ShippingOptionsPurchaseUnit Structure in TypeScript\nDESCRIPTION: This snippet defines the structure of ShippingOptionsPurchaseUnit, including its fields, types, and constraints. It represents shipping options and amount data for a purchase unit in the PayPal SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipping-options-purchase-unit.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ShippingOptionsPurchaseUnit {\n  referenceId?: string;\n  amount?: AmountWithBreakdown;\n  shippingOptions?: ShippingOption[];\n}\n```\n\n----------------------------------------\n\nTITLE: Example Card Attributes Response Structure in JSON\nDESCRIPTION: Demonstrates the JSON structure of a card attributes response, showing vault details including ID, status, links, and customer information. The example shows how saved card payment source details are represented.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-attributes-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vault\": {\n    \"id\": \"id6\",\n    \"status\": \"APPROVED\",\n    \"links\": [\n      {\n        \"href\": \"href6\",\n        \"rel\": \"rel0\",\n        \"method\": \"HEAD\"\n      }\n    ],\n    \"customer\": {\n      \"id\": \"id0\",\n      \"email_address\": \"email_address2\",\n      \"phone\": {\n        \"phone_type\": \"OTHER\",\n        \"phone_number\": {\n          \"national_number\": \"national_number6\"\n        }\n      },\n      \"merchant_customer_id\": \"merchant_customer_id2\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example CaptureRequest JSON Structure for PayPal SDK\nDESCRIPTION: A sample JSON representation of the CaptureRequest structure, showing all available fields including invoice details, capture amount, payment instructions, and platform fees. This serves as a reference for structuring capture requests in the PayPal TypeScript Server SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/capture-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"final_capture\": false,\n  \"invoice_id\": \"invoice_id4\",\n  \"note_to_payer\": \"note_to_payer6\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  },\n  \"payment_instruction\": {\n    \"platform_fees\": [\n      {\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        },\n        \"payee\": {\n          \"email_address\": \"email_address4\",\n          \"merchant_id\": \"merchant_id6\"\n        }\n      },\n      {\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        },\n        \"payee\": {\n          \"email_address\": \"email_address4\",\n          \"merchant_id\": \"merchant_id6\"\n        }\n      },\n      {\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        },\n        \"payee\": {\n          \"email_address\": \"email_address4\",\n          \"merchant_id\": \"merchant_id6\"\n        }\n      }\n    ],\n    \"disbursement_mode\": \"INSTANT\",\n    \"payee_receivable_fx_rate_id\": \"payee_receivable_fx_rate_id0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example PurchaseUnit JSON Object\nDESCRIPTION: This JSON object demonstrates an example of a PurchaseUnit with sample data for various fields. It includes reference ID, amount details, payee information, and payment instructions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/purchase-unit.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"reference_id\": \"reference_id8\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\",\n    \"breakdown\": {\n      \"item_total\": {\n        \"currency_code\": \"currency_code0\",\n        \"value\": \"value6\"\n      },\n      \"shipping\": {\n        \"currency_code\": \"currency_code0\",\n        \"value\": \"value6\"\n      },\n      \"handling\": {\n        \"currency_code\": \"currency_code2\",\n        \"value\": \"value8\"\n      },\n      \"tax_total\": {\n        \"currency_code\": \"currency_code4\",\n        \"value\": \"value0\"\n      },\n      \"insurance\": {\n        \"currency_code\": \"currency_code2\",\n        \"value\": \"value8\"\n      }\n    }\n  },\n  \"payee\": {\n    \"email_address\": \"email_address4\",\n    \"merchant_id\": \"merchant_id6\"\n  },\n  \"payment_instruction\": {\n    \"platform_fees\": [\n      {\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        },\n        \"payee\": {\n          \"email_address\": \"email_address4\",\n          \"merchant_id\": \"merchant_id6\"\n        }\n      },\n      {\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        },\n        \"payee\": {\n          \"email_address\": \"email_address4\",\n          \"merchant_id\": \"merchant_id6\"\n        }\n      },\n      {\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        },\n        \"payee\": {\n          \"email_address\": \"email_address4\",\n          \"merchant_id\": \"merchant_id6\"\n        }\n      }\n    ],\n    \"disbursement_mode\": \"INSTANT\",\n    \"payee_pricing_tier_id\": \"payee_pricing_tier_id2\",\n    \"payee_receivable_fx_rate_id\": \"payee_receivable_fx_rate_id0\"\n  },\n  \"description\": \"description0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example SetupTokenRequestCard JSON Structure\nDESCRIPTION: Example JSON structure showing the format for a card vaulting request. Demonstrates the basic fields including card holder name, card number, expiry date, security code, and brand.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/setup-token-request-card.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name2\",\n  \"number\": \"number0\",\n  \"expiry\": \"expiry0\",\n  \"security_code\": \"security_code4\",\n  \"brand\": \"DINERS\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating RefundRequest JSON Structure for PayPal API\nDESCRIPTION: Example JSON structure for a RefundRequest object showing all possible fields including amount, custom_id, invoice_id, note_to_payer, and payment_instruction with platform fees. This structure is used when initiating refunds through the PayPal API.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/refund-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  },\n  \"custom_id\": \"custom_id6\",\n  \"invoice_id\": \"invoice_id8\",\n  \"note_to_payer\": \"note_to_payer0\",\n  \"payment_instruction\": {\n    \"platform_fees\": [\n      {\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        }\n      },\n      {\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        }\n      },\n      {\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        }\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example ShippingWithTrackingDetails JSON Structure\nDESCRIPTION: Example JSON showing the structure of a shipping details object including name, email, phone number, shipping type and options. The model supports shipping information with optional tracking capabilities.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipping-with-tracking-details.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": {\n    \"full_name\": \"full_name6\"\n  },\n  \"email_address\": \"email_address2\",\n  \"phone_number\": {\n    \"country_code\": \"country_code2\",\n    \"national_number\": \"national_number6\"\n  },\n  \"type\": \"SHIPPING\",\n  \"options\": [\n    {\n      \"id\": \"id2\",\n      \"label\": \"label2\",\n      \"type\": \"SHIPPING\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"selected\": false\n    },\n    {\n      \"id\": \"id2\",\n      \"label\": \"label2\",\n      \"type\": \"SHIPPING\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"selected\": false\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example ApplePayAttributesResponse JSON Structure\nDESCRIPTION: This JSON snippet demonstrates the structure of an ApplePayAttributesResponse object. It includes a 'vault' field with details about a saved payment source, including its ID, status, customer information, and associated links.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/apple-pay-attributes-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vault\": {\n    \"id\": \"id6\",\n    \"status\": \"APPROVED\",\n    \"customer\": {\n      \"id\": \"id0\"\n    },\n    \"links\": [\n      {\n        \"href\": \"href6\",\n        \"rel\": \"rel0\",\n        \"method\": \"HEAD\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ApplePayRequest Model Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of the ApplePayRequest model, including all its fields, their types, and constraints. It represents the information needed to process an Apple Pay transaction.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/apple-pay-request.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ApplePayRequest {\n  id?: string; // ApplePay transaction identifier\n  name?: string; // Full name of the user\n  emailAddress?: string; // Internationalized email address\n  phoneNumber?: PhoneNumber; // Phone number in E.164 format\n  decryptedToken?: ApplePayDecryptedTokenData; // Decrypted Apple Pay token data\n  storedCredential?: CardStoredCredential; // Details for stored card processing\n  vaultId?: string; // PayPal-generated ID for vaulted payment source\n  attributes?: ApplePayAttributes; // Additional Apple Pay attributes\n}\n```\n\n----------------------------------------\n\nTITLE: Example VaultedDigitalWalletShippingDetails JSON Structure\nDESCRIPTION: Example JSON representation of a vaulted digital wallet shipping details object showing the structure with name, phone number, fulfillment type, and address information. This demonstrates the expected format for shipping information in the PayPal SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vaulted-digital-wallet-shipping-details.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": {\n    \"full_name\": \"full_name6\"\n  },\n  \"phone_number\": {\n    \"country_code\": \"country_code2\",\n    \"national_number\": \"national_number6\"\n  },\n  \"type\": \"PICKUP_IN_STORE\",\n  \"address\": {\n    \"address_line_1\": \"address_line_16\",\n    \"address_line_2\": \"address_line_26\",\n    \"admin_area_2\": \"admin_area_20\",\n    \"admin_area_1\": \"admin_area_12\",\n    \"postal_code\": \"postal_code8\",\n    \"country_code\": \"country_code6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring PayPal Wallet Vault Settings in JSON\nDESCRIPTION: Example JSON configuration for PayPal wallet vaulting instructions. Shows how to set up usage type, customer type, token permissions, vault storage, description, and usage pattern settings.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-vault-instruction.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"usage_type\": \"MERCHANT\",\n  \"customer_type\": \"CONSUMER\",\n  \"permit_multiple_payment_tokens\": false,\n  \"store_in_vault\": \"ON_SUCCESS\",\n  \"description\": \"description4\",\n  \"usage_pattern\": \"UNSCHEDULED_PREPAID\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Payer JSON Representation\nDESCRIPTION: This JSON example demonstrates a sample Payer object with populated fields for email address, payer ID, name, phone, and birth date. It shows the expected structure when serializing or deserializing a Payer instance.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payer.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"email_address\": \"email_address8\",\n  \"payer_id\": \"payer_id8\",\n  \"name\": {\n    \"given_name\": \"given_name2\",\n    \"surname\": \"surname8\"\n  },\n  \"phone\": {\n    \"phone_type\": \"OTHER\",\n    \"phone_number\": {\n      \"national_number\": \"national_number6\"\n    }\n  },\n  \"birth_date\": \"birth_date6\"\n}\n```\n\n----------------------------------------\n\nTITLE: OAuth Provider Error Example JSON Response\nDESCRIPTION: Example JSON structure showing OAuth provider error response format with error code, description and URI fields. Used to demonstrate the expected format of error responses from the authorization endpoint.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/o-auth-provider-error.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"error\": \"unsupported_grant_type\",\n  \"error_description\": \"error_description8\",\n  \"error_uri\": \"error_uri8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON for Item Model\nDESCRIPTION: This JSON example demonstrates how to structure data for the Item model. It includes required fields like name, unit_amount, and quantity, as well as optional fields such as tax, description, and category.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/item.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name2\",\n  \"unit_amount\": {\n    \"currency_code\": \"currency_code2\",\n    \"value\": \"value8\"\n  },\n  \"tax\": {\n    \"currency_code\": \"currency_code0\",\n    \"value\": \"value6\"\n  },\n  \"quantity\": \"quantity8\",\n  \"description\": \"description2\",\n  \"sku\": \"sku8\",\n  \"url\": \"url6\",\n  \"category\": \"DIGITAL_GOODS\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Setup Token Request JSON Structure\nDESCRIPTION: Example JSON structure for creating a setup token request that includes customer information and payment source details. The payment source can include card, PayPal, or Venmo payment methods with associated shipping and usage information.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/setup-token-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"customer\": {\n    \"id\": \"id0\",\n    \"merchant_customer_id\": \"merchant_customer_id2\"\n  },\n  \"payment_source\": {\n    \"card\": {\n      \"name\": \"name6\",\n      \"number\": \"number6\",\n      \"expiry\": \"expiry4\",\n      \"security_code\": \"security_code8\",\n      \"brand\": \"RUPAY\"\n    },\n    \"paypal\": {\n      \"description\": \"description2\",\n      \"usage_pattern\": \"THRESHOLD_PREPAID\",\n      \"shipping\": {\n        \"name\": {\n          \"full_name\": \"full_name6\"\n        },\n        \"phone_number\": {\n          \"country_code\": \"country_code2\",\n          \"national_number\": \"national_number6\"\n        },\n        \"type\": \"SHIPPING\",\n        \"address\": {\n          \"address_line_1\": \"address_line_16\",\n          \"address_line_2\": \"address_line_26\",\n          \"admin_area_2\": \"admin_area_20\",\n          \"admin_area_1\": \"admin_area_12\",\n          \"postal_code\": \"postal_code8\",\n          \"country_code\": \"country_code6\"\n        }\n      },\n      \"permit_multiple_payment_tokens\": false,\n      \"usage_type\": \"MERCHANT\"\n    },\n    \"venmo\": {\n      \"description\": \"description6\",\n      \"usage_pattern\": \"UNSCHEDULED_PREPAID\",\n      \"shipping\": {\n        \"name\": {\n          \"full_name\": \"full_name6\"\n        },\n        \"phone_number\": {\n          \"country_code\": \"country_code2\",\n          \"national_number\": \"national_number6\"\n        },\n        \"type\": \"SHIPPING\",\n        \"address\": {\n          \"address_line_1\": \"address_line_16\",\n          \"address_line_2\": \"address_line_26\",\n          \"admin_area_2\": \"admin_area_20\",\n          \"admin_area_1\": \"admin_area_12\",\n          \"postal_code\": \"postal_code8\",\n          \"country_code\": \"country_code6\"\n        }\n      },\n      \"permit_multiple_payment_tokens\": false,\n      \"usage_type\": \"MERCHANT\"\n    },\n    \"token\": {\n      \"id\": \"id6\",\n      \"type\": \"SETUP_TOKEN\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PaypalPaymentToken Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of the PaypalPaymentToken object, including all its fields with their types and constraints. It represents a comprehensive model for payment tokens in the PayPal SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-payment-token.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PaypalPaymentToken {\n  description?: string;\n  usagePattern?: UsagePattern;\n  shipping?: VaultedDigitalWalletShippingDetails;\n  permitMultiplePaymentTokens?: boolean;\n  usageType?: PaypalPaymentTokenUsageType;\n  customerType?: PaypalPaymentTokenCustomerType;\n  emailAddress?: string;\n  payerId?: string;\n  name?: Name;\n  phone?: PhoneWithType;\n  address?: Address;\n  accountId?: string;\n  phoneNumber?: Phone;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AssuranceDetails Interface in TypeScript for PayPal SDK\nDESCRIPTION: This TypeScript interface defines the structure of AssuranceDetails, which includes fields for account verification and cardholder authentication. It's used to represent information about cardholder possession validation and identification verifications in PayPal transactions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/assurance-details.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface AssuranceDetails {\n  accountVerified?: boolean;\n  cardHolderAuthenticated?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Representing PlatformFee Structure in JSON\nDESCRIPTION: This JSON snippet demonstrates the structure of a PlatformFee object. It includes the required 'amount' field with currency code and value, and an optional 'payee' field with email address and merchant ID.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/platform-fee.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  },\n  \"payee\": {\n    \"email_address\": \"email_address4\",\n    \"merchant_id\": \"merchant_id6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: OrdersCardVerificationMethod Enumeration in TypeScript\nDESCRIPTION: An enumeration that defines different methods for verifying payment cards in PayPal orders. It includes options for Strong Customer Authentication (SCA), 3D Secure, and AVS/CVV verification methods.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/orders-card-verification-method.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nOrdersCardVerificationMethod\n```\n\n----------------------------------------\n\nTITLE: Example OrderApplicationContext Object in JSON\nDESCRIPTION: Example JSON representation of an OrderApplicationContext object showing default values for landing_page, shipping_preference, and user_action fields, along with sample values for brand_name and locale fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-application-context.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"landing_page\": \"NO_PREFERENCE\",\n  \"shipping_preference\": \"GET_FROM_FILE\",\n  \"user_action\": \"CONTINUE\",\n  \"brand_name\": \"brand_name2\",\n  \"locale\": \"locale6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example P24PaymentObject in JSON\nDESCRIPTION: A JSON example of a P24PaymentObject, demonstrating how the data structure is populated with sample values for each field. This example can be used as a reference for creating or parsing P24 payment data.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/p24-payment-object.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name4\",\n  \"email\": \"email2\",\n  \"country_code\": \"country_code4\",\n  \"payment_descriptor\": \"payment_descriptor8\",\n  \"method_id\": \"method_id8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ShippingType Enumeration in TypeScript for PayPal SDK\nDESCRIPTION: This enumeration defines the possible shipping types for PayPal transactions. It includes options for standard shipping, deprecated pickup, in-store pickup, and person-to-person pickup. Each option has implications for seller protection and fulfillment method.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipping-type.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum ShippingType {\n  Shipping,\n  Pickup,\n  PickupInStore,\n  PickupFromPerson\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Payer Model Structure in TypeScript\nDESCRIPTION: This snippet outlines the structure of the Payer model, including its fields and their types. It includes optional fields for email address, payer ID, name, phone, birth date, tax info, and address.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payer.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Payer {\n  emailAddress?: string;\n  payerId?: string;\n  name?: Name;\n  phone?: PhoneWithType;\n  birthDate?: string;\n  taxInfo?: TaxInfo;\n  address?: Address;\n}\n```\n\n----------------------------------------\n\nTITLE: Example PayPal Order Authorization Response JSON Structure\nDESCRIPTION: Example JSON structure demonstrating OrderAuthorizeResponse object with payment source details including card, PayPal, Apple Pay, Google Pay, and Venmo payment methods\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-authorize-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"create_time\": \"create_time0\",\n  \"update_time\": \"update_time4\",\n  \"id\": \"id4\",\n  \"payment_source\": {\n    \"card\": {\n      \"name\": \"name6\",\n      \"last_digits\": \"last_digits0\",\n      \"brand\": \"RUPAY\",\n      \"available_networks\": [\n        \"SYNCHRONY\"\n      ],\n      \"type\": \"UNKNOWN\"\n    },\n    \"paypal\": {\n      \"email_address\": \"email_address0\",\n      \"account_id\": \"account_id4\",\n      \"account_status\": \"VERIFIED\",\n      \"name\": {\n        \"given_name\": \"given_name2\",\n        \"surname\": \"surname8\"\n      },\n      \"phone_type\": \"FAX\"\n    },\n    \"apple_pay\": {\n      \"id\": \"id0\",\n      \"token\": \"token6\",\n      \"name\": \"name0\",\n      \"email_address\": \"email_address8\",\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      }\n    },\n    \"google_pay\": {\n      \"name\": \"name8\",\n      \"email_address\": \"email_address6\",\n      \"phone_number\": {\n        \"country_code\": \"country_code2\",\n        \"national_number\": \"national_number6\"\n      },\n      \"card\": {\n        \"name\": \"name6\",\n        \"last_digits\": \"last_digits0\",\n        \"type\": \"UNKNOWN\",\n        \"brand\": \"RUPAY\",\n        \"billing_address\": {\n          \"address_line_1\": \"address_line_12\",\n          \"address_line_2\": \"address_line_28\",\n          \"admin_area_2\": \"admin_area_28\",\n          \"admin_area_1\": \"admin_area_14\",\n          \"postal_code\": \"postal_code0\",\n          \"country_code\": \"country_code8\"\n        }\n      }\n    },\n    \"venmo\": {\n      \"email_address\": \"email_address4\",\n      \"account_id\": \"account_id8\",\n      \"user_name\": \"user_name2\",\n      \"name\": {\n        \"given_name\": \"given_name2\",\n        \"surname\": \"surname8\"\n      },\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      }\n    }\n  },\n  \"intent\": \"CAPTURE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing VaultResponse Object in JSON\nDESCRIPTION: Example showing the structure and initialization of a VaultResponse object with all possible fields including id, status, customer details, and HATEOAS links. The response represents a saved payment source with its associated metadata.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id2\",\n  \"status\": \"CREATED\",\n  \"customer\": {\n    \"id\": \"id0\"\n  },\n  \"links\": [\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Patch Object Example\nDESCRIPTION: Example JSON structure showing a Patch object with add operation. Demonstrates the standard fields including operation type, path, value object, and from field.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/patch.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"op\": \"add\",\n  \"path\": \"path6\",\n  \"value\": {\n    \"key1\": \"val1\",\n    \"key2\": \"val2\"\n  },\n  \"from\": \"from0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Card Payment Token Entity in JSON\nDESCRIPTION: A sample JSON representation of a CardPaymentTokenEntity object showing the standard format and field structure. This example includes basic card information such as name, last digits, brand, expiry date, and billing address.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-payment-token-entity.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name6\",\n  \"last_digits\": \"last_digits0\",\n  \"brand\": \"VISA\",\n  \"expiry\": \"expiry4\",\n  \"billing_address\": {\n    \"address_line_1\": \"address_line_12\",\n    \"address_line_2\": \"address_line_28\",\n    \"admin_area_2\": \"admin_area_28\",\n    \"admin_area_1\": \"admin_area_14\",\n    \"postal_code\": \"postal_code0\",\n    \"country_code\": \"country_code8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining P24PaymentObject Structure in TypeScript\nDESCRIPTION: TypeScript interface definition for the P24PaymentObject, including field types and optional flags. This structure represents the information required for processing a Przelewy24 payment.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/p24-payment-object.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface P24PaymentObject {\n  name?: string;\n  email?: string;\n  countryCode?: string;\n  paymentDescriptor?: string;\n  methodId?: string;\n  methodDescription?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PaypalExperienceUserAction Enumeration in TypeScript\nDESCRIPTION: This enumeration defines two possible user actions for the PayPal checkout experience: Continue and PayNow. The Continue option is used when the final amount is not known at checkout initiation, while PayNow is used when the amount is known and immediate payment processing is desired.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-experience-user-action.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum PaypalExperienceUserAction {\n  Continue,\n  PayNow\n}\n```\n\n----------------------------------------\n\nTITLE: Example PayPal Orders Capture Response\nDESCRIPTION: Example JSON response showing the structure of a captured payment. Demonstrates key fields like capture status, amount, and disbursement settings.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/orders-capture.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"final_capture\": false,\n  \"disbursement_mode\": \"INSTANT\",\n  \"status\": \"REFUNDED\",\n  \"status_details\": {\n    \"reason\": \"VERIFICATION_REQUIRED\"\n  },\n  \"id\": \"id2\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  },\n  \"invoice_id\": \"invoice_id2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of IdealPaymentRequest\nDESCRIPTION: This snippet provides an example of how an IdealPaymentRequest object would be represented in JSON format. It includes sample values for all fields, including the optional ones.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/ideal-payment-request.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name6\",\n  \"country_code\": \"country_code4\",\n  \"bic\": \"bic8\",\n  \"experience_context\": {\n    \"brand_name\": \"brand_name2\",\n    \"locale\": \"locale6\",\n    \"shipping_preference\": \"NO_SHIPPING\",\n    \"return_url\": \"return_url4\",\n    \"cancel_url\": \"cancel_url6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoredPaymentSourcePaymentType Enumeration in TypeScript\nDESCRIPTION: This enumeration defines three types of stored payment source payments: OneTime for single purchases, Recurring for fixed interval payments, and Unscheduled for variable payments without a fixed schedule.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/stored-payment-source-payment-type.md#2025-04-23_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nenum StoredPaymentSourcePaymentType {\n  OneTime,\n  Recurring,\n  Unscheduled\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PaymentTokenResponsePaymentSource Structure in JSON\nDESCRIPTION: This JSON example illustrates the structure of a PaymentTokenResponsePaymentSource object. It includes detailed representations of card, PayPal, Venmo, and Apple Pay payment tokens with their respective fields and nested objects.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-token-response-payment-source.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"card\": {\n    \"name\": \"name6\",\n    \"last_digits\": \"last_digits0\",\n    \"brand\": \"RUPAY\",\n    \"expiry\": \"expiry4\",\n    \"billing_address\": {\n      \"address_line_1\": \"address_line_12\",\n      \"address_line_2\": \"address_line_28\",\n      \"admin_area_2\": \"admin_area_28\",\n      \"admin_area_1\": \"admin_area_14\",\n      \"postal_code\": \"postal_code0\",\n      \"country_code\": \"country_code8\"\n    }\n  },\n  \"paypal\": {\n    \"description\": \"description2\",\n    \"usage_pattern\": \"THRESHOLD_PREPAID\",\n    \"shipping\": {\n      \"name\": {\n        \"full_name\": \"full_name6\"\n      },\n      \"phone_number\": {\n        \"country_code\": \"country_code2\",\n        \"national_number\": \"national_number6\"\n      },\n      \"type\": \"SHIPPING\",\n      \"address\": {\n        \"address_line_1\": \"address_line_16\",\n        \"address_line_2\": \"address_line_26\",\n        \"admin_area_2\": \"admin_area_20\",\n        \"admin_area_1\": \"admin_area_12\",\n        \"postal_code\": \"postal_code8\",\n        \"country_code\": \"country_code6\"\n      }\n    },\n    \"permit_multiple_payment_tokens\": false,\n    \"usage_type\": \"MERCHANT\"\n  },\n  \"venmo\": {\n    \"description\": \"description6\",\n    \"usage_pattern\": \"UNSCHEDULED_PREPAID\",\n    \"shipping\": {\n      \"name\": {\n        \"full_name\": \"full_name6\"\n      },\n      \"phone_number\": {\n        \"country_code\": \"country_code2\",\n        \"national_number\": \"national_number6\"\n      },\n      \"type\": \"SHIPPING\",\n      \"address\": {\n        \"address_line_1\": \"address_line_16\",\n        \"address_line_2\": \"address_line_26\",\n        \"admin_area_2\": \"admin_area_20\",\n        \"admin_area_1\": \"admin_area_12\",\n        \"postal_code\": \"postal_code8\",\n        \"country_code\": \"country_code6\"\n      }\n    },\n    \"permit_multiple_payment_tokens\": false,\n    \"usage_type\": \"MERCHANT\"\n  },\n  \"apple_pay\": {\n    \"card\": {\n      \"name\": \"name6\",\n      \"last_digits\": \"last_digits0\",\n      \"type\": \"UNKNOWN\",\n      \"brand\": \"RUPAY\",\n      \"billing_address\": {\n        \"address_line_1\": \"address_line_12\",\n        \"address_line_2\": \"address_line_28\",\n        \"admin_area_2\": \"admin_area_28\",\n        \"admin_area_1\": \"admin_area_14\",\n        \"postal_code\": \"postal_code0\",\n        \"country_code\": \"country_code8\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SellerProtection Object Structure in JSON\nDESCRIPTION: Example JSON structure showing a SellerProtection object with status and dispute categories. Demonstrates how seller protection status is represented along with associated dispute categories for a PayPal transaction.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/seller-protection.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"NOT_ELIGIBLE\",\n  \"dispute_categories\": [\n    \"ITEM_NOT_RECEIVED\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CallbackConfiguration Structure in JSON for PayPal/Venmo TypeScript SDK\nDESCRIPTION: This snippet demonstrates the structure of a CallbackConfiguration object in JSON format. It includes two required fields: callbackEvents (an array of event types) and callbackUrl (a string for the merchant's callback URL).\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/callback-configuration.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"callback_events\": [\n    \"SHIPPING_OPTIONS\",\n    \"SHIPPING_ADDRESS\",\n    \"SHIPPING_OPTIONS\"\n  ],\n  \"callback_url\": \"callback_url2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example OrderTrackerRequest JSON Structure\nDESCRIPTION: A sample JSON representation of an OrderTrackerRequest object showing the structure with all available fields. This includes tracking information, carrier details, capture ID, notification preferences, and item details.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-tracker-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"capture_id\": \"capture_id0\",\n  \"notify_payer\": false,\n  \"tracking_number\": \"tracking_number6\",\n  \"carrier\": \"LEADER\",\n  \"carrier_name_other\": \"carrier_name_other0\",\n  \"items\": [\n    {\n      \"name\": \"name8\",\n      \"quantity\": \"quantity4\",\n      \"sku\": \"sku6\",\n      \"url\": \"url2\",\n      \"image_url\": \"image_url4\"\n    },\n    {\n      \"name\": \"name8\",\n      \"quantity\": \"quantity4\",\n      \"sku\": \"sku6\",\n      \"url\": \"url2\",\n      \"image_url\": \"image_url4\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining RefundStatus Enum in TypeScript\nDESCRIPTION: Enumeration defining the possible states of a PayPal refund transaction. Includes states for cancelled, failed, pending, and completed refunds with their business meanings.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/refund-status.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum RefundStatus {\n  Cancelled = \"CANCELLED\",  // The refund was cancelled\n  Failed = \"FAILED\",      // The refund could not be processed\n  Pending = \"PENDING\",    // The refund is pending\n  Completed = \"COMPLETED\" // The funds were debited to customer's account\n}\n```\n\n----------------------------------------\n\nTITLE: Structuring PayPal Wallet Attributes in JSON\nDESCRIPTION: This JSON example demonstrates the structure of PaypalWalletAttributes, including customer information and vault instructions. It shows how to format the data for customer details like ID, email, phone, and merchant customer ID, as well as vault-related information such as storage instructions and usage patterns.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-attributes.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"customer\": {\n    \"id\": \"id0\",\n    \"email_address\": \"email_address2\",\n    \"phone\": {\n      \"phone_type\": \"OTHER\",\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      }\n    },\n    \"merchant_customer_id\": \"merchant_customer_id2\"\n  },\n  \"vault\": {\n    \"store_in_vault\": \"ON_SUCCESS\",\n    \"description\": \"description6\",\n    \"usage_pattern\": \"THRESHOLD_PREPAID\",\n    \"usage_type\": \"MERCHANT\",\n    \"customer_type\": \"CONSUMER\",\n    \"permit_multiple_payment_tokens\": false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Giropay Payment Request JSON Structure\nDESCRIPTION: Example JSON structure for creating a Giropay payment request. Includes required fields like name and country code, along with optional experience context for customizing the payer experience.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/giropay-payment-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name8\",\n  \"country_code\": \"country_code8\",\n  \"experience_context\": {\n    \"brand_name\": \"brand_name2\",\n    \"locale\": \"locale6\",\n    \"shipping_preference\": \"NO_SHIPPING\",\n    \"return_url\": \"return_url4\",\n    \"cancel_url\": \"cancel_url6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OrderTrackerItem Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of the OrderTrackerItem, including its fields and their types. It also specifies constraints for each field such as length limitations and patterns.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-tracker-item.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface OrderTrackerItem {\n  name?: string; // Minimum Length: 1, Maximum Length: 127\n  quantity?: string; // Minimum Length: 1, Maximum Length: 10, Pattern: ^[1-9][0-9]{0,9}$\n  sku?: string; // Minimum Length: 1, Maximum Length: 127\n  url?: string; // Minimum Length: 1, Maximum Length: 2048\n  imageUrl?: string; // Minimum Length: 1, Maximum Length: 2048, Pattern: ^(https:)([/|.|\\w|\\s|-])*.(?:jpg|gif|png|jpeg|JPG|GIF|PNG|JPEG)\n  upc?: UniversalProductCode;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PayPal Wallet Experience JSON Structure\nDESCRIPTION: Example JSON structure showing the default values and configuration options for customizing the PayPal wallet experience. Includes settings for shipping preferences, landing page, user actions, and payment method preferences.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-experience-context.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"shipping_preference\": \"GET_FROM_FILE\",\n  \"landing_page\": \"NO_PREFERENCE\",\n  \"user_action\": \"CONTINUE\",\n  \"payment_method_preference\": \"UNRESTRICTED\",\n  \"brand_name\": \"brand_name6\",\n  \"locale\": \"locale0\",\n  \"return_url\": \"return_url8\",\n  \"cancel_url\": \"cancel_url0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Structuring MyBank Payment Request in JSON\nDESCRIPTION: This JSON example demonstrates how to structure a MyBank payment request. It includes the required 'name' and 'country_code' fields, as well as an optional 'experience_context' object for customizing the payer experience.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/mybank-payment-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name0\",\n  \"country_code\": \"country_code0\",\n  \"experience_context\": {\n    \"brand_name\": \"brand_name2\",\n    \"locale\": \"locale6\",\n    \"shipping_preference\": \"NO_SHIPPING\",\n    \"return_url\": \"return_url4\",\n    \"cancel_url\": \"cancel_url6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CaptureIncompleteReason Enumeration in TypeScript\nDESCRIPTION: This enumeration lists all possible reasons for incomplete captures in PayPal transactions. It includes scenarios such as buyer complaints, chargebacks, pending eChecks, and various administrative or verification issues.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/capture-incomplete-reason.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum CaptureIncompleteReason {\n  BuyerComplaint,\n  Chargeback,\n  Echeck,\n  InternationalWithdrawal,\n  Other,\n  PendingReview,\n  ReceivingPreferenceMandatesManualAction,\n  Refunded,\n  TransactionApprovedAwaitingFunding,\n  Unilateral,\n  VerificationRequired,\n  DeclinedByRiskFraudFilters\n}\n```\n\n----------------------------------------\n\nTITLE: Example Google Pay Request Card JSON Structure\nDESCRIPTION: Example JSON representation of a GooglePayRequestCard object. It shows how to structure the card object with properties like name, type, brand, and billing address. This example demonstrates the format required for PayPal's TypeScript Server SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/google-pay-request-card.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name8\",\n  \"type\": \"STORE\",\n  \"brand\": \"DISCOVER\",\n  \"billing_address\": {\n    \"address_line_1\": \"address_line_12\",\n    \"address_line_2\": \"address_line_28\",\n    \"admin_area_2\": \"admin_area_28\",\n    \"admin_area_1\": \"admin_area_14\",\n    \"postal_code\": \"postal_code0\",\n    \"country_code\": \"country_code8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Address Object in JSON\nDESCRIPTION: This snippet provides an example of how the Address object would be represented in JSON format. It includes sample values for all fields of the Address object.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/address.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"address_line_1\": \"address_line_18\",\n  \"address_line_2\": \"address_line_28\",\n  \"admin_area_2\": \"admin_area_22\",\n  \"admin_area_1\": \"admin_area_14\",\n  \"postal_code\": \"postal_code0\",\n  \"country_code\": \"country_code8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example SellerReceivableBreakdown JSON Structure\nDESCRIPTION: Example JSON representation of a SellerReceivableBreakdown object showing the structure of transaction details including gross amount, PayPal fees, exchange rates, and platform fees. Contains currency codes and monetary values for various transaction components.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/seller-receivable-breakdown.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"gross_amount\": {\n    \"currency_code\": \"currency_code4\",\n    \"value\": \"value0\"\n  },\n  \"paypal_fee\": {\n    \"currency_code\": \"currency_code4\",\n    \"value\": \"value2\"\n  },\n  \"paypal_fee_in_receivable_currency\": {\n    \"currency_code\": \"currency_code2\",\n    \"value\": \"value8\"\n  },\n  \"net_amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value2\"\n  },\n  \"receivable_amount\": {\n    \"currency_code\": \"currency_code2\",\n    \"value\": \"value8\"\n  },\n  \"exchange_rate\": {\n    \"source_currency\": \"source_currency4\",\n    \"target_currency\": \"target_currency6\",\n    \"value\": \"value6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of CardVerificationDetails\nDESCRIPTION: This JSON example illustrates a sample CardVerificationDetails object, showing how the structure's fields are populated with actual data.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-verification-details.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"network_transaction_id\": \"network_transaction_id4\",\n  \"date\": \"date8\",\n  \"network\": \"EFTPOS\",\n  \"time\": \"time2\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example ApplePayPaymentObject Structure in JSON\nDESCRIPTION: A JSON example of the ApplePayPaymentObject structure showing the format of data required for Apple Pay payments. This example includes basic fields such as id, token, name, email address, and phone number.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/apple-pay-payment-object.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id6\",\n  \"token\": \"token0\",\n  \"name\": \"name6\",\n  \"email_address\": \"email_address4\",\n  \"phone_number\": {\n    \"national_number\": \"national_number6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SupplementaryPurchaseData Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of SupplementaryPurchaseData, including field types and optional status. It includes two fields: invoiceId and noteToPayer, both of which are optional strings with specific constraints.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/supplementary-purchase-data.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SupplementaryPurchaseData {\n  invoiceId?: string; // Optional, min length 1, max length 127\n  noteToPayer?: string; // Optional, min length 1, max length 255\n}\n```\n\n----------------------------------------\n\nTITLE: Example OrderConfirmApplicationContext Object in JSON\nDESCRIPTION: An example JSON representation of the OrderConfirmApplicationContext object, showing how to format the various properties including brand_name, locale, URLs, and stored payment source configuration.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-confirm-application-context.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"brand_name\": \"brand_name6\",\n  \"locale\": \"locale0\",\n  \"return_url\": \"return_url8\",\n  \"cancel_url\": \"cancel_url0\",\n  \"stored_payment_source\": {\n    \"payment_initiator\": \"CUSTOMER\",\n    \"payment_type\": \"RECURRING\",\n    \"usage\": \"FIRST\",\n    \"previous_network_transaction_reference\": {\n      \"id\": \"id6\",\n      \"date\": \"date2\",\n      \"network\": \"DELTA\",\n      \"acquirer_reference_number\": \"acquirer_reference_number8\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Google Pay Card JSON Structure\nDESCRIPTION: Example JSON representation of a Google Pay Card object showing the format for name, number, expiry date, last digits, and card type fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/google-pay-card.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name4\",\n  \"number\": \"number2\",\n  \"expiry\": \"expiry2\",\n  \"last_digits\": \"last_digits8\",\n  \"type\": \"DEBIT\"\n}\n```\n\n----------------------------------------\n\nTITLE: Money Object Example in JSON\nDESCRIPTION: A JSON example of the Money object structure that includes currency_code and value fields. This structure is used for representing monetary amounts in PayPal transactions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/money.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"currency_code\": \"currency_code6\",\n  \"value\": \"value2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VenmoWalletVaultAttributes Structure in Markdown\nDESCRIPTION: This snippet outlines the structure of the VenmoWalletVaultAttributes resource, detailing its fields, types, tags, and descriptions. It includes constraints for each field and their validation patterns.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-wallet-vault-attributes.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Structure\n\n`VenmoWalletVaultAttributes`\n\n## Fields\n\n| Name | Type | Tags | Description |\n|  --- | --- | --- | --- |\n| `storeInVault` | [`StoreInVaultInstruction`](../../doc/models/store-in-vault-instruction.md) | Required | Defines how and when the payment source gets vaulted.<br>**Constraints**: *Minimum Length*: `1`, *Maximum Length*: `255`, *Pattern*: `^[0-9A-Z_]+$` |\n| `description` | `string \\| undefined` | Optional | The description displayed to Venmo consumer on the approval flow for Venmo, as well as on the Venmo payment token management experience on Venmo.com.<br>**Constraints**: *Minimum Length*: `1`, *Maximum Length*: `128`, *Pattern*: `^[a-zA-Z0-9_'\\-., :;\\!?\"]*$` |\n| `usagePattern` | [`VenmoPaymentTokenUsagePattern \\| undefined`](../../doc/models/venmo-payment-token-usage-pattern.md) | Optional | Expected business/pricing model for the billing agreement.<br>**Constraints**: *Minimum Length*: `1`, *Maximum Length*: `30`, *Pattern*: `^[0-9A-Z_]+$` |\n| `usageType` | [`VenmoPaymentTokenUsageType`](../../doc/models/venmo-payment-token-usage-type.md) | Required | The usage type associated with the Venmo payment token.<br>**Constraints**: *Minimum Length*: `1`, *Maximum Length*: `255`, *Pattern*: `^[0-9A-Z_]+$` |\n| `customerType` | [`VenmoPaymentTokenCustomerType \\| undefined`](../../doc/models/venmo-payment-token-customer-type.md) | Optional | The customer type associated with the Venmo payment token. This is to indicate whether the customer acting on the merchant / platform is either a business or a consumer.<br>**Default**: `VenmoPaymentTokenCustomerType.Consumer`<br>**Constraints**: *Minimum Length*: `1`, *Maximum Length*: `255`, *Pattern*: `^[0-9A-Z_]+$` |\n| `permitMultiplePaymentTokens` | `boolean \\| undefined` | Optional | Create multiple payment tokens for the same payer, merchant/platform combination. Use this when the customer has not logged in at merchant/platform. The payment token thus generated, can then also be used to create the customer account at merchant/platform. Use this also when multiple payment tokens are required for the same payer, different customer at merchant/platform. This helps to identify customers distinctly even though they may share the same Venmo account.<br>**Default**: `false` |\n```\n\n----------------------------------------\n\nTITLE: Example Venmo Wallet Request JSON Structure\nDESCRIPTION: Example JSON structure showing a complete Venmo wallet request with vault ID, email address, experience context for customizing buyer experience, and additional attributes for customer and vault configuration.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-wallet-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vault_id\": \"vault_id2\",\n  \"email_address\": \"email_address2\",\n  \"experience_context\": {\n    \"brand_name\": \"brand_name2\",\n    \"shipping_preference\": \"NO_SHIPPING\",\n    \"order_update_callback_config\": {\n      \"callback_events\": [\n        \"SHIPPING_OPTIONS\",\n        \"SHIPPING_ADDRESS\",\n        \"SHIPPING_OPTIONS\"\n      ],\n      \"callback_url\": \"callback_url6\"\n    }\n  },\n  \"attributes\": {\n    \"customer\": {\n      \"id\": \"id0\",\n      \"email_address\": \"email_address2\"\n    },\n    \"vault\": {\n      \"store_in_vault\": \"ON_SUCCESS\",\n      \"description\": \"description6\",\n      \"usage_pattern\": \"THRESHOLD_PREPAID\",\n      \"usage_type\": \"MERCHANT\",\n      \"customer_type\": \"CONSUMER\",\n      \"permit_multiple_payment_tokens\": false\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Item Model Structure in TypeScript\nDESCRIPTION: This code snippet outlines the structure of the Item model, including its fields, types, and constraints. It represents the details of an item to be purchased, including name, price, quantity, and other optional attributes.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/item.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Item {\n  name: string; // Required, min length 1, max length 127\n  unitAmount: Money; // Required\n  tax?: Money; // Optional\n  quantity: string; // Required, whole number, max length 10, pattern: ^[1-9][0-9]{0,9}$\n  description?: string; // Optional, max length 2048\n  sku?: string; // Optional, max length 127\n  url?: string; // Optional, min length 1, max length 2048\n  category?: ItemCategory; // Optional, min length 1, max length 20\n  imageUrl?: string; // Optional, min length 1, max length 2048, specific pattern\n  upc?: UniversalProductCode; // Optional\n}\n```\n\n----------------------------------------\n\nTITLE: Example VaultVenmoRequest JSON Object\nDESCRIPTION: This JSON object demonstrates an example of a VaultVenmoRequest with sample values for its fields. It shows how the request structure can be populated with data for creating a Venmo vault request.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-venmo-request.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"permit_multiple_payment_tokens\": false,\n  \"description\": \"description0\",\n  \"usage_pattern\": \"UNSCHEDULED_PREPAID\",\n  \"shipping\": {\n    \"name\": {\n      \"full_name\": \"full_name6\"\n    },\n    \"phone_number\": {\n      \"country_code\": \"country_code2\",\n      \"national_number\": \"national_number6\"\n    },\n    \"type\": \"SHIPPING\",\n    \"address\": {\n      \"address_line_1\": \"address_line_16\",\n      \"address_line_2\": \"address_line_26\",\n      \"admin_area_2\": \"admin_area_20\",\n      \"admin_area_1\": \"admin_area_12\",\n      \"postal_code\": \"postal_code8\",\n      \"country_code\": \"country_code6\"\n    }\n  },\n  \"usage_type\": \"MERCHANT\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example of CardExperienceContext Implementation in JSON\nDESCRIPTION: A JSON example showing how to format the CardExperienceContext object with return and cancel URLs. This context is used to customize the payer experience during 3DS Approval for payment processing.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-experience-context.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"return_url\": \"return_url2\",\n  \"cancel_url\": \"cancel_url0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Token Structure in JSON for PayPal TypeScript Server SDK\nDESCRIPTION: This JSON snippet demonstrates the structure of a Token object. It includes the 'id' field, which is a PayPal-generated ID for the token, and the 'type' field, which indicates the tokenization method used to generate the ID.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/token.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id6\",\n  \"type\": \"BILLING_AGREEMENT\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example iDEAL Payment Object in JSON\nDESCRIPTION: A sample JSON representation of an IdealPaymentObject showing the expected format for iDEAL payments. This example includes values for name, country_code, bic (business identification code), and the last characters of the IBAN used for payment.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/ideal-payment-object.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name6\",\n  \"country_code\": \"country_code4\",\n  \"bic\": \"bic8\",\n  \"iban_last_chars\": \"iban_last_chars4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of ExperienceContext\nDESCRIPTION: This JSON example demonstrates how the ExperienceContext model is represented when serialized. It includes sample values for all the optional fields, showing how they would be structured in a real-world scenario.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/experience-context.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"shipping_preference\": \"GET_FROM_FILE\",\n  \"brand_name\": \"brand_name0\",\n  \"locale\": \"locale4\",\n  \"return_url\": \"return_url2\",\n  \"cancel_url\": \"cancel_url4\"\n}\n```\n\n----------------------------------------\n\nTITLE: PayeeBase JSON Example Structure\nDESCRIPTION: A sample JSON representation of the PayeeBase object showing the expected format with email_address and merchant_id properties. This structure is used to identify the merchant who receives funds from a PayPal transaction.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payee-base.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"email_address\": \"email_address0\",\n  \"merchant_id\": \"merchant_id2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example GiropayPaymentObject Implementation in JSON\nDESCRIPTION: A sample JSON representation of the GiropayPaymentObject showing the structure with example values for name, country_code, and bic fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/giropay-payment-object.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name6\",\n  \"country_code\": \"country_code6\",\n  \"bic\": \"bic8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example CardVaultResponse Object Structure\nDESCRIPTION: Example JSON structure showing a CardVaultResponse object with sample data including ID, status, HATEOAS links, and customer information. Demonstrates the format of a saved card payment source response.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-vault-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id6\",\n  \"status\": \"VAULTED\",\n  \"links\": [\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    },\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    }\n  ],\n  \"customer\": {\n    \"id\": \"id0\",\n    \"email_address\": \"email_address2\",\n    \"phone\": {\n      \"phone_type\": \"OTHER\",\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      }\n    },\n    \"merchant_customer_id\": \"merchant_customer_id2\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Venmo Wallet Response in JSON\nDESCRIPTION: Sample JSON structure showing a Venmo wallet response with basic user information including email address, account ID, username, name, and phone number fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-wallet-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"email_address\": \"email_address6\",\n  \"account_id\": \"account_id8\",\n  \"user_name\": \"user_name2\",\n  \"name\": {\n    \"given_name\": \"given_name2\",\n    \"surname\": \"surname8\"\n  },\n  \"phone_number\": {\n    \"national_number\": \"national_number6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sample CardResponse Object in JSON Format\nDESCRIPTION: An example of the CardResponse object in JSON format. This shows a basic representation with the cardholder's name, last digits, card brand, available networks, and card type.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name0\",\n  \"last_digits\": \"last_digits4\",\n  \"brand\": \"UNKNOWN\",\n  \"available_networks\": [\n    \"CONFIDIS\",\n    \"CONFIGOGA\",\n    \"CB_NATIONALE\"\n  ],\n  \"type\": \"CREDIT\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example OrderUpdateCallbackResponse JSON Structure\nDESCRIPTION: Example JSON showing the structure of an OrderUpdateCallbackResponse object. Includes order ID, purchase units with shipping options, amounts, and breakdowns.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-update-callback-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id2\",\n  \"purchase_units\": {\n    \"reference_id\": \"reference_id4\",\n    \"amount\": {\n      \"currency_code\": \"currency_code6\",\n      \"value\": \"value0\",\n      \"breakdown\": {\n        \"item_total\": {\n          \"currency_code\": \"currency_code0\",\n          \"value\": \"value6\"\n        },\n        \"shipping\": {\n          \"currency_code\": \"currency_code0\",\n          \"value\": \"value6\"\n        },\n        \"handling\": {\n          \"currency_code\": \"currency_code2\",\n          \"value\": \"value8\"\n        },\n        \"tax_total\": {\n          \"currency_code\": \"currency_code4\",\n          \"value\": \"value0\"\n        },\n        \"insurance\": {\n          \"currency_code\": \"currency_code2\",\n          \"value\": \"value8\"\n        }\n      }\n    },\n    \"shipping_options\": [\n      {\n        \"id\": \"id8\",\n        \"label\": \"label8\",\n        \"type\": \"PICKUP_IN_STORE\",\n        \"amount\": {\n          \"currency_code\": \"currency_code6\",\n          \"value\": \"value0\"\n        },\n        \"selected\": false\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CustomerResponse Object Structure in TypeScript\nDESCRIPTION: This snippet outlines the structure of the CustomerResponse object, including its fields 'id' and 'merchantCustomerId'. It specifies the types and constraints for each field.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/customer-response.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface CustomerResponse {\n  id?: string; // Optional, 1-22 characters, alphanumeric with underscore and hyphen\n  merchantCustomerId?: string; // Optional, 1-64 characters, alphanumeric with special characters\n}\n```\n\n----------------------------------------\n\nTITLE: Example Sofort Payment Object in JSON\nDESCRIPTION: Example JSON representation of a Sofort payment object showing the structure with sample values for name, country code, BIC, and IBAN last characters. Each field follows specific validation constraints for length and format patterns.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/sofort-payment-object.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name6\",\n  \"country_code\": \"country_code6\",\n  \"bic\": \"bic8\",\n  \"iban_last_chars\": \"iban_last_chars4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example CardResponseAddress JSON Structure\nDESCRIPTION: Example JSON representation of a CardResponseAddress object showing the expected format and field structure. Demonstrates required and optional fields with sample values.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-response-address.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"address_line_1\": \"address_line_12\",\n  \"address_line_2\": \"address_line_22\",\n  \"admin_area_2\": \"admin_area_26\",\n  \"admin_area_1\": \"admin_area_18\",\n  \"postal_code\": \"postal_code4\",\n  \"country_code\": \"country_code2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Trustly Payment Object Example in JSON\nDESCRIPTION: Example JSON representation of a TrustlyPaymentObject showing the structure with sample values for name, country code, email, BIC, and IBAN last characters.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/trustly-payment-object.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name6\",\n  \"country_code\": \"country_code6\",\n  \"email\": \"email0\",\n  \"bic\": \"bic8\",\n  \"iban_last_chars\": \"iban_last_chars4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining BillingCycle Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of the BillingCycle model, including its fields, types, and constraints. It represents the details of a billing cycle in a subscription or recurring payment.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/billing-cycle.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface BillingCycle {\n  tenureType: TenureType;\n  pricingScheme?: PricingScheme;\n  frequency?: unknown;\n  totalCycles?: number;\n  sequence?: number;\n  startDate?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of CardStoredCredential in JSON\nDESCRIPTION: This JSON example demonstrates how to use the CardStoredCredential structure in a request or response. It shows the format for specifying payment initiator, payment type, usage, and previous network transaction reference.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-stored-credential.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"payment_initiator\": \"CUSTOMER\",\n  \"payment_type\": \"ONE_TIME\",\n  \"usage\": \"DERIVED\",\n  \"previous_network_transaction_reference\": {\n    \"id\": \"id6\",\n    \"date\": \"date2\",\n    \"network\": \"DELTA\",\n    \"acquirer_reference_number\": \"acquirer_reference_number8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Address Object Structure in TypeScript\nDESCRIPTION: This snippet shows the structure of the Address object with its fields and their types. It includes optional and required fields with their constraints and descriptions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/address.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Address {\n  addressLine1?: string; // Optional, max length 300\n  addressLine2?: string; // Optional, max length 300\n  adminArea2?: string; // Optional, max length 120\n  adminArea1?: string; // Optional, max length 300\n  postalCode?: string; // Optional, max length 60\n  countryCode: string; // Required, length 2, pattern ^([A-Z]{2}|C2)$\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing PayPal Wallet Response Object in JSON\nDESCRIPTION: Example implementation of a PayPal Wallet response object showing core fields including email address, account ID, account status, name and phone type. The response structure demonstrates the standard format for wallet data returned by PayPal's API.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"email_address\": \"email_address8\",\n  \"account_id\": \"account_id2\",\n  \"account_status\": \"VERIFIED\",\n  \"name\": {\n    \"given_name\": \"given_name2\",\n    \"surname\": \"surname8\"\n  },\n  \"phone_type\": \"OTHER\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example CustomerInformation JSON Structure\nDESCRIPTION: A JSON example of the CustomerInformation model showing its structure with sample data. The example includes a customer ID, email address, and phone information with a phone type and national number.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/customer-information.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id6\",\n  \"email_address\": \"email_address4\",\n  \"phone\": {\n    \"phone_type\": \"OTHER\",\n    \"phone_number\": {\n      \"national_number\": \"national_number6\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Phone Number Structure in JSON\nDESCRIPTION: Example JSON structure showing the format for phone numbers with country code and national number fields. Demonstrates the expected structure for phone number data conforming to E.164 format.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/phone-number-with-country-code.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"country_code\": \"country_code4\",\n  \"national_number\": \"national_number8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example BLIK Level 0 Payment Object in JSON\nDESCRIPTION: Example JSON structure showing the required auth_code field for BLIK level 0 payment authentication. The auth_code must be exactly 6 digits long and contain only numeric characters.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/blik-level-0-payment-object.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"auth_code\": \"auth_code6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining EpsPaymentRequest Structure in TypeScript\nDESCRIPTION: Defines the structure of the EpsPaymentRequest model with its required and optional fields. It includes name, countryCode, and an optional experienceContext.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/eps-payment-request.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface EpsPaymentRequest {\n  name: string;\n  countryCode: string;\n  experienceContext?: ExperienceContext;\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON for CaptureStatusWithDetails Structure in PayPal TypeScript SDK\nDESCRIPTION: A JSON example showing the structure of CaptureStatusWithDetails, which contains the status of a captured payment (COMPLETED) and status details with a reason (VERIFICATION_REQUIRED).\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/capture-status-with-details.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"COMPLETED\",\n  \"status_details\": {\n    \"reason\": \"VERIFICATION_REQUIRED\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example OrderUpdateCallbackShippingOption Object in JSON\nDESCRIPTION: A JSON example demonstrating the structure of an OrderUpdateCallbackShippingOption object with id, label, type, and amount properties. This example shows how shipping options are represented in the PayPal TypeScript Server SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-update-callback-shipping-option.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id8\",\n  \"label\": \"label8\",\n  \"type\": \"SHIPPING\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PaypalWalletCustomerRequest Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of the PaypalWalletCustomerRequest object. It includes fields for customer ID, email address, phone information, and merchant customer ID, each with specific constraints and types.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-customer-request.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PaypalWalletCustomerRequest {\n  id?: string; // Optional, with constraints\n  emailAddress?: string; // Optional, with constraints\n  phone?: PhoneWithType; // Optional, references another type\n  merchantCustomerId?: string; // Optional, with constraints\n}\n```\n\n----------------------------------------\n\nTITLE: Structuring Payment Token Request Payment Source in JSON\nDESCRIPTION: This JSON example demonstrates the structure of a PaymentTokenRequestPaymentSource object. It includes card details such as name, number, expiry, and security code, as well as token information with an ID and type.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-token-request-payment-source.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"card\": {\n    \"name\": \"name6\",\n    \"number\": \"number6\",\n    \"expiry\": \"expiry4\",\n    \"security_code\": \"security_code8\",\n    \"brand\": \"RUPAY\"\n  },\n  \"token\": {\n    \"id\": \"id6\",\n    \"type\": \"SETUP_TOKEN\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Order Update Callback Request JSON Structure\nDESCRIPTION: Example JSON structure showing a complete OrderUpdateCallbackRequest with shipping address, purchase units, and shipping options. Includes nested objects for payment details, platform fees, and disbursement settings.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-update-callback-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"shipping_address\": {\n    \"admin_area_2\": \"admin_area_24\",\n    \"admin_area_1\": \"admin_area_16\",\n    \"postal_code\": \"postal_code2\",\n    \"country_code\": \"country_code0\"\n  },\n  \"purchase_units\": [\n    {\n      \"reference_id\": \"reference_id4\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\",\n        \"breakdown\": {\n          \"item_total\": {\n            \"currency_code\": \"currency_code0\",\n            \"value\": \"value6\"\n          },\n          \"shipping\": {\n            \"currency_code\": \"currency_code0\",\n            \"value\": \"value6\"\n          },\n          \"handling\": {\n            \"currency_code\": \"currency_code2\",\n            \"value\": \"value8\"\n          },\n          \"tax_total\": {\n            \"currency_code\": \"currency_code4\",\n            \"value\": \"value0\"\n          },\n          \"insurance\": {\n            \"currency_code\": \"currency_code2\",\n            \"value\": \"value8\"\n          }\n        }\n      },\n      \"payee\": {\n        \"email_address\": \"email_address4\",\n        \"merchant_id\": \"merchant_id6\"\n      },\n      \"payment_instruction\": {\n        \"platform_fees\": [\n          {\n            \"amount\": {\n              \"currency_code\": \"currency_code6\",\n              \"value\": \"value0\"\n            },\n            \"payee\": {\n              \"email_address\": \"email_address4\",\n              \"merchant_id\": \"merchant_id6\"\n            }\n          },\n          {\n            \"amount\": {\n              \"currency_code\": \"currency_code6\",\n              \"value\": \"value0\"\n            },\n            \"payee\": {\n              \"email_address\": \"email_address4\",\n              \"merchant_id\": \"merchant_id6\"\n            }\n          },\n          {\n            \"amount\": {\n              \"currency_code\": \"currency_code6\",\n              \"value\": \"value0\"\n            },\n            \"payee\": {\n              \"email_address\": \"email_address4\",\n              \"merchant_id\": \"merchant_id6\"\n            }\n          }\n        ],\n        \"disbursement_mode\": \"INSTANT\",\n        \"payee_pricing_tier_id\": \"payee_pricing_tier_id2\",\n        \"payee_receivable_fx_rate_id\": \"payee_receivable_fx_rate_id0\"\n      },\n      \"description\": \"description6\",\n      \"custom_id\": \"custom_id4\"\n    }\n  ],\n  \"id\": \"id2\",\n  \"shipping_option\": {\n    \"id\": \"id4\",\n    \"label\": \"label4\",\n    \"type\": \"PICKUP_IN_STORE\",\n    \"amount\": {\n      \"currency_code\": \"currency_code6\",\n      \"value\": \"value0\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON for AuthorizationWithAdditionalData Model\nDESCRIPTION: A sample JSON representation of the AuthorizationWithAdditionalData model showing key fields including status, status details, ID, amount, and invoice ID. This example demonstrates the expected structure when working with authorization data in the PayPal TypeScript Server SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/authorization-with-additional-data.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"VOIDED\",\n  \"status_details\": {\n    \"reason\": \"PENDING_REVIEW\"\n  },\n  \"id\": \"id6\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  },\n  \"invoice_id\": \"invoice_id6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Apple Pay Decrypted Token Data Example\nDESCRIPTION: Example JSON structure showing the format of decrypted Apple Pay token data including transaction amount, tokenized card details, device information, and payment data with cryptogram and EMV details.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/apple-pay-decrypted-token-data.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"transaction_amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value2\"\n  },\n  \"tokenized_card\": {\n    \"name\": \"name4\",\n    \"number\": \"number2\",\n    \"expiry\": \"expiry2\",\n    \"card_type\": \"CB_NATIONALE\",\n    \"type\": \"UNKNOWN\"\n  },\n  \"device_manufacturer_id\": \"device_manufacturer_id2\",\n  \"payment_data_type\": \"3DSECURE\",\n  \"payment_data\": {\n    \"cryptogram\": \"cryptogram6\",\n    \"eci_indicator\": \"eci_indicator0\",\n    \"emv_data\": \"emv_data0\",\n    \"pin\": \"pin4\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of NetworkTransactionReferenceEntity\nDESCRIPTION: This JSON example demonstrates how a NetworkTransactionReferenceEntity object might be represented in JSON format. It includes sample values for id, date, network, and time fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/network-transaction-reference-entity.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id6\",\n  \"date\": \"date2\",\n  \"network\": \"SYNCHRONY\",\n  \"time\": \"time6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GooglePayPaymentMethod Enumeration in Markdown\nDESCRIPTION: This snippet defines the GooglePayPaymentMethod enumeration, which currently only includes the 'Card' option. It specifies that CARD is the only value accepted by Google Pay for payment credentials.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/google-pay-payment-method.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Google Pay Payment Method\n\nThe type of the payment credential. Currently, only CARD is supported.\n\n## Enumeration\n\n`GooglePayPaymentMethod`\n\n## Fields\n\n| Name | Description |\n|  --- | --- |\n| `Card` | CARD is the only value that Google Pay accepts. |\n```\n\n----------------------------------------\n\nTITLE: Example ParticipantMetadata JSON Structure\nDESCRIPTION: Demonstrates the JSON structure for participant metadata with an IP address field. The IP address field supports both IPv4 and IPv6 formats with specific length and pattern constraints.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/participant-metadata.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"ip_address\": \"ip_address2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GooglePayAuthenticationMethod Enumeration in Markdown\nDESCRIPTION: This snippet defines the GooglePayAuthenticationMethod enumeration using a markdown table. It specifies two authentication methods: PanOnly for payment cards stored on file with Google Account, and Cryptogram3Ds for transactions requiring a 3-D Secure cryptogram.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/google-pay-authentication-method.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Description |\n|  --- | --- |\n| `PanOnly` | This authentication method is associated with payment cards stored on file with the user's Google Account. Returned payment data includes primary account number (PAN) with the expiration month and the expiration year. |\n| `Cryptogram3Ds` | Returned payment data includes a 3-D Secure (3DS) cryptogram generated on the device. -> If authentication_method=CRYPTOGRAM, it is required that 'cryptogram' parameter in the request has a valid 3-D Secure (3DS) cryptogram generated on the device. |\n```\n\n----------------------------------------\n\nTITLE: Example Usage of PaymentTokenRequestCard in JSON\nDESCRIPTION: A JSON example of the PaymentTokenRequestCard object with sample values for name, number, expiry, security code, and brand fields. This example demonstrates the expected format for the request payload when vaulting a card.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-token-request-card.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name4\",\n  \"number\": \"number8\",\n  \"expiry\": \"expiry2\",\n  \"security_code\": \"security_code6\",\n  \"brand\": \"EFTPOS\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NetworkTransactionReferenceEntity Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of NetworkTransactionReferenceEntity, including its fields, types, and constraints. It represents a network transaction reference with id, date, network, and time information.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/network-transaction-reference-entity.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface NetworkTransactionReferenceEntity {\n  id: string; // Required, with specific constraints\n  date?: string; // Optional, with specific constraints\n  network?: CardBrand; // Optional, referencing CardBrand enum\n  time?: string; // Optional, with specific constraints\n}\n```\n\n----------------------------------------\n\nTITLE: Apple Pay Payment Data Example in JSON\nDESCRIPTION: Example JSON representation of the ApplePayPaymentData structure showing how the data should be formatted. It includes cryptogram, ECI indicator, EMV data, and PIN fields with sample values.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/apple-pay-payment-data.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"cryptogram\": \"cryptogram6\",\n  \"eci_indicator\": \"eci_indicator0\",\n  \"emv_data\": \"emv_data0\",\n  \"pin\": \"pin4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of ApplePayRequest\nDESCRIPTION: This JSON example illustrates a sample ApplePayRequest object with various fields populated. It demonstrates the structure and potential values for an Apple Pay payment request.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/apple-pay-request.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id6\",\n  \"name\": \"name6\",\n  \"email_address\": \"email_address4\",\n  \"phone_number\": {\n    \"national_number\": \"national_number6\"\n  },\n  \"decrypted_token\": {\n    \"transaction_amount\": {\n      \"currency_code\": \"currency_code6\",\n      \"value\": \"value2\"\n    },\n    \"tokenized_card\": {\n      \"name\": \"name4\",\n      \"number\": \"number2\",\n      \"expiry\": \"expiry2\",\n      \"card_type\": \"CB_NATIONALE\",\n      \"type\": \"UNKNOWN\"\n    },\n    \"device_manufacturer_id\": \"device_manufacturer_id6\",\n    \"payment_data_type\": \"3DSECURE\",\n    \"payment_data\": {\n      \"cryptogram\": \"cryptogram6\",\n      \"eci_indicator\": \"eci_indicator0\",\n      \"emv_data\": \"emv_data0\",\n      \"pin\": \"pin4\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example ShippingDetails JSON Object\nDESCRIPTION: This JSON example demonstrates how a ShippingDetails object might be structured when serialized. It includes sample values for name, email address, phone number, fulfillment type, and shipping options.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipping-details.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": {\n    \"full_name\": \"full_name6\"\n  },\n  \"email_address\": \"email_address2\",\n  \"phone_number\": {\n    \"country_code\": \"country_code2\",\n    \"national_number\": \"national_number6\"\n  },\n  \"type\": \"PICKUP_IN_STORE\",\n  \"options\": [\n    {\n      \"id\": \"id2\",\n      \"label\": \"label2\",\n      \"type\": \"SHIPPING\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"selected\": false\n    },\n    {\n      \"id\": \"id2\",\n      \"label\": \"label2\",\n      \"type\": \"SHIPPING\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"selected\": false\n    },\n    {\n      \"id\": \"id2\",\n      \"label\": \"label2\",\n      \"type\": \"SHIPPING\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"selected\": false\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: PayPal Wallet Vault Response Example\nDESCRIPTION: Example JSON representation of a PayPal Wallet Vault Response object showing the structure with all optional fields. Includes customer details, status, links, and identification information.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-vault-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id0\",\n  \"status\": \"CREATED\",\n  \"links\": [\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    }\n  ],\n  \"customer\": {\n    \"id\": \"id0\",\n    \"email_address\": \"email_address2\",\n    \"phone\": {\n      \"phone_type\": \"OTHER\",\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      }\n    },\n    \"merchant_customer_id\": \"merchant_customer_id2\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CVV Code Enumeration in Markdown\nDESCRIPTION: This snippet defines the CvvCode enumeration with various fields representing different CVV response codes for various credit card types. It includes descriptions for each code, covering scenarios like matching, not matching, processing errors, and service availability.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/cvv-code.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Enumeration\n\n`CvvCode`\n\n## Fields\n\n| Name | Description |\n|  --- | --- |\n| `CvvE` | For Visa, Mastercard, Discover, or American Express, error - unrecognized or unknown response. |\n| `CvvI` | For Visa, Mastercard, Discover, or American Express, invalid or null. |\n| `CvvM` | For Visa, Mastercard, Discover, or American Express, the CVV2/CSC matches. |\n| `CvvN` | For Visa, Mastercard, Discover, or American Express, the CVV2/CSC does not match. |\n| `CvvP` | For Visa, Mastercard, Discover, or American Express, it was not processed. |\n| `CvvS` | For Visa, Mastercard, Discover, or American Express, the service is not supported. |\n| `CvvU` | For Visa, Mastercard, Discover, or American Express, unknown - the issuer is not certified. |\n| `CvvX` | For Visa, Mastercard, Discover, or American Express, no response. For Maestro, the service is not available. |\n| `EnumAllOthers` | For Visa, Mastercard, Discover, or American Express, error. |\n| `Cvv0` | For Maestro, the CVV2 matched. |\n| `Cvv1` | For Maestro, the CVV2 did not match. |\n| `Cvv2` | For Maestro, the merchant has not implemented CVV2 code handling. |\n| `Cvv3` | For Maestro, the merchant has indicated that CVV2 is not present on card. |\n| `Cvv4` | For Maestro, the service is not available. |\n```\n\n----------------------------------------\n\nTITLE: ActivityTimestamps Structure Example in JSON\nDESCRIPTION: Example JSON representation of the ActivityTimestamps object that shows the create_time and update_time fields formatted according to Internet date and time format (RFC 3339).\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/activity-timestamps.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"create_time\": \"create_time2\",\n  \"update_time\": \"update_time2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example PaymentSupplementaryData JSON Structure\nDESCRIPTION: A JSON example showing the structure of PaymentSupplementaryData, which includes the related_ids field with order_id, authorization_id, and capture_id.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-supplementary-data.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"related_ids\": {\n    \"order_id\": \"order_id2\",\n    \"authorization_id\": \"authorization_id0\",\n    \"capture_id\": \"capture_id0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing the OrdersController in TypeScript\nDESCRIPTION: Creates an instance of the OrdersController class to interact with the PayPal Orders API.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/orders.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst ordersController = new OrdersController(client);\n```\n\n----------------------------------------\n\nTITLE: PhoneNumber JSON Structure Example\nDESCRIPTION: Example JSON representation of a phone number following E.164 format. The national_number field must be between 1-14 digits long and can only contain numbers.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/phone-number.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"national_number\": \"national_number8\"\n}\n```\n\n----------------------------------------\n\nTITLE: CardVerification JSON Example in PayPal TypeScript SDK\nDESCRIPTION: Example JSON representation of a CardVerification object used to opt into PayPal's card verification services like Smart Dollar Auth and 3DS. It specifies the verification method as SCA_WHEN_REQUIRED, which is the default setting.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-verification.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"method\": \"SCA_WHEN_REQUIRED\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SellerPayableBreakdown Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of SellerPayableBreakdown, including its fields and their types. It represents the breakdown of a refund, including various amounts and fees.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/seller-payable-breakdown.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SellerPayableBreakdown {\n  grossAmount?: Money;\n  paypalFee?: Money;\n  paypalFeeInReceivableCurrency?: Money;\n  netAmount?: Money;\n  netAmountInReceivableCurrency?: Money;\n  platformFees?: PlatformFee[];\n  netAmountBreakdown?: NetAmountBreakdownItem[];\n  totalRefundedAmount?: Money;\n}\n```\n\n----------------------------------------\n\nTITLE: Example PaypalWallet JSON Representation\nDESCRIPTION: This JSON example demonstrates how a PaypalWallet object might be structured when serialized. It includes sample values for various fields such as vault_id, email_address, name, phone, and birth_date.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vault_id\": \"vault_id8\",\n  \"email_address\": \"email_address8\",\n  \"name\": {\n    \"given_name\": \"given_name2\",\n    \"surname\": \"surname8\"\n  },\n  \"phone\": {\n    \"phone_type\": \"OTHER\",\n    \"phone_number\": {\n      \"national_number\": \"national_number6\"\n    }\n  },\n  \"birth_date\": \"birth_date4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example PayPal Amount Breakdown JSON Structure\nDESCRIPTION: Example JSON demonstrating the structure of an AmountBreakdown object with various monetary components. Each component includes a currency code and value pair. The example shows item total, shipping, handling, tax total, and insurance amounts.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/amount-breakdown.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"item_total\": {\n    \"currency_code\": \"currency_code0\",\n    \"value\": \"value6\"\n  },\n  \"shipping\": {\n    \"currency_code\": \"currency_code0\",\n    \"value\": \"value6\"\n  },\n  \"handling\": {\n    \"currency_code\": \"currency_code2\",\n    \"value\": \"value8\"\n  },\n  \"tax_total\": {\n    \"currency_code\": \"currency_code4\",\n    \"value\": \"value0\"\n  },\n  \"insurance\": {\n    \"currency_code\": \"currency_code2\",\n    \"value\": \"value8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example ProcessorResponse Object in JSON\nDESCRIPTION: Sample JSON structure showing a processor response with AVS code, CVV code, response code, and payment advice code values. This represents the response format for payment processing transactions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/processor-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"avs_code\": \"M\",\n  \"cvv_code\": \"U\",\n  \"response_code\": \"PPII\",\n  \"payment_advice_code\": \"03\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Payment Token\nDESCRIPTION: Removes a payment token from the vault using its ID.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/vault.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst id = 'id0';\n\ntry {\n  const { result, ...httpResponse } = await vaultController.deletePaymentToken(id);\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: CobrandedCard Example in JSON\nDESCRIPTION: Provides an example of the CobrandedCard model in JSON format, showcasing how the data structure would look when populated with sample values.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/cobranded-card.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"labels\": [\n    \"labels2\",\n    \"labels3\"\n  ],\n  \"payee\": {\n    \"email_address\": \"email_address4\",\n    \"merchant_id\": \"merchant_id6\"\n  },\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example CardFromRequest Object in JSON\nDESCRIPTION: A sample JSON representation of the CardFromRequest object showing the structure with example values for expiry and last_digits fields. The expiry field follows ISO-8601 YYYY-MM format, while last_digits contains the last few digits of a payment card.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-from-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"expiry\": \"expiry6\",\n  \"last_digits\": \"last_digits2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CallbackEvents Enumeration in TypeScript for PayPal SDK\nDESCRIPTION: This enumeration defines two callback events: ShippingAddress and ShippingOptions. These events are triggered when a buyer changes or selects shipping details during the PayPal/Venmo approval flow, prompting the merchant to update order totals.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/callback-events.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum CallbackEvents {\n  ShippingAddress,\n  ShippingOptions\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ShippingPreference Enumeration in TypeScript\nDESCRIPTION: Enumeration that defines three shipping address handling options: GetFromFile to use customer-provided address, NoShipping for digital goods with no shipping needed, and SetProvidedAddress to use merchant-provided address.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipping-preference.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum ShippingPreference {\n  GetFromFile = \"GET_FROM_FILE\",\n  NoShipping = \"NO_SHIPPING\",\n  SetProvidedAddress = \"SET_PROVIDED_ADDRESS\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example TaxInfo JSON Structure\nDESCRIPTION: Example JSON structure showing the format for tax information with a tax ID and type. The tax_id field must be 1-14 alphanumeric characters, and tax_id_type must be a valid enum value like BR_CPF.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/tax-info.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tax_id\": \"tax_id0\",\n  \"tax_id_type\": \"BR_CPF\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UsagePattern Enumeration in TypeScript for PayPal Billing Agreements\nDESCRIPTION: This enumeration defines various usage patterns for billing agreements in PayPal. It includes options for immediate, deferred, recurring, threshold-based, subscription, unscheduled, and installment payments, each with prepaid and postpaid variants. These patterns describe different business models for charging customers.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/usage-pattern.md#2025-04-23_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nenum UsagePattern {\n  Immediate,\n  Deferred,\n  RecurringPrepaid,\n  RecurringPostpaid,\n  ThresholdPrepaid,\n  ThresholdPostpaid,\n  SubscriptionPrepaid,\n  SubscriptionPostpaid,\n  UnscheduledPrepaid,\n  UnscheduledPostpaid,\n  InstallmentPrepaid,\n  InstallmentPostpaid\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DisbursementMode Enum in TypeScript\nDESCRIPTION: Enumeration that defines two modes for PayPal fund disbursement: Instant for immediate release and Delayed for held funds with conditional release.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/disbursement-mode.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum DisbursementMode {\n  Instant,  // Immediate fund release\n  Delayed   // Held funds with conditional release\n}\n```\n\n----------------------------------------\n\nTITLE: Example VaultInstruction JSON Structure\nDESCRIPTION: Shows the basic structure of a VaultInstruction object, which specifies how payment source information should be stored in the vault. The store_in_vault field indicates when vaulting should occur, with 'ON_SUCCESS' being the example value.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-instruction.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"store_in_vault\": \"ON_SUCCESS\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Bancontact Payment Request Example in JSON\nDESCRIPTION: Example JSON structure for a Bancontact payment request showing required fields including name, country code, and optional experience context. The name field must be 3-300 characters, country code must be a valid 2-character ISO code, and experience context provides customization options for the payment flow.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/bancontact-payment-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name8\",\n  \"country_code\": \"country_code8\",\n  \"experience_context\": {\n    \"brand_name\": \"brand_name2\",\n    \"locale\": \"locale6\",\n    \"shipping_preference\": \"NO_SHIPPING\",\n    \"return_url\": \"return_url4\",\n    \"cancel_url\": \"cancel_url6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Pricing Model Enumeration Definition in TypeScript\nDESCRIPTION: Defines an enumeration for different pricing models supported in PayPal billing cycles. Includes fixed pricing for constant amounts, variable pricing for flexible amounts, and auto-reload pricing for automatic fixed reloads.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/pricing-model.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum PricingModel {\n  Fixed,\n  Variable,\n  AutoReload\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PatchOp Enumeration in TypeScript\nDESCRIPTION: This enumeration defines the available patch operations for modifying JSON data structures. It includes Add, Remove, Replace, Move, Copy, and Test operations, each with specific behaviors and requirements.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/patch-op.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum PatchOp {\n  Add,\n  Remove,\n  Replace,\n  Move,\n  Copy,\n  Test\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VaultInstructionBase Structure in JSON\nDESCRIPTION: This JSON snippet demonstrates the structure of a VaultInstructionBase object. It includes the 'store_in_vault' field, which defines how and when the payment source gets vaulted. The value 'ON_SUCCESS' indicates that vaulting should occur upon successful transaction.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-instruction-base.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"store_in_vault\": \"ON_SUCCESS\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining RefundIncompleteReason Enumeration in TypeScript for PayPal SDK\nDESCRIPTION: This code snippet defines an enumeration called RefundIncompleteReason with a single field 'Echeck'. It is used to indicate that a refund is incomplete because the customer's account is funded through an eCheck that has not yet cleared.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/refund-incomplete-reason.md#2025-04-23_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nenum RefundIncompleteReason {\n  Echeck\n}\n```\n\n----------------------------------------\n\nTITLE: Example PayerBase JSON Structure\nDESCRIPTION: Provides an example of the PayerBase structure in JSON format, demonstrating how the fields would be populated with sample data.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payer-base.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"email_address\": \"email_address2\",\n  \"payer_id\": \"payer_id2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of VaultPaypalWalletRequest\nDESCRIPTION: This JSON example demonstrates how a VaultPaypalWalletRequest object might be structured, including values for various fields such as description, usage pattern, shipping details, and usage type.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-paypal-wallet-request.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"permit_multiple_payment_tokens\": false,\n  \"description\": \"description0\",\n  \"usage_pattern\": \"INSTALLMENT_PREPAID\",\n  \"shipping\": {\n    \"name\": {\n      \"full_name\": \"full_name6\"\n    },\n    \"phone_number\": {\n      \"country_code\": \"country_code2\",\n      \"national_number\": \"national_number6\"\n    },\n    \"type\": \"SHIPPING\",\n    \"address\": {\n      \"address_line_1\": \"address_line_16\",\n      \"address_line_2\": \"address_line_26\",\n      \"admin_area_2\": \"admin_area_20\",\n      \"admin_area_1\": \"admin_area_12\",\n      \"postal_code\": \"postal_code8\",\n      \"country_code\": \"country_code6\"\n    }\n  },\n  \"usage_type\": \"MERCHANT\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Network Transaction Reference JSON Structure\nDESCRIPTION: Example JSON structure showing a network transaction reference with id, date, network type, and acquirer reference number fields. This demonstrates the expected format for network transaction data.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/network-transaction-reference.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id6\",\n  \"date\": \"date8\",\n  \"network\": \"ELECTRON\",\n  \"acquirer_reference_number\": \"acquirer_reference_number2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ShippingDetails Model Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of the ShippingDetails model, including its fields and their types. It includes optional fields for shipping name, email address, phone number, fulfillment type, shipping options, and address.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipping-details.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ShippingDetails {\n  name?: ShippingName;\n  emailAddress?: string;\n  phoneNumber?: PhoneNumberWithCountryCode;\n  type?: FulfillmentType;\n  options?: ShippingOption[];\n  address?: Address;\n}\n```\n\n----------------------------------------\n\nTITLE: Example CardVerificationProcessorResponse in JSON\nDESCRIPTION: Example JSON representation of the CardVerificationProcessorResponse object showing AVS and CVV code values. The avs_code is set to 'E' and the cvv_code is set to 'All others'.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-verification-processor-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"avs_code\": \"E\",\n  \"cvv_code\": \"All others\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example P24 Payment Request JSON Structure\nDESCRIPTION: A JSON example of a P24 (Przelewy24) payment request showing the required fields (name, email, country_code) and the optional experience_context object that customizes the payer experience during payment approval.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/p24-payment-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name6\",\n  \"email\": \"email0\",\n  \"country_code\": \"country_code6\",\n  \"experience_context\": {\n    \"brand_name\": \"brand_name2\",\n    \"locale\": \"locale6\",\n    \"shipping_preference\": \"NO_SHIPPING\",\n    \"return_url\": \"return_url4\",\n    \"cancel_url\": \"cancel_url6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OrderApplicationContextShippingPreference Enum in TypeScript\nDESCRIPTION: Enumeration defining three shipping preference options for PayPal orders: GetFromFile to use customer-provided address, NoShipping for digital goods with no shipping needed, and SetProvidedAddress to use merchant-provided address that customer cannot change.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-application-context-shipping-preference.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum OrderApplicationContextShippingPreference {\n  GetFromFile = \"GET_FROM_FILE\",\n  NoShipping = \"NO_SHIPPING\",\n  SetProvidedAddress = \"SET_PROVIDED_ADDRESS\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ApiError Class Properties in TypeScript\nDESCRIPTION: This code snippet defines the properties of the ApiError class. It includes the original request, status code, headers, result, and response body. The class extends the ApiResponse interface, providing additional error-specific functionality.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/api-error.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ApiError<T> extends ApiResponse<T> {\n  request: HttpRequest;\n  statusCode: number;\n  headers: Record<string, string>;\n  result: T;\n  body: string | Blob | NodeJS.ReadableStream;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PartialResponseLoggingOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the PartialResponseLoggingOptions interface with properties for configuring response logging in API calls. It includes options for enabling body and header logging, specifying headers to include or exclude, and whitelisting non-sensitive header values.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/partial-response-logging-options.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PartialResponseLoggingOptions {\n  logBody: boolean;\n  logHeaders: boolean;\n  headerToInclude: string[];\n  headerToExclude: string[];\n  headerToWhitelist: string[];\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing VaultController in TypeScript\nDESCRIPTION: Creates a new instance of VaultController using a PayPal client object\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/controllers/vault.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst vaultController = new VaultController(client);\n```\n\n----------------------------------------\n\nTITLE: Demonstrating ApplePayAttributes JSON Structure in PayPal TypeScript Server SDK\nDESCRIPTION: This JSON example illustrates the structure of the ApplePayAttributes object. It includes customer information with an ID, email address, and phone details, as well as vaulting instructions set to store on success.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/apple-pay-attributes.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"customer\": {\n    \"id\": \"id0\",\n    \"email_address\": \"email_address2\",\n    \"phone\": {\n      \"phone_type\": \"OTHER\",\n      \"phone_number\": {\n        \"national_number\": \"national_number6\"\n      }\n    }\n  },\n  \"vault\": {\n    \"store_in_vault\": \"ON_SUCCESS\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON for Level3CardProcessingData\nDESCRIPTION: This JSON example illustrates how to structure the Level3CardProcessingData object with sample values for each field. It includes shipping amount, duty amount, discount amount, shipping address, and ships from postal code.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/level-3-card-processing-data.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"shipping_amount\": {\n    \"currency_code\": \"currency_code0\",\n    \"value\": \"value6\"\n  },\n  \"duty_amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value2\"\n  },\n  \"discount_amount\": {\n    \"currency_code\": \"currency_code2\",\n    \"value\": \"value8\"\n  },\n  \"shipping_address\": {\n    \"address_line_1\": \"address_line_10\",\n    \"address_line_2\": \"address_line_20\",\n    \"admin_area_2\": \"admin_area_24\",\n    \"admin_area_1\": \"admin_area_16\",\n    \"postal_code\": \"postal_code2\",\n    \"country_code\": \"country_code0\"\n  },\n  \"ships_from_postal_code\": \"ships_from_postal_code6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON for PaypalPaymentToken in TypeScript\nDESCRIPTION: This code snippet provides an example of a PaypalPaymentToken object in JSON format. It demonstrates how to structure the data for a payment token, including various optional fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-payment-token.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"permit_multiple_payment_tokens\": false,\n  \"description\": \"description6\",\n  \"usage_pattern\": \"RECURRING_PREPAID\",\n  \"shipping\": {\n    \"name\": {\n      \"full_name\": \"full_name6\"\n    },\n    \"phone_number\": {\n      \"country_code\": \"country_code2\",\n      \"national_number\": \"national_number6\"\n    },\n    \"type\": \"SHIPPING\",\n    \"address\": {\n      \"address_line_1\": \"address_line_16\",\n      \"address_line_2\": \"address_line_26\",\n      \"admin_area_2\": \"admin_area_20\",\n      \"admin_area_1\": \"admin_area_12\",\n      \"postal_code\": \"postal_code8\",\n      \"country_code\": \"country_code6\"\n    }\n  },\n  \"usage_type\": \"MERCHANT\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PricingScheme Object Structure in JSON\nDESCRIPTION: Example JSON structure showing a PricingScheme object with price, pricing model, and reload threshold amount fields. The pricing model is set to FIXED and includes currency codes and values for monetary amounts.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/pricing-scheme.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"price\": {\n    \"currency_code\": \"currency_code8\",\n    \"value\": \"value4\"\n  },\n  \"pricing_model\": \"FIXED\",\n  \"reload_threshold_amount\": {\n    \"currency_code\": \"currency_code0\",\n    \"value\": \"value6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example ThreeDSecureAuthenticationResponse in JSON\nDESCRIPTION: This snippet demonstrates a sample JSON representation of the ThreeDSecureAuthenticationResponse structure. It includes the authentication_status and enrollment_status fields with example values.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/three-d-secure-authentication-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"authentication_status\": \"C\",\n  \"enrollment_status\": \"Y\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom OAuth Token Provider in TypeScript\nDESCRIPTION: This snippet illustrates how to set up a custom OAuth token provider. It allows for authorizing a client using a stored access token and provides a mechanism to fetch a new token when needed.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/auth/oauth-2-client-credentials-grant.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst client = new Client({\n  clientCredentialsAuthCredentials: {\n    oAuthClientId: 'OAuthClientId',\n    oAuthClientSecret: 'OAuthClientSecret',\n    oAuthTokenProvider: (lastOAuthToken: OAuthToken | undefined, authManager: ClientCredentialsAuthManager) => {\n      // Add the callback handler to provide a new OAuth token\n      // It will be triggered whenever the lastOAuthToken is undefined or expired\n      return loadTokenFromDatabase() ?? authManager.fetchToken();\n    }\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Venmo Wallet Customer Information Structure Example - JSON\nDESCRIPTION: Example JSON representation of a VenmoWalletCustomerInformation object showing the basic structure with id and email_address fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-wallet-customer-information.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id4\",\n  \"email_address\": \"email_address2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing PayPal SDK Client with Custom Logger\nDESCRIPTION: Demonstrates how to initialize the PayPal TypeScript Server SDK client with a custom logger implementation. It configures logging settings including log level, request body logging, and response header logging.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/logger-interface.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Client, LogLevel } from '../../../src';\n\nconst client = new Client({\n  logging: {\n    logger: new WinstonLogger(),\n    logLevel: LogLevel.Info,\n    logRequest: {\n      logBody: true\n    },\n    logResponse: {\n      logHeaders: true\n    }\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Defining CapturePaymentInstruction Structure in TypeScript\nDESCRIPTION: This snippet defines the structure of CapturePaymentInstruction, including its fields, types, and constraints. It's used for additional payment processing instructions when capturing or authorizing an order.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/capture-payment-instruction.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface CapturePaymentInstruction {\n  platformFees?: PlatformFee[];\n  disbursementMode?: DisbursementMode;\n  payeeReceivableFxRateId?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Example OneTimeCharge Object in JSON\nDESCRIPTION: This snippet demonstrates the structure of a OneTimeCharge object in JSON format. It includes examples of all possible fields, such as setup fee, shipping amount, taxes, product price, subtotal, and total amount. Each monetary value is represented by a Money object with currency code and value properties.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/one-time-charge.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"setup_fee\": {\n    \"currency_code\": \"currency_code8\",\n    \"value\": \"value4\"\n  },\n  \"shipping_amount\": {\n    \"currency_code\": \"currency_code0\",\n    \"value\": \"value6\"\n  },\n  \"taxes\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value2\"\n  },\n  \"product_price\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value2\"\n  },\n  \"subtotal\": {\n    \"currency_code\": \"currency_code2\",\n    \"value\": \"value8\"\n  },\n  \"total_amount\": {\n    \"currency_code\": \"currency_code2\",\n    \"value\": \"value8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GooglePayWalletResponse Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of the GooglePayWalletResponse interface in TypeScript. It includes optional fields for name, email address, phone number, and card details, with specific constraints and validation patterns.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/google-pay-wallet-response.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface GooglePayWalletResponse {\n  name?: string; // Min length: 3, Max length: 300\n  emailAddress?: string; // Min length: 3, Max length: 254, with specific email pattern\n  phoneNumber?: PhoneNumberWithCountryCode;\n  card?: GooglePayCardResponse;\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Response for OrderTrackerResponse\nDESCRIPTION: This JSON example illustrates a sample response for the OrderTrackerResponse model. It includes values for id, status, items, links, and create_time fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-tracker-response.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id2\",\n  \"status\": \"CANCELLED\",\n  \"items\": [\n    {\n      \"name\": \"name8\",\n      \"quantity\": \"quantity4\",\n      \"sku\": \"sku6\",\n      \"url\": \"url2\",\n      \"image_url\": \"image_url4\"\n    },\n    {\n      \"name\": \"name8\",\n      \"quantity\": \"quantity4\",\n      \"sku\": \"sku6\",\n      \"url\": \"url2\",\n      \"image_url\": \"image_url4\"\n    }\n  ],\n  \"links\": [\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    },\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    },\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    }\n  ],\n  \"create_time\": \"create_time8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example RefundStatusWithDetails JSON Structure\nDESCRIPTION: Shows an example JSON representation of a refund status with details, including the status field (PENDING) and status details containing the reason (ECHECK).\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/refund-status-with-details.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"PENDING\",\n  \"status_details\": {\n    \"reason\": \"ECHECK\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example VaultCustomer JSON Structure\nDESCRIPTION: This snippet demonstrates the JSON representation of a VaultCustomer object. It includes the 'id' field, which is the unique identifier for a customer in PayPal's system.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-customer.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example PaypalWalletStoredCredential Object in JSON\nDESCRIPTION: This JSON example demonstrates how to structure a PaypalWalletStoredCredential object with sample values for each field. It includes the payment initiator, usage, charge pattern, and usage pattern.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-stored-credential.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"payment_initiator\": \"CUSTOMER\",\n  \"usage\": \"DERIVED\",\n  \"charge_pattern\": \"IMMEDIATE\",\n  \"usage_pattern\": \"IMMEDIATE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Bancontact Payment Object Example in JSON\nDESCRIPTION: Example JSON representation of a BancontactPaymentObject showing all available fields with sample values. This illustrates how the object should be structured when used in API requests or responses.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/bancontact-payment-object.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name6\",\n  \"country_code\": \"country_code6\",\n  \"bic\": \"bic8\",\n  \"iban_last_chars\": \"iban_last_chars4\",\n  \"card_last_digits\": \"card_last_digits0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ProcessorResponseCode Enumeration in TypeScript\nDESCRIPTION: Enumeration of all possible processor response codes that can be returned during payment processing. Includes codes for approvals, declines, security checks, system errors, and various other payment processing scenarios.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/processor-response-code.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum ProcessorResponseCode {\n  Response0000, // APPROVED\n  Response00N7, // CVV2_FAILURE_POSSIBLE_RETRY_WITH_CVV\n  Response0100, // REFERRAL\n  Response0390, // ACCOUNT_NOT_FOUND\n  // ... additional response codes ...\n  ResponsePpvc, // VALIDATE_CURRENCY\n  ResponsePpve, // VALIDATION_ERROR\n  ResponsePpvt  // VIRTUAL_TERMINAL_UNSUPPORTED\n}\n```\n\n----------------------------------------\n\nTITLE: Example ApplePayCardResponse JSON Structure\nDESCRIPTION: An example JSON representation of the ApplePayCardResponse object showing basic card details including name, last digits, brand, available networks, and type.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/apple-pay-card-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name4\",\n  \"last_digits\": \"last_digits8\",\n  \"brand\": \"HIPER\",\n  \"available_networks\": [\n    \"RUPAY\"\n  ],\n  \"type\": \"DEBIT\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ShippingOption Model Structure in Markdown\nDESCRIPTION: Describes the structure of the ShippingOption model, including field names, types, tags, and descriptions. It covers important fields like ID, label, type, amount, and selected status.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipping-option.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Structure\n\n`ShippingOption`\n\n## Fields\n\n| Name | Type | Tags | Description |\n|  --- | --- | --- | --- |\n| `id` | `string` | Required | A unique ID that identifies a payer-selected shipping option.<br>**Constraints**: *Maximum Length*: `127` |\n| `label` | `string` | Required | A description that the payer sees, which helps them choose an appropriate shipping option. For example, `Free Shipping`, `USPS Priority Shipping`, `Expédition prioritaire USPS`, or `USPS yōuxiān fā huò`. Localize this description to the payer's locale.<br>**Constraints**: *Maximum Length*: `127` |\n| `type` | [`ShippingType \\| undefined`](../../doc/models/shipping-type.md) | Optional | A classification for the method of purchase fulfillment. |\n| `amount` | [`Money \\| undefined`](../../doc/models/money.md) | Optional | The currency and amount for a financial transaction, such as a balance or payment due. |\n| `selected` | `boolean` | Required | If the API request sets `selected = true`, it represents the shipping option that the payee or merchant expects to be pre-selected for the payer when they first view the `shipping.options` in the PayPal Checkout experience. As part of the response if a `shipping.option` contains `selected=true`, it represents the shipping option that the payer selected during the course of checkout with PayPal. Only one `shipping.option` can be set to `selected=true`. |\n```\n\n----------------------------------------\n\nTITLE: Example VaultedDigitalWallet JSON Structure\nDESCRIPTION: Example JSON structure showing a VaultedDigitalWallet object with sample values for all available fields. Includes shipping details, usage patterns, and customer configuration options.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vaulted-digital-wallet.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"permit_multiple_payment_tokens\": false,\n  \"description\": \"description2\",\n  \"usage_pattern\": \"THRESHOLD_PREPAID\",\n  \"shipping\": {\n    \"name\": {\n      \"full_name\": \"full_name6\"\n    },\n    \"phone_number\": {\n      \"country_code\": \"country_code2\",\n      \"national_number\": \"national_number6\"\n    },\n    \"type\": \"SHIPPING\",\n    \"address\": {\n      \"address_line_1\": \"address_line_16\",\n      \"address_line_2\": \"address_line_26\",\n      \"admin_area_2\": \"admin_area_20\",\n      \"admin_area_1\": \"admin_area_12\",\n      \"postal_code\": \"postal_code8\",\n      \"country_code\": \"country_code6\"\n    }\n  },\n  \"usage_type\": \"MERCHANT\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CheckoutPaymentIntent Enum in TypeScript\nDESCRIPTION: Enumeration that defines two possible payment intent options for PayPal checkout: Capture for immediate payment processing, and Authorize for delayed capture up to 29 days. Authorization intent has limitations with multiple purchase units.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/checkout-payment-intent.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum CheckoutPaymentIntent {\n  Capture,   // Immediate payment capture\n  Authorize  // Delayed payment capture with hold\n}\n```\n\n----------------------------------------\n\nTITLE: BLIK Payment Request Structure Example\nDESCRIPTION: Example JSON structure for a BLIK one-click payment request showing the required and optional fields with their respective values. The structure includes authentication code, consumer reference, alias label, and alias key.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/blik-one-click-payment-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"auth_code\": \"auth_code8\",\n  \"consumer_reference\": \"consumer_reference6\",\n  \"alias_label\": \"alias_label2\",\n  \"alias_key\": \"alias_key6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example PaypalWalletCustomerRequest Object in JSON\nDESCRIPTION: This JSON example illustrates how a PaypalWalletCustomerRequest object might be structured when populated with sample data. It includes all optional fields with example values.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-customer-request.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id2\",\n  \"email_address\": \"email_address0\",\n  \"phone\": {\n    \"phone_type\": \"OTHER\",\n    \"phone_number\": {\n      \"national_number\": \"national_number6\"\n    }\n  },\n  \"merchant_customer_id\": \"merchant_customer_id4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example CustomerResponse Object in JSON\nDESCRIPTION: This JSON example demonstrates how a CustomerResponse object might be structured when serialized. It includes sample values for the 'id' and 'merchant_customer_id' fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/customer-response.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id4\",\n  \"merchant_customer_id\": \"merchant_customer_id6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LineItem Structure in TypeScript for PayPal SDK\nDESCRIPTION: This code snippet defines the LineItem structure with its fields, types, and constraints. It includes required fields like name and quantity, as well as optional fields such as description, SKU, and various monetary amounts.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/line-item.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LineItem {\n  name: string; // Required, 1-127 characters\n  quantity: string; // Required, whole number, max 10 digits\n  description?: string; // Optional, max 2048 characters\n  sku?: string; // Optional, max 127 characters\n  url?: string; // Optional, 1-2048 characters\n  imageUrl?: string; // Optional, 1-2048 characters, specific file type constraints\n  upc?: UniversalProductCode;\n  unitAmount?: Money;\n  tax?: Money;\n  commodityCode?: string; // Optional, 1-12 characters, alphanumeric with some special chars\n  discountAmount?: Money;\n  totalAmount?: Money;\n  unitOfMeasure?: string; // Optional, 1-12 characters, alphanumeric with some special chars\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AuthorizationStatusWithDetails Structure in TypeScript\nDESCRIPTION: Defines the structure of the AuthorizationStatusWithDetails model with two optional fields: status and statusDetails. The status field is of type AuthorizationStatus, and statusDetails is of type AuthorizationStatusDetails.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/authorization-status-with-details.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nAuthorizationStatusWithDetails\n```\n\n----------------------------------------\n\nTITLE: Example BlikOneClickPaymentObject JSON Structure\nDESCRIPTION: Example JSON representation of the BlikOneClickPaymentObject showing the consumer_reference field. This object is used for BLIK one-click payment flows.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/blik-one-click-payment-object.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"consumer_reference\": \"consumer_reference0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Google Pay Decrypted Token Data Example JSON Structure\nDESCRIPTION: An example JSON representation of the GooglePayDecryptedTokenData structure that shows the format of data shared by Google with merchants for PayPal processing. The example includes all possible fields including message_id, message_expiration, payment_method, card details, authentication_method, cryptogram, and eci_indicator.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/google-pay-decrypted-token-data.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message_id\": \"message_id4\",\n  \"message_expiration\": \"message_expiration8\",\n  \"payment_method\": \"CARD\",\n  \"card\": {\n    \"name\": \"name6\",\n    \"number\": \"number6\",\n    \"expiry\": \"expiry4\",\n    \"last_digits\": \"last_digits0\",\n    \"type\": \"UNKNOWN\"\n  },\n  \"authentication_method\": \"PAN_ONLY\",\n  \"cryptogram\": \"cryptogram0\",\n  \"eci_indicator\": \"eci_indicator4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example VenmoWalletAdditionalAttributes JSON Structure\nDESCRIPTION: Example JSON structure showing the format of VenmoWalletAdditionalAttributes, including customer details and vault configuration. Contains customer ID, email address, and various vault-related settings such as storage preferences and usage patterns.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-wallet-additional-attributes.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"customer\": {\n    \"id\": \"id0\",\n    \"email_address\": \"email_address2\"\n  },\n  \"vault\": {\n    \"store_in_vault\": \"ON_SUCCESS\",\n    \"description\": \"description6\",\n    \"usage_pattern\": \"THRESHOLD_PREPAID\",\n    \"usage_type\": \"MERCHANT\",\n    \"customer_type\": \"CONSUMER\",\n    \"permit_multiple_payment_tokens\": false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON for AuthorizationStatusWithDetails\nDESCRIPTION: Provides an example of the AuthorizationStatusWithDetails model in JSON format. It shows a voided authorization with a status detail indicating pending review.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/authorization-status-with-details.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"VOIDED\",\n  \"status_details\": {\n    \"reason\": \"PENDING_REVIEW\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON for SupplementaryData\nDESCRIPTION: This JSON example demonstrates the structure of a SupplementaryData object, including Level 2 and Level 3 card data, as well as risk-related customer information. It shows how the data would be formatted when sent or received via API.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/supplementary-data.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"card\": {\n    \"level_2\": {\n      \"invoice_id\": \"invoice_id4\",\n      \"tax_total\": {\n        \"currency_code\": \"currency_code4\",\n        \"value\": \"value0\"\n      }\n    },\n    \"level_3\": {\n      \"shipping_amount\": {\n        \"currency_code\": \"currency_code0\",\n        \"value\": \"value6\"\n      },\n      \"duty_amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value2\"\n      },\n      \"discount_amount\": {\n        \"currency_code\": \"currency_code2\",\n        \"value\": \"value8\"\n      },\n      \"shipping_address\": {\n        \"address_line_1\": \"address_line_10\",\n        \"address_line_2\": \"address_line_20\",\n        \"admin_area_2\": \"admin_area_24\",\n        \"admin_area_1\": \"admin_area_16\",\n        \"postal_code\": \"postal_code2\",\n        \"country_code\": \"country_code0\"\n      },\n      \"ships_from_postal_code\": \"ships_from_postal_code4\"\n    }\n  },\n  \"risk\": {\n    \"customer\": {\n      \"ip_address\": \"ip_address0\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VaultStatus Enumeration for PayPal TypeScript Server SDK\nDESCRIPTION: Enumerates the possible vault statuses for payment sources in PayPal's system. It includes 'Vaulted' for successfully saved sources, 'Created' (deprecated) for older integration patterns, and 'Approved' for customer-approved sources pending final vault storage.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-status.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Vault Status\n\nThe vault status.\n\n## Enumeration\n\n`VaultStatus`\n\n## Fields\n\n| Name | Description |\n|  --- | --- |\n| `Vaulted` | The payment source has been saved in your customer's vault. This vault status reflects `/v3/vault` status. |\n| `Created` | DEPRECATED. The payment source has been saved in your customer's vault. This status applies to deprecated integration patterns and will not be returned for v3/vault integrations. |\n| `Approved` | Customer has approved the action of saving the specified payment_source into their vault. Use v3/vault/payment-tokens with given setup_token to save the payment source in the vault |\n```\n\n----------------------------------------\n\nTITLE: Defining DisputeCategory Enum in TypeScript\nDESCRIPTION: Enumeration defining possible dispute categories for PayPal transactions. Includes ItemNotReceived for cases where items weren't delivered and UnauthorizedTransaction for unauthorized payments.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/dispute-category.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum DisputeCategory {\n  ItemNotReceived,\n  UnauthorizedTransaction\n}\n```\n\n----------------------------------------\n\nTITLE: Example BillingCycle JSON\nDESCRIPTION: This JSON example illustrates a sample BillingCycle object with various fields populated. It demonstrates how the BillingCycle structure is represented in JSON format, including nested objects for pricing scheme and frequency.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/billing-cycle.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tenure_type\": \"REGULAR\",\n  \"total_cycles\": 1,\n  \"sequence\": 1,\n  \"pricing_scheme\": {\n    \"price\": {\n      \"currency_code\": \"currency_code8\",\n      \"value\": \"value4\"\n    },\n    \"pricing_model\": \"AUTO_RELOAD\",\n    \"reload_threshold_amount\": {\n      \"currency_code\": \"currency_code0\",\n      \"value\": \"value6\"\n    }\n  },\n  \"frequency\": {\n    \"key1\": \"val1\",\n    \"key2\": \"val2\"\n  },\n  \"start_date\": \"start_date0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Response for GooglePayWalletResponse\nDESCRIPTION: This JSON example illustrates a sample response for the GooglePayWalletResponse structure. It includes values for name, email address, phone number with country code, and card details including billing address.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/google-pay-wallet-response.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name0\",\n  \"email_address\": \"email_address2\",\n  \"phone_number\": {\n    \"country_code\": \"country_code2\",\n    \"national_number\": \"national_number6\"\n  },\n  \"card\": {\n    \"name\": \"name6\",\n    \"last_digits\": \"last_digits0\",\n    \"type\": \"UNKNOWN\",\n    \"brand\": \"RUPAY\",\n    \"billing_address\": {\n      \"address_line_1\": \"address_line_12\",\n      \"address_line_2\": \"address_line_28\",\n      \"admin_area_2\": \"admin_area_28\",\n      \"admin_area_1\": \"admin_area_14\",\n      \"postal_code\": \"postal_code0\",\n      \"country_code\": \"country_code8\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ThreeDSecureCardAuthenticationResponse Structure in JSON\nDESCRIPTION: This JSON snippet illustrates the structure of the ThreeDSecureCardAuthenticationResponse object. It includes example values for authentication_status, enrollment_status, and authentication_id fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/three-d-secure-card-authentication-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"authentication_status\": \"D\",\n  \"enrollment_status\": \"U\",\n  \"authentication_id\": \"authentication_id2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of SellerPayableBreakdown\nDESCRIPTION: This JSON example illustrates the structure of a SellerPayableBreakdown object, showing how the various fields are populated with sample data.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/seller-payable-breakdown.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"gross_amount\": {\n    \"currency_code\": \"currency_code4\",\n    \"value\": \"value0\"\n  },\n  \"paypal_fee\": {\n    \"currency_code\": \"currency_code4\",\n    \"value\": \"value2\"\n  },\n  \"paypal_fee_in_receivable_currency\": {\n    \"currency_code\": \"currency_code2\",\n    \"value\": \"value8\"\n  },\n  \"net_amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value2\"\n  },\n  \"net_amount_in_receivable_currency\": {\n    \"currency_code\": \"currency_code8\",\n    \"value\": \"value4\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: TenureType Enum Definition - TypeScript\nDESCRIPTION: Enumeration that defines the possible tenure types for PayPal billing cycles. Includes Regular for standard recurring charges and Trial for free or discounted initial periods. Trial periods may or may not include a price object depending on whether they are free or discounted.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/tenure-type.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum TenureType {\n    Regular = \"Regular\",\n    Trial = \"Trial\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OAuth Provider Error Enumeration in TypeScript\nDESCRIPTION: Defines an enumeration called OAuthProviderError that contains standard OAuth 2.0 error codes. Each error code represents a specific authentication or authorization failure scenario with detailed descriptions of what triggers each error.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/o-auth-provider-error-1.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum OAuthProviderError {\n    InvalidRequest,      // Missing required parameter or malformed request\n    InvalidClient,       // Client authentication failure\n    InvalidGrant,        // Invalid/expired authorization grant or refresh token\n    UnauthorizedClient,  // Client not authorized for grant type\n    UnsupportedGrantType,// Grant type not supported by auth server\n    InvalidScope         // Invalid or excessive scope request\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON for VaultVenmoExperienceContext\nDESCRIPTION: This JSON example demonstrates how to structure the VaultVenmoExperienceContext object with sample values for each field.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-venmo-experience-context.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"shipping_preference\": \"GET_FROM_FILE\",\n  \"vault_instruction\": \"ON_CREATE_PAYMENT_TOKENS\",\n  \"brand_name\": \"brand_name0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CardBrand Enumeration in PayPal TypeScript Server SDK\nDESCRIPTION: This enumeration lists different card brands and networks supported by the PayPal TypeScript Server SDK. It includes popular card types like Visa, Mastercard, Discover, as well as less common ones like Solo, Cetelem, and Eftpos. Each entry is accompanied by a brief description of the card type.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-brand.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Card Brand\n\nThe card network or brand. Applies to credit, debit, gift, and payment cards.\n\n## Enumeration\n\n`CardBrand`\n\n## Fields\n\n| Name | Description |\n|  --- | --- |\n| `Visa` | Visa card. |\n| `Mastercard` | Mastecard card. |\n| `Discover` | Discover card. |\n| `Amex` | American Express card. |\n| `Solo` | Solo debit card. |\n| `Jcb` | Japan Credit Bureau card. |\n| `Star` | Military Star card. |\n| `Delta` | Delta Airlines card. |\n| `Switch` | Switch credit card. |\n| `Maestro` | Maestro credit card. |\n| `CbNationale` | Carte Bancaire (CB) credit card. |\n| `Configoga` | Configoga credit card. |\n| `Confidis` | Confidis credit card. |\n| `Electron` | Visa Electron credit card. |\n| `Cetelem` | Cetelem credit card. |\n| `ChinaUnionPay` | China union pay credit card. |\n| `Diners` | The Diners Club International banking and payment services capability network owned by Discover Financial Services (DFS), one of the most recognized brands in US financial services. |\n| `Elo` | The Brazilian Elo card payment network. |\n| `Hiper` | The Hiper - Ingenico ePayment network. |\n| `Hipercard` | The Brazilian Hipercard payment network that's widely accepted in the retail market. |\n| `Rupay` | The RuPay payment network. |\n| `Ge` | The GE Credit Union 3Point card payment network. |\n| `Synchrony` | The Synchrony Financial (SYF) payment network. |\n| `Eftpos` | The Electronic Fund Transfer At Point of Sale(EFTPOS) Debit card payment network. |\n| `Unknown` | UNKNOWN payment network. |\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of ShippingOption\nDESCRIPTION: Provides a JSON example of the ShippingOption model, showcasing how the fields are structured and populated in a typical use case.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipping-option.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id4\",\n  \"label\": \"label4\",\n  \"type\": \"SHIPPING\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  },\n  \"selected\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoreInVaultInstruction Enum Fields in PayPal TypeScript SDK\nDESCRIPTION: Enumerates the possible values for controlling when a payment source should be stored in PayPal's vault. Currently defines OnSuccess option which stores the payment source after a successful authorization or capture.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/store-in-vault-instruction.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Description |\n|  --- | --- |\n| `OnSuccess` | Defines that the payment_source will be vaulted only when at least one authorization or capture using that payment_source is successful. |\n```\n\n----------------------------------------\n\nTITLE: Defining PaypalPaymentTokenCustomerType Enumeration in TypeScript\nDESCRIPTION: This enumeration defines two customer types for PayPal payment tokens: 'Consumer' for individual customers and 'Business' for business entities on the merchant or platform.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-payment-token-customer-type.md#2025-04-23_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nenum PaypalPaymentTokenCustomerType {\n  Consumer = 'Consumer',\n  Business = 'Business'\n}\n```\n\n----------------------------------------\n\nTITLE: Example PaymentsProcessorResponse JSON Structure\nDESCRIPTION: This snippet demonstrates the JSON structure of a PaymentsProcessorResponse object. It includes fields for AVS code, CVV code, response code, and payment advice code, which are typically returned by payment processors for credit card transactions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payments-processor-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"avs_code\": \"A\",\n  \"cvv_code\": \"E\",\n  \"response_code\": \"5150\",\n  \"payment_advice_code\": \"01\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of OrderTrackerItem\nDESCRIPTION: This JSON snippet demonstrates an example of the OrderTrackerItem structure with sample values for its fields. It shows how the data would be formatted when used in API requests or responses.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-tracker-item.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name6\",\n  \"quantity\": \"quantity2\",\n  \"sku\": \"sku2\",\n  \"url\": \"url0\",\n  \"image_url\": \"image_url2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example SetupTokenResponse JSON Representation\nDESCRIPTION: Provides a sample JSON representation of the SetupTokenResponse model. It includes example values for all fields, demonstrating the structure and potential data for a setup token response.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/setup-token-response.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"CREATED\",\n  \"id\": \"id6\",\n  \"customer\": {\n    \"id\": \"id0\",\n    \"merchant_customer_id\": \"merchant_customer_id2\"\n  },\n  \"payment_source\": {\n    \"card\": {\n      \"name\": \"name6\",\n      \"last_digits\": \"last_digits0\",\n      \"brand\": \"RUPAY\",\n      \"expiry\": \"expiry4\",\n      \"billing_address\": {\n        \"address_line_1\": \"address_line_12\",\n        \"address_line_2\": \"address_line_28\",\n        \"admin_area_2\": \"admin_area_28\",\n        \"admin_area_1\": \"admin_area_14\",\n        \"postal_code\": \"postal_code0\",\n        \"country_code\": \"country_code8\"\n      }\n    },\n    \"paypal\": {\n      \"description\": \"description2\",\n      \"usage_pattern\": \"THRESHOLD_PREPAID\",\n      \"shipping\": {\n        \"name\": {\n          \"full_name\": \"full_name6\"\n        },\n        \"phone_number\": {\n          \"country_code\": \"country_code2\",\n          \"national_number\": \"national_number6\"\n        },\n        \"type\": \"SHIPPING\",\n        \"address\": {\n          \"address_line_1\": \"address_line_16\",\n          \"address_line_2\": \"address_line_26\",\n          \"admin_area_2\": \"admin_area_20\",\n          \"admin_area_1\": \"admin_area_12\",\n          \"postal_code\": \"postal_code8\",\n          \"country_code\": \"country_code6\"\n        }\n      },\n      \"permit_multiple_payment_tokens\": false,\n      \"usage_type\": \"MERCHANT\"\n    },\n    \"venmo\": {\n      \"description\": \"description6\",\n      \"usage_pattern\": \"UNSCHEDULED_PREPAID\",\n      \"shipping\": {\n        \"name\": {\n          \"full_name\": \"full_name6\"\n        },\n        \"phone_number\": {\n          \"country_code\": \"country_code2\",\n          \"national_number\": \"national_number6\"\n        },\n        \"type\": \"SHIPPING\",\n        \"address\": {\n          \"address_line_1\": \"address_line_16\",\n          \"address_line_2\": \"address_line_26\",\n          \"admin_area_2\": \"admin_area_20\",\n          \"admin_area_1\": \"admin_area_12\",\n          \"postal_code\": \"postal_code8\",\n          \"country_code\": \"country_code6\"\n        }\n      },\n      \"permit_multiple_payment_tokens\": false,\n      \"usage_type\": \"MERCHANT\"\n    }\n  },\n  \"links\": [\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: ItemCategory Enumeration Definition for PayPal TypeScript SDK\nDESCRIPTION: Defines the enumeration ItemCategory with three possible values: DigitalGoods for electronic items, PhysicalGoods for tangible items that can be shipped, and Donation for charitable contributions. Note that DigitalGoods is not supported for PayPal for Commerce Platform users.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/item-category.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum ItemCategory {\n    DigitalGoods,\n    PhysicalGoods,\n    Donation\n}\n```\n\n----------------------------------------\n\nTITLE: Card Type Enumeration Definition in TypeScript\nDESCRIPTION: Enumeration that defines the possible types of payment cards that can be processed. Includes credit, debit, prepaid, store, and unknown card types.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-type.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum CardType {\n  Credit = \"Credit\",\n  Debit = \"Debit\",\n  Prepaid = \"Prepaid\",\n  Store = \"Store\",\n  Unknown = \"Unknown\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Universal Product Code Structure in JSON\nDESCRIPTION: Illustrates the structure of the UniversalProductCode model with example values. The model includes a 'type' field for the UPC type and a 'code' field for the actual UPC number.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/universal-product-code.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"UPC-E\",\n  \"code\": \"code2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Billing Landing Page Option in PayPal Checkout\nDESCRIPTION: The Billing option redirects customers to a page where they enter credit card or debit card and other billing information required to complete the purchase.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-application-context-landing-page.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n`Billing`\n```\n\n----------------------------------------\n\nTITLE: Defining OrderTrackerResponse Model Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of the OrderTrackerResponse model with its fields and their types. It includes optional fields for tracker ID, status, items, links, and timestamps.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-tracker-response.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface OrderTrackerResponse {\n  id?: string;\n  status?: OrderTrackerStatus;\n  items?: OrderTrackerItem[];\n  links?: LinkDescription[];\n  createTime?: string;\n  updateTime?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Venmo Payment Token Usage Pattern Enumeration in Markdown\nDESCRIPTION: Enumerates the VenmoPaymentTokenUsagePattern with six different payment models. Each model is described with its specific payment timing, recurrence, amount variability, and frequency characteristics.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-payment-token-usage-pattern.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Venmo Payment Token Usage Pattern\n\nExpected business/pricing model for the billing agreement.\n\n## Enumeration\n\n`VenmoPaymentTokenUsagePattern`\n\n## Fields\n\n| Name | Description |\n|  --- | --- |\n| `Immediate` | On-demand instant payments – non-recurring, pre-paid, variable amount, variable frequency. |\n| `Deferred` | Pay after use, non-recurring post-paid, variable amount, irregular frequency. |\n| `RecurringPrepaid` | Pay upfront fixed or variable amount on a fixed date before the goods/service is delivered. |\n| `RecurringPostpaid` | Pay on a fixed date based on usage or consumption after the goods/service is delivered. |\n| `ThresholdPrepaid` | Charge payer when the set amount is reached or monthly billing cycle, whichever comes first, before the goods/service is delivered. |\n| `ThresholdPostpaid` | Charge payer when the set amount is reached or monthly billing cycle, whichever comes first, after the goods/service is delivered. |\n```\n\n----------------------------------------\n\nTITLE: Defining VaultTokenRequest Structure in JSON\nDESCRIPTION: This snippet demonstrates the structure of a VaultTokenRequest object in JSON format. It includes the required 'id' and 'type' fields with their respective values.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-token-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id8\",\n  \"type\": \"SETUP_TOKEN\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AuthorizationIncompleteReason Enum in TypeScript for PayPal SDK\nDESCRIPTION: This enum represents the possible reasons for an incomplete authorization status in PayPal transactions. It includes 'PendingReview' for manual review cases and 'DeclinedByRiskFraudFilters' for transactions failing risk filters set by the payee.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/authorization-incomplete-reason.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum AuthorizationIncompleteReason {\n  PendingReview = \"PendingReview\",\n  DeclinedByRiskFraudFilters = \"DeclinedByRiskFraudFilters\"\n}\n```\n\n----------------------------------------\n\nTITLE: CobrandedCard Model Structure in TypeScript\nDESCRIPTION: Defines the structure of the CobrandedCard model with its fields, types, and constraints. It includes optional fields for labels, payee information, and amount details.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/cobranded-card.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface CobrandedCard {\n  labels?: string[];\n  payee?: PayeeBase;\n  amount?: Money;\n}\n```\n\n----------------------------------------\n\nTITLE: Payment Advice Code Enumeration Definition in TypeScript\nDESCRIPTION: Enumeration of payment advice codes returned by card networks (Visa and Mastercard) for declined transactions. Each code represents a specific scenario and provides guidance on how to handle the declined payment.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-advice-code.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum PaymentAdviceCode {\n  PaymentAdvice01, // Mastercard: expired card account upgrade\n  PaymentAdvice02, // Mastercard: over credit limit, Visa: stop specific payment\n  PaymentAdvice03, // Mastercard: fraudulent account, Visa: stop all recurring payments\n  PaymentAdvice04, // Mastercard: token requirements not fulfilled\n  PaymentAdvice21, // Mastercard/Visa: cancel recurring payments\n  PaymentAdvice22, // Mastercard: merchant qualification issue\n  PaymentAdvice24, // Mastercard: retry after 1 hour\n  PaymentAdvice25, // Mastercard: retry after 24 hours\n  PaymentAdvice26, // Mastercard: retry after 2 days\n  PaymentAdvice27, // Mastercard: retry after 4 days\n  PaymentAdvice28, // Mastercard: retry after 6 days\n  PaymentAdvice29, // Mastercard: retry after 8 days\n  PaymentAdvice30, // Mastercard: retry after 10 days\n  PaymentAdvice40, // Mastercard: consumer non-reloadable prepaid card\n  PaymentAdvice43  // Mastercard: consumer multi-use virtual card number\n}\n```\n\n----------------------------------------\n\nTITLE: PayPal Reauthorize Request Example JSON\nDESCRIPTION: Example JSON structure for a PayPal reauthorization request. Shows the amount field with currency code and value properties. Used to reauthorize an existing payment authorization, with support for up to 115% of original amount in US regions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/reauthorize-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CardVerificationStatus Enumeration in TypeScript\nDESCRIPTION: An enumeration that represents the verification status of a card. It has two possible values: 'Verified' indicating the card has been verified, and 'Failed' indicating the card verification has failed.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-verification-status.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum CardVerificationStatus {\n  Verified, // Card has been verified\n  Failed    // Card verification has failed\n}\n```\n\n----------------------------------------\n\nTITLE: Example RiskSupplementaryData JSON Structure\nDESCRIPTION: This snippet demonstrates the JSON structure of the RiskSupplementaryData object. It includes a 'customer' field with an 'ip_address' property, representing profile information of the sender or receiver.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/risk-supplementary-data.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"customer\": {\n    \"ip_address\": \"ip_address0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: VenmoWalletResponse Type Definition\nDESCRIPTION: TypeScript interface definition showing the structure of VenmoWalletResponse with optional fields including email address, account ID, username, name, phone number, address, and attributes.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-wallet-response.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface VenmoWalletResponse {\n  emailAddress?: string;\n  accountId?: string;\n  userName?: string;\n  name?: Name;\n  phoneNumber?: PhoneNumber;\n  address?: Address;\n  attributes?: VenmoWalletAttributesResponse;\n}\n```\n\n----------------------------------------\n\nTITLE: MyBank Payment Object Example in JSON\nDESCRIPTION: Example JSON representation of a MyBank Payment Object showing the proper structure with sample values for name, country code, BIC (Business Identification Code), and the last characters of an IBAN.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/mybank-payment-object.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name4\",\n  \"country_code\": \"country_code4\",\n  \"bic\": \"bic6\",\n  \"iban_last_chars\": \"iban_last_chars2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VenmoPaymentTokenCustomerType Enumeration in TypeScript\nDESCRIPTION: This enumeration defines the possible customer types for Venmo payment tokens. It includes two options: Consumer for individual customers and Business for business customers on the merchant or platform.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-payment-token-customer-type.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum VenmoPaymentTokenCustomerType {\n  Consumer = 'Consumer',\n  Business = 'Business'\n}\n```\n\n----------------------------------------\n\nTITLE: Example Trustly Payment Request JSON Structure\nDESCRIPTION: Example JSON structure for a Trustly payment request showing required and optional fields. Includes name, country code, email, and experience context with preferences for shipping, URLs, and locale.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/trustly-payment-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name2\",\n  \"country_code\": \"country_code2\",\n  \"email\": \"email4\",\n  \"experience_context\": {\n    \"brand_name\": \"brand_name2\",\n    \"locale\": \"locale6\",\n    \"shipping_preference\": \"NO_SHIPPING\",\n    \"return_url\": \"return_url4\",\n    \"cancel_url\": \"cancel_url6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PayerBase Interface in TypeScript\nDESCRIPTION: Defines the PayerBase interface with optional fields for email address and payer ID. Includes detailed constraints for each field, such as length restrictions and regular expression patterns for validation.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payer-base.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PayerBase {\n  emailAddress?: string; // Constraints: Min length 3, Max length 254, with specific pattern\n  payerId?: string; // Constraints: Length 13, pattern ^[2-9A-HJ-NP-Z]{13}$\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PayPal Seller Protection Status Enum in TypeScript\nDESCRIPTION: Enumeration that defines the three possible states of seller protection for PayPal transactions: Eligible (full protection), PartiallyEligible (item not received protection only), and NotEligible (no protection).\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/seller-protection-status.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum SellerProtectionStatus {\n    Eligible,\n    PartiallyEligible,\n    NotEligible\n}\n```\n\n----------------------------------------\n\nTITLE: Example EPS Payment Object in JSON\nDESCRIPTION: A JSON example of the EpsPaymentObject structure showing the name, country_code, and bic fields populated with sample values. This represents how the object would appear when formatted as JSON in API responses or requests.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/eps-payment-object.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name6\",\n  \"country_code\": \"country_code6\",\n  \"bic\": \"bic8\"\n}\n```\n\n----------------------------------------\n\nTITLE: PayPal Payment Token Usage Type Enum Definition\nDESCRIPTION: Enumeration defining the possible usage types for PayPal payment tokens. Includes Merchant for direct merchant transactions and Platform for marketplace/channel transactions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-payment-token-usage-type.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum PaypalPaymentTokenUsageType {\n    Merchant,  // For direct merchant transactions\n    Platform  // For platform/marketplace transactions\n}\n```\n\n----------------------------------------\n\nTITLE: Error Details Object Example in PayPal TypeScript SDK\nDESCRIPTION: Example JSON structure showing the error details object with all possible fields including location, issue, field reference, value, HATEOAS links, and description. Demonstrates the format for client-side error responses.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/error-details.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"location\": \"body\",\n  \"issue\": \"issue8\",\n  \"field\": \"field0\",\n  \"value\": \"value8\",\n  \"links\": [\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    },\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    }\n  ],\n  \"description\": \"description4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example SofortPaymentRequest JSON Structure\nDESCRIPTION: This snippet demonstrates the JSON structure of a SofortPaymentRequest object. It includes the required 'name' and 'country_code' fields, as well as an optional 'experience_context' object with various customization parameters.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/sofort-payment-request.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name4\",\n  \"country_code\": \"country_code4\",\n  \"experience_context\": {\n    \"brand_name\": \"brand_name2\",\n    \"locale\": \"locale6\",\n    \"shipping_preference\": \"NO_SHIPPING\",\n    \"return_url\": \"return_url4\",\n    \"cancel_url\": \"cancel_url6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VaultInstructionAction Enumeration in TypeScript\nDESCRIPTION: This enumeration defines two possible actions for vault instructions: OnCreatePaymentTokens for vaulting after successful payment token creation, and OnPayerApproval for vaulting after successful payer authentication and approval.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-instruction-action.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum VaultInstructionAction {\n  OnCreatePaymentTokens = \"OnCreatePaymentTokens\",\n  OnPayerApproval = \"OnPayerApproval\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PhoneType Enumeration in TypeScript\nDESCRIPTION: Enumeration that represents different types of phone numbers in the PayPal system. Used for categorizing phone numbers when handling contact information.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/phone-type.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum PhoneType {\n  Fax,\n  Home,\n  Mobile,\n  Other,\n  Pager\n}\n```\n\n----------------------------------------\n\nTITLE: Example CustomError Object in JSON\nDESCRIPTION: A sample JSON representation of a CustomError object showing all possible fields including name, message, debug_id, error details, and HATEOAS links. This example demonstrates the expected structure when receiving error responses from the PayPal API.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/custom-error.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name4\",\n  \"message\": \"message4\",\n  \"debug_id\": \"debug_id0\",\n  \"details\": [\n    {\n      \"field\": \"field4\",\n      \"value\": \"value2\",\n      \"location\": \"location4\",\n      \"issue\": \"issue6\",\n      \"links\": [\n        {\n          \"href\": \"href6\",\n          \"rel\": \"rel0\",\n          \"method\": \"HEAD\"\n        },\n        {\n          \"href\": \"href6\",\n          \"rel\": \"rel0\",\n          \"method\": \"HEAD\"\n        }\n      ],\n      \"description\": \"description0\"\n    },\n    {\n      \"field\": \"field4\",\n      \"value\": \"value2\",\n      \"location\": \"location4\",\n      \"issue\": \"issue6\",\n      \"links\": [\n        {\n          \"href\": \"href6\",\n          \"rel\": \"rel0\",\n          \"method\": \"HEAD\"\n        },\n        {\n          \"href\": \"href6\",\n          \"rel\": \"rel0\",\n          \"method\": \"HEAD\"\n        }\n      ],\n      \"description\": \"description0\"\n    }\n  ],\n  \"links\": [\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    },\n    {\n      \"href\": \"href6\",\n      \"rel\": \"rel0\",\n      \"method\": \"HEAD\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example BlikPaymentObject in JSON\nDESCRIPTION: Demonstrates a sample BlikPaymentObject with all available fields populated. This includes name, country code, email, and one-click payment information.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/blik-payment-object.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name8\",\n  \"country_code\": \"country_code8\",\n  \"email\": \"email8\",\n  \"one_click\": {\n    \"consumer_reference\": \"consumer_reference2\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Name Structure in TypeScript for PayPal SDK\nDESCRIPTION: This code snippet defines the structure of the Name type in TypeScript. It includes two optional fields: givenName and surname, both of type string or undefined, with specific length constraints.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/name.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nName {\n  givenName?: string;\n  surname?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TaxIdType Enumeration in TypeScript\nDESCRIPTION: This enumeration defines the possible tax ID types for customers in Brazil. It includes BrCpf for individual tax IDs (typically 11 characters long) and BrCnpj for business tax IDs (typically 14 characters long).\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/tax-id-type.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum TaxIdType {\n  BrCpf = \"BrCpf\",\n  BrCnpj = \"BrCnpj\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example EpsPaymentRequest JSON Object\nDESCRIPTION: Provides an example of a valid JSON object for the EpsPaymentRequest model. It includes all required fields and an optional experienceContext.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/eps-payment-request.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name8\",\n  \"country_code\": \"country_code2\",\n  \"experience_context\": {\n    \"brand_name\": \"brand_name2\",\n    \"locale\": \"locale6\",\n    \"shipping_preference\": \"NO_SHIPPING\",\n    \"return_url\": \"return_url4\",\n    \"cancel_url\": \"cancel_url6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Order Update Callback Error Response in JSON\nDESCRIPTION: A JSON example of the OrderUpdateCallbackErrorResponseDetails structure showing how error details are formatted when returned from the API. It includes optional fields 'field' and 'value', along with the required 'issue' field.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-update-callback-error-response-details.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"field\": \"field8\",\n  \"value\": \"value6\",\n  \"issue\": \"issue0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON for OrderUpdateCallbackShippingAddress\nDESCRIPTION: A sample JSON representation of the OrderUpdateCallbackShippingAddress structure showing the format for address fields including administrative areas, postal code, and country code.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-update-callback-shipping-address.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"admin_area_2\": \"admin_area_26\",\n  \"admin_area_1\": \"admin_area_16\",\n  \"postal_code\": \"postal_code2\",\n  \"country_code\": \"country_code0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VenmoPaymentTokenUsageType Enumeration in TypeScript\nDESCRIPTION: This enumeration defines the possible usage types for Venmo payment tokens. It includes 'Merchant' for direct transactions with a merchant, and 'Platform' for transactions on a marketplace or multi-merchant platform.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-payment-token-usage-type.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum VenmoPaymentTokenUsageType {\n  Merchant,\n  Platform\n}\n```\n\n----------------------------------------\n\nTITLE: Example PaymentMethodPreference Structure in JSON\nDESCRIPTION: An example JSON representation of the PaymentMethodPreference structure showing default values for payee_preferred (UNRESTRICTED) and standard_entry_class_code (WEB).\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-method-preference.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"payee_preferred\": \"UNRESTRICTED\",\n  \"standard_entry_class_code\": \"WEB\"\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Carrier Codes and Descriptions\nDESCRIPTION: A table listing carrier codes as field names and their corresponding descriptions. This table includes over 200 carriers from various countries and regions, providing a comprehensive reference for shipping and logistics integration.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipment-carrier.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Fields\n\n| Name | Description |\n|  --- | --- |\n| `DpdRu` | DPD Russia. |\n| `BgBulgarianPost` | Bulgarian Posts. |\n| `KrKoreaPost` | Koreapost (www.koreapost.go.kr). |\n| `ZaCourierit` | Courier IT. |\n| `FrExapaq` | DPD France (formerly exapaq). |\n| `AreEmiratesPost` | Emirates Post. |\n| `Gac` | GAC. |\n| `Geis` | Geis CZ. |\n| `SfEx` | SF Express. |\n| `Pago` | Pago Logistics. |\n| `Myhermes` | MyHermes UK. |\n| `DiamondEurogistics` | Diamond Eurogistics Limited. |\n| `CorporatecouriersWebhook` | Corporate Couriers. |\n| `Bond` | Bond courier. |\n| `Omniparcel` | Omni Parcel. |\n| `SkPosta` | Slovenska pošta. |\n| `Purolator` | purolator. |\n| `FetchrWebhook` | Mena 360 (Fetchr). |\n| `Thedeliverygroup` | TDG – The Delivery Group. |\n| `CelloSquare` | Cello Square. |\n| `Tarrive` | TONDA GLOBAL. |\n| `Collivery` | MDS Collivery Pty (Ltd). |\n| `Mainfreight` | Mainfreight. |\n| `IndFirstflight` | First Flight Couriers. |\n| `Acsworldwide` | ACS Worldwide Express. |\n| `Amstan` | Amstan Logistics. |\n| `Okayparcel` | OkayParcel. |\n| `EnvialiaReference` | Envialia Reference. |\n| `SeurEs` | Seur Spain. |\n| `Continental` | Continental. |\n| `Fdsexpress` | FDSEXPRESS. |\n| `AmazonFbaSwiship` | Swiship UK. |\n| `Wyngs` | Wyngs. |\n| `DhlActiveTracing` | DHL Active Tracing. |\n| `Zyllem` | Zyllem. |\n| `Ruston` | Ruston. |\n| `Xpost` | Xpost.ph. |\n| `CorreosEs` | correos Express (www.correos.es). |\n| `DhlFr` | DHL France (www.dhl.com). |\n| `PanAsia` | Pan-Asia International. |\n| `BrtIt` | BRT couriers Italy (www.brt.it). |\n| `SreKorea` | SRE Korea (www.srekorea.co.kr). |\n| `Speedee` | Spee-Dee Delivery. |\n| `TntUk` | TNT UK Limited (www.tnt.com). |\n| `Venipak` | Venipak. |\n| `Shreenandancourier` | SHREE NANDAN COURIER. |\n| `Croshot` | Croshot. |\n| `NipostNg` | NIpost (www.nipost.gov.ng). |\n| `EpstGlbl` | ePost Global. |\n| `Newgistics` | Newgistics. |\n| `PostSlovenia` | Post of Slovenia. |\n| `JerseyPost` | Jersey Post. |\n| `Bombinoexp` | Bombino Express Pvt. |\n| `Wmg` | WMG Delivery. |\n| `XqExpress` | XQ Express. |\n| `Furdeco` | Furdeco. |\n| `LhtExpress` | LHT Express. |\n| `SouthAfricanPostOffice` | South African Post Office. |\n| `Spoton` | SPOTON Logistics Pvt Ltd. |\n| `Dimerco` | Dimerco Express Group. |\n| `CyprusPostCyp` | cyprus post. |\n| `Abcustom` | AB Custom Group. |\n| `IndDelivree` | deliverE. |\n| `CnBestexpress` | Best Express. |\n| `DxSftp` | DX (SFTP). |\n| `PickuppMys` | PICK UPP. |\n| `Fmx` | FMX. |\n| `Hellmann` | Hellmann Worldwide Logistics. |\n| `ShipItAsia` | Ship It Asia. |\n| `KerryEcommerce` | Kerry eCommerce. |\n| `Freterapido` | Frete Rapido. |\n| `PitneyBowes` | Pitney Bowes. |\n| `XpressenDk` | Xpressen courier. |\n| `SeurSpApi` | Spanish Seur API. |\n| `Deliveryontime` | DELIVERYONTIME LOGISTICS PVT LTD. |\n| `Jinsung` | JINSUNG TRADING. |\n| `TransKargo` | Trans Kargo Internasional. |\n| `SwishipDe` | Swiship DE. |\n| `IvoyWebhook` | Ivoy courier. |\n| `AirmeeWebhook` | Airmee couriers. |\n| `DhlBenelux` | dhl benelux. |\n| `Firstmile` | FirstMile. |\n| `FastwayIr` | Fastway Ireland. |\n| `HhExp` | Hua Han Logistics. |\n| `MysMypostOnline` | Mypostonline. |\n| `TntNl` | THT Netherland. |\n| `Tipsa` | TIPSA courier. |\n| `TaqbinMy` | TAQBIN Malaysia. |\n| `Kgmhub` | KGM Hub. |\n| `Intexpress` | Internet Express. |\n| `OverseExp` | Overseas Express. |\n| `Oneclick` | One click delivery services. |\n| `RoadrunnerFreight` | Roadbull Logistics. |\n| `GlsCrotia` | GLS Croatia. |\n| `MrwFtp` | MRW courier. |\n| `Bluex` | Blue Express. |\n| `Dylt` | Daylight Transport. |\n| `DpdIr` | DPD Ireland. |\n| `SinGlbl` | Sin Global Express. |\n| `TuffnellsReference` | Tuffnells Parcels Express- Reference. |\n| `Cjpacket` | CJ Packet. |\n| `Milkman` | Milkman courier. |\n| `Asigna` | ASIGNA courier. |\n| `Oneworldexpress` | One World Express. |\n| `RoyalMail` | RoyalShipments. |\n| `ViaExpress` | Viaxpress. |\n| `Tigfreight` | TIG Freight. |\n| `ZtoExpress` | ZTO Express. |\n| `TwoGo` | 2GO Courier. |\n| `Iml` | IML courier. |\n| `IntelValley` | Intel-Valley Supply chain (ShenZhen) Co. Ltd. |\n| `Efs` | EFS (E-commerce Fulfillment Service). |\n| `UkUkMail` | UK mail (ukmail.com). |\n| `Ram` | RAM courier. |\n| `Alliedexpress` | Allied Express. |\n| `ApcOvernight` | APC overnight (apc-overnight.com). |\n| `Shippit` | Shippit. |\n| `Tfm` | TFM Xpress. |\n| `MXpress` | M Xpress Sdn Bhd. |\n| `HdbBox` | Haidaibao (BOX). |\n| `ClevyLinks` | Clevy Links. |\n| `Ibeone` | Beone Logistics. |\n| `FiegeNl` | Fiege Netherlands. |\n| `KweGlobal` | KWE Global. |\n| `CtcExpress` | CTC Express. |\n| `Amazon` | Amazon Shipping. |\n| `MoreLink` | Morelink. |\n| `Jx` | JX courier. |\n| `EasyMail` | Easy Mail. |\n| `Aduiepyle` | A Duie Pyle. |\n| `GbPanther` | Panther. |\n| `Expresssale` | Expresssale. |\n| `SgDetrack` | Detrack. |\n| `TrunkrsWebhook` | Trunkrs courier. |\n| `Matdespatch` | Matdespatch. |\n| `Dicom` | GLS Logistic Systems Canada Ltd./Dicom. |\n| `Mbw` | MBW Courier Inc.. |\n| `KhmCambodiaPost` | Cambodia Post. |\n| `Sinotrans` | Sinotrans. |\n| `BrtItParcelid` | BRT Bartolini(Parcel ID). |\n| `DhlSupplyChain` | DHL Supply Chain APAC. |\n| `DhlPl` | DHL Poland. |\n| `Topyou` | TopYou. |\n| `Palexpress` | PAL Express Limited. |\n| `DhlSg` | dhl Singapore. |\n| `CnWedo` | WeDo Logistics. |\n| `Fulfillme` | Fulfillme. |\n| `DpdDelistrack` | DPD delistrack. |\n| `UpsReference` | UPS Reference. |\n| `Caribou` | Caribou. |\n| `LocusWebhook` | Locus courier. |\n| `Dsv` | DSV courier. |\n| `P2PTrc` | P2P TrakPak. |\n| `Directparcels` | Direct Parcels. |\n| `NovaPoshtaInt` | Nova Poshta (International). |\n| `FedexPoland` | FedEx® Poland Domestic. |\n| `CnJcex` | JCEX courier. |\n| `FarInternational` | FAR international. |\n| `Idexpress` | IDEX courier. |\n| `Gangbao` | GANGBAO Supplychain. |\n| `Neway` | Neway Transport. |\n| `PostnlInt3S` | PostNL International. |\n| `RpxId` | RPX Indonesia. |\n| `DesignertransportWebhook` | Designer Transport. |\n| `GlsSloven` | GLS Slovenia. |\n| `ParcelledIn` | Parcelled.in. |\n| `GsiExpress` | GSI EXPRESS. |\n| `ConWay` | Con-way Freight. |\n| `BrouwerTransport` | Brouwer Transport en Logistiek. |\n| `Cpex` | Captain Express International. |\n| `IsraelPost` | Israel Post. |\n| `DtdcIn` | DTDC India. |\n| `PttPost` | PTT Post. |\n| `XdeWebhook` | Ximex Delivery Express. |\n| `Tolos` | Tolos courier. |\n| `GiaoHang` | Giao hàng nhanh. |\n| `GeodisEspace` | Geodis E-space. |\n| `MagyarHu` | Magyar Post. |\n| `DoordashWebhook` | DoorDash. |\n| `TikiId` | Tiki shipment. |\n| `CjHkInternational` | CJ Logistics International(Hong Kong). |\n| `StarTrackExpress` | Star Track Express. |\n| `Helthjem` | Helthjem. |\n| `Sfb2C` | SF International. |\n| `Freightquote` | Freightquote by C.H. Robinson. |\n| `LandmarkGlobalReference` | Landmark Global Reference. |\n| `Parcel2Go` | Parcel2Go. |\n| `Delnext` | Delnext. |\n| `Rcl` | Red Carpet Logistics. |\n| `CgsExpress` | CGS Express. |\n| `HkPost` | Hongkong Post (www.hongkongpost.hk). |\n| `SapExpress` | SAP EXPRESS. |\n| `ParcelpostSg` | Parcel Post Singapore. |\n| `Hermes` | HermesWorld UK. |\n| `IndSafeexpress` | Safexpress. |\n| `Tophatterexpress` | Tophatter Express. |\n| `Mglobal` | PT MGLOBAL LOGISTICS INDONESIA. |\n| `Averitt` | Averitt Express. |\n| `Leader` | leader. |\n| `_2Ebox` | 2ebox courier. |\n| `SgSpeedpost` | Singapore Speedpost. |\n| `DbschenkerSe` | DB Schenker (www.dbschenker.com). |\n| `IsrPostDomestic` | Israel Post Domestic. |\n| `Bestwayparcel` | Best Way Parcel. |\n| `AsendiaDe` | asendia_de. |\n| `NightlineUk` | nightline_uk. |\n| `TaqbinSg` | taqbin_sg. |\n| `TckExpress` | TCK Express. |\n| `EndeavourDelivery` | Endeavour Delivery. |\n| `Nanjingwoyuan` | Nanjing Woyuan. |\n| `HeppnerFr` | Heppner France. |\n| `EmpsCn` | EMPS Express. |\n| `Fonsen` | Fonsen Logistics. |\n| `Pickrr` | Pickrr. |\n| `ApcOvernightConnum` | APC Overnight Consignment. |\n| `StarTrackNextFlight` | Star Track Next Flight. |\n| `Dajin` | Shanghai Aqrum Chemical Logistics Co.Ltd. |\n| `UpsFreight` | UPS Freight. |\n| `PostaPlus` | Posta Plus. |\n| `Ceva` | CEVA LOGISTICS. |\n| `Anserx` | ANSERX courier. |\n| `JsExpress` | JS EXPRESS. |\n| `Padtf` | padtf.com. |\n| `UpsMailInnovations` | UPS Mail Innovations. |\n| `Sypost` | Sunyou Post. |\n| `AmazonShipMcf` | Amazon Shipping + Amazon MCF. |\n| `Yusen` | Yusen Logistics. |\n| `Bring` | Bring. |\n| `SdaIt` | SDA Italy. |\n| `Gba` | GBA Services Ltd. |\n| `Neweggexpress` | Newegg Express. |\n| `SpeedcouriersGr` | Speed Couriers. |\n| `Forrun` | forrun Pvt Ltd (Arpatech Venture). |\n| `Pickup` | Pickupp. |\n| `Ecms` | ECMS International Logistics Co.. |\n| `Intelipost` | Intelipost (TMS for LATAM). |\n| `Flashexpress` | Flash Express. |\n| `CnSto` | STO Express. |\n| `SekoSftp` | SEKO Worldwide. |\n| `HomeDeliverySolutions` | Home Delivery Solutions Ltd. |\n| `DpdHgry` | DPD Hungary. |\n| `KerryttcVn` | Kerry Express (Vietnam) Co Ltd. |\n| `JoyingBox` | Joying Box. |\n| `TotalExpress` | Total Express. |\n| `ZjsExpress` | ZJS International. |\n| `Starken` | STARKEN couriers. |\n| `Demandship` | DemandShip. |\n| `CnDpex` | DPEX. |\n| `AupostCn` | AuPost China. |\n| `Logisters` | Logisters. |\n| `Goglobalpost` | Global Post. |\n| `GlsCz` | GLS Czech Republic. |\n| `PaackWebhook` | Paack courier. |\n| `GrabWebhook` | Grab courier. |\n| `Parcelpoint` | Parcelpoint. |\n| `Icumulus` | iCumulus. |\n| `Daiglobaltrack` | DAI Post. |\n| `GlobalIparcel` | i-parcel. |\n| `YurticiKargo` | Yurtici Kargo. |\n| `CnPaypalPackage` | PayPal Package. |\n| `Parcel2Post` | Parcel To Post. |\n| `GlsIt` | GLS Italy. |\n| `PilLogistics` | PIL Logistics (China) Co.. |\n| `Heppner` | Heppner Internationale Spedition GmbH & Co.. |\n| `GeneralOvernight` | Go!Express and logistics. |\n| `Happy2Point` | Happy 2ThePoint. |\n| `Chitchats` | Chit Chats. |\n| `Smooth` | Smooth Couriers. |\n| `CleLogistics` | CL E-Logistics Solutions Limited. |\n| `Fiege` | Fiege Logistics. |\n| `MxCargo` | M&X cargo. |\n| `Ziingfinalmile` | Ziing Final Mile Inc. |\n| `DaytonFreight` | Dayton Freight. |\n| `Tcs` | TCS courier. |\n| `Aex` | AEX Group. |\n| `HermesDe` | Hermes Germany. |\n| `RoutificWebhook` | Routific. |\n| `Globavend` | Globavend. |\n```\n\n----------------------------------------\n\nTITLE: Example of AuthorizationStatusDetails object in JSON\nDESCRIPTION: A JSON example of the AuthorizationStatusDetails object showing the reason field set to PENDING_REVIEW, which indicates why an authorization status is PENDING.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/authorization-status-details.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"reason\": \"PENDING_REVIEW\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VaultExperienceContext Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of VaultExperienceContext, including its fields, types, and constraints. It represents the customization options for the Vault creation flow experience.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-experience-context.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface VaultExperienceContext {\n  brandName?: string; // Optional, min length 1, max length 300\n  locale?: string; // Optional, min length 2, max length 10\n  returnUrl?: string; // Optional, min length 1, max length 4000\n  cancelUrl?: string; // Optional, min length 1, max length 4000\n  shippingPreference?: OrderApplicationContextShippingPreference; // Optional, default GET_FROM_FILE\n  vaultInstruction?: VaultInstructionAction; // Optional, default ON_CREATE_PAYMENT_TOKENS\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SetupTokenCardExperienceContext Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of SetupTokenCardExperienceContext, including its fields, types, and constraints. It's used to customize the Vault creation flow experience for customers in the PayPal TypeScript Server SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/setup-token-card-experience-context.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SetupTokenCardExperienceContext {\n  brandName?: string; // Optional, min length 1, max length 300\n  locale?: string; // Optional, min length 2, max length 10\n  returnUrl?: string; // Optional, min length 1, max length 4000\n  cancelUrl?: string; // Optional, min length 1, max length 4000\n  vaultInstruction?: VaultInstructionAction; // Optional, default: VaultInstructionAction.OnCreatePaymentTokens\n}\n```\n\n----------------------------------------\n\nTITLE: Example Shipping Name JSON Structure\nDESCRIPTION: Demonstrates the JSON structure for a shipping name object with a full name property. The full_name field has a maximum length constraint of 300 characters.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipping-name.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"full_name\": \"full_name6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example LinkDescription Object in JSON\nDESCRIPTION: A JSON example of a LinkDescription object showing the required href and rel fields along with the optional method field. This example demonstrates how HATEOAS links are represented in PayPal API responses.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/link-description.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"href\": \"href2\",\n  \"rel\": \"rel6\",\n  \"method\": \"PUT\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example VaultExperienceContext JSON Object\nDESCRIPTION: This JSON example demonstrates how to structure a VaultExperienceContext object with sample values for each field. It includes optional fields and default values for shippingPreference and vaultInstruction.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-experience-context.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"shipping_preference\": \"GET_FROM_FILE\",\n  \"vault_instruction\": \"ON_CREATE_PAYMENT_TOKENS\",\n  \"brand_name\": \"brand_name0\",\n  \"locale\": \"locale4\",\n  \"return_url\": \"return_url2\",\n  \"cancel_url\": \"cancel_url4\"\n}\n```\n\n----------------------------------------\n\nTITLE: PayPal Wallet Customer JSON Example\nDESCRIPTION: Example JSON representation of a PayPal Wallet Customer object showing the structure with sample values for ID, email address, phone information with type, and merchant customer ID.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-customer.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id8\",\n  \"email_address\": \"email_address4\",\n  \"phone\": {\n    \"phone_type\": \"OTHER\",\n    \"phone_number\": {\n      \"national_number\": \"national_number6\"\n    }\n  },\n  \"merchant_customer_id\": \"merchant_customer_id0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Customer Object Structure Example in JSON\nDESCRIPTION: Example JSON representation of a Customer object showing the id and merchant_customer_id fields. The id is a PayPal-generated unique identifier, while merchant_customer_id is used to associate with merchant's existing customer records.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/customer.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id8\",\n  \"merchant_customer_id\": \"merchant_customer_id0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of LineItem for PayPal SDK\nDESCRIPTION: This JSON example illustrates how a LineItem object might be structured when used in the PayPal TypeScript Server SDK. It includes both required fields and some optional fields to demonstrate the structure.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/line-item.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name8\",\n  \"quantity\": \"quantity4\",\n  \"description\": \"description8\",\n  \"sku\": \"sku6\",\n  \"url\": \"url2\",\n  \"image_url\": \"image_url4\",\n  \"upc\": {\n    \"type\": \"UPC-B\",\n    \"code\": \"code0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CaptureStatus Enumeration in TypeScript for PayPal SDK\nDESCRIPTION: This enumeration defines the possible statuses of a captured payment in the PayPal system. It includes statuses such as Completed, Declined, PartiallyRefunded, Pending, Refunded, and Failed. Each status represents a different state of the payment capture process.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/capture-status.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum CaptureStatus {\n  Completed,\n  Declined,\n  PartiallyRefunded,\n  Pending,\n  Refunded,\n  Failed\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring VaultTokenRequestType Enumeration in TypeScript\nDESCRIPTION: This code snippet defines an enumeration called VaultTokenRequestType. It represents the tokenization method that generated the ID, with a single field 'SetupToken' representing a temporary reference to a payment source.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-token-request-type.md#2025-04-23_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nenum VaultTokenRequestType {\n  SetupToken = 'SetupToken'\n}\n```\n\n----------------------------------------\n\nTITLE: Exchange Rate Structure Example in JSON\nDESCRIPTION: A JSON example of the Exchange Rate structure showing the source currency, target currency, and value fields. This structure represents an exchange rate used to convert between different currencies.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/exchange-rate.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"source_currency\": \"source_currency0\",\n  \"target_currency\": \"target_currency2\",\n  \"value\": \"value2\"\n}\n```\n\n----------------------------------------\n\nTITLE: VaultResponseCustomer Type Structure Example\nDESCRIPTION: Example JSON structure showing the format of a VaultResponseCustomer response object. Includes the customer ID, merchant customer ID, and HATEOAS links array.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-response-customer.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id4\",\n  \"merchant_customer_id\": \"merchant_customer_id6\",\n  \"links\": [\n    {\n      \"key1\": \"val1\",\n      \"key2\": \"val2\"\n    },\n    {\n      \"key1\": \"val1\",\n      \"key2\": \"val2\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PaymentInitiator Enumeration Values in PayPal TypeScript SDK\nDESCRIPTION: This enum defines two possible values for payment initiation: 'Customer' for customer-initiated payments and 'Merchant' for merchant-initiated payments. This distinction affects how transactions are processed and what authorization requirements apply.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/payment-initiator.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Enumeration\n\n`PaymentInitiator`\n\n## Fields\n\n| Name | Description |\n|  --- | --- |\n| `Customer` | Payment is initiated with the active engagement of the customer. e.g. a customer checking out on a merchant website. |\n| `Merchant` | Payment is initiated by merchant on behalf of the customer without the active engagement of customer. e.g. a merchant charging the monthly payment of a subscription to the customer. |\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of VenmoWalletVaultAttributes\nDESCRIPTION: This snippet provides an example JSON representation of the VenmoWalletVaultAttributes resource, showcasing how the fields are structured and populated.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-wallet-vault-attributes.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"store_in_vault\": \"ON_SUCCESS\",\n  \"usage_type\": \"MERCHANT\",\n  \"customer_type\": \"CONSUMER\",\n  \"permit_multiple_payment_tokens\": false,\n  \"description\": \"description6\",\n  \"usage_pattern\": \"RECURRING_PREPAID\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of SupplementaryPurchaseData\nDESCRIPTION: This JSON example illustrates how the SupplementaryPurchaseData structure would be represented in a JSON format. It includes sample values for both the invoice_id and note_to_payer fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/supplementary-purchase-data.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"invoice_id\": \"invoice_id8\",\n  \"note_to_payer\": \"note_to_payer0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VaultVenmoExperienceContext Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of VaultVenmoExperienceContext, including its fields and their types. It specifies constraints for each field such as length requirements and pattern matching.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-venmo-experience-context.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nVaultVenmoExperienceContext {\n  brandName?: string; // Optional, min length 1, max length 300, pattern ^.*$\n  shippingPreference?: OrderApplicationContextShippingPreference; // Optional, default GET_FROM_FILE\n  vaultInstruction?: VaultInstructionAction; // Optional, default ON_CREATE_PAYMENT_TOKENS\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoredPaymentSourceUsageType Enumeration in TypeScript\nDESCRIPTION: This enumeration defines the possible usage types for stored payment sources. It includes 'First' for initial payments, 'Subsequent' for repeated use of a stored source, and 'Derived' for cases where PayPal determines the type automatically.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/stored-payment-source-usage-type.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nStoredPaymentSourceUsageType\n```\n\n----------------------------------------\n\nTITLE: VenmoWalletCustomerInformation Type Definition - TypeScript\nDESCRIPTION: TypeScript interface definition for VenmoWalletCustomerInformation with optional id and emailAddress fields. The id field has specific length and pattern constraints, while the emailAddress field follows email validation patterns.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/venmo-wallet-customer-information.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface VenmoWalletCustomerInformation {\n  id?: string; // min length: 1, max length: 22, pattern: ^[0-9a-zA-Z_-]+$\n  emailAddress?: string; // min length: 3, max length: 254\n}\n```\n\n----------------------------------------\n\nTITLE: Example RefundStatusDetails JSON Structure\nDESCRIPTION: An example of the RefundStatusDetails model in JSON format. It demonstrates the structure with a 'reason' field set to 'ECHECK', indicating the reason for a pending or failed refund status.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/refund-status-details.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"reason\": \"ECHECK\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VaultVenmoRequest Structure in TypeScript\nDESCRIPTION: This code snippet defines the structure of a VaultVenmoRequest object, including its fields and their types. It represents the data structure for creating a Venmo vault request in the PayPal TypeScript Server SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-venmo-request.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface VaultVenmoRequest {\n  description?: string;\n  usagePattern?: UsagePattern;\n  shipping?: VaultedDigitalWalletShippingDetails;\n  permitMultiplePaymentTokens?: boolean;\n  usageType?: PaypalPaymentTokenUsageType;\n  customerType?: PaypalPaymentTokenCustomerType;\n  experienceContext?: VaultVenmoExperienceContext;\n}\n```\n\n----------------------------------------\n\nTITLE: Example Related Identifiers JSON Structure\nDESCRIPTION: Example JSON representation of the RelatedIdentifiers structure showing the format for order, authorization, and capture IDs. Each identifier must follow specific constraints including length limitations and alphanumeric patterns.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/related-identifiers.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"order_id\": \"order_id0\",\n  \"authorization_id\": \"authorization_id8\",\n  \"capture_id\": \"capture_id8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining EnrollmentStatus Enumeration in TypeScript\nDESCRIPTION: The EnrollmentStatus enumeration defines the possible states of authentication eligibility in the 3-D Secure protocol. It includes values for enrolled banks, non-enrolled banks, unavailable authentication services, and authentication bypass scenarios.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/enrollment-status.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum EnrollmentStatus {\n  Enrolled,     // Yes. The bank is participating in 3-D Secure protocol and will return the ACSUrl.\n  NotEnrolled,  // No. The bank is not participating in 3-D Secure protocol.\n  Unavailable,  // Unavailable. The DS or ACS is not available for authentication at the time of the request.\n  Bypass        // Bypass. The merchant authentication rule is triggered to bypass authentication.\n}\n```\n\n----------------------------------------\n\nTITLE: PartialLoggingOptions Interface Type Definition - TypeScript\nDESCRIPTION: TypeScript interface defining logging configuration options for PayPal API calls. Includes properties for logger instance, log level settings, sensitive data masking, and HTTP request/response logging options.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/partial-logging-options.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PartialLoggingOptions {\n  logger?: LoggerInterface;  // Default: new ConsoleLogger()\n  logLevel?: LogLevel;        // Default: LogLevel.Info\n  maskSensitiveHeaders?: boolean;  // Default: true\n  logRequest?: PartialHttpRequestLoggingOptions;  // Default: {}\n  logResponse?: PartialHttpMessageLoggingOptions;  // Default: {}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TokenType Enum in TypeScript\nDESCRIPTION: Enumeration that defines the token type used for payment authorization. Currently documents the BillingAgreement token type which represents a PayPal billing agreement ID for approved recurring payments.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/token-type.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum TokenType {\n  BillingAgreement\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON for AssuranceDetails in PayPal SDK\nDESCRIPTION: This JSON example illustrates the structure of the AssuranceDetails object, showing default values for account verification and cardholder authentication fields. It demonstrates how the AssuranceDetails data would be represented in a PayPal API response or request.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/assurance-details.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"account_verified\": false,\n  \"card_holder_authenticated\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PaResStatus Enumeration for 3D Secure Authentication in TypeScript\nDESCRIPTION: This enumeration defines the possible outcomes of an issuer's authentication process in 3D Secure. It includes statuses for successful and failed authentications, challenges required, and informational responses.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/pa-res-status.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum PaResStatus {\n  SuccessfulAuthentication,\n  FailedAuthentication,\n  UnableToCompleteAuthentication,\n  SuccessfulAttemptsTransaction,\n  ChallengeRequired,\n  AuthenticationRejected,\n  DecoupledAuthentication,\n  InformationalOnly\n}\n```\n\n----------------------------------------\n\nTITLE: Representing Card Authentication Response in JSON\nDESCRIPTION: This JSON example illustrates the structure of a CardAuthenticationResponse object. It includes a three_d_secure field with authentication_status, enrollment_status, and authentication_id properties.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-authentication-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"three_d_secure\": {\n    \"authentication_status\": \"C\",\n    \"enrollment_status\": \"Y\",\n    \"authentication_id\": \"authentication_id6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PaypalWalletContextShippingPreference Enumeration in TypeScript\nDESCRIPTION: This enumeration defines three shipping preference options for PayPal wallet transactions: GetFromFile to use the customer-provided address, NoShipping to remove shipping address information, and SetProvidedAddress to use the merchant-provided address.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-context-shipping-preference.md#2025-04-23_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nenum PaypalWalletContextShippingPreference {\n  GetFromFile,\n  NoShipping,\n  SetProvidedAddress\n}\n```\n\n----------------------------------------\n\nTITLE: Order Update Error Response Example in JSON\nDESCRIPTION: Example JSON structure showing an order update error response with error name, message and details array. The details array contains multiple entries with field, value and issue properties.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-update-callback-error-response.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name2\",\n  \"message\": \"message8\",\n  \"details\": [\n    {\n      \"field\": \"field4\",\n      \"value\": \"value2\",\n      \"issue\": \"issue6\"\n    },\n    {\n      \"field\": \"field4\",\n      \"value\": \"value2\",\n      \"issue\": \"issue6\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ShipmentCarrier Enumeration in TypeScript\nDESCRIPTION: Declaration of the ShipmentCarrier enumeration used to represent different shipment carriers. This enumeration is part of the PayPal TypeScript Server SDK and is used to specify the carrier for shipments.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipment-carrier.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nShipmentCarrier\n```\n\n----------------------------------------\n\nTITLE: PayPal Wallet Vault Status Enumeration Definition\nDESCRIPTION: Enumeration defining the possible states of a payment source in PayPal's vault system. Includes current v3/vault statuses (Vaulted), deprecated status (Created), and approval state (Approved) for pending vault operations.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-vault-status.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum PaypalWalletVaultStatus {\n  Vaulted,  // Payment source saved in customer's vault (v3/vault)\n  Created,  // DEPRECATED - Legacy vault status\n  Approved  // Customer approved saving payment source, pending v3/vault/payment-tokens creation\n}\n```\n\n----------------------------------------\n\nTITLE: Example ShippingOptionsPurchaseUnit JSON\nDESCRIPTION: This JSON example illustrates the structure of a ShippingOptionsPurchaseUnit object, including reference ID, amount with breakdown, and shipping options. It demonstrates how the data should be formatted when used in API requests or responses.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipping-options-purchase-unit.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"reference_id\": \"reference_id4\",\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\",\n    \"breakdown\": {\n      \"item_total\": {\n        \"currency_code\": \"currency_code0\",\n        \"value\": \"value6\"\n      },\n      \"shipping\": {\n        \"currency_code\": \"currency_code0\",\n        \"value\": \"value6\"\n      },\n      \"handling\": {\n        \"currency_code\": \"currency_code2\",\n        \"value\": \"value8\"\n      },\n      \"tax_total\": {\n        \"currency_code\": \"currency_code4\",\n        \"value\": \"value0\"\n      },\n      \"insurance\": {\n        \"currency_code\": \"currency_code2\",\n        \"value\": \"value8\"\n      }\n    }\n  },\n  \"shipping_options\": [\n    {\n      \"id\": \"id8\",\n      \"label\": \"label8\",\n      \"type\": \"PICKUP_IN_STORE\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"selected\": false\n    },\n    {\n      \"id\": \"id8\",\n      \"label\": \"label8\",\n      \"type\": \"PICKUP_IN_STORE\",\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      },\n      \"selected\": false\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Adding OAuth Token Update Callback in TypeScript\nDESCRIPTION: This code shows how to add a callback function that will be executed whenever the OAuth token is updated. It can be used to perform operations like saving the token to a database or file.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/auth/oauth-2-client-credentials-grant.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst client = new Client({\n  clientCredentialsAuthCredentials: {\n    oAuthClientId: 'OAuthClientId',\n    oAuthClientSecret: 'OAuthClientSecret',\n    oAuthOnTokenUpdate: (token: OAuthToken) => {\n      // Add the callback handler to perform operations like save to DB or file etc.\n      // It will be triggered whenever the token gets updated\n      saveTokenToDatabase(token);\n    }\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of Name Structure for PayPal SDK\nDESCRIPTION: This JSON example illustrates how the Name structure would be represented in a JSON format. It shows sample values for the given_name and surname fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/name.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"given_name\": \"given_name2\",\n  \"surname\": \"surname8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Courier and Shipping Services\nDESCRIPTION: A markdown table listing courier and shipping services with their corresponding identifiers. Each row contains a service identifier in backticks followed by the service name.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/shipment-carrier.md#2025-04-23_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n| `ParcelstarsWebhook` | Parcelstars. |\n| `DpdSkSftp` | DPD Slovakia. |\n| `Movianto` | Movianto. |\n| `OzepartsShipping` | Ozeparts Shipping. |\n| `Kargomkolay` | KargomKolay (CargoMini). |\n| `Trunkrs` | Trunkrs. |\n| `OmnirpsWebhook` | Omni Returns. |\n| `Chilexpress` | Chile Express. |\n| `TestingCourier` | Testing Courier. |\n| `JneApi` | JNE (API). |\n| `BjshomedeliveryFtp` | BJS Distribution, Storage & Couriers - FTP. |\n| `DexpressWebhook` | D Express. |\n| `UspsApi` | USPS API. |\n| `Transvirtual` | TransVirtual. |\n| `SolisticaApi` | solistica. |\n| `ChienventureWebhook` | Chienventure. |\n| `DpdUkSftp` | DPD UK. |\n| `InpostUk` | InPost. |\n| `Javit` | Javit. |\n| `ZtoDomestic` | ZTO Express China. |\n| `DhlGtApi` | DHL Global Forwarding Guatemala. |\n| `CevaTracking` | CEVA Package. |\n| `KomonExpress` | Komon Express. |\n| `EastwestcourierFtp` | East West Courier Pte Ltd. |\n| `Danniao` | Danniao. |\n| `Spectran` | Spectran. |\n| `DeliverIt` | Deliver-iT. |\n| `Relaiscolis` | Relais Colis. |\n| `GlsSpainApi` | GLS Spain. |\n| `Postplus` | PostPlus. |\n| `Airterra` | Airterra. |\n| `GioEcourierApi` | GIO Express Ecourier. |\n| `DpdChSftp` | DPD Switzerland. |\n| `FedexApi` | FedEx®. |\n| `Intersmarttrans` | INTERSMARTTRANS & SOLUTIONS SL. |\n| `HermesUkSftp` | Hermes UK. |\n| `ExelotFtp` | Exelot Ltd.. |\n| `DhlPaApi` | DHL GLOBAL FORWARDING PANAMÁ. |\n| `VirtransportSftp` | Vir Transport. |\n| `Worldnet` | Worldnet Logistics. |\n| `InstaboxWebhook` | Instabox. |\n| `Kng` | Keuhne + Nagel Global. |\n| `FlashexpressWebhook` | Flash Express. |\n| `MagyarPostaApi` | Magyar Posta. |\n| `WeshipApi` | WeShip. |\n| `OhiWebhook` | Ohi. |\n| `Mudita` | MUDITA. |\n| `BluedartApi` | Bluedart. |\n| `TCatApi` | T-cat. |\n| `Ads` | ADS Express. |\n| `HermesIt` | HR Parcel. |\n| `FitzmarkApi` | FitzMark. |\n| `PostiApi` | Posti API. |\n| `SmsaExpressWebhook` | SMSA Express. |\n| `TamergroupWebhook` | Tamer Logistics. |\n| `Livrapide` | Livrapide. |\n| `NipponExpress` | Nippon Express. |\n| `Bettertrucks` | Better Trucks. |\n| `Fan` | FAN COURIER EXPRESS. |\n| `PbUspsflatsFtp` | USPS Flats (Pitney Bowes). |\n| `Parcelright` | Parcel Right. |\n| `Ithinklogistics` | iThink Logistics. |\n| `KerryExpressThWebhook` | Kerry Logistics. |\n| `Ecoutier` | eCoutier. |\n| `Showl` | SENHONG INTERNATIONAL LOGISTICS. |\n| `BrtItApi` | BRT Bartolini API. |\n| `RixonhkApi` | Rixon Logistics. |\n| `DbschenkerApi` | DB Schenker. |\n| `Ilyanglogis` | Ilyang logistics. |\n| `MailBoxEtc` | Mail Boxes Etc.. |\n| `Weship` | WeShip. |\n| `DhlGlobalMailApi` | DHL eCommerce Solutions. |\n| `Activos24Api` | Activos24. |\n| `Atshealthcare` | ATS Healthcare. |\n| `Luwjistik` | Luwjistik. |\n| `GwWorld` | Gebrüder Weiss. |\n| `FairsendenApi` | fairsenden. |\n| `ServipWebhook` | SerVIP. |\n| `Swiship` | Swiship. |\n| `Tanet` | Transport Ambientales. |\n| `HotsinCargo` | SHENZHEN HOTSIN CARGO INT'L FORWARDING CO.,LTD. |\n| `Direx` | Direx. |\n| `Huantong` | HuanTong. |\n| `ImileApi` | iMile. |\n| `Auexpress` | Au Express. |\n| `Nytlogistics` | NYT SUPPLY CHAIN LOGISTICS Co.,LTD. |\n| `DsvReference` | DSV Futurewave. |\n| `NovofarmaWebhook` | Novofarma. |\n| `AitworldwideSftp` | AIT. |\n| `Shopolive` | Olive. |\n| `FnfZa` | Fast & Furious. |\n| `DhlEcommerceGc` | DHL eCommerce Greater China. |\n| `Fetchr` | Fetchr. |\n| `StarlinksApi` | Starlinks Global. |\n| `Yyexpress` | YYEXPRESS. |\n| `Servientrega` | Servientrega. |\n| `Hanjin` | HanJin. |\n| `SpanishSeurFtp` | Spanish Seur. |\n| `DxB2BConnum` | DX (B2B). |\n| `HelthjemApi` | Helthjem. |\n| `Inexpost` | Inexpost. |\n| `A2BBa` | A2B Express Logistics. |\n| `RhenusGroup` | Rhenus Logistics. |\n| `SberlogisticsRu` | Sber Logistics. |\n| `MalcaAmit` | Malca-Amit. |\n| `Ppl` | Professional Parcel Logistics. |\n| `OsmWorldwideSftp` | OSM Worldwide. |\n| `Acilogistix` | ACI Logistix. |\n| `Optimacourier` | Optima Courier. |\n| `NovaPoshtaApi` | Nova Poshta API. |\n| `Loggi` | Loggi. |\n| `Yifan` | YiFan Express. |\n| `Mydynalogic` | My DynaLogic. |\n| `Morninglobal` | Morning Global. |\n| `ConciseApi` | Concise. |\n| `Fxtran` | Falcon Express. |\n| `DeliveryourparcelZa` | Deliver Your Parcel. |\n| `Uparcel` | uParcel. |\n| `MobiBr` | Mobi Logistica. |\n| `LoginextWebhook` | T&W Delivery. |\n| `Ems` | EMS. |\n| `Speedy` | Speedy. |\n| `ZoomRed` | Zoom. |\n| `Navlungo` | Navlungo. |\n| `Castleparcels` | Castle Parcels. |\n| `Weee` | Weee. |\n| `Packaly` | Packaly. |\n| `Yunhuipost` | Yunhuipost. |\n| `Youparcel` | YouParcel. |\n| `Leman` | Leman. |\n| `Moovin` | Moovin. |\n| `UrbIt` | Urb-it. |\n| `Multientregapanama` | Multientrega. |\n| `Jusdasr` | Jusdasr. |\n| `Discountpost` | Discount Post. |\n| `RhenusUk` | Rhenus Logistics UK. |\n| `SwishipJp` | Swiship JP. |\n| `GlsUs` | GLS USA. |\n| `Smtl` | Southwestern Motor Transport. Inc. |\n| `Emega` | Discount Post Emega. |\n| `ExpressoneSv` | EXPRESSONE Slovenia. |\n| `Hepsijet` | hepsiJET. |\n| `Welivery` | Welivery. |\n| `Bringer` | Bringer Parcel Services. |\n| `Easyroutes` | EasyRoutes. |\n| `Mrw` | MRW. |\n| `Rpm` | RPM. |\n| `DpdPrt` | DPD Portugal. |\n| `GlsRomania` | GLS Romania. |\n| `Lmparcel` | LM Parcel. |\n| `Gtagsm` | GTA GSM. |\n| `Domino` | DOMINO. |\n| `Eshipper` | eShipper. |\n| `Transpak` | Transpak Inc.. |\n| `Xindus` | Xindus. |\n| `Aoyue` | Aoyue. |\n| `Easyparcel` | Easyparcel. |\n| `Expressone` | EXPRESSONE. |\n| `SendeoKargo` | Sendeo Kargo. |\n| `Speedaf` | Speedaf Express. |\n| `Etower` | eTower. |\n| `Gcx` | GC Express. |\n| `NinjavanVn` | Ninjavan Vietnam. |\n| `Allegro` | Allegro. |\n| `Jumppoint` | Jumppoint. |\n| `ShipglobalUs` | ShipGlobal. |\n| `Kinisi` | Kinisi Transport Pty Ltd. |\n| `Oakh` | Oakh Harbour Freight Lines. |\n| `Awest` | American West. |\n| `Barsan` | Barsan Global Lojistik. |\n| `Energologistic` | Energo Logistic. |\n| `Madrooex` | Madrooex. |\n| `Gobolt` | GoBolt. |\n| `SwissUniversalExpress` | Swiss Universal Express. |\n| `Iordirect` | IOR Direct Solutions. |\n| `Xmszm` | xmszm. |\n| `GlsHun` | GLS Hungary. |\n| `Sendy` | Sendy Express. |\n| `Braunsexpress` | Brauns Express. |\n| `Grandslamexpress` | Grand Slam Express. |\n| `Xgs` | XGS. |\n| `Otschile` | OTS. |\n| `PackUp` | Pack-Up. |\n| `Parcelstars` | Parcelstars. |\n| `Teamexpressllc` | Team Express Service LLC. |\n| `Asyadexpress` | Asyad Express. |\n| `Tdn` | TDN. |\n| `Earlybird` | Early Bird. |\n| `Cacesa` | Cacesa. |\n| `Parceljet` | Parceljet. |\n| `MngKargo` | MNG Kargo. |\n| `Superpackline` | Super Pac Line. |\n| `Speedx` | SpeedX. |\n| `Vesyl` | Vesyl. |\n| `Skyking` | Sky King. |\n| `Dirmensajeria` | DIR. |\n| `Netlogixgroup` | Netlogix. |\n| `Zyou` | ZYEX. |\n| `Jawar` | Jawar. |\n| `Agsystems` | Associate Global Systems. |\n| `Gps` | GPS. |\n| `PttKargo` | PTT Kargo. |\n| `Maergo` | Maergo. |\n| `Arihantcourier` | AICS. |\n| `Vtfe` | VicTas Freight Express. |\n| `Yunant` | Yunant. |\n| `Urbify` | Urbify. |\n| `PackMan` | pack-man. |\n| `Liefergrun` | LIEFERGRUN. |\n| `Obibox` | Obibox. |\n| `Paikeda` | Paikeda. |\n| `Scotty` | Scotty. |\n| `IntelcomCa` | Intelcom. |\n| `Swe` | swe. |\n| `Asendia` | Asendia Global. |\n| `DpdAt` | DPD Austria. |\n| `Relay` | Relay. |\n| `Ata` | ATA. |\n| `SkyexpressInternational` | SkyExpress Internationals. |\n| `SuratKargo` | Surat Kargo. |\n| `Sglink` | SG LINK. |\n| `Fleetopticsinc` | FleetOptics. |\n| `Shopline` | shopline. |\n| `Piggyship` | PIGGYSHIP. |\n| `Logoix` | LogoiX. |\n| `KolayGelsin` | Kolay Gelsin. |\n| `AssociatedCouriers` | Associated Couriers. |\n| `UpsChecker` | ups-checker. |\n| `Wineshipping` | Wineshipping. |\n| `Spedisci` | Spedisci online. |\n```\n\n----------------------------------------\n\nTITLE: Example RefundPlatformFee JSON Structure\nDESCRIPTION: Demonstrates the JSON structure of a RefundPlatformFee object. It includes an 'amount' field with 'currency_code' and 'value' properties.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/refund-platform-fee.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"amount\": {\n    \"currency_code\": \"currency_code6\",\n    \"value\": \"value0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: BinDetails Model Example JSON\nDESCRIPTION: Example JSON representation of the BinDetails model showing sample values for bin number, issuing bank, country code, and product types.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/bin-details.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"bin\": \"bin0\",\n  \"issuing_bank\": \"issuing_bank0\",\n  \"bin_country_code\": \"bin_country_code4\",\n  \"products\": [\n    \"products8\",\n    \"products9\",\n    \"products0\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing a Custom Logger with Winston for PayPal TypeScript Server SDK\nDESCRIPTION: Creates a WinstonLogger class that implements the LoggerInterface, allowing for custom logging functionality in the PayPal SDK. It initializes a Winston logger and implements the required log method that accepts a log level, message, and metadata parameters.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/logger-interface.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { LoggerInterface, LogLevel } from '../../../src';\nimport winston from 'winston';\n\nexport class WinstonLogger implements LoggerInterface {\n  private _logger: winston.Logger;\n  constructor() {\n    // Create the logger instance\n    const { createLogger, format, transports } = require('winston');\n    // Ignore log messages if they have { private: true }\n    this._logger = createLogger({\n      format: format.combine(\n        format.json()\n      ),\n      transports: [new transports.Console()]\n    });\n  }\n\n  public log(level: LogLevel, message: string, meta: Record<string, any>): void {\n    this._logger.log(level, message, meta);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PaypalExperienceLandingPage Enumeration in Markdown\nDESCRIPTION: Enumeration of landing page options for PayPal checkout experiences. It defines three possible values: Login, GuestCheckout, and NoPreference, each determining where customers are directed when they click PayPal Checkout.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-experience-landing-page.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Enumeration\n\n`PaypalExperienceLandingPage`\n\n## Fields\n\n| Name | Description |\n|  --- | --- |\n| `Login` | When the customer clicks PayPal Checkout, the customer is redirected to a page to log in to PayPal and approve the payment. |\n| `GuestCheckout` | When the customer clicks PayPal Checkout, the customer is redirected to a page to enter credit or debit card and other relevant billing information required to complete the purchase. This option has previously been also called as 'BILLING' |\n| `NoPreference` | When the customer clicks PayPal Checkout, the customer is redirected to either a page to log in to PayPal and approve the payment or to a page to enter credit or debit card and other relevant billing information required to complete the purchase, depending on their previous interaction with PayPal. |\n```\n\n----------------------------------------\n\nTITLE: Example RefundPaymentInstruction JSON Structure\nDESCRIPTION: Example JSON structure showing the format of a RefundPaymentInstruction object with platform fees. Each platform fee includes currency code and value properties.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/refund-payment-instruction.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"platform_fees\": [\n    {\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      }\n    },\n    {\n      \"amount\": {\n        \"currency_code\": \"currency_code6\",\n        \"value\": \"value0\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining BLIK Payment Request Structure in TypeScript\nDESCRIPTION: Describes the BlikPaymentRequest structure with its fields, types, and constraints. It includes details for name, country code, email, experience context, level 0 payment, and one-click payment options.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/blik-payment-request.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface BlikPaymentRequest {\n  name: string; // Full name, 3-300 characters\n  countryCode: string; // ISO 3166-1 code, 2 characters\n  email?: string; // Optional, 3-254 characters\n  experienceContext?: BlikExperienceContext;\n  level0?: BlikLevel0PaymentObject;\n  oneClick?: BlikOneClickPaymentRequest;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OrderApplicationContextUserAction Enumeration in TypeScript\nDESCRIPTION: An enumeration that defines two possible user action values for PayPal checkout flows. This enum is deprecated and developers should use the equivalent fields in payment_source.paypal.experience_context.user_action instead.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-application-context-user-action.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum OrderApplicationContextUserAction {\n  Continue, // For when final amount is unknown and customer needs redirection without payment processing\n  PayNow    // For when final amount is known and payment should be processed immediately\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PaypalWalletAccountVerificationStatus Enumeration in Markdown\nDESCRIPTION: This snippet defines the PaypalWalletAccountVerificationStatus enumeration with two possible values: Verified and Unverified. It includes a description of each status and what it means for the buyer's account.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/paypal-wallet-account-verification-status.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Paypal Wallet Account Verification Status\n\nThe account status indicates whether the buyer has verified the financial details associated with their PayPal account.\n\n## Enumeration\n\n`PaypalWalletAccountVerificationStatus`\n\n## Fields\n\n| Name | Description |\n|  --- | --- |\n| `Verified` | The buyer has completed the verification of the financial details associated with this PayPal account. For example: confirming their bank account. |\n| `Unverified` | The buyer has not completed the verification of the financial details associated with this PayPal account. For example: confirming their bank account. |\n```\n\n----------------------------------------\n\nTITLE: Example Card Customer Information JSON Structure\nDESCRIPTION: Example JSON structure showing the format for card customer information including ID, email address, phone details, and merchant customer ID. The phone information includes type and national number.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/card-customer-information.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"id0\",\n  \"email_address\": \"email_address2\",\n  \"phone\": {\n    \"phone_type\": \"OTHER\",\n    \"phone_number\": {\n      \"national_number\": \"national_number6\"\n    }\n  },\n  \"merchant_customer_id\": \"merchant_customer_id2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Representation of NetAmountBreakdownItem\nDESCRIPTION: Provides an example of how a NetAmountBreakdownItem object would be represented in JSON format. Includes sample values for all fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/net-amount-breakdown-item.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"payable_amount\": {\n    \"currency_code\": \"currency_code8\",\n    \"value\": \"value4\"\n  },\n  \"converted_amount\": {\n    \"currency_code\": \"currency_code0\",\n    \"value\": \"value6\"\n  },\n  \"exchange_rate\": {\n    \"source_currency\": \"source_currency4\",\n    \"target_currency\": \"target_currency6\",\n    \"value\": \"value6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying NoPreference Landing Page Option in PayPal Checkout\nDESCRIPTION: The NoPreference option redirects customers to either a login page or billing information page based on their previous interactions with PayPal.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-application-context-landing-page.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n`NoPreference`\n```\n\n----------------------------------------\n\nTITLE: Phone Structure Example in JSON\nDESCRIPTION: Example JSON structure showing the format of a phone number object with country code, national number, and extension number fields. Demonstrates the expected data format for phone number representation in the PayPal SDK.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/phone.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"country_code\": \"country_code8\",\n  \"national_number\": \"national_number2\",\n  \"extension_number\": \"extension_number2\"\n}\n```\n\n----------------------------------------\n\nTITLE: BlikExperienceContext JSON Example\nDESCRIPTION: Example JSON structure showing the BlikExperienceContext object with sample values for shipping preference, brand name, locale, return URL, and cancel URL fields.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/blik-experience-context.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"shipping_preference\": \"GET_FROM_FILE\",\n  \"brand_name\": \"brand_name0\",\n  \"locale\": \"locale4\",\n  \"return_url\": \"return_url2\",\n  \"cancel_url\": \"cancel_url4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example PhoneWithType Object in JSON\nDESCRIPTION: Demonstrates the structure of a PhoneWithType object in JSON format. It includes the phone_type field set to 'PAGER' and a phone_number object with a national_number field.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/phone-with-type.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"phone_type\": \"PAGER\",\n  \"phone_number\": {\n    \"national_number\": \"national_number6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OrderApplicationContextLandingPage Enumeration in TypeScript\nDESCRIPTION: This is an enumeration that defines three possible landing page types for PayPal checkout: Login, Billing, and NoPreference. Each option controls the page shown to customers when they click PayPal Checkout.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-application-context-landing-page.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`OrderApplicationContextLandingPage`\n```\n\n----------------------------------------\n\nTITLE: Defining UPC Type Enumeration in TypeScript for PayPal SDK\nDESCRIPTION: This code snippet defines an enumeration called 'UpcType' that represents different types of Universal Product Codes. It includes seven UPC formats commonly used for product identification in retail and commerce applications.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/upc-type.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum UpcType {\n  UpcA,\n  UpcB,\n  UpcC,\n  UpcD,\n  UpcE,\n  Upc2,\n  Upc5\n}\n```\n\n----------------------------------------\n\nTITLE: LiabilityShiftIndicator Enumeration Definition in PayPal TypeScript SDK\nDESCRIPTION: Defines the LiabilityShiftIndicator enumeration that represents the outcome of the issuer's authentication in PayPal transactions. It contains three possible values indicating where liability resides for a transaction.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/liability-shift-indicator.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Description |\n|  --- | --- |\n| `No` | Liability is with the merchant. |\n| `Possible` | Liability may shift to the card issuer. |\n| `Unknown` | The authentication system is not available. |\n```\n\n----------------------------------------\n\nTITLE: OrderTrackerStatus Enumeration in PayPal TypeScript Server SDK\nDESCRIPTION: An enumeration representing the possible statuses for an order tracker in the PayPal system. It includes 'Cancelled' for shipments that were cancelled and 'Shipped' for items that have been assigned a tracking number by the merchant.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-tracker-status.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum OrderTrackerStatus {\n  Cancelled, // The shipment was cancelled and the tracking number no longer applies.\n  Shipped // The merchant has assigned a tracking number to the items being shipped from the Order.\n}\n```\n\n----------------------------------------\n\nTITLE: Defining VaultCardVerificationMethod Enumeration in TypeScript\nDESCRIPTION: This enumeration defines two methods for card verification in the PayPal vault: ScaWhenRequired and ScaAlways. ScaWhenRequired applies strong customer authentication only when required by local regulations, while ScaAlways attempts to force strong authentication for all transactions where supported.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/vault-card-verification-method.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum VaultCardVerificationMethod {\n  ScaWhenRequired,\n  ScaAlways\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NetAmountBreakdownItem Structure in TypeScript\nDESCRIPTION: Defines the structure of NetAmountBreakdownItem with optional fields for payable amount, converted amount, and exchange rate. Each field is typed and references other model definitions.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/net-amount-breakdown-item.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nNetAmountBreakdownItem {\n  payableAmount?: Money;\n  convertedAmount?: Money;\n  exchangeRate?: ExchangeRate;\n}\n```\n\n----------------------------------------\n\nTITLE: Example CaptureStatusDetails Structure in JSON\nDESCRIPTION: This snippet demonstrates the JSON representation of a CaptureStatusDetails object. It shows how the 'reason' field is populated with a value from the CaptureIncompleteReason enum.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/capture-status-details.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"reason\": \"BUYER_COMPLAINT\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing PayPal Server SDK via NPM\nDESCRIPTION: Command to install the PayPal Server SDK package from npm registry.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @paypal/paypal-server-sdk@1.0.0\n```\n\n----------------------------------------\n\nTITLE: Specifying Login Landing Page Option in PayPal Checkout\nDESCRIPTION: The Login option redirects customers to a page where they log in to PayPal and approve the payment when they click PayPal Checkout.\nSOURCE: https://github.com/paypal/paypal-typescript-server-sdk/blob/main/doc/models/order-application-context-landing-page.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`Login`\n```"
  }
]
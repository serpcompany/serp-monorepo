[
  {
    "owner": "lorisleiva",
    "repo": "laravel-actions",
    "content": "TITLE: Implementing a Laravel Action Class\nDESCRIPTION: Sample implementation of a Laravel Action class that publishes an article. This action can be run as a standalone object, a controller, or an event listener with different execution paths defined by respective methods.\nSOURCE: https://github.com/lorisleiva/laravel-actions/blob/main/README.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nclass PublishANewArticle\n{\n    use AsAction;\n\n    public function handle(User $author, string $title, string $body): Article\n    {\n        return $author->articles()->create([\n            'title' => $title,\n            'body' => $body,\n        ]);\n    }\n\n    public function asController(Request $request): ArticleResource\n    {\n        $article = $this->handle(\n            $request->user(),\n            $request->get('title'),\n            $request->get('body'),\n        );\n\n        return new ArticleResource($article);\n    }\n\n    public function asListener(NewProductReleased $event): void\n    {\n        $this->handle(\n            $event->product->manager,\n            $event->product->name . ' Released!',\n            $event->product->description,\n        );\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Running a Laravel Action as an Object\nDESCRIPTION: Example of invoking a Laravel Action directly as an object using the static run method, which executes the action's handle method with the provided parameters.\nSOURCE: https://github.com/lorisleiva/laravel-actions/blob/main/README.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nPublishANewArticle::run($author, 'My title', 'My content');\n```\n\n----------------------------------------\n\nTITLE: Registering a Laravel Action as a Controller Route\nDESCRIPTION: Example of registering a Laravel Action as an invokable controller in a routes file, allowing it to be executed when the defined route is accessed.\nSOURCE: https://github.com/lorisleiva/laravel-actions/blob/main/README.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nRoute::post('articles', PublishANewArticle::class)->middleware('auth');\n```\n\n----------------------------------------\n\nTITLE: Registering a Laravel Action as an Event Listener\nDESCRIPTION: Example of registering a Laravel Action as an event listener, which will execute the action's asListener method when the specified event is dispatched.\nSOURCE: https://github.com/lorisleiva/laravel-actions/blob/main/README.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nEvent::listen(NewProductReleased::class, PublishANewArticle::class);\n```\n\n----------------------------------------\n\nTITLE: Dispatching an Event Handled by a Laravel Action Listener\nDESCRIPTION: Example of dispatching an event that will be handled by a Laravel Action registered as a listener for that event type.\nSOURCE: https://github.com/lorisleiva/laravel-actions/blob/main/README.md#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nevent(new NewProductReleased($manager, 'Product title', 'Product description'));\n```\n\n----------------------------------------\n\nTITLE: Installing Laravel Actions with Composer\nDESCRIPTION: Command to install the Laravel Actions package via Composer, adding it as a dependency to your Laravel project.\nSOURCE: https://github.com/lorisleiva/laravel-actions/blob/main/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require lorisleiva/laravel-actions\n```"
  }
]